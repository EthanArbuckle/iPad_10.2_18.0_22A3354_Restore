uint64_t sub_231371B40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  sub_231411A10();
  sub_2312CEA5C(v8, v8[3]);
  v4 = (void *)sub_2314119C8();
  v5 = sub_231400D68((void *)*MEMORY[0x24BDD2DC8], 1, 0, 0);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  v6 = sub_231371BF8(a1, v5);
  result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_231371BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_2312EDFDC(0, (unint64_t *)&qword_25415CF50, (uint64_t (*)(uint64_t))sub_2312DC608, (uint64_t (*)(void))sub_23130D2C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9760]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v22 - v10;
  sub_2313730FC();
  v23 = *(_QWORD *)(v12 - 8);
  v24 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  v22[0] = a1;
  LOBYTE(a2) = sub_231411A1C();
  sub_2312DC608();
  v25 = v15;
  sub_23130D2C0();
  if ((a2 & 1) != 0)
  {
    v16 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_231373254();
    v16 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v26 = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22[0], v4);
  v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v17, (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v18 + ((v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22[1];
  sub_2312DC608();
  sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2312CCC24((unint64_t *)&qword_25415CE80, (uint64_t (*)(uint64_t))sub_2313730FC, MEMORY[0x24BDB96C0]);
  v19 = v24;
  v20 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v19);
  return v20;
}

uint64_t sub_231371E8C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v43 = a2;
  v51 = a3;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415D020, (uint64_t (*)(uint64_t))sub_2312E804C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v42 - v5;
  v47 = sub_2314119E0();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231411A04();
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_231411A4C();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E804C(0);
  v44 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  v22 = sub_2313732BC();
  v53 = v23;
  v54 = v22;
  v24 = sub_231413570();
  v25 = (void *)sub_231413588();
  v26 = objc_msgSend(v25, sel_areAllRequirementsSatisfied);

  v27 = sub_2314119B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v21, 1, 1, v27);
  if ((v24 & 1) != 0 && v26)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v28 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v28, v12);
    *(_QWORD *)(swift_allocObject() + 16) = v43;
    v55 = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_231372520(a1, v54, v53, (uint64_t)v19);
    sub_23132E378((uint64_t)v21);
    sub_2312E8120((uint64_t)v19, (uint64_t)v21);
  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v29 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v29, v12);
    v30 = swift_allocObject();
    *(_BYTE *)(v30 + 16) = v24 & 1;
    *(_BYTE *)(v30 + 17) = v26;
    *(_QWORD *)(v30 + 24) = v43;
    v55 = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  (*(void (**)(char *, void *, uint64_t))(v9 + 16))(v48, a1, v42);
  v31 = (void *)sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v32 = sub_231411890();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x24BE474D0], v32);
  v36 = qword_25415B920;
  v37 = v31;
  if (v36 != -1)
    swift_once();
  if ((unint64_t)qword_254162E48 >> 62)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_25415DE98);
    sub_231412A90();
    sub_231414EFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231412A90();
    sub_23141507C();
    sub_2312D3C68(0, (unint64_t *)&qword_25415DE98);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v46, *MEMORY[0x24BE47910], v47);
  sub_2314119EC();

  sub_2312E8068((uint64_t)v21, (uint64_t)v19);
  sub_231413DD4();
  v38 = sub_231411A7C();
  v39 = MEMORY[0x24BE47A60];
  v40 = v51;
  v51[3] = v38;
  v40[4] = v39;
  sub_2312DFCA0(v40);
  sub_2313632EC();
  sub_231411A70();
  return sub_23132E378((uint64_t)v21);
}

uint64_t sub_231372458()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_231372520@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *);
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;

  v41 = a3;
  v40 = a2;
  v53 = a4;
  v54 = a1;
  sub_2312D4A68();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411F08();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231411890();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - v12;
  v39 = sub_23141234C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231412694();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  v48 = sub_231411908();
  v49 = v19;
  LODWORD(v50) = v20;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231412334();
  sub_231411374();
  sub_231412670();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, *MEMORY[0x24BE474D0], v8);
  v21 = (void *)sub_231411A28();
  v22 = v13;
  v23 = sub_231412688();
  v24 = *(void (**)(char *, char *))(v9 + 16);
  v26 = v25;
  v47 = v8;
  v24(v38, v13);
  sub_2312D6C64(v23, v26);
  v54 = v21;
  sub_231412A90();
  v27 = v53;
  v50 = v23;
  sub_231411974();
  sub_23141267C();
  sub_231412340();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v39);
  sub_231411968();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  *(_QWORD *)(inited + 32) = sub_231411AB8();
  *(_QWORD *)(inited + 40) = v29;
  sub_2312FBF6C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_231411998();
  v31 = v43;
  v30 = v44;
  v32 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, *MEMORY[0x24BE41980], v44);
  sub_231411EFC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
  sub_2314119A4();
  sub_23141195C();
  if (qword_25415B920 != -1)
    swift_once();
  v33 = sub_231412A90();
  v34 = sub_2313F4958(v33);
  swift_bridgeObjectRelease();
  sub_231403270(v34);
  swift_bridgeObjectRelease();
  sub_231411980();

  sub_2312D6CA8(v50, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v47);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v52);
  v35 = sub_2314119B0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 0, 1, v35);
}

uint64_t sub_231372B6C()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_231372CE8(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
  sub_2314146EC();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_231372E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_context;
  v4 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231372E98()
{
  return type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline();
}

uint64_t type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415B930;
  if (!qword_25415B930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231372EDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = sub_231411A4C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_231372F70()
{
  return swift_retain();
}

uint64_t sub_231372F84@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_231372FCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD68)
  {
    sub_2312DF79C(255, (unint64_t *)&qword_25415D530);
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD68);
  }
}

uint64_t sub_231373044@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_231371B40(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_231373094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DE00;
  if (!qword_25415DE00)
  {
    sub_2312EDFDC(255, &qword_25415DE08, (uint64_t (*)(uint64_t))sub_231372FCC, (uint64_t (*)(void))sub_2312DF7E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9E90], v1);
    atomic_store(result, (unint64_t *)&qword_25415DE00);
  }
  return result;
}

void sub_2313730FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CE88)
  {
    sub_2312DC608();
    sub_2312DF79C(255, (unint64_t *)&qword_25415D530);
    sub_23130D2C0();
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CE88);
  }
}

uint64_t sub_231373188()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313731F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_231411A4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_231371E8C((void *)(v1 + v4), *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

unint64_t sub_231373254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D228;
  if (!qword_25415D228)
  {
    sub_2312EDFDC(255, (unint64_t *)&qword_25415CF50, (uint64_t (*)(uint64_t))sub_2312DC608, (uint64_t (*)(void))sub_23130D2C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9760]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9770], v1);
    atomic_store(result, (unint64_t *)&qword_25415D228);
  }
  return result;
}

unint64_t sub_2313732BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  unint64_t v8;
  unint64_t v9;

  v0 = sub_231411644();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_231411A28();
  v5 = (void *)sub_2314118CC();

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_identifier);

    sub_23141162C();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v8 = 0xD000000000000027;
  v9 = 0x800000023142D390;
  sub_231414728();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_2313733F8()
{
  return swift_deallocObject();
}

uint64_t sub_231373408()
{
  return sub_231372B6C();
}

uint64_t sub_231373418()
{
  return swift_deallocObject();
}

uint64_t sub_231373428()
{
  return sub_231372458();
}

uint64_t sub_231373430()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_231373454()
{
  uint64_t v0;

  return sub_231372CE8(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for FavoritableObjectTypeDataSource()
{
  uint64_t result;

  result = qword_255ECEFD8;
  if (!qword_255ECEFD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231373498()
{
  return swift_initClassMetadata2();
}

void sub_2313734D4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231373500()
{
  sub_231412ED4();
  return swift_deallocClassInstance();
}

uint64_t sub_23137351C()
{
  return type metadata accessor for FavoritableObjectTypeDataSource();
}

id sub_231373614()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoCellNecessary();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoCellNecessary()
{
  return objc_opt_self();
}

uint64_t sub_231373678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5HeartP33_38C201FDECF4757A10F3783D1B8C5FB515NoCellNecessary_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t sub_2313736C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5HeartP33_38C201FDECF4757A10F3783D1B8C5FB515NoCellNecessary_item;
  swift_beginAccess();
  sub_2313737F0(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_231373720())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_231373768()
{
  return sub_2313737B0(&qword_255ECF058, (uint64_t)&unk_23141E338);
}

uint64_t sub_23137378C()
{
  return sub_2313737B0((unint64_t *)&unk_255ECF060, (uint64_t)&unk_23141E360);
}

uint64_t sub_2313737B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NoCellNecessary();
    result = MEMORY[0x2348DE248](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2313737F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23130E2CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_231373834()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart16HeartAppDelegate____lazy_storage___articleIdentifiersByUrl);
  if (!v1)
  {
    sub_231337384(MEMORY[0x24BEE4AF8]);
    JUMPOUT(0x231373960);
  }
  sub_231412A90();
  return v1;
}

uint64_t type metadata accessor for HeartAppDelegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HeartInternalSettingsViewController()
{
  uint64_t result;

  result = qword_255ECF080;
  if (!qword_255ECF080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231373B70()
{
  return swift_initClassMetadata2();
}

id sub_231373BAC()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_231373BCC(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 8 && a1 != 4)
    return 0;
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_231373C08()
{
  swift_getObjectType();
  return sub_231413318();
}

uint64_t sub_231373C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v6 = sub_231412DA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231412DB4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_231412D9C() & 0xFE) == 2)
  {
    type metadata accessor for AFibBurdenSharingDataTypeDetailConfigurationProvider();
    swift_initStackObject();
    sub_231314098((uint64_t)v13);
    v14 = sub_231412BB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
    v15 = swift_allocObject();
    v29 = v10;
    v16 = a3;
    v17 = v15;
    *(_BYTE *)(v15 + 16) = 0;
    v18 = (id)HKHRAFibBurdenLogForCategory();
    v28 = a2;
    v19 = v18;
    v20 = (void *)sub_231412D78();
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v19, v20);
    v27 = v11;
    v22 = v21;

    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v16;
    aBlock[4] = sub_23137B58C;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_231330294;
    aBlock[3] = &unk_250024F70;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_submitEvent_completion_, v17, v24);
    _Block_release(v24);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider();
    swift_allocObject();
    sub_231339B0C((uint64_t)v9);
    sub_231339D44((uint64_t)v13);
    v14 = sub_231412BB0();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
  }
  return v14;
}

void sub_231373EE0(int a1, id a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    v5 = a2;
    if (qword_25415C170 != -1)
      swift_once();
    v6 = sub_231413780();
    sub_2312CE3B8(v6, (uint64_t)qword_254162F00);
    v7 = a2;
    v8 = a2;
    oslog = sub_231413768();
    v9 = sub_231414974();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v18 = v11;
      v19 = a3;
      *(_DWORD *)v10 = 136446466;
      swift_getMetatypeMetadata();
      v12 = sub_2314146E0();
      v19 = sub_23133180C(v12, v13, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v19 = (uint64_t)a2;
      v14 = a2;
      sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
      v15 = sub_2314146E0();
      v19 = sub_23133180C(v15, v16, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, oslog, v9, "[%{public}s] Error when submitting analytics event: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_231374138()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for HeartInternalSettingsViewController());
  return sub_231374164();
}

uint64_t sub_231374164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  swift_getObjectType();
  v0 = sub_231411644();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2314129E8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231379128(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  v22 = xmmword_231416A30;
  *(_OWORD *)(v9 + 16) = xmmword_231416A30;
  *(_QWORD *)(v9 + 56) = v4;
  v10 = sub_2312F23F0((unint64_t *)&qword_255ECD440, 255, v5, MEMORY[0x24BE438A8]);
  *(_QWORD *)(v9 + 64) = v10;
  v11 = sub_2312DFCA0((uint64_t *)(v9 + 32));
  sub_231374550((uint64_t)v11);
  sub_2313749BC((uint64_t)v8);
  v13 = *(_QWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  if (v13 >= v12 >> 1)
    v9 = (uint64_t)sub_2312CDBB4((_QWORD *)(v12 > 1), v13 + 1, 1, (_QWORD *)v9);
  v24 = v4;
  v25 = v10;
  v14 = sub_2312DFCA0((uint64_t *)&v23);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v14, v8, v4);
  *(_QWORD *)(v9 + 16) = v13 + 1;
  sub_2312DFB68(&v23, v9 + 40 * v13 + 32);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314127F0();
  *(_OWORD *)(swift_allocObject() + 16) = v22;
  sub_231411638();
  sub_231411614();
  v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v3, v0);
  sub_2314127E4();
  *(_QWORD *)&v23 = 0x3C53447961727241;
  *((_QWORD *)&v23 + 1) = 0xE800000000000000;
  sub_231411638();
  sub_231411614();
  v15(v3, v0);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_23141237C();
  swift_allocObject();
  sub_231412370();
  sub_231412544();
  sub_231378F84();
  sub_2312F23F0((unint64_t *)&unk_255ECF210, 255, (uint64_t (*)(uint64_t))sub_231378F84, MEMORY[0x24BE428C8]);
  v16 = sub_231412568();
  swift_release();
  sub_231412B38();
  sub_231378FE0();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v22;
  v18 = sub_2312F23F0(&qword_255ECF228, 255, (uint64_t (*)(uint64_t))sub_231379048, MEMORY[0x24BE43020]);
  *(_QWORD *)(v17 + 32) = v16;
  *(_QWORD *)(v17 + 40) = v18;
  swift_retain();
  sub_231412B50();
  v19 = sub_231413348();
  swift_release();
  swift_release();
  return v19;
}

uint64_t sub_231374550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];

  v41 = a1;
  v1 = sub_231413264();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231412970();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_255ECB1C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v29 - v7;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF240, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v5);
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)&v29 - v9;
  v10 = sub_2314137D4();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2314137A4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_231413930();
  v30 = *(_QWORD *)(v17 - 8);
  v18 = v30;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413918();
  sub_231413924();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  sub_231411ADC();
  v22 = v21;
  v29 = sub_231411AD0();
  v42[3] = v17;
  v42[4] = MEMORY[0x24BEBC5F0];
  v23 = sub_2312DFCA0(v42);
  (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(v23, v20, v17);
  sub_2312D6DD8(0, &qword_255ECC500, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314137E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEBC058], v13);
  v24 = sub_2314137B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v31, 1, 1, v24);
  sub_2314137C8();
  sub_2314137BC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v25 = swift_allocObject();
  v26 = v29;
  *(_QWORD *)(v25 + 16) = v22;
  *(_QWORD *)(v25 + 24) = v26;
  v27 = sub_23141384C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v34, 1, 1, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x24BE43600], v37);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, *MEMORY[0x24BE44C60], v40);
  sub_2314129DC();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v20, v17);
}

uint64_t sub_2313749BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];

  v36 = a1;
  v1 = sub_231413264();
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231412970();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_255ECB1C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)&v26 - v7;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF240, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v5);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_2314137D4();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2314137A4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_231413930();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413918();
  sub_231413924();
  v37[3] = v18;
  v37[4] = MEMORY[0x24BEBC5F0];
  v22 = sub_2312DFCA0(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v22, v21, v18);
  sub_2312D6DD8(0, &qword_255ECC500, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314137E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEBC058], v14);
  v23 = sub_2314137B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_2314137C8();
  sub_2314137BC();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v24 = sub_23141384C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v29, 1, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, *MEMORY[0x24BE43600], v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x24BE44C60], v35);
  sub_2314129DC();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

id sub_231374DB8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for HeartInternalSettingsViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

void sub_231374E00(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a2);
  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController());
  swift_retain();
  sub_23137A2E8(v5, a3, 4, v6);
  v10 = v7;
  v8 = objc_msgSend(a1, sel_navigationController);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_pushViewController_animated_, v10, 1);

  }
}

uint64_t sub_231374EC8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  v2 = sub_231411644();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313790C4();
  v6 = swift_allocObject();
  v16 = xmmword_231416A30;
  *(_OWORD *)(v6 + 16) = xmmword_231416A30;
  sub_231379128(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v16;
  *(_QWORD *)(v7 + 56) = &type metadata for ViewSandboxCollectionViewItem;
  *(_QWORD *)(v7 + 64) = sub_231379194();
  *(_QWORD *)(v6 + 32) = v7;
  v17 = 0x3C53447961727241;
  v18 = 0xE800000000000000;
  sub_231411638();
  sub_231411614();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_23141237C();
  swift_allocObject();
  sub_231412388();
  sub_231412544();
  swift_release();
  sub_231378F84();
  sub_2312F23F0((unint64_t *)&unk_255ECF210, 255, (uint64_t (*)(uint64_t))sub_231378F84, MEMORY[0x24BE428C8]);
  v8 = sub_231412568();
  swift_release();
  sub_231412B38();
  sub_231378FE0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v16;
  v10 = sub_2312F23F0(&qword_255ECF228, 255, (uint64_t (*)(uint64_t))sub_231379048, MEMORY[0x24BE43020]);
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = v10;
  swift_retain();
  sub_231412B50();
  v11 = objc_allocWithZone((Class)sub_231413354());
  v12 = (void *)sub_231413348();
  v13 = objc_msgSend(a1, sel_navigationController);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_pushViewController_animated_, v12, 1);

  }
  return swift_release();
}

uint64_t sub_23137518C()
{
  type metadata accessor for ViewSandboxCollectionViewCell();
  sub_2312F23F0((unint64_t *)&qword_255ECF268, 255, (uint64_t (*)(uint64_t))type metadata accessor for ViewSandboxCollectionViewCell, (uint64_t)&unk_231425008);
  return sub_2314149EC();
}

void sub_2313751E4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_231375210(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_231375240()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeartInternalSettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231375274()
{
  return type metadata accessor for HeartInternalSettingsViewController();
}

uint64_t sub_23137527C(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

void sub_2313753A8(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t aBlock[6];

  ObjectType = swift_getObjectType();
  v3 = sub_2314114AC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  if (qword_25415DF98 != -1)
    swift_once();
  v10 = sub_231413780();
  sub_2312CE3B8(v10, (uint64_t)qword_254162FF0);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v32(v9, a1, v3);
  v11 = sub_231413768();
  v12 = sub_23141498C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v14 = v13;
    v29 = swift_slowAlloc();
    aBlock[0] = v29;
    *(_DWORD *)v14 = 136446722;
    v15 = sub_2314151A8();
    v28 = ObjectType;
    v33 = sub_23133180C(v15, v16, aBlock);
    v30 = a1;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v33 = sub_23133180C(0xD000000000000010, 0x800000023142D850, aBlock);
    sub_231414CBC();
    *(_WORD *)(v14 + 22) = 2082;
    v17 = sub_231411464();
    v33 = sub_23133180C(v17, v18, aBlock);
    a1 = v30;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    v19 = v9;
    v20 = v28;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    _os_log_impl(&dword_2312C8000, v11, v12, "[%{public}s.%{public}s] Attempting to navigate to: %{public}s", (uint8_t *)v14, 0x20u);
    v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v21, -1, -1);
    v22 = v14;
    v7 = v31;
    MEMORY[0x2348DE308](v22, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    v20 = ObjectType;
  }
  v23 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v24 = (void *)sub_231411488();
  v32(v7, a1, v3);
  v25 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v25, v7, v3);
  *(_QWORD *)(v26 + ((v5 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
  aBlock[4] = (uint64_t)sub_23137C404;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_231375AB8;
  aBlock[3] = (uint64_t)&unk_250025038;
  v27 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v23, sel_openURL_withCompletionHandler_, v24, v27);
  _Block_release(v27);

}

uint64_t sub_231375798(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;

  v13 = _Block_copy(aBlock);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a8(v16, a7, v14);

  return swift_release();
}

void sub_231375840(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2314114AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v8 = sub_231413780();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v9 = sub_231413768();
    v10 = sub_231414974();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18 = v12;
      *(_DWORD *)v11 = 136446722;
      v13 = sub_2314151A8();
      v17 = sub_23133180C(v13, v14, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2082;
      v17 = sub_23133180C(0xD000000000000010, 0x800000023142D850, &v18);
      sub_231414CBC();
      *(_WORD *)(v11 + 22) = 2082;
      v15 = sub_231411464();
      v17 = sub_23133180C(v15, v16, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_2312C8000, v9, v10, "[%{public}s.%{public}s] Failed to navigate to: %{public}s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v12, -1, -1);
      MEMORY[0x2348DE308](v11, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

  }
}

uint64_t sub_231375AB8(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_231375AF4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  id v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  char v28;
  id v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  char v35;
  void *v36;
  id v37;
  id v38;
  void (**v39)(id, _QWORD);
  void *v40;
  id v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  unsigned __int8 v55;
  id v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  void *ObjCClassFromMetadata;
  id v88;
  id v89;
  void *v90;
  char v91;
  void *v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  char *v126;
  void *v127;
  uint64_t v128;
  char *v129;
  uint64_t ObjectType;
  char *v131;
  char *v132;
  char *v133;
  void (**v134)(id, _QWORD);
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  ObjectType = swift_getObjectType();
  v6 = sub_231412DA8();
  v134 = *(void (***)(id, _QWORD))(v6 - 8);
  v135 = (void (*)(char *, uint64_t))v6;
  MEMORY[0x24BDAC7A8](v6);
  v133 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2314114AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v129 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v132 = (char *)&v123 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v131 = (char *)&v123 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v126 = (char *)&v123 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v123 - v18;
  v20 = (_QWORD *)sub_231411470();
  v21 = (id)HKHRCardioFitnessEventOnboardingDeepLink();
  sub_231411494();

  v22 = (_QWORD *)sub_231411470();
  v136 = v9;
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v19, v8);
  v24 = sub_2313970F4(v22, v20);
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_231376B6C(a1, (uint64_t)a2);
    v25 = sub_231412FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 1, 1, v25);
    return;
  }
  v127 = a2;
  v128 = a1;
  v125 = a3;
  v26 = (id)HKHRCardioFitnessDetailRoomBaseLink();
  sub_231411494();

  v27 = (_QWORD *)sub_231411470();
  v23(v19, v8);
  v28 = sub_2313970F4(v27, v20);
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_231376F30(v128, (uint64_t)v127);
LABEL_76:
    v122 = sub_231412FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v125, 1, 1, v122);
    return;
  }
  v29 = (id)HKHRAFibBurdenOnboardingDeepLink();
  sub_231411494();

  v30 = (_QWORD *)sub_231411470();
  v23(v19, v8);
  v31 = sub_2313970F4(v30, v20);
  swift_bridgeObjectRelease();
  v32 = v128;
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_231377B58(v32, (uint64_t)v127);
    goto LABEL_76;
  }
  v33 = (id)HKHRAFibBurdenDetailRoomBaseLink();
  sub_231411494();

  v34 = (_QWORD *)sub_231411470();
  v23(v19, v8);
  v35 = sub_2313970F4(v34, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    sub_231377ED8(v32, (uint64_t)v127);
    goto LABEL_76;
  }
  if ((sub_231378194(v32, v127) & 1) != 0)
    goto LABEL_76;
  v36 = (void *)sub_231411488();
  v37 = (id)_HKSampleTypeFromURL();

  if (!v37)
  {
    v70 = v23;
    if (qword_25415DF98 != -1)
      swift_once();
    v71 = sub_231413780();
    sub_2312CE3B8(v71, (uint64_t)qword_254162FF0);
    v72 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v129, v32, v8);
    v73 = sub_231413768();
    v74 = sub_231414974();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v138 = v76;
      *(_DWORD *)v75 = 136446722;
      v77 = sub_2314151A8();
      v137 = sub_23133180C(v77, v78, &v138);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2082;
      v137 = sub_23133180C(0xD00000000000001FLL, 0x800000023142D5E0, &v138);
      sub_231414CBC();
      *(_WORD *)(v75 + 22) = 2082;
      v79 = sub_231411464();
      v137 = sub_23133180C(v79, v80, &v138);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v70(v72, v8);
      _os_log_impl(&dword_2312C8000, v73, v74, "[%{public}s.%{public}s] Failed to resolve HKSampleType from URL: %{public}s", (uint8_t *)v75, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v76, -1, -1);
      MEMORY[0x2348DE308](v75, -1, -1);
    }
    else
    {
      v70(v72, v8);
    }

    v82 = v125;
    goto LABEL_36;
  }
  v38 = v133;
  sub_231412A24();
  v39 = (void (**)(id, _QWORD))sub_2313A9288(v37, (uint64_t)v38);
  v134[1](v38, v135);
  if (!v39)
  {
    v81 = sub_231412FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v125, 1, 1, v81);

    return;
  }
  v135 = v23;
  v40 = (void *)sub_231412A54();
  v41 = objc_msgSend(v40, sel_presentedViewController);

  v42 = v131;
  v43 = v132;
  v124 = v37;
  if (!v41)
  {
LABEL_61:
    v95 = (void *)sub_231412A54();
    v96 = objc_msgSend(v95, sel_presentedViewController);

    if (v96)
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v97 = sub_231413780();
      sub_2312CE3B8(v97, (uint64_t)qword_254162FF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v42, v32, v8);
      v98 = sub_231413768();
      v99 = v8;
      v100 = sub_23141498C();
      if (os_log_type_enabled(v98, v100))
      {
        v101 = swift_slowAlloc();
        v134 = v39;
        v102 = v101;
        v103 = swift_slowAlloc();
        v138 = v103;
        *(_DWORD *)v102 = 136446722;
        v104 = sub_2314151A8();
        v137 = sub_23133180C(v104, v105, &v138);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v102 + 12) = 2082;
        v137 = sub_23133180C(0xD00000000000001FLL, 0x800000023142D5E0, &v138);
        sub_231414CBC();
        *(_WORD *)(v102 + 22) = 2082;
        v106 = sub_231411464();
        v137 = sub_23133180C(v106, v107, &v138);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        v135(v42, v99);
        _os_log_impl(&dword_2312C8000, v98, v100, "[%{public}s.%{public}s] Dismissing presentedViewController for url:: %{public}s", (uint8_t *)v102, 0x20u);
        swift_arrayDestroy();
        v108 = v103;
        v43 = v132;
        MEMORY[0x2348DE308](v108, -1, -1);
        v109 = v102;
        v39 = v134;
        v32 = v128;
        v37 = v124;
        MEMORY[0x2348DE308](v109, -1, -1);
      }
      else
      {
        v135(v42, v99);
      }

      v8 = v99;
      objc_msgSend(v96, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
    if (qword_25415DF98 != -1)
      swift_once();
    v110 = sub_231413780();
    sub_2312CE3B8(v110, (uint64_t)qword_254162FF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v43, v32, v8);
    v111 = sub_231413768();
    v112 = sub_23141498C();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      v136 = v8;
      v115 = v114;
      v138 = v114;
      *(_DWORD *)v113 = 136446722;
      v116 = sub_2314151A8();
      v137 = sub_23133180C(v116, v117, &v138);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 12) = 2082;
      v137 = sub_23133180C(0xD00000000000001FLL, 0x800000023142D5E0, &v138);
      sub_231414CBC();
      *(_WORD *)(v113 + 22) = 2082;
      v118 = sub_231411464();
      v137 = sub_23133180C(v118, v119, &v138);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v37 = v124;
      v135(v43, v136);
      _os_log_impl(&dword_2312C8000, v111, v112, "[%{public}s.%{public}s] Opening URL: %{public}s", (uint8_t *)v113, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v115, -1, -1);
      MEMORY[0x2348DE308](v113, -1, -1);
    }
    else
    {
      v135(v43, v8);
    }

    v120 = (void *)sub_231412A54();
    v121 = objc_msgSend(v120, sel_navigationController);

    if (v121)
    {
      objc_msgSend(v121, sel_pushViewController_animated_, v39, 0);

    }
    goto LABEL_76;
  }
  objc_opt_self();
  v44 = swift_dynamicCastObjCClass();
  if (!v44)
  {

    goto LABEL_61;
  }
  v45 = (void *)v44;
  v134 = v39;
  v46 = v8;
  v133 = (char *)v41;
  v47 = objc_msgSend(v45, sel_childViewControllers);
  sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
  v48 = sub_2314147A0();

  if (v48 >> 62)
  {
    sub_231412A90();
    v49 = sub_231414F08();
    if (v49)
      goto LABEL_16;
    goto LABEL_60;
  }
  v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  if (!v49)
  {
LABEL_60:
    v94 = v133;

    swift_bridgeObjectRelease_n();
    v32 = v128;
    v8 = v46;
    v39 = v134;
    v37 = v124;
    v42 = v131;
    v43 = v132;
    goto LABEL_61;
  }
LABEL_16:
  v50 = 4;
  while (1)
  {
    if ((v48 & 0xC000000000000001) != 0)
      v51 = (id)MEMORY[0x2348DD81C](v50 - 4, v48);
    else
      v51 = *(id *)(v48 + 8 * v50);
    v52 = v51;
    v53 = v50 - 3;
    if (__OFADD__(v50 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    objc_opt_self();
    v54 = (void *)swift_dynamicCastObjCClass();
    if (v54)
      break;

LABEL_18:
    ++v50;
    if (v53 == v49)
      goto LABEL_60;
  }
  v55 = objc_msgSend(v54, sel_isOnboarding);

  if ((v55 & 1) == 0)
    goto LABEL_18;
  v56 = v133;

  swift_bridgeObjectRelease_n();
  v57 = v126;
  if (qword_25415DF98 != -1)
    swift_once();
  v58 = sub_231413780();
  sub_2312CE3B8(v58, (uint64_t)qword_254162FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v57, v128, v46);
  v59 = sub_231413768();
  v60 = sub_23141498C();
  v61 = os_log_type_enabled(v59, v60);
  v62 = v134;
  if (v61)
  {
    v63 = swift_slowAlloc();
    v64 = swift_slowAlloc();
    v138 = v64;
    *(_DWORD *)v63 = 136446722;
    v65 = sub_2314151A8();
    v137 = sub_23133180C(v65, v66, &v138);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2082;
    v137 = sub_23133180C(0xD00000000000001FLL, 0x800000023142D5E0, &v138);
    sub_231414CBC();
    *(_WORD *)(v63 + 22) = 2082;
    v67 = sub_231411464();
    v137 = sub_23133180C(v67, v68, &v138);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    v135(v57, v46);
    _os_log_impl(&dword_2312C8000, v59, v60, "%{public}s.%{public}s ECG/IRN on-boarding is showing for url %{public}s. We will not disrupt this flow.", (uint8_t *)v63, 0x20u);
    swift_arrayDestroy();
    v69 = v64;
    v56 = v133;
    MEMORY[0x2348DE308](v69, -1, -1);
    MEMORY[0x2348DE308](v63, -1, -1);
  }
  else
  {
    v135(v57, v46);
  }

  v84 = v124;
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    if ((sub_231378888() & 1) != 0)
    {
      v85 = (void *)sub_231412A54();
      v86 = objc_msgSend(v85, sel_navigationController);

      if (v86)
      {
        v48 = (unint64_t)v62;
        objc_msgSend(v86, sel_pushViewController_animated_, v62, 0);
        v62 = v86;
        goto LABEL_57;
      }
    }
    goto LABEL_58;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    v88 = v62;
    v82 = v125;
LABEL_52:

    goto LABEL_36;
  }
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v88 = v84;
  v89 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v89)
  {

    v62 = v56;
    v56 = v88;
    goto LABEL_51;
  }
  v90 = v89;
  v48 = (unint64_t)v88;
  v91 = sub_231414C08();

  if ((v91 & 1) == 0)
  {
LABEL_51:
    v82 = v125;

    v84 = v56;
    v56 = v88;
    goto LABEL_52;
  }
  if ((sub_231378888() & 1) != 0)
  {
    v92 = (void *)sub_231412A54();
    v93 = objc_msgSend(v92, sel_navigationController);

    if (v93)
    {
      v62 = v134;
      objc_msgSend(v93, sel_pushViewController_animated_, v134, 0);

      v84 = v133;
      goto LABEL_56;
    }
LABEL_55:
    v84 = v133;
    v62 = v134;
  }
  else
  {
    v84 = v56;
  }
LABEL_56:
  v56 = (id)v48;
LABEL_57:

  v62 = (void *)v48;
LABEL_58:
  v82 = v125;

LABEL_36:
  v83 = sub_231412FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 1, 1, v83);
}

void sub_231376B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_2314114AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231412DA8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v11 = (char *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  v31 = a2;
  sub_231412A24();
  v12 = sub_2313A9288(v11, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v12)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v13 = sub_231413780();
    sub_2312CE3B8(v13, (uint64_t)qword_254162FF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v30, v3);
    v14 = sub_231413768();
    v15 = sub_23141498C();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v33 = v30;
      *(_DWORD *)v17 = 136446722;
      v18 = sub_2314151A8();
      LODWORD(ObjectType) = v16;
      v32 = sub_23133180C(v18, v19, &v33);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      v32 = sub_23133180C(0xD000000000000029, 0x800000023142D600, &v33);
      sub_231414CBC();
      *(_WORD *)(v17 + 22) = 2082;
      v20 = sub_231411464();
      v32 = sub_23133180C(v20, v21, &v33);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl(&dword_2312C8000, v14, (os_log_type_t)ObjectType, "[%{public}s.%{public}s]: Opening URL: %{public}s", (uint8_t *)v17, 0x20u);
      v22 = v30;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v22, -1, -1);
      MEMORY[0x2348DE308](v17, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    v23 = (void *)sub_231412A54();
    v24 = objc_msgSend(v23, sel_navigationController);

    if (v24)
    {
      objc_msgSend(v24, sel_pushViewController_animated_, v12, 0);

    }
    v25 = (void *)sub_231412A3C();
    v26 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingViewController());
    v27 = sub_231397A1C(v25, 1);
    objc_msgSend(v12, sel_presentViewController_animated_completion_, v27, 0, 0);

    v11 = v27;
  }

}

void sub_231376F30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  id v67;
  void *v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t ObjectType;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[2];

  v94 = a2;
  ObjectType = swift_getObjectType();
  v96 = sub_231412DA8();
  v92 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v95 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2314114AC();
  v5 = *(_QWORD *)(v4 - 8);
  v98 = v4;
  v99 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v89 = (char *)&v84 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v90 = (char *)&v84 - v11;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF290, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v84 - v14;
  v16 = sub_231411278();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECFA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], v12);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v84 - v21;
  v23 = sub_2314112C0();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = a1;
  sub_23141129C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_2312D6B98((uint64_t)v22, &qword_255ECFA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
    if (qword_25415DF98 != -1)
      swift_once();
    v27 = sub_231413780();
    sub_2312CE3B8(v27, (uint64_t)qword_254162FF0);
    v28 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v8, v97, v98);
    v29 = sub_231413768();
    v30 = sub_231414974();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v101[0] = v32;
      *(_DWORD *)v31 = 136446722;
      v33 = sub_2314151A8();
      v100 = sub_23133180C(v33, v34, v101);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      v100 = sub_23133180C(0xD000000000000029, 0x800000023142D630, v101);
      sub_231414CBC();
      *(_WORD *)(v31 + 22) = 2082;
      v35 = sub_231411464();
      v100 = sub_23133180C(v35, v36, v101);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v28);
      _os_log_impl(&dword_2312C8000, v29, v30, "[%{public}s.%{public}s]: Failed to initialize url components for url %{public}s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v32, -1, -1);
      MEMORY[0x2348DE308](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v28);
    }

    return;
  }
  v37 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v88 = v23;
  v37(v26, v22, v23);
  v38 = sub_231411284();
  v87 = v24;
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    v39 = v98;
    v40 = v96;
LABEL_14:
    sub_2312D6B98((uint64_t)v15, (unint64_t *)&unk_255ECF290, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988]);
LABEL_24:
    v54 = v90;
    if (qword_25415DF98 != -1)
      swift_once();
    v55 = sub_231413780();
    sub_2312CE3B8(v55, (uint64_t)qword_254162FF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v54, v97, v39);
    v56 = sub_231413768();
    v57 = sub_23141498C();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v101[0] = v59;
      *(_DWORD *)v58 = 136446722;
      v60 = sub_2314151A8();
      v100 = sub_23133180C(v60, v61, v101);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      v100 = sub_23133180C(0xD000000000000029, 0x800000023142D630, v101);
      sub_231414CBC();
      *(_WORD *)(v58 + 22) = 2082;
      v62 = sub_231411464();
      v100 = sub_23133180C(v62, v63, v101);
      v39 = v98;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v39);
      _os_log_impl(&dword_2312C8000, v56, v57, "[%{public}s.%{public}s]: Unable to extract chart context for url %{public}s", (uint8_t *)v58, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v59, -1, -1);
      MEMORY[0x2348DE308](v58, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v39);
    }

    v83 = 0;
    goto LABEL_30;
  }
  v39 = v98;
  v40 = v96;
  if (*(_QWORD *)(v38 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, v38 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v41, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    goto LABEL_14;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  v42 = sub_231411260();
  v44 = v43;
  v45 = (id)HKHRCardioFitnessChartContextQueryName();
  v46 = sub_2314146BC();
  v48 = v47;

  if (v42 == v46 && v44 == v48)
  {
    swift_bridgeObjectRelease_n();
    v39 = v98;
  }
  else
  {
    v49 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v98;
    if ((v49 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v40 = v96;
      goto LABEL_24;
    }
  }
  sub_23141126C();
  v40 = v96;
  if (!v50 || (v51 = sub_2314114B8(), v53 = v52, swift_bridgeObjectRelease(), v53 >> 60 == 15))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_24;
  }
  sub_2314111C4();
  swift_allocObject();
  v86 = sub_2314111B8();
  sub_2314122D4();
  sub_2312F23F0((unint64_t *)&unk_255ECF2A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42558], MEMORY[0x24BE42570]);
  v84 = v53;
  v85 = v51;
  sub_2314111AC();
  swift_release();
  sub_231311034(v85, v84);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v83 = (void *)v101[0];
LABEL_30:
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v64 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  v65 = (uint64_t)v95;
  sub_231412A24();
  v66 = v83;
  sub_231412D54();
  v67 = sub_2313A9288(v64, v65);
  if (v67)
  {
    v68 = v67;
    v90 = v66;
    v91 = v26;
    if (qword_25415DF98 != -1)
      swift_once();
    v69 = sub_231413780();
    sub_2312CE3B8(v69, (uint64_t)qword_254162FF0);
    v70 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v89, v97, v39);
    v71 = sub_231413768();
    v72 = sub_23141498C();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = swift_slowAlloc();
      v74 = swift_slowAlloc();
      v101[0] = v74;
      *(_DWORD *)v73 = 136446722;
      v75 = sub_2314151A8();
      v100 = sub_23133180C(v75, v76, v101);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2082;
      v100 = sub_23133180C(0xD000000000000029, 0x800000023142D630, v101);
      sub_231414CBC();
      *(_WORD *)(v73 + 22) = 2082;
      v77 = sub_231411464();
      v100 = sub_23133180C(v77, v78, v101);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v70, v98);
      _os_log_impl(&dword_2312C8000, v71, v72, "[%{public}s.%{public}s]: Opening detail room URL: %{public}s", (uint8_t *)v73, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v74, -1, -1);
      v79 = v73;
      v65 = (uint64_t)v95;
      MEMORY[0x2348DE308](v79, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v70, v39);
    }

    v80 = v88;
    v81 = (void *)sub_231412A54();
    v82 = objc_msgSend(v81, sel_navigationController);

    objc_msgSend(v82, sel_pushViewController_animated_, v68, 0);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v65, v96);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v91, v80);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v65, v40);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v26, v88);
  }
}

void sub_231377B58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41[40];
  uint64_t v42[6];

  v34 = a1;
  ObjectType = swift_getObjectType();
  v37 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_2314114AC();
  v4 = *(_QWORD *)(v33 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v7 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231412DA8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v14 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v38 = a2;
  v15 = (char *)v14;
  sub_231412A24();
  v40 = v15;
  v16 = sub_2313A9288(v15, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    v31 = v16;
    if (qword_25415B6D8 != -1)
      swift_once();
    v17 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
    v18 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v9, v17, v7);
    v20 = v32;
    v19 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v32, v34, v33);
    v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v20, v19);
    *(_QWORD *)(v22 + ((v5 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v42[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    v23 = (void *)sub_231412A54();
    v24 = objc_msgSend(v23, sel_navigationController);

    v25 = v31;
    if (v24)
    {
      objc_msgSend(v24, sel_pushViewController_animated_, v31, 0);

    }
    v26 = (void *)sub_231412A3C();
    sub_231412A30();
    sub_231412A48();
    v27 = (uint64_t)v39;
    swift_storeEnumTagMultiPayload();
    v28 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
    v29 = sub_2313B5464(v26, (uint64_t)v42, (uint64_t)v41, v27, 0, 2);
    objc_msgSend(v25, sel_presentViewController_animated_completion_, v29, 0, 0);

    v40 = v29;
  }

}

void sub_231377ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;

  v26 = a1;
  ObjectType = swift_getObjectType();
  v28 = sub_2314114AC();
  v3 = *(_QWORD *)(v28 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v6 = v5;
  v29 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231412DA8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v13 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v31 = a2;
  v14 = (void *)v13;
  sub_231412A24();
  v15 = sub_2313A9288(v14, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    v25 = v15;
    if (qword_25415B6D8 != -1)
      swift_once();
    v16 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
    v17 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v8, v16, v6);
    v18 = v27;
    v19 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v27, v26, v28);
    v20 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v18, v19);
    *(_QWORD *)(v21 + ((v4 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v32 = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
    v22 = (void *)sub_231412A54();
    v23 = objc_msgSend(v22, sel_navigationController);

    v24 = v25;
    if (v23)
    {
      objc_msgSend(v23, sel_pushViewController_animated_, v25, 0);

    }
    v14 = v24;
  }

}

uint64_t sub_231378194(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  void *v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  _BYTE v52[12];
  int v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  id v60;
  _QWORD v61[3];
  uint64_t v62;
  void *v63;

  v60 = a2;
  v2 = sub_231412DA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_231412A0C();
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v59 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2312D6DD8(0, &qword_255ECFA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v52[-v9];
  v11 = sub_2314112C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23141129C();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2312D6B98((uint64_t)v10, &qword_255ECFA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
    return 0;
  }
  v57 = v6;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_2314112B4();
  v15 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v15, sel_pathComponents);

  v17 = (_QWORD *)sub_2314147A0();
  if (v17[2] != 2
    || (v17[4] == 47 ? (v18 = v17[5] == 0xE100000000000000) : (v18 = 0), !v18 && (sub_231415070() & 1) == 0))
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
    return 0;
  }
  v19 = v17[6];
  v20 = v17[7];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v21 = sub_231373834();
  if (!*(_QWORD *)(v21 + 16) || (v22 = sub_231338800(v19, v20), (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  v24 = *(unsigned __int8 *)(*(_QWORD *)(v21 + 56) + v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_231412A54();
  v26 = objc_msgSend(v25, sel_resolvedHealthStore);

  if (!v26)
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  sub_2313CEF88((uint64_t)v26, v24);
  v56 = v63;
  sub_2312CEA5C(v61, v62);
  v27 = sub_231411C38();
  v54 = v28;
  v55 = (void *)v27;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v61);
  v56 = v26;
  v53 = v24;
  sub_2313CEF88((uint64_t)v26, v24);
  sub_2312CEA5C(v61, v62);
  sub_231411C2C();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v61);
  v29 = objc_allocWithZone((Class)sub_231411C20());
  v30 = sub_231411C14();
  v31 = objc_allocWithZone(MEMORY[0x24BE4A718]);
  v55 = (void *)v30;
  v32 = objc_msgSend(v31, sel_initWithRootViewController_, v30);
  v33 = (void *)sub_231412A54();
  v34 = objc_msgSend(v33, sel_navigationController);

  if (v34)
  {
    v54 = v32;
    v35 = sub_2313CF198(v53);
    v36 = v55;
    v37 = v56;
    if (!v35)
    {
LABEL_36:
      v40 = v54;
      objc_msgSend(v34, sel_presentViewController_animated_completion_, v54, 0, 0);
      goto LABEL_37;
    }
    v38 = v35;
    sub_231412A00();
    sub_231412A24();
    v60 = v38;
    v41 = sub_2314129F4();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    v42 = objc_msgSend(v34, sel_viewControllers);
    sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
    v43 = sub_2314147A0();

    if (v43 >> 62)
    {
      sub_231412A90();
      v44 = (id)sub_231414F08();
      swift_bridgeObjectRelease();
      v45 = (void *)v41;
      if (v44)
      {
LABEL_22:
        if ((v43 & 0xC000000000000001) != 0)
        {
          v46 = (id)MEMORY[0x2348DD81C](0, v43);
        }
        else
        {
          if (!*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_40;
          }
          v46 = *(id *)(v43 + 32);
        }
        v47 = v46;
        swift_bridgeObjectRelease();
        v61[0] = MEMORY[0x24BEE4AF8];
        if (v47)
        {
          v48 = v45;
          v44 = v47;
          MEMORY[0x2348DD15C]();
          if (*(_QWORD *)((v61[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2314147DC();
          sub_2314147E8();
          sub_2314147B8();
LABEL_32:
          if (!v45)
          {
LABEL_35:

            v51 = (void *)sub_231414788();
            swift_bridgeObjectRelease();
            objc_msgSend(v34, sel_setViewControllers_animated_, v51, 0);

            (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v59, v57);
            v36 = v55;
            v37 = v56;
            goto LABEL_36;
          }
          v50 = v45;
          MEMORY[0x2348DD15C]();
          if (*(_QWORD *)((v61[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v61[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_34:
            sub_2314147E8();
            sub_2314147B8();
            goto LABEL_35;
          }
LABEL_40:
          sub_2314147DC();
          goto LABEL_34;
        }
LABEL_31:
        v49 = v45;
        v44 = 0;
        goto LABEL_32;
      }
    }
    else
    {
      v44 = *(id *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      v45 = (void *)v41;
      if (v44)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    v61[0] = MEMORY[0x24BEE4AF8];
    goto LABEL_31;
  }
  v40 = (void *)sub_231412A54();
  objc_msgSend(v40, sel_presentViewController_animated_completion_, v32, 0, 0);
  v34 = v32;
  v36 = v55;
  v37 = v56;
LABEL_37:

  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  return 1;
}

uint64_t sub_231378888()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;
  id v14;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = v0;
    v4 = objc_msgSend(v2, sel_childViewControllers);
    sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
    v5 = sub_2314147A0();

    if (v5 >> 62)
      goto LABEL_16;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_231412A90();
    for (; v6; v6 = sub_231414F08())
    {
      v7 = 4;
      while (1)
      {
        v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348DD81C](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {

          swift_bridgeObjectRelease_n();
          v13 = v9;
          v14 = objc_msgSend(v13, sel_description);
          sub_2314146BC();

          sub_2312D104C();
          v11 = sub_231414CEC();
          swift_bridgeObjectRelease();

          return v11 & 1;
        }

        ++v7;
        if (v10 == v6)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      sub_231412A90();
    }
LABEL_11:

    swift_bridgeObjectRelease_n();
  }
  v11 = 0;
  return v11 & 1;
}

uint64_t sub_231378A84()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231411464();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_231378B7C@<X0>(id a1@<X1>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  char v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_presentedViewController);
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  v5 = (void *)sub_231411488();
  v6 = (id)_HKSampleTypeFromURL();

  if (!v6)
  {
    v6 = v4;
LABEL_8:

    goto LABEL_9;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {

    goto LABEL_8;
  }
  v7 = sub_231378888();

  if ((v7 & 1) == 0)
  {
LABEL_9:
    v8 = (unsigned int *)MEMORY[0x24BE42A30];
    goto LABEL_10;
  }
  v8 = (unsigned int *)MEMORY[0x24BE42A38];
LABEL_10:
  v9 = *v8;
  v10 = sub_23141243C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a2, v9, v10);
}

uint64_t sub_231378C78@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_231378B7C(a1, a2);
}

uint64_t sub_231378C8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42A30];
  v3 = sub_23141243C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_231378CD0(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  ObjectType = swift_getObjectType();

  if (qword_25415DF98 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
  v4 = a1;
  v5 = sub_231413768();
  v6 = sub_231414974();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17 = v8;
    v18 = ObjectType;
    *(_DWORD *)v7 = 136446466;
    swift_getMetatypeMetadata();
    v9 = sub_2314146E0();
    v18 = sub_23133180C(v9, v10, &v17);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v11 = v4;
    v12 = objc_msgSend(v11, sel_description, v17);
    v13 = sub_2314146BC();
    v15 = v14;

    v18 = sub_23133180C(v13, v15, &v17);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s] Unexpected type passed to Heart plugin for data list data provider: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_231378F58(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415D4D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HeartAppDelegate, (uint64_t)&unk_23141E51C);
}

void sub_231378F84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF208)
  {
    sub_23141237C();
    v0 = sub_2314123A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF208);
  }
}

void sub_231378FE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECAC90)
  {
    sub_2312CEA10(255, &qword_255ECF220);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECAC90);
  }
}

void sub_231379048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF230)
  {
    sub_231378F84();
    sub_2312F23F0((unint64_t *)&unk_255ECF210, 255, (uint64_t (*)(uint64_t))sub_231378F84, MEMORY[0x24BE428C8]);
    v0 = sub_2314126AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF230);
  }
}

void sub_2313790C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF250)
  {
    sub_231379128(255, &qword_255ECE878, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF250);
  }
}

void sub_231379128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2312CEA10(255, (unint64_t *)&qword_255ECF1F0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_231379194()
{
  unint64_t result;

  result = qword_255ECF260;
  if (!qword_255ECF260)
  {
    result = MEMORY[0x2348DE248](&unk_231425090, &type metadata for ViewSandboxCollectionViewItem);
    atomic_store(result, (unint64_t *)&qword_255ECF260);
  }
  return result;
}

uint64_t sub_2313791D8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_231379204(void *a1)
{
  uint64_t v1;

  sub_231374E00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23137920C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_23137B5F0(0, (unint64_t *)&qword_255ED1EE0);
  v6 = a2;
  v7 = sub_231414F38();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_231304744(v25, v36);
      }
      else
      {
        sub_2313046A8((uint64_t)v25, (uint64_t)v36);
        sub_231412A90();
      }
      sub_231415118();
      sub_231414710();
      result = sub_231415148();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_231304744(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_23137951C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_2313391EC();
  v43 = a2;
  v9 = sub_231414F38();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_231317058(v30, (uint64_t)v7);
    }
    else
    {
      sub_23131709C(v30, (uint64_t)v7);
      sub_231412A90();
    }
    sub_231415118();
    sub_231414710();
    result = sub_231415148();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_231317058((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_231379880(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23137B5F0(0, &qword_255ECD728);
  v37 = a2;
  v6 = sub_231414F38();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      sub_231412A90();
    sub_231415118();
    sub_231414710();
    result = sub_231415148();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_231379B94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_23137B5F0(0, (unint64_t *)&qword_255ED1EE0);
  v2 = *v0;
  v3 = sub_231414F2C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_2313046A8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_231304744(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)sub_231412A90();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_231379D88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313391EC();
  v5 = *v0;
  v6 = sub_231414F2C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_23131709C(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    sub_231317058((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)sub_231412A90();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_231379FB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_23137B5F0(0, &qword_255ECD728);
  v2 = *v0;
  v3 = sub_231414F2C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)sub_231412A90();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_23137A164(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23137A210(v6, a2, a3);
  return sub_23137A1B8;
}

void (*sub_23137A1BC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23137A27C(v6, a2, a3);
  return sub_23137A1B8;
}

uint64_t (*sub_23137A210(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348DD81C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s5Heart32FeatureStatusFeedItemRequirementC14PortionToCheckOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_23137A27C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348DD81C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for FeatureStatusFeedItemRequirement.PortionToCheck;
  }
  __break(1u);
  return result;
}

void sub_23137A2E8(void *a1, uint64_t a2, char a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *ObjCClassFromMetadata;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  char v32;
  uint64_t v33;
  id v34;
  id v35;
  objc_class *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  _QWORD v56[3];
  objc_class *v57;
  objc_super v58;
  _QWORD v59[5];

  sub_2312D6DD8(0, (unint64_t *)&qword_255ECF270, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v56[-1] - v9;
  v59[3] = sub_231411ADC();
  v59[4] = MEMORY[0x24BE47D88];
  v59[0] = a2;
  v11 = &a4[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v13 = a4;
  v14 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v14)
  {
    __break(1u);
    goto LABEL_23;
  }
  v15 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x24BEE4B08];
  v16 = objc_msgSend(a1, sel_profile);
  v17 = objc_msgSend(v16, sel_healthStore);

  if (!v17)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore] = v17;
  sub_2312DF850((uint64_t)v59, (uint64_t)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager]);
  v18 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, v17);
  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_displayTypeForObjectType_, *(_QWORD *)&v13[v15]);

  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType] = v20;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory] = a1;
  v22 = a1;
  v23 = objc_msgSend(v22, sel_profile);
  v24 = objc_msgSend(v23, sel_healthStore);

  if (!v24)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v25 = objc_msgSend(v24, sel_profileIdentifier);

  v26 = objc_msgSend(v25, sel_type);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_profileType] = v26;
  if (a3 != 4)
  {
    v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = a3;

    v33 = qword_23141E548[a3];
LABEL_10:
    v34 = *(id *)&v13[v21];
    v35 = objc_msgSend(v22, sel_profile);
    v36 = (objc_class *)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    v58.receiver = v13;
    v58.super_class = v36;
    v37 = objc_msgSendSuper2(&v58, sel_initWithDisplayType_profile_mode_, v34, v35, v33);

    v38 = (char *)v37;
    sub_231344B98();
    if (objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType], sel_allowsManualEntry))
    {
      v39 = sub_231412514();
      v41 = v40;
      if (v39 == sub_231412514() && v41 == v42)
      {
        swift_bridgeObjectRelease_n();
LABEL_15:
        if (qword_25415E610 != -1)
          swift_once();
        sub_231411374();
        v57 = v36;
        v56[0] = v38;
        v44 = v38;
        v45 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        v46 = (uint64_t)v57;
        if (v57)
        {
          v47 = sub_2312CEA5C(v56, (uint64_t)v57);
          v48 = *(_QWORD *)(v46 - 8);
          MEMORY[0x24BDAC7A8](v47);
          v50 = (char *)&v56[-1] - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v48 + 16))(v50);
          v51 = sub_231415064();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v46);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
        }
        else
        {
          v51 = 0;
        }
        v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithTitle_style_target_action_, v45, 0, v51, sel_showAddDataVC);

        sub_2314130CC();
        v53 = objc_msgSend(v44, sel_navigationItem);
        v54 = v52;
        objc_msgSend(v53, sel_setRightBarButtonItem_, v54);

        v22 = v54;
        goto LABEL_21;
      }
      v43 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
        goto LABEL_15;
    }
LABEL_21:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v59);
    return;
  }
  v27 = objc_msgSend(v22, sel_profile);
  v28 = objc_msgSend(v27, sel_healthStore);

  if (v28)
  {
    v29 = objc_msgSend(v28, sel_profileIdentifier);

    v30 = sub_23141231C();
    v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 1, 1, v30);
    v32 = sub_231412508();

    sub_2312D6B98((uint64_t)v10, (unint64_t *)&qword_255ECF270, v31);
    v13[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = v32;

    v33 = 0;
    goto LABEL_10;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_23137A954()
{
  return sub_23137A9B8();
}

uint64_t sub_23137A988()
{
  return sub_23137A9B8();
}

uint64_t sub_23137A9B8()
{
  sub_2314114AC();
  return sub_231378A84();
}

id sub_23137AA34(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  ValueMetadata *v30;
  unint64_t v31;
  unint64_t v32;

  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF2B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44F78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - v5;
  v7 = sub_231412DA8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231412DB4();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_231413450();
  v25 = *(_QWORD *)(v14 - 8);
  v26 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413444();
  sub_231412C70();
  sub_231412BB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  objc_allocWithZone((Class)sub_2314133A8());
  v17 = a1;
  v18 = (void *)sub_23141339C();
  v19 = objc_msgSend(v17, sel_identifier);
  sub_2314146BC();

  v20 = (void *)sub_231412D78();
  v30 = &type metadata for HeartRateArticleDataProvider;
  v31 = sub_23137B4F4();
  v32 = sub_23137B538();

  v21 = (void *)sub_231412D78();
  sub_231413378();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  v22 = sub_231413384();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
  sub_231413390();
  v23 = v18;
  sub_231412D48();
  sub_231412E68();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  return v23;
}

uint64_t sub_23137ACDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  ValueMetadata *v21;
  unint64_t v22;

  v17 = a1;
  v1 = sub_231412DA8();
  v18 = *(_QWORD *)(v1 - 8);
  v19 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v16 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231412C64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231412DB4();
  v15 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v10 = (id)*MEMORY[0x24BDD35C8];
  v11 = (void *)MEMORY[0x2348DD384]();
  sub_231412C70();

  v21 = &type metadata for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent;
  v22 = sub_23137B5AC();
  sub_231412C7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE43EE0], v3);
  sub_231413234();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v20);
  v12 = v17;
  sub_231412BB0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v12, v19);
  MEMORY[0x2348DD384](v10);
  v13 = objc_allocWithZone((Class)sub_231412E80());
  return sub_231412E5C();
}

id sub_23137AF0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  id result;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF2B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44F78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - v5;
  v7 = sub_231412DA8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider();
  inited = swift_initStackObject();
  result = objc_msgSend((id)objc_opt_self(), sel__quantityTypeWithCode_, 124);
  if (result)
  {
    *(_QWORD *)(inited + 16) = result;
    sub_231385E2C(a2);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    v13 = objc_allocWithZone((Class)sub_2314133A8());
    v14 = a1;
    v29 = sub_23141339C();
    v15 = objc_msgSend(v14, sel_identifier);
    v28[1] = sub_2314146BC();

    v16 = (void *)sub_231412D78();
    v17 = *MEMORY[0x24BDD2DD0];
    v18 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
    v19 = v16;
    v20 = objc_msgSend(v18, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v17, v19, 0);
    v31 = sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
    v32 = MEMORY[0x24BE45B80];
    *(_QWORD *)&v30 = v20;
    v21 = type metadata accessor for LowCardioFitnessArticleDataProvider();
    v22 = swift_allocObject();
    v23 = v22 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
    sub_2312D6DD8(0, &qword_25415C140, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(_BYTE *)(v22 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink) = 2;
    *(_QWORD *)(v22 + 16) = v19;
    sub_2312DFB68(&v30, v22 + 24);
    v31 = v21;
    v32 = sub_2312F23F0(&qword_25415E5D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider, (uint64_t)&unk_231423D50);
    v33 = sub_2312F23F0(qword_25415E620, 255, (uint64_t (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider, (uint64_t)&unk_231423CE8);

    *(_QWORD *)&v30 = v22;
    v25 = (void *)sub_231412D78();
    sub_231413378();
    swift_bridgeObjectRelease();

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v30);
    v26 = sub_231413384();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 0, 1, v26);
    v27 = v29;
    sub_231413390();
    swift_setDeallocating();

    return (id)v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23137B268(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  ValueMetadata *v29;
  unint64_t v30;
  unint64_t v31;

  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF2B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44F78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - v5;
  v7 = sub_231412DA8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231412DB4();
  v26 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23141348C();
  v24 = *(_QWORD *)(v14 - 8);
  v25 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413480();
  sub_231413474();
  sub_231412BB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  objc_allocWithZone((Class)sub_2314133A8());
  v17 = a1;
  v18 = sub_23141339C();
  v19 = objc_msgSend(v17, sel_identifier);
  sub_2314146BC();

  v20 = (void *)sub_231412D78();
  v29 = &type metadata for HeartRateArticleDataProvider;
  v30 = sub_23137B4F4();
  v31 = sub_23137B538();

  v21 = (void *)sub_231412D78();
  sub_231413378();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v28);
  v22 = sub_231413384();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
  sub_231413390();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v25);
  return v18;
}

unint64_t sub_23137B4F4()
{
  unint64_t result;

  result = qword_25415E498;
  if (!qword_25415E498)
  {
    result = MEMORY[0x2348DE248](&unk_23141A708, &type metadata for HeartRateArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25415E498);
  }
  return result;
}

unint64_t sub_23137B538()
{
  unint64_t result;

  result = qword_25415E4A0;
  if (!qword_25415E4A0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A6A0, &type metadata for HeartRateArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25415E4A0);
  }
  return result;
}

uint64_t sub_23137B57C()
{
  return swift_deallocObject();
}

void sub_23137B58C(int a1, void *a2)
{
  uint64_t v2;

  sub_231373EE0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23137B594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23137B5A4()
{
  return swift_release();
}

unint64_t sub_23137B5AC()
{
  unint64_t result;

  result = qword_255ECF2C0;
  if (!qword_255ECF2C0)
  {
    result = MEMORY[0x2348DE248](&unk_23141B798, &type metadata for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent);
    atomic_store(result, (unint64_t *)&qword_255ECF2C0);
  }
  return result;
}

void sub_23137B5F0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231414F50();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23137B640()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23137B664()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23137B674(void *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t (*v84)(_QWORD);
  uint64_t v85;
  uint64_t v86;
  id v87[7];

  v4 = v3;
  v85 = a3;
  v87[5] = *(id *)MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v8 = v7;
  v79 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v78 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v73 - v11;
  v76 = sub_2314114AC();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v73 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_notification);
  v14 = objc_msgSend(v13, sel_request);

  v15 = objc_msgSend(v14, sel_content);
  v16 = objc_msgSend(v15, sel_categoryIdentifier);

  v17 = sub_2314146BC();
  v19 = v18;

  v20 = sub_2314146BC();
  v81 = v17;
  if (v17 != v20 || v19 != v21)
  {
    v22 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_8;
    if (v81 != sub_2314146BC() || v19 != v23)
    {
      v24 = sub_231415070();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_14;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  v77 = v8;
  v83 = v4;
  v84 = a2;
  v25 = (id)HKHRAFibBurdenLogForCategory();
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v25, v26);

  v82 = a1;
  v28 = a1;
  v29 = objc_msgSend(v28, sel_notification);
  v30 = objc_msgSend(v29, sel_request);

  v31 = objc_msgSend(v28, sel_actionIdentifier);
  v32 = sub_2314146BC();
  v34 = v33;

  v87[3] = &type metadata for BiomeFocusModeOnDeterminer;
  v87[4] = &off_250028820;
  type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent();
  v35 = (_QWORD *)swift_allocObject();
  v36 = sub_2312DEF74((uint64_t)v87, (uint64_t)&type metadata for BiomeFocusModeOnDeterminer);
  MEMORY[0x24BDAC7A8](v36);
  (*(void (**)(void))(v37 + 16))();
  v35[8] = &type metadata for BiomeFocusModeOnDeterminer;
  v35[9] = &off_250028820;
  v35[2] = v30;
  v35[3] = v32;
  v35[4] = v34;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v87);

  v87[0] = 0;
  if (objc_msgSend(v27, sel_submitEvent_error_, v35, v87))
  {
    v38 = v87[0];

    swift_release();
  }
  else
  {
    v39 = v87[0];
    v40 = (void *)sub_231411410();

    swift_willThrow();
    swift_release();
    if (qword_25415B6D8 != -1)
      swift_once();
    v41 = v77;
    v42 = sub_2312CE3B8(v77, (uint64_t)qword_254162EE8);
    v43 = v78;
    v44 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v42, v41);
    v45 = swift_allocObject();
    v46 = ObjectType;
    *(_QWORD *)(v45 + 16) = v40;
    *(_QWORD *)(v45 + 24) = v46;
    v87[0] = 0;
    v47 = v40;
    sub_2314135AC();
    swift_release();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
  }
  v4 = v83;
  a2 = v84;
  a1 = v82;
LABEL_14:
  v48 = objc_msgSend(a1, sel_actionIdentifier);
  v49 = sub_2314146BC();
  v51 = v50;

  if (v49 == sub_2314146BC() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:
    if (qword_25415DF98 != -1)
      swift_once();
    v54 = sub_231413780();
    sub_2312CE3B8(v54, (uint64_t)qword_254162FF0);
    v55 = v4;
    sub_231412A90();
    v56 = sub_231413768();
    v57 = sub_23141498C();
    if (!os_log_type_enabled(v56, v57))
    {

      swift_bridgeObjectRelease_n();
      return a2(v62);
    }
    v58 = swift_slowAlloc();
    v59 = (void *)swift_slowAlloc();
    v87[0] = v59;
    *(_DWORD *)v58 = 136446723;
    v86 = swift_getObjectType();
    sub_23137C334();
    v60 = sub_2314146E0();
    v86 = sub_23133180C(v60, v61, (uint64_t *)v87);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    v86 = sub_23133180C(0xD00000000000003BLL, 0x800000023142D7C0, (uint64_t *)v87);
    sub_231414CBC();
    *(_WORD *)(v58 + 22) = 2081;
    sub_231412A90();
    v86 = sub_23133180C(v81, v19, (uint64_t *)v87);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v56, v57, "[%{public}s.%{public}s] Notification with identifier %{private}s dismissed", (uint8_t *)v58, 0x20u);
    goto LABEL_22;
  }
  v53 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) != 0)
    goto LABEL_18;
  swift_bridgeObjectRelease();
  v63 = objc_msgSend(a1, sel_notification);
  v64 = (uint64_t)v75;
  sub_2314149B0();

  v65 = v74;
  v66 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v64, 1, v76) != 1)
  {
    v71 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v73, v64, v66);
    sub_2313753A8(v71);
    v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v71, v66);
    return a2(v62);
  }
  sub_2312D6B98(v64, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (qword_25415DF98 != -1)
    swift_once();
  v67 = sub_231413780();
  sub_2312CE3B8(v67, (uint64_t)qword_254162FF0);
  v56 = sub_231413768();
  v68 = sub_231414974();
  if (!os_log_type_enabled(v56, v68))
    goto LABEL_23;
  v58 = swift_slowAlloc();
  v59 = (void *)swift_slowAlloc();
  v87[0] = v59;
  *(_DWORD *)v58 = 136315394;
  v69 = sub_2314151A8();
  v86 = sub_23133180C(v69, v70, (uint64_t *)v87);
  sub_231414CBC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v58 + 12) = 2080;
  v86 = sub_23133180C(0xD00000000000003BLL, 0x800000023142D7C0, (uint64_t *)v87);
  sub_231414CBC();
  _os_log_impl(&dword_2312C8000, v56, v68, "[%s.%s] Unable to resolve notification. No URL present.", (uint8_t *)v58, 0x16u);
LABEL_22:
  swift_arrayDestroy();
  MEMORY[0x2348DE308](v59, -1, -1);
  MEMORY[0x2348DE308](v58, -1, -1);
LABEL_23:

  return a2(v62);
}

uint64_t sub_23137C020(void *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;

  swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
  v5 = sub_231413768();
  v6 = sub_23141498C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v24 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_2314151A8();
    sub_23133180C(v9, v10, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    sub_23133180C(0xD00000000000003CLL, 0x800000023142D780, &v24);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s.%{public}s]", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }

  v11 = objc_msgSend(a1, sel_request);
  v12 = objc_msgSend(v11, sel_content);

  v13 = objc_msgSend(v12, sel_categoryIdentifier);
  v14 = sub_2314146BC();
  v16 = v15;

  if (v14 == sub_2314146BC() && v16 == v17)
    goto LABEL_12;
  v19 = sub_231415070();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v21 = 26;
    goto LABEL_14;
  }
  if (v14 == sub_2314146BC() && v16 == v20)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v23 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    v21 = 26;
  else
    v21 = 0;
LABEL_14:
  a2(v21);
  return ((uint64_t (*)(_QWORD))a2)(0);
}

uint64_t sub_23137C328()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

unint64_t sub_23137C334()
{
  unint64_t result;

  result = qword_255ECF2D8;
  if (!qword_255ECF2D8)
  {
    type metadata accessor for HeartAppDelegate();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECF2D8);
  }
  return result;
}

uint64_t sub_23137C368()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23137C38C()
{
  uint64_t v0;

  return sub_23137527C(*(void **)(v0 + 16));
}

uint64_t sub_23137C398()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2314114AC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_23137C404(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2314114AC() - 8) + 80);
  sub_231375840(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23137C464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  __int128 v16[2];

  sub_2312D6DD8(0, &qword_255ECF2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE422B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - v7;
  if (qword_255ECA9C0 != -1)
    swift_once();
  if (qword_255ECA9B8 != -1)
    swift_once();
  sub_2314121B4();
  v9 = sub_2314121C0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_2312DF850(a1, (uint64_t)v16);
  v10 = swift_allocObject();
  sub_2312DFB68(v16, v10 + 16);
  sub_2312DF850(a2, (uint64_t)v15);
  v11 = swift_allocObject();
  sub_2312DFB68(v15, v11 + 16);
  v12 = sub_2314123E8();
  v13 = MEMORY[0x24BE42938];
  a3[3] = v12;
  a3[4] = v13;
  sub_2312DFCA0(a3);
  swift_retain();
  return sub_2314123DC();
}

uint64_t sub_23137C644()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23137C668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_23137C7A0(v14);
  sub_23137C9B8(v11);
  sub_2313311C4(0, &qword_255ECD410, (unint64_t *)&qword_255ECD418, MEMORY[0x24BE43268], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231418090;
  v1 = v15;
  v2 = v16;
  v3 = sub_2312CEA5C(v14, v15);
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v2 + 8);
  v4 = sub_2312DFCA0((uint64_t *)(v0 + 32));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v4, v3, v1);
  v5 = v12;
  v6 = v13;
  v7 = sub_2312CEA5C(v11, v12);
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v6 + 8);
  v8 = sub_2312DFCA0((uint64_t *)(v0 + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v7, v5);
  v9 = sub_231412A90();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v14);
  return v9;
}

uint64_t sub_23137C798()
{
  return sub_23137C668();
}

uint64_t sub_23137C7A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_2312D6DD8(0, &qword_255ECF2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE452E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_231412190();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_2314122A4();
  v9 = sub_2314134BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = sub_231412268();
  MEMORY[0x2348DAC6C](v10);
  sub_23141225C();
  v11 = sub_231412184();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23141264C();
  v13 = MEMORY[0x24BE42F10];
  a1[3] = v12;
  a1[4] = v13;
  sub_2312DFCA0(a1);
  sub_231412640();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23137C9B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_2312D6DD8(0, &qword_255ECF2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE452E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_231412190();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_2314122B0();
  v9 = sub_2314134BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = sub_231412274();
  MEMORY[0x2348DAC6C](v10);
  sub_23141225C();
  v11 = sub_231412184();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23141264C();
  v13 = MEMORY[0x24BE42F10];
  a1[3] = v12;
  a1[4] = v13;
  sub_2312DFCA0(a1);
  sub_231412640();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23137CBD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[40];

  sub_2312DF850(a1, (uint64_t)v4);
  sub_2313311C4(0, &qword_255ECD410, (unint64_t *)&qword_255ECD418, MEMORY[0x24BE43268], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231416A30;
  sub_2312DF850((uint64_t)v4, v1 + 32);
  v2 = sub_231412A90();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_23137CC6C()
{
  uint64_t v0;

  return sub_23137CBD4(v0 + 16);
}

uint64_t sub_23137CC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_23141246C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2314134A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  MEMORY[0x2348DAC6C]();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE42A98], v0);
  sub_231413498();
  sub_2312D6DD8(0, &qword_255ECF2F8, (uint64_t (*)(uint64_t))sub_23137E1D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  v9 = MEMORY[0x24BE45208];
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = MEMORY[0x24BE45200];
  v10 = sub_2312DFCA0((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v11 = sub_231412A90();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_23137CE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_23141246C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23141222C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23137DE68();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE42A98], v0);
  sub_231412298();
  MEMORY[0x2348DAC60]();
  sub_231412238();
  sub_2312D6DD8(0, &qword_255ECF2F8, (uint64_t (*)(uint64_t))sub_23137E1D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  v9 = MEMORY[0x24BE423E0];
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = MEMORY[0x24BE423D8];
  v10 = sub_2312DFCA0((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v11 = sub_231412A90();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_23137CFFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[5];

  v2 = sub_231412190();
  v8[3] = v2;
  v8[4] = MEMORY[0x24BE42278];
  v3 = sub_2312DFCA0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, a1, v2);
  v4 = sub_2314126DC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  sub_23137E2F0(0, &qword_255ECF2F0, &qword_255ECD3F0, (unint64_t *)&qword_255ECD3F8, MEMORY[0x24BE42740]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231416A30;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = MEMORY[0x2348DB0B0]();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23137D0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = MEMORY[0x24BEE4AF8];
  sub_23137D374(0, 0, 0);
  v2 = v24;
  v3 = *(_QWORD *)(a1 + 16);
  sub_231412A90();
  v21 = v3;
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 40);
    v6 = MEMORY[0x24BEE0D00];
    do
    {
      v7 = *v5;
      v22 = *(v5 - 1);
      v23 = v2;
      v8 = qword_255ECAAD8;
      sub_231412A90();
      if (v8 != -1)
        swift_once();
      ++v4;
      sub_231411374();
      sub_2313311C4(0, (unint64_t *)&qword_25415DF58, (unint64_t *)&qword_25415DF90, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_231418090;
      sub_23137E230();
      v10 = sub_231414CF8();
      v12 = v11;
      *(_QWORD *)(v9 + 56) = v6;
      v13 = sub_2312D6E84();
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v12;
      *(_QWORD *)(v9 + 96) = v6;
      *(_QWORD *)(v9 + 104) = v13;
      *(_QWORD *)(v9 + 64) = v13;
      *(_QWORD *)(v9 + 72) = v22;
      *(_QWORD *)(v9 + 80) = v7;
      sub_231412A90();
      v14 = sub_2314146D4();
      v16 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v23;
      v18 = *(_QWORD *)(v23 + 16);
      v17 = *(_QWORD *)(v23 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_23137D374(v17 > 1, v18 + 1, 1);
        v2 = v23;
      }
      v5 += 2;
      *(_QWORD *)(v2 + 16) = v18 + 1;
      v19 = v2 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
    }
    while (v21 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23137D308()
{
  return sub_23137CE74();
}

uint64_t sub_23137D310(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137D46C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23137D32C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137D604(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23137D348(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137DC78(a1, a2, a3, (_QWORD *)*v3, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368]);
  *v3 = result;
  return result;
}

uint64_t sub_23137D374(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23137D7C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23137D390(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137D940(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&qword_255ECAC50, (unint64_t *)&qword_255ECF1F0, MEMORY[0x24BE41798]);
  *v3 = result;
  return result;
}

uint64_t sub_23137D3C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137D940(a1, a2, a3, (_QWORD *)*v3, &qword_255ECF320, (unint64_t *)&qword_255ECD3F8, MEMORY[0x24BE42740]);
  *v3 = result;
  return result;
}

uint64_t sub_23137D3F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23137DB08(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23137D414(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137DC78(a1, a2, a3, (_QWORD *)*v3, &qword_255ECF310, (uint64_t (*)(uint64_t))sub_23137E28C);
  *v3 = result;
  return result;
}

uint64_t sub_23137D440(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23137DC78(a1, a2, a3, (_QWORD *)*v3, &qword_255ECF318, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
  *v3 = result;
  return result;
}

uint64_t sub_23137D46C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECB398, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137D604(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_23137E2F0(0, (unint64_t *)&qword_255ECF250, &qword_255ECE878, (unint64_t *)&qword_255ECF1F0, MEMORY[0x24BE41798]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2313311C4(0, &qword_255ECE878, (unint64_t *)&qword_255ECF1F0, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137D7C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137D940(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v10 = a4[3];
    v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v11 = a2;
    }
  }
  else
  {
    v11 = a2;
  }
  v12 = a4[2];
  if (v11 <= v12)
    v13 = a4[2];
  else
    v13 = v11;
  if (v13)
  {
    sub_2313311C4(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v14 = (_QWORD *)swift_allocObject();
    v15 = j__malloc_size(v14);
    v14[2] = v12;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12)
      memmove(v14 + 4, a4 + 4, 40 * v12);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_2312DF79C(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137DB08(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_2312CF374(0, &qword_255ECF328, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137DC78(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2312D6DD8(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_23137DE68()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23141ABD0;
  if (qword_255ECAAD8 != -1)
    swift_once();
  *(_QWORD *)(inited + 32) = sub_231411374();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_231411374();
  *(_QWORD *)(inited + 56) = v2;
  v3 = sub_231411374();
  v5 = v4;
  sub_231411374();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v5;
  v6 = sub_231411374();
  v8 = v7;
  sub_231411374();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = v6;
  *(_QWORD *)(inited + 88) = v8;
  *(_QWORD *)(inited + 96) = sub_231411374();
  *(_QWORD *)(inited + 104) = v9;
  sub_23137D0C4(inited);
  swift_setDeallocating();
  v10 = MEMORY[0x24BEE0D00];
  swift_arrayDestroy();
  sub_2312CF374(0, &qword_255ECC9C0, v10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_23131C5FC();
  v11 = sub_231414668();
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_23137E1D4()
{
  unint64_t result;

  result = qword_255ECF300;
  if (!qword_255ECF300)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECF300);
  }
  return result;
}

unint64_t sub_23137E230()
{
  unint64_t result;

  result = qword_255ECF308;
  if (!qword_255ECF308)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255ECF308);
  }
  return result;
}

uint64_t sub_23137E274()
{
  uint64_t v0;

  return sub_23137CFFC(*(_QWORD *)(v0 + 16));
}

void sub_23137E28C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECD740)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECD740);
  }
}

void sub_23137E2F0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_2313311C4(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v6 = sub_23141504C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDetailViewController()
{
  uint64_t result;

  result = qword_255ECF330;
  if (!qword_255ECF330)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23137E39C()
{
  return swift_initClassMetadata2();
}

void sub_23137E3D8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  v1 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  v2 = objc_msgSend(v1, sel_view, v5.receiver, v5.super_class);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    sub_23137E498();
  }
  else
  {
    __break(1u);
  }
}

void sub_23137E498()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v2, 0xE000000000000000);

  v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setLargeTitleDisplayMode_, 2);

  v4 = objc_msgSend(v0, sel_navigationItem);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped);
  objc_msgSend(v4, sel_setRightBarButtonItem_, v5);

}

id sub_23137E60C(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_23137E620()
{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  __int128 v7[2];
  uint64_t v8;
  __int128 v9;
  _QWORD v10[4];

  sub_231413354();
  v1 = (void (*)(void))sub_231413360();
  v1();
  sub_23141333C();
  v2 = sub_231412AF0();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return (id)swift_bridgeObjectRelease();
  sub_2312CEA10(0, &qword_255ECF220);
  sub_2312CEA10(0, &qword_255ECF380);
  v4 = 0;
  while (1)
  {
    v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
    swift_unknownObjectRetain_n();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    sub_2314130CC();
    sub_23137E8D4((uint64_t)v7);
LABEL_4:
    if (v3 == ++v4)
      return (id)swift_bridgeObjectRelease();
  }
  sub_2312DFB68(v7, (uint64_t)v10);
  sub_2312CEA5C(v10, v10[3]);
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v6 = result;
    sub_231412EBC();

    sub_2314130CC();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_23137E7D8()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_231413348();
}

id sub_23137E808(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCollectionViewLayout_, a3);
}

id sub_23137E850(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_23137E898()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23137E8CC()
{
  return type metadata accessor for AFibBurdenLifeFactorDetailViewController();
}

uint64_t sub_23137E8D4(uint64_t a1)
{
  uint64_t v2;

  sub_23137E910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23137E910()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF388)
  {
    sub_2312CEA10(255, &qword_255ECF380);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF388);
  }
}

ValueMetadata *type metadata accessor for HighHeartRateNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider;
}

unint64_t sub_23137E98C()
{
  unint64_t result;

  result = qword_25415C1C0;
  if (!qword_25415C1C0)
  {
    result = MEMORY[0x2348DE248](&unk_23141E6B8, &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415C1C0);
  }
  return result;
}

uint64_t sub_23137E9D0()
{
  return sub_2312CCC24(&qword_25415C1A0, (uint64_t (*)(uint64_t))type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler, (uint64_t)&unk_231419168);
}

uint64_t sub_23137E9FC(char a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a1 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_tachycardiaThresholdHeartRate);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
    v2 = (void *)sub_231414BF0();
    v3 = sub_2313F699C(v2, (uint64_t)v1);
    v5 = v4;

    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_231416A30;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 64) = sub_2312D6E84();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = sub_231414698();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231411374();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_231416A30;
    v11 = *MEMORY[0x24BE4C040];
    v12 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v11;
    v13 = sub_231414698();
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 48) = v13;
  }
  else
  {
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    if (qword_25415E610 != -1)
      swift_once();
    *(_QWORD *)(v16 + 32) = sub_231411374();
    *(_QWORD *)(v16 + 40) = v17;
    v18 = sub_231411374();
    v15 = v19;
    *(_QWORD *)(v16 + 48) = v18;
  }
  *(_QWORD *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_23137ED78(char a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((a1 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_tachycardiaThresholdHeartRate);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
    v4 = (void *)sub_231414BF0();
    v5 = sub_2313F699C(v4, (uint64_t)v3);
    v7 = v6;

    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_231416A30;
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v8 + 64) = sub_2312D6E84();
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v7;
    v9 = sub_231414698();
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((a2 & 1) != 0)
    {
      if (qword_255ECAB08 != -1)
        swift_once();
    }
    else if (qword_255ECAB08 != -1)
    {
      swift_once();
    }
    sub_231411374();
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_231416A30;
    v18 = *MEMORY[0x24BE4C040];
    v19 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v17 + 64) = v19;
    *(_QWORD *)(v17 + 32) = v18;
    v20 = sub_231414698();
    v16 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_231418090;
    *(_QWORD *)(v12 + 32) = v9;
    *(_QWORD *)(v12 + 40) = v11;
    *(_QWORD *)(v12 + 48) = v20;
  }
  else
  {
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_231418090;
    if (qword_25415E610 != -1)
      swift_once();
    *(_QWORD *)(v12 + 32) = sub_231411374();
    *(_QWORD *)(v12 + 40) = v13;
    if (qword_255ECAB08 != -1)
      swift_once();
    v14 = sub_231411374();
    v16 = v15;
    *(_QWORD *)(v12 + 48) = v14;
  }
  *(_QWORD *)(v12 + 56) = v16;
  return v12;
}

uint64_t sub_23137F19C@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - v4;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_231411D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313807E4(1);
  if (qword_25415E610 != -1)
    swift_once();
  v13 = (void *)qword_254163058;
  sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE41298], v9);
  v14 = v13;
  sub_231411D64();
  v15 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
  sub_231411DD0();
  v16 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  sub_231411ED8();
  v17 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
}

uint64_t sub_23137F454@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - v6;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313807E4(0);
  if (qword_25415E610 != -1)
    swift_once();
  v12 = (void *)qword_254163058;
  sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE412A0], v8);
  v13 = v12;
  sub_231411D64();
  v14 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_231411DAC();
  sub_231411DD0();
  v15 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  v16 = v20;
  sub_231411ED8();
  v17 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
}

void sub_23137F720(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id v99;

  v98 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v97 = (char *)&v90 - v5;
  v6 = sub_231411CF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v3);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v96 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v90 - v13;
  v15 = sub_231411D1C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v95 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v90 - v19;
  v99 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v99)
  {
    __break(1u);
    goto LABEL_40;
  }
  v21 = sub_2314146BC();
  v23 = v22;
  if (v21 == sub_2314146BC() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_6:
    v26 = sub_231411EF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v98, 1, 1, v26);

    return;
  }
  v25 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_6;
  v27 = sub_2314146BC();
  v29 = v28;
  if (v27 == sub_2314146BC() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v31 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    v48 = sub_2314146BC();
    v50 = v49;
    if (v48 == sub_2314146BC() && v50 == v51)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    v52 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v52 & 1) != 0)
    {
LABEL_20:

      if (qword_25415E610 == -1)
        goto LABEL_12;
      goto LABEL_42;
    }
    v53 = sub_2314146BC();
    v55 = v54;
    if (v53 == sub_2314146BC() && v55 == v56)
    {
      swift_bridgeObjectRelease_n();
LABEL_26:

      v99 = (id)sub_231411DF4();
      v59 = v58;
      if (qword_25415E610 != -1)
        swift_once();
      v94 = sub_231411374();
      sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v60 = swift_allocObject();
      v92 = xmmword_231416A30;
      *(_OWORD *)(v60 + 16) = xmmword_231416A30;
      *(_QWORD *)(v60 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v60 + 64) = sub_2312D6E84();
      *(_QWORD *)(v60 + 32) = v99;
      *(_QWORD *)(v60 + 40) = v59;
      v93 = v59;
      sub_231412A90();
      v94 = sub_231414698();
      v62 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41288], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v92;
      *(_QWORD *)(v63 + 32) = v94;
      *(_QWORD *)(v63 + 40) = v62;
      *(_QWORD *)&v92 = v62;
      sub_231412A90();
      v64 = sub_231411DDC();
      v90 = v65;
      v91 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE411F8], v6);
      sub_231411CE0();
      v66 = v6;
      v32 = qword_254162FF0 + 16;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v66);
      goto LABEL_13;
    }
    v57 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_26;
    v67 = sub_2314146BC();
    v69 = v68;
    if (v67 == sub_2314146BC() && v69 == v70)
    {

      swift_bridgeObjectRelease_n();
LABEL_33:
      v99 = (id)sub_231411E00();
      v73 = v72;
      if (qword_25415E610 != -1)
        swift_once();
      v94 = sub_231411374();
      sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v74 = swift_allocObject();
      v92 = xmmword_231416A30;
      *(_OWORD *)(v74 + 16) = xmmword_231416A30;
      *(_QWORD *)(v74 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v74 + 64) = sub_2312D6E84();
      *(_QWORD *)(v74 + 32) = v99;
      *(_QWORD *)(v74 + 40) = v73;
      v93 = v73;
      sub_231412A90();
      v94 = sub_231414698();
      v76 = v75;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41288], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = v92;
      *(_QWORD *)(v77 + 32) = v94;
      *(_QWORD *)(v77 + 40) = v76;
      *(_QWORD *)&v92 = v76;
      sub_231412A90();
      v78 = sub_231411DDC();
      v90 = v79;
      v91 = v78;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41200], v6);
      sub_231411CE0();
      v80 = v6;
      v32 = qword_254162FF0 + 16;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v80);
      goto LABEL_13;
    }
    v71 = sub_231415070();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) != 0)
      goto LABEL_33;
    if ((sub_231411DB8() & 1) != 0)
    {
      if (qword_25415E610 == -1)
        goto LABEL_41;
    }
    else if (qword_25415E610 == -1)
    {
LABEL_41:
      v81 = sub_231411374();
      v83 = v82;
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41280], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_231416A30;
      *(_QWORD *)(v84 + 32) = v81;
      *(_QWORD *)(v84 + 40) = v83;
      sub_231412A90();
      v85 = sub_231411DC4();
      v90 = v86;
      v91 = v85;
      v94 = MEMORY[0x2348DA7C8](v81, v83);
      *(_QWORD *)&v92 = v87;
      swift_bridgeObjectRelease();
      v99 = (id)sub_231411DC4();
      v93 = v88;
      v89 = objc_msgSend((id)objc_opt_self(), sel_tachycardiaLearnMoreLink);
      sub_2314146BC();

      sub_2314114A0();
      swift_bridgeObjectRelease();
      v32 = qword_254162FF0 + 16;
      goto LABEL_13;
    }
LABEL_40:
    swift_once();
    goto LABEL_41;
  }
LABEL_11:

  if (qword_25415E610 != -1)
LABEL_42:
    swift_once();
LABEL_12:
  v32 = &qword_254162FF0[2];
  v33 = sub_231411374();
  v35 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41280], v15);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_231416A30;
  *(_QWORD *)(v36 + 32) = v33;
  *(_QWORD *)(v36 + 40) = v35;
  sub_231412A90();
  v37 = sub_231411DC4();
  v90 = v38;
  v91 = v37;
  v94 = MEMORY[0x2348DA7C8](v33, v35);
  *(_QWORD *)&v92 = v39;
  swift_bridgeObjectRelease();
  v99 = (id)sub_231411DC4();
  v93 = v40;
  v41 = objc_msgSend((id)objc_opt_self(), sel_tachycardiaLearnMoreLink);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
LABEL_13:
  if (qword_25415E610 != -1)
    swift_once();
  v42 = (void *)v32[11];
  sub_231411374();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v95, v20, v15);
  v43 = v42;
  v44 = v97;
  sub_231411D64();
  v45 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  sub_2312F05B8((uint64_t)v14, v96);
  v46 = v98;
  sub_231411ECC();
  sub_2312F0614((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  v47 = sub_231411EF0();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
}

uint64_t sub_231380500@<X0>(uint64_t a1@<X8>)
{
  return sub_23137F454(a1);
}

void sub_231380508(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_23137F720(a1, a2);
}

uint64_t sub_231380510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE415E8];
  v3 = sub_231411E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_231380554()
{
  sub_2313808E8();
  return sub_2314120DC();
}

uint64_t sub_231380594()
{
  sub_2313808E8();
  return sub_2314120B8();
}

unint64_t sub_2313805D8()
{
  unint64_t result;

  result = qword_25415BFC0;
  if (!qword_25415BFC0)
  {
    result = MEMORY[0x2348DE248](&unk_23141E5E0, &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415BFC0);
  }
  return result;
}

uint64_t sub_231380620()
{
  sub_2313805D8();
  return sub_231412118();
}

uint64_t sub_231380658()
{
  sub_2313805D8();
  return sub_23141210C();
}

unint64_t sub_231380698()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2313806B4()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231418140;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2930]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35B8]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

void sub_2313807E4(char a1)
{
  id v2;
  void *v3;
  id v4;
  unsigned int v5;
  void *v6;
  unsigned __int8 v7;
  char v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_features);

  if (!v4)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v5 = objc_msgSend(v4, sel_seahorse);

  if (v5
    && (v6 = (void *)sub_231413588(),
        v7 = objc_msgSend(v6, sel_areAllRequirementsSatisfied),
        v6,
        (v7 & 1) == 0))
  {
    v8 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_tachycardiaThresholdHeartRate) < *MEMORY[0x24BE4C038];
    sub_23137ED78(a1 & 1, v8);
  }
  else
  {
    sub_23137E9FC(a1 & 1);
  }
}

unint64_t sub_2313808E8()
{
  unint64_t result;

  result = qword_25415C1B8;
  if (!qword_25415C1B8)
  {
    result = MEMORY[0x2348DE248](&unk_23141E658, &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415C1B8);
  }
  return result;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateTileView()
{
  uint64_t result;

  result = qword_255ECF390;
  if (!qword_255ECF390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231380968()
{
  return swift_initClassMetadata2();
}

id sub_2313809A4(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *updated;
  id v15;
  id v16;
  objc_super v18;

  v10 = sub_231412070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = (objc_class *)type metadata accessor for ElectrocardiogramUpdateTileView();
  v18.receiver = a1;
  v18.super_class = updated;
  v15 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a2, a3, a4, a5);
  sub_231380AE8();
  v16 = v15;
  sub_23141207C();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

void sub_231380A90()
{
  sub_231414EE4();
  __break(1u);
}

uint64_t sub_231380AE8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;
  uint64_t result;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  if (v3)
  {
    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_231411374();
    objc_msgSend((id)objc_opt_self(), sel_clearColor, 0xE000000000000000);
    return sub_231412064();
  }
  else
  {
    result = sub_231414EE4();
    __break(1u);
  }
  return result;
}

void sub_231380D14()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_231380D40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramUpdateTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231380D74()
{
  return type metadata accessor for ElectrocardiogramUpdateTileView();
}

void destroy for AFibBurdenPDFChartProvider(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 40))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  if (*(_QWORD *)(a1 + 80))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);

}

uint64_t initializeWithCopy for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a1 + 16;
  v7 = a2 + 16;
  v8 = *(_QWORD *)(a2 + 40);
  v9 = v4;
  v10 = v5;
  if (v8)
  {
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    v12 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v12;
    *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
  }
  v13 = (_OWORD *)(a1 + 56);
  v14 = (_OWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 80);
  if (v15)
  {
    v16 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v15;
    *(_QWORD *)(a1 + 88) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 72);
    *v13 = *v14;
    *(_OWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  v18 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v18;
  v19 = v18;
  return a1;
}

uint64_t assignWithCopy for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void *v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v10)
    {
      sub_2312DB81C((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v11 = *(_OWORD *)(a2 + 16);
  v12 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = v12;
LABEL_8:
  v13 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 56, a2 + 56);
      goto LABEL_15;
    }
LABEL_14:
    v14 = *(_OWORD *)(a2 + 56);
    v15 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v14;
    *(_OWORD *)(a1 + 72) = v15;
    goto LABEL_15;
  }
  if (!v13)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
    goto LABEL_14;
  }
  sub_2312DB81C((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
LABEL_15:
  v16 = *(void **)(a2 + 96);
  v17 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v16;
  v18 = v16;

  return a1;
}

__n128 initializeWithTake for AFibBurdenPDFChartProvider(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AFibBurdenPDFChartProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  if (*(_QWORD *)(a1 + 40))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 80))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v9 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartProvider()
{
  return &type metadata for AFibBurdenPDFChartProvider;
}

uint64_t sub_231381154(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[25] = a1;
  v2[26] = v1;
  sub_2312D1E78(0, &qword_255ECF2E0, (void (*)(uint64_t))MEMORY[0x24BE422B0]);
  v2[27] = swift_task_alloc();
  v3 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8);
  v2[28] = v3;
  v2[29] = *(_QWORD *)(v3 + 64);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v4 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v2[32] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[33] = v5;
  v2[34] = *(_QWORD *)(v5 + 64);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v6 = sub_23141177C();
  v2[37] = v6;
  v2[38] = *(_QWORD *)(v6 - 8);
  v2[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231381258()
{
  _QWORD *v0;
  void **v1;
  id v2;
  void *v3;
  id v4;
  _QWORD *v5;

  v1 = (void **)v0[26];
  v2 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_231411710();

  sub_2314116B0();
  v3 = *v1;
  v0[40] = *v1;
  v4 = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[41] = v5;
  *v5 = v0;
  v5[1] = sub_231381310;
  return sub_2313EFB64(v0[39], (uint64_t)v4, (uint64_t)sub_2313154D4, 0);
}

uint64_t sub_231381310(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23138137C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  _QWORD *v31;
  void *v32;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 336) + 16))
  {
    v11 = *(void **)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 200);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));

    swift_bridgeObjectRelease();
    v13 = sub_231412208();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 208);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 16))(v1, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  v4 = *(void **)(v3 + 96);
  v5 = *(void **)v3;
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = *(_QWORD *)v3;
  *(_QWORD *)(v1 + *(int *)(v2 + 24)) = v4;
  v6 = *(void **)(v3 + 8);
  *(_QWORD *)(v0 + 352) = v6;
  v7 = v4;
  v8 = v5;
  v9 = v6;
  sub_231411704();
  sub_231382E80(v3 + 16, v0 + 120);
  if (*(_QWORD *)(v0 + 144))
  {
    sub_2312CEA5C((_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v10;
    *v10 = v0;
    v10[1] = sub_2313816F0;
    return sub_2314127B4();
  }
  sub_231382F28(v0 + 120);
  *(_QWORD *)(v0 + 384) = 0;
  sub_231382E80(*(_QWORD *)(v0 + 208) + 56, v0 + 160);
  if (*(_QWORD *)(v0 + 184))
  {
    sub_2312CEA5C((_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 184));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v15;
    *v15 = v0;
    v15[1] = sub_231381984;
    return sub_2314127B4();
  }
  sub_231382F28(v0 + 160);
  *(_QWORD *)(v0 + 416) = 0;
  v32 = *(void **)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 272);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 224);
  sub_231382F74(*(_QWORD *)(v0 + 208), v0 + 16);
  sub_2312D6C20(v17, v16, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  sub_2312D6C20(v21, v20, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  v23 = (*(unsigned __int8 *)(v19 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v22 + 80) + v24 + 8) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v0 + 424) = v26;
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v26 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v26 + 96) = v27;
  *(_QWORD *)(v26 + 112) = *(_QWORD *)(v0 + 112);
  v28 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v26 + 32) = v28;
  v29 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v26 + 64) = v29;
  sub_2312EE5FC(v16, v26 + v23, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  *(_QWORD *)(v26 + v24) = v32;
  sub_2312EE5FC(v20, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  v30 = v32;
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v31;
  sub_231411248();
  *v31 = v0;
  v31[1] = sub_231381B9C;
  return sub_2314147D0();
}

uint64_t sub_2313816F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 368) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v4 + 376) = a1;
  return swift_task_switch();
}

uint64_t sub_23138176C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  id v17;
  _QWORD *v18;
  void *v19;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 376);
  sub_231382E80(*(_QWORD *)(v0 + 208) + 56, v0 + 160);
  if (*(_QWORD *)(v0 + 184))
  {
    sub_2312CEA5C((_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 184));
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v1;
    *v1 = v0;
    v1[1] = sub_231381984;
    return sub_2314127B4();
  }
  else
  {
    sub_231382F28(v0 + 160);
    *(_QWORD *)(v0 + 416) = 0;
    v19 = *(void **)(v0 + 352);
    v3 = *(_QWORD *)(v0 + 280);
    v4 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 224);
    sub_231382F74(*(_QWORD *)(v0 + 208), v0 + 16);
    sub_2312D6C20(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    sub_2312D6C20(v8, v7, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    v10 = (*(unsigned __int8 *)(v6 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = (v5 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = (*(unsigned __int8 *)(v9 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v13 = swift_allocObject();
    *(_QWORD *)(v0 + 424) = v13;
    v14 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v13 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v13 + 96) = v14;
    *(_QWORD *)(v13 + 112) = *(_QWORD *)(v0 + 112);
    v15 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v13 + 16) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v13 + 32) = v15;
    v16 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v13 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v13 + 64) = v16;
    sub_2312EE5FC(v3, v13 + v10, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
    *(_QWORD *)(v13 + v11) = v19;
    sub_2312EE5FC(v7, v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
    v17 = v19;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v18;
    sub_231411248();
    *v18 = v0;
    v18[1] = sub_231381B9C;
    return sub_2314147D0();
  }
}

uint64_t sub_231381984(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 408) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_231381A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  _QWORD *v16;
  void *v18;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 160);
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 408);
  v18 = *(void **)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 224);
  sub_231382F74(*(_QWORD *)(v0 + 208), v0 + 16);
  sub_2312D6C20(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  sub_2312D6C20(v6, v5, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (*(unsigned __int8 *)(v7 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 424) = v11;
  v12 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 112) = *(_QWORD *)(v0 + 112);
  v13 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 32) = v13;
  v14 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v11 + 64) = v14;
  sub_2312EE5FC(v1, v11 + v8, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  *(_QWORD *)(v11 + v9) = v18;
  sub_2312EE5FC(v5, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  v15 = v18;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v16;
  sub_231411248();
  *v16 = v0;
  v16[1] = sub_231381B9C;
  return sub_2314147D0();
}

uint64_t sub_231381B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 440) = a1;
  *(_QWORD *)(v3 + 448) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_231381C50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_255ECA9B8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(void **)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 296);
  v13 = *(_QWORD *)(v0 + 312);
  v9 = *(void **)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 200);
  sub_2314121B4();
  v6 = sub_2314121C0();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  sub_231367254(v1);
  swift_bridgeObjectRelease();
  sub_2314121FC();

  sub_2312CEBD4(v3, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_2312CEBD4(v10, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  v7 = sub_231412208();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231381E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231381EB4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 248);

  sub_2312CEBD4(v6, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_2312CEBD4(v5, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231381F8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 248);

  sub_2312CEBD4(v6, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_2312CEBD4(v5, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231382064()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 248);

  sub_2312CEBD4(v6, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider);
  sub_2312CEBD4(v5, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231382128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return swift_task_switch();
}

uint64_t sub_231382148()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  id v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = (void *)v0[16];
  v0[5] = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v0[6] = (uint64_t)&off_250028D08;
  v3 = sub_2312DFCA0(v0 + 2);
  sub_2312D6C20(v1, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPointProviderFactory);
  v0[10] = (uint64_t)&type metadata for AFibBurdenPDFChartFactory;
  v0[11] = (uint64_t)&off_25002BAE0;
  v0[7] = (uint64_t)v2;
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_231382208;
  return sub_2313822F8(v0[13], (uint64_t)(v0 + 2), (uint64_t)(v0 + 7), v0[17]);
}

uint64_t sub_231382208(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 152) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(double *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v6 + 56);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v6 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_231382298()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD **)(v0 + 96);
  *v2 = *(_QWORD *)(v0 + 168);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313822B8()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313822F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[28] = a4;
  v5[29] = v4;
  v5[26] = a2;
  v5[27] = a3;
  v5[25] = a1;
  v6 = sub_231411248();
  v5[30] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[31] = v7;
  v5[32] = *(_QWORD *)(v7 + 64);
  v5[33] = swift_task_alloc();
  v8 = sub_231411608();
  v5[34] = v8;
  v5[35] = *(_QWORD *)(v8 - 8);
  v5[36] = swift_task_alloc();
  sub_2312EDFDC(0, &qword_255ECF410, (uint64_t (*)(uint64_t))sub_23130BA48, (uint64_t (*)(void))sub_23130BBD8, MEMORY[0x24BDB82E0]);
  v5[37] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[38] = v10;
  v5[39] = *(_QWORD *)(v10 + 64);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2313823E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 328);
  v22 = *(_QWORD *)(v0 + 320);
  v24 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 232);
  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v0 + 208);
  sub_231411230();
  sub_23130AD9C(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v16);
  sub_231382F74(v5, v0 + 16);
  sub_2312DF850(v17, v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v6, v19);
  sub_2312DF850(v20, v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v1, v21);
  v7 = (*(unsigned __int8 *)(v18 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v8 = (v23 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (*(unsigned __int8 *)(v24 + 80) + v8 + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v0 + 336) = v10;
  v11 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 112) = *(_QWORD *)(v0 + 112);
  v12 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v10 + 32) = v12;
  v13 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v10 + 64) = v13;
  sub_2312DFB68((__int128 *)(v0 + 120), v10 + 120);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v10 + v7, v4, v19);
  sub_2312DFB68((__int128 *)(v0 + 160), v10 + v8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v10 + v9, v22, v21);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v14;
  *v14 = v0;
  v14[1] = sub_231382614;
  return sub_2314147D0();
}

uint64_t sub_231382614(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_QWORD *)(v4 + 360) = a1;
  return swift_task_switch();
}

uint64_t sub_231382690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = sub_2313AE028(*(_QWORD *)(v0 + 360));
  v6 = v5;
  v7 = v4;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, double))(v0 + 8))(v6, v7);
}

uint64_t sub_23138272C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23138279C(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;

  *(_QWORD *)(v7 + 248) = a6;
  *(_QWORD *)(v7 + 256) = a7;
  *(_QWORD *)(v7 + 232) = a4;
  *(_QWORD *)(v7 + 240) = a5;
  *(_QWORD *)(v7 + 216) = a1;
  *(_QWORD *)(v7 + 224) = a3;
  *(_QWORD *)(v7 + 264) = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  *(_QWORD *)(v7 + 272) = swift_task_alloc();
  *(_QWORD *)(v7 + 280) = swift_task_alloc();
  v9 = sub_231411248();
  *(_QWORD *)(v7 + 288) = v9;
  *(_QWORD *)(v7 + 296) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 304) = swift_task_alloc();
  *(_QWORD *)(v7 + 312) = type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + 320) = swift_task_alloc();
  *(_QWORD *)(v7 + 328) = swift_task_alloc();
  *(_BYTE *)(v7 + 376) = *a2;
  return swift_task_switch();
}

uint64_t sub_231382878()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD, id, uint64_t, uint64_t);

  v1 = **(_QWORD **)(v0 + 224);
  v2 = sub_2313D548C(v1, *(_BYTE *)(v0 + 376));
  *(_QWORD *)(v0 + 336) = v2;
  v3 = sub_2313D573C((uint64_t)v2, v1, *(_BYTE *)(v0 + 376));
  *(_QWORD *)(v0 + 344) = v3;
  v4 = v3;
  v5 = *(_BYTE *)(v0 + 376);
  sub_2312CEA5C(*(_QWORD **)(v0 + 232), *(_QWORD *)(*(_QWORD *)(v0 + 232) + 24));
  sub_2313CB3E0(v5);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_2312CEA5C((_QWORD *)(v0 + 16), v6);
  v10 = (uint64_t (*)(_QWORD, id, uint64_t, uint64_t))(**(int **)(v7 + 8) + *(_QWORD *)(v7 + 8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v8;
  *v8 = v0;
  v8[1] = sub_2313829BC;
  return v10(*(_QWORD *)(v0 + 240), v4, v6, v7);
}

uint64_t sub_2313829BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 368) = a1;
  return swift_task_switch();
}

uint64_t sub_231382A30()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  id v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  __int128 v29;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  __int128 *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 368);
  v39 = (__int128 *)(v0 + 136);
  v3 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(int **)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v41 = *(_BYTE **)(v0 + 280);
  v34 = *(_QWORD *)(v0 + 328);
  v35 = *(_BYTE **)(v0 + 272);
  v33 = *(_QWORD *)(v0 + 264);
  v36 = *(_QWORD **)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 224);
  v40 = *(_QWORD *)(v0 + 216);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v31 = *(unsigned __int8 *)(v0 + 376);
  v9(v5, *(_QWORD *)(v0 + 240), v8);
  v9(v4, v5, v8);
  v42 = v4;
  *(_QWORD *)(v4 + v6[5]) = v1;
  *(_QWORD *)(v4 + v6[6]) = v2;
  *(_QWORD *)(v4 + v6[7]) = v3;
  v10 = v3;
  v38 = v2;
  v11 = sub_231412A90();
  v12 = sub_2313FB388(v11, (uint64_t)v10, v5);
  v14 = v13;
  v16 = v15;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  v17 = (uint64_t *)(v42 + v6[8]);
  *v17 = v12;
  v17[1] = v14;
  v17[2] = v16;
  sub_2312EE5FC(v42, v34, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  v18 = *(void **)(v32 + 8);
  sub_2312D6C20(v34, (uint64_t)&v41[*(int *)(v33 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  *v41 = v31;
  sub_2312D6C20((uint64_t)v41, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHeaderContentProvider);
  v19 = v10;
  v20 = v18;
  sub_231395D94(v35, (uint64_t)v43);
  v21 = (void **)sub_2312CEA5C(v36, v36[3]);
  sub_2312EDFDC(0, &qword_255ECF410, (uint64_t (*)(uint64_t))sub_23130BA48, (uint64_t (*)(void))sub_23130BBD8, MEMORY[0x24BDB82E0]);
  v23 = v22;
  *(_QWORD *)(v0 + 120) = v22;
  *(_QWORD *)(v0 + 128) = sub_2313833D0();
  v24 = sub_2312DFCA0((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v37, v23);
  v25 = *v21;
  v26 = v0 + 56;
  sub_23140F5BC(v31, v34, v0 + 96, v10, v31 != 2, v20, v25, (uint64_t *)(v0 + 56));
  sub_231383438(v0 + 96);
  if (v31)
    v27 = 80.0;
  else
    v27 = 139.0;
  sub_2312DF850(v26, (uint64_t)v39);
  *(_QWORD *)(v0 + 200) = &type metadata for AFibBurdenPDFChartCurrentValueView;
  *(_QWORD *)(v0 + 208) = sub_23138346C();
  v28 = swift_allocObject();
  *(_QWORD *)(v0 + 176) = v28;
  v29 = v43[1];
  *(_OWORD *)(v28 + 16) = v43[0];
  *(_OWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 48) = v44;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v26);
  sub_2312CEBD4((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartHeaderContentProvider);
  sub_2312CEBD4(v34, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_2312DFB68(v39, v40 + 40);
  sub_2312DFB68((__int128 *)(v0 + 176), v40);
  *(double *)(v40 + 80) = v27;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231382DAC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 336);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231382E30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23132724C;
  return sub_231381154(a1);
}

uint64_t sub_231382E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECF3F0, (void (*)(uint64_t))sub_231382ED4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_231382ED4()
{
  unint64_t result;

  result = qword_255ECD418;
  if (!qword_255ECD418)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECD418);
  }
  return result;
}

uint64_t sub_231382F28(uint64_t a1)
{
  uint64_t v2;

  sub_2312D1E78(0, &qword_255ECF3F0, (void (*)(uint64_t))sub_231382ED4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231382F74(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AFibBurdenPDFChartProvider(a2, a1);
  return a2;
}

uint64_t sub_231382FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8) + 80);

  if (*(_QWORD *)(v0 + 56))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  if (*(_QWORD *)(v0 + 96))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  v6 = (v3 + 120) & ~v3;
  v7 = (v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + v5 + 8) & ~v5;

  v9 = sub_23141177C();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v0 + v6, v9);

  v10(v0 + v8, v9);
  return swift_deallocObject();
}

uint64_t sub_2313830CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8) + 80);
  v10 = v8 + v9 + 8;
  v11 = v2 + 16;
  v12 = v2 + v7;
  v13 = *(_QWORD *)(v2 + v8);
  v14 = v2 + (v10 & ~v9);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v15;
  *v15 = v3;
  v15[1] = sub_23132724C;
  v15[16] = v13;
  v15[17] = v14;
  v15[14] = v11;
  v15[15] = v12;
  v15[12] = a1;
  v15[13] = a2;
  return swift_task_switch();
}

uint64_t sub_23138319C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = sub_231411248();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_2312EDFDC(0, &qword_255ECF410, (uint64_t (*)(uint64_t))sub_23130BA48, (uint64_t (*)(void))sub_23130BBD8, MEMORY[0x24BDB82E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);

  if (*(_QWORD *)(v0 + 56))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  if (*(_QWORD *)(v0 + 96))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  v9 = (v3 + 160) & ~v3;
  v10 = (v4 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 120);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v9, v1);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v10);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v10 + v8 + 40) & ~v8), v6);
  return swift_deallocObject();
}

uint64_t sub_2313832D4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v6 = *(_QWORD *)(sub_231411248() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2312EDFDC(0, &qword_255ECF410, (uint64_t (*)(uint64_t))sub_23130BA48, (uint64_t (*)(void))sub_23130BBD8, MEMORY[0x24BDB82E0]);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = v8 + v10 + 40;
  v12 = v2 + 16;
  v13 = v2 + 120;
  v14 = v2 + v7;
  v15 = v2 + v8;
  v16 = v2 + (v11 & ~v10);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v17;
  *v17 = v3;
  v17[1] = sub_2313834D4;
  return sub_23138279C(a1, a2, v12, v13, v14, v15, v16);
}

unint64_t sub_2313833D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECF428;
  if (!qword_255ECF428)
  {
    sub_2312EDFDC(255, &qword_255ECF410, (uint64_t (*)(uint64_t))sub_23130BA48, (uint64_t (*)(void))sub_23130BBD8, MEMORY[0x24BDB82E0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB82F0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECF428);
  }
  return result;
}

uint64_t sub_231383438(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDB7DC8] - 8) + 8))();
  return a1;
}

unint64_t sub_23138346C()
{
  unint64_t result;

  result = qword_255ECF430;
  if (!qword_255ECF430)
  {
    result = MEMORY[0x2348DE248](&unk_23141F188, &type metadata for AFibBurdenPDFChartCurrentValueView);
    atomic_store(result, (unint64_t *)&qword_255ECF430);
  }
  return result;
}

uint64_t sub_2313834B0()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t type metadata accessor for AFibBurdenPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_255ECF440;
  if (!qword_255ECF440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231383514()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23138355C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v10[4];

  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = qword_255ECF438;
  if (*(_QWORD *)(v0 + qword_255ECF438))
  {
    v6 = *(_QWORD *)(v0 + qword_255ECF438);
  }
  else
  {
    sub_231413210();
    sub_231412F40();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2312CEA5C(v10, v10[3]);
    sub_231412EE0();
    type metadata accessor for AFibBurdenSettingsManager();
    v6 = swift_allocObject();
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
      v7 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
    else
      v7 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(v6 + 24) = v7;
    sub_2314146BC();
    sub_231411B84();
    swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_231411B54();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
    *(_QWORD *)(v0 + v5) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_2313836F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, _QWORD, uint64_t);
  char *v41;
  unint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  void (*v48)(char *, unint64_t, uint64_t);
  char v49;
  id v50;
  char *v51;
  char *v52;
  void *v53;
  void (*v55)(uint64_t, char *, uint64_t);
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t ObjectType;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[40];
  _QWORD v67[4];
  uint64_t v68[5];
  uint64_t v69[3];
  uint64_t v70;

  ObjectType = swift_getObjectType();
  v1 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v1);
  v63 = (uint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v55 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v55 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v55 - v14;
  v16 = sub_23141231C();
  v57 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v58 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v55 - v19;
  v65 = v0;
  sub_231413210();
  sub_231412F40();
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v59 = v15;
  v64 = v3;
  v62 = v21;
  v21(v15, v3);
  sub_2312CEA5C(v69, v70);
  v60 = v20;
  sub_231412EEC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v69);
  if (qword_25415DF98 != -1)
    swift_once();
  v22 = sub_231413780();
  sub_2312CE3B8(v22, (uint64_t)qword_254162FF0);
  v23 = sub_231413768();
  v24 = sub_23141498C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v56 = (void *)swift_slowAlloc();
    v69[0] = (uint64_t)v56;
    *(_DWORD *)v25 = 136446466;
    v26 = sub_2314151A8();
    v68[0] = sub_23133180C(v26, v27, v69);
    ObjectType = (uint64_t)v7;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    v68[0] = sub_23133180C(0x2928706154646964, 0xE800000000000000, v69);
    v7 = (char *)ObjectType;
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v23, v24, "[%{public}s.%{public}s]: Presenting onboarding", (uint8_t *)v25, 0x16u);
    v28 = v56;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v28, -1, -1);
    MEMORY[0x2348DE308](v25, -1, -1);
  }

  sub_231413210();
  sub_231412F40();
  v29 = v13;
  v30 = v64;
  v31 = v62;
  v62(v29, v64);
  sub_2312CEA5C(v69, v70);
  v56 = (void *)sub_231412EE0();
  sub_231413210();
  v32 = (void *)sub_231412F4C();
  v31(v10, v30);
  sub_2314149F8();

  sub_231413210();
  sub_231412F40();
  v31(v7, v30);
  sub_2312CEA5C(v67, v67[3]);
  sub_231412EF8();
  v33 = v57;
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
  v35 = v60;
  v34(v63, v60, v16);
  LODWORD(ObjectType) = 1;
  swift_storeEnumTagMultiPayload();
  sub_2312D6DD8(0, &qword_255ECC520, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v36 = *(_QWORD *)(v33 + 72);
  v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_23141A310;
  v39 = v38 + v37;
  v40 = *(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104);
  v40(v39, *MEMORY[0x24BE425F0], v16);
  v41 = (char *)(v39 + v36);
  v40(v39 + v36, *MEMORY[0x24BE42650], v16);
  v42 = v39 + 2 * v36;
  v40(v42, *MEMORY[0x24BE42668], v16);
  v43 = v58;
  v55 = v34;
  v34((uint64_t)v58, (char *)v39, v16);
  sub_2312CCC24(&qword_255ECC528, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], MEMORY[0x24BE42688]);
  LOBYTE(v34) = sub_231414680();
  v44 = *(void (**)(char *, uint64_t))(v33 + 8);
  v45 = v35;
  v46 = v44;
  sub_231412A90();
  v46(v43, v16);
  if ((v34 & 1) == 0)
  {
    v47 = v41;
    v48 = (void (*)(char *, unint64_t, uint64_t))v55;
    v55((uint64_t)v43, v47, v16);
    v49 = sub_231414680();
    v46(v43, v16);
    if ((v49 & 1) != 0)
    {
      LODWORD(ObjectType) = 1;
    }
    else
    {
      v48(v43, v42, v16);
      LODWORD(ObjectType) = sub_231414680();
      v46(v43, v16);
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v50 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
  v51 = sub_2313B5464(v56, (uint64_t)v68, (uint64_t)v66, v63, ObjectType & 1, 2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v67);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v69);
  v52 = v59;
  sub_231413210();
  v53 = (void *)sub_231412F4C();
  v62(v52, v64);
  objc_msgSend(v53, sel_presentViewController_animated_completion_, v51, 1, 0);

  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v16);
}

uint64_t sub_231383E5C(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_255ECF438] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

uint64_t sub_231383F10()
{
  return swift_release();
}

id sub_231383F20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231383F54()
{
  return swift_release();
}

uint64_t sub_231383F64()
{
  return type metadata accessor for AFibBurdenPromotionTileActionHandler();
}

uint64_t sub_231383F70()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  ObjectType = swift_getObjectType();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - v2;
  sub_2312D4A68();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v9 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v12[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23138355C();
  sub_2314115FC();
  v10 = sub_231411608();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 0, 1, v10);
  sub_2313DB8F8((uint64_t)v3);
  swift_release();
  return sub_2312D3CA0((uint64_t)v3);
}

uint64_t sub_231384128()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2313841F8()
{
  return sub_2312CCC24(&qword_255ECF490, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPromotionTileActionHandler, (uint64_t)&unk_23141E810);
}

uint64_t sub_231384224()
{
  return swift_deallocObject();
}

uint64_t sub_231384234()
{
  return sub_231384128();
}

uint64_t sub_23138423C(void *a1, void *a2, char a3, uint64_t a4)
{
  return sub_2313842E4(a1, a2, a3, a4, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_255ECF4A0);
}

uint64_t sub_231384290(void *a1, void *a2, char a3, uint64_t a4)
{
  return sub_2313842E4(a1, a2, a3, a4, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent, &qword_255ECF498);
}

uint64_t sub_2313842E4(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(uint64_t), unint64_t *a6)
{
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  id v49[2];

  v49[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = objc_msgSend(a1, sel_featureAvailabilityProviderForIdentifier_, a2);
  if (v10)
  {
    v49[0] = 0;
    v11 = objc_msgSend(v10, sel_featureOnboardingRecordWithError_, v49);
    if (v11)
    {
      v12 = v11;
      v13 = v49[0];
      v14 = objc_msgSend(v12, sel_onboardingCompletion);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, sel_version);
        v16 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
        v17 = sub_2314146BC();
        sub_2314130CC();

      }
      else if ((a3 & 1) != 0)
      {
        sub_2314130CC();

        return 0;
      }
      else
      {
        v42 = sub_231413768();
        v43 = sub_231414980();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          v45 = (void *)swift_slowAlloc();
          v49[0] = v45;
          *(_DWORD *)v44 = 136446210;
          a5(0);
          sub_231336A4C(0, a6, a5);
          v46 = sub_2314146E0();
          sub_23133180C(v46, v47, (uint64_t *)v49);
          sub_231414CBC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2312C8000, v42, v43, "[%{public}s] analytics event logged but feature not onboarded", v44, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v45, -1, -1);
          MEMORY[0x2348DE308](v44, -1, -1);
        }

        v17 = sub_2314146BC();
        sub_2314130CC();

      }
    }
    else
    {
      v29 = v49[0];
      v30 = (void *)sub_231411410();

      swift_willThrow();
      v31 = v30;
      v32 = v30;
      v33 = sub_231413768();
      v34 = sub_231414974();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v36 = (void *)swift_slowAlloc();
        v49[0] = v36;
        *(_DWORD *)v35 = 136446466;
        a5(0);
        sub_231336A4C(0, a6, a5);
        v37 = sub_2314146E0();
        sub_23133180C(v37, v38, (uint64_t *)v49);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2082;
        v39 = v30;
        sub_2312D3C14();
        v40 = sub_2314146E0();
        sub_23133180C(v40, v41, (uint64_t *)v49);
        sub_231414CBC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2312C8000, v33, v34, "[%{public}s] Error retrieving onboarding record: %{public}s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v36, -1, -1);
        MEMORY[0x2348DE308](v35, -1, -1);

      }
      else
      {

      }
      v17 = sub_2314146BC();

      sub_2314130CC();
    }
  }
  else
  {
    v18 = a2;
    v19 = sub_231413768();
    v20 = sub_231414980();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      v49[0] = v22;
      *(_DWORD *)v21 = 136446466;
      a5(0);
      sub_231336A4C(0, a6, a5);
      v23 = sub_2314146E0();
      sub_23133180C(v23, v24, (uint64_t *)v49);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      v25 = v18;
      v26 = sub_231414B00();
      v28 = v27;

      sub_23133180C(v26, v28, (uint64_t *)v49);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v19, v20, "[%{public}s] No feature availability manager for feature %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v22, -1, -1);
      MEMORY[0x2348DE308](v21, -1, -1);
    }
    else
    {

    }
    return sub_2314146BC();
  }
  return v17;
}

id sub_2313848F8()
{
  return sub_231384AAC(&OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_23138490C);
}

id sub_23138490C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;

  v0 = sub_2314138AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231413930();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_231413900();
  sub_2314138C4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = (void *)sub_231413888();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, sel_setFont_, v9);

  v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  return v8;
}

id sub_231384A98()
{
  return sub_231384AAC(&OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_231384B04);
}

id sub_231384AAC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_231384B04()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1D0]);
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  return v0;
}

void sub_231384BF8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[3];
  _QWORD v7[5];

  v1 = v0 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_2312D1C94(v1, (uint64_t)v7);
  if (v7[3])
  {
    sub_2312D1CE8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = sub_2313848F8();
      v3 = (void *)sub_23141468C();
      objc_msgSend(v2, sel_setText_, v3);

      v4 = sub_231384A98();
      v5 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setText_, v5);

      return;
    }
  }
  else
  {
    sub_2312D1D70((uint64_t)v7);
  }
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v7[0] = 0xD000000000000026;
  v7[1] = 0x8000000231428170;
  sub_2312D1C94(v1, (uint64_t)v6);
  sub_23130E2CC();
  sub_2314146EC();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414EE4();
  __break(1u);
}

uint64_t TitleSubtitleView.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t TitleSubtitleView.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  sub_231384BF8();
  return sub_2312D1D70(a1);
}

void (*TitleSubtitleView.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_231384ED8;
}

void sub_231384ED8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_231384BF8();
}

id TitleSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id TitleSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView____lazy_storage___subtitleLabel] = 0;
  v9 = &v4[OBJC_IVAR____TtC5Heart17TitleSubtitleView_item];
  v10 = (objc_class *)type metadata accessor for TitleSubtitleView();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_23138516C();

  return v11;
}

uint64_t type metadata accessor for TitleSubtitleView()
{
  return objc_opt_self();
}

void sub_23138516C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;

  v1 = sub_2313848F8();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_231384A98();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  sub_2312D3AD4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231418150;
  v5 = sub_2313848F8();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v0, sel_topAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 12.0);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_2313848F8();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v0, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 2.0);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v0, sel_trailingAnchor);
  v14 = sub_2313848F8();
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 2.0);
  *(_QWORD *)(v4 + 48) = v16;
  v17 = sub_231384A98();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_2313848F8();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 6.0);
  *(_QWORD *)(v4 + 56) = v21;
  v22 = sub_231384A98();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v0, sel_leadingAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(_QWORD *)(v4 + 64) = v25;
  v26 = sub_231384A98();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v0, sel_trailingAnchor);
  v29 = objc_msgSend(v27, sel_constraintLessThanOrEqualToAnchor_, v28);

  *(_QWORD *)(v4 + 72) = v29;
  v30 = objc_msgSend(v0, sel_bottomAnchor);
  v31 = sub_231384A98();
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 5.0);
  *(_QWORD *)(v4 + 80) = v33;
  sub_2314147B8();
  sub_2312EA780();
  v34 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v34);

}

id TitleSubtitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313855B4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t sub_231385608(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC5Heart17TitleSubtitleView_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  sub_231384BF8();
  return sub_2312D1D70(a1);
}

void (*sub_231385678(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_231384ED8;
}

char *sub_2313856C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  sub_231385ACC();
  v22 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231385B50();
  v7 = v6;
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231314334();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v28) = 1;
  sub_231413DD4();
  sub_231385BD0(0, (unint64_t *)&unk_25415CFF0, (uint64_t (*)(uint64_t))sub_231314334, (unint64_t *)&qword_25415BAD8, MEMORY[0x24BDB9DF8]);
  v15 = (char *)swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[*(_QWORD *)(*MEMORY[0x24BDB9B10] + *(_QWORD *)v15 + 16)], v14, v11);
  v26 = a1;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    sub_2312D75F0();
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v23 = v7;
    v24 = v3;
    swift_retain();
    sub_231412A90();
    v17 = 0;
    v21 = v15;
    v18 = v22;
    do
    {
      v19 = *(_QWORD *)(v26 + 8 * v17++ + 32);
      v27 = v19;
      v28 = v15;
      swift_retain();
      sub_231413EAC();
      sub_2312CCC24(&qword_25415CD70, (uint64_t (*)(uint64_t))sub_231385ACC, MEMORY[0x24BDB9450]);
      sub_231413EB8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v18);
      sub_231385BD0(0, &qword_25415CFE8, (uint64_t (*)(uint64_t))sub_231385B50, &qword_25415CEC8, MEMORY[0x24BDB96C0]);
      v15 = (char *)swift_allocObject();
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v15[*(_QWORD *)(*MEMORY[0x24BDB9B10] + *(_QWORD *)v15 + 16)], v9, v23);
      swift_release();
      swift_release();
    }
    while (v16 != v17);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v15;
}

_BYTE *sub_2313859BC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result & result[1] & 1;
  return result;
}

char *sub_2313859D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_231414EA8();
    v4 = a1 + 32;
    do
    {
      sub_2312DF850(v4, (uint64_t)v9);
      v5 = v10;
      v6 = v11;
      sub_2312CEA5C(v9, v10);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      sub_231414E9C();
      v4 += 40;
      --v1;
    }
    while (v1);
    v2 = v12;
  }
  v7 = sub_2313856C4(v2);
  swift_bridgeObjectRelease();
  return v7;
}

char *sub_231385AC4()
{
  uint64_t *v0;

  return sub_2313859D4(*v0);
}

void sub_231385ACC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CD78)
  {
    sub_2312D75F0();
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413BE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CD78);
  }
}

void sub_231385B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CED0)
  {
    sub_231385ACC();
    sub_2312CCC24(&qword_25415CD70, (uint64_t (*)(uint64_t))sub_231385ACC, MEMORY[0x24BDB9450]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CED0);
  }
}

void sub_231385BD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_2312CCC24(a4, a3, a5);
    v9 = sub_231413D20();
    if (!v10)
      atomic_store(v9, a2);
  }
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.CardioFitness()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.CardioFitness;
}

uint64_t sub_231385C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23141483C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_231414830();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_231387E24(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23141480C();
    sub_2314130CC();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_231385DA4(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231385E2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v34)(char *, uint64_t, uint64_t);
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v3 = sub_231412C64();
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231412C34();
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231412DB4();
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v1 + 16);
  sub_231412C70();
  v12 = v11;
  sub_231412C88();
  *((_QWORD *)&v43 + 1) = &_s27CardioFitnessChartComponentVN;
  v13 = sub_231388124();
  *(_QWORD *)&v42 = v12;
  *((_QWORD *)&v42 + 1) = 0xD000000000000012;
  v36 = "nboarding state has been reset";
  v44 = v13;
  *(_QWORD *)&v43 = 0x800000023142DFB0;
  v14 = v12;
  sub_231413240();
  swift_bridgeObjectRelease();
  sub_231388168((uint64_t)&v42);
  sub_231412CA0();
  v44 = 0;
  v42 = 0u;
  v43 = 0u;
  sub_231413240();
  swift_bridgeObjectRelease();
  sub_231388168((uint64_t)&v42);
  v41 = a1;
  sub_231412D9C();
  v15 = sub_231412514();
  v17 = v16;
  if (v15 == sub_231412514() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
LABEL_5:
    v35 = v14;
    v20 = _s29CardioFitnessSpinnerComponentCMa();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = 0xD000000000000014;
    v21[3] = 0x800000023142DFD0;
    v21[4] = 0;
    v22 = v14;
    sub_231411AAC();
    v23 = v38;
    sub_231412C28();
    *((_QWORD *)&v43 + 1) = v20;
    v44 = sub_2312CCC24(&qword_255ECF5D8, (uint64_t (*)(uint64_t))_s29CardioFitnessSpinnerComponentCMa, (uint64_t)&unk_231421E00);
    *(_QWORD *)&v42 = v21;
    v24 = *MEMORY[0x24BE43EE8];
    v25 = v37;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
    v34(v5, v24, v3);
    swift_retain();
    v26 = v10;
    sub_231413234();
    v27 = *(void (**)(char *, uint64_t))(v25 + 8);
    v27(v5, v3);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v42);
    *((_QWORD *)&v43 + 1) = v6;
    v44 = MEMORY[0x24BE43EB0];
    v28 = sub_2312DFCA0((uint64_t *)&v42);
    v29 = v8;
    v30 = v39;
    (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(v28, v23, v6);
    v34(v5, *MEMORY[0x24BE43EE0], v3);
    sub_231413234();
    swift_release();
    v27(v5, v3);
    v14 = v35;
    v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    v8 = v29;
    v10 = v26;
    v31(v23, v6);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v42);
    goto LABEL_6;
  }
  v19 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  v32 = sub_231412BB0();

  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
  return v32;
}

uint64_t type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider()
{
  return objc_opt_self();
}

id sub_231386268()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel__quantityTypeWithCode_, 124);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_2313862A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  sub_231388034(0, &qword_255ECF5B8, MEMORY[0x24BDB9D50]);
  v1[3] = v3;
  v1[4] = *(_QWORD *)(v3 - 8);
  v1[5] = swift_task_alloc();
  sub_231388034(0, &qword_255ECF5C0, MEMORY[0x24BDB9D38]);
  v1[6] = v4;
  v1[7] = *(_QWORD *)(v4 - 8);
  v1[8] = swift_task_alloc();
  v1[2] = a1;
  return swift_task_switch();
}

uint64_t sub_231386350()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  sub_231387FBC();
  v5 = v4;
  v6 = sub_2312CCC24(&qword_255ECB478, (uint64_t (*)(uint64_t))sub_231387FBC, MEMORY[0x24BDB9AF8]);
  MEMORY[0x2348DC8EC](v5, v6);
  sub_231413D98();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  *v7 = v0;
  v7[1] = sub_23138642C;
  return sub_231413DA4();
}

uint64_t sub_23138642C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_231386490()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  v1 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2313864F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_231386540(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t aBlock;
  uint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  uint64_t (*v32)(uint64_t);
  _QWORD *v33;

  v3 = *v1;
  v4 = sub_231412DA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412E74();
  sub_231412D9C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v8 = sub_231412514();
  v10 = v9;
  if (v8 == sub_231412514() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_2313868E8(a1, 0xD000000000000036, 0x800000023142DEC0);
      return;
    }
  }
  v14 = (void *)sub_231412E50();
  v15 = (void *)sub_23141468C();
  v16 = (void *)sub_23141468C();
  v17 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v15, v16, 1);

  v18 = (void *)sub_23141468C();
  v32 = nullsub_1;
  v33 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_231386C84;
  v31 = &unk_2500254E0;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 1, v19);
  _Block_release(v19);

  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v14;
  v23[4] = sub_2313868E8;
  v23[5] = 0;
  v23[6] = v3;
  swift_retain();
  v24 = v14;
  v25 = (void *)sub_23141468C();
  v32 = sub_231387D70;
  v33 = v23;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_231386C84;
  v31 = &unk_250025558;
  v26 = _Block_copy(&aBlock);
  swift_release();
  v27 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v25, 2, v26);
  _Block_release(v26);
  swift_release();

  objc_msgSend(v17, sel_addAction_, v27);
  objc_msgSend(v17, sel_addAction_, v21);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v17, 1, 0);

}

uint64_t sub_2313868E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_231414500();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231414524();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313880B0();
  v13 = (void *)sub_231414A94();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_231388118;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250025610;
  v15 = _Block_copy(aBlock);
  sub_231412A90();
  v16 = a1;
  swift_release();
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v12, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_231386AF8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  sub_231412A90();
  v4 = (void *)sub_23141468C();
  v5 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1);

  v7 = (void *)sub_23141468C();
  v10[4] = nullsub_1;
  v10[5] = 0;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_231386C84;
  v10[3] = &unk_250025638;
  v8 = _Block_copy(v10);
  swift_release();
  v9 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v7, 0, v8);
  _Block_release(v8);

  objc_msgSend(v6, sel_addAction_, v9);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v6, 1, 0);

}

void sub_231386C84(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_231386CD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  id v18;
  uint64_t v20;

  sub_2312D6DD8(0, (unint64_t *)&qword_255ED1210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - v12;
  v14 = sub_23141483C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject();
  swift_beginAccess();
  v16 = (void *)MEMORY[0x2348DE3BC](a2 + 16);
  swift_unknownObjectWeakInit();

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a3;
  v17[5] = v15;
  v17[6] = a4;
  v17[7] = a5;
  v17[8] = a6;
  v18 = a3;
  swift_retain();
  sub_231385C60((uint64_t)v13, (uint64_t)&unk_255ECF598, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_231386E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[31] = a7;
  v8[32] = a8;
  v8[29] = a5;
  v8[30] = a6;
  v8[28] = a4;
  return swift_task_switch();
}

uint64_t sub_231386E48()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;

  v0[33] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DD0], v0[28]);
  sub_2314146BC();
  v1 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);
  v0[34] = v3;

  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_231414800();
    objc_msgSend(v4, sel_setValue_forKey_, v5, *MEMORY[0x24BDD4660]);

  }
  v6 = (void *)v0[28];
  sub_2314146BC();
  sub_2314131EC();
  swift_allocObject();
  v7 = v6;
  v0[35] = sub_2314131E0();
  v8 = sub_2314131D4();
  v0[36] = v8;
  v9 = (_QWORD *)swift_task_alloc();
  v0[37] = v9;
  *v9 = v0;
  v9[1] = sub_231386FCC;
  return sub_2313862A4(v8);
}

uint64_t sub_231386FCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_231387038()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[33];
  v0[2] = v0;
  v0[3] = sub_2313870C4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_231385DA4;
  v3[3] = &unk_2500255D0;
  v3[4] = v2;
  objc_msgSend(v1, sel_resetOnboardingWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_2313870C4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_231387124()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  void *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v22;
  uint64_t v23;

  if (qword_25415DF98 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_254162FF0);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v23 = v5;
    *(_DWORD *)v4 = 136446466;
    v6 = sub_2314151A8();
    *(_QWORD *)(v0 + 208) = sub_23133180C(v6, v7, &v23);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    *(_QWORD *)(v0 + 216) = sub_23133180C(0xD00000000000002ELL, 0x800000023142DF80, &v23);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%{public}s]: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = *(_QWORD *)(v0 + 232) + 16;
  swift_beginAccess();
  v9 = MEMORY[0x2348DE3BC](v8);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = *(void **)(v0 + 272);
    v12 = *(void **)(v0 + 264);
    (*(void (**)(uint64_t, unint64_t, unint64_t))(v0 + 240))(v9, 0xD00000000000002ELL, 0x800000023142DF80);

    swift_release();
  }
  else
  {
    v13 = sub_231413768();
    v14 = sub_231414974();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(void **)(v0 + 264);
    if (v15)
    {
      v22 = *(void **)(v0 + 272);
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_2314151A8();
      *(_QWORD *)(v0 + 200) = sub_23133180C(v19, v20, &v23);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "%s: view controller found nil", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v18, -1, -1);
      MEMORY[0x2348DE308](v17, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231387490()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v25;

  v1 = *(void **)(v0 + 264);

  swift_release();
  v2 = *(void **)(v0 + 304);
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  *(_QWORD *)(v0 + 176) = v2;
  v3 = v2;
  sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  v5 = v24;
  v4 = v25;
  if (qword_25415DF98 != -1)
    swift_once();
  v6 = sub_231413780();
  sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
  swift_bridgeObjectRetain_n();
  v7 = sub_231413768();
  v8 = sub_231414974();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_2314151A8();
    *(_QWORD *)(v0 + 184) = sub_23133180C(v11, v12, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_231412A90();
    *(_QWORD *)(v0 + 168) = sub_23133180C(v5, v4, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s]: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v13 = *(_QWORD *)(v0 + 232) + 16;
  swift_beginAccess();
  v14 = MEMORY[0x2348DE3BC](v13);
  if (v14)
  {
    v15 = (void *)v14;
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v0 + 240))(v14, v5, v4);

    swift_bridgeObjectRelease();
    v16 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = sub_231413768();
    v18 = sub_231414974();
    if (!os_log_type_enabled(v17, v18))
    {

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v24 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_2314151A8();
    *(_QWORD *)(v0 + 192) = sub_23133180C(v21, v22, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v17, v18, "%s: view controller found nil", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v20, -1, -1);
    MEMORY[0x2348DE308](v19, -1, -1);

    v16 = v2;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313878B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;

  v1 = *(void **)(v0 + 272);
  v2 = *(void **)(v0 + 264);
  swift_willThrow();

  swift_release();
  v3 = *(void **)(v0 + 312);
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  *(_QWORD *)(v0 + 176) = v3;
  v4 = v3;
  sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  v6 = v25;
  v5 = v26;
  if (qword_25415DF98 != -1)
    swift_once();
  v7 = sub_231413780();
  sub_2312CE3B8(v7, (uint64_t)qword_254162FF0);
  swift_bridgeObjectRetain_n();
  v8 = sub_231413768();
  v9 = sub_231414974();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v25 = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_2314151A8();
    *(_QWORD *)(v0 + 184) = sub_23133180C(v12, v13, &v25);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_231412A90();
    *(_QWORD *)(v0 + 168) = sub_23133180C(v6, v5, &v25);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v8, v9, "[%{public}s]: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    MEMORY[0x2348DE308](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v14 = *(_QWORD *)(v0 + 232) + 16;
  swift_beginAccess();
  v15 = MEMORY[0x2348DE3BC](v14);
  if (v15)
  {
    v16 = (void *)v15;
    (*(void (**)(uint64_t, uint64_t, unint64_t))(v0 + 240))(v15, v6, v5);

    swift_bridgeObjectRelease();
    v17 = v3;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_231413768();
    v19 = sub_231414974();
    if (!os_log_type_enabled(v18, v19))
    {

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v25 = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = sub_2314151A8();
    *(_QWORD *)(v0 + 192) = sub_23133180C(v22, v23, &v25);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v18, v19, "%s: view controller found nil", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v21, -1, -1);
    MEMORY[0x2348DE308](v20, -1, -1);

    v17 = v3;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_231387CE0(void *a1)
{
  sub_231386540(a1);
}

uint64_t sub_231387D00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231387D10()
{
  return swift_release();
}

uint64_t sub_231387D18()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231387D3C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231387D70(uint64_t a1)
{
  uint64_t v1;

  return sub_231386CD4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_231387D80()
{
  uint64_t v0;

  sub_2314130CC();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231387DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23132724C;
  *(_QWORD *)(v3 + 256) = v2;
  *(_OWORD *)(v3 + 224) = v4;
  *(_OWORD *)(v3 + 240) = v5;
  return swift_task_switch();
}

uint64_t sub_231387E24(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, (unint64_t *)&qword_255ED1210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231387E78(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_231387EDC;
  return v6(a1);
}

uint64_t sub_231387EDC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_231387F28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231387F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23132724C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255ECF5A0 + dword_255ECF5A0))(a1, v4);
}

void sub_231387FBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB470)
  {
    sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB470);
  }
}

void sub_231388034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_231387FBC();
    v7 = v6;
    v8 = sub_2312CCC24(&qword_255ECB478, (uint64_t (*)(uint64_t))sub_231387FBC, MEMORY[0x24BDB9AF8]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_2313880B0()
{
  unint64_t result;

  result = qword_25415DF00;
  if (!qword_25415DF00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DF00);
  }
  return result;
}

uint64_t sub_2313880EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_231388118()
{
  uint64_t v0;

  sub_231386AF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_231388124()
{
  unint64_t result;

  result = qword_255ECF5C8;
  if (!qword_255ECF5C8)
  {
    result = MEMORY[0x2348DE248](&unk_231418C9C, &_s27CardioFitnessChartComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECF5C8);
  }
  return result;
}

uint64_t sub_231388168(uint64_t a1)
{
  uint64_t v2;

  sub_2313881A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2313881A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF5D0)
  {
    sub_2312DF79C(255, (unint64_t *)&qword_255ECC5E0);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF5D0);
  }
}

uint64_t sub_231388220()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECDEB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - v2;
  sub_2312D6DD8(0, &qword_255ECB8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = sub_2314112F0();
  sub_2312D6D6C(v7, qword_255ED2D78);
  sub_2312CE3B8(v7, (uint64_t)qword_255ED2D78);
  sub_23141174C();
  v8 = sub_23141177C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v9 = sub_2314117A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_2314112E4();
}

uint64_t sub_2313883E0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECDEB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - v2;
  sub_2312D6DD8(0, &qword_255ECB8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - v5;
  v7 = sub_2314112F0();
  sub_2312D6D6C(v7, qword_255ED2D90);
  sub_2312CE3B8(v7, (uint64_t)qword_255ED2D90);
  sub_23141174C();
  v8 = sub_23141177C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v9 = sub_2314117A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_2314112E4();
}

uint64_t sub_2313885A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t updated;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_231411608();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  MEMORY[0x24BDAC7A8](updated);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138D120(v1, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v12 = 1;
      return v12 & 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_255ECAA00 != -1)
      swift_once();
    v10 = qword_255ED2D90;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_255ECA9F8 != -1)
      swift_once();
    v10 = qword_255ED2D78;
  }
  v11 = sub_2314112F0();
  sub_2312CE3B8(v11, (uint64_t)v10);
  v12 = sub_23138BEEC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12 & 1;
}

uint64_t sub_23138872C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = *v0;
  sub_23138C664();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v2;
  v9 = MEMORY[0x24BDB9AE0];
  sub_23138C730(0, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23138C7A0(&qword_25415DD80, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v9, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_231413E04();
  sub_2312CCC24(&qword_25415DE10, (uint64_t (*)(uint64_t))sub_23138C664, MEMORY[0x24BDB9E90]);
  v10 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_231388870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = MEMORY[0x24BDB9E38];
  sub_23138C730(0, &qword_25415DDF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  swift_retain();
  sub_231413DF8();
  sub_23138C7A0(&qword_25415DDF0, &qword_25415DDF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x24BDB9E58]);
  v8 = sub_231413E7C();
  result = swift_release();
  *a3 = v8;
  return result;
}

void sub_231388960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v8 = objc_msgSend((id)objc_opt_self(), sel_heartRhythmDefaultsDomainWithHealthStore_, *(_QWORD *)(a3 + 32));
  v9 = (void *)sub_23141468C();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a4;
  v12[4] = sub_23138C80C;
  v12[5] = v10;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_231389174;
  v12[3] = &unk_250025748;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_dateForKey_completion_, v9, v11);
  _Block_release(v11);

}

uint64_t sub_231388A78(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  id v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;

  v80 = a3;
  v81 = a5;
  v83 = a2;
  sub_23138C730(0, &qword_25415DF88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v68 - v10);
  v12 = sub_231411608();
  v74 = *(_QWORD *)(v12 - 8);
  v75 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v70 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v76 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v72 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v68 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v68 - v21;
  v23 = sub_231413780();
  v79 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v78 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v68 - v26;
  sub_231412148();
  v73 = a1;
  sub_2312D3870(a1, (uint64_t)v22);
  v28 = sub_231413768();
  v29 = sub_23141498C();
  v30 = os_log_type_enabled(v28, v29);
  v82 = v23;
  v71 = a6;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v69 = v11;
    v32 = v31;
    v33 = swift_slowAlloc();
    v77 = a4;
    v68 = v33;
    v84 = v33;
    v85 = a6;
    *(_DWORD *)v32 = 136446466;
    swift_getMetatypeMetadata();
    v34 = sub_2314146E0();
    v85 = sub_23133180C(v34, v35, &v84);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    sub_2312D3870((uint64_t)v22, (uint64_t)v20);
    v36 = sub_2314146E0();
    v85 = sub_23133180C(v36, v37, &v84);
    v23 = v82;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312D6B98((uint64_t)v22, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    _os_log_impl(&dword_2312C8000, v28, v29, "[%{public}s] Received date of: %{public}s", (uint8_t *)v32, 0x16u);
    v38 = v68;
    swift_arrayDestroy();
    a4 = v77;
    MEMORY[0x2348DE308](v38, -1, -1);
    v39 = v32;
    v11 = v69;
    MEMORY[0x2348DE308](v39, -1, -1);
  }
  else
  {
    sub_2312D6B98((uint64_t)v22, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }

  v40 = *(void (**)(char *, uint64_t))(v79 + 8);
  v40(v27, v23);
  v41 = v83;
  v42 = v80;
  if (v83)
  {
    v43 = v83;
    v44 = v78;
    sub_231412148();
    v45 = v41;
    swift_retain();
    v46 = v41;
    swift_retain();
    v47 = sub_231413768();
    v48 = sub_231414974();
    v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      v50 = swift_slowAlloc();
      LODWORD(v76) = v49;
      v51 = v50;
      v79 = swift_slowAlloc();
      v84 = v79;
      *(_DWORD *)v51 = 136446722;
      v77 = a4;
      v85 = v71;
      swift_getMetatypeMetadata();
      v52 = sub_2314146E0();
      v85 = sub_23133180C(v52, v53, &v84);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2082;
      v54 = v11;
      v55 = *(_QWORD *)(v42 + 16);
      v56 = *(_QWORD *)(v42 + 24);
      sub_231412A90();
      v85 = sub_23133180C(v55, v56, &v84);
      sub_231414CBC();
      swift_release_n();
      v11 = v54;
      v41 = v83;
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 2082;
      v85 = (uint64_t)v41;
      v57 = v41;
      sub_2312D3C14();
      v58 = sub_2314146E0();
      v85 = sub_23133180C(v58, v59, &v84);
      a4 = v77;
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v47, (os_log_type_t)v76, "[%{public}s] Failed to access the key %{public}s with error: %{public}s", (uint8_t *)v51, 0x20u);
      v60 = v79;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v60, -1, -1);
      MEMORY[0x2348DE308](v51, -1, -1);

      v61 = v78;
    }
    else
    {
      swift_release_n();

      v61 = v44;
    }
    v40(v61, v82);
    *v11 = v41;
    swift_storeEnumTagMultiPayload();
    v65 = v41;
    a4(v11);

    return sub_23138C830((uint64_t)v11);
  }
  v62 = v72;
  sub_2312D3870(v73, v72);
  v64 = v74;
  v63 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v62, 1, v75) == 1)
  {
    sub_2312D6B98(v62, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    a4(v11);
    return sub_23138C830((uint64_t)v11);
  }
  v67 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v70, v62, v63);
  (*(void (**)(char *))(v42 + 40))(v67);
  swift_storeEnumTagMultiPayload();
  a4(v11);
  sub_23138C830((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v67, v63);
}

uint64_t sub_231389174(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_2314115D8();
    v10 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_2312D6B98((uint64_t)v8, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

uint64_t sub_23138928C(uint64_t a1)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned int v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  char *v35;
  id v36;
  id v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD v48[2];
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54[2];

  v2 = v1;
  v54[1] = *MEMORY[0x24BDAC8D0];
  v49 = *v1;
  v4 = sub_231413780();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v48 - v7;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v48[1] = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v48 - v16;
  v18 = objc_msgSend((id)objc_opt_self(), sel_heartRhythmDefaultsDomainWithHealthStore_, v2[4]);
  sub_2312D3870(a1, (uint64_t)v17);
  v19 = sub_231411608();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) != 1)
  {
    v21 = (void *)sub_2314115C0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v22 = (void *)sub_23141468C();
  v53 = 0;
  v23 = objc_msgSend(v18, sel_setDate_forKey_error_, v21, v22, &v53);

  v24 = v53;
  if (v23)
  {
    sub_231412148();
    sub_2312D3870(a1, (uint64_t)v15);
    v25 = sub_231413768();
    v26 = sub_23141498C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v54[0] = v28;
      *(_DWORD *)v27 = 136446466;
      v53 = v49;
      swift_getMetatypeMetadata();
      v29 = sub_2314146E0();
      v53 = (id)sub_23133180C(v29, v30, v54);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_2312D3870((uint64_t)v15, (uint64_t)v12);
      v31 = sub_2314146E0();
      v53 = (id)sub_23133180C(v31, v32, v54);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312D6B98((uint64_t)v15, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      _os_log_impl(&dword_2312C8000, v25, v26, "[%{public}s]: Successfully saved date of %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v27, -1, -1);
    }
    else
    {
      sub_2312D6B98((uint64_t)v15, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v8, v52);
  }
  else
  {
    v33 = v24;
    v34 = (void *)sub_231411410();

    swift_willThrow();
    v35 = v50;
    sub_231412148();
    v36 = v34;
    v37 = v34;
    v38 = sub_231413768();
    v39 = sub_231414974();
    if (os_log_type_enabled(v38, (os_log_type_t)v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v54[0] = v41;
      *(_DWORD *)v40 = 136446466;
      v53 = v49;
      swift_getMetatypeMetadata();
      v42 = sub_2314146E0();
      v53 = (id)sub_23133180C(v42, v43, v54);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      v53 = v34;
      v44 = v34;
      sub_2312D3C14();
      v45 = sub_2314146E0();
      v53 = (id)sub_23133180C(v45, v46, v54);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v38, (os_log_type_t)v39, "[%{public}s]: Failed to save date with error: %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v41, -1, -1);
      MEMORY[0x2348DE308](v40, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v35, v52);
  }
}

uint64_t sub_231389830@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;

  v31 = a1;
  v2 = *v1;
  v3 = sub_231413780();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v28[-v5];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = &v28[-v12];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v28[-v14];
  v16 = objc_msgSend((id)objc_opt_self(), sel_heartRhythmDefaultsDomainWithHealthStore_, v1[4]);
  sub_2314149C8();

  sub_231412148();
  sub_2312D3870((uint64_t)v15, (uint64_t)v13);
  v17 = sub_231413768();
  v18 = sub_23141498C();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v29 = v19;
    v21 = v20;
    v30 = swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)v21 = 136446466;
    v35 = v2;
    swift_getMetatypeMetadata();
    v22 = sub_2314146E0();
    v35 = sub_23133180C(v22, v23, v34);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    sub_2312D3870((uint64_t)v13, (uint64_t)v10);
    v24 = sub_2314146E0();
    v35 = sub_23133180C(v24, v25, v34);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312D6B98((uint64_t)v13, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    _os_log_impl(&dword_2312C8000, v17, (os_log_type_t)v29, "[%{public}s]: Successfully fetched date of %{public}s", (uint8_t *)v21, 0x16u);
    v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v26, -1, -1);
    MEMORY[0x2348DE308](v21, -1, -1);
  }
  else
  {
    sub_2312D6B98((uint64_t)v13, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }

  (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v6, v33);
  return sub_2312D38B4((uint64_t)v15, v31);
}

uint64_t sub_231389D3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231389D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  sub_23138CEDC();
  v3 = v2;
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138CF80();
  v7 = v6;
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2314146BC();
  v12 = v11;
  v13 = *(void **)(v1 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v10;
  v14[3] = v12;
  v14[4] = v13;
  v14[5] = sub_23138A424;
  v14[6] = 0;
  v15 = v13;
  v16 = sub_23138872C();
  swift_release();
  v24 = v16;
  swift_retain();
  sub_231413D08();
  v17 = MEMORY[0x24BDB9AE0];
  sub_23138C730(0, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  sub_23138C7A0(&qword_25415DD80, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x24BDB9AF8]);
  sub_231413F30();
  swift_release();
  swift_release();
  sub_231413D08();
  sub_23138D060(0, (unint64_t *)&qword_25415DDA8, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))v17);
  v18 = MEMORY[0x24BDB98F0];
  sub_2312CCC24(&qword_25415DD20, (uint64_t (*)(uint64_t))sub_23138CEDC, MEMORY[0x24BDB98F0]);
  sub_23138CD5C(&qword_25415DDA0, (uint64_t)&qword_25415DDA8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138D060);
  sub_231413F30();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  sub_2312CCC24(&qword_25415DD30, (uint64_t (*)(uint64_t))sub_23138CF80, v18);
  v19 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  return v19;
}

uint64_t sub_23138A018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  id v26;
  uint64_t v28;
  uint64_t *v29;

  v28 = a2;
  v29 = a3;
  sub_2312D6DD8(0, &qword_25415DDC0, type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  sub_23138C730(0, &qword_25415DF68, MEMORY[0x24BDBA1B0]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  v15 = MEMORY[0x24BDAC7A8](updated);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  sub_23138D120(a1, (uint64_t)&v28 - v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23138D120(a1, (uint64_t)v17);
    sub_231413DD4();
    sub_2312D3C14();
    sub_231413DBC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_23138C7A0(&qword_255ECF5F8, &qword_25415DF68, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v20 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v21 = sub_2314146BC();
    v23 = v22;
    v24 = *(void **)(v28 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v21;
    v25[3] = v23;
    v25[4] = v24;
    v25[5] = sub_23138A42C;
    v25[6] = 0;
    v26 = v24;
    v20 = sub_23138872C();
    swift_release();
  }
  *v29 = v20;
  return sub_23138BBB4((uint64_t)v19);
}

uint64_t sub_23138A26C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[16];

  sub_23135E7C8(0, (unint64_t *)&qword_25415DDD8, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDB9DE0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v14[-v5];
  sub_23138D060(0, &qword_25415DF80, MEMORY[0x24BDBA1B0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v14[-v10];
  v14[15] = sub_2313885A0() & 1;
  sub_231413DD4();
  sub_2312D3C14();
  sub_231413DBC();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  sub_23138D0C8();
  v12 = sub_231413E7C();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  *a1 = v12;
  return result;
}

uint64_t sub_23138A3B4()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23138A424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23138A434(a1, a2);
}

uint64_t sub_23138A42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23138A434(a1, a2);
}

uint64_t sub_23138A434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_231411608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23138A494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;

  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v46 = (char *)&v36 - v1;
  sub_23138C474(0, &qword_25415D0A8, MEMORY[0x24BDB9ED8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v36 - v5;
  sub_23138CB10();
  v8 = v7;
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138CBE0();
  v12 = v11;
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138CC84();
  v16 = *(_QWORD *)(v15 - 8);
  v39 = v15;
  v40 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138CDA8();
  v44 = v19;
  v42 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v36 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138CE28();
  v45 = v21;
  v43 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v41 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_23138C474(0, &qword_25415D0C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_231413E28();
  swift_endAccess();
  sub_23138CB88();
  sub_231413E88();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2312D3C14();
  sub_2312CCC24(&qword_25415CDF0, (uint64_t (*)(uint64_t))sub_23138CB10, MEMORY[0x24BDB94C8]);
  sub_231413F84();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  v47 = (id)sub_231389D70();
  sub_23138D060(0, (unint64_t *)&qword_25415DDA8, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2312CCC24(&qword_25415CE38, (uint64_t (*)(uint64_t))sub_23138CBE0, MEMORY[0x24BDB95F8]);
  sub_23138CD5C(&qword_25415DDA0, (uint64_t)&qword_25415DDA8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138D060);
  sub_231413EAC();
  swift_release();
  v23 = v14;
  v24 = v36;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v12);
  sub_2312CCC24(&qword_25415CD80, (uint64_t (*)(uint64_t))sub_23138CC84, MEMORY[0x24BDB9450]);
  v25 = v39;
  sub_231413EB8();
  v26 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v18, v25);
  v27 = (void *)MEMORY[0x2348DDDA4](v26);
  if (!v27)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v27 = (void *)sub_231414A94();
  }
  v47 = v27;
  v28 = sub_231414A7C();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0];
  v30 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v46, 1, 1, v28);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  sub_2312CCC24(&qword_25415CED8, (uint64_t (*)(uint64_t))sub_23138CDA8, MEMORY[0x24BDB96C0]);
  sub_231308748();
  v31 = v41;
  v32 = v44;
  sub_231413F54();
  sub_2312D6B98(v30, (unint64_t *)&unk_25415DEE0, v29);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v32);
  sub_2312CCC24(&qword_25415CF88, (uint64_t (*)(uint64_t))sub_23138CE28, MEMORY[0x24BDB9A08]);
  v33 = v45;
  v34 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v33);
  return v34;
}

_BYTE *sub_23138A9C4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

id sub_23138A9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v28[1] = a2;
  v3 = sub_231413558();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23141357C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231413540();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_231413510();
    v15 = (void *)sub_231413564();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v16 = objc_msgSend(v15, sel_areAllRequirementsSatisfied);

    if (qword_25415DF98 != -1)
      swift_once();
    v17 = sub_231413780();
    sub_2312CE3B8(v17, (uint64_t)qword_254162FF0);
    swift_retain_n();
    v18 = sub_231413768();
    v19 = sub_23141498C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      v30 = v28[0];
      *(_DWORD *)v20 = 136446722;
      sub_2312D6DD8(0, &qword_255ECF5E0, type metadata accessor for ElectrocardiogramUpdateAvailability, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v29 = v21;
      sub_23138C614();
      v22 = sub_2314146E0();
      v29 = sub_23133180C(v22, v23, &v30);
      sub_231414CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      v29 = sub_23133180C(0xD000000000000023, 0x800000023142E0C0, &v30);
      sub_231414CBC();
      *(_WORD *)(v20 + 22) = 2082;
      if ((_DWORD)v16)
        v24 = 1702195828;
      else
        v24 = 0x65736C6166;
      if ((_DWORD)v16)
        v25 = 0xE400000000000000;
      else
        v25 = 0xE500000000000000;
      v29 = sub_23133180C(v24, v25, &v30);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v18, v19, "[%{public}s.%{public}s] User onboarded. (shouldAdvertise: %{public}s).", (uint8_t *)v20, 0x20u);
      v26 = v28[0];
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v26, -1, -1);
      MEMORY[0x2348DE308](v20, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  return v16;
}

uint64_t sub_23138ADC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *inited;
  id v11;
  uint64_t v12;
  _BYTE v13[64];

  v1 = v0;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v13[-v3];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  result = swift_release();
  if ((v13[63] & 1) != 0)
  {
    v6 = sub_2314146BC();
    v8 = v7;
    v9 = *(void **)(v1 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v6;
    inited[3] = v8;
    inited[4] = v9;
    inited[5] = sub_23138A42C;
    inited[6] = 0;
    v11 = v9;
    sub_231389830((uint64_t)v4);

    swift_bridgeObjectRelease();
    v12 = sub_231411608();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v4, 1, v12) == 1)
      sub_23138AF34();
    return sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  return result;
}

uint64_t sub_23138AF34()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *inited;
  id v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _BYTE v19[56];

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v19[-v3];
  v5 = sub_2314146BC();
  v7 = v6;
  v8 = *(void **)(v0 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v5;
  inited[3] = v7;
  inited[4] = v8;
  inited[5] = sub_23138A42C;
  inited[6] = 0;
  v10 = v8;
  sub_2314115FC();
  v11 = sub_231411608();
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v4, 0, 1, v11);
  sub_23138928C((uint64_t)v4);
  swift_release();
  sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_25415D500, v1);
  v13 = sub_2314146BC();
  v15 = v14;
  v16 = (_QWORD *)swift_initStackObject();
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = v10;
  v16[5] = sub_23138A424;
  v16[6] = 0;
  v12(v4, 1, 1, v11);
  v17 = v10;
  sub_23138928C((uint64_t)v4);
  swift_release();
  return sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_25415D500, v1);
}

uint64_t sub_23138B0D8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *inited;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _BYTE v19[56];

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v19[-v3];
  v5 = sub_2314146BC();
  v7 = v6;
  v8 = *(void **)(v0 + 16);
  type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v5;
  inited[3] = v7;
  inited[4] = v8;
  inited[5] = sub_23138A42C;
  inited[6] = 0;
  v10 = sub_231411608();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v4, 1, 1, v10);
  v12 = v8;
  sub_23138928C((uint64_t)v4);
  swift_release();
  sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_25415D500, v1);
  v13 = sub_2314146BC();
  v15 = v14;
  v16 = (_QWORD *)swift_initStackObject();
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = v12;
  v16[5] = sub_23138A424;
  v16[6] = 0;
  v11(v4, 1, 1, v10);
  v17 = v12;
  sub_23138928C((uint64_t)v4);
  swift_release();
  return sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_25415D500, v1);
}

uint64_t sub_23138B274()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v17[1] = *v0;
  sub_23138C87C(0, &qword_25415D040, MEMORY[0x24BDB9E10]);
  v17[3] = *(_QWORD *)(v1 - 8);
  v17[4] = v1;
  MEMORY[0x24BDAC7A8](v1);
  v17[2] = (char *)v17 - v2;
  v3 = sub_231413780();
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  sub_23138C8E4();
  v5 = v4;
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23141357C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v0;
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v12 = sub_231413624();
  sub_231413618();
  v22 = v12;
  sub_2312D6DD8(0, &qword_25415D120, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v14 + v13, v11, v8);
  sub_23138C87C(0, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23138CD5C((unint64_t *)&qword_25415CFB0, (uint64_t)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138C87C);
  sub_231413F3C();
  swift_bridgeObjectRelease();
  sub_2312CCC24(&qword_25415CE18, (uint64_t (*)(uint64_t))sub_23138C8E4, MEMORY[0x24BDB9530]);
  v15 = sub_231413E7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v15;
}

uint64_t sub_23138B760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_context;
  v2 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = v0 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability__isElectrocardiogramUpdateAvailable;
  sub_23138C474(0, &qword_25415D0C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_23138B800()
{
  return type metadata accessor for ElectrocardiogramUpdateAvailability(0);
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability(uint64_t a1)
{
  return sub_2312F19EC(a1, (uint64_t *)&unk_25415C948);
}

void sub_23138B81C()
{
  unint64_t v0;
  unint64_t v1;

  sub_231411A4C();
  if (v0 <= 0x3F)
  {
    sub_23138C474(319, &qword_25415D0C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate()
{
  return objc_opt_self();
}

uint64_t *sub_23138B8E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_231411608();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23138B9D0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_231411608();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23138BA1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_231411608();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23138BAE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23138BBB4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_231411608();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23138BBB4(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_25415D910);
}

void *sub_23138BC04(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_231411608();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23138BCC8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23138BBB4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_231411608();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23138BD9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411608();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23138BE00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23138BE7C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_231413E4C();
}

uint64_t sub_23138BEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BOOL8 v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v0 = sub_23141177C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - v5;
  v7 = sub_231411608();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  sub_23141174C();
  sub_23141171C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2312D6B98((uint64_t)v6, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    sub_2314115FC();
    v15 = sub_2314115E4();
    v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16(v11, v7);
    v14 = v15 == -1;
    v16(v13, v7);
  }
  return v14;
}

uint64_t sub_23138C0C4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v3 = v2;
  sub_23138C474(0, &qword_25415D0A8, MEMORY[0x24BDB9ED8]);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - v9;
  sub_23138C4DC();
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v33 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138C474(0, &qword_25415D0C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  v20 = v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability__isElectrocardiogramUpdateAvailable;
  LOBYTE(v37[0]) = 2;
  sub_23135E7C8(0, &qword_25415DE90, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
  sub_231413E1C();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  sub_231411A10();
  sub_2312CEA5C(v37, v37[3]);
  *(_QWORD *)(v3 + 16) = sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  v21 = v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_context;
  v22 = sub_231411A4C();
  v31 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v21, a1, v22);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Heart35ElectrocardiogramUpdateAvailability_featureStatusManager) = a2;
  v23 = a2;
  v37[0] = sub_23138B274();
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_23138C5BC;
  *(_QWORD *)(v25 + 24) = v24;
  sub_23138C87C(0, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23138CD5C((unint64_t *)&qword_25415CFB0, (uint64_t)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138C87C);
  sub_231413EB8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_231413E28();
  swift_endAccess();
  sub_2312CCC24(&qword_25415CEA0, (uint64_t (*)(uint64_t))sub_23138C4DC, MEMORY[0x24BDB96C0]);
  v26 = v32;
  sub_231413F9C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v26);
  v27 = v35;
  v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v10, v36);
  swift_beginAccess();
  sub_231413E34();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a1, v22);
  return v3;
}

void sub_23138C474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23135E7C8(255, &qword_25415DE90, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_23138C4DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CEA8)
  {
    sub_23138C87C(255, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23135E7C8(255, &qword_25415DE90, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
    sub_23138CD5C((unint64_t *)&qword_25415CFB0, (uint64_t)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138C87C);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CEA8);
  }
}

uint64_t sub_23138C598()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id sub_23138C5BC(uint64_t a1)
{
  uint64_t v1;

  return sub_23138A9D0(a1, v1);
}

uint64_t sub_23138C5C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23138C5E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

unint64_t sub_23138C614()
{
  unint64_t result;

  result = qword_255ECF5E8;
  if (!qword_255ECF5E8)
  {
    sub_2312D6DD8(255, &qword_255ECF5E0, type metadata accessor for ElectrocardiogramUpdateAvailability, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECF5E8);
  }
  return result;
}

void sub_23138C664()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415DE18)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23138C730(255, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23138C7A0(&qword_25415DD80, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231413E10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415DE18);
  }
}

uint64_t sub_23138C6FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23138C720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_231388870(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_23138C728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_231388960(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_23138C730(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t updated;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(255);
    v7 = sub_2312D3C14();
    v8 = a3(a1, updated, v7, MEMORY[0x24BEE3F20]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23138C7A0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23138C730(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23138C7E0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23138C80C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_231388A78(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_23138C818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23138C828()
{
  return swift_release();
}

uint64_t sub_23138C830(uint64_t a1)
{
  uint64_t v2;

  sub_23138C730(0, &qword_25415DF88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23138C87C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_23141357C();
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_23138C8E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CE20)
  {
    sub_23138C9BC();
    sub_23138C87C(255, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312CCC24(&qword_25415CF78, (uint64_t (*)(uint64_t))sub_23138C9BC, MEMORY[0x24BDB9970]);
    sub_23138CD5C((unint64_t *)&qword_25415CFB0, (uint64_t)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138C87C);
    v0 = sub_231413C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CE20);
  }
}

void sub_23138C9BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CF80)
  {
    sub_2312D6DD8(255, &qword_25415D0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23138CA50();
    v0 = sub_231413CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CF80);
  }
}

unint64_t sub_23138CA50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D0D0;
  if (!qword_25415D0D0)
  {
    sub_2312D6DD8(255, &qword_25415D0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25415D0D0);
  }
  return result;
}

unint64_t sub_23138CAB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECF5F0;
  if (!qword_255ECF5F0)
  {
    sub_23138C87C(255, &qword_25415D040, MEMORY[0x24BDB9E10]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9E20], v1);
    atomic_store(result, (unint64_t *)&qword_255ECF5F0);
  }
  return result;
}

void sub_23138CB10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CDF8)
  {
    sub_23138C474(255, &qword_25415D0A8, MEMORY[0x24BDB9ED8]);
    sub_23138CB88();
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CDF8);
  }
}

unint64_t sub_23138CB88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D0A0;
  if (!qword_25415D0A0)
  {
    sub_23138C474(255, &qword_25415D0A8, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9EE8], v1);
    atomic_store(result, (unint64_t *)&qword_25415D0A0);
  }
  return result;
}

void sub_23138CBE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CE40)
  {
    sub_23138CB10();
    sub_2312D3C14();
    sub_2312CCC24(&qword_25415CDF0, (uint64_t (*)(uint64_t))sub_23138CB10, MEMORY[0x24BDB94C8]);
    v0 = sub_231413C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CE40);
  }
}

void sub_23138CC84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CD88)
  {
    sub_23138CBE0();
    sub_23138D060(255, (unint64_t *)&qword_25415DDA8, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312CCC24(&qword_25415CE38, (uint64_t (*)(uint64_t))sub_23138CBE0, MEMORY[0x24BDB95F8]);
    sub_23138CD5C(&qword_25415DDA0, (uint64_t)&qword_25415DDA8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138D060);
    v0 = sub_231413BE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CD88);
  }
}

uint64_t sub_23138CD5C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = a3(255, a2, MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23138CDA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CEE0)
  {
    sub_23138CC84();
    sub_2312CCC24(&qword_25415CD80, (uint64_t (*)(uint64_t))sub_23138CC84, MEMORY[0x24BDB9450]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CEE0);
  }
}

void sub_23138CE28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CF90)
  {
    sub_23138CDA8();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_25415CED8, (uint64_t (*)(uint64_t))sub_23138CDA8, MEMORY[0x24BDB96C0]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CF90);
  }
}

void sub_23138CEDC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415DD28)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23138C730(255, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23138C7A0(&qword_25415DD80, &qword_25415DD88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231413CCC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415DD28);
  }
}

void sub_23138CF80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD38)
  {
    sub_23138D060(255, (unint64_t *)&qword_25415DDA8, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23138CEDC();
    sub_23138CD5C(&qword_25415DDA0, (uint64_t)&qword_25415DDA8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_23138D060);
    sub_2312CCC24(&qword_25415DD20, (uint64_t (*)(uint64_t))sub_23138CEDC, MEMORY[0x24BDB98F0]);
    v0 = sub_231413CCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD38);
  }
}

uint64_t sub_23138D058@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23138A018(a1, v2, a2);
}

void sub_23138D060(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2312D3C14();
    v7 = a3(a1, MEMORY[0x24BEE1328], v6, MEMORY[0x24BEE3F20]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23138D0C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DF70;
  if (!qword_25415DF70)
  {
    sub_23138D060(255, &qword_25415DF80, MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDBA1D0], v1);
    atomic_store(result, (unint64_t *)&qword_25415DF70);
  }
  return result;
}

uint64_t sub_23138D120(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_23138D168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2314119E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411A04();
  sub_2312D6D6C(v4, qword_254162ED0);
  sub_2312CE3B8(v4, (uint64_t)qword_254162ED0);
  sub_2314118FC();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x24BE474E0], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE47910], v0);
  return sub_2314119EC();
}

_QWORD *sub_23138D2C8(__int16 a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  v22 = *v2;
  v5 = sub_231411A4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDFDC(0, (unint64_t *)&qword_25415DE28, (uint64_t (*)(uint64_t))sub_2312E5F88, sub_23132DA08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - v10;
  v12 = OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  if (qword_25415C108 != -1)
    swift_once();
  v13 = sub_231411A04();
  v14 = sub_2312CE3B8(v13, (uint64_t)qword_254162ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((uint64_t)v3 + v12, v14, v13);
  *(_WORD *)((char *)v3 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_result) = a1;
  v15 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_WORD *)(v18 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v16, v8, v5);
  *(_QWORD *)(v18 + v17) = v22;
  sub_2312E5F88();
  sub_23132DA08();
  sub_231413E04();
  sub_23132DA8C();
  v19 = v24;
  v20 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v19);
  v3[2] = v20;
  return v3;
}

uint64_t sub_23138D4F0@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  sub_2312D6DD8(0, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  sub_2312D4A68();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23138D6C4(a1);
  if (qword_25415B6D8 != -1)
    swift_once();
  v17 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  *(_QWORD *)(v18 + 24) = a2;
  v22 = 0;
  sub_231412A90();
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v22 = v16;
  sub_2312E7D6C();
  sub_231413DD4();
  sub_23138EB98();
  v19 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v19;
  return result;
}

uint64_t sub_23138D6C4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[4];

  v82 = a1;
  sub_2312D4A68();
  v88 = v1;
  v79 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v87 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2314119B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v81 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v69 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)&v69 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v69 - v11;
  sub_2312E804C(0);
  v84 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v78 = (uint64_t)&v69 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v69 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v69 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v83 = (char *)&v69 - v24;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DF28, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v26 = *(_QWORD *)(v13 + 72);
  v27 = *(unsigned __int8 *)(v13 + 80);
  v28 = (v27 + 32) & ~v27;
  v75 = v28 + v26;
  v76 = v29;
  v74 = v27 | 7;
  v30 = swift_allocObject();
  v73 = xmmword_231416A30;
  *(_OWORD *)(v30 + 16) = xmmword_231416A30;
  v77 = v28;
  v31 = v30 + v28;
  sub_231411A10();
  sub_2312CEA5C(v90, v90[3]);
  v89 = sub_23138EBF8(0);
  sub_231336A4C(0, &qword_25415C790, (void (*)(uint64_t))sub_23138EBF8);
  sub_2314146E0();
  sub_2314119D4();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v90);
  sub_231412A90();
  sub_2312E8068(v31, (uint64_t)v23);
  sub_2312E8120((uint64_t)v23, (uint64_t)v20);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v33 = v32(v20, 1, v3);
  v85 = v4;
  if (v33 == 1)
  {
    sub_2312CEBD4((uint64_t)v20, (uint64_t (*)(_QWORD))sub_2312E804C);
    v34 = (uint64_t)v83;
    v35 = v3;
  }
  else
  {
    v69 = v32;
    v36 = *(void (**)(void))(v4 + 32);
    ((void (*)(char *, char *, uint64_t))v36)(v70, v20, v3);
    v37 = v71;
    v36();
    v38 = MEMORY[0x24BEE4AF8];
    v35 = v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_2312CDA58(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
    v40 = *(_QWORD *)(v38 + 16);
    v39 = *(_QWORD *)(v38 + 24);
    v34 = (uint64_t)v83;
    if (v40 >= v39 >> 1)
      v38 = sub_2312CDA58(v39 > 1, v40 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v40 + 1;
    ((void (*)(unint64_t, char *, uint64_t))v36)(v38+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v40, v37, v3);
    v32 = v69;
  }
  v41 = v82;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v41 > 1)
  {
    v42 = (uint64_t)v80;
    if (qword_25415B6D8 != -1)
      swift_once();
    v49 = v88;
    v50 = sub_2312CE3B8(v88, (uint64_t)qword_254162EE8);
    v51 = v79;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
    v52 = v87;
    v46(v87, v50, v49);
    *(_QWORD *)(swift_allocObject() + 16) = v86;
    v90[0] = 0;
    sub_231413594();
    swift_release();
    v79 = *(_QWORD *)(v51 + 8);
    ((void (*)(char *, uint64_t))v79)(v52, v49);
    v48 = 1;
  }
  else
  {
    v42 = (uint64_t)v80;
    if (qword_25415B6D8 != -1)
      swift_once();
    v43 = v88;
    v44 = sub_2312CE3B8(v88, (uint64_t)qword_254162EE8);
    v45 = v79;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
    v47 = v87;
    v46(v87, v44, v43);
    *(_QWORD *)(swift_allocObject() + 16) = v86;
    v90[0] = 0;
    sub_231413594();
    swift_release();
    v79 = *(_QWORD *)(v45 + 8);
    ((void (*)(char *, uint64_t))v79)(v47, v43);
    sub_23138E1AC(v82, v34);
    v48 = 0;
  }
  v53 = v85;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v34, v48, 1, v35);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v73;
  v55 = v54 + v77;
  sub_2312E8068(v34, v54 + v77);
  v56 = v78;
  sub_2312E8068(v55, v78);
  sub_2312E8120(v56, v42);
  if (v32((char *)v42, 1, v35) == 1)
  {
    sub_2312CEBD4(v42, (uint64_t (*)(_QWORD))sub_2312E804C);
  }
  else
  {
    v57 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
    v58 = v72;
    v57(v72, v42, v35);
    v57(v81, (uint64_t)v58, v35);
    v59 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v59 = sub_2312CDA58(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
    v61 = *(_QWORD *)(v59 + 16);
    v60 = *(_QWORD *)(v59 + 24);
    if (v61 >= v60 >> 1)
      v59 = sub_2312CDA58(v60 > 1, v61 + 1, 1, v59);
    *(_QWORD *)(v59 + 16) = v61 + 1;
    v57((char *)(v59+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v61), (uint64_t)v81, v35);
    v34 = (uint64_t)v83;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v62 = sub_2314147C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_25415B6D8 != -1)
    swift_once();
  v63 = v88;
  v64 = sub_2312CE3B8(v88, (uint64_t)qword_254162EE8);
  v65 = v87;
  v46(v87, v64, v63);
  v66 = swift_allocObject();
  v67 = v86;
  *(_QWORD *)(v66 + 16) = v62;
  *(_QWORD *)(v66 + 24) = v67;
  v90[0] = 0;
  sub_231412A90();
  sub_231413594();
  swift_release();
  ((void (*)(char *, uint64_t))v79)(v65, v63);
  sub_2312CEBD4(v34, (uint64_t (*)(_QWORD))sub_2312E804C);
  return v62;
}

uint64_t sub_23138DFCC()
{
  uint64_t v0;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v0 = sub_231412A90();
  MEMORY[0x2348DD18C](v0, MEMORY[0x24BE47F58]);
  swift_bridgeObjectRelease();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_23138E0E8()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_23138E1AC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  unsigned int *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a1;
  v3 = sub_231411AE8();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231336A1C(0);
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231411AC4();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v29 - v10;
  v11 = sub_231411D70();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_231411F50();
  v34 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23138EBF8(0);
  v46 = v42;
  v41 = sub_231336A4C(0, &qword_25415C790, (void (*)(uint64_t))sub_23138EBF8);
  v15 = sub_2314146E0();
  v39 = v16;
  v40 = v15;
  if (qword_25415E610 != -1)
    swift_once();
  v44 = v14;
  v45 = a2;
  v17 = (id)qword_254163058;
  sub_231411D64();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  sub_231411374();
  v18 = v44;
  sub_231411F2C();
  v46 = v42;
  sub_2314146E0();
  v19 = (void *)sub_2314118FC();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_231414F08())
      sub_23138EEC4(MEMORY[0x24BEE4AF8]);
  }
  type metadata accessor for AFibFeaturesPromotionTileActionHandler();
  sub_2312CCC24(&qword_255ECF600, (uint64_t (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler, (uint64_t)&unk_231422060);
  sub_23141192C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(_BYTE)v43)
  {
    v20 = (unsigned int *)MEMORY[0x24BE47C80];
    goto LABEL_10;
  }
  if (v43 == 1)
  {
    v20 = (unsigned int *)MEMORY[0x24BE47C78];
LABEL_10:
    v21 = v36;
    v22 = v37;
    v23 = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *v20, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v23);
    v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v30, v21, v23);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v29, v24, v23);
    v25 = v31;
    sub_231411AF4();
    v26 = v33;
    sub_231411944();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  }
  v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v36, 1, 1, v38);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  return sub_2312CEBD4(v28, (uint64_t (*)(_QWORD))sub_231336A1C);
}

uint64_t sub_23138E734()
{
  uint64_t v0;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v0 = sub_231412A90();
  MEMORY[0x2348DD18C](v0, MEMORY[0x24BE47F58]);
  swift_bridgeObjectRelease();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_23138E854()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  swift_getErrorValue();
  sub_2314150D0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_23138E968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23138E9C0()
{
  return type metadata accessor for AFibFeaturesPromotionGenerator();
}

uint64_t type metadata accessor for AFibFeaturesPromotionGenerator()
{
  uint64_t result;

  result = qword_25415C6C8;
  if (!qword_25415C6C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23138EA04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23138EA88@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart30AFibFeaturesPromotionGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23138EAD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23138EB3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_231411A4C();
  return sub_23138D4F0(*(unsigned __int16 *)(v1 + 16), *(_QWORD *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_23138EB90()
{
  return sub_23138DFCC();
}

unint64_t sub_23138EB98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DDC8;
  if (!qword_25415DDC8)
  {
    sub_2312D6DD8(255, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DDC8);
  }
  return result;
}

uint64_t sub_23138EBF8(uint64_t a1)
{
  return sub_231336A4C(a1, &qword_25415C788, (void (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionGenerator);
}

uint64_t sub_23138EC0C()
{
  return swift_deallocObject();
}

uint64_t sub_23138EC1C()
{
  return sub_23138E0E8();
}

uint64_t sub_23138EC50()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23138EC74()
{
  return sub_23138E854();
}

uint64_t sub_23138EC7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23138ECA0()
{
  return sub_23138E734();
}

uint64_t sub_23138ECA8(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_231366FC0();
  if (a2 >> 62)
  {
    v4 = sub_231414F20();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  swift_getObjectType();
  sub_2314130CC();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  result = sub_231414EF0();
  __break(1u);
  return result;
}

uint64_t sub_23138EE80()
{
  return swift_deallocObject();
}

uint64_t sub_23138EE90()
{
  return sub_23138E0E8();
}

void sub_23138EEC4(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_231412A90();
    v5 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_2312EDFDC(0, (unint64_t *)&qword_25415E450, (uint64_t (*)(uint64_t))sub_231366FC0, sub_23138F218, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
      v3 = sub_231414E00();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      sub_231412A90();
      v4 = sub_231414F08();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      v8 = sub_23138ECA8(v7, a1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_231414BFC();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_231366FC0();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_231414C08();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          sub_2314130CC();
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_231414C08();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v39 = a1 + 32;
  v40 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_231414BFC();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_231366FC0();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_231414C08();

      if ((v33 & 1) != 0)
      {
LABEL_23:

        v4 = v41;
        goto LABEL_24;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_231414C08();

        if ((v36 & 1) != 0)
          goto LABEL_23;
      }
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_24:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_23138F218()
{
  return sub_2312CCC24((unint64_t *)&unk_25415DEA0, (uint64_t (*)(uint64_t))sub_231366FC0, MEMORY[0x24BEE5BD8]);
}

uint64_t sub_23138F238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_23135E45C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_23135E7C8(0, &qword_255ECE4E0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231416A30;
  *(_BYTE *)(v9 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2) & 1;
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  sub_231413F3C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2312CCC24(&qword_255ECE4E8, (uint64_t (*)(uint64_t))sub_23135E45C, MEMORY[0x24BDB9530]);
  v10 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t sub_23138F3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  sub_2313085E4(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131BABC();
  v5 = v4;
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138F924();
  v9 = v8;
  v16 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v18 = sub_231413600();
  sub_2313880B0();
  v17 = (id)sub_231414A94();
  v12 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_2312CCC24((unint64_t *)&qword_25415DEF0, (uint64_t (*)(uint64_t))sub_2313880B0, MEMORY[0x24BEE5670]);
  sub_231413F54();
  sub_231320A54((uint64_t)v3);

  swift_release();
  sub_2312CCC24(&qword_255ECC930, (uint64_t (*)(uint64_t))sub_23131BABC, MEMORY[0x24BDB9A08]);
  sub_231413EB8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
  sub_2312CCC24(&qword_255ECF798, (uint64_t (*)(uint64_t))sub_23138F924, MEMORY[0x24BDB96C0]);
  v13 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v9);
  return v13;
}

uint64_t sub_23138F628@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_231413570();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23138F654()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureStatusIsOnboardedProvider()
{
  return objc_opt_self();
}

uint64_t sub_23138F698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v7;

  v1 = sub_23141357C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_2314135E8();
  v5 = sub_231413570();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

uint64_t type metadata accessor for NotOnboardedIsOnboardedProvider()
{
  return objc_opt_self();
}

void destroy for IsAvailableForAvailabilityContextProvider(uint64_t a1)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);

}

uint64_t initializeWithCopy for IsAvailableForAvailabilityContextProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  id v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for IsAvailableForAvailabilityContextProvider(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  sub_2312DB81C(a1, a2);
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for IsAvailableForAvailabilityContextProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for IsAvailableForAvailabilityContextProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IsAvailableForAvailabilityContextProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IsAvailableForAvailabilityContextProvider()
{
  return &type metadata for IsAvailableForAvailabilityContextProvider;
}

uint64_t sub_23138F914()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23138F91C()
{
  return swift_retain();
}

void sub_23138F924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF790)
  {
    sub_23131BABC();
    sub_2312CCC24(&qword_255ECC930, (uint64_t (*)(uint64_t))sub_23131BABC, MEMORY[0x24BDB9A08]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF790);
  }
}

uint64_t sub_23138F9A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 v5;
  uint64_t v7;

  v7 = sub_231413780();
  MEMORY[0x24BDAC7A8](v7);
  v1 = sub_23141357C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C(v0, v0[3]);
  sub_2314135E8();
  v5 = sub_23138FC5C((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5 & 1;
}

id sub_23138FC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v2 = sub_231413780();
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231413540();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231413558();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)&v55 - v12;
  v13 = sub_23141351C();
  v60 = *(_QWORD *)(v13 - 8);
  v61 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23141357C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v56 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v55 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v55 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24((char *)&v55 - v22, a1, v15);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v23, v15);
  if (v25 == *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v23, v15);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v23, v4);
    sub_231413510();
    v26 = sub_23141354C();
    v27 = v4;
    if (*(_QWORD *)(v26 + 16))
    {
      v28 = *(id *)(v64 + 40);
      v29 = sub_231338894();
      if ((v30 & 1) != 0)
      {
        v31 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v29);

        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v31, sel_areAllRequirementsSatisfied);

LABEL_13:
        (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v66);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v27);
        return v32;
      }

    }
    swift_bridgeObjectRelease();
    v32 = 0;
    goto LABEL_13;
  }
  if (v25 == *MEMORY[0x24BE45700])
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v23, v15);
    v34 = v59;
    v33 = v60;
    v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v23, v61);
    v36 = v62;
    sub_231413510();
    v37 = sub_23141354C();
    if (*(_QWORD *)(v37 + 16))
    {
      v38 = *(id *)(v64 + 40);
      v39 = sub_231338894();
      v41 = v65;
      v40 = v66;
      if ((v42 & 1) != 0)
      {
        v43 = *(id *)(*(_QWORD *)(v37 + 56) + 8 * v39);

        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v43, sel_areAllRequirementsSatisfied);

      }
      else
      {

        swift_bridgeObjectRelease();
        v32 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v32 = 0;
      v41 = v65;
      v40 = v66;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v40);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  }
  else
  {
    v44 = v63;
    sub_23141375C();
    v24(v21, a1, v15);
    v45 = sub_231413768();
    v46 = sub_231414974();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v48 = swift_slowAlloc();
      LODWORD(v65) = v47;
      v49 = v48;
      v66 = swift_slowAlloc();
      v68 = v66;
      *(_DWORD *)v49 = 136315394;
      v67 = sub_23133180C(0xD000000000000029, 0x800000023141EB80, &v68);
      sub_231414CBC();
      *(_WORD *)(v49 + 12) = 2080;
      v24(v56, (uint64_t)v21, v15);
      v50 = sub_2314146E0();
      v67 = sub_23133180C(v50, v51, &v68);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(char *, uint64_t))(v16 + 8);
      v52(v21, v15);
      _os_log_impl(&dword_2312C8000, v45, (os_log_type_t)v65, "[%s] Unknown feature status received: %s", (uint8_t *)v49, 0x16u);
      v53 = v66;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v53, -1, -1);
      MEMORY[0x2348DE308](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v63, v58);
    }
    else
    {
      v52 = *(void (**)(char *, uint64_t))(v16 + 8);
      v52(v21, v15);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v58);
    }
    v52(v23, v15);
    return 0;
  }
  return v32;
}

uint64_t sub_2313901F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[3];
  id v21;

  sub_2313085E4(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131BABC();
  v5 = v4;
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23138F924();
  v9 = v8;
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C(v0, v0[3]);
  *(_QWORD *)&v20[0] = sub_231413600();
  sub_2313880B0();
  v21 = (id)sub_231414A94();
  v12 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_2312CCC24((unint64_t *)&qword_25415DEF0, (uint64_t (*)(uint64_t))sub_2313880B0, MEMORY[0x24BEE5670]);
  sub_231413F54();
  sub_231320A54((uint64_t)v3);

  swift_release();
  sub_2313904A4((uint64_t)v0, (uint64_t)v20);
  v13 = (_OWORD *)swift_allocObject();
  v14 = v20[1];
  v13[1] = v20[0];
  v13[2] = v14;
  v13[3] = v20[2];
  sub_2312CCC24(&qword_255ECC930, (uint64_t (*)(uint64_t))sub_23131BABC, MEMORY[0x24BDB9A08]);
  sub_231413EB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  sub_2312CCC24(&qword_255ECF798, (uint64_t (*)(uint64_t))sub_23138F924, MEMORY[0x24BDB96C0]);
  v15 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  return v15;
}

uint64_t sub_2313904A4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  id v6;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a2 + 40) = v5;
  v6 = v5;
  return a2;
}

uint64_t sub_2313904F4()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return swift_deallocObject();
}

id sub_231390520@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = sub_23138FC5C(a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_23139054C(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;

  sub_23139422C(0, &qword_255ECF820, MEMORY[0x24BEE3520]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v12 - v9;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313941A4();
  sub_231415178();
  v12 = a2;
  v13 = a3;
  sub_2313941E8();
  sub_231415034();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23139065C()
{
  sub_2313941A4();
  return sub_231415190();
}

uint64_t sub_231390684()
{
  sub_2313941A4();
  return sub_23141519C();
}

_QWORD *sub_2313906AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  char v5;

  result = sub_231393D8C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_2313906D8(_QWORD *a1)
{
  uint64_t v1;

  return sub_23139054C(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

id sub_2313906F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView);
  }
  else
  {
    sub_23141315C();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v5 = (void *)objc_opt_self();
    v6 = v4;
    v7 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_2313907D0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  objc_class *v9;
  id v10;
  objc_super v12;

  v1 = v0;
  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413750();
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2312C8000, v6, v7, "CardioFitnessRetroComputeTileViewController loaded", v8, 2u);
    MEMORY[0x2348DE308](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = (objc_class *)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  sub_2313909C0();
  v10 = sub_2313906F4();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_23141312C();

  return swift_release();
}

void sub_23139093C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2348DE3BC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_231391234();

  }
}

void sub_2313909C0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  unsigned __int8 v33;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = sub_2313906F4();
  objc_msgSend(v3, sel_addSubview_, v4);

  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231419E70;
  v6 = sub_2313906F4();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_topAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v5 + 32) = v11;
  v12 = sub_2313906F4();
  v13 = objc_msgSend(v12, sel_bottomAnchor);

  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_bottomAnchor);

  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v5 + 40) = v17;
  v18 = sub_2313906F4();
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);

  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v5 + 48) = v23;
  v24 = sub_2313906F4();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v1, sel_view);
  if (v26)
  {
    v27 = v26;
    v28 = (void *)objc_opt_self();
    v29 = objc_msgSend(v27, sel_trailingAnchor);

    v30 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v29);
    *(_QWORD *)(v5 + 56) = v30;
    sub_2314147B8();
    sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
    v31 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_activateConstraints_, v31);

    v32 = sub_231390D24();
    sub_231390EB4(v32, v33);
    sub_231393128();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_231390D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  sub_231310E3C(v1, (uint64_t)&v12);
  v2 = v13;
  if (v13)
  {
    v3 = sub_2312CEA5C(&v12, v13);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    sub_231393B88((uint64_t)&v12);
    v7 = sub_231412F04();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    if (v9 >> 60 != 15)
    {
      sub_2314111C4();
      swift_allocObject();
      sub_2314111B8();
      sub_231394124();
      sub_2314111AC();
      sub_231311034(v7, v9);
      swift_release();
      return v12;
    }
  }
  else
  {
    sub_231393B88((uint64_t)&v12);
  }
  return 0;
}

uint64_t sub_231390EB4(uint64_t result, unsigned __int8 a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  void *v14;
  id v15;

  if (a2 <= 0xFDu)
  {
    if (!(a2 >> 6))
    {
      sub_231392360();
      type metadata accessor for HeartHealthPluginDelegate();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v12 = (void *)objc_opt_self();
      v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_231411374();

      v14 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v14, 0xE000000000000000);

      v9 = sub_2313906F4();
      v15 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_231411374();

      v10 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
      goto LABEL_7;
    }
    if (a2 >> 6 == 1)
    {
      v3 = result;
      v4 = a2 & 1;
      sub_231391F84();
      sub_231392848();
      type metadata accessor for HeartHealthPluginDelegate();
      v5 = swift_getObjCClassFromMetadata();
      v6 = (void *)objc_opt_self();
      v7 = objc_msgSend(v6, sel_bundleForClass_, v5);
      sub_231411374();

      v8 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = sub_2313906F4();
      sub_231393ECC(v3, v4);
      v10 = objc_msgSend(v6, sel_bundleForClass_, v5);
LABEL_7:
      sub_231411374();

      sub_231413138();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_231391234()
{
  void *v0;
  unsigned __int8 v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;

  swift_getObjectType();
  sub_231390D24();
  if (v1 <= 0xFDu)
  {
    if (!(v1 >> 6))
    {
      sub_2313914B8();
      return;
    }
    if (v1 >> 6 == 1)
    {
      sub_2313DA6D0();
      sub_231414704();
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162FF0);
  v9 = v0;
  v3 = sub_231413768();
  v4 = sub_231414980();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136446210;
    sub_231390D24();
    sub_2312CF374(0, &qword_25415B7E8, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = sub_2314146E0();
    sub_23133180C(v7, v8, &v10);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v3, v4, "Tapped on retro compute tile with an unknown configuration state: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);

  }
  else
  {

  }
}

void sub_2313914B8()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t aBlock;
  uint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v4 = objc_msgSend(v2, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v5 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1, 0xE000000000000000);

  v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v10 = v0;
  v11 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v30 = (uint64_t (*)(_QWORD))sub_231393D64;
  v31 = v9;
  aBlock = MEMORY[0x24BDAC760];
  v12 = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_231386C84;
  v29 = &unk_250025A78;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = (void *)objc_opt_self();
  v25 = objc_msgSend(v14, sel_actionWithTitle_style_handler_, v11, 0, v13, 0xE000000000000000);
  _Block_release(v13);

  v15 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v10;
  v24 = v10;
  v17 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v30 = (uint64_t (*)(_QWORD))sub_231393D84;
  v31 = v16;
  aBlock = v12;
  v27 = 1107296256;
  v28 = sub_231386C84;
  v29 = &unk_250025AC8;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = objc_msgSend(v14, sel_actionWithTitle_style_handler_, v17, 0, v18, 0xE000000000000000);
  _Block_release(v18);

  v20 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v21 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v30 = nullsub_1;
  v31 = 0;
  aBlock = v12;
  v27 = 1107296256;
  v28 = sub_231386C84;
  v29 = &unk_250025AF0;
  v22 = _Block_copy(&aBlock);
  swift_release();
  v23 = objc_msgSend(v14, sel_actionWithTitle_style_handler_, v21, 1, v22, 0xE000000000000000);
  _Block_release(v22);

  objc_msgSend(v7, sel_addAction_, v25);
  objc_msgSend(v7, sel_addAction_, v19);
  objc_msgSend(v7, sel_addAction_, v23);
  objc_msgSend(v24, sel_presentViewController_animated_completion_, v7, 1, 0);

}

uint64_t sub_231391A20()
{
  swift_getObjectType();
  sub_2313DA6D0();
  sub_231414704();
  return swift_bridgeObjectRelease();
}

void sub_231391A5C()
{
  void *v0;
  uint64_t ObjectType;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[6];

  ObjectType = swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1428]), sel_init);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = ObjectType;
  v10[4] = sub_231393D20;
  v10[5] = v3;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_231391F30;
  v10[3] = &unk_250025A28;
  v4 = _Block_copy(v10);
  swift_release();
  objc_msgSend(v2, sel_triggerRetrocomputeWithHandler_, v4);
  _Block_release(v4);
  v5 = objc_msgSend(v0, sel_parentViewController);
  if (!v5)
    goto LABEL_6;
  v6 = v5;
  objc_opt_self();
  v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {
LABEL_5:

LABEL_6:
    return;
  }
  v8 = objc_msgSend(v7, sel_collectionView);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel__scrollToTopIfPossible_, 1);

    v2 = v9;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_231391BA8(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *oslog;
  uint64_t v21;

  if (a1)
  {
    v2 = a1;
    if (qword_25415DF98 != -1)
      swift_once();
    v3 = sub_231413780();
    sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
    v4 = a1;
    v5 = a1;
    oslog = sub_231413768();
    v6 = sub_231414974();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v21 = v8;
      *(_DWORD *)v7 = 136446466;
      v9 = sub_2314151A8();
      sub_23133180C(v9, v10, &v21);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      v11 = a1;
      sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
      v12 = sub_2314146E0();
      sub_23133180C(v12, v13, &v21);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, oslog, v6, "[%{public}s] Failed to trigger retrocompute: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v8, -1, -1);
      MEMORY[0x2348DE308](v7, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v14 = sub_231413780();
    sub_2312CE3B8(v14, (uint64_t)qword_254162FF0);
    oslog = sub_231413768();
    v15 = sub_23141498C();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = sub_2314151A8();
      sub_23133180C(v18, v19, &v21);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, oslog, v15, "[%{public}s] Successfully triggered retrocompute", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v17, -1, -1);
      MEMORY[0x2348DE308](v16, -1, -1);

      return;
    }
  }

}

void sub_231391F30(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_231391F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26[7];

  v1 = v0;
  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
  v4 = sub_231413768();
  v5 = sub_23141498C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v26[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_2314151A8();
    v24[0] = sub_23133180C(v8, v9, v26);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "[%{public}s] Resetting available dismissal states", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);
  }

  v10 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  result = sub_231310E3C(v10, (uint64_t)v24);
  v12 = v25;
  if (v25)
  {
    v13 = sub_2312CEA5C(v24, v25);
    v14 = *(_QWORD *)(v12 - 8);
    MEMORY[0x24BDAC7A8](v13);
    v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v14 + 16))(v16);
    v17 = (void *)sub_231412EE0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    sub_231411B84();
    swift_allocObject();
    v18 = v17;
    v19 = sub_231411B54();

    v26[0] = v19;
    v26[1] = 0xD000000000000016;
    v26[2] = 0x80000002314263F0;
    v26[3] = 0xD000000000000016;
    v26[4] = 0x8000000231426410;
    v26[5] = 0xD000000000000020;
    v26[6] = 0x8000000231426430;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = 0;
    v24[0] = sub_2312D8740(0);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = ObjectType;
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    swift_retain();
    v22 = sub_231413EC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(_QWORD *)(v20 + 16) = v22;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231392360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41[8];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231393C28();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v10 = sub_231413780();
  sub_2312CE3B8(v10, (uint64_t)qword_254162FF0);
  v11 = sub_231413768();
  v12 = sub_23141498C();
  v13 = os_log_type_enabled(v11, v12);
  v35 = v7;
  v36 = v6;
  if (v13)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v41[0] = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = sub_2314151A8();
    v39[0] = sub_23133180C(v16, v17, v41);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v11, v12, "[%{public}s] Resetting completed dismissal and last seen dates", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v15, -1, -1);
    MEMORY[0x2348DE308](v14, -1, -1);
  }

  v18 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  result = sub_231310E3C(v18, (uint64_t)v39);
  v20 = v40;
  if (v40)
  {
    v21 = sub_2312CEA5C(v39, v40);
    v22 = *(_QWORD *)(v20 - 8);
    MEMORY[0x24BDAC7A8](v21);
    v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    v25 = (void *)sub_231412EE0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    sub_231411B84();
    swift_allocObject();
    v26 = v25;
    v27 = sub_231411B54();

    v41[0] = v27;
    v41[1] = 0xD000000000000016;
    v41[2] = 0x80000002314263F0;
    v41[3] = 0xD000000000000016;
    v41[4] = 0x8000000231426410;
    v41[5] = 0xD000000000000020;
    v41[6] = 0x8000000231426430;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v39);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = 0;
    v39[0] = sub_2312D8AE4(0);
    v29 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
    v30 = sub_2312D8E88();
    sub_2312D3CA0((uint64_t)v4);
    v38 = v30;
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    sub_231413EAC();
    swift_release();
    swift_release();
    v31 = swift_allocObject();
    v32 = ObjectType;
    *(_QWORD *)(v31 + 16) = v28;
    *(_QWORD *)(v31 + 24) = v32;
    sub_2312CCC24(&qword_255ECF810, (uint64_t (*)(uint64_t))sub_231393C28, MEMORY[0x24BDB9450]);
    swift_retain();
    v33 = v36;
    v34 = sub_231413EC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v33);
    swift_beginAccess();
    *(_QWORD *)(v28 + 16) = v34;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231392848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31[7];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (qword_25415DF98 != -1)
    swift_once();
  v6 = sub_231413780();
  sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v31[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_2314151A8();
    v29[0] = sub_23133180C(v11, v12, v31);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s] Setting last seen date if needed", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }

  v13 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  result = sub_231310E3C(v13, (uint64_t)v29);
  v15 = v30;
  if (v30)
  {
    v16 = sub_2312CEA5C(v29, v30);
    v17 = *(_QWORD *)(v15 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v17 + 16))(v19);
    v20 = (void *)sub_231412EE0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    sub_231411B84();
    swift_allocObject();
    v21 = v20;
    v22 = sub_231411B54();

    v31[0] = v22;
    v31[1] = 0xD000000000000016;
    v31[2] = 0x80000002314263F0;
    v31[3] = 0xD000000000000016;
    v31[4] = 0x8000000231426410;
    v31[5] = 0xD000000000000020;
    v31[6] = 0x8000000231426430;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    sub_2314115FC();
    v24 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 0, 1, v24);
    v25 = sub_2312D9198((uint64_t)v5);
    sub_2312D3CA0((uint64_t)v5);
    v29[0] = v25;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v26 + 24) = ObjectType;
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    swift_retain();
    v27 = sub_231413EC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(_QWORD *)(v23 + 16) = v27;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231392C90(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14[3];

  if (qword_25415DF98 != -1)
    swift_once();
  v6 = sub_231413780();
  sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, a4, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }

  swift_beginAccess();
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = 0;
  return swift_release();
}

void sub_231392E48()
{
  void *v0;
  unsigned __int8 v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;

  sub_231390D24();
  if (v1 <= 0xFDu)
  {
    if (!(v1 >> 6))
    {
      if (qword_25415BB30 != -1)
        swift_once();
      v2 = (void *)qword_254162E68;
      goto LABEL_15;
    }
    if (v1 >> 6 == 1)
    {
      if (qword_25415BB38 != -1)
        swift_once();
      v2 = (void *)qword_254162E70;
LABEL_15:
      v10 = objc_allocWithZone((Class)sub_231411FF8());
      v11 = v2;
      v12 = (void *)sub_231411FEC();
      sub_2312D3C68(0, &qword_255ECF800);
      v13 = (id)sub_2314149D4();
      objc_msgSend(v13, sel_addOperation_, v12);

      goto LABEL_16;
    }
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
  v13 = v0;
  v4 = sub_231413768();
  v5 = sub_231414980();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136446210;
    sub_231390D24();
    sub_2312CF374(0, &qword_25415B7E8, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v8 = sub_2314146E0();
    sub_23133180C(v8, v9, &v14);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "Dismissed a retro compute tile with an unknown configuration state: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);

    return;
  }

LABEL_16:
}

void sub_231393128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v11 = sub_2314146BC();
  v12 = v1;
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  *v2 = v11;
  v2[1] = v12;
  sub_231412A90();
  swift_bridgeObjectRelease();
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  v3 = sub_2313906F4();
  v4 = (void *)sub_23141468C();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  v5 = sub_2313906F4();
  v6 = (void *)sub_231413150();

  sub_231412A90();
  sub_231414728();
  v7 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

  v8 = sub_2313906F4();
  v9 = (void *)sub_231413144();

  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

}

id sub_231393350(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  objc_super v17;

  v6 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView] = 0;
  v8 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail];
  v9 = *MEMORY[0x24BE43138];
  v10 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_showsSeparator] = 0;
  v11 = &v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior];
  v3[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior] = 1;
  v12 = *MEMORY[0x24BE435F8];
  v13 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  if (a2)
  {
    v14 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, v14, a3);

  return v15;
}

id sub_2313934F8(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController____lazy_storage___tileView] = 0;
  v5 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail];
  v6 = *MEMORY[0x24BE43138];
  v7 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_showsSeparator] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior];
  v1[OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior] = 1;
  v9 = *MEMORY[0x24BE435F8];
  v10 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_23139362C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313936FC()
{
  return type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
}

uint64_t type metadata accessor for CardioFitnessRetroComputeTipTileViewController()
{
  uint64_t result;

  result = qword_255ECF7E0;
  if (!qword_255ECF7E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231393740()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231412718();
  if (v1 <= 0x3F)
  {
    result = sub_231412970();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2313937F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  return sub_231310E3C(v3, a1);
}

uint64_t sub_231393840(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_context;
  swift_beginAccess();
  sub_231310D94(a1, v3);
  swift_endAccess();
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    v4 = sub_231390D24();
    sub_231390EB4(v4, v5);
  }
  return sub_231393B88(a1);
}

uint64_t (*sub_2313938C4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23139390C;
}

uint64_t sub_23139390C(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 v6;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(*(id *)(a1 + 24), sel_isViewLoaded);
    if ((result & 1) != 0)
    {
      v5 = sub_231390D24();
      return sub_231390EB4(v5, v6);
    }
  }
  return result;
}

void sub_231393958()
{
  sub_231391234();
}

uint64_t sub_231393978@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_deselectionBehavior, (uint64_t (*)(_QWORD))MEMORY[0x24BE43608], a1);
}

uint64_t sub_23139398C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  sub_231412A90();
  return v2;
}

uint64_t sub_2313939E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_231393A44())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_231393A8C(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_23141EDF0, a1);
  return sub_23141324C();
}

uint64_t sub_231393AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart46CardioFitnessRetroComputeTipTileViewController_detail, (uint64_t (*)(_QWORD))MEMORY[0x24BE43140], a1);
}

uint64_t sub_231393AE4()
{
  char v0;
  unsigned __int8 v1;

  v0 = sub_231390D24();
  if (v1 <= 0xFDu)
  {
    if (v1 >> 6)
    {
      if (v1 >> 6 == 1)
        return 0;
    }
    else if ((v0 & 1) != 0)
    {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_231393B30()
{
  return sub_2312CCC24(&qword_255ECF7F0, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeTipTileViewController, (uint64_t)&unk_23141ECB0);
}

uint64_t sub_231393B5C()
{
  return sub_2312CCC24(&qword_255ECF7F8, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeTipTileViewController, (uint64_t)&unk_23141ED00);
}

uint64_t sub_231393B88(uint64_t a1)
{
  uint64_t v2;

  sub_2313311C4(0, (unint64_t *)&qword_255ED2420, (unint64_t *)&qword_255ECC468, MEMORY[0x24BE443C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231393BE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231393C08(uint64_t a1)
{
  uint64_t v1;

  return sub_231392C90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "[%{public}s] Finished set last seen date");
}

void sub_231393C28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF808)
  {
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413BE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF808);
  }
}

uint64_t sub_231393CAC(uint64_t a1)
{
  uint64_t v1;

  return sub_231392C90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "[%{public}s] Finished reset completed dismissal and last seen dates");
}

uint64_t sub_231393CCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231393CF0(uint64_t a1)
{
  uint64_t v1;

  return sub_231392C90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "[%{public}s] Finished reset available dismissal states");
}

uint64_t sub_231393D10()
{
  return swift_deallocObject();
}

void sub_231393D20(void *a1)
{
  sub_231391BA8(a1);
}

uint64_t sub_231393D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231393D38()
{
  return swift_release();
}

uint64_t sub_231393D40()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_231393D64()
{
  sub_231391A5C();
}

uint64_t sub_231393D84()
{
  return sub_231391A20();
}

_QWORD *sub_231393D8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v10;

  sub_23139422C(0, &qword_255ECF838, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = sub_2312CEA5C(a1, a1[3]);
  sub_2313941A4();
  sub_23141516C();
  if (!v1)
  {
    sub_231394288();
    sub_231414FD4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = v10;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

uint64_t sub_231393ECC(uint64_t a1, char a2)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if ((a2 & 1) != 0 || *(double *)&a1 == 0.0)
  {
    type metadata accessor for HeartHealthPluginDelegate();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v4 = sub_231411374();

    return v4;
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    objc_msgSend(v6, sel_setMaximumFractionDigits_, 1);
    v7 = sub_23132AF38();
    v9 = v8;
    type metadata accessor for HeartHealthPluginDelegate();
    v10 = swift_getObjCClassFromMetadata();
    v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v10);
    sub_231411374();

    sub_2313311C4(0, (unint64_t *)&qword_25415DF58, (unint64_t *)&qword_25415DF90, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_231416A30;
    *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v12 + 64) = sub_2312D6E84();
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v9;
    v13 = sub_231414698();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
}

unint64_t sub_231394124()
{
  unint64_t result;

  result = qword_255ECF818;
  if (!qword_255ECF818)
  {
    result = MEMORY[0x2348DE248](&unk_23141EE90, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration);
    atomic_store(result, (unint64_t *)&qword_255ECF818);
  }
  return result;
}

uint64_t sub_231394168()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23139418C()
{
  uint64_t v0;

  sub_23139093C(v0);
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemConfiguration()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemConfiguration;
}

unint64_t sub_2313941A4()
{
  unint64_t result;

  result = qword_255ECF828;
  if (!qword_255ECF828)
  {
    result = MEMORY[0x2348DE248](&unk_23141EFA4, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECF828);
  }
  return result;
}

unint64_t sub_2313941E8()
{
  unint64_t result;

  result = qword_255ECF830;
  if (!qword_255ECF830)
  {
    result = MEMORY[0x2348DE248](&unk_2314193E8, &type metadata for CardioFitnessRetroComputeFeedItemState);
    atomic_store(result, (unint64_t *)&qword_255ECF830);
  }
  return result;
}

void sub_23139422C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2313941A4();
    v7 = a3(a1, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_231394288()
{
  unint64_t result;

  result = qword_255ECF840;
  if (!qword_255ECF840)
  {
    result = MEMORY[0x2348DE248](&unk_231419410, &type metadata for CardioFitnessRetroComputeFeedItemState);
    atomic_store(result, (unint64_t *)&qword_255ECF840);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23139430C + 4 * byte_23141EBF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23139432C + 4 * byte_23141EBF5[v4]))();
}

_BYTE *sub_23139430C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23139432C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_231394334(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23139433C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_231394344(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23139434C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys;
}

unint64_t sub_23139436C()
{
  unint64_t result;

  result = qword_255ECF848;
  if (!qword_255ECF848)
  {
    result = MEMORY[0x2348DE248](&unk_23141EF7C, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECF848);
  }
  return result;
}

unint64_t sub_2313943B4()
{
  unint64_t result;

  result = qword_255ECF850;
  if (!qword_255ECF850)
  {
    result = MEMORY[0x2348DE248](&unk_23141EEEC, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECF850);
  }
  return result;
}

unint64_t sub_2313943FC()
{
  unint64_t result;

  result = qword_255ECF858;
  if (!qword_255ECF858)
  {
    result = MEMORY[0x2348DE248](&unk_23141EF14, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECF858);
  }
  return result;
}

uint64_t type metadata accessor for ConfirmDetailsDataSource()
{
  uint64_t result;

  result = qword_255ECF880;
  if (!qword_255ECF880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313944A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231394500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[3];
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[2];

  v57 = sub_2314127F0();
  v5 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, (unint64_t *)&unk_25415DEE0, (void (*)(uint64_t))MEMORY[0x24BEE56F0]);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)v45 - v9;
  v10 = sub_23141450C();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231395BAC();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231395CB4();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231411644();
  v58 = *(_QWORD *)(v16 - 8);
  v59 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void (*)(uint64_t))MEMORY[0x24BE43418];
  sub_2312D1E78(0, qword_255ECD770, (void (*)(uint64_t))MEMORY[0x24BE43418]);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v45 - v21;
  *(_QWORD *)(v2 + qword_255ECF860 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + qword_255ECF878) = 0;
  *(_QWORD *)(v2 + qword_255ECF868) = a1;
  v46 = v2;
  *(_QWORD *)(v2 + qword_255ECF870) = a2;
  v23 = sub_231412880();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v45[2] = v23;
  v24(v22, 1, 1);
  swift_retain();
  swift_retain();
  v25 = sub_23136D95C((uint64_t)v22);
  sub_2312F1A20((uint64_t)v22, qword_255ECD770, v19);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v45[0] = a1;
    v45[1] = a2;
    v60[0] = (id)MEMORY[0x24BEE4AF8];
    sub_23137D348(0, v26, 0);
    v27 = 0;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_231411638();
      sub_231411614();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v59);
      sub_2314127E4();
      swift_bridgeObjectRelease();
      v28 = v60[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23137D348(0, v28[2] + 1, 1);
        v28 = v60[0];
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_23137D348(v29 > 1, v30 + 1, 1);
        v28 = v60[0];
      }
      ++v27;
      v28[2] = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v30, v7, v57);
      v60[0] = v28;
    }
    while (v26 != v27);
  }
  swift_bridgeObjectRelease();
  v60[0] = 0;
  v60[1] = (id)0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  strcpy((char *)v60, "MutableArray<");
  HIWORD(v60[1]) = -4864;
  sub_231411638();
  sub_231411614();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v59);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v31 = sub_2314128BC();
  *(_QWORD *)(*(_QWORD *)(v31 + qword_255ECF870) + 24) = &off_250025E20;
  swift_unknownObjectWeakAssign();
  swift_retain();
  v60[0] = (id)sub_23141288C();
  sub_231395C40();
  sub_2312CCC24(&qword_255ECF8E0, (uint64_t (*)(uint64_t))sub_231395C40, MEMORY[0x24BDB9AF8]);
  v32 = v50;
  sub_231413E88();
  swift_release();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v34 = v47;
  v33 = v48;
  v35 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x24BEE5488], v49);
  v36 = (void *)sub_231414AC4();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  v60[0] = v36;
  v37 = sub_231414A7C();
  v38 = (void (*)(uint64_t))MEMORY[0x24BEE56F0];
  v39 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v53, 1, 1, v37);
  sub_2312CCC24(&qword_255ECF8F0, (uint64_t (*)(uint64_t))sub_231395BAC, MEMORY[0x24BDB94C8]);
  sub_231308748();
  v40 = v54;
  v41 = v52;
  sub_231413F54();
  sub_2312F1A20(v39, (unint64_t *)&unk_25415DEE0, v38);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v41);
  swift_allocObject();
  swift_weakInit();
  sub_2312CCC24((unint64_t *)&unk_255ECF8F8, (uint64_t (*)(uint64_t))sub_231395CB4, MEMORY[0x24BDB9A08]);
  v42 = v56;
  v43 = sub_231413F90();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v42);
  *(_QWORD *)(v31 + qword_255ECF878) = v43;
  swift_release();
  return v31;
}

uint64_t sub_231394BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231370144(a1, a2);
}

uint64_t sub_231394BD8(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23136D7A8(a1);
    return swift_release();
  }
  return result;
}

void sub_231394C48()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231394C74()
{
  uint64_t v0;

  sub_2312D2854(v0 + qword_255ECF860);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_231394CC0()
{
  uint64_t v0;

  v0 = sub_2314128F8();
  sub_2312D2854(v0 + qword_255ECF860);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231394D2C()
{
  return type metadata accessor for ConfirmDetailsDataSource();
}

void sub_231394D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16) == 2)
  {
    sub_231412A90();
    sub_2314128D4();
    swift_bridgeObjectRelease();
    sub_231412A90();
    sub_2314128D4();
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x2348DE3BC](v1 + qword_255ECF860);
    if (v2)
    {
      v3 = *(void **)(v2 + qword_255ECC850);
      if (v3)
      {
        v11 = v3;
        objc_msgSend(v11, sel_setEnabled_, sub_23136D370() & 1);
        sub_2314130CC();

      }
      else
      {
        sub_2314130CC();
      }
    }
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v4 = sub_231413780();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    swift_bridgeObjectRetain_n();
    v5 = sub_231413768();
    v6 = sub_231414980();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136446722;
      v9 = sub_2314151A8();
      sub_23133180C(v9, v10, &v12);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_23133180C(0xD000000000000019, 0x800000023142E940, &v12);
      sub_231414CBC();
      *(_WORD *)(v7 + 22) = 2048;
      swift_bridgeObjectRelease();
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s.%{public}s]: Received unexpected number of sections: %ld", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v8, -1, -1);
      MEMORY[0x2348DE308](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_231395040()
{
  sub_2314129B8();
  sub_2314148FC();
  sub_231412A18();
  sub_2314148FC();
  sub_231412658();
  sub_2314148FC();
  sub_231412AD8();
  return sub_2314148FC();
}

void sub_2313950BC(uint64_t a1)
{
  sub_23136DA30(a1);
}

id sub_2313950E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  id result;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  void *v31;
  id v32;
  void (*v33)(_BYTE *, _QWORD);
  void (*v34)(_BYTE *, _QWORD);
  id v35;
  void (*v36)(_BYTE *, _QWORD);
  void (*v37)(_BYTE *, _QWORD);
  uint64_t v38;
  _QWORD v39[2];
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[32];

  v4 = sub_231413930();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231395B0C();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_2314117E8();
  v13 = (char *)v11 + *(int *)(v9 + 48);
  *v11 = v12;
  v14 = sub_23141204C();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v13, v14);
  if (v16 != *MEMORY[0x24BE41FD0])
  {
    if (v16 == *MEMORY[0x24BE41FC8] && v12 == 1)
    {
      type metadata accessor for HeartHealthPluginDelegate();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_231411374();

      v21 = MEMORY[0x24BEBC5F0];
      *(_QWORD *)(a2 + 24) = v4;
      *(_QWORD *)(a2 + 32) = v21;
      sub_2312DFCA0((uint64_t *)a2);
      sub_231413870();
      sub_231413924();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    goto LABEL_9;
  }
  if (v12 != 1)
  {
    if (!v12)
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
LABEL_9:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return (id)sub_231395B70((uint64_t)v11);
  }
  v41 = v5;
  type metadata accessor for HeartHealthPluginDelegate();
  v22 = swift_getObjCClassFromMetadata();
  v23 = (void *)objc_opt_self();
  v43 = v4;
  v24 = v23;
  v25 = objc_msgSend(v23, sel_bundleForClass_, v22);
  v42 = sub_231411374();
  v27 = v26;

  v28 = objc_msgSend(v24, sel_bundleForClass_, v22);
  v39[1] = sub_231411374();

  v29 = MEMORY[0x24BEBC5F0];
  *(_QWORD *)(a2 + 24) = v43;
  *(_QWORD *)(a2 + 32) = v29;
  v40 = sub_2312DFCA0((uint64_t *)a2);
  sub_231413864();
  sub_231412A90();
  v42 = v27;
  sub_231413924();
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE248], 1024);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v30 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
  sub_231413894();
  v30(v44, 0);
  v31 = (void *)objc_opt_self();
  v32 = objc_msgSend(v31, sel_labelColor);
  v33 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
  sub_2314138A0();
  v33(v44, 0);
  sub_231412A90();
  sub_23141387C();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  sub_231414B9C();
  v34 = (void (*)(_BYTE *, _QWORD))sub_2314138D0();
  sub_231413894();
  v34(v44, 0);
  v35 = objc_msgSend(v31, sel_labelColor);
  v36 = (void (*)(_BYTE *, _QWORD))sub_2314138D0();
  sub_2314138A0();
  v36(v44, 0);
  v37 = (void (*)(_BYTE *, _QWORD))sub_2314138E8();
  *(_QWORD *)(v38 + 16) = 0x4032000000000000;
  v37(v44, 0);
  sub_23141390C();
  (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 32))(v40, v7, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v13, v14);
}

id sub_231395650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313950E8(a1, a2);
}

char *sub_231395664(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  int v15;
  char *v16;
  uint64_t ObjCClassFromMetadata;
  void *v18;
  id v19;
  id v20;
  char *result;
  void (*v22)(_BYTE *, _QWORD);
  void *v23;
  id v24;
  void (*v25)(_BYTE *, _QWORD);
  void (*v26)(_BYTE *, _QWORD);
  id v27;
  void (*v28)(_BYTE *, _QWORD);
  void (*v29)(_BYTE *, _QWORD);
  uint64_t v30;
  id v31;
  uint64_t v32;
  _BYTE v33[32];

  v32 = sub_231413930();
  v4 = *(_QWORD *)(v32 - 8);
  v5 = MEMORY[0x24BDAC7A8](v32);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v33[-v8];
  v10 = sub_23141204C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 88))(v13, v10);
  v15 = *MEMORY[0x24BE41FD0];
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  v16 = 0;
  if (v14 != v15)
    return v16;
  if (sub_2314117E8())
    return 0;
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v20 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  sub_231413864();
  sub_231412A90();
  sub_231413924();
  result = (char *)objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE248], 1024);
  if (result)
  {
    v22 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
    sub_231413894();
    v22(v33, 0);
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_labelColor);
    v25 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
    sub_2314138A0();
    v25(v33, 0);
    sub_231412A90();
    sub_23141387C();
    sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
    sub_231414B9C();
    v26 = (void (*)(_BYTE *, _QWORD))sub_2314138D0();
    sub_231413894();
    v26(v33, 0);
    v27 = objc_msgSend(v23, sel_labelColor);
    v28 = (void (*)(_BYTE *, _QWORD))sub_2314138D0();
    sub_2314138A0();
    v28(v33, 0);
    v29 = (void (*)(_BYTE *, _QWORD))sub_2314138E8();
    *(_QWORD *)(v30 + 16) = 0x4032000000000000;
    v29(v33, 0);
    sub_23141390C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v9, v7, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = objc_allocWithZone((Class)type metadata accessor for ConfirmDetailsLearnMoreView());
    v16 = (char *)sub_2312E9E0C((uint64_t)v9, a2);
    *(_QWORD *)&v16[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate + 8] = &off_250025E10;
    swift_unknownObjectWeakAssign();
    return v16;
  }
  __break(1u);
  return result;
}

char *sub_231395AEC(uint64_t a1, double a2)
{
  return sub_231395664(a1, a2);
}

void sub_231395B0C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECD6F8)
  {
    sub_23141204C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECD6F8);
  }
}

uint64_t sub_231395B70(uint64_t a1)
{
  uint64_t v2;

  sub_231395B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_231395BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF8D0)
  {
    sub_231395C40();
    sub_231412880();
    sub_2312CCC24(&qword_255ECF8E0, (uint64_t (*)(uint64_t))sub_231395C40, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF8D0);
  }
}

void sub_231395C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF8D8)
  {
    sub_2312D1E78(255, qword_255ECD770, (void (*)(uint64_t))MEMORY[0x24BE43418]);
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF8D8);
  }
}

void sub_231395CB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF8E8)
  {
    sub_231395BAC();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ECF8F0, (uint64_t (*)(uint64_t))sub_231395BAC, MEMORY[0x24BDB94C8]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF8E8);
  }
}

uint64_t sub_231395D68()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231395D8C(uint64_t a1)
{
  return sub_231394BD8(a1);
}

uint64_t sub_231395D94@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v34 = a2;
  v30 = sub_231412F7C();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231412F88();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23132F6C4();
  v8 = 0;
  v9 = 0;
  if (!*a1)
  {
    if (qword_255ECA9B0 != -1)
      swift_once();
    v10 = (void *)qword_255ED2C08;
    type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
    v11 = (void *)sub_2314111F4();
    v12 = objc_msgSend(v10, sel_stringFromDateInterval_, v11);

    if (v12)
    {
      v8 = sub_2314146BC();
      v9 = v13;

    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v28[1] = v8;
  v33 = a1;
  v14 = sub_231412A90();
  MEMORY[0x2348DAC60](v14);
  v15 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  v16 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_231396534();
  v17 = (void *)sub_23141462C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);
  swift_bridgeObjectRelease();

  v19 = MEMORY[0x24BE454E0];
  if (v18)
  {
    *((_QWORD *)&v42 + 1) = sub_231396584();
    v43 = v19;
    *(_QWORD *)&v41 = v18;
  }
  else
  {
    v43 = 0;
    v41 = 0u;
    v42 = 0u;
  }
  v40 = 0;
  v20 = 0uLL;
  v38 = 0u;
  v39 = 0u;
  if (!v9)
    goto LABEL_13;
  v21 = sub_231412A90();
  MEMORY[0x2348DAC6C](v21);
  v22 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  v23 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_23141462C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);
  swift_bridgeObjectRelease();

  v20 = 0uLL;
  if (v25)
  {
    *((_QWORD *)&v36 + 1) = sub_231396584();
    v37 = v19;
    *(_QWORD *)&v35 = v25;
  }
  else
  {
LABEL_13:
    v37 = 0;
    v35 = v20;
    v36 = v20;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v4, *MEMORY[0x24BE44558], v30);
  v26 = sub_231412F70();
  MEMORY[0x24BDAC7A8](v26);
  v28[-2] = v7;
  *((_QWORD *)&v42 + 1) = sub_231413504();
  v43 = MEMORY[0x24BE453D0];
  sub_2312DFCA0((uint64_t *)&v41);
  sub_2314134F8();
  sub_23132FCA0((uint64_t)v33);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  return sub_2312DFB68(&v41, v34);
}

uint64_t sub_231396168(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[3];
  uint64_t v10;
  uint64_t v11;

  v2 = sub_231412F88();
  v10 = v2;
  v11 = MEMORY[0x24BE44568];
  v3 = sub_2312DFCA0(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, a1, v2);
  v4 = sub_2314126DC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
  v10 = sub_2314124CC();
  v11 = MEMORY[0x24BE42BA0];
  sub_2312DFCA0(v9);
  sub_2314124D8();
  v5 = sub_2314126DC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v9);
  sub_2312D6DD8(0, &qword_255ECF2F0, (uint64_t (*)(uint64_t))sub_2313965C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_231418090;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  v7 = MEMORY[0x2348DB0B0]();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23139626C()
{
  _QWORD *v0;
  _QWORD *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v1 = v0;
  sub_2314121E4();
  sub_23141219C();
  CGRectGetWidth(v11);
  sub_2314121CC();
  sub_2312CEA5C(v1, v1[3]);
  sub_231412364();
  sub_2312CEA5C(v1, v1[3]);
  sub_2314121E4();
  sub_23141219C();
  CGRectGetWidth(v12);
  sub_2314121CC();
  sub_231412358();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_release();
  v13.origin.x = v3;
  v13.origin.y = v5;
  v13.size.width = v7;
  v13.size.height = v9;
  CGRectGetHeight(v13);
  sub_2314121D8();
  return swift_release();
}

double sub_2313963A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2313963BC(a1, a2, a3, (double (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42748]);
}

double sub_2313963B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2313963BC(a1, a2, a3, MEMORY[0x24BE42750]);
}

double sub_2313963BC(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  CGRect v11;

  v6 = v4[3];
  v7 = v4[4];
  sub_2312CEA5C(v4, v6);
  v8 = sub_2314121E4();
  sub_23141219C();
  CGRectGetWidth(v11);
  sub_2314121CC();
  v9 = a4(v8, v6, v7);
  swift_release();
  return v9;
}

uint64_t sub_231396478()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_23138346C();
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

unint64_t sub_2313964E0()
{
  unint64_t result;

  result = qword_255ECF908;
  if (!qword_255ECF908)
  {
    result = MEMORY[0x2348DE248](&unk_23141F160, &type metadata for AFibBurdenPDFChartCurrentValueView);
    atomic_store(result, (unint64_t *)&qword_255ECF908);
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartCurrentValueView()
{
  return &type metadata for AFibBurdenPDFChartCurrentValueView;
}

unint64_t sub_231396534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECAE58;
  if (!qword_255ECAE58)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x2348DE248](&unk_231417C68, v1);
    atomic_store(result, (unint64_t *)&qword_255ECAE58);
  }
  return result;
}

uint64_t sub_23139657C()
{
  uint64_t v0;

  return sub_231396168(*(_QWORD *)(v0 + 16));
}

unint64_t sub_231396584()
{
  unint64_t result;

  result = qword_255ECF910;
  if (!qword_255ECF910)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECF910);
  }
  return result;
}

void sub_2313965C0(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECD3F0, (uint64_t (*)(uint64_t))sub_2313965DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

unint64_t sub_2313965DC()
{
  unint64_t result;

  result = qword_255ECD3F8;
  if (!qword_255ECD3F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECD3F8);
  }
  return result;
}

uint64_t sub_231396630@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  unsigned int v28;
  uint64_t v29;
  uint64_t *v30;
  BOOL v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  int *v48;
  BOOL *v49;
  uint64_t *v50;
  uint64_t v51;
  char **v52;
  uint64_t (*v53)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t inited;
  void *v59;
  id v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unsigned int v82;
  char v83;
  void *v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v116 = a2;
  v126 = a3;
  sub_2312D4A68();
  v124 = (char *)v4;
  v121 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v120 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_231411D1C();
  v122 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231413558();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231413540();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23141357C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v118 = v19;
  v119 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v112 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v123 = a1;
  v23 = a1;
  v25 = v24;
  v117 = v22;
  v22((char *)&v112 - v20, v23, v24);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v21, v25) != *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v25);
    goto LABEL_12;
  }
  v113 = v7;
  (*(void (**)(char *, uint64_t))(v17 + 96))(v21, v25);
  v114 = v13;
  v115 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v21, v12);
  sub_231413510();
  v26 = (void *)sub_231413564();
  v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v11, v8);
  v28 = objc_msgSend(v26, sel_areAllRequirementsSatisfied);

  v29 = (uint64_t)v15;
  if (!v28)
  {
    sub_231413510();
    v55 = (void *)sub_231413564();
    v27(v11, v8);
    v56 = objc_msgSend(v55, sel_unsatisfiedRequirementIdentifiers);

    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
    v57 = sub_2314147A0();

    sub_231397640();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_231416A30;
    v59 = (void *)*MEMORY[0x24BDD2D10];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD2D10];
    v60 = v59;
    v61 = sub_2313971B8(v57, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if ((v61 & 1) != 0)
    {
      v124 = v15;
      v62 = v122;
      v63 = v113;
      v64 = v125;
      (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v113, *MEMORY[0x24BE412A0], v125);
      v123 = sub_2313C2330();
      v121 = v65;
      if (qword_255ECAAD8 != -1)
        swift_once();
      v120 = (char *)sub_231411374();
      v67 = v66;
      v68 = sub_231411374();
      v70 = v69;
      v71 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenArticleLinkURL);
      v72 = sub_2314146BC();
      v74 = v73;

      (*(void (**)(char *, uint64_t))(v114 + 8))(v124, v115);
      v75 = v126;
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v126, v63, v64);
      v48 = (int *)_s15SettingsContentVMa();
      *(_WORD *)(v75 + v48[5]) = 256;
      *(_WORD *)(v75 + v48[6]) = 0;
      v76 = (uint64_t *)(v75 + v48[7]);
      v77 = v121;
      *v76 = v123;
      v76[1] = v77;
      v78 = (char **)(v75 + v48[8]);
      *v78 = v120;
      v78[1] = v67;
      v78[2] = (char *)v68;
      v78[3] = v70;
      v78[4] = (char *)v72;
      v78[5] = v74;
      v53 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v48 - 1) + 56);
      v54 = v75;
      return v53(v54, 0, 1, v48);
    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v15, v115);
LABEL_12:
    v79 = v126;
    v80 = v123;
    v81 = (void *)sub_231413588();
    v82 = objc_msgSend(v81, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D20]);

    v83 = sub_231413570();
    if (v82 && (v83 & 1) != 0)
    {
      v84 = (void *)sub_231413588();
      v85 = objc_msgSend(v84, sel_areAllRequirementsSatisfied);

      v86 = v125;
      if (!v85)
      {
        if (qword_25415B6D8 != -1)
          swift_once();
        sub_2312CE3B8((uint64_t)v124, (uint64_t)qword_254162EE8);
        v127 = 0;
        sub_231413594();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v122 + 104))(v79, *MEMORY[0x24BE412A0], v86);
        v96 = sub_2313C2330();
        v98 = v97;
        v99 = v79;
        if (qword_255ECAAD8 != -1)
          swift_once();
        v100 = sub_231411374();
        v102 = v101;
        v103 = sub_231411374();
        v105 = v104;
        v106 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenArticleLinkURL);
        v107 = sub_2314146BC();
        v109 = v108;

        v48 = (int *)_s15SettingsContentVMa();
        *(_WORD *)(v99 + v48[5]) = 0;
        *(_WORD *)(v99 + v48[6]) = 0;
        v110 = (uint64_t *)(v99 + v48[7]);
        *v110 = v96;
        v110[1] = v98;
        v111 = (uint64_t *)(v99 + v48[8]);
        *v111 = v100;
        v111[1] = v102;
        v111[2] = v103;
        v111[3] = v105;
        v111[4] = v107;
        v111[5] = v109;
        v53 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v48 - 1) + 56);
        v54 = v99;
        return v53(v54, 0, 1, v48);
      }
      if (qword_25415B6D8 != -1)
        swift_once();
    }
    else if (qword_25415B6D8 != -1)
    {
      swift_once();
    }
    v87 = (uint64_t)v124;
    v88 = sub_2312CE3B8((uint64_t)v124, (uint64_t)qword_254162EE8);
    v90 = v120;
    v89 = v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v88, v87);
    v91 = v119;
    v117(v119, v80, v25);
    v92 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v93 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v93 + v92, v91, v25);
    v127 = 0;
    sub_2314135B8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v87);
    v94 = _s15SettingsContentVMa();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v79, 1, 1, v94);
  }
  v30 = sub_2312CEA5C(v116, v116[3]);
  v31 = sub_2313974AC((uint64_t)v15, *v30);
  v32 = v122;
  v33 = v113;
  v34 = v125;
  (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v113, *MEMORY[0x24BE41298], v125);
  v35 = v31;
  v121 = sub_2313C2174();
  v123 = v36;
  v124 = (char *)v29;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v120 = (char *)sub_231411374();
  v38 = v37;
  v39 = sub_231411374();
  v41 = v40;
  v42 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenArticleLinkURL);
  v43 = sub_2314146BC();
  v45 = v44;

  (*(void (**)(char *, uint64_t))(v114 + 8))(v124, v115);
  v46 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
  v47 = v126;
  v46(v126, v33, v34);
  v48 = (int *)_s15SettingsContentVMa();
  *(_WORD *)(v47 + v48[5]) = 257;
  v49 = (BOOL *)(v47 + v48[6]);
  *v49 = v35;
  v49[1] = 1;
  v50 = (uint64_t *)(v47 + v48[7]);
  v51 = v123;
  *v50 = v121;
  v50[1] = v51;
  v52 = (char **)(v47 + v48[8]);
  *v52 = v120;
  v52[1] = v38;
  v52[2] = (char *)v39;
  v52[3] = v41;
  v52[4] = (char *)v43;
  v52[5] = v45;
  v53 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v48 - 1) + 56);
  v54 = v47;
  return v53(v54, 0, 1, v48);
}

uint64_t sub_2313970F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_231415070(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_231415070() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2313971B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    do
    {
      v5 = sub_2314146BC();
      v7 = v6;
      if (v5 == sub_2314146BC() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_231397290()
{
  return sub_2313975E8();
}

uint64_t sub_2313972B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = sub_23141357C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v7[0];
}

uint64_t sub_2313973EC()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

BOOL sub_2313974AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  int v5;
  void *v6;
  id v7;
  _BOOL8 v8;
  _QWORD v10[5];

  v3 = sub_23141186C();
  v10[3] = v3;
  v10[4] = &off_250025F88;
  v10[0] = a2;
  swift_retain();
  v4 = (void *)sub_231413534();
  v5 = HKHRAFibBurdenNotificationsEnabledWithFeatureSettings();

  if (v5)
  {
    sub_2312CEA5C(v10, v3);
    v6 = (void *)sub_231411854();
    v7 = objc_msgSend(v6, sel_authorizationStatus);

    v8 = v7 == (id)2;
  }
  else
  {
    v8 = 0;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
  return v8;
}

uint64_t sub_231397568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23141357C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313975C8()
{
  return sub_2313975E8();
}

uint64_t sub_2313975E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23141357C() - 8) + 80);
  return sub_2313972B0(v0 + ((v1 + 16) & ~v1));
}

void sub_231397640()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB398)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB398);
  }
}

uint64_t sub_231397694()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2313DA5B4();
  v1 = sub_231403254(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider()
{
  return objc_opt_self();
}

id sub_2313976F8()
{
  return (id)*MEMORY[0x24BE4BF30];
}

id sub_231397708()
{
  return (id)*MEMORY[0x24BE4BF38];
}

void sub_231397720(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2312F53C8(a1, (uint64_t (*)(uint64_t))sub_2312F53C0, (void (*)(uint64_t))sub_2312F53C4, a2);
}

void sub_23139773C(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2312F6E68(a1, (uint8_t *)sub_2312F53C0, (void (*)(uint64_t))sub_2312F53C4, a2);
}

uint64_t sub_231397760@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE415F0];
  v3 = sub_231411E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2313977A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_23141F3E0, a3);
  return sub_23141213C();
}

uint64_t sub_2313977F0()
{
  MEMORY[0x2348DE248](&unk_23141F3E0);
  return sub_231412130();
}

unint64_t sub_231397838()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_231397854()
{
  return sub_231397694();
}

uint64_t sub_231397874(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_23141F368, a1);
  return sub_231412118();
}

uint64_t sub_2313978B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_23141F368, a3);
  return sub_23141210C();
}

uint64_t sub_231397904(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415BD18, a2, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider, (uint64_t)&unk_23141F320);
}

uint64_t sub_231397930()
{
  return sub_2312F23F0(&qword_25415C008, 255, type metadata accessor for CardioFitnessFeatureStatusActionHandler, (uint64_t)&unk_23141C914);
}

uint64_t sub_231397960()
{
  return sub_2312F23F0(&qword_255ECB8E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE41620], MEMORY[0x24BE41618]);
}

uint64_t sub_231397990(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415C020, a2, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider, (uint64_t)&unk_23141F368);
}

uint64_t sub_2313979BC()
{
  return sub_2312F23F0(&qword_255ECE028, 255, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData, (uint64_t)&unk_23141C89C);
}

uint64_t sub_2313979EC()
{
  return sub_2312F23F0(&qword_255ECE030, 255, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData, (uint64_t)&unk_23141C874);
}

char *sub_231397A1C(void *a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void (*v21)(uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  objc_class *v39;
  id v40;
  objc_class *v41;
  char *v42;
  id v43;
  char *v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v49[2];
  uint64_t v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  objc_super v58;
  objc_super v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_2312DC3FC();
  v6 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  v56 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC558();
  v9 = v8;
  v50 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC4C4();
  v52 = v12;
  v54 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator] = 0;
  v2[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_navigateToDetailRoomUponOnboardingCompletion] = a2;
  v61 = sub_2312D3C68(0, (unint64_t *)&unk_25415BB20);
  v62 = MEMORY[0x24BE45468];
  v60 = (uint64_t)a1;
  sub_2314128A4();
  swift_allocObject();
  v15 = a1;
  v49[0] = sub_231412898();
  type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
  v16 = swift_allocObject();
  v17 = v15;
  v51 = v17;
  v18 = sub_23139B49C((uint64_t)v17, v16);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DD0], v17);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312DC5D0(0);
  sub_2312CCC24(&qword_25415D030, (uint64_t (*)(uint64_t))sub_2312DC5D0, MEMORY[0x24BDB9DF8]);
  v20 = v19;
  swift_retain();
  swift_retain();
  sub_231413E04();
  sub_23141357C();
  v21 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2312CCC24((unint64_t *)&unk_25415D060, (uint64_t (*)(uint64_t))sub_2312DC558, MEMORY[0x24BDB9E90]);
  sub_231413E88();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v9);
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v22 = v20;
  v23 = sub_231413624();

  v60 = v23;
  sub_2313411FC(0, (unint64_t *)&qword_25415CFC0, v21);
  sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v21);
  sub_2312CCC24(&qword_25415CDE0, (uint64_t (*)(uint64_t))sub_2312DC4C4, MEMORY[0x24BDB94C8]);
  v24 = v52;
  v25 = v53;
  sub_231413F48();
  swift_release();
  sub_2312CCC24((unint64_t *)&unk_25415CE00, (uint64_t (*)(uint64_t))sub_2312DC3FC, MEMORY[0x24BDB9530]);
  v26 = v55;
  v27 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v24);
  v28 = objc_msgSend(v22, sel_featureAvailabilityProviding);
  v29 = (char *)objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingModel());
  swift_retain();
  v30 = v49[0];
  v49[1] = v18;
  v31 = sub_23139B9A8(v27, v28, v49[0], v18, (uint64_t)sub_2313154D4, 0, v29);

  swift_release();
  swift_release();
  sub_2314130CC();
  swift_release();
  type metadata accessor for CardioFitnessOnboardingViewControllerFactory();
  v32 = (_QWORD *)swift_allocObject();
  v33 = v51;
  v32[2] = v51;
  v32[3] = v30;
  v32[4] = v31;
  v34 = objc_allocWithZone(MEMORY[0x24BE4C008]);
  v35 = v33;
  swift_retain();
  v36 = v31;
  v37 = objc_msgSend(v34, sel_initWithHealthStore_, v35);
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C010]), sel_initWithSignalSource_, v37);

  v39 = (objc_class *)type metadata accessor for CardioFitnessOnboardingViewController();
  v59.receiver = v57;
  v59.super_class = v39;
  v40 = objc_msgSendSuper2(&v59, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v40, sel_setModalPresentationStyle_, 2);
  v41 = (objc_class *)type metadata accessor for CardioFitnessOnboardingCoordinator();
  v42 = (char *)objc_allocWithZone(v41);
  *(_QWORD *)&v42[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_250026100;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v42[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model] = v36;
  *(_QWORD *)&v42[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_factory] = v32;
  *(_QWORD *)&v42[OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_analyticsManager] = v38;
  v58.receiver = v42;
  v58.super_class = v41;
  v43 = v36;
  v44 = (char *)v40;
  swift_retain();
  v45 = v38;
  v46 = objc_msgSendSuper2(&v58, sel_init);
  sub_231398CA0();
  swift_release();
  swift_release();

  swift_release();
  v47 = *(void **)&v44[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator];
  *(_QWORD *)&v44[OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_coordinator] = v46;

  return v44;
}

uint64_t sub_2313980CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  _QWORD v52[2];
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t aBlock;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;

  v59 = a2;
  ObjectType = swift_getObjectType();
  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2314114AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a3;
  v16[4] = a4;
  if ((a1 & 1) == 0
    || *((_BYTE *)v4
       + OBJC_IVAR____TtC5Heart37CardioFitnessOnboardingViewController_navigateToDetailRoomUponOnboardingCompletion) != 1)
  {
    sub_231361B58(a3);
    v35 = qword_25415DF98;
    v36 = v4;
    if (v35 != -1)
      swift_once();
    v37 = sub_231413780();
    sub_2312CE3B8(v37, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v58 = a4;
      v41 = v40;
      v42 = swift_slowAlloc();
      aBlock = v42;
      *(_DWORD *)v41 = 136446466;
      v43 = sub_2314151A8();
      v60 = sub_23133180C(v43, v44, &aBlock);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      v60 = sub_23133180C(0xD000000000000035, 0x800000023142EF10, &aBlock);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v38, v39, "[%{public}s.%{public}s]: Dismissing onboarding and landing back where user was before", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v42, -1, -1);
      v45 = v41;
      a4 = v58;
      MEMORY[0x2348DE308](v45, -1, -1);
    }

    if (a3)
    {
      v65 = (uint64_t (*)())a3;
      v66 = a4;
      aBlock = MEMORY[0x24BDAC760];
      v62 = 1107296256;
      v63 = sub_23130DCCC;
      v64 = &unk_250026480;
      v34 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      v34 = 0;
    }
    objc_msgSend(v36, sel_dismissViewControllerAnimated_completion_, 1, v34);
    goto LABEL_20;
  }
  v58 = a4;
  sub_231361B58(a3);
  v17 = qword_25415DF98;
  v57 = v4;
  if (v17 != -1)
    swift_once();
  v18 = sub_231413780();
  v19 = sub_2312CE3B8(v18, (uint64_t)qword_254162FF0);
  v20 = sub_231413768();
  v21 = sub_23141498C();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc();
    v55 = v19;
    v53 = v22;
    v24 = v23;
    v54 = swift_slowAlloc();
    aBlock = v54;
    *(_DWORD *)v24 = 136446466;
    v52[1] = v24 + 4;
    v25 = sub_2314151A8();
    v60 = sub_23133180C(v25, v26, &aBlock);
    v56 = ObjectType;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    v60 = sub_23133180C(0xD000000000000035, 0x800000023142EF10, &aBlock);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v20, (os_log_type_t)v53, "[%{public}s.%{public}s]: Dismissing onboarding and navigating to Cardio Fitness detail room", (uint8_t *)v24, 0x16u);
    v27 = v54;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v27, -1, -1);
    MEMORY[0x2348DE308](v24, -1, -1);
  }

  sub_2312F05B8(v59, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2312CEBD4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2312E9730);
    v28 = sub_231413768();
    v29 = sub_231414980();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      aBlock = v31;
      *(_DWORD *)v30 = 136446466;
      v32 = sub_2314151A8();
      v60 = sub_23133180C(v32, v33, &aBlock);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v60 = sub_23133180C(0xD000000000000035, 0x800000023142EF10, &aBlock);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v28, v29, "[%{public}s.%{public}s]: Failed to construct deep link URL to go to detail room after onboarding completed", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v31, -1, -1);
      MEMORY[0x2348DE308](v30, -1, -1);
    }

    if (a3)
    {
      v65 = (uint64_t (*)())a3;
      v66 = v58;
      aBlock = MEMORY[0x24BDAC760];
      v62 = 1107296256;
      v63 = sub_23130DCCC;
      v64 = &unk_2500264A8;
      v34 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      v34 = 0;
    }
    objc_msgSend(v57, sel_dismissViewControllerAnimated_completion_, 1, v34);
LABEL_20:
    _Block_release(v34);
    return swift_release();
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v47 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v48 = (void *)sub_231411488();
  sub_2313374B0(MEMORY[0x24BEE4AF8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_2312CCC24((unint64_t *)&qword_255ECAE48, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_231417AD4);
  v49 = (void *)sub_23141462C();
  swift_bridgeObjectRelease();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_23139CCB8;
  *(_QWORD *)(v50 + 24) = v16;
  v65 = sub_23139CCC4;
  v66 = v50;
  aBlock = MEMORY[0x24BDAC760];
  v62 = 1107296256;
  v63 = sub_231375AB8;
  v64 = &unk_2500264F8;
  v51 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v47, sel_openURL_options_completionHandler_, v48, v49, v51);
  _Block_release(v51);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_2313988D8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  _QWORD v5[6];

  if (a2)
  {
    v5[4] = a2;
    v5[5] = a3;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_23130DCCC;
    v5[3] = &unk_250026520;
    v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
  _Block_release(v4);
}

id sub_231398A10()
{
  return sub_231334858(type metadata accessor for CardioFitnessOnboardingViewController);
}

uint64_t type metadata accessor for CardioFitnessOnboardingViewController()
{
  return objc_opt_self();
}

id sub_231398A4C()
{
  void *v0;

  return objc_msgSend(v0, sel_presentationController);
}

void sub_231398A70(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  _QWORD v8[6];

  if (a3)
  {
    v8[4] = a3;
    v8[5] = a4;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_23130DCCC;
    v8[3] = &unk_250026200;
    v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, a2 & 1, v7);
  _Block_release(v7);
}

void sub_231398B2C(uint64_t a1, char a2)
{
  void *v2;
  id v4;

  sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
  v4 = (id)sub_231414788();
  objc_msgSend(v2, sel_setViewControllers_animated_, v4, a2 & 1);

}

uint64_t sub_231398BA4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_231304648(a2, (uint64_t)v11);
  v4 = v12;
  if (v12)
  {
    v5 = sub_2312CEA5C(v11, v12);
    v6 = *(_QWORD *)(v4 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = sub_231415064();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v11);
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v2, sel_showViewController_sender_, a1, v9);
  return sub_2314130CC();
}

void sub_231398CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v10 = sub_231398DE4(0);
  v1 = v0 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  if (MEMORY[0x2348DE3BC](v0 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_231417F90;
    *(_QWORD *)(v4 + 32) = v10;
    v11 = v4;
    sub_2314147B8();
    v5 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 24);
    v6 = v10;
    v5(v11, 0, ObjectType, v2);
    swift_bridgeObjectRelease();
    sub_2314130CC();
  }
  if (MEMORY[0x2348DE3BC](v1))
  {
    v7 = *(_QWORD *)(v1 + 8);
    v8 = swift_getObjectType();
    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
    sub_2314130CC();
    if (v9)
    {
      objc_msgSend(v9, sel_setDelegate_, v0);

    }
  }

}

void *sub_231398DE4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  id v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  void *v9;
  void (*v10)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v11;

  sub_231408114(a1);
  v2 = v1;
  v4 = v3;
  ObjectType = swift_getObjectType();
  v6 = objc_msgSend(v2, sel_navigationItem);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v9 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setBackButtonTitle_, v9, 0xE000000000000000);

  v10 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 24);
  v11 = swift_unknownObjectRetain();
  v10(v11, &off_2500260E0, ObjectType, v4);
  return v2;
}

id sub_231398F7C()
{
  return sub_231334858(type metadata accessor for CardioFitnessOnboardingCoordinator);
}

uint64_t type metadata accessor for CardioFitnessOnboardingCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_231399000(void *a1, char a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11;
  uint64_t ObjectType;

  v11 = a5 & 1;
  ObjectType = swift_getObjectType();
  return sub_23139B3E0(a1, a2, a3, v11, a6, ObjectType, a4);
}

void sub_231399064(char a1, void *a2, char a3, char a4, void *a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  _BYTE v44[4];
  int v45;
  os_log_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock[6];

  v11 = a4 & 1;
  v12 = sub_231414500();
  v51 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_231414524();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v44[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 == 2)
  {
    sub_2313995D0(a3);
  }
  else if (a1 == 3)
  {
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_BYTE *)(v21 + 24) = a3;
    *(_BYTE *)(v21 + 25) = v11;
    swift_retain();
    sub_23139C24C(a5, a6, (uint64_t)sub_23139C004, v21);
    swift_release();
    swift_release();
  }
  else
  {
    v49 = v16;
    v50 = v17;
    LODWORD(v22) = a1 & 1;
    if (qword_25415DF98 != -1)
      swift_once();
    v23 = sub_231413780();
    sub_2312CE3B8(v23, (uint64_t)qword_254162FF0);
    v24 = a5;
    v25 = sub_231413768();
    v26 = sub_23141498C();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v48 = v22;
      v22 = v28;
      v47 = swift_slowAlloc();
      aBlock[0] = v47;
      *(_DWORD *)v22 = 136446978;
      v46 = v25;
      v29 = sub_2314151A8();
      v52 = sub_23133180C(v29, v30, aBlock);
      v45 = v27;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      v52 = sub_23133180C(0xD000000000000028, 0x800000023142EC80, aBlock);
      sub_231414CBC();
      *(_WORD *)(v22 + 22) = 2080;
      ObjectType = swift_getObjectType();
      LOBYTE(v52) = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(ObjectType, a6);
      v32 = sub_2314146E0();
      v52 = sub_23133180C(v32, v33, aBlock);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 32) = 2080;
      LOBYTE(v52) = v48;
      v34 = sub_2314146E0();
      v52 = sub_23133180C(v34, v35, aBlock);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v36 = v46;
      _os_log_impl(&dword_2312C8000, v46, (os_log_type_t)v45, "[%{public}s.%{public}s]: Unable to proceed to next stage from %s due to reason: %s", (uint8_t *)v22, 0x2Au);
      v37 = v47;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v37, -1, -1);
      v38 = v22;
      LOBYTE(v22) = v48;
      MEMORY[0x2348DE308](v38, -1, -1);

    }
    else
    {

    }
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v39 = (void *)sub_231414A94();
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = a2;
    *(_BYTE *)(v40 + 24) = v22;
    *(_QWORD *)(v40 + 32) = v24;
    *(_QWORD *)(v40 + 40) = a6;
    aBlock[4] = (uint64_t)sub_23139BFB4;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23130DCCC;
    aBlock[3] = (uint64_t)&unk_250026278;
    v41 = _Block_copy(aBlock);
    v42 = v24;
    v43 = a2;
    swift_release();
    sub_231414518();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23132AAF4();
    sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
    sub_231414D1C();
    MEMORY[0x2348DD48C](0, v19, v14, v41);
    _Block_release(v41);

    (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v14, v12);
    (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v19, v49);
  }
}

void sub_2313995D0(char a1)
{
  swift_getObjectType();
  sub_231414500();
  MEMORY[0x24BDAC7A8]();
  sub_231414524();
  MEMORY[0x24BDAC7A8]();
  __asm { BR              X10 }
}

uint64_t sub_2313996A0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  *(_DWORD *)(v8 - 176) = 2;
  *(_QWORD *)(v8 - 168) = v1;
  *(_QWORD *)(v8 - 160) = a1;
  if (qword_25415DF98 != -1)
    swift_once();
  *(_DWORD *)(v8 - 172) = v2;
  v9 = sub_231413780();
  sub_2312CE3B8(v9, (uint64_t)qword_254162FF0);
  v10 = sub_231413768();
  v11 = sub_23141495C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_QWORD *)(v8 - 200) = v13;
    *(_QWORD *)(v8 - 144) = v13;
    *(_DWORD *)v12 = 136446978;
    v14 = sub_2314151A8();
    *(_QWORD *)(v8 - 184) = v5;
    *(_QWORD *)(v8 - 96) = sub_23133180C(v14, v15, (uint64_t *)(v8 - 144));
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    *(_QWORD *)(v8 - 96) = sub_23133180C(0xD000000000000035, 0x800000023142ECB0, (uint64_t *)(v8 - 144));
    sub_231414CBC();
    *(_QWORD *)(v8 - 192) = v7;
    *(_WORD *)(v12 + 22) = 2080;
    *(_BYTE *)(v8 - 96) = *(_QWORD *)(v8 - 184);
    v16 = sub_2314146E0();
    *(_QWORD *)(v8 - 96) = sub_23133180C(v16, v17, (uint64_t *)(v8 - 144));
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 32) = 2080;
    v18 = *(_DWORD *)(v8 - 176);
    *(_BYTE *)(v8 - 96) = v18;
    v19 = sub_2314146E0();
    *(_QWORD *)(v8 - 96) = sub_23133180C(v19, v20, (uint64_t *)(v8 - 144));
    v7 = *(_QWORD *)(v8 - 192);
    sub_231414CBC();
    v5 = *(_QWORD *)(v8 - 184);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v10, v11, "[%{public}s.%{public}s]: Transitioning from %s to %s", (uint8_t *)v12, 0x2Au);
    v21 = *(_QWORD *)(v8 - 200);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v21, -1, -1);
    MEMORY[0x2348DE308](v12, -1, -1);

  }
  else
  {

    v18 = *(_DWORD *)(v8 - 176);
  }
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v22 = (void *)sub_231414A94();
  v23 = swift_allocObject();
  v24 = *(void **)(v8 - 152);
  *(_QWORD *)(v23 + 16) = v24;
  *(_BYTE *)(v23 + 24) = v18;
  *(_BYTE *)(v23 + 25) = v5;
  *(_BYTE *)(v23 + 26) = *(_DWORD *)(v8 - 172);
  *(_QWORD *)(v8 - 112) = sub_23139C708;
  *(_QWORD *)(v8 - 104) = v23;
  *(_QWORD *)(v8 - 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 - 136) = 1107296256;
  *(_QWORD *)(v8 - 128) = sub_23130DCCC;
  *(_QWORD *)(v8 - 120) = &unk_250026318;
  v25 = _Block_copy((const void *)(v8 - 144));
  v26 = v24;
  swift_release();
  sub_231414518();
  *(_QWORD *)(v8 - 144) = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v6, v4, v25);
  _Block_release(v25);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 168) + 8))(v6, *(_QWORD *)(v8 - 160));
}

void sub_231399D4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_2313995D0(a4);

  }
}

uint64_t sub_231399DD0(uint64_t a1, void *a2)
{
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  swift_getObjectType();
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = sub_231411374();
  v7 = v6;

  if (qword_25415DF98 != -1)
    swift_once();
  v8 = sub_231413780();
  sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
  v9 = sub_231413768();
  v10 = sub_23141498C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136446722;
    v13 = sub_2314151A8();
    sub_23133180C(v13, v14, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    sub_23133180C(0xD00000000000002BLL, 0x800000023142EE60, &v18);
    sub_231414CBC();
    *(_WORD *)(v11 + 22) = 2082;
    v15 = sub_2314146E0();
    sub_23133180C(v15, v16, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v9, v10, "[%{public}s.%{public}s]: Showing blocking alert due to reason %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v12, -1, -1);
    MEMORY[0x2348DE308](v11, -1, -1);
  }

  sub_23139C908(v5, v7, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23139A0D4(uint64_t result, uint64_t (*a2)(void))
{
  if ((result & 1) != 0)
    return a2();
  return result;
}

void sub_23139A0F8(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t aBlock[6];

  v34 = a3;
  v35 = a4;
  swift_getObjectType();
  v6 = sub_231414500();
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231414524();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v11 = sub_231413780();
  sub_2312CE3B8(v11, (uint64_t)qword_254162FF0);
  v12 = sub_231413768();
  v13 = sub_23141495C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v29 = v6;
    v15 = v14;
    v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)v15 = 136446466;
    v16 = sub_2314151A8();
    v37 = sub_23133180C(v16, v17, aBlock);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    v37 = sub_23133180C(0xD000000000000035, 0x800000023142ECF0, aBlock);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s.%{public}s]: Onboarding finished", (uint8_t *)v15, 0x16u);
    v18 = v28;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v18, -1, -1);
    v19 = v15;
    v6 = v29;
    MEMORY[0x2348DE308](v19, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v20 = (void *)sub_231414A94();
    v21 = swift_allocObject();
    v23 = v33;
    v22 = v34;
    *(_QWORD *)(v21 + 16) = v33;
    *(_BYTE *)(v21 + 24) = a2 & 1;
    v24 = v35;
    *(_QWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 40) = v24;
    aBlock[4] = (uint64_t)sub_23139C768;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23130DCCC;
    aBlock[3] = (uint64_t)&unk_250026368;
    v25 = _Block_copy(aBlock);
    v26 = v23;
    sub_231361B58(v22);
    swift_release();
    v27 = v36;
    sub_231414518();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23132AAF4();
    sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
    sub_231414D1C();
    MEMORY[0x2348DD48C](0, v27, v8, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v31);
  }
}

uint64_t sub_23139A4CC(uint64_t a1, void (*a2)(void (*)(), uint64_t))
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(void (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30;

  sub_2312E9730(0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2314114AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v9 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - v10;
  sub_2314114A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2312CEBD4((uint64_t)v4, (uint64_t (*)(_QWORD))sub_2312E9730);
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v12(v11, v4, v5);
    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v13)
    {
      v14 = v13;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      v15 = *(unsigned __int8 *)(v6 + 80);
      v28 = a2;
      v16 = (v15 + 24) & ~v15;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v14;
      v12((char *)(v17 + v16), v9, v5);
      v18 = v14;
      v28(sub_23139C8A4, v17);

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v20 = sub_231413780();
  sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
  v21 = sub_231413768();
  v22 = sub_231414980();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v30 = v24;
    *(_DWORD *)v23 = 136446466;
    v25 = sub_2314151A8();
    v29 = sub_23133180C(v25, v26, &v30);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    v29 = sub_23133180C(0xD000000000000038, 0x800000023142EDF0, &v30);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s.%{public}s]: Failed to construct deep link URL to passcode settings", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v24, -1, -1);
    MEMORY[0x2348DE308](v23, -1, -1);
  }

  return ((uint64_t (*)(uint64_t (*)(), _QWORD))a2)(nullsub_1, 0);
}

void sub_23139A864(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  void *v39;
  const void *v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock[6];

  v51 = a5;
  v12 = sub_231414500();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231414524();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v47 = v18;
    v48 = v17;
    v49 = v13;
    v50 = a7;
    v21 = a2;
    if (qword_25415DF98 != -1)
      swift_once();
    v22 = sub_231413780();
    sub_2312CE3B8(v22, (uint64_t)qword_254162FF0);
    v23 = a2;
    v24 = a2;
    v25 = sub_231413768();
    v26 = sub_231414974();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v44 = a3;
      v28 = v27;
      v43 = swift_slowAlloc();
      aBlock[0] = v43;
      *(_DWORD *)v28 = 136446722;
      v45 = a4;
      v29 = sub_2314151A8();
      v52 = sub_23133180C(v29, v30, aBlock);
      v46 = a6;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v52 = sub_23133180C(0xD000000000000038, 0x800000023142EFB0, aBlock);
      sub_231414CBC();
      *(_WORD *)(v28 + 22) = 2082;
      v52 = (uint64_t)a2;
      v31 = a2;
      sub_2312D3C14();
      v32 = sub_2314146E0();
      v52 = sub_23133180C(v32, v33, aBlock);
      a4 = v45;
      a6 = v46;
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v25, v26, "[%{public}s.%{public}s]: Attempted to complete onboarding but received error: %{public}s", (uint8_t *)v28, 0x20u);
      v34 = v43;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      v35 = v28;
      a3 = v44;
      MEMORY[0x2348DE308](v35, -1, -1);
    }
    else
    {

    }
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v36 = (void *)sub_231414A94();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = a3;
    v37[3] = a4;
    v37[4] = v51;
    aBlock[4] = (uint64_t)sub_23139CD10;
    aBlock[5] = (uint64_t)v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23130DCCC;
    aBlock[3] = (uint64_t)&unk_250026570;
    v38 = _Block_copy(aBlock);
    v39 = a3;
    v40 = v38;
    v41 = v39;
    v42 = a4;
    swift_release();
    sub_231414518();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23132AAF4();
    sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
    sub_231414D1C();
    MEMORY[0x2348DD48C](0, v20, v15, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v48);
    a6(0);

  }
  else
  {
    a6(1);
  }
}

uint64_t sub_23139ACE0(uint64_t a1, void *a2)
{
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = sub_231411374();
  v7 = v6;

  sub_23139C908(v5, v7, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23139ADC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  result = MEMORY[0x2348DE3BC](a1 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController);
  if (result)
  {
    v13 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType();
    sub_23139AEA8((uint64_t)v10);
    (*(void (**)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 40))(a2 & 1, v10, a3, a4, ObjectType, v13);
    sub_2314130CC();
    return sub_2312CEBD4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2312E9730);
  }
  return result;
}

uint64_t sub_23139AEA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t (*v15)(uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;

  v26 = a1;
  v1 = sub_2314122BC();
  MEMORY[0x24BDAC7A8](v1);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2314114AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23139C778(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2314112C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v27 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id)HKHRCardioFitnessDetailRoomBaseLink();
  sub_231411494();

  sub_23141129C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v28 = v11;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2312CEBD4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23139C778);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v26, 1, 1, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v9, v10);
    sub_2314122D4();
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42558];
    v16 = (_QWORD *)(*(_QWORD *)(v25 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model)
                   + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_mostRecentSampleDateProvider);
    v17 = v16[3];
    v18 = v16[4];
    sub_2312CEA5C(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    v29 = (void *)MEMORY[0x24BEE4AF8];
    sub_2312CCC24(&qword_255ECFA78, (uint64_t (*)(uint64_t))MEMORY[0x24BE42510], MEMORY[0x24BE42520]);
    sub_23139C794(0);
    sub_2312CCC24(&qword_255ECFA88, (uint64_t (*)(uint64_t))sub_23139C794, MEMORY[0x24BEE12C8]);
    sub_231414D1C();
    v19 = (void *)sub_2314122C8();
    sub_2314111E8();
    swift_allocObject();
    sub_2314111DC();
    v29 = v19;
    sub_2312CCC24(&qword_255ECFA90, v15, MEMORY[0x24BE42568]);
    v20 = sub_2314111D0();
    v22 = v21;
    swift_release();
    sub_2312D6DD8(0, &qword_255ECFA98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_231411278();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
    v23 = (id)HKHRCardioFitnessChartContextQueryName();
    sub_2314146BC();

    sub_2314114D0();
    sub_231411254();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v27;
    sub_231411290();
    sub_2314112A8();
    sub_2312D6CA8(v20, v22);

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v24, v10);
  }
}

void sub_23139B36C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23139B3E0(void *a1, char a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v12;
  uint64_t v13;
  id v14;
  id v15;

  v12 = a4 & 1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2;
  *(_BYTE *)(v13 + 25) = v12;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a7;
  *(_QWORD *)(v13 + 48) = a5;
  v14 = a1;
  v15 = a3;
  sub_2314028D0(a2);
  return swift_release();
}

uint64_t sub_23139B49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD v42[5];

  sub_2313085E4(0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23139BDA0();
  v7 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  v38 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23139BE48();
  v10 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  v40 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231414A88();
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_231414A64();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_231414524();
  MEMORY[0x24BDAC7A8](v17);
  v42[3] = sub_2312D3C68(0, (unint64_t *)&unk_25415BB20);
  v42[4] = &off_25001FD90;
  v42[0] = a1;
  v18 = a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
  v19 = sub_231411608();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_mostRecentSampleDateCancellationToken) = 0;
  v20 = OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  sub_231414518();
  v41 = (id)MEMORY[0x24BEE4AF8];
  sub_2312CCC24(&qword_25415DED8, v16, MEMORY[0x24BEE5698]);
  sub_23139BEFC(0);
  sub_2312CCC24(&qword_25415DE88, (uint64_t (*)(uint64_t))sub_23139BEFC, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v14, *MEMORY[0x24BEE5750], v33);
  *(_QWORD *)(a2 + v20) = sub_231414AB8();
  *(_QWORD *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher) = 0;
  sub_2312DF850((uint64_t)v42, a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);
  v41 = (id)sub_2312D2A94();
  sub_2313411FC(0, &qword_255ECFA28, (void (*)(uint64_t))sub_2312D39CC);
  sub_231341258(&qword_255ECFA40, &qword_255ECFA28, (void (*)(uint64_t))sub_2312D39CC);
  v21 = v34;
  sub_231413E88();
  swift_release();
  v41 = *(id *)(a2 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue);
  v22 = v41;
  v23 = sub_231414A7C();
  v24 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v36, 1, 1, v23);
  sub_2312CCC24(&qword_255ECFA58, (uint64_t (*)(uint64_t))sub_23139BDA0, MEMORY[0x24BDB94C8]);
  sub_231308748();
  v25 = v22;
  v26 = v35;
  v27 = v37;
  sub_231413F54();
  sub_2312CEBD4(v24, (uint64_t (*)(_QWORD))sub_2313085E4);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v27);
  swift_allocObject();
  swift_weakInit();
  sub_2312CCC24((unint64_t *)&unk_255ECFA60, (uint64_t (*)(uint64_t))sub_23139BE48, MEMORY[0x24BDB9A08]);
  v28 = v39;
  v29 = sub_231413F90();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v28);
  *(_QWORD *)(a2
            + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_mostRecentSampleDateCancellationToken) = v29;
  swift_release();
  return a2;
}

uint64_t sub_23139B984()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id sub_23139B9A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void (*v26)(uint64_t);
  _QWORD aBlock[6];
  objc_super v29;
  _QWORD v30[5];

  ObjectType = swift_getObjectType();
  v30[3] = type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
  v30[4] = &off_25001FDA0;
  v30[0] = a4;
  v15 = OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode;
  sub_23139BCDC(0, (unint64_t *)&unk_255ECFA08, (unint64_t *)&qword_25415BB00, MEMORY[0x24BEE0D00]);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_DWORD *)(v16 + 32) = 0;
  *(_QWORD *)&a7[v15] = v16;
  v17 = OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_wristDetectEnabled;
  sub_23139BCDC(0, &qword_255ECFA18, &qword_25415DE90, MEMORY[0x24BEE1328]);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 20) = 0;
  *(_BYTE *)(v18 + 16) = 2;
  *(_QWORD *)&a7[v17] = v18;
  v19 = a7;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v20 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v20 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_cancellables] = v20;
  v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsChanged] = 2;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_featureAvailabilityProvider] = a2;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsProvider] = a3;
  sub_2312DF850((uint64_t)v30, (uint64_t)&v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_mostRecentSampleDateProvider]);
  v21 = &v19[OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_dateProvider];
  *(_QWORD *)v21 = a5;
  *((_QWORD *)v21 + 1) = a6;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();

  v29.receiver = v19;
  v29.super_class = (Class)type metadata accessor for CardioFitnessOnboardingModel();
  v22 = objc_msgSendSuper2(&v29, sel_init);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = ObjectType;
  aBlock[4] = sub_23139BD78;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23139B36C;
  aBlock[3] = &unk_250026188;
  v24 = _Block_copy(aBlock);
  v25 = v22;
  swift_release();
  objc_msgSend(a2, sel_getFeatureOnboardingRecordWithCompletion_, v24);
  _Block_release(v24);
  aBlock[0] = a1;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2313411FC(0, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v26);
  sub_231413F90();
  swift_release();
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  swift_release();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v30);
  return v25;
}

void sub_23139BCDC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2312CF374(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    type metadata accessor for os_unfair_lock_s(255);
    v5 = sub_231414E78();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_23139BD54()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23139BD78(void *a1, void *a2)
{
  uint64_t v2;

  sub_231401298(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23139BD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23139BD90()
{
  return swift_release();
}

uint64_t sub_23139BD98(uint64_t a1)
{
  uint64_t v1;

  return sub_23140166C(a1, v1);
}

void sub_23139BDA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECFA20)
  {
    sub_2313411FC(255, &qword_255ECFA28, (void (*)(uint64_t))sub_2312D39CC);
    sub_231411608();
    sub_231341258(&qword_255ECFA40, &qword_255ECFA28, (void (*)(uint64_t))sub_2312D39CC);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECFA20);
  }
}

void sub_23139BE48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECFA48)
  {
    sub_23139BDA0();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ECFA58, (uint64_t (*)(uint64_t))sub_23139BDA0, MEMORY[0x24BDB94C8]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECFA48);
  }
}

void sub_23139BEFC(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415DE80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_23139BF18()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23139BF3C(uint64_t a1)
{
  return sub_2312D2960(a1);
}

uint64_t sub_23139BF44()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23139BF70(char a1)
{
  uint64_t v1;

  sub_231399064(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23139BF88()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23139BFB4()
{
  uint64_t v0;

  return sub_231399DD0(*(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_23139BFE0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23139C004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_231399D4C(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_23139C014(char a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _OWORD v8[2];

  v4 = sub_231398DE4(a1);
  v5 = v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController;
  if (MEMORY[0x2348DE3BC](v2 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_rootViewController))
  {
    v6 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType();
    memset(v8, 0, sizeof(v8));
    (*(void (**)(void *, _OWORD *, uint64_t, uint64_t))(v6 + 32))(v4, v8, ObjectType, v6);
    sub_2314130CC();
    sub_2313045B8((uint64_t)v8);
  }
  __asm { BR              X10 }
}

void sub_23139C0CC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;
  uint64_t v5;
  int v6;
  _BOOL8 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[14];

  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart34CardioFitnessOnboardingCoordinator_model);
  if (v3 == 1)
  {
    v6 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsChanged);
    v7 = v6 == 2 || (v6 & 1) == 0;
  }
  else
  {
    v7 = 1;
  }
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 32));
  sub_23140127C((uint64_t *)(v8 + 16), v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 32));
  v9 = v12[1];
  swift_release();
  if (v9)
  {
    v10 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v2, sel_submitOnboardingEventForStep_acceptDefaults_countryCode_, v4, v7, v10);

}

void sub_23139C24C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t aBlock;
  uint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  void *v32;
  _QWORD *v33;

  ObjectType = swift_getObjectType();
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = ObjectType;
  swift_retain();
  v11 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v32 = sub_23139C7D4;
  v33 = v10;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_231386C84;
  v31 = &unk_2500263B8;
  v12 = _Block_copy(&aBlock);
  swift_release();
  v25 = (id)objc_opt_self();
  v13 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v11, 0, v12, 0xE000000000000000);
  _Block_release(v12);

  v14 = v13;
  v15 = objc_msgSend(v8, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata);
  sub_231411374();

  v16 = objc_msgSend(v8, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v17 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v17, v18, 0, 0xE000000000000000);

  v20 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  swift_retain();
  v22 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v32 = sub_23139C804;
  v33 = (_QWORD *)v21;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_231386C84;
  v31 = &unk_250026408;
  v23 = _Block_copy(&aBlock);
  swift_release();
  v24 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v22, 1, v23, 0xE000000000000000);
  _Block_release(v23);

  objc_msgSend(v19, sel_addAction_, v24);
  if (v14)
  {
    objc_msgSend(v19, sel_addAction_, v14);

  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v19, 1, 0);

}

uint64_t sub_23139C6E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23139C708()
{
  uint64_t v0;

  sub_23139C014(*(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_23139C734()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23139C768()
{
  uint64_t v0;

  return sub_23139ADC4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_23139C778(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECFA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23139C794(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECFA80, (uint64_t (*)(uint64_t))MEMORY[0x24BE42510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_23139C7B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23139C7D4(uint64_t a1)
{
  uint64_t v1;

  return sub_23139A4CC(a1, *(void (**)(void (*)(), uint64_t))(v1 + 16));
}

uint64_t sub_23139C7E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23139C804()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t (*)(), _QWORD))(v0 + 16))(nullsub_1, 0);
}

uint64_t sub_23139C830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2314114AC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23139C8A4()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_2314114AC();
  v1 = *(void **)(v0 + 16);
  v2 = (id)sub_231411488();
  objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, 0);

}

void sub_23139C908(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;
  id v8;
  id v9;

  sub_231412A90();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v4, 1);

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v7 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v7, 1, 0, 0xE000000000000000);

  objc_msgSend(v9, sel_addAction_, v8);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v9, 1, 0);

}

void sub_23139CAAC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v0 = sub_231413780();
  sub_2312CE3B8(v0, (uint64_t)qword_254162FF0);
  v1 = sub_231413768();
  v2 = sub_23141495C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136446466;
    v5 = sub_2314151A8();
    sub_23133180C(v5, v6, &v7);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2082;
    sub_23133180C(0xD000000000000025, 0x800000023142EEB0, &v7);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v1, v2, "[%{public}s.%{public}s]: User dismissed modal view", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v4, -1, -1);
    MEMORY[0x2348DE308](v3, -1, -1);
  }

  sub_23139A0F8(0, 0, 0, 0);
}

uint64_t sub_23139CC84()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_23139CCB8()
{
  uint64_t v0;

  sub_2313988D8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23139CCC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23139CCE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23139CD10()
{
  uint64_t v0;

  return sub_23139ACE0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_23139CD80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = objc_msgSend(a1, sel_identifier);
  v4 = sub_2314146BC();
  v6 = v5;

  if (v4 == 0xD000000000000030 && v6 == 0x800000023142F020 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v7 = type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding();
    v8 = swift_allocObject();
    *(_QWORD *)(a2 + 24) = v7;
    result = (id)sub_2312CCC24(&qword_255ECFAA8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding, (uint64_t)&unk_23141BDC4);
    *(_QWORD *)(a2 + 32) = result;
    *(_QWORD *)a2 = v8;
    return result;
  }
  if (v4 == 0xD00000000000001ELL && v6 == 0x800000023142F060)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_231415070();
    result = (id)swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  v11 = type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider();
  v12 = swift_allocObject();
  result = objc_msgSend((id)objc_opt_self(), sel__quantityTypeWithCode_, 124);
  if (result)
  {
    *(_QWORD *)(v12 + 16) = result;
    *(_QWORD *)(a2 + 24) = v11;
    result = (id)sub_2312CCC24(&qword_255ECFAA0, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessDataTypeDetailDataSourceProvider, (uint64_t)&unk_23141E990);
    *(_QWORD *)(a2 + 32) = result;
    *(_QWORD *)a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23139CF54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23139CD80(a1, a2);
}

uint64_t *sub_23139CF68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v3;
  sub_2312E5F10();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231411A04();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23132B64C((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain, v15, v12);
  v16 = swift_allocObject();
  v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v16 + 56) = a2;
  *(_QWORD *)(v16 + 64) = v6;
  v18 = *(void **)a1;
  v23 = *(_QWORD *)(a1 + 8);
  v22 = v17;
  v19 = v18;
  sub_2312D0F3C((uint64_t)&v23);
  sub_2312E3A64((uint64_t)&v22);
  sub_2312E5F88();
  sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_231413E04();
  sub_2312CCC24((unint64_t *)&qword_25415DE20, (uint64_t (*)(uint64_t))sub_2312E5F10, MEMORY[0x24BDB9E90]);
  v20 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_publisher) = v20;

  swift_release();
  sub_23132E3CC((uint64_t)&v23);
  sub_23139D8E4((uint64_t)&v22);
  return v3;
}

uint64_t sub_23139D158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_2312E7F5C(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E804C(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2312CEA5C((_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 48));
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  sub_2312CEA5C(v12, v12[3]);
  *(_QWORD *)&v44 = v13;
  sub_2314119D4();
  v15 = sub_2314119B0();
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15);
  sub_23132E378((uint64_t)v11);
  v17 = *(void **)a1;
  if (v16 == 1)
  {
    v47 = *(_QWORD *)(a1 + 8);
    sub_231412A90();
    v18 = v17;
    sub_2312D0F3C((uint64_t)&v47);
    sub_231412A90();
    v19 = v18;
    sub_2312D0F3C((uint64_t)&v47);
    v20 = sub_231413768();
    v21 = sub_23141495C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v42 = v23;
      *(_DWORD *)v22 = 136446466;
      v45 = v43;
      v46 = v23;
      sub_23139D90C();
      v43 = v6;
      v24 = sub_2314146E0();
      v45 = sub_23133180C(v24, v25, &v46);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_231412A90();
      v45 = sub_23133180C(v44, v14, &v46);
      v6 = v43;
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s(%{public}s]: No previous feed item found, no changes necessary", (uint8_t *)v22, 0x16u);
      v26 = v42;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v26, -1, -1);
      MEMORY[0x2348DE308](v22, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
    }
    v37 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v47 = *(_QWORD *)(a1 + 8);
    v27 = v17;
    sub_2312D0F3C((uint64_t)&v47);
    sub_231412A90();
    v28 = v27;
    sub_2312D0F3C((uint64_t)&v47);
    sub_231412A90();
    v29 = sub_231413768();
    v30 = sub_23141495C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v42 = v32;
      *(_DWORD *)v31 = 136446466;
      v45 = v43;
      v46 = v32;
      sub_23139D90C();
      v43 = v5;
      v33 = sub_2314146E0();
      v45 = sub_23133180C(v33, v34, &v46);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_231412A90();
      v35 = v44;
      v45 = sub_23133180C(v44, v14, &v46);
      v5 = v43;
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v29, v30, "[%{public}s(%{public}s]: Previous feed item found, removing identifier", (uint8_t *)v31, 0x16u);
      v36 = v42;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v36, -1, -1);
      MEMORY[0x2348DE308](v31, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v47);
      swift_bridgeObjectRelease();
      v35 = v44;
    }
    v38 = MEMORY[0x24BEE3598];
    sub_2312CF374(0, &qword_25415BBD8, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v37 = swift_allocObject();
    v44 = xmmword_231416A30;
    *(_OWORD *)(v37 + 16) = xmmword_231416A30;
    sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))v38);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v44;
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v14;
    *(_QWORD *)(v37 + 32) = v39;
    *(_QWORD *)(v37 + 40) = 0;
    *(_QWORD *)(v37 + 48) = 0;
    *(_QWORD *)(v37 + 56) = 0;
    *(_BYTE *)(v37 + 64) = 32;
    sub_231412A90();
  }
  v46 = v37;
  sub_2312CF374(0, (unint64_t *)&qword_25415DE58, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231413DD4();
  sub_2312CCC24((unint64_t *)&qword_25415DDC8, (uint64_t (*)(uint64_t))sub_2312E7F5C, MEMORY[0x24BDB9DF8]);
  v40 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v40;
}

uint64_t sub_23139D77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23139D7DC()
{
  return type metadata accessor for EmptyRelatedSampleTypesGenerator();
}

uint64_t type metadata accessor for EmptyRelatedSampleTypesGenerator()
{
  uint64_t result;

  result = qword_25415C7A0;
  if (!qword_25415C7A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23139D820()
{
  return swift_retain();
}

uint64_t sub_23139D834@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart32EmptyRelatedSampleTypesGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23139D87C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23139D8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23139D158(v1 + 16, *(_QWORD *)(v1 + 56));
  *a1 = result;
  return result;
}

uint64_t sub_23139D8E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23139D90C()
{
  unint64_t result;

  result = qword_25415D3A0;
  if (!qword_25415D3A0)
  {
    type metadata accessor for EmptyRelatedSampleTypesGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D3A0);
  }
  return result;
}

uint64_t sub_23139D944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  sub_2312CF374(0, (unint64_t *)&qword_255ECACA0, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BE45B58]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2E00], a2);
  sub_231414A40();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  sub_23139E7A4();
  sub_231414B84();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_23139DA6C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_23139DA88()
{
  id v0;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_23139DAF8(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231418090;
  if ((a1 & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
  }
  else if ((a2 & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
  }
  else if (qword_25415E610 != -1)
  {
    swift_once();
  }
  *(_QWORD *)(v4 + 32) = sub_231411374();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = sub_231411374();
  *(_QWORD *)(v4 + 56) = v6;
  return v4;
}

uint64_t sub_23139DCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  void *v21;
  char v22;
  void *v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_23141357C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_2313085A0(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2312F1A20((uint64_t)v6, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    if (qword_25415DF98 != -1)
      swift_once();
    v12 = sub_231413780();
    sub_2312CE3B8(v12, (uint64_t)qword_254162FF0);
    v13 = sub_231413768();
    v14 = sub_231414974();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v29 = v16;
      *(_DWORD *)v15 = 136446210;
      v27 = a2;
      v17 = sub_2314151A8();
      v28 = sub_23133180C(v17, v18, &v29);
      a2 = v27;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s]: No status available for IRN; reporting 'available'",
        v15,
        0xCu);
      v19 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v16, -1, -1);
      MEMORY[0x2348DE308](v15, -1, -1);

      v20 = 0;
    }
    else
    {

      v20 = 0;
      v19 = 1;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v21 = (void *)sub_231413588();
    LODWORD(v27) = sub_231414B90();
    v22 = sub_231414B90();

    v19 = v27 & v22;
    v23 = (void *)sub_231413588();
    v24 = sub_231414B90();

    v20 = v24 ^ 1;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_23139E0A0(v19 & 1, v20 & 1, a2);
}

uint64_t sub_23139E020()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_23139E0A0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char **v5;

  if ((a2 & 1) != 0)
  {
    v3 = 0xD00000000000001DLL;
    v4 = 0x800000023142B4C0;
    v5 = &selRef_seedExpiredLinkURL;
    return sub_23139E32C((SEL *)v5, v3, v4, a3);
  }
  if ((a1 & 1) != 0)
  {
    v4 = 0x800000023142B4E0;
    v5 = &selRef_irregularHeartRhythmFooterLinkURL;
    v3 = 0xD00000000000001BLL;
    return sub_23139E32C((SEL *)v5, v3, v4, a3);
  }
  return sub_23139E134(a3);
}

uint64_t sub_23139E134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[2];

  sub_2312D1E78(0, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - v4;
  sub_2314114A0();
  v6 = sub_2314114AC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
  sub_2312F1A20((uint64_t)v5, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  sub_2313311C4(0, (unint64_t *)&qword_25415DF58, (unint64_t *)&qword_25415DF90, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231418090;
  v15[1] = v1;
  swift_getMetatypeMetadata();
  v10 = sub_2314146E0();
  v12 = v11;
  v13 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v14 = sub_2312D6E84();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 96) = v13;
  *(_QWORD *)(v9 + 104) = v14;
  *(_QWORD *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 72) = 0xD000000000000025;
  *(_QWORD *)(v9 + 80) = 0x800000023142B490;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_23139E32C@<X0>(SEL *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[2];

  sub_2312D1E78(0, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v22 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), *a1);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
  v13 = sub_2314114AC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v11, v13);
  sub_2312F1A20((uint64_t)v11, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  sub_2313311C4(0, (unint64_t *)&qword_25415DF58, (unint64_t *)&qword_25415DF90, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_231418090;
  v22[1] = v4;
  swift_getMetatypeMetadata();
  v17 = sub_2314146E0();
  v19 = v18;
  v20 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
  v21 = sub_2312D6E84();
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v19;
  *(_QWORD *)(v16 + 96) = v20;
  *(_QWORD *)(v16 + 104) = v21;
  *(_QWORD *)(v16 + 64) = v21;
  *(_QWORD *)(v16 + 72) = a2;
  *(_QWORD *)(v16 + 80) = a3;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

void sub_23139E548(char a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  uint64_t v15;

  if ((a1 & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v3 = sub_231413780();
    sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
    v4 = a2;
    v5 = a2;
    oslog = sub_231413768();
    v6 = sub_231414974();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v15 = v8;
      *(_DWORD *)v7 = 136315394;
      v9 = sub_2314151A8();
      sub_23133180C(v9, v10, &v15);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      v11 = a2;
      sub_2313311C4(0, (unint64_t *)&unk_255ED1EC0, (unint64_t *)&qword_25415DF60, MEMORY[0x24BEE3EE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v12 = sub_2314146EC();
      sub_23133180C(v12, v13, &v15);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, oslog, v6, "[%s]: Unable to change IRN setting: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v8, -1, -1);
      MEMORY[0x2348DE308](v7, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_23139E78C()
{
  return swift_deallocObject();
}

void sub_23139E79C(char a1, void *a2)
{
  sub_23139E548(a1, a2);
}

unint64_t sub_23139E7A4()
{
  unint64_t result;

  result = qword_255ECFAB0;
  if (!qword_255ECFAB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECFAB0);
  }
  return result;
}

void sub_23139E7E0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_2312D3C68(0, &qword_255ECFBE0);
    v5 = (void *)sub_231414788();
  }
  if (a2)
    v6 = sub_231411404();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

id sub_23139E874()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v12[5];

  v1 = OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_store);
    sub_2312DF850(v0 + OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_healthExperienceStore, (uint64_t)v12);
    v6 = objc_allocWithZone((Class)type metadata accessor for SummariesElectrocardiogramDataFetcher());
    v7 = v5;
    v8 = sub_23139FD20(v7, v12, 0, 0);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_23139EBB0()
{
  return sub_231334858(type metadata accessor for SummariesElectrocardiogramListDataProvider);
}

uint64_t type metadata accessor for SummariesElectrocardiogramListDataProvider()
{
  return objc_opt_self();
}

void sub_23139EC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, _QWORD);
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t i;
  id v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  id v28;
  void (*v29)(_QWORD, void *);
  void *v30;
  _BYTE *v31;
  void (*v32)(_QWORD, void *);
  void *v33;
  _BYTE *v34;
  unint64_t v35;
  _QWORD v36[2];
  uint8_t *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;

  v1 = v0;
  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_queryData);
  if (!v6)
  {
    v29 = *(void (**)(_QWORD, void *))(v1
                                                + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
    if (v29)
    {
      sub_23139F920();
      v30 = (void *)swift_allocError();
      *v31 = 4;
      swift_retain();
      v29(0, v30);
      sub_23130E320((uint64_t)v29);

    }
    return;
  }
  v38 = v6;
  v7 = objc_msgSend(v38, sel_samples);
  if (!v7
    || (v8 = v7,
        v40 = 0,
        sub_2312D3C68(0, (unint64_t *)&unk_255ECFBC0),
        sub_231414794(),
        v8,
        (v9 = v40) == 0))
  {
    sub_23141372C();
    v20 = v38;
    v21 = sub_231413768();
    v22 = sub_231414974();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v38 = (id)swift_slowAlloc();
      v39 = (uint64_t)v20;
      v40 = (unint64_t)v38;
      *(_DWORD *)v23 = 136315138;
      v36[1] = v23 + 4;
      v37 = v23;
      sub_2312D3C68(0, &qword_255ECFBB8);
      v24 = v20;
      v25 = sub_2314146EC();
      v39 = sub_23133180C(v25, v26, (uint64_t *)&v40);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      v27 = v37;
      _os_log_impl(&dword_2312C8000, v21, v22, "Cound not decode samples from query data %s", v37, 0xCu);
      v28 = v38;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v27, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v32 = *(void (**)(_QWORD, void *))(v1
                                                + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
    if (v32)
    {
      sub_23139F920();
      v33 = (void *)swift_allocError();
      *v34 = 4;
      swift_retain();
      v32(0, v33);

      sub_23130E320((uint64_t)v32);
    }
    else
    {

    }
    return;
  }
  v10 = v1 + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler;
  v11 = *(void (**)(unint64_t, _QWORD))(v1
                                                        + OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler);
  if (!v11)
    goto LABEL_29;
  v12 = *(uint8_t **)(v10 + 8);
  v40 = MEMORY[0x24BEE4AF8];
  if (v9 >> 62)
  {
    sub_231361B58((uint64_t)v11);
    sub_231412A90();
    v13 = sub_231414F08();
    if (v13)
      goto LABEL_7;
LABEL_27:
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
LABEL_28:
    swift_bridgeObjectRelease();
    v11(v35, 0);
    sub_23130E320((uint64_t)v11);
LABEL_29:
    swift_bridgeObjectRelease();

    return;
  }
  v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_231361B58((uint64_t)v11);
  sub_231412A90();
  if (!v13)
    goto LABEL_27;
LABEL_7:
  v37 = v12;
  v14 = objc_opt_self();
  if (v13 >= 1)
  {
    v15 = (void *)v14;
    for (i = 0; i != v13; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x2348DD81C](i, v9);
      else
        v17 = *(id *)(v9 + 8 * i + 32);
      v18 = v17;
      v19 = objc_msgSend(v15, sel_createWithCodableECG_, v17);

      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2314147DC();
      sub_2314147E8();
      sub_2314147B8();
    }
    swift_bridgeObjectRelease();
    v35 = v40;
    goto LABEL_28;
  }
  __break(1u);
}

void sub_23139F164(_QWORD *a1, uint64_t a2, void *a3, void **a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  void *v39;
  unsigned int v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  char *v59;
  NSObject *v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;

  v65 = a3;
  v6 = sub_231413780();
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v64 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v64 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v64 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v64 - v19;
  sub_2312CEA5C(a1, a1[3]);
  v21 = (void *)sub_23141183C();
  sub_231411BF0();
  v30 = sub_231414B54();
  v64 = v15;

  if (!(v30 >> 62))
  {
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
LABEL_36:
    swift_bridgeObjectRelease();
    sub_231413750();
    v22 = v65;
    v23 = sub_231413768();
    v24 = sub_231414980();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v68 = v22;
      v27 = v22;
      sub_231414CBC();
      *v26 = v22;

      _os_log_impl(&dword_2312C8000, v23, v24, "Missing feed item when trying to decode Summaries data for %@", v25, 0xCu);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v26, -1, -1);
      MEMORY[0x2348DE308](v25, -1, -1);
    }
    else
    {

      v23 = v22;
    }
    v29 = v66;
    v28 = v67;

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    return;
  }
  sub_231412A90();
  v63 = sub_231414F08();
  swift_bridgeObjectRelease();
  if (!v63)
    goto LABEL_36;
LABEL_9:
  if ((v30 & 0xC000000000000001) != 0)
  {
    v31 = (id)MEMORY[0x2348DD81C](0, v30);
  }
  else
  {
    if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v31 = *(id *)(v30 + 32);
  }
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v32, sel_userData);
  if (v33)
  {
    v34 = sub_2314114DC();
    v36 = v35;

    v33 = (id)sub_2314114C4();
    sub_2312D6CA8(v34, v36);
  }
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A348]), sel_initWithData_, v33);

  if (!v37)
  {
    sub_231413750();
    v50 = sub_231413768();
    v51 = sub_231414980();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_2312C8000, v50, v51, "Unable to decode chart feed item data", v52, 2u);
      MEMORY[0x2348DE308](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v20, v67);
    return;
  }
  v38 = objc_msgSend(v37, sel_chartModel);
  if (!v38)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, sel_hasSixMonthData);

  if (v40)
  {
    v41 = objc_msgSend(v37, sel_chartModel);
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v41, sel_sixMonthData);

      if (v43)
      {
        v44 = objc_msgSend(v43, sel_queryDataObject);
        if (v44)
        {
          v45 = sub_2314114DC();
          v47 = v46;

          v44 = (id)sub_2314114C4();
          sub_2312D6CA8(v45, v47);
        }
        v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A398]), sel_initWithData_, v44);

        if (v48)
        {

          v49 = *a4;
          *a4 = v48;

        }
        else
        {
          v59 = v64;
          sub_231413750();
          v60 = sub_231413768();
          v61 = sub_231414980();
          if (os_log_type_enabled(v60, (os_log_type_t)v61))
          {
            v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v62 = 0;
            _os_log_impl(&dword_2312C8000, v60, (os_log_type_t)v61, "Unable to decode query data from charting model", v62, 2u);
            MEMORY[0x2348DE308](v62, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v67);
        }
      }
      else
      {
        sub_231413750();
        v56 = sub_231413768();
        v57 = sub_231414980();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          _os_log_impl(&dword_2312C8000, v56, v57, "Unable to decode sharable charting model", v58, 2u);
          MEMORY[0x2348DE308](v58, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v66 + 8))(v18, v67);
      }
      return;
    }
LABEL_40:
    __break(1u);
    return;
  }
  sub_231413750();
  v53 = sub_231413768();
  v54 = sub_231414980();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v55 = 0;
    _os_log_impl(&dword_2312C8000, v53, v54, "Missing data charting model", v55, 2u);
    MEMORY[0x2348DE308](v55, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v67);
}

uint64_t sub_23139F84C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_23139F898()
{
  return sub_231334858(type metadata accessor for SummariesElectrocardiogramDataFetcher);
}

uint64_t type metadata accessor for SummariesElectrocardiogramDataFetcher()
{
  return objc_opt_self();
}

unint64_t sub_23139F920()
{
  unint64_t result;

  result = qword_255ECFBB0;
  if (!qword_255ECFBB0)
  {
    result = MEMORY[0x2348DE248](&unk_23141F67C, &type metadata for SummariesElectrocardiogramDataFetcher.FetchingError);
    atomic_store(result, (unint64_t *)&qword_255ECFBB0);
  }
  return result;
}

uint64_t sub_23139F964(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  __int128 v27;
  _QWORD aBlock[6];
  __int128 v29[2];
  uint64_t v30;

  sub_2312D6DD8(0, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&aBlock[-2] - v4;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_electrocardiogramType);
  sub_231411BF0();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = sub_231411890();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  v27 = xmmword_231416A30;
  *(_OWORD *)(v10 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x24BE47440], v7);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231417F90;
  *(_QWORD *)(v11 + 32) = v6;
  aBlock[0] = v11;
  sub_2314147B8();
  v12 = aBlock[0];
  v13 = sub_231411248();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_2312D6CEC(0, (unint64_t *)&qword_255ECE908);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v27;
  v15 = v6;
  *(_QWORD *)(v14 + 32) = sub_231414914();
  v16 = (void *)MEMORY[0x2348DA5A0](v10, v12, v5, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23139FE40((uint64_t)v5);
  v17 = v16;
  v18 = (void *)sub_231411BD8();

  v30 = 0;
  sub_2312CEA5C(a2, a2[3]);
  v19 = sub_23141183C();
  sub_2312DF850((uint64_t)a2, (uint64_t)v29);
  v20 = (_QWORD *)swift_allocObject();
  sub_2312DFB68(v29, (uint64_t)(v20 + 2));
  v20[7] = v18;
  v20[8] = v15;
  v20[9] = &v30;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_23139FEC8;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_23139CCC4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23139F84C;
  aBlock[3] = &unk_250026670;
  v22 = _Block_copy(aBlock);
  v23 = v15;
  v24 = v18;
  swift_retain();
  swift_release();
  objc_msgSend((id)v19, sel_performBlockAndWait_, v22);

  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v30;
    swift_release();
    return v26;
  }
  return result;
}

id sub_23139FD20(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  objc_super v18;

  v9 = (uint64_t *)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_resultsHandler];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_healthStore] = a1;
  sub_2312DF850((uint64_t)a2, (uint64_t)&v4[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_healthExperienceStore]);
  v10 = *v9;
  *v9 = a3;
  v9[1] = a4;
  v11 = v4;
  v12 = a1;
  sub_231361B58(a3);
  sub_23130E320(v10);
  v13 = (id)sub_23139F964((uint64_t)v12, a2);
  v14 = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_queryData] = v13;
  if (v13)
    v13 = objc_msgSend(v13, sel_activeAlgorithmVersionRawValue);
  v15 = &v11[OBJC_IVAR____TtC5Heart37SummariesElectrocardiogramDataFetcher_activeAlgorithmVersion];
  *(_QWORD *)v15 = v13;
  v15[8] = v14 == 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for SummariesElectrocardiogramDataFetcher();
  v16 = objc_msgSendSuper2(&v18, sel_init);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a2);
  return v16;
}

uint64_t sub_23139FE40(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23139FE94()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);

  return swift_deallocObject();
}

void sub_23139FEC8()
{
  uint64_t v0;

  sub_23139F164((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(void ***)(v0 + 72));
}

uint64_t sub_23139FED8()
{
  return swift_deallocObject();
}

uint64_t sub_23139FEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23139FEF8()
{
  return swift_release();
}

uint64_t sub_23139FF00()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for SummariesElectrocardiogramDataFetcher.FetchingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23139FF70 + 4 * byte_23141F5A5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23139FFA4 + 4 * asc_23141F5A0[v4]))();
}

uint64_t sub_23139FFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23139FFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23139FFB4);
  return result;
}

uint64_t sub_23139FFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23139FFC8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23139FFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23139FFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummariesElectrocardiogramDataFetcher.FetchingError()
{
  return &type metadata for SummariesElectrocardiogramDataFetcher.FetchingError;
}

unint64_t sub_23139FFF4()
{
  unint64_t result;

  result = qword_255ECFBE8;
  if (!qword_255ECFBE8)
  {
    result = MEMORY[0x2348DE248](&unk_23141F654, &type metadata for SummariesElectrocardiogramDataFetcher.FetchingError);
    atomic_store(result, (unint64_t *)&qword_255ECFBE8);
  }
  return result;
}

ValueMetadata *_s37AFibBurdenLifeFactorsPlatterComponentVMa()
{
  return &_s37AFibBurdenLifeFactorsPlatterComponentVN;
}

uint64_t sub_2313A004C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD v22[5];

  v2 = sub_231412DA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412D9C();
  v6 = sub_231412514();
  v8 = v7;
  if (v6 == sub_231412514() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_12:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v10 & 1) != 0)
    goto LABEL_12;
  sub_231412D9C();
  v11 = sub_231412514();
  v13 = v12;
  if (v11 == sub_231412514() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v16 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v16 & 1) != 0)
    return 0;
  v17 = (void *)sub_231412D78();
  sub_231412D60();
  v18 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource());
  v19 = sub_2313F61DC(v17, v22);
  sub_2313A022C();
  return v19;
}

unint64_t sub_2313A022C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECFBF0;
  if (!qword_255ECFBF0)
  {
    v1 = type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
    result = MEMORY[0x2348DE248](MEMORY[0x24BE449E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECFBF0);
  }
  return result;
}

void sub_2313A0274()
{
  qword_255ED2DD0 = 0x4030000000000000;
}

void sub_2313A0284()
{
  qword_255ED2DD8 = 0x4024000000000000;
}

uint64_t sub_2313A0294()
{
  uint64_t result;
  uint64_t v1;

  result = HKUIOnePixel();
  qword_255ED2DE0 = v1;
  return result;
}

id sub_2313A02B0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
  qword_255ED2DE8 = (uint64_t)result;
  return result;
}

id sub_2313A02E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel);
  }
  else
  {
    v4 = sub_2313A0344();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2313A0344()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v1, 0xE000000000000000);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v2 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x24BEBE1D0], *MEMORY[0x24BEBB610]);
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

id sub_2313A04AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    if (qword_255ECAA28 != -1)
      swift_once();
    objc_msgSend(v4, sel_setBackgroundColor_, qword_255ED2DE8);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_2313A0570()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView);
  }
  else
  {
    v4 = sub_2313A05D0(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_2313A05D0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  objc_class *v4;
  char *v5;
  id v6;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_cacheObject);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_healthStore);
  v4 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorsView();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject] = v2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_healthStore] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  v6 = v3;
  sub_231412A90();
  v7 = (char *)objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2313488F8();

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v10.receiver, v10.super_class);
  v8 = a1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate;
  MEMORY[0x2348DE3BC](v8);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate + 8] = *(_QWORD *)(v8 + 8);
  swift_unknownObjectWeakAssign();
  sub_2314130CC();
  return v7;
}

void sub_2313A072C()
{
  void *v0;
  id v1;
  double v2;
  id v3;
  double v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;

  v1 = sub_2313A02E8();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v2);

  v3 = sub_2313A02E8();
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);

  v53 = (void *)objc_opt_self();
  sub_2312D3AD4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23141F720;
  v6 = sub_2313A02E8();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v0, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = sub_2313A02E8();
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(v0, sel_leadingAnchor);
  if (qword_255ECAA10 != -1)
    swift_once();
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, *(double *)&qword_255ED2DD0);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = sub_2313A02E8();
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v0, sel_trailingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, -*(double *)&qword_255ED2DD0);

  *(_QWORD *)(v5 + 48) = v17;
  v18 = sub_2313A04AC();
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = sub_2313A02E8();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  if (qword_255ECAA18 != -1)
    swift_once();
  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_255ED2DD8);

  *(_QWORD *)(v5 + 56) = v22;
  v23 = sub_2313A04AC();
  v24 = objc_msgSend(v23, sel_heightAnchor);

  if (qword_255ECAA20 != -1)
    swift_once();
  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, *(double *)&qword_255ED2DE0);

  *(_QWORD *)(v5 + 64) = v25;
  v26 = sub_2313A04AC();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = sub_2313A02E8();
  v29 = objc_msgSend(v28, sel_leadingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v5 + 72) = v30;
  v31 = sub_2313A04AC();
  v32 = objc_msgSend(v31, sel_trailingAnchor);

  v33 = sub_2313A02E8();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
  *(_QWORD *)(v5 + 80) = v35;
  v36 = sub_2313A0570();
  v37 = objc_msgSend(v36, sel_topAnchor);

  v38 = sub_2313A04AC();
  v39 = objc_msgSend(v38, sel_bottomAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v5 + 88) = v40;
  v41 = sub_2313A0570();
  v42 = objc_msgSend(v41, sel_bottomAnchor);

  v43 = objc_msgSend(v0, sel_bottomAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(_QWORD *)(v5 + 96) = v44;
  v45 = sub_2313A0570();
  v46 = objc_msgSend(v45, sel_leadingAnchor);

  v47 = objc_msgSend(v0, sel_leadingAnchor);
  v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

  *(_QWORD *)(v5 + 104) = v48;
  v49 = sub_2313A0570();
  v50 = objc_msgSend(v49, sel_trailingAnchor);

  v51 = objc_msgSend(v0, sel_trailingAnchor);
  v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(_QWORD *)(v5 + 112) = v52;
  sub_2314147B8();
  sub_2312EA780();
  v54 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v53, sel_activateConstraints_, v54);

}

void sub_2313A0D14(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  if (a2)
  {
    v3 = (void *)sub_23141468C();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    v4 = sub_2313A02E8();
    sub_231412A90();
    sub_231414728();
    v5 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  }
}

id sub_2313A0E1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsTileView()
{
  return objc_opt_self();
}

void sub_2313A0EF8(uint64_t a1, uint64_t a2)
{
  sub_2313A0D14(a1, a2);
}

void sub_2313A0F18()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  v3 = sub_2312E21E8(261);
  v4 = v2;
  sub_231414728();
  *v1 = v3;
  v1[1] = v4;

  sub_231414EE4();
  __break(1u);
}

uint64_t type metadata accessor for AFibBurdenOnboardingStartViewController()
{
  uint64_t result;

  result = qword_255ECFC68;
  if (!qword_255ECFC68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313A1030()
{
  return swift_initClassMetadata2();
}

void sub_2313A1080()
{
  unsigned __int8 *v0;
  void *v1;
  int v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  objc_super v14;

  v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for AFibBurdenOnboardingStartViewController();
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  v2 = v0[qword_255ECFC60];
  if (v2 == 1)
    objc_msgSend(v0, sel_hxui_addCancelButton);
  v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setBackButtonDisplayMode_, 1);

  v4 = objc_msgSend(v1, sel_headerView);
  if (qword_255ECA990 != -1)
    swift_once();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v5 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  if (v2)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    sub_2312E42E4();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_231418090;
    *(_QWORD *)(v7 + 32) = 0xD000000000000014;
    *(_QWORD *)(v7 + 40) = 0x8000000231427740;
    *(_QWORD *)(v7 + 48) = 0x7472617453;
    *(_QWORD *)(v7 + 56) = 0xE500000000000000;
    v8 = (char *)sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v7);
    *((_QWORD *)v8 + 2) = 3;
    strcpy(v8 + 64, "ContinueButton");
    v8[79] = -18;
    v9 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    v10 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v10)
    {
      sub_2314146BC();

      swift_arrayDestroy();
      v11 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();

      v12 = objc_msgSend(v1, sel_buttonTray);
      sub_231411374();
      v13 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setCaptionText_, v13, 0xE000000000000000);

    }
    else
    {
      swift_arrayDestroy();
      __break(1u);
    }
  }
}

void sub_2313A1490(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313A1080();

}

uint64_t sub_2313A14C4(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ECFC58];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ECFC58]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 8);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_2313A1554(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ECFC58];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ECFC58]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 16);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_2313A15E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + qword_255ECFC58;
  result = MEMORY[0x2348DE3BC](v0 + qword_255ECFC58);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 24))(v0, &off_250026858, ObjectType, v3);
    return sub_2314130CC();
  }
  return result;
}

void sub_2313A165C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2313A1688()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313A16B4()
{
  uint64_t v0;

  return sub_2312D2854(v0 + qword_255ECFC58);
}

id sub_2313A16C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingStartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313A16F8(uint64_t a1)
{
  return sub_2312D2854(a1 + qword_255ECFC58);
}

uint64_t sub_2313A1708()
{
  return type metadata accessor for AFibBurdenOnboardingStartViewController();
}

uint64_t sub_2313A1710()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + qword_255ECFC58);
}

uint64_t sub_2313A1740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + qword_255ECFC58 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313A1778()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  sub_2312D3C68(0, &qword_255ECCA40);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231414C20();
  v3 = (id)sub_2314149BC();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_23131DB9C, v2);

}

void sub_2313A1890(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313A1778();

}

void sub_2313A18C4(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

uint64_t sub_2313A191C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;

  *(_QWORD *)(v3 + qword_255ECFC58 + 8) = 0;
  v6 = swift_unknownObjectWeakInit();
  *(_BYTE *)(v3 + qword_255ECFC60) = a1;
  *(_QWORD *)(v6 + 8) = a3;
  swift_unknownObjectWeakAssign();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  if (qword_25415E610 != -1)
    swift_once();
  v7 = (id)qword_254163058;
  v8 = (void *)sub_23141468C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v8, v7, 0xE000000000000000);

  if (!v9)
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  sub_231411374();
  sub_2312E42E4();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_231418090;
  *(_QWORD *)(v10 + 32) = 0xD000000000000014;
  *(_QWORD *)(v10 + 40) = 0x8000000231427740;
  *(_QWORD *)(v10 + 48) = 0x7472617453;
  *(_QWORD *)(v10 + 56) = 0xE500000000000000;
  v11 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v10);
  v11[2] = 3;
  v11[8] = 0x726F4D6E7261654CLL;
  v11[9] = 0xEF6E6F7474754265;
  v12 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    sub_2314146BC();

    swift_arrayDestroy();
    return sub_231413258();
  }
  else
  {
    result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

uint64_t sub_2313A1C70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313A1C94()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_2313A2838();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject];
  v7 = (os_unfair_lock_s *)(v6 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  v8 = *(_QWORD *)(v6 + 16);
  swift_retain();
  os_unfair_lock_unlock(v7);
  v12[1] = v8;
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  sub_2313A28CC();
  sub_2313A29B4();
  sub_2312CCC24((unint64_t *)&unk_25415D000, (uint64_t (*)(uint64_t))sub_2313A28CC, MEMORY[0x24BDB9D10]);
  v9 = v0;
  sub_231413E88();
  swift_release();
  swift_release();
  sub_2312CCC24((unint64_t *)&unk_25415CDC8, (uint64_t (*)(uint64_t))sub_2313A2838, MEMORY[0x24BDB94C8]);
  v10 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

_BYTE *sub_2313A1E14@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  char v4;

  v3 = *(void **)result;
  if (result[8] == 1)
  {
    result = v3;
    v4 = 1;
  }
  else if (v3)
  {
    result = v3;
    v4 = 0;
  }
  else
  {
    v4 = -1;
  }
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

char *sub_2313A1E6C(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *, void *);
  void *v22;
  void (*v23)(void *, void *);
  uint64_t v24;
  objc_super v25;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject;
  v19 = 0;
  LOBYTE(v20) = 0;
  sub_2313A28CC();
  swift_allocObject();
  v6 = v1;
  v7 = sub_231413D8C();
  sub_2313A2A5C();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)&v2[v5] = v8;
  if (a1)
    v9 = a1;
  else
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1428]), sel_init, v19, v20);
  *(_QWORD *)&v6[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager] = v9;
  v10 = a1;

  v25.receiver = v6;
  v25.super_class = ObjectType;
  v11 = (char *)objc_msgSendSuper2(&v25, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager];
  v13 = v11;
  objc_msgSend(v12, sel_setDelegate_, v13);
  objc_msgSend(v12, sel_startRetrocomputeStatusUpdates);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v23 = sub_2313A2B08;
  v24 = v15;
  v19 = MEMORY[0x24BDAC760];
  v20 = 1107296256;
  v21 = sub_23139B36C;
  v22 = &unk_250026968;
  v16 = _Block_copy(&v19);
  v17 = v12;
  swift_release();
  objc_msgSend(v17, sel_retrocomputeStateWithHandler_, v16);

  _Block_release(v16);
  return v13;
}

void sub_2313A204C(void *a1, id a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  os_unfair_lock_s *v30;
  id v31;
  uint64_t v32;
  void *v33;
  os_unfair_lock_s *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v3 = a3 + 16;
  if (a1)
  {
    v5 = qword_25415DF98;
    v6 = a1;
    if (v5 != -1)
      swift_once();
    v7 = sub_231413780();
    sub_2312CE3B8(v7, (uint64_t)qword_254162FF0);
    v8 = v6;
    v9 = sub_231413768();
    v10 = sub_23141498C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v38[0] = v36;
      *(_DWORD *)v11 = 136446722;
      v13 = sub_2314151A8();
      sub_23133180C(v13, v14, v38);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2050;
      objc_msgSend(v8, sel_status);

      sub_231414CBC();
      *(_WORD *)(v11 + 22) = 2112;
      v15 = v8;
      sub_231414CBC();
      *v12 = a1;

      _os_log_impl(&dword_2312C8000, v9, v10, "[%{public}s] Received initial state with status %{public}ld: %@", (uint8_t *)v11, 0x20u);
      sub_2313A2B28(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v36, -1, -1);
      MEMORY[0x2348DE308](v11, -1, -1);

    }
    else
    {

    }
    swift_beginAccess();
    v28 = MEMORY[0x2348DE3BC](v3);
    if (v28)
    {
      v29 = (void *)v28;
      v30 = *(os_unfair_lock_s **)(v28
                                 + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject);
      swift_retain();

      os_unfair_lock_lock(v30 + 6);
      swift_retain();
      os_unfair_lock_unlock(v30 + 6);
      swift_release();
      v31 = v8;
      sub_231413D74();

      swift_release();
      return;
    }
  }
  else
  {
    v8 = a2;
    if (!a2)
      return;
    v16 = a2;
    if (qword_25415DF98 != -1)
      swift_once();
    v17 = sub_231413780();
    sub_2312CE3B8(v17, (uint64_t)qword_254162FF0);
    v18 = v8;
    v19 = v8;
    v20 = sub_231413768();
    v21 = sub_231414974();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v38[0] = v24;
      *(_DWORD *)v22 = 136446466;
      v25 = sub_2314151A8();
      sub_23133180C(v25, v26, v38);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2112;
      v27 = v8;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      sub_231414CBC();
      *v23 = v37;

      _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s] Failed to get initial retrocompute state: %@", (uint8_t *)v22, 0x16u);
      sub_2313A2B28(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v24, -1, -1);
      MEMORY[0x2348DE308](v22, -1, -1);
    }
    else
    {

    }
    swift_beginAccess();
    v32 = MEMORY[0x2348DE3BC](v3);
    if (v32)
    {
      v33 = (void *)v32;
      v34 = *(os_unfair_lock_s **)(v32
                                 + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject);
      swift_retain();

      os_unfair_lock_lock(v34 + 6);
      swift_retain();
      os_unfair_lock_unlock(v34 + 6);
      swift_release();
      v35 = v8;
      sub_231413D74();
      swift_release();

    }
  }

}

id sub_2313A261C()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_manager], sel_stopRetrocomputeStatusUpdates);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for CMVO2MaxRetrocomputeStatePublisher()
{
  return objc_opt_self();
}

uint64_t sub_2313A2824()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for SendableCurrentValueSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2313A3100(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SendableCurrentValueSubject);
}

void sub_2313A2838()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CDD8)
  {
    sub_2313A28CC();
    sub_2313A29B4();
    sub_2312CCC24((unint64_t *)&unk_25415D000, (uint64_t (*)(uint64_t))sub_2313A28CC, MEMORY[0x24BDB9D10]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CDD8);
  }
}

void sub_2313A28CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D010)
  {
    sub_2313A2930();
    v0 = sub_231413D80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D010);
  }
}

void sub_2313A2930()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D138)
  {
    sub_2313A2B28(255, (unint64_t *)&unk_25415D100, &qword_25415BB60);
    sub_2312D3C14();
    v0 = sub_231415160();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D138);
  }
}

void sub_2313A29B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BBF8)
  {
    sub_2312D3C68(255, &qword_25415BB60);
    sub_2312D3C14();
    v0 = sub_231415160();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BBF8);
  }
}

uint64_t sub_2313A2A30()
{
  uint64_t v0;

  return swift_deallocObject();
}

_BYTE *sub_2313A2A54@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>)
{
  return sub_2313A1E14(result, a2);
}

void sub_2313A2A5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C0D0)
  {
    sub_2313A28CC();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_231414E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C0D0);
  }
}

uint64_t sub_2313A2AC0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313A2AE4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2313A2B08(void *a1, void *a2)
{
  uint64_t v2;

  sub_2313A204C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313A2B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313A2B20()
{
  return swift_release();
}

void sub_2313A2B28(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2312D3C68(255, a3);
    v4 = sub_231414CB0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2313A2B7C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  os_unfair_lock_s *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v2 = v1;
  swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
  v5 = a1;
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v8 = 136446722;
    v10 = sub_2314151A8();
    sub_23133180C(v10, v11, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2050;
    objc_msgSend(v5, sel_status);

    sub_231414CBC();
    *(_WORD *)(v8 + 22) = 2112;
    v12 = v2;
    v13 = v5;
    sub_231414CBC();
    *v9 = v5;

    v2 = v12;
    _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s] Received new state with status %{public}ld: %@", (uint8_t *)v8, 0x20u);
    sub_2313A2B28(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);

  }
  else
  {

  }
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject)
                           + 24);
  os_unfair_lock_lock(v14);
  swift_retain();
  os_unfair_lock_unlock(v14);
  v18 = (uint64_t)v5;
  v19 = 0;
  v15 = v5;
  sub_231413D74();

  return swift_release();
}

void sub_2313A2E5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  os_unfair_lock_s *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v2 = v1;
  swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
  v5 = a1;
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_231414974();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v9 = 136446466;
    v12 = sub_2314151A8();
    sub_23133180C(v12, v13, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v14 = a1;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    sub_231414CBC();
    *v10 = v17;

    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s] Failed to get retrocompute state: %@", (uint8_t *)v9, 0x16u);
    sub_2313A2B28(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }
  else
  {

  }
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC5HeartP33_1983BB941A89CE37AE5E37B88EF7D39A34CMVO2MaxRetrocomputeStatePublisher_subject)
                           + 24);
  os_unfair_lock_lock(v15);
  swift_retain();
  os_unfair_lock_unlock(v15);
  v18 = (uint64_t)a1;
  v19 = 1;
  v16 = a1;
  sub_231413D74();
  swift_release();

}

uint64_t sub_2313A3100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2348DE1AC](a1, v6, a5);
}

uint64_t _s13ActionHandlerCMa(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECFDD0);
}

void sub_2313A3140()
{
  unint64_t v0;

  sub_2312D1E78(319, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_2313A31D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2313A3210 + 4 * byte_23141F880[a1]))(0xD000000000000011, 0x800000023142BD40);
}

uint64_t sub_2313A3210(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_2313A3288()
{
  return 0x6E6F697463416F6ELL;
}

void sub_2313A32A0(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD v30[28];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  sub_23130589C(0, &qword_255ECFF90, (uint64_t (*)(void))sub_2313A85A0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON, MEMORY[0x24BEE3520]);
  v30[26] = *(_QWORD *)(v3 - 8);
  v30[27] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30[25] = (char *)v30 - v4;
  sub_23130589C(0, &qword_255ECFF98, (uint64_t (*)(void))sub_2313A85E4, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON, v2);
  v30[23] = *(_QWORD *)(v5 - 8);
  v30[24] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30[22] = (char *)v30 - v6;
  sub_23130589C(0, &qword_255ECFFA0, (uint64_t (*)(void))sub_2313A8628, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON, v2);
  v30[20] = *(_QWORD *)(v7 - 8);
  v30[21] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v30[19] = (char *)v30 - v8;
  sub_23130589C(0, &qword_255ECFFA8, (uint64_t (*)(void))sub_2313A866C, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON, v2);
  v30[17] = *(_QWORD *)(v9 - 8);
  v30[18] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v30[16] = (char *)v30 - v10;
  sub_23130589C(0, &qword_255ECFFB0, (uint64_t (*)(void))sub_2313A86B0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON, v2);
  v30[14] = *(_QWORD *)(v11 - 8);
  v30[15] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v30[13] = (char *)v30 - v12;
  sub_23130589C(0, &qword_255ECFFB8, (uint64_t (*)(void))sub_2313A86F4, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON, v2);
  v30[10] = v13;
  v30[8] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v30[7] = (char *)v30 - v14;
  sub_23130589C(0, &qword_255ECFFC0, (uint64_t (*)(void))sub_2313A8738, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON, v2);
  v30[12] = v15;
  v30[11] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v30[9] = (char *)v30 - v16;
  sub_23130589C(0, &qword_255ECFFC8, (uint64_t (*)(void))sub_2313A877C, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON, v2);
  v30[6] = v17;
  v30[5] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v30[4] = (char *)v30 - v18;
  v31 = _s15SettingsContentVMa();
  v19 = MEMORY[0x24BDAC7A8](v31);
  v30[2] = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v30[3] = (char *)v30 - v21;
  sub_23130589C(0, &qword_255ECFFD0, (uint64_t (*)(void))sub_2313A87C0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON, v2);
  v30[1] = v22;
  MEMORY[0x24BDAC7A8](v22);
  v23 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ECFFD8, (uint64_t (*)(void))sub_2313A8804, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON, v2);
  v34 = v26;
  v32 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v30 - v27;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313A8804();
  v33 = v28;
  sub_231415178();
  sub_2312D6C20(v35, (uint64_t)v25, _s13ActionHandlerC8UserDataV9TapActionOMa);
  v29 = (char *)sub_2313A3760 + 4 * byte_23141F889[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2313A3760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 - 344);
  sub_2312EE5FC(v0, v2, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
  *(_BYTE *)(v1 - 72) = 1;
  sub_2313A877C();
  v3 = *(_QWORD *)(v1 - 336);
  v5 = *(_QWORD *)(v1 - 128);
  v4 = *(_QWORD *)(v1 - 120);
  sub_231414FEC();
  sub_2312CCC24(&qword_255ECFFE0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t)&unk_231420BD8);
  v6 = *(_QWORD *)(v1 - 320);
  sub_231415034();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 328) + 8))(v3, v6);
  sub_2312CEBD4(v2, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v5, v4);
}

uint64_t sub_2313A3AE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  char *v42;
  _QWORD v44[28];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;

  v49 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  sub_23130589C(0, &qword_255ECFEE8, (uint64_t (*)(void))sub_2313A85A0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON, MEMORY[0x24BEE33E0]);
  v48 = v4;
  v44[19] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)v44 - v5;
  sub_23130589C(0, &qword_255ECFEF8, (uint64_t (*)(void))sub_2313A85E4, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON, v3);
  v44[17] = *(_QWORD *)(v6 - 8);
  v44[18] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v44[27] = (char *)v44 - v7;
  sub_23130589C(0, &qword_255ECFF08, (uint64_t (*)(void))sub_2313A8628, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON, v3);
  v44[16] = v8;
  v44[15] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44[26] = (char *)v44 - v9;
  sub_23130589C(0, &qword_255ECFF18, (uint64_t (*)(void))sub_2313A866C, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON, v3);
  v44[14] = v10;
  v44[13] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v44[25] = (char *)v44 - v11;
  sub_23130589C(0, &qword_255ECFF28, (uint64_t (*)(void))sub_2313A86B0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON, v3);
  v44[12] = v12;
  v44[11] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v44[24] = (char *)v44 - v13;
  sub_23130589C(0, &qword_255ECFF38, (uint64_t (*)(void))sub_2313A86F4, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON, v3);
  v44[8] = v14;
  v44[7] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v44[22] = (char *)v44 - v15;
  sub_23130589C(0, &qword_255ECFF48, (uint64_t (*)(void))sub_2313A8738, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON, v3);
  v44[10] = v16;
  v44[9] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v44[23] = (char *)v44 - v17;
  sub_23130589C(0, &qword_255ECFF58, (uint64_t (*)(void))sub_2313A877C, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON, v3);
  v44[6] = v18;
  v44[5] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v44[21] = (char *)v44 - v19;
  sub_23130589C(0, &qword_255ECFF68, (uint64_t (*)(void))sub_2313A87C0, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON, v3);
  v46 = v20;
  v44[4] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v44[20] = (char *)v44 - v21;
  sub_23130589C(0, &qword_255ECFF78, (uint64_t (*)(void))sub_2313A8804, (uint64_t)&_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON, v3);
  v23 = v22;
  v45 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v44 - v24;
  v26 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)v44 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v44 - v33;
  v35 = a1[3];
  v51 = a1;
  sub_2312CEA5C(a1, v35);
  sub_2313A8804();
  v50 = v25;
  v36 = v52;
  sub_23141516C();
  if (!v36)
  {
    v44[1] = v32;
    v52 = 0;
    v44[2] = v29;
    v37 = v26;
    v44[3] = v34;
    v38 = sub_231414FE0();
    if (*(_QWORD *)(v38 + 16) == 1)
      __asm { BR              X10 }
    v39 = sub_231414E6C();
    swift_allocError();
    v41 = v40;
    sub_2313057F4();
    *v41 = v37;
    v42 = v50;
    sub_231414F8C();
    sub_231414E54();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, *MEMORY[0x24BEE26D0], v39);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v23);
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v51);
}

uint64_t sub_2313A4748@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v17 = a2;
  v18 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ECFED8, (uint64_t (*)(void))sub_2313A855C, (uint64_t)&_s13ActionHandlerC8UserDataV10CodingKeysON, MEMORY[0x24BEE33E0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - v7;
  v9 = _s13ActionHandlerC8UserDataVMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C(a1, a1[3]);
  sub_2313A855C();
  v12 = v20;
  sub_23141516C();
  if (!v12)
  {
    v13 = v17;
    sub_2312CCC24(&qword_255ECFEE0, _s13ActionHandlerC8UserDataV9TapActionOMa, (uint64_t)&unk_23141F9FC);
    v14 = (uint64_t)v19;
    sub_231414FD4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_2312EE5FC(v14, (uint64_t)v11, _s13ActionHandlerC8UserDataV9TapActionOMa);
    sub_2312EE5FC((uint64_t)v11, v13, _s13ActionHandlerC8UserDataVMa);
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
}

uint64_t sub_2313A493C()
{
  unsigned __int8 *v0;

  return sub_2313A31D8(*v0);
}

uint64_t sub_2313A4944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313A6BC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2313A4968(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2313A4974()
{
  sub_2313A8804();
  return sub_231415190();
}

uint64_t sub_2313A499C()
{
  sub_2313A8804();
  return sub_23141519C();
}

uint64_t sub_2313A49C4()
{
  sub_2313A86F4();
  return sub_231415190();
}

uint64_t sub_2313A49EC()
{
  sub_2313A86F4();
  return sub_23141519C();
}

uint64_t sub_2313A4A14()
{
  sub_2313A86B0();
  return sub_231415190();
}

uint64_t sub_2313A4A3C()
{
  sub_2313A86B0();
  return sub_23141519C();
}

uint64_t sub_2313A4A64()
{
  sub_2313A85A0();
  return sub_231415190();
}

uint64_t sub_2313A4A8C()
{
  sub_2313A85A0();
  return sub_23141519C();
}

uint64_t sub_2313A4AB4()
{
  sub_2313A866C();
  return sub_231415190();
}

uint64_t sub_2313A4ADC()
{
  sub_2313A866C();
  return sub_23141519C();
}

uint64_t sub_2313A4B04()
{
  sub_2313A8628();
  return sub_231415190();
}

uint64_t sub_2313A4B2C()
{
  sub_2313A8628();
  return sub_23141519C();
}

uint64_t sub_2313A4B54()
{
  sub_2313A85E4();
  return sub_231415190();
}

uint64_t sub_2313A4B7C()
{
  sub_2313A85E4();
  return sub_23141519C();
}

unint64_t sub_2313A4BA4()
{
  return 0xD000000000000016;
}

uint64_t sub_2313A4BC0()
{
  sub_2313A877C();
  return sub_231415190();
}

uint64_t sub_2313A4BE8()
{
  sub_2313A877C();
  return sub_23141519C();
}

uint64_t sub_2313A4C10()
{
  sub_2313A87C0();
  return sub_231415190();
}

uint64_t sub_2313A4C38()
{
  sub_2313A87C0();
  return sub_23141519C();
}

uint64_t sub_2313A4C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313A6F24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2313A4C88()
{
  sub_2313A8738();
  return sub_231415190();
}

uint64_t sub_2313A4CB0()
{
  sub_2313A8738();
  return sub_23141519C();
}

uint64_t sub_2313A4CD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313A3AE8(a1, a2);
}

void sub_2313A4CEC(_QWORD *a1)
{
  sub_2313A32A0(a1);
}

uint64_t sub_2313A4D04()
{
  sub_2313A855C();
  return sub_231415190();
}

uint64_t sub_2313A4D2C()
{
  sub_2313A855C();
  return sub_23141519C();
}

uint64_t sub_2313A4D54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313A4748(a1, a2);
}

uint64_t sub_2313A4D68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23130589C(0, &qword_255ECFEC0, (uint64_t (*)(void))sub_2313A855C, (uint64_t)&_s13ActionHandlerC8UserDataV10CodingKeysON, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313A855C();
  sub_231415178();
  _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  sub_2312CCC24(&qword_255ECFED0, _s13ActionHandlerC8UserDataV9TapActionOMa, (uint64_t)&unk_23141F9D4);
  sub_231415034();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_2313A4E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v13[4];

  v1 = v0;
  v2 = sub_231412F64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = qword_255ECFDB8;
  if (*(_QWORD *)(v0 + qword_255ECFDB8))
  {
    v7 = *(id *)(v0 + qword_255ECFDB8);
  }
  else
  {
    v8 = (id)*MEMORY[0x24BDD2DC8];
    sub_231413210();
    sub_231412F40();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_2312CEA5C(v13, v13[3]);
    v9 = (void *)sub_231412EE0();
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, v8, v9);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
    *(_QWORD *)(v1 + v6) = v10;
    v7 = v10;
    sub_2314130CC();
  }
  swift_unknownObjectRetain();
  return v7;
}

uint64_t sub_2313A4FDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v3 = v1 + qword_255ECFDC0;
  swift_beginAccess();
  sub_23135E6AC(v3, (uint64_t)&v5);
  if (v6)
    return sub_2312DFB68(&v5, (uint64_t)a1);
  sub_23135E710((uint64_t)&v5);
  sub_2313A5094(a1);
  sub_2312DF850((uint64_t)a1, (uint64_t)&v5);
  swift_beginAccess();
  sub_23133ADC0((uint64_t)&v5, v3);
  return swift_endAccess();
}

unint64_t sub_2313A5094@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  unint64_t result;
  uint64_t v11;
  _QWORD v13[4];

  v2 = sub_231412F64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_231412F40();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2312CEA5C(v13, v13[3]);
  v6 = (void *)sub_231412EE0();
  v7 = objc_msgSend(v6, sel_profileIdentifier);
  v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)1)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v6);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
    if (v9)
    {
      result = sub_2312DC718();
      v11 = MEMORY[0x24BE45B80];
      a1[3] = result;
      a1[4] = v11;
      *a1 = v9;
      return result;
    }
  }
  else
  {

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v13);
  }
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_2313A5238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2312D1E78(0, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v17[-v11];
  v13 = v1 + qword_255ECFDC8;
  swift_beginAccess();
  sub_2313A6FEC(v13, (uint64_t)v12);
  v14 = sub_2314120AC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(a1, v12, v14);
  sub_2312F1A20((uint64_t)v12, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  sub_231413210();
  sub_231411D88();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_2313A7040((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_2313A5414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD v46[4];
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  uint64_t v68;

  ObjectType = swift_getObjectType();
  v54 = sub_231411CF8();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130D990();
  v51 = v2;
  v50 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v49 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2314120AC();
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s15SettingsContentVMa();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v46[3] = (char *)v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)v46 - v11;
  v47 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (uint64_t)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v66 = v14;
  v65 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v64 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231412F64();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v46[2] = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v46 - v20;
  sub_2312D1E78(0, &qword_255ECFE20, (void (*)(uint64_t))_s13ActionHandlerC8UserDataVMa);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v46 - v23;
  v25 = _s13ActionHandlerC8UserDataVMa(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v61 = (uint64_t)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v46 - v29;
  v58 = v0;
  sub_231413210();
  sub_2312CCC24(qword_255ECFE28, _s13ActionHandlerC8UserDataVMa, (uint64_t)&unk_23141FA24);
  sub_2312CCC24(&qword_255ECB3A0, _s13ActionHandlerC8UserDataVMa, (uint64_t)&unk_23141FA4C);
  sub_231412F58();
  v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v57 = v21;
  v60 = v16;
  v31(v21, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) != 1)
  {
    v46[1] = v31;
    sub_2312EE5FC((uint64_t)v24, (uint64_t)v30, _s13ActionHandlerC8UserDataVMa);
    v37 = (uint64_t)v30;
    if (qword_25415B6D8 != -1)
      swift_once();
    v38 = v66;
    v39 = sub_2312CE3B8(v66, (uint64_t)qword_254162EE8);
    v40 = v65;
    v41 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v39, v38);
    v42 = v61;
    sub_2312D6C20(v37, v61, _s13ActionHandlerC8UserDataVMa);
    v43 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v44 = swift_allocObject();
    sub_2312EE5FC(v42, v44 + v43, _s13ActionHandlerC8UserDataVMa);
    *(_QWORD *)(v44 + ((v27 + v43 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v68 = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v38);
    sub_2312D6C20(v37, v63, _s13ActionHandlerC8UserDataV9TapActionOMa);
    v45 = (char *)&loc_2313A5A08 + dword_2313A614C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_2312F1A20((uint64_t)v24, &qword_255ECFE20, (void (*)(uint64_t))_s13ActionHandlerC8UserDataVMa);
  if (qword_25415B6D8 != -1)
    swift_once();
  v32 = v66;
  v33 = sub_2312CE3B8(v66, (uint64_t)qword_254162EE8);
  v34 = v65;
  v35 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v33, v32);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v68 = 0;
  sub_2314135B8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v32);
}

uint64_t sub_2313A6170()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313A6204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[2];

  v2 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_2312D6C20(a1, (uint64_t)v4, _s13ActionHandlerC8UserDataV9TapActionOMa);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v6[0];
}

uint64_t sub_2313A6318(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[2];

  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    v15[1] = 0;
    v14 = a2;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_2313A6434(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_231347B88(0, (unint64_t *)&unk_255ED1EC0, (unint64_t *)&qword_25415DF60);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313A6530(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_255ECFDB8] = 0;
  v8 = &v7[qword_255ECFDC0];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v7[qword_255ECFDC8];
  v10 = sub_2314120AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v11;
}

uint64_t sub_2313A662C()
{
  uint64_t v0;

  sub_2314130CC();
  sub_23135E710(v0 + qword_255ECFDC0);
  return sub_2312F1A20(v0 + qword_255ECFDC8, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
}

id sub_2313A667C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s13ActionHandlerCMa(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313A66B0(uint64_t a1)
{
  sub_2314130CC();
  sub_23135E710(a1 + qword_255ECFDC0);
  return sub_2312F1A20(a1 + qword_255ECFDC8, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
}

uint64_t sub_2313A670C()
{
  return _s13ActionHandlerCMa(0);
}

uint64_t sub_2313A6714()
{
  return sub_2312CCC24(&qword_255ECB3A8, _s13ActionHandlerCMa, (uint64_t)&unk_23141F938);
}

uint64_t _s13ActionHandlerC8UserDataV9TapActionOMa(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_25415C2E0);
}

uint64_t _s13ActionHandlerC8UserDataVMa(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECFE88);
}

uint64_t sub_2313A676C()
{
  return swift_deallocObject();
}

uint64_t sub_2313A677C()
{
  return sub_2313A6170();
}

uint64_t sub_2313A6784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s13ActionHandlerC8UserDataVMa(0) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    v3 = sub_231411D1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
    v4 = _s15SettingsContentVMa();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + v2 + *(int *)(v4 + 32) + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_2313A6860()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s13ActionHandlerC8UserDataVMa(0) - 8) + 80);
  return sub_2313A6204(v0 + ((v1 + 16) & ~v1));
}

void sub_2313A68A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = _s15SettingsContentVMa();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v6 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  sub_2313A8848();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v13 + *(int *)(v9 + 48) - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), _s13ActionHandlerC8UserDataV9TapActionOMa);
  sub_2312D6C20(a2, (uint64_t)v11, _s13ActionHandlerC8UserDataV9TapActionOMa);
  v12 = (char *)sub_2313A69F4 + 4 * byte_23141F8A4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_2313A69F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t (*v5)(_QWORD);

  sub_2312D6C20(v0, v2, _s13ActionHandlerC8UserDataV9TapActionOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2312CEBD4(v2, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_2313A8848;
  }
  else
  {
    sub_2312EE5FC(v3, v1, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
    v4 = sub_2313C1ED4(v2, v1);
    sub_2312CEBD4(v1, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
    sub_2312CEBD4(v2, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
    v5 = _s13ActionHandlerC8UserDataV9TapActionOMa;
  }
  sub_2312CEBD4(v0, v5);
  return v4;
}

uint64_t sub_2313A6BC8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023142BD40 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023142BD60 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023142BDA0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023142BDC0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023142F940 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023142F960 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023142F980 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023142F9B0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6F697463416F6ELL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2313A6F24(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023142F920)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_231415070();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2313A6FA8()
{
  return swift_deallocObject();
}

uint64_t sub_2313A6FB8(char a1, void *a2)
{
  uint64_t v2;

  return sub_2313A6318(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313A6FC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313A6FE4()
{
  uint64_t v0;

  return sub_2313A6434(*(void **)(v0 + 16));
}

uint64_t sub_2313A6FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313A7040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2313A7094(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v4 = *(_QWORD *)(_s13ActionHandlerC8UserDataV9TapActionOMa(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v19 = sub_231411D1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      v20 = (int *)_s15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v20[5]) = *(_WORD *)((char *)a2 + v20[5]);
      *(_WORD *)((char *)a1 + v20[6]) = *(_WORD *)((char *)a2 + v20[6]);
      v21 = v20[7];
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v25 = *v23;
      v24 = v23[1];
      *v22 = v25;
      v22[1] = v24;
      v26 = v20[8];
      v15 = (char *)a1 + v26;
      v16 = (char *)a2 + v26;
      v17 = *(uint64_t *)((char *)a2 + v26 + 8);
      sub_231412A90();
      if (!v17)
      {
        v31 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v31;
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_231411D1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)_s15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v8[5]) = *(_WORD *)((char *)a2 + v8[5]);
      *(_WORD *)((char *)a1 + v8[6]) = *(_WORD *)((char *)a2 + v8[6]);
      v9 = v8[7];
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (uint64_t *)((char *)a2 + v9);
      v13 = *v11;
      v12 = v11[1];
      *v10 = v13;
      v10[1] = v12;
      v14 = v8[8];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = *(uint64_t *)((char *)a2 + v14 + 8);
      sub_231412A90();
      if (!v17)
      {
        v30 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v30;
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        goto LABEL_12;
      }
LABEL_8:
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v27 = *((_QWORD *)v16 + 3);
      *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
      *((_QWORD *)v15 + 3) = v27;
      v28 = *((_QWORD *)v16 + 4);
      v29 = *((_QWORD *)v16 + 5);
      *((_QWORD *)v15 + 4) = v28;
      *((_QWORD *)v15 + 5) = v29;
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v4 + 64));
  }
  return a1;
}

uint64_t sub_2313A72B4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_231411D1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = _s15SettingsContentVMa();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + *(int *)(v4 + 32) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_2313A7354(char *a1, char *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v17 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
    v18 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v18[5]] = *(_WORD *)&a2[v18[5]];
    *(_WORD *)&a1[v18[6]] = *(_WORD *)&a2[v18[6]];
    v19 = v18[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v23 = *(_QWORD *)v21;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = v23;
    *((_QWORD *)v20 + 1) = v22;
    v24 = v18[8];
    v14 = &a1[v24];
    v15 = &a2[v24];
    v16 = *(_QWORD *)&a2[v24 + 8];
    sub_231412A90();
    if (!v16)
    {
      v29 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v29;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    v6 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
    *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
    v8 = v7[7];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v12 = *(_QWORD *)v10;
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = v12;
    *((_QWORD *)v9 + 1) = v11;
    v13 = v7[8];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = *(_QWORD *)&a2[v13 + 8];
    sub_231412A90();
    if (!v16)
    {
      v28 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v28;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      goto LABEL_10;
    }
LABEL_6:
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v25 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v25;
    v26 = *((_QWORD *)v15 + 4);
    v27 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = v26;
    *((_QWORD *)v14 + 5) = v27;
    sub_231412A90();
    sub_231412A90();
    sub_231412A90();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

char *sub_2313A754C(char *a1, char *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, _s13ActionHandlerC8UserDataV9TapActionOMa);
    v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v16[5]] = *(_WORD *)&a2[v16[5]];
      *(_WORD *)&a1[v16[6]] = *(_WORD *)&a2[v16[6]];
      v17 = v16[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      v20 = v16[8];
      v12 = &a1[v20];
      v13 = &a2[v20];
      v21 = *(_QWORD *)&a2[v20 + 8];
      sub_231412A90();
      if (!v21)
      {
        v24 = *(_OWORD *)v13;
        v25 = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_OWORD *)v12 + 2) = v25;
        *(_OWORD *)v12 = v24;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      v6 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
      *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
      v8 = v7[7];
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      v11 = v7[8];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = *(_QWORD *)&a2[v11 + 8];
      sub_231412A90();
      if (!v14)
      {
        v22 = *(_OWORD *)v13;
        v23 = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        *((_OWORD *)v12 + 2) = v23;
        *(_OWORD *)v12 = v22;
        goto LABEL_11;
      }
LABEL_7:
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

char *sub_2313A7794(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;

  v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v6[5]] = *(_WORD *)&a2[v6[5]];
    *(_WORD *)&a1[v6[6]] = *(_WORD *)&a2[v6[6]];
    *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
    v7 = v6[8];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_2313A78F0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, _s13ActionHandlerC8UserDataV9TapActionOMa);
    v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v6[5]] = *(_WORD *)&a2[v6[5]];
      *(_WORD *)&a1[v6[6]] = *(_WORD *)&a2[v6[6]];
      *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
      v7 = v6[8];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2313A7A64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313A7A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2313A7AAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313A7AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2313A7AF8()
{
  uint64_t result;
  unint64_t v1;

  result = _s13ActionHandlerC8UserDataV9TapActionOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2313A7B60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v20 = sub_231411D1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
      v21 = (int *)_s15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v21[5]) = *(_WORD *)((char *)a2 + v21[5]);
      *(_WORD *)((char *)a1 + v21[6]) = *(_WORD *)((char *)a2 + v21[6]);
      v22 = v21[7];
      v23 = (uint64_t *)((char *)a1 + v22);
      v24 = (uint64_t *)((char *)a2 + v22);
      v26 = *v24;
      v25 = v24[1];
      *v23 = v26;
      v23[1] = v25;
      v27 = v21[8];
      v16 = (char *)a1 + v27;
      v17 = (char *)a2 + v27;
      v18 = *(uint64_t *)((char *)a2 + v27 + 8);
      sub_231412A90();
      if (!v18)
      {
        v32 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v32;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_231411D1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)_s15SettingsContentVMa();
      *(_WORD *)((char *)a1 + v9[5]) = *(_WORD *)((char *)a2 + v9[5]);
      *(_WORD *)((char *)a1 + v9[6]) = *(_WORD *)((char *)a2 + v9[6]);
      v10 = v9[7];
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v14 = *v12;
      v13 = v12[1];
      *v11 = v14;
      v11[1] = v13;
      v15 = v9[8];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = *(uint64_t *)((char *)a2 + v15 + 8);
      sub_231412A90();
      if (!v18)
      {
        v31 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v31;
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        goto LABEL_12;
      }
LABEL_8:
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v28 = *((_QWORD *)v17 + 3);
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
      *((_QWORD *)v16 + 3) = v28;
      v29 = *((_QWORD *)v17 + 4);
      v30 = *((_QWORD *)v17 + 5);
      *((_QWORD *)v16 + 4) = v29;
      *((_QWORD *)v16 + 5) = v30;
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_2313A7D78(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_231411D1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = _s15SettingsContentVMa();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + *(int *)(v4 + 32) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_2313A7E08(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v18 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
    v19 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v19[5]] = *(_WORD *)&a2[v19[5]];
    *(_WORD *)&a1[v19[6]] = *(_WORD *)&a2[v19[6]];
    v20 = v19[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v24 = *(_QWORD *)v22;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = v24;
    *((_QWORD *)v21 + 1) = v23;
    v25 = v19[8];
    v15 = &a1[v25];
    v16 = &a2[v25];
    v17 = *(_QWORD *)&a2[v25 + 8];
    sub_231412A90();
    if (!v17)
    {
      v30 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v30;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v8[5]] = *(_WORD *)&a2[v8[5]];
    *(_WORD *)&a1[v8[6]] = *(_WORD *)&a2[v8[6]];
    v9 = v8[7];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v13 = *(_QWORD *)v11;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = v13;
    *((_QWORD *)v10 + 1) = v12;
    v14 = v8[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = *(_QWORD *)&a2[v14 + 8];
    sub_231412A90();
    if (!v17)
    {
      v29 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v29;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      goto LABEL_10;
    }
LABEL_6:
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v26 = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 3) = v26;
    v27 = *((_QWORD *)v16 + 4);
    v28 = *((_QWORD *)v16 + 5);
    *((_QWORD *)v15 + 4) = v27;
    *((_QWORD *)v15 + 5) = v28;
    sub_231412A90();
    sub_231412A90();
    sub_231412A90();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_2313A7FF8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, _s13ActionHandlerC8UserDataV9TapActionOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v17[5]] = *(_WORD *)&a2[v17[5]];
      *(_WORD *)&a1[v17[6]] = *(_WORD *)&a2[v17[6]];
      v18 = v17[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      v21 = v17[8];
      v13 = &a1[v21];
      v14 = &a2[v21];
      v22 = *(_QWORD *)&a2[v21 + 8];
      sub_231412A90();
      if (!v22)
      {
        v25 = *(_OWORD *)v14;
        v26 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v26;
        *(_OWORD *)v13 = v25;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v8[5]] = *(_WORD *)&a2[v8[5]];
      *(_WORD *)&a1[v8[6]] = *(_WORD *)&a2[v8[6]];
      v9 = v8[7];
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      v12 = v8[8];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = *(_QWORD *)&a2[v12 + 8];
      sub_231412A90();
      if (!v15)
      {
        v23 = *(_OWORD *)v14;
        v24 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v24;
        *(_OWORD *)v13 = v23;
        goto LABEL_11;
      }
LABEL_7:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_2313A8238(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_231411D1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)_s15SettingsContentVMa();
    *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
    *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
    *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
    v8 = v7[8];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_2313A838C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, _s13ActionHandlerC8UserDataV9TapActionOMa);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)_s15SettingsContentVMa();
      *(_WORD *)&a1[v7[5]] = *(_WORD *)&a2[v7[5]];
      *(_WORD *)&a1[v7[6]] = *(_WORD *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      v8 = v7[8];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2313A84F8()
{
  uint64_t result;
  unint64_t v1;

  result = _s15SettingsContentVMa();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_2313A855C()
{
  unint64_t result;

  result = qword_255ECFEC8;
  if (!qword_255ECFEC8)
  {
    result = MEMORY[0x2348DE248](&unk_231420434, &_s13ActionHandlerC8UserDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFEC8);
  }
  return result;
}

unint64_t sub_2313A85A0()
{
  unint64_t result;

  result = qword_255ECFEF0;
  if (!qword_255ECFEF0)
  {
    result = MEMORY[0x2348DE248](&unk_2314203E4, &_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFEF0);
  }
  return result;
}

unint64_t sub_2313A85E4()
{
  unint64_t result;

  result = qword_255ECFF00;
  if (!qword_255ECFF00)
  {
    result = MEMORY[0x2348DE248](&unk_231420394, &_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF00);
  }
  return result;
}

unint64_t sub_2313A8628()
{
  unint64_t result;

  result = qword_255ECFF10;
  if (!qword_255ECFF10)
  {
    result = MEMORY[0x2348DE248](&unk_231420344, &_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF10);
  }
  return result;
}

unint64_t sub_2313A866C()
{
  unint64_t result;

  result = qword_255ECFF20;
  if (!qword_255ECFF20)
  {
    result = MEMORY[0x2348DE248](&unk_2314202F4, &_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF20);
  }
  return result;
}

unint64_t sub_2313A86B0()
{
  unint64_t result;

  result = qword_255ECFF30;
  if (!qword_255ECFF30)
  {
    result = MEMORY[0x2348DE248](&unk_2314202A4, &_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF30);
  }
  return result;
}

unint64_t sub_2313A86F4()
{
  unint64_t result;

  result = qword_255ECFF40;
  if (!qword_255ECFF40)
  {
    result = MEMORY[0x2348DE248](&unk_231420254, &_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF40);
  }
  return result;
}

unint64_t sub_2313A8738()
{
  unint64_t result;

  result = qword_255ECFF50;
  if (!qword_255ECFF50)
  {
    result = MEMORY[0x2348DE248](&unk_231420204, &_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF50);
  }
  return result;
}

unint64_t sub_2313A877C()
{
  unint64_t result;

  result = qword_255ECFF60;
  if (!qword_255ECFF60)
  {
    result = MEMORY[0x2348DE248](&unk_2314201B4, &_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF60);
  }
  return result;
}

unint64_t sub_2313A87C0()
{
  unint64_t result;

  result = qword_255ECFF70;
  if (!qword_255ECFF70)
  {
    result = MEMORY[0x2348DE248](&unk_231420164, &_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF70);
  }
  return result;
}

unint64_t sub_2313A8804()
{
  unint64_t result;

  result = qword_255ECFF80;
  if (!qword_255ECFF80)
  {
    result = MEMORY[0x2348DE248](&unk_231420114, &_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFF80);
  }
  return result;
}

void sub_2313A8848()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECFFE8)
  {
    _s13ActionHandlerC8UserDataV9TapActionOMa(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECFFE8);
  }
}

uint64_t _s13ActionHandlerC8UserDataV9TapActionO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ActionHandlerC8UserDataV9TapActionO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2313A8984 + 4 * byte_23141F8B2[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2313A89B8 + 4 * byte_23141F8AD[v4]))();
}

uint64_t sub_2313A89B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313A89C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313A89C8);
  return result;
}

uint64_t sub_2313A89D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313A89DCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2313A89E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313A89E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON;
}

ValueMetadata *_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON;
}

uint64_t _s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2313A8AD8 + 4 * byte_23141F8B7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2313A8AF8 + 4 * byte_23141F8BC[v4]))();
}

_BYTE *sub_2313A8AD8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2313A8AF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313A8B00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313A8B08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313A8B10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313A8B18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13ActionHandlerC8UserDataV10CodingKeysOMa()
{
  return &_s13ActionHandlerC8UserDataV10CodingKeysON;
}

unint64_t sub_2313A8B38()
{
  unint64_t result;

  result = qword_255ECFFF0;
  if (!qword_255ECFFF0)
  {
    result = MEMORY[0x2348DE248](&unk_23141FC94, &_s13ActionHandlerC8UserDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFFF0);
  }
  return result;
}

unint64_t sub_2313A8B80()
{
  unint64_t result;

  result = qword_255ECFFF8;
  if (!qword_255ECFFF8)
  {
    result = MEMORY[0x2348DE248](&unk_23141FF2C, &_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ECFFF8);
  }
  return result;
}

unint64_t sub_2313A8BC8()
{
  unint64_t result;

  result = qword_255ED0000;
  if (!qword_255ED0000)
  {
    result = MEMORY[0x2348DE248](&unk_23141FFE4, &_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0000);
  }
  return result;
}

unint64_t sub_2313A8C10()
{
  unint64_t result;

  result = qword_255ED0008;
  if (!qword_255ED0008)
  {
    result = MEMORY[0x2348DE248](&unk_2314200EC, &_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0008);
  }
  return result;
}

unint64_t sub_2313A8C58()
{
  unint64_t result;

  result = qword_255ED0010;
  if (!qword_255ED0010)
  {
    result = MEMORY[0x2348DE248](&unk_23142005C, &_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0010);
  }
  return result;
}

unint64_t sub_2313A8CA0()
{
  unint64_t result;

  result = qword_255ED0018;
  if (!qword_255ED0018)
  {
    result = MEMORY[0x2348DE248](&unk_231420084, &_s13ActionHandlerC8UserDataV9TapActionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0018);
  }
  return result;
}

unint64_t sub_2313A8CE8()
{
  unint64_t result;

  result = qword_255ED0020;
  if (!qword_255ED0020)
  {
    result = MEMORY[0x2348DE248](&unk_23142000C, &_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0020);
  }
  return result;
}

unint64_t sub_2313A8D30()
{
  unint64_t result;

  result = qword_255ED0028;
  if (!qword_255ED0028)
  {
    result = MEMORY[0x2348DE248](&unk_231420034, &_s13ActionHandlerC8UserDataV9TapActionO27PresentOnboardingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0028);
  }
  return result;
}

unint64_t sub_2313A8D78()
{
  unint64_t result;

  result = qword_255ED0030;
  if (!qword_255ED0030)
  {
    result = MEMORY[0x2348DE248](&unk_23141FF54, &_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0030);
  }
  return result;
}

unint64_t sub_2313A8DC0()
{
  unint64_t result;

  result = qword_255ED0038;
  if (!qword_255ED0038)
  {
    result = MEMORY[0x2348DE248](&unk_23141FF7C, &_s13ActionHandlerC8UserDataV9TapActionO32PresentFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0038);
  }
  return result;
}

unint64_t sub_2313A8E08()
{
  unint64_t result;

  result = qword_255ED0040;
  if (!qword_255ED0040)
  {
    result = MEMORY[0x2348DE248](&unk_23141FE9C, &_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0040);
  }
  return result;
}

unint64_t sub_2313A8E50()
{
  unint64_t result;

  result = qword_255ED0048;
  if (!qword_255ED0048)
  {
    result = MEMORY[0x2348DE248](&unk_23141FEC4, &_s13ActionHandlerC8UserDataV9TapActionO36PushEnabledFeatureSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0048);
  }
  return result;
}

unint64_t sub_2313A8E98()
{
  unint64_t result;

  result = qword_255ED0050;
  if (!qword_255ED0050)
  {
    result = MEMORY[0x2348DE248](&unk_23141FE4C, &_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0050);
  }
  return result;
}

unint64_t sub_2313A8EE0()
{
  unint64_t result;

  result = qword_255ED0058;
  if (!qword_255ED0058)
  {
    result = MEMORY[0x2348DE248](&unk_23141FE74, &_s13ActionHandlerC8UserDataV9TapActionO37DeepLinkToHeartRateSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0058);
  }
  return result;
}

unint64_t sub_2313A8F28()
{
  unint64_t result;

  result = qword_255ED0060;
  if (!qword_255ED0060)
  {
    result = MEMORY[0x2348DE248](&unk_23141FDFC, &_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0060);
  }
  return result;
}

unint64_t sub_2313A8F70()
{
  unint64_t result;

  result = qword_255ED0068;
  if (!qword_255ED0068)
  {
    result = MEMORY[0x2348DE248](&unk_23141FE24, &_s13ActionHandlerC8UserDataV9TapActionO39DeepLinkToWristDetectSettingsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0068);
  }
  return result;
}

unint64_t sub_2313A8FB8()
{
  unint64_t result;

  result = qword_255ED0070;
  if (!qword_255ED0070)
  {
    result = MEMORY[0x2348DE248](&unk_23141FDAC, &_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0070);
  }
  return result;
}

unint64_t sub_2313A9000()
{
  unint64_t result;

  result = qword_255ED0078;
  if (!qword_255ED0078)
  {
    result = MEMORY[0x2348DE248](&unk_23141FDD4, &_s13ActionHandlerC8UserDataV9TapActionO41OpenGeneralKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0078);
  }
  return result;
}

unint64_t sub_2313A9048()
{
  unint64_t result;

  result = qword_255ED0080;
  if (!qword_255ED0080)
  {
    result = MEMORY[0x2348DE248](&unk_23141FD5C, &_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0080);
  }
  return result;
}

unint64_t sub_2313A9090()
{
  unint64_t result;

  result = qword_255ED0088;
  if (!qword_255ED0088)
  {
    result = MEMORY[0x2348DE248](&unk_23141FD84, &_s13ActionHandlerC8UserDataV9TapActionO44OpenRegionGateKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0088);
  }
  return result;
}

unint64_t sub_2313A90D8()
{
  unint64_t result;

  result = qword_255ED0090;
  if (!qword_255ED0090)
  {
    result = MEMORY[0x2348DE248](&unk_23141FD0C, &_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0090);
  }
  return result;
}

unint64_t sub_2313A9120()
{
  unint64_t result;

  result = qword_255ED0098;
  if (!qword_255ED0098)
  {
    result = MEMORY[0x2348DE248](&unk_23141FD34, &_s13ActionHandlerC8UserDataV9TapActionO45OpenSeedExpiredKnowledgeBaseArticleCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0098);
  }
  return result;
}

unint64_t sub_2313A9168()
{
  unint64_t result;

  result = qword_255ED00A0;
  if (!qword_255ED00A0)
  {
    result = MEMORY[0x2348DE248](&unk_23141FCBC, &_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED00A0);
  }
  return result;
}

unint64_t sub_2313A91B0()
{
  unint64_t result;

  result = qword_255ED00A8;
  if (!qword_255ED00A8)
  {
    result = MEMORY[0x2348DE248](&unk_23141FCE4, &_s13ActionHandlerC8UserDataV9TapActionO18NoActionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED00A8);
  }
  return result;
}

unint64_t sub_2313A91F8()
{
  unint64_t result;

  result = qword_255ED00B0;
  if (!qword_255ED00B0)
  {
    result = MEMORY[0x2348DE248](&unk_23141FC04, &_s13ActionHandlerC8UserDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED00B0);
  }
  return result;
}

unint64_t sub_2313A9240()
{
  unint64_t result;

  result = qword_255ED00B8;
  if (!qword_255ED00B8)
  {
    result = MEMORY[0x2348DE248](&unk_23141FC2C, &_s13ActionHandlerC8UserDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED00B8);
  }
  return result;
}

id sub_2313A9288(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  char v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  v72 = a2;
  ObjectType = swift_getObjectType();
  v3 = sub_231413780();
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v64 - v5;
  v68 = sub_231412DA8();
  v67 = *(_QWORD *)(v68 - 8);
  v7 = MEMORY[0x24BDAC7A8](v68);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v69 = (char *)&v64 - v10;
  v66 = sub_231412DB4();
  v11 = *(_QWORD *)(v66 - 8);
  v12 = MEMORY[0x24BDAC7A8](v66);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v64 - v15;
  v17 = objc_msgSend(a1, sel_identifier);
  v18 = sub_2314146BC();
  v20 = v19;

  if (v18 == 0xD00000000000002ALL && v20 == 0x800000023142F9E0
    || (sub_231415070() & 1) != 0
    || v18 == 0xD000000000000029 && v20 == 0x800000023142FA10
    || (sub_231415070() & 1) != 0
    || v18 == 0xD00000000000002DLL && v20 == 0x800000023142FA40
    || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_23137B268(a1, v72);
  }
  if (v18 == 0xD000000000000031 && v20 == 0x800000023142FA70 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v22 = (void *)sub_231412D78();
    v23 = objc_msgSend(v22, sel_viewControllerFactory);

    sub_231412D84();
    LOBYTE(v22) = sub_231412D9C();
    v24 = (char *)objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController());
    v25 = v76;
    v26 = v77;
    v27 = sub_2312DEF74((uint64_t)v75, v76);
    MEMORY[0x24BDAC7A8](v27);
    v29 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v29);
    sub_231347334(v23, (uint64_t)v29, (char)v22, v24, v25, v26);
    v32 = v31;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v75);
    sub_231412D60();
    sub_2313447E0((uint64_t)v75);
    return (id)v32;
  }
  if (v18 == 0xD000000000000028 && v20 == 0x800000023142FAB0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    BloodPressureDataTypeDetailConfigurationProvider.configuration(for:)();
    v33 = v72;
    sub_231412BB0();
    v34 = v67;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v36 = v69;
    v37 = v33;
    v38 = v68;
    v35(v69, v37, v68);
    v39 = objc_allocWithZone((Class)type metadata accessor for BloodPressureDataTypeDetailViewController());
    v35(v9, (uint64_t)v36, v38);
    v40 = a1;
    v32 = sub_231412E5C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v66);
    return (id)v32;
  }
  if (v18 == 0xD000000000000025 && v20 == 0x800000023142FAE0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v41 = (void *)sub_231412D78();
    v42 = objc_msgSend(v41, sel_viewControllerFactory);

    sub_231412D84();
    LOBYTE(v41) = sub_231412D9C();
    v43 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController());
    sub_231308A00(v42, (uint64_t)v75, (char)v41);
    v32 = v44;
    sub_231412D60();
    v45 = v32 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
    swift_beginAccess();
    sub_23130AB68((uint64_t)v75, v45);
    swift_endAccess();
    return (id)v32;
  }
  if (v18 == 0xD000000000000030 && v20 == 0x800000023142F020 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v46 = v72;
    sub_231373C30(v72, (uint64_t)a1, ObjectType);
    v47 = v67;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v50 = v68;
    v49 = v69;
    v48(v69, v46, v68);
    v51 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenDataTypeDetailViewController());
    v48(v9, (uint64_t)v49, v50);
    v52 = a1;
    v32 = sub_231412E5C();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v50);
    return (id)v32;
  }
  if (v18 == 0xD000000000000021 && v20 == 0x800000023142FB10 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return sub_23137AA34(a1, v72);
  }
  if (v18 == 0xD000000000000030 && v20 == 0x800000023142FB40 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_23137ACDC(v72);
  }
  if (v18 == 0xD00000000000001ELL && v20 == 0x800000023142F060)
  {
    swift_bridgeObjectRelease();
    return sub_23137AF0C(a1, v72);
  }
  v54 = sub_231415070();
  swift_bridgeObjectRelease();
  if ((v54 & 1) != 0)
    return sub_23137AF0C(a1, v72);
  v79 = 0;
  memset(v78, 0, sizeof(v78));
  sub_2313A9E00((uint64_t)v78, (uint64_t)&v73);
  if (v74)
  {
    sub_2312DFB68(&v73, (uint64_t)v75);
    sub_2312CEA5C(v75, v76);
    sub_2314131F8();
    v61 = v72;
    sub_231412BB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v61, v68);
    v62 = objc_allocWithZone((Class)sub_231412E80());
    v63 = a1;
    v32 = sub_231412E5C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v66);
    sub_2313A9E5C((uint64_t)v78);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v75);
  }
  else
  {
    sub_2313A9E5C((uint64_t)&v73);
    sub_23141375C();
    v55 = a1;
    v56 = sub_231413768();
    v57 = sub_231414974();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v58 = 138412290;
      v75[0] = v55;
      v60 = v55;
      sub_231414CBC();
      *v59 = v55;

      _os_log_impl(&dword_2312C8000, v56, v57, "[HeartAppDelegate] No custom detail view controller or configuration provided for %@", v58, 0xCu);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v59, -1, -1);
      MEMORY[0x2348DE308](v58, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v6, v71);
    sub_2313A9E5C((uint64_t)v78);
    return 0;
  }
  return (id)v32;
}

id sub_2313A9DE0(void *a1, uint64_t a2)
{
  return sub_2313A9288(a1, a2);
}

uint64_t sub_2313A9E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231347B88(0, &qword_255ED00C0, &qword_255ED00C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313A9E5C(uint64_t a1)
{
  uint64_t v2;

  sub_231347B88(0, &qword_255ED00C0, &qword_255ED00C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AFibBurdenDataTypeDetailViewController()
{
  uint64_t result;

  result = qword_255ED00D0;
  if (!qword_255ED00D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313A9EEC()
{
  return swift_initClassMetadata2();
}

void sub_2313A9F28(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  Class v8;
  id v9;
  void *v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for AFibBurdenAddDataView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (void *)sub_231412E50();
  sub_231321CD0(v7, v6);
  sub_2313AA054();
  v9 = objc_allocWithZone(v8);
  v10 = (void *)sub_23141420C();
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v10, a1 & 1, 0);

}

id sub_2313A9FD0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenDataTypeDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2313AA018()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313AA04C()
{
  return type metadata accessor for AFibBurdenDataTypeDetailViewController();
}

void sub_2313AA054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0120)
  {
    type metadata accessor for AFibBurdenAddDataView();
    sub_2313AA0B4();
    v0 = sub_231414218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0120);
  }
}

unint64_t sub_2313AA0B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED0128;
  if (!qword_255ED0128)
  {
    v1 = type metadata accessor for AFibBurdenAddDataView();
    result = MEMORY[0x2348DE248](&unk_23141B2A0, v1);
    atomic_store(result, (unint64_t *)&qword_255ED0128);
  }
  return result;
}

uint64_t sub_2313AA0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  __int128 v20[2];
  uint64_t v21;

  sub_2313ACC14(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v20[0] = a1;
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  sub_231413EDC();
  sub_2312DF850(a5, (uint64_t)v20);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(v15 + 48) = v16;
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(a4 + 32);
  sub_2312DFB68(v20, v15 + 72);
  v17 = *(void **)a4;
  v21 = *(_QWORD *)(a4 + 8);
  v20[0] = *(_OWORD *)(a4 + 16);
  swift_retain();
  v18 = v17;
  sub_2312D0F3C((uint64_t)&v21);
  sub_2312E3A64((uint64_t)v20);
  sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
  sub_2313ACCA4();
  sub_231413EB8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2313AA298@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, void **a3@<X3>, uint64_t **a4@<X8>)
{
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  id v30;
  uint64_t *v31;
  unint64_t *v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t **v40;
  uint64_t **v41;
  uint64_t v42;
  void *v43;

  v7 = *a3;
  if (*a1 == 1)
  {
    v43 = a3[1];
    v8 = (uint64_t)a3[2];
    v9 = (unint64_t)a3[3];
    v10 = v7;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v11 = v10;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v12 = sub_231413768();
    v13 = sub_231414968();
    if (os_log_type_enabled(v12, v13))
    {
      v40 = a4;
      v14 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v42 = v38;
      *(_DWORD *)v14 = 136446466;
      sub_2313ACD00();
      v15 = sub_2314146E0();
      sub_23133180C(v15, v16, &v42);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      sub_231412A90();
      sub_23133180C(v8, v9, &v42);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s(%{public}s)] Background requirements check passed, sending normal generator", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v38, -1, -1);
      v17 = v14;
      a4 = v40;
      MEMORY[0x2348DE308](v17, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
    }
    v28 = type metadata accessor for RelatedSampleTypesGenerator(0);
    v29 = type metadata accessor for RelatedSampleTypesGenerator;
    swift_allocObject();
    v30 = v11;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    swift_retain();
    v31 = sub_23132D810((uint64_t)a3, a2);

    swift_release();
    sub_23132E3CC((uint64_t)&v43);
    swift_bridgeObjectRelease();
    a4[3] = (uint64_t *)v28;
    v32 = (unint64_t *)&unk_255ED0130;
    v33 = &unk_23141B624;
  }
  else
  {
    v43 = a3[1];
    v18 = (uint64_t)a3[2];
    v19 = (unint64_t)a3[3];
    v20 = v7;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v21 = v20;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v22 = sub_231413768();
    v23 = sub_231414968();
    if (os_log_type_enabled(v22, v23))
    {
      v41 = a4;
      v24 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v24 = 136446466;
      sub_2313ACD00();
      v25 = sub_2314146E0();
      sub_23133180C(v25, v26, &v42);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      sub_231412A90();
      sub_23133180C(v18, v19, &v42);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s(%{public}s)] Background requirements check failed, sending empty generator", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v37, -1, -1);
      v27 = v24;
      a4 = v41;
      MEMORY[0x2348DE308](v27, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
    }
    v34 = type metadata accessor for EmptyRelatedSampleTypesGenerator();
    v29 = (uint64_t (*)(uint64_t))type metadata accessor for EmptyRelatedSampleTypesGenerator;
    swift_allocObject();
    swift_retain();
    v35 = v21;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v31 = sub_23139CF68((uint64_t)a3, a2);
    a4[3] = (uint64_t *)v34;
    v32 = (unint64_t *)&unk_25415C798;
    v33 = &unk_23141F544;
  }
  result = sub_2312CCC24(v32, v29, (uint64_t)v33);
  a4[4] = (uint64_t *)result;
  *a4 = v31;
  return result;
}

uint64_t sub_2313AA7C8@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_2313AD1EC(0, &qword_255ED0138, MEMORY[0x24BDB9E10]);
  v9 = v8;
  v34 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - v10;
  v12 = *a1;
  v13 = *(void **)a3;
  v37 = *(_QWORD *)(a3 + 8);
  v14 = *(_QWORD *)(a3 + 24);
  v33 = *(_QWORD *)(a3 + 16);
  v15 = v13;
  sub_2312D0F3C((uint64_t)&v37);
  sub_231412A90();
  v16 = v12;
  v17 = v15;
  sub_2312D0F3C((uint64_t)&v37);
  sub_231412A90();
  v18 = v12;
  v19 = sub_231413768();
  v20 = sub_231414974();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v35 = a2;
    v36 = v30;
    *(_DWORD *)v21 = 136446722;
    v31 = v9;
    sub_2313ACD00();
    v32 = a4;
    v22 = sub_2314146E0();
    v35 = sub_23133180C(v22, v23, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    sub_231412A90();
    v35 = sub_23133180C(v33, v14, &v36);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    sub_23132E3CC((uint64_t)&v37);

    swift_bridgeObjectRelease();
    sub_23132E3CC((uint64_t)&v37);
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v9 = v31;
    v35 = (uint64_t)v12;
    v24 = v12;
    sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
    v25 = sub_2314146E0();
    v35 = sub_23133180C(v25, v26, &v36);
    sub_231414CBC();
    a4 = v32;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v19, v20, "[%{public}s(%{public}s)] Error when handling database changes: %{public}s", (uint8_t *)v21, 0x20u);
    v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v27, -1, -1);
    MEMORY[0x2348DE308](v21, -1, -1);

  }
  else
  {

    sub_23132E3CC((uint64_t)&v37);
    swift_bridgeObjectRelease();
    sub_23132E3CC((uint64_t)&v37);
    swift_bridgeObjectRelease();

  }
  sub_2313ACDE4();
  sub_231413DE0();
  sub_2313AD254(&qword_255ED0140, &qword_255ED0138, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v28 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  *a4 = v28;
  return result;
}

uint64_t sub_2313AAB74@<X0>(char a1@<W0>, uint64_t a2@<X2>, void **a3@<X4>, uint64_t **a4@<X8>)
{
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  id v30;
  uint64_t *v31;
  unint64_t *v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t **v40;
  uint64_t **v41;
  uint64_t v42;
  void *v43;

  v7 = *a3;
  if ((a1 & 1) != 0)
  {
    v43 = a3[1];
    v8 = (uint64_t)a3[2];
    v9 = (unint64_t)a3[3];
    v10 = v7;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v11 = v10;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v12 = sub_231413768();
    v13 = sub_231414968();
    if (os_log_type_enabled(v12, v13))
    {
      v40 = a4;
      v14 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v42 = v38;
      *(_DWORD *)v14 = 136446466;
      sub_2313ACD00();
      v15 = sub_2314146E0();
      sub_23133180C(v15, v16, &v42);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      sub_231412A90();
      sub_23133180C(v8, v9, &v42);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s(%{public}s)] Foreground requirements check passed, sending normal generator", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v38, -1, -1);
      v17 = v14;
      a4 = v40;
      MEMORY[0x2348DE308](v17, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
    }
    v28 = type metadata accessor for RelatedSampleTypesGenerator(0);
    v29 = type metadata accessor for RelatedSampleTypesGenerator;
    swift_allocObject();
    v30 = v11;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    swift_retain();
    v31 = sub_23132D810((uint64_t)a3, a2);

    swift_release();
    sub_23132E3CC((uint64_t)&v43);
    swift_bridgeObjectRelease();
    a4[3] = (uint64_t *)v28;
    v32 = (unint64_t *)&unk_255ED0130;
    v33 = &unk_23141B624;
  }
  else
  {
    v43 = a3[1];
    v18 = (uint64_t)a3[2];
    v19 = (unint64_t)a3[3];
    v20 = v7;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v21 = v20;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v22 = sub_231413768();
    v23 = sub_231414968();
    if (os_log_type_enabled(v22, v23))
    {
      v41 = a4;
      v24 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v24 = 136446466;
      sub_2313ACD00();
      v25 = sub_2314146E0();
      sub_23133180C(v25, v26, &v42);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      sub_231412A90();
      sub_23133180C(v18, v19, &v42);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s(%{public}s)] Foreground requirements check failed, sending empty generator", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v37, -1, -1);
      v27 = v24;
      a4 = v41;
      MEMORY[0x2348DE308](v27, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)&v43);
      swift_bridgeObjectRelease();
    }
    v34 = type metadata accessor for EmptyRelatedSampleTypesGenerator();
    v29 = (uint64_t (*)(uint64_t))type metadata accessor for EmptyRelatedSampleTypesGenerator;
    swift_allocObject();
    swift_retain();
    v35 = v21;
    sub_2312D0F3C((uint64_t)&v43);
    sub_231412A90();
    v31 = sub_23139CF68((uint64_t)a3, a2);
    a4[3] = (uint64_t *)v34;
    v32 = (unint64_t *)&unk_25415C798;
    v33 = &unk_23141F544;
  }
  result = sub_2312CCC24(v32, v29, (uint64_t)v33);
  a4[4] = (uint64_t *)result;
  *a4 = v31;
  return result;
}

uint64_t sub_2313AB09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2313AB10C()
{
  return type metadata accessor for RelatedSampleTypesGeneratorPipeline();
}

uint64_t type metadata accessor for RelatedSampleTypesGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415C968;
  if (!qword_25415C968)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313AB150()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2313AB1D8()
{
  return swift_retain();
}

uint64_t sub_2313AB1EC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2313AB234(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_2312D3C68(0, &qword_255ECDD10);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_2312D3AD4();
      v9 = (_QWORD *)swift_allocObject();
      v10 = j__malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2313AB3C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_231414D7C();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_2312D3AD4();
    v3 = (_QWORD *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  sub_231412A90();
  v6 = sub_2313AB4B4(&v8, v3 + 4, v2, a1);
  result = sub_231366FFC();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_2313AB4B4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_231414D4C();
    sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
    sub_23132DF1C();
    result = (_QWORD *)sub_2314148D8();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (_QWORD *)v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_231414DA0())
        goto LABEL_45;
      sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)sub_2314130CC();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_2313AB7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61[2];
  _BYTE v62[24];
  ValueMetadata *v63;
  _UNKNOWN **v64;
  _OWORD v65[2];

  v48 = a4;
  v52 = a3;
  sub_2313ACDAC(0);
  v55 = v7;
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313ACE7C(0, &qword_25415CEF0, v9, (void (*)(void))sub_2313ACF08);
  v56 = v10;
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v43 - v11;
  sub_2313ACDD0(0);
  v51 = v12;
  v60 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v43 - v15;
  v16 = sub_231414944();
  v47 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313ACF24(0, &qword_25415CF48, v19, sub_2313ACFEC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730]);
  v44 = v20;
  v45 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v43 - v21;
  v63 = &type metadata for RelatedSampleTypesGeneratorFactory;
  v64 = &off_250026FA8;
  v23 = sub_231412A90();
  sub_2313AB3C0(v23);
  swift_bridgeObjectRelease();
  sub_231414950();
  swift_release();
  v24 = *(void **)a1;
  v65[0] = *(_OWORD *)(a1 + 16);
  v25 = swift_allocObject();
  v46 = a2;
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a4;
  v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 64) = *(_QWORD *)(a1 + 32);
  sub_231412A90();
  swift_retain();
  v49 = v24;
  sub_2312E3A64((uint64_t)v65);
  v27 = MEMORY[0x24BDB9AE0];
  sub_2313AD1EC(0, &qword_25415CFE0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2313ACFEC();
  sub_2313AD254(&qword_25415CFD8, &qword_25415CFE0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v27, MEMORY[0x24BDB9AF8]);
  sub_231413ED0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v16);
  sub_2313AD050();
  v28 = v44;
  v29 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v28);
  *(_QWORD *)&v61[0] = v52;
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  v30 = v59;
  sub_231413F6C();
  v31 = v51;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v50, v30, v51);
  *(_QWORD *)&v61[0] = v29;
  sub_2313ACE60();
  swift_retain();
  v32 = v53;
  sub_231413BF4();
  sub_2312DF850((uint64_t)v62, (uint64_t)v61);
  v33 = swift_allocObject();
  v34 = v48;
  *(_QWORD *)(v33 + 16) = v46;
  *(_QWORD *)(v33 + 24) = v34;
  v35 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v33 + 48) = v35;
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(a1 + 32);
  sub_2312DFB68(v61, v33 + 72);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_2313AD100;
  *(_QWORD *)(v36 + 24) = v33;
  sub_231412A90();
  swift_retain();
  v37 = v49;
  sub_2312E3A64((uint64_t)v65);
  sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
  sub_2313ACF08();
  v39 = v54;
  v38 = v55;
  sub_231413EB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v38);
  sub_2313ACCC0(&qword_25415CEE8, &qword_25415CEF0, sub_2313ACDAC, (void (*)(void))sub_2313ACF08);
  v40 = v56;
  v41 = sub_231413E7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v31);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v62);
  return v41;
}

uint64_t sub_2313ABD60(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  id v45;
  uint64_t v46;
  os_log_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __int128 v55[2];
  uint64_t v56[5];
  _QWORD v57[3];
  ValueMetadata *v58;
  _UNKNOWN **v59;
  _QWORD v60[2];

  sub_2313ACB6C();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = &type metadata for RelatedSampleTypesGeneratorFactory;
  v59 = &off_250026FA8;
  v15 = sub_2313859D4(a3);
  v16 = (void *)*a1;
  if ((a4 & 1) != 0)
  {
    v56[0] = a1[1];
    v32 = a1[2];
    v31 = a1[3];
    v33 = v16;
    sub_2312D0F3C((uint64_t)v56);
    sub_231412A90();
    v34 = v33;
    sub_2312D0F3C((uint64_t)v56);
    sub_231412A90();
    v35 = sub_231413768();
    v36 = sub_23141495C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v51 = (char *)v32;
      v38 = v37;
      v39 = swift_slowAlloc();
      v54 = v15;
      *(_QWORD *)&v55[0] = v39;
      v52 = v39;
      *(_DWORD *)v38 = 136446466;
      v60[0] = a5;
      sub_2313ACD00();
      v53 = a5;
      v40 = sub_2314146E0();
      v60[0] = sub_23133180C(v40, v41, (uint64_t *)v55);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      sub_231412A90();
      v60[0] = sub_23133180C((uint64_t)v51, v31, (uint64_t *)v55);
      a5 = v53;
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v56);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v56);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v35, v36, "[%{public}s(%{public}s)] Started in foreground, sending initial publisher as well as database changes publisher", (uint8_t *)v38, 0x16u);
      v42 = v52;
      swift_arrayDestroy();
      v15 = v54;
      MEMORY[0x2348DE308](v42, -1, -1);
      MEMORY[0x2348DE308](v38, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)v56);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v56);
      swift_bridgeObjectRelease();
    }
    sub_2312CEA5C(v57, (uint64_t)v58);
    v46 = sub_2313AB7BC((uint64_t)a1, a2, (uint64_t)v15, a5);
  }
  else
  {
    v17 = a5;
    v60[0] = a1[1];
    v52 = a1[2];
    v53 = v12;
    v18 = a1[3];
    v19 = v16;
    sub_2312D0F3C((uint64_t)v60);
    sub_231412A90();
    v20 = v19;
    sub_2312D0F3C((uint64_t)v60);
    sub_231412A90();
    v21 = sub_231413768();
    v22 = sub_23141495C();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v54 = v15;
      v25 = v24;
      v50 = swift_slowAlloc();
      v56[0] = v50;
      *(_DWORD *)v25 = 136446466;
      v51 = v14;
      v49 = v23;
      *(_QWORD *)&v55[0] = v17;
      sub_2313ACD00();
      v26 = sub_2314146E0();
      v48 = v21;
      *(_QWORD *)&v55[0] = sub_23133180C(v26, v27, v56);
      v14 = v51;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      sub_231412A90();
      *(_QWORD *)&v55[0] = sub_23133180C(v52, v18, v56);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v60);

      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v60);
      swift_bridgeObjectRelease();
      v28 = v48;
      _os_log_impl(&dword_2312C8000, v48, (os_log_type_t)v49, "[%{public}s(%{public}s)] Started in background, only sending one generator", (uint8_t *)v25, 0x16u);
      v29 = v50;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v29, -1, -1);
      v30 = v25;
      v15 = v54;
      MEMORY[0x2348DE308](v30, -1, -1);

    }
    else
    {

      sub_23132E3CC((uint64_t)v60);
      swift_bridgeObjectRelease();
      sub_23132E3CC((uint64_t)v60);
      swift_bridgeObjectRelease();
    }
    sub_2312CEA5C(v57, (uint64_t)v58);
    v56[3] = (uint64_t)&type metadata for RelatedSampleTypesGeneratorFactory;
    v56[4] = (uint64_t)&off_250026FA8;
    sub_2312DF850((uint64_t)v56, (uint64_t)v55);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v15;
    *(_QWORD *)(v43 + 24) = a2;
    *(_QWORD *)(v43 + 32) = v17;
    v44 = *((_OWORD *)a1 + 1);
    *(_OWORD *)(v43 + 40) = *(_OWORD *)a1;
    *(_OWORD *)(v43 + 56) = v44;
    *(_QWORD *)(v43 + 72) = a1[4];
    sub_2312DFB68(v55, v43 + 80);
    v45 = v20;
    sub_2312D0F3C((uint64_t)v60);
    sub_2313ACE7C(0, &qword_25415CF18, sub_2313ACC14, (void (*)(void))sub_2313ACCA4);
    sub_2313ACCC0(&qword_25415CF10, &qword_25415CF18, sub_2313ACC14, (void (*)(void))sub_2313ACCA4);
    sub_231412A90();
    swift_retain();
    swift_retain();
    sub_231413E04();
    sub_2312CCC24(qword_25415D240, (uint64_t (*)(uint64_t))sub_2313ACB6C, MEMORY[0x24BDB9E90]);
    v46 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v11);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
  }
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v57);
  return v46;
}

uint64_t *sub_2313AC3C8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v18[3];
  ValueMetadata *v19;
  _UNKNOWN **v20;

  v9 = *a5;
  v10 = a4 & 1;
  v11 = sub_231411A04();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &type metadata for RelatedSampleTypesGeneratorFactory;
  v20 = &off_250026FA8;
  sub_23132B64C((uint64_t)v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))((uint64_t)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_domain, v14, v11);
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_feedItemRequirements) = a3;
  sub_2312CEA5C(v18, (uint64_t)v19);
  sub_231412A90();
  v15 = sub_2313ABD60(a1, a2, a3, v10, v9);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v18);
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart35RelatedSampleTypesGeneratorPipeline_publisher) = v15;
  return a5;
}

uint64_t *sub_2313AC4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t inited;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v34[3];
  id v35;
  _QWORD v36[5];
  _BYTE v37[24];
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _QWORD v40[3];
  uint64_t v41;
  _QWORD v42[5];

  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v6 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2314204E0;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2A28]);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35F8]);
  *(_QWORD *)(inited + 48) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3348]);
  *(_QWORD *)(inited + 56) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD29A0]);
  *(_QWORD *)(inited + 64) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD33B8]);
  v42[0] = inited;
  sub_2314147B8();
  v8 = v42[0];
  if (v42[0] >> 62)
  {
    sub_231412A90();
    v11 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v42[0] & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_2312FBF48(v8);
    v10 = v9;
    goto LABEL_6;
  }
  v10 = MEMORY[0x24BEE4B08];
LABEL_6:
  v34[2] = v10;
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  v42[0] = v6;
  v42[1] = v10;
  v42[2] = 0xD00000000000001CLL;
  v42[3] = 0x800000023142AB50;
  v42[4] = v12;
  sub_231411A10();
  sub_2312CEA5C(v40, v41);
  v13 = sub_2314119C8();
  sub_231411A10();
  v35 = v6;
  v34[1] = a1;
  if (qword_25415C170 != -1)
    swift_once();
  v14 = sub_2312CE3B8(v2, (uint64_t)qword_254162F00);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  v36[3] = &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
  v36[4] = &off_250022DD0;
  v36[0] = swift_allocObject();
  sub_2313ACA98((uint64_t)v37, v36[0] + 16);
  type metadata accessor for RelatedSampleTypesGenerator.Environment(0);
  v15 = (_QWORD *)swift_allocObject();
  v16 = sub_2312DEF74((uint64_t)v36, (uint64_t)&type metadata for FeedItemContextPreviousFeedItemFetcherBox);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v15[6] = &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
  v15[7] = &off_250022DD0;
  v20 = swift_allocObject();
  v21 = *((_OWORD *)v18 + 1);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v18;
  *(_OWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 48) = *((_QWORD *)v18 + 4);
  v15[2] = v13;
  v15[3] = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))((uint64_t)v15 + OBJC_IVAR____TtCC5Heart27RelatedSampleTypesGenerator11Environment_logger, v5, v2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  sub_2313ACAD4((uint64_t)v37);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  sub_2313ACB08();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_231416A30;
  v23 = (void *)*MEMORY[0x24BE4BF08];
  v24 = (id)*MEMORY[0x24BDD2DC8];
  v25 = v23;
  sub_231411A10();
  sub_2312CEA5C(v40, v41);
  v26 = sub_2314119C8();
  v27 = type metadata accessor for FeatureStatusFeedItemRequirement();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v24;
  v28[3] = v23;
  v28[4] = v26;
  v28[5] = 0;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  *(_QWORD *)(v22 + 56) = v27;
  *(_QWORD *)(v22 + 64) = &off_2500202C8;
  *(_QWORD *)(v22 + 32) = v28;
  sub_231411A10();
  sub_2312CEA5C(v40, v41);
  LOBYTE(v26) = sub_2314119BC() & 1;
  v38 = &type metadata for RelatedSampleTypesGeneratorFactory;
  v39 = &off_250026FA8;
  type metadata accessor for RelatedSampleTypesGeneratorPipeline();
  v29 = (uint64_t *)swift_allocObject();
  v30 = sub_2312DEF74((uint64_t)v37, (uint64_t)&type metadata for RelatedSampleTypesGeneratorFactory);
  MEMORY[0x24BDAC7A8](v30);
  (*(void (**)(void))(v31 + 16))();
  v32 = sub_2313AC3C8(v42, (uint64_t)v15, v22, v26, v29);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
  return v32;
}

uint64_t sub_2313ACA74()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2313ACA98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FeedItemContextPreviousFeedItemFetcherBox(a2, a1);
  return a2;
}

uint64_t sub_2313ACAD4(uint64_t a1)
{
  destroy for FeedItemContextPreviousFeedItemFetcherBox();
  return a1;
}

void sub_2313ACB08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D128)
  {
    sub_2312DF79C(255, &qword_25415C2D8);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D128);
  }
}

void sub_2313ACB6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D058)
  {
    sub_2313ACE7C(255, &qword_25415CF18, sub_2313ACC14, (void (*)(void))sub_2313ACCA4);
    sub_2313ACCC0(&qword_25415CF10, &qword_25415CF18, sub_2313ACC14, (void (*)(void))sub_2313ACCA4);
    v0 = sub_231413E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D058);
  }
}

void sub_2313ACC14(uint64_t a1)
{
  sub_2313ACC28(a1, &qword_25415CF60, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9760]);
}

void sub_2313ACC28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2312D75F0();
    v7 = v6;
    v8 = sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2313ACCA4()
{
  return sub_2312CCC24(&qword_25415CF58, (uint64_t (*)(uint64_t))sub_2313ACC14, MEMORY[0x24BDB9770]);
}

uint64_t sub_2313ACCC0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2313ACE7C(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313ACD00()
{
  unint64_t result;

  result = qword_25415D3A8;
  if (!qword_25415D3A8)
  {
    type metadata accessor for RelatedSampleTypesGeneratorPipeline();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D3A8);
  }
  return result;
}

uint64_t sub_2313ACD38()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 80);
  return swift_deallocObject();
}

uint64_t sub_2313ACD84()
{
  uint64_t *v0;

  return sub_2313AA0FC(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5), (uint64_t)(v0 + 10));
}

uint64_t sub_2313ACD9C@<X0>(_BYTE *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_2313AA298(a1, *(_QWORD *)(v2 + 16), (void **)(v2 + 32), a2);
}

void sub_2313ACDAC(uint64_t a1)
{
  sub_2313ACF24(a1, &qword_25415CD98, (uint64_t (*)(uint64_t))sub_2313ACDD0, sub_2313ACE60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9438]);
}

void sub_2313ACDD0(uint64_t a1)
{
  sub_2313ACC28(a1, &qword_25415CE50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9648]);
}

void sub_2313ACDE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D130)
  {
    sub_231414938();
    sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    v0 = sub_231415160();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D130);
  }
}

uint64_t sub_2313ACE60()
{
  return sub_2312CCC24(&qword_25415CE48, (uint64_t (*)(uint64_t))sub_2313ACDD0, MEMORY[0x24BDB9658]);
}

void sub_2313ACE7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_2312DF79C(255, (unint64_t *)&qword_25415D530);
    a4();
    v6 = sub_231413C60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2313ACF08()
{
  return sub_2312CCC24(&qword_25415CD90, (uint64_t (*)(uint64_t))sub_2313ACDAC, MEMORY[0x24BDB9450]);
}

void sub_2313ACF24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  if (!*a2)
  {
    v9 = a3(255);
    v10 = MEMORY[0x24BDB9AE0];
    sub_2313AD1EC(255, &qword_25415CFE0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    v14[0] = v9;
    v14[1] = v11;
    v14[2] = a4();
    v14[3] = sub_2313AD254(&qword_25415CFD8, &qword_25415CFE0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v10, MEMORY[0x24BDB9AF8]);
    v12 = a5(a1, v14);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t sub_2313ACFEC()
{
  return sub_2312CCC24((unint64_t *)&unk_25415D0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A88], MEMORY[0x24BE45A80]);
}

uint64_t sub_2313AD008()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2313AD044@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2313AA7C8(a1, *(_QWORD *)(v2 + 24), v2 + 32, a2);
}

unint64_t sub_2313AD050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415CF40;
  if (!qword_25415CF40)
  {
    sub_2313ACF24(255, &qword_25415CF48, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A88], sub_2313ACFEC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9740], v1);
    atomic_store(result, (unint64_t *)&qword_25415CF40);
  }
  return result;
}

uint64_t sub_2313AD0BC()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  return swift_deallocObject();
}

uint64_t sub_2313AD100@<X0>(char a1@<W0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_2313AAB74(a1, *(_QWORD *)(v2 + 16), (void **)(v2 + 32), a2);
}

uint64_t sub_2313AD110()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313AD134(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, unsigned __int8 *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16);
  v4 = *a1;
  sub_2313AD188();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_2313AD188()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25415D0D8)
  {
    sub_2313ACDE4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25415D0D8);
  }
}

void sub_2313AD1EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2313ACDE4();
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2313AD254(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2313AD1EC(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesGeneratorFactory()
{
  return &type metadata for RelatedSampleTypesGeneratorFactory;
}

double CGFloat.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3)
{
  double v5;

  objc_msgSend(a2, sel_displayScale);
  return CGFloat.rounded(_:toScale:)(a1, v5, a3);
}

{
  id v5;
  double v6;
  double v7;

  v5 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v5, sel_displayScale);
  v7 = CGFloat.rounded(_:toScale:)(a1, v6, a3);

  return v7;
}

double CGFloat.rounded(_:toScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  int v11;
  double v12;
  double v13;
  uint64_t v15;
  double v16;

  v6 = sub_231415058();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 * a3;
  v16 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
  }
  else if (v11 == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
  }
  else if (v11 == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
  }
  else if (v11 == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
  }
  else if (v11 == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
  }
  else if (v11 == *MEMORY[0x24BEE38C0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_231414860();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v16;
  }
  return v12 / a2;
}

void *CGSize.maxSize.unsafeMutableAddressor()
{
  return &static CGSize.maxSize;
}

double static CGSize.maxSize.getter()
{
  return 1.79769313e308;
}

void sub_2313AD4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, void *);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v1 = v0;
  v2 = sub_231411F8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BE41CB8])
  {
    v7 = (void *)objc_opt_self();
    v8 = objc_msgSend(v7, sel_sharedInstance);
    if (!v8)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v9 = v8;
    v10 = (uint64_t (*)())objc_msgSend(v7, sel_activePairedDeviceSelectorBlock);
    if (v10)
    {
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v10;
      v12 = swift_allocObject();
      v10 = sub_2313AD984;
      *(_QWORD *)(v12 + 16) = sub_2313AD984;
      *(_QWORD *)(v12 + 24) = v11;
      v29 = sub_2313AD9B4;
      v30 = v12;
      aBlock = MEMORY[0x24BDAC760];
      v26 = 1107296256;
      v27 = sub_2313AD9D8;
      v28 = &unk_250027028;
      v13 = _Block_copy(&aBlock);
      swift_release();
    }
    else
    {
      v13 = 0;
    }
    v20 = objc_msgSend(v9, sel_getAllDevicesWithArchivedDevicesMatching_, v13);
    sub_23130E320((uint64_t)v10);
    _Block_release(v13);

    if (!v20)
      goto LABEL_32;
    sub_2313AD924();
    v16 = sub_2314147A0();

    if (v16 >> 62)
    {
      sub_231412A90();
      v23 = sub_231414F08();
      swift_bridgeObjectRelease();
      if (!v23)
        goto LABEL_24;
    }
    else if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_24;
    }
    if ((v16 & 0xC000000000000001) != 0)
      goto LABEL_27;
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_23:
      v22 = *(id *)(v16 + 32);
      goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
    if (v6 != *MEMORY[0x24BE41CC0])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    v14 = (void *)objc_opt_self();
    v15 = (id *)objc_msgSend(v14, sel_sharedInstance);
    if (!v15)
      goto LABEL_33;
    v16 = (unint64_t)v15;
    v10 = (uint64_t (*)())objc_msgSend(v14, sel_activeDeviceSelectorBlock);
    if (v10)
    {
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v10;
      v18 = swift_allocObject();
      v10 = sub_2313ADA54;
      *(_QWORD *)(v18 + 16) = sub_2313ADA54;
      *(_QWORD *)(v18 + 24) = v17;
      v29 = sub_2313ADA50;
      v30 = v18;
      aBlock = MEMORY[0x24BDAC760];
      v26 = 1107296256;
      v27 = sub_2313AD9D8;
      v28 = &unk_2500270A0;
      v19 = _Block_copy(&aBlock);
      swift_release();
      goto LABEL_18;
    }
  }
  v19 = 0;
LABEL_18:
  v21 = objc_msgSend((id)v16, sel_getAllDevicesWithArchivedDevicesMatching_, v19);
  sub_23130E320((uint64_t)v10);
  _Block_release(v19);

  if (v21)
  {
    sub_2313AD924();
    v16 = sub_2314147A0();

    if (v16 >> 62)
    {
      sub_231412A90();
      v24 = sub_231414F08();
      swift_bridgeObjectRelease();
      if (!v24)
        goto LABEL_24;
LABEL_21:
      if ((v16 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_23;
        __break(1u);
        goto LABEL_31;
      }
LABEL_27:
      MEMORY[0x2348DD81C](0, v16);
      goto LABEL_24;
    }
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_34:
  __break(1u);
}

unint64_t sub_2313AD924()
{
  unint64_t result;

  result = qword_255ED0148;
  if (!qword_255ED0148)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED0148);
  }
  return result;
}

uint64_t sub_2313AD960()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2313AD984()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_2313AD9A4()
{
  return swift_deallocObject();
}

uint64_t sub_2313AD9B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_2313AD9D8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t (*v3)(void *);
  id v4;

  v2 = a2;
  v3 = *(uint64_t (**)(void *))(a1 + 32);
  v4 = a2;
  LOBYTE(v2) = v3(v2);

  return v2 & 1;
}

uint64_t sub_2313ADA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313ADA2C()
{
  return swift_release();
}

uint64_t sub_2313ADA34()
{
  return swift_deallocObject();
}

uint64_t sub_2313ADA58()
{
  uint64_t result;

  result = sub_23141468C();
  qword_254162E68 = result;
  return result;
}

uint64_t sub_2313ADA8C()
{
  uint64_t result;

  result = sub_23141468C();
  qword_254162E70 = result;
  return result;
}

void sub_2313ADAC0()
{
  qword_255ED2E20 = 0x402C000000000000;
}

void sub_2313ADAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  double v7;
  uint64_t v8;
  double Height;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  _QWORD v14[4];
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v3 = a3;
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(a3 + 32);
    sub_231412A90();
    v7 = 0.0;
    v8 = v4;
    do
    {
      sub_2312CEA5C(v5, v5[3]);
      sub_231412358();
      Height = CGRectGetHeight(v15);
      if (qword_255ECAA30 != -1)
        swift_once();
      v7 = v7 + Height + *(double *)&qword_255ED2E20;
      v5 += 11;
      --v8;
    }
    while (v8);
    v3 = a3;
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0.0;
  }
  sub_2314121F0();
  if (CGRectGetHeight(v16) - v7 >= 0.0)
  {
    if (v4)
    {
      v11 = v3 + 32;
      sub_231412A90();
      do
      {
        sub_2313AE1A0(v11, (uint64_t)v12);
        sub_2312CEA5C(v12, v13);
        sub_231412358();
        CGRectGetHeight(v17);
        sub_2314121E4();
        sub_23141219C();
        sub_23141219C();
        CGRectGetWidth(v18);
        sub_2314121A8();
        sub_2312CEA5C(v12, v13);
        sub_231412364();
        sub_2312CEA5C(v14, v14[3]);
        sub_231412364();
        sub_2314121D8();
        if (qword_255ECAA30 != -1)
          swift_once();
        sub_2314121D8();
        swift_release();
        sub_2313AE20C((uint64_t)v12);
        v11 += 88;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    sub_2312D4A68();
    sub_2312CE3B8(v10, (uint64_t)qword_254162EE8);
    v12[0] = 0;
    sub_2314135B8();
  }
}

uint64_t sub_2313ADDC4()
{
  sub_231414E18();
  sub_231414728();
  sub_2313AE57C();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

double sub_2313ADE68(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  double v7;
  double Height;
  CGRect v10;
  CGRect v11;

  sub_2314121F0();
  v4 = v3;
  sub_2314121F0();
  CGRectGetWidth(v10);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v6 = (_QWORD *)(a2 + 32);
    sub_231412A90();
    v7 = 0.0;
    do
    {
      sub_2312CEA5C(v6, v6[3]);
      sub_231412358();
      Height = CGRectGetHeight(v11);
      if (qword_255ECAA30 != -1)
        swift_once();
      v7 = v7 + Height + *(double *)&qword_255ED2E20;
      v6 += 11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_2313ADF90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_2313ADAD0(a1, a2, *v2);
}

uint64_t sub_2313ADF9C()
{
  return sub_2314121F0();
}

double sub_2313ADFBC(uint64_t a1)
{
  uint64_t *v1;

  return sub_2313ADE68(a1, *v1);
}

uint64_t sub_2313ADFC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2313685F8();
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

double sub_2313AE028(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  _QWORD v14[11];
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23137D3F8(0, v2, 0);
    v3 = a1 + 32;
    v4 = v15;
    do
    {
      sub_2313AE1A0(v3, (uint64_t)v14);
      v5 = v14[10];
      sub_2313AE20C((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23137D3F8(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v15;
      }
      v7 = *(_QWORD *)(v4 + 16);
      v6 = *(_QWORD *)(v4 + 24);
      v8 = v7 + 1;
      if (v7 >= v6 >> 1)
      {
        sub_23137D3F8(v6 > 1, v7 + 1, 1);
        v4 = v15;
      }
      *(_QWORD *)(v4 + 16) = v8;
      *(_QWORD *)(v4 + 8 * v7 + 32) = v5;
      v3 += 88;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
    v8 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v8)
    {
      v10 = 0.0;
      goto LABEL_18;
    }
  }
  if (v8 >= 2)
  {
    v11 = 0;
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    v10 = 0.0;
    do
    {
      v10 = v10 + *(double *)(v4 + 8 * v11 + 32) + *(double *)(v4 + 8 * v11 + 40);
      v11 += 2;
    }
    while (v9 != v11);
    goto LABEL_17;
  }
  v9 = 0;
  v10 = 0.0;
  do
  {
    v12 = *(double *)(v4 + 8 * v9++ + 32);
    v10 = v10 + v12;
LABEL_17:
    ;
  }
  while (v8 != v9);
LABEL_18:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2313AE1A0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2 + 40, a1 + 40);
  *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
  return a2;
}

uint64_t sub_2313AE20C(uint64_t a1)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  return a1;
}

uint64_t initializeWithCopy for AFibBurdenPDFChartPage.Element(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t *assignWithCopy for AFibBurdenPDFChartPage.Element(uint64_t *a1, uint64_t *a2)
{
  sub_2312DB81C(a1, a2);
  sub_2312DB81C(a1 + 5, a2 + 5);
  a1[10] = a2[10];
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartPage.Element(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPage.Element(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartPage.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPage.Element()
{
  return &type metadata for AFibBurdenPDFChartPage.Element;
}

_QWORD *initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartPage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_231412A90();
  return a1;
}

uint64_t destroy for AFibBurdenPDFChartPage()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AFibBurdenPDFChartPage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for AFibBurdenPDFChartPage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartPage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPage()
{
  return &type metadata for AFibBurdenPDFChartPage;
}

unint64_t sub_2313AE538()
{
  unint64_t result;

  result = qword_255ED0158;
  if (!qword_255ED0158)
  {
    result = MEMORY[0x2348DE248](&unk_2314205F8, &type metadata for AFibBurdenPDFChartPage);
    atomic_store(result, (unint64_t *)&qword_255ED0158);
  }
  return result;
}

unint64_t sub_2313AE57C()
{
  unint64_t result;

  result = qword_255ED0160;
  if (!qword_255ED0160)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED0160);
  }
  return result;
}

uint64_t sub_2313AE5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a3;
  sub_2313AF450(0);
  v6 = v5;
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231413780();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v39 - v14;
  sub_2312D6DD8(0, &qword_25415DF48, (uint64_t (*)(uint64_t))sub_231372FCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23141A310;
  *(_QWORD *)(v16 + 32) = sub_2313AF4E0(a1);
  *(_QWORD *)(v16 + 40) = sub_2313AF870(a1);
  *(_QWORD *)(v16 + 48) = sub_2313AFBD0(a1);
  v46 = v16;
  sub_2314147B8();
  v17 = v46;
  sub_231411A1C();
  if ((sub_231411B90() & 1) == 0)
  {
    sub_231412148();
    v27 = sub_231413768();
    v28 = sub_23141498C();
    if (os_log_type_enabled(v27, v28))
    {
      v41 = v10;
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v42 = v17;
      v31 = v30;
      v45 = v30;
      v46 = a2;
      v40 = v9;
      *(_DWORD *)v29 = 136446210;
      swift_getMetatypeMetadata();
      v32 = sub_2314146E0();
      v46 = sub_23133180C(v32, v33, &v45);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v27, v28, "[%{public}s]: In foreground mode, so will continue to listen for updates", v29, 0xCu);
      swift_arrayDestroy();
      v34 = v31;
      v17 = v42;
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v40);
      goto LABEL_9;
    }

    v35 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36 = v13;
LABEL_8:
    v35(v36, v9);
    goto LABEL_9;
  }
  sub_231412148();
  v18 = sub_231413768();
  v19 = sub_23141498C();
  if (!os_log_type_enabled(v18, v19))
  {

    v35 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36 = v15;
    goto LABEL_8;
  }
  v41 = v10;
  v20 = swift_slowAlloc();
  v40 = v9;
  v21 = (uint8_t *)v20;
  v22 = swift_slowAlloc();
  v42 = v17;
  v23 = v22;
  v45 = v22;
  v46 = a2;
  *(_DWORD *)v21 = 136446210;
  swift_getMetatypeMetadata();
  v24 = sub_2314146E0();
  v46 = sub_23133180C(v24, v25, &v45);
  sub_231414CBC();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2312C8000, v18, v19, "[%{public}s]: In background mode, so will finish after 1 update", v21, 0xCu);
  swift_arrayDestroy();
  v26 = v23;
  v17 = v42;
  MEMORY[0x2348DE308](v26, -1, -1);
  MEMORY[0x2348DE308](v21, -1, -1);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
LABEL_9:
  v46 = v17;
  sub_231372FCC();
  sub_2312D6DD8(0, &qword_25415DE60, (uint64_t (*)(uint64_t))sub_231372FCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2312CCC24((unint64_t *)&qword_25415DD60, (uint64_t (*)(uint64_t))sub_231372FCC, MEMORY[0x24BDB9AF8]);
  sub_231362FC8();
  sub_231413CF0();
  sub_2312CCC24(&qword_25415DD50, (uint64_t (*)(uint64_t))sub_2313AF450, MEMORY[0x24BDB99D8]);
  v37 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v8, v6);
  *v44 = v37;
  return result;
}

uint64_t sub_2313AEA68@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_231411A4C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  v10 = type metadata accessor for AtrialFibrillationPromotionGenerator();
  swift_allocObject();
  v11 = sub_231334EA0(a1, (uint64_t)v8);
  a3[3] = v10;
  result = sub_2312CCC24(&qword_25415DAE0, (uint64_t (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionGenerator, (uint64_t)&unk_23141BBB0);
  a3[4] = result;
  *a3 = v11;
  return result;
}

uint64_t sub_2313AEB40@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t result;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;

  v6 = sub_231411A04();
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411A4C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v28 = *a1;
  v27 = a2;
  sub_231411A10();
  sub_2312CEA5C(v32, v33);
  sub_2314119C8();
  v16 = type metadata accessor for AFibBurdenSettingsManager();
  v17 = swift_allocObject();
  v30 = v8;
  v31 = a3;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v18 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v18 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v17 + 24) = v18;
  sub_2314146BC();
  sub_231411B84();
  swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_231411B54();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v32);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v15, v27, v9);
  v20 = type metadata accessor for AFibBurdenPromotionGenerator();
  swift_allocObject();
  v33 = v16;
  v34 = &off_250029728;
  v32[0] = v17;
  v19(v13, (uint64_t)v15, v9);
  v21 = qword_25415C0F8;
  swift_retain();
  if (v21 != -1)
    swift_once();
  v22 = sub_2312CE3B8(v6, (uint64_t)qword_254162EB8);
  v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v22, v6);
  v24 = sub_2313D9C70(v28, (uint64_t)v32, (uint64_t)v13, v23, 0, 0xF000000000000000);
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v25 = v31;
  v31[3] = v20;
  result = sub_2312CCC24(&qword_25415C5C8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPromotionGenerator, (uint64_t)&unk_231422538);
  v25[4] = result;
  *v25 = v24;
  return result;
}

uint64_t sub_2313AEE14@<X0>(_WORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_231411A4C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(a1) = *a1;
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  v10 = type metadata accessor for AFibFeaturesPromotionGenerator();
  swift_allocObject();
  v11 = sub_23138D2C8((__int16)a1, (uint64_t)v8);
  a3[3] = v10;
  result = sub_2312CCC24(&qword_25415C6C0, (uint64_t (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionGenerator, (uint64_t)&unk_23141EAE8);
  a3[4] = result;
  *a3 = v11;
  return result;
}

uint64_t sub_2313AEEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2313AEF50()
{
  return type metadata accessor for HeartPromotionGeneratorPipeline();
}

uint64_t type metadata accessor for HeartPromotionGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415D560;
  if (!qword_25415D560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313AEF94()
{
  return swift_retain();
}

uint64_t sub_2313AEFA8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2313AEFF0(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;

  v38 = a1;
  v46 = *v2;
  v47 = a2;
  v3 = sub_231411A4C();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = *(_QWORD *)(v42 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313AF364(0);
  v6 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  v49 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2314119E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_231411A04();
  v12 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[1] = sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = sub_231411890();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231418090;
  v20 = v19 + v18;
  v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104);
  v21(v20, *MEMORY[0x24BE47420], v15);
  v21(v20 + v17, *MEMORY[0x24BE474E0], v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE47910], v8);
  sub_2314119EC();
  v22 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v41 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_domain, v14, v39);
  v24 = v42;
  v23 = v43;
  v25 = v40;
  v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v38, v43);
  v27 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v28 = (v44 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v29 + v27, v25, v23);
  v30 = v46;
  v31 = v47;
  *(_QWORD *)(v29 + v28) = v47;
  *(_QWORD *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  sub_231372FCC();
  sub_2312CCC24((unint64_t *)&qword_25415DD60, (uint64_t (*)(uint64_t))sub_231372FCC, MEMORY[0x24BDB9AF8]);
  v32 = v31;
  v33 = v45;
  sub_231413E04();
  sub_2312CCC24((unint64_t *)&qword_25415DE00, (uint64_t (*)(uint64_t))sub_2313AF364, MEMORY[0x24BDB9E90]);
  v34 = v48;
  v35 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v34);
  result = v22;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC5Heart31HeartPromotionGeneratorPipeline_publisher) = v35;
  return result;
}

void sub_2313AF364(uint64_t a1)
{
  sub_2313AF464(a1, &qword_25415DE08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
}

uint64_t sub_2313AF378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_2313AF3F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_231411A4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_2313AE5B8(v1 + v4, *(_QWORD *)(v1 + ((((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_2313AF450(uint64_t a1)
{
  sub_2313AF464(a1, &qword_25415DD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
}

void sub_2313AF464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_231372FCC();
    v7 = v6;
    v8 = sub_2312CCC24((unint64_t *)&qword_25415DD60, (uint64_t (*)(uint64_t))sub_231372FCC, MEMORY[0x24BDB9AF8]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2313AF4E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = sub_231411A4C();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v30 = v3;
  v31 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313AFF40(0, &qword_25415CF68, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult, &qword_25415D080);
  v5 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  v29 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - v6;
  sub_2312CF374(0, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x24BDB9ED8]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  sub_2313B0308(0, &qword_25415DCC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))MEMORY[0x24BDB94B8]);
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - v14;
  swift_beginAccess();
  sub_2312CF374(0, &qword_25415D0B0, (uint64_t)&type metadata for HeartPromotionResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_231413E28();
  swift_endAccess();
  v16 = a1;
  v17 = sub_231411A1C();
  sub_2313AFFD0(&qword_25415D080, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult);
  if ((v17 & 1) != 0)
  {
    v19 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2313B00E8();
    v18 = v28;
    v19 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v35 = v19;
  v21 = v31;
  v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v31, v16, v32);
  v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v21, v20);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_2313B03B8;
  *(_QWORD *)(v24 + 24) = v23;
  sub_2313B01F8(0, &qword_25415DD78);
  sub_2312E5B54();
  sub_2313B0018(&qword_25415DD70, &qword_25415DD78);
  sub_231413E88();
  swift_release();
  swift_release();
  sub_2313B00A8(&qword_25415DCB8, &qword_25415DCC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))MEMORY[0x24BDB94B8], MEMORY[0x24BDB94C8]);
  v25 = v34;
  v26 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v25);
  return v26;
}

uint64_t sub_2313AF870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = sub_231411A4C();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v29 = v3;
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313AFF40(0, &qword_25415CF70, &qword_25415D098, (uint64_t)&type metadata for HeartFeaturePromotionResult, &qword_25415D090);
  v5 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  v28 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - v6;
  sub_2312CF374(0, &qword_25415D098, (uint64_t)&type metadata for HeartFeaturePromotionResult, MEMORY[0x24BDB9ED8]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  sub_2313B0150();
  v33 = v13;
  v31 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2312CF374(0, &qword_25415D0B8, (uint64_t)&type metadata for HeartFeaturePromotionResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_231413E28();
  swift_endAccess();
  v16 = a1;
  v17 = sub_231411A1C();
  sub_2313AFFD0(&qword_25415D090, &qword_25415D098, (uint64_t)&type metadata for HeartFeaturePromotionResult);
  if ((v17 & 1) != 0)
  {
    v19 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2313B02A0();
    v18 = v27;
    v19 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v34 = v19;
  v20 = v30;
  v21 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v30, v16, v32);
  v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  sub_2313B01F8(0, &qword_25415CFD0);
  sub_2312E5B54();
  sub_2313B0018(&qword_25415CFC8, &qword_25415CFD0);
  sub_231413E88();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_25415CDB0, (uint64_t (*)(uint64_t))sub_2313B0150, MEMORY[0x24BDB94C8]);
  v24 = v33;
  v25 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v24);
  return v25;
}

uint64_t sub_2313AFBD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = sub_231411A4C();
  v2 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v29 = v3;
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313AFF40(0, &qword_25415CF68, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult, &qword_25415D080);
  v5 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  v28 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - v6;
  sub_2312CF374(0, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult, MEMORY[0x24BDB9ED8]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  sub_2313B0308(0, &qword_25415CEB8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))MEMORY[0x24BDB96B0]);
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - v14;
  swift_beginAccess();
  sub_2312CF374(0, &qword_25415D0B0, (uint64_t)&type metadata for HeartPromotionResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_231413E28();
  swift_endAccess();
  v16 = a1;
  v17 = sub_231411A1C();
  sub_2313AFFD0(&qword_25415D080, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult);
  if ((v17 & 1) != 0)
  {
    v19 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2313B00E8();
    v18 = v27;
    v19 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v18);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v34 = v19;
  v20 = v30;
  v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v30, v16, v33);
  v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  sub_2313B01F8(0, &qword_25415DD78);
  sub_2312E5B54();
  sub_2313B0018(&qword_25415DD70, &qword_25415DD78);
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2313B00A8(&qword_25415CEB0, &qword_25415CEB8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))MEMORY[0x24BDB96B0], MEMORY[0x24BDB96C0]);
  v24 = v32;
  v25 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v24);
  return v25;
}

void sub_2313AFF40(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2312CF374(255, a3, a4, MEMORY[0x24BDB9ED8]);
    sub_2313AFFD0(a5, a3, a4);
    v9 = sub_231413C84();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2313AFFD0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2312CF374(255, a2, a3, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9EE8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2313B0018(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_2313B01F8(255, a2);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2313B005C@<X0>(_WORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_2313AEE14(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_2313B00A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2313B0308(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313B00E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D230;
  if (!qword_25415D230)
  {
    sub_2313AFF40(255, &qword_25415CF68, &qword_25415D088, (uint64_t)&type metadata for HeartPromotionResult, &qword_25415D080);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9770], v1);
    atomic_store(result, (unint64_t *)&qword_25415D230);
  }
  return result;
}

void sub_2313B0150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CDB8)
  {
    sub_2313B01F8(255, &qword_25415CFD0);
    sub_2312E5B54();
    sub_2313B0018(&qword_25415CFC8, &qword_25415CFD0);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CDB8);
  }
}

void sub_2313B01F8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231413D14();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2313B0254@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_2313AEB40(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_2313B02A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D238;
  if (!qword_25415D238)
  {
    sub_2313AFF40(255, &qword_25415CF70, &qword_25415D098, (uint64_t)&type metadata for HeartFeaturePromotionResult, &qword_25415D090);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9770], v1);
    atomic_store(result, (unint64_t *)&qword_25415D238);
  }
  return result;
}

void sub_2313B0308(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    sub_2313B01F8(255, &qword_25415DD78);
    v7 = v6;
    v8 = sub_2312E5B54();
    v9 = sub_2313B0018(&qword_25415DD70, &qword_25415DD78);
    v10 = a3(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_2313B03B8@<X0>(__int16 a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_2313AEA68(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_2313B0404()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313B0428(unsigned __int16 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_2313B044C(uint64_t a1)
{
  return sub_2313B0544(0.88, a1, &qword_255ED2E30);
}

double sub_2313B0460()
{
  double result;
  __int128 v1;
  __int128 v2;
  uint64_t v3;

  sub_231413FD8();
  result = *(double *)&v1;
  xmmword_255ED2E38 = v1;
  *(_OWORD *)&qword_255ED2E48 = v2;
  qword_255ED2E58 = v3;
  return result;
}

double sub_2313B04B8()
{
  uint64_t v0;
  double result;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  sub_2313B07A8();
  v0 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v0 + 16) = xmmword_231418090;
  *(_OWORD *)(v0 + 32) = _Q1;
  sub_231413FD8();
  result = *(double *)&v7;
  xmmword_255ED2E60 = v7;
  *(_OWORD *)&qword_255ED2E70 = v8;
  qword_255ED2E80 = v9;
  return result;
}

uint64_t sub_2313B0530(uint64_t a1)
{
  return sub_2313B0544(0.290196078, a1, &qword_255ED2E88);
}

uint64_t sub_2313B0544(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = sub_2314143A4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v8 + 104))(v7, *MEMORY[0x24BDF3C28]);
  result = MEMORY[0x2348DCD9C](v7, a1, a1, a1, 1.0);
  *a3 = result;
  return result;
}

uint64_t sub_2313B05DC(uint64_t a1)
{
  return sub_2313B0640(a1, MEMORY[0x24BDF1700], MEMORY[0x24BDF1660], &qword_255ED2E90);
}

void sub_2313B05F8()
{
  qword_255ED2E98 = 0x4000000000000000;
}

double sub_2313B0608()
{
  double result;

  result = 5.0;
  xmmword_255ED2EA0 = xmmword_2314206C0;
  qword_255ED2EB0 = 0;
  unk_255ED2EB8 = 0;
  return result;
}

uint64_t sub_2313B0624(uint64_t a1)
{
  return sub_2313B0640(a1, (void (*)(uint64_t))MEMORY[0x24BDF16A8], MEMORY[0x24BDF1668], &qword_255ED2EC0);
}

uint64_t sub_2313B0640(uint64_t a1, void (*a2)(uint64_t), unsigned int *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  sub_2313B0718();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v8);
  v11 = *a3;
  v12 = sub_231414284();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  v14 = sub_23141429C();
  result = sub_2313B076C((uint64_t)v10);
  *a4 = v14;
  return result;
}

void sub_2313B0718()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0168)
  {
    sub_231414284();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0168);
  }
}

uint64_t sub_2313B076C(uint64_t a1)
{
  uint64_t v2;

  sub_2313B0718();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2313B07A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0170)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0170);
  }
}

ValueMetadata *type metadata accessor for AFibBurdenFooterProvider()
{
  return &type metadata for AFibBurdenFooterProvider;
}

uint64_t sub_2313B080C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_231412250();
  v0 = (void *)sub_231412244();
  v1 = objc_msgSend(v0, sel_CGColor);

  v8 = sub_231412934();
  v9 = MEMORY[0x24BE435A0];
  sub_2312DFCA0(v7);
  sub_231412928();
  v2 = sub_2314126DC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  v8 = sub_2314124CC();
  v9 = MEMORY[0x24BE42BA0];
  sub_2312DFCA0(v7);
  sub_2314124D8();
  v3 = sub_2314126DC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  sub_2312D6DD8(0, &qword_255ECF2F0, (uint64_t (*)(uint64_t))sub_2313965C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231418090;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  v5 = MEMORY[0x2348DB0B0]();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2313B0940()
{
  return swift_task_switch();
}

uint64_t sub_2313B0954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6DD8(0, &qword_255ECF320, (uint64_t (*)(uint64_t))sub_2313965DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231416A30;
  v2 = sub_231413504();
  v3 = MEMORY[0x24BE453D0];
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  sub_2312DFCA0((uint64_t *)(v1 + 32));
  sub_2314134F8();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

void sub_2313B09FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[8];

  v1 = sub_231414C74();
  v8[4] = *(_QWORD *)(v1 - 8);
  v8[5] = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2314114AC();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for ResultItem.BodyItem();
  MEMORY[0x24BDAC7A8](v5);
  sub_2313B2868(v0, (uint64_t)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (char *)&loc_2313B0B24 + *((int *)qword_2313B0FE8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

id sub_2313B0B34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;

  v3 = *v0;
  v2 = v0[1];
  v5 = v0[2];
  v4 = v0[3];
  v6 = (objc_class *)type metadata accessor for BulletedLabelView();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView] = 0;
  v8 = &v7[OBJC_IVAR____TtC5Heart17BulletedLabelView_text];
  *(_QWORD *)v8 = v3;
  *((_QWORD *)v8 + 1) = v2;
  v9 = &v7[OBJC_IVAR____TtC5Heart17BulletedLabelView_textAccessibilityIdentifier];
  *(_QWORD *)v9 = v5;
  *((_QWORD *)v9 + 1) = v4;
  *(_QWORD *)(v1 - 96) = v7;
  *(_QWORD *)(v1 - 88) = v6;
  sub_231412A90();
  sub_231412A90();
  v10 = objc_msgSendSuper2((objc_super *)(v1 - 96), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2313119DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10;
}

void sub_2313B0FF8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = (void *)sub_231411488();
  sub_2313374B0(MEMORY[0x24BEE4AF8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_2313B29AC();
  v2 = (id)sub_23141462C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_openURL_options_completionHandler_, v1, v2, 0);

}

id sub_2313B10C0(uint64_t a1)
{
  return sub_2313B1E20(a1, (SEL *)&selRef_labelColor, &qword_255ED0180);
}

uint64_t sub_2313B10D4()
{
  uint64_t result;

  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  result = sub_231414B9C();
  qword_255ED0188 = result;
  return result;
}

id sub_2313B1138(uint64_t a1)
{
  return sub_2313B1E20(a1, (SEL *)&selRef_labelColor, &qword_255ED0190);
}

id sub_2313B114C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE248], 1280);
  if (result)
    qword_255ED0198 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

id sub_2313B119C()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_2313B11B0);
}

id sub_2313B11B0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = a1 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem;
  sub_231412A90();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4);

  if (qword_255ECAA90 != -1)
    swift_once();
  objc_msgSend(v2, sel_setFont_, qword_255ED0198);
  if (qword_255ECAA88 != -1)
    swift_once();
  objc_msgSend(v2, sel_setTextColor_, qword_255ED0190);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  if (*(_QWORD *)(v3 + 24))
  {
    v5 = v2;
    sub_231412A90();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v2;
    v6 = 0;
  }
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v6);

  return v2;
}

id sub_2313B134C()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel, (uint64_t (*)(uint64_t))sub_2313B1360);
}

id sub_2313B1360(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = a1 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem;
  sub_231412A90();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4);

  if (qword_255ECAA80 != -1)
    swift_once();
  objc_msgSend(v2, sel_setFont_, qword_255ED0188);
  if (qword_255ECAA78 != -1)
    swift_once();
  objc_msgSend(v2, sel_setTextColor_, qword_255ED0180);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  if (*(_QWORD *)(v3 + 56))
  {
    v5 = v2;
    sub_231412A90();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v2;
    v6 = 0;
  }
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v6);

  return v2;
}

id sub_2313B14FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
    v6 = objc_msgSend(v5, sel_heightAnchor);
    v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 165.0);

    objc_msgSend(v5, sel_addConstraint_, v7);
    v8 = *(void **)(v4 + OBJC_IVAR____TtC5Heart14ResultItemView_resultItem + 88);
    objc_msgSend(v5, sel_addSubview_, v8);
    v9 = (id)*MEMORY[0x24BDE58E8];
    sub_231414BB4();

    objc_msgSend(v8, sel_hk_alignConstraintsWithView_, v5);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_2313B1630()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setSpacing_, 12.0);
    objc_msgSend(v4, sel_setHidden_, 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2313B16F0()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton, (uint64_t (*)(uint64_t))sub_2313B1704);
}

void *sub_2313B1704(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;

  v2 = sub_231414C74();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  sub_2312D3C68(0, &qword_255ECCA40);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (void *)sub_231414C20();
  sub_231414C5C();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231414C68();
  sub_231414C38();
  sub_2312D3C68(0, qword_255ED0248);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v10 = v9;
  v11 = (void *)sub_231414C80();
  if (objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    v12 = 2;
  else
    v12 = 1;
  objc_msgSend(v11, sel_setContentHorizontalAlignment_, v12);
  v13 = &a1[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem];
  objc_msgSend(v11, sel_setHidden_, *(_QWORD *)(*((_QWORD *)v13 + 8) + 16) == 0);
  if (*((_QWORD *)v13 + 10))
  {
    v14 = v11;
    sub_231412A90();
    v15 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v11;
    v15 = 0;
  }
  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v11;
}

void sub_2313B19B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348DE3BC](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = sub_2313B1630();
    objc_msgSend(v5, sel_setHidden_, 0);

    v6 = (void *)sub_2313B16F0();
    objc_msgSend(v6, sel_setHidden_, 1);

  }
}

id sub_2313B1A38()
{
  return sub_2313B1E70(&OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView, 12.0);
}

void sub_2313B1A6C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;

  v1 = v0;
  v2 = sub_2313B1A38();
  v3 = sub_2313B119C();
  objc_msgSend(v2, sel_addArrangedSubview_, v3);

  v4 = sub_2313B1A38();
  v5 = sub_2313B119C();
  objc_msgSend(v4, sel_setCustomSpacing_afterView_, v5, 10.0);

  v6 = sub_2313B1A38();
  v7 = sub_2313B14FC();
  objc_msgSend(v6, sel_addArrangedSubview_, v7);

  v8 = sub_2313B1A38();
  v9 = sub_2313B134C();
  objc_msgSend(v8, sel_addArrangedSubview_, v9);

  v10 = sub_2313B1A38();
  v11 = sub_2313B1630();
  objc_msgSend(v10, sel_addArrangedSubview_, v11);

  v12 = sub_2313B1A38();
  v13 = sub_2313B16F0();
  objc_msgSend(v12, sel_addArrangedSubview_, v13);

  v14 = sub_2313B1A38();
  objc_msgSend(v1, sel_addSubview_, v14);

  v15 = sub_2313B1A38();
  objc_msgSend(v15, sel_hk_alignConstraintsWithView_, v1);

  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem + 64];
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = *(_QWORD *)(type metadata accessor for ResultItem.BodyItem() - 8);
    v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v20 = *(_QWORD *)(v18 + 72);
    sub_231412A90();
    do
    {
      v21 = sub_2313B1630();
      sub_2313B09FC();
      v23 = v22;
      objc_msgSend(v21, sel_addArrangedSubview_, v22);

      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
}

id sub_2313B1D04()
{
  return sub_231334858(type metadata accessor for ResultItemView);
}

uint64_t type metadata accessor for ResultItemView()
{
  return objc_opt_self();
}

id sub_2313B1E0C(uint64_t a1)
{
  return sub_2313B1E20(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_255ED01A0);
}

id sub_2313B1E20(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  *a3 = result;
  return result;
}

id sub_2313B1E60()
{
  return sub_2313B1E70(&OBJC_IVAR____TtC5Heart21ListOfResultItemsView____lazy_storage___stackView, 30.0);
}

id sub_2313B1E70(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v7;
  void *v8;
  id v9;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v7, sel_setAlignment_, 0);
    objc_msgSend(v7, sel_setAxis_, 1);
    objc_msgSend(v7, sel_setSpacing_, a2);
    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v9 = v4;
  return v5;
}

void *sub_2313B1F38(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_class *v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  id v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  _QWORD v44[4];
  objc_super v45;
  objc_super v46;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart21ListOfResultItemsView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart21ListOfResultItemsView_resultItems] = a1;
  v46.receiver = v1;
  v46.super_class = (Class)type metadata accessor for ListOfResultItemsView();
  v2 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = v2;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart21ListOfResultItemsView_resultItems];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v33 = v2;
    v2;
    sub_231412A90();
    v6 = 0;
    v34 = v4;
    do
    {
      v42 = v5;
      v20 = *(_QWORD *)(v4 + v6 + 40);
      v21 = *(_QWORD *)(v4 + v6 + 56);
      v38 = *(_QWORD *)(v4 + v6 + 48);
      v39 = *(_QWORD *)(v4 + v6 + 32);
      v22 = *(_QWORD *)(v4 + v6 + 72);
      v23 = *(_QWORD *)(v4 + v6 + 88);
      v36 = *(_QWORD *)(v4 + v6 + 80);
      v37 = *(_QWORD *)(v4 + v6 + 64);
      v24 = *(_QWORD *)(v4 + v6 + 96);
      v35 = *(_QWORD *)(v4 + v6 + 104);
      v25 = *(_QWORD *)(v4 + v6 + 112);
      v26 = *(void **)(v4 + v6 + 120);
      sub_231412A90();
      v27 = v26;
      v41 = v20;
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      v40 = v6;
      if (v6)
      {
        v28 = sub_2313B1E60();
        if (qword_255ECAA98 != -1)
          swift_once();
        v7 = (void *)qword_255ED01A0;
        v8 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
        v9 = v7;
        v10 = objc_msgSend(v8, sel_init);
        objc_msgSend(v10, sel_setBackgroundColor_, v9);

        sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
        v44[3] = sub_2312D3C68(0, (unint64_t *)&qword_255ECDC18);
        v44[0] = v10;
        memset(v43, 0, sizeof(v43));
        v11 = v10;
        v12 = sub_2313B23C0(v44, 8, 0, v43, 0, 1.0, 1.0);
        objc_msgSend(v11, sel_addConstraint_, v12);

        objc_msgSend(v28, sel_addArrangedSubview_, v11);
        v4 = v34;
      }
      v13 = (objc_class *)type metadata accessor for ResultItemView();
      v14 = (char *)objc_allocWithZone(v13);
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView] = 0;
      v15 = &v14[OBJC_IVAR____TtC5Heart14ResultItemView_resultItem];
      *(_QWORD *)v15 = v39;
      *((_QWORD *)v15 + 1) = v41;
      *((_QWORD *)v15 + 2) = v38;
      *((_QWORD *)v15 + 3) = v21;
      *((_QWORD *)v15 + 4) = v37;
      *((_QWORD *)v15 + 5) = v22;
      *((_QWORD *)v15 + 6) = v36;
      *((_QWORD *)v15 + 7) = v23;
      *((_QWORD *)v15 + 8) = v24;
      *((_QWORD *)v15 + 9) = v35;
      *((_QWORD *)v15 + 10) = v25;
      *((_QWORD *)v15 + 11) = v27;
      v45.receiver = v14;
      v45.super_class = v13;
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
      v16 = v27;
      v17 = v4;
      v18 = objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_2313B1A6C();
      v19 = sub_2313B1E60();
      objc_msgSend(v19, sel_addArrangedSubview_, v18);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v4 = v17;
      v6 = v40 + 96;
      v5 = v42 - 1;
    }
    while (v42 != 1);
    swift_bridgeObjectRelease();
    v3 = v33;
  }
  else
  {
    v29 = v2;
  }
  v30 = sub_2313B1E60();
  objc_msgSend(v3, sel_addSubview_, v30);

  v31 = sub_2313B1E60();
  objc_msgSend(v31, sel_hk_alignConstraintsWithView_, v3);

  return v3;
}

id sub_2313B23C0(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  uint64_t v25;
  uint64_t v26;

  sub_2312CEA5C(a1, a1[3]);
  v14 = sub_231415064();
  v15 = a4[3];
  if (v15)
  {
    v16 = sub_2312CEA5C(a4, a4[3]);
    v25 = a5;
    v26 = a2;
    v17 = a3;
    v18 = *(_QWORD *)(v15 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = sub_231415064();
    v22 = *(void (**)(char *, uint64_t))(v18 + 8);
    a3 = v17;
    v22(v20, v15);
    a5 = v25;
    a2 = v26;
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a4);
  }
  else
  {
    v21 = 0;
  }
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_, v14, a2, a3, v21, a5, a6, a7);
  sub_2314130CC();
  sub_2314130CC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v23;
}

id sub_2313B2544()
{
  return sub_231334858(type metadata accessor for ListOfResultItemsView);
}

uint64_t type metadata accessor for ListOfResultItemsView()
{
  return objc_opt_self();
}

void destroy for ResultItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for ResultItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for ResultItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[11];
  v5 = (void *)a1[11];
  a1[11] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ResultItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);

  return a1;
}

ValueMetadata *type metadata accessor for ResultItem()
{
  return &type metadata for ResultItem;
}

uint64_t type metadata accessor for ResultItem.BodyItem()
{
  uint64_t result;

  result = qword_255ED02C0;
  if (!qword_255ED02C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313B2868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResultItem.BodyItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2313B28AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ED0240)
  {
    sub_2314114AC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ED0240);
  }
}

uint64_t sub_2313B2910()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2314114AC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_2313B2970()
{
  sub_2314114AC();
  sub_2313B0FF8();
}

unint64_t sub_2313B29AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECAE48;
  if (!qword_255ECAE48)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = MEMORY[0x2348DE248](&unk_231417AD4, v1);
    atomic_store(result, (unint64_t *)&qword_255ECAE48);
  }
  return result;
}

uint64_t sub_2313B29F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2313B2A18(uint64_t a1)
{
  uint64_t v1;

  sub_2313B19B0(a1, v1);
}

void sub_2313B2A20()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___descriptionLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___itemView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___bodyStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___learnMoreButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart14ResultItemView____lazy_storage___stackView] = 0;

  sub_231414EE4();
  __break(1u);
}

uint64_t sub_2313B2AC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2313B2B1C + 4 * byte_231420720[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_2313B2C44(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2313B28AC();
      v4 = a1 + *(int *)(v3 + 48);
      v5 = sub_2314114AC();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void sub_2313B2CE4()
{
  char *v0;

  v0 = (char *)sub_2313B2D38 + 4 * byte_231420728[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2313B2D38()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  sub_231412A90();
  sub_231412A90();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_2313B2DE0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_2313B2F0C(result);
    v2 = (char *)&loc_2313B2E44 + 4 * byte_23142072C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_2313B2F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResultItem.BodyItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_2313B2F48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    sub_2313B28AC();
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2314114AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_2313B2FF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_2313B2F0C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      sub_2313B28AC();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2314114AC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2313B30A8()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[8];

  v2[4] = " ";
  v2[5] = " ";
  v2[6] = " ";
  result = sub_2314114AC();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[7] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ResultItem.BodyComponents()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s5Heart10ResultItemV14BodyComponentsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for ResultItem.BodyComponents(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ResultItem.BodyComponents(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ResultItem.BodyComponents()
{
  return &type metadata for ResultItem.BodyComponents;
}

uint64_t destroy for CardioFitnessHealthChecklistSettingsState.Footer.Link()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CardioFitnessHealthChecklistSettingsState.Footer.Link(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for CardioFitnessHealthChecklistSettingsState.Footer.Link(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CardioFitnessHealthChecklistSettingsState.Footer.Link(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.Footer.Link(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.Footer.Link(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultItem.LabelComponents()
{
  return &type metadata for ResultItem.LabelComponents;
}

id sub_2313B33FC(char a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  objc_super v10;
  __int128 v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier];
  v4 = qword_255ECA990;
  v5 = v1;
  if (v4 != -1)
    swift_once();
  v11 = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  v6 = *((_QWORD *)&v11 + 1);
  *(_QWORD *)v3 = v11;
  *((_QWORD *)v3 + 1) = v6;
  v5[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow] = a1 & 1;

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v7 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AFibBurdenOnboardingResultsViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithTitle_detailText_icon_contentLayout_, v7, 0, 0, 2, 0xE000000000000000);

  return v8;
}

id sub_2313B35C4()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AFibBurdenOnboardingResultsViewController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_2313B36B8()
{
  char *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  objc_class *v79;
  id v80;
  void *v81;
  id v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  void *v135;
  id v136;
  id v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  id v144;
  void *v145;
  id v146;
  id v147;
  uint64_t v148;
  void *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  void (*v157)(_QWORD, _QWORD, _QWORD);
  uint64_t v158;
  __int128 v159;
  char *v160;
  id v161;
  uint64_t v162;
  id v163;
  void (*v164)(char *, uint64_t, uint64_t);
  objc_class *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  unint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  __int128 aBlock;
  id (*v174)(uint64_t, void *);
  __int128 v175;
  uint64_t v176;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v150 - v3;
  v172 = sub_231411644();
  v5 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v170 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_255ED0168, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], v1);
  MEMORY[0x24BDAC7A8](v7);
  v168 = (char *)&v150 - v8;
  if (v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow] == 1)
    objc_msgSend(v0, sel_hxui_addCancelButton);
  v9 = sub_2313BF9E8();
  v10 = OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton;
  v11 = *(void **)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton] = v9;

  v12 = *(void **)&v0[v10];
  if (v12)
    objc_msgSend(v12, sel_setEnabled_, 0);
  v13 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v13, sel_setBackButtonDisplayMode_, 1);

  v14 = objc_msgSend(v0, sel_headerView);
  if (qword_255ECA990 != -1)
    swift_once();
  aBlock = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v15 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15);

  v161 = objc_msgSend((id)objc_opt_self(), sel_hk_percentNumberFormatter);
  v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier];
  v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_baseIdentifier + 8];
  *(_QWORD *)&aBlock = v17;
  *((_QWORD *)&aBlock + 1) = v16;
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  v18 = HIBYTE(*((_QWORD *)&aBlock + 1)) & 0xFLL;
  if ((*((_QWORD *)&aBlock + 1) & 0x2000000000000000) == 0)
    v18 = aBlock & 0xFFFFFFFFFFFFLL;
  v150 = v0;
  v160 = v4;
  v158 = v5;
  *((_QWORD *)&v156 + 1) = v16;
  *(_QWORD *)&v156 = v17;
  if (v18)
  {
    sub_231414728();
    v19 = *((_QWORD *)&aBlock + 1);
    v151 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    v151 = 0;
    v19 = 0xE000000000000000;
  }
  v169 = v19;
  sub_2312D6DD8(0, &qword_255ED0348, (uint64_t (*)(uint64_t))type metadata accessor for LocalizedImageView.TextConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = v20;
  v171 = type metadata accessor for LocalizedImageView.TextConfiguration();
  v22 = *(_QWORD *)(v171 - 8);
  v162 = *(_QWORD *)(v22 + 72);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 + 32) & ~v23;
  v155 = v21;
  v153 = v23 | 7;
  v25 = swift_allocObject();
  v159 = xmmword_231418090;
  *(_OWORD *)(v25 + 16) = xmmword_231418090;
  v167 = v25;
  v154 = v24;
  v26 = v25 + v24;
  v157 = (void (*)(_QWORD, _QWORD, _QWORD))sub_23132AF38();
  v152 = v27;
  sub_231414290();
  LODWORD(v166) = *MEMORY[0x24BDF1668];
  v28 = v166;
  v29 = sub_231414284();
  v30 = *(_QWORD *)(v29 - 8);
  v164 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
  v31 = (uint64_t)v168;
  v164(v168, v28, v29);
  v165 = *(objc_class **)(v30 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v165)(v31, 0, 1, v29);
  v32 = sub_23141429C();
  sub_2313B076C(v31);
  v163 = (id)objc_opt_self();
  v33 = MEMORY[0x2348DCDA8](objc_msgSend(v163, sel_labelColor));
  v34 = sub_2314144C4();
  v36 = v35;
  v37 = v170;
  sub_231411638();
  v38 = v152;
  *(_QWORD *)v26 = v157;
  *(_QWORD *)(v26 + 8) = v38;
  *(_QWORD *)(v26 + 16) = v32;
  *(_QWORD *)(v26 + 24) = v33;
  *(_OWORD *)(v26 + 32) = xmmword_2314207C0;
  *(_QWORD *)(v26 + 48) = 0;
  *(_QWORD *)(v26 + 56) = 0;
  *(_QWORD *)(v26 + 64) = 1;
  *(_QWORD *)(v26 + 72) = 0x3FE0000000000000;
  *(_QWORD *)(v26 + 80) = v34;
  *(_QWORD *)(v26 + 88) = v36;
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v158 + 32);
  v39(v26 + *(int *)(v171 + 44), v37, v172);
  v40 = v26 + v162;
  v41 = sub_23132AF38();
  v157 = v42;
  sub_231414290();
  v164((char *)v31, v166, v29);
  v158 = v29;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v165)(v31, 0, 1, v29);
  v43 = sub_23141429C();
  sub_2313B076C(v31);
  v44 = MEMORY[0x2348DCDA8](objc_msgSend(v163, sel_labelColor));
  v45 = sub_2314144C4();
  v47 = v46;
  sub_231411638();
  v48 = v157;
  *(_QWORD *)v40 = v41;
  *(_QWORD *)(v40 + 8) = v48;
  *(_QWORD *)(v40 + 16) = v43;
  *(_QWORD *)(v40 + 24) = v44;
  *(_OWORD *)(v40 + 32) = xmmword_2314207D0;
  *(_QWORD *)(v40 + 48) = 0;
  *(_QWORD *)(v40 + 56) = 0;
  *(_QWORD *)(v40 + 64) = 1;
  *(_QWORD *)(v40 + 72) = 0x3FE0000000000000;
  *(_QWORD *)(v40 + 80) = v45;
  *(_QWORD *)(v40 + 88) = v47;
  v49 = v40 + *(int *)(v171 + 44);
  v157 = (void (*)(_QWORD, _QWORD, _QWORD))v39;
  v39(v49, v37, v172);
  aBlock = v156;
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  v50 = HIBYTE(*((_QWORD *)&aBlock + 1)) & 0xFLL;
  if ((*((_QWORD *)&aBlock + 1) & 0x2000000000000000) == 0)
    v50 = aBlock & 0xFFFFFFFFFFFFLL;
  if (v50)
  {
    sub_231414728();
    v51 = *((_QWORD *)&aBlock + 1);
    *(_QWORD *)&v156 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v156 = 0;
    v51 = 0xE000000000000000;
  }
  *((_QWORD *)&v156 + 1) = v51;
  v52 = v154;
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_231416A30;
  v162 = v53;
  v54 = v53 + v52;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v55 = sub_231411374();
  v57 = v56;
  sub_231414290();
  v58 = (uint64_t)v168;
  v59 = v158;
  v164(v168, v166, v158);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v165)(v58, 0, 1, v59);
  v60 = sub_23141429C();
  sub_2313B076C(v58);
  v61 = MEMORY[0x2348DCDA8](objc_msgSend(v163, sel_labelColor));
  v62 = sub_2314144C4();
  v64 = v63;
  v65 = v170;
  sub_231411638();
  *(_QWORD *)v54 = v55;
  *(_QWORD *)(v54 + 8) = v57;
  *(_QWORD *)(v54 + 16) = v60;
  *(_QWORD *)(v54 + 24) = v61;
  *(_OWORD *)(v54 + 32) = xmmword_2314207E0;
  *(_OWORD *)(v54 + 48) = xmmword_2314207F0;
  *(_QWORD *)(v54 + 64) = 1;
  *(_QWORD *)(v54 + 72) = 0x3FE0000000000000;
  *(_QWORD *)(v54 + 80) = v62;
  *(_QWORD *)(v54 + 88) = v64;
  v157(v54 + *(int *)(v171 + 44), v65, v172);
  v66 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  *((_QWORD *)&v175 + 1) = sub_2313B49A8;
  v176 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v174 = sub_2313B4FE0;
  *(_QWORD *)&v175 = &unk_250027550;
  v67 = _Block_copy(&aBlock);
  v68 = objc_msgSend(v66, sel_initWithDynamicProvider_, v67);
  _Block_release(v67);
  swift_release();
  sub_2312D6CEC(0, &qword_255ED0350);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v159;
  v172 = 0xD000000000000021;
  v70 = sub_231411374();
  v170 = v71;
  v171 = v70;
  v168 = (char *)sub_2313B506C(0x46416E49656D6954, 0xEA00000000006269, 0x656C746954, 0xE500000000000000);
  v166 = v72;
  v73 = sub_231411374();
  v75 = v74;
  v76 = sub_2313B506C(0x46416E49656D6954, 0xEA00000000006269, 0x6C6961746544, 0xE600000000000000);
  v78 = v77;
  *(_QWORD *)&aBlock = 0xD00000000000001CLL;
  *((_QWORD *)&aBlock + 1) = 0x800000023142FF20;
  LOBYTE(v174) = 1;
  *(_QWORD *)&v175 = v151;
  *((_QWORD *)&v175 + 1) = v169;
  v176 = v167;
  sub_2313B5264();
  v165 = v79;
  v80 = objc_allocWithZone(v79);
  sub_231412A90();
  sub_231412A90();
  v81 = (void *)sub_23141420C();
  v82 = objc_msgSend(v81, sel_view);

  v163 = v68;
  if (v82)
    objc_msgSend(v82, sel_setBackgroundColor_, v68);
  else
    v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v83 = v170;
  *(_QWORD *)(v69 + 32) = v171;
  *(_QWORD *)(v69 + 40) = v83;
  v84 = v166;
  *(_QWORD *)(v69 + 48) = v168;
  *(_QWORD *)(v69 + 56) = v84;
  *(_QWORD *)(v69 + 64) = v73;
  *(_QWORD *)(v69 + 72) = v75;
  *(_QWORD *)(v69 + 80) = v76;
  *(_QWORD *)(v69 + 88) = v78;
  *(_QWORD *)(v69 + 96) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v69 + 104) = 0;
  *(_QWORD *)(v69 + 112) = 0;
  *(_QWORD *)(v69 + 120) = v82;
  *(_QWORD *)&v159 = sub_231411374();
  v158 = v85;
  v86 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0x656C746954, 0xE500000000000000);
  v170 = v87;
  v171 = v86;
  v88 = sub_231411374();
  v168 = v89;
  v169 = v88;
  v90 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0x6C6961746544, 0xE600000000000000);
  v166 = v91;
  v167 = v90;
  sub_2312D6DD8(0, &qword_255ED0368, (uint64_t (*)(uint64_t))type metadata accessor for ResultItem.BodyItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v92 = *(_QWORD *)(type metadata accessor for ResultItem.BodyItem() - 8);
  v93 = *(_QWORD *)(v92 + 72);
  v94 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  v172 = 4 * v93;
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_23141ABD0;
  v164 = (void (*)(char *, uint64_t, uint64_t))v95;
  v96 = (uint64_t *)(v95 + v94);
  v97 = sub_231411374();
  v99 = v98;
  v100 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000012, 0x80000002314300B0);
  *v96 = v97;
  v96[1] = v99;
  v96[2] = v100;
  v96[3] = v101;
  swift_storeEnumTagMultiPayload();
  v102 = (uint64_t *)((char *)v96 + v93);
  v103 = sub_231411374();
  v105 = v104;
  v106 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000012, 0x8000000231430100);
  *v102 = v103;
  v102[1] = v105;
  v102[2] = v106;
  v102[3] = v107;
  swift_storeEnumTagMultiPayload();
  v108 = (uint64_t *)((char *)v96 + 2 * v93);
  v109 = sub_231411374();
  v111 = v110;
  v112 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0x63746157656B614DLL, 0xED000067756E5368);
  *v108 = v109;
  v108[1] = v111;
  v108[2] = v112;
  v108[3] = v113;
  swift_storeEnumTagMultiPayload();
  v114 = (uint64_t *)((char *)v96 + 3 * v93);
  v115 = sub_231411374();
  v117 = v116;
  v118 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0x6E6F697469646441, 0xEF73706574536C61);
  *v114 = v115;
  v114[1] = v117;
  v114[2] = v118;
  v114[3] = v119;
  swift_storeEnumTagMultiPayload();
  v120 = (uint64_t *)((char *)v96 + v172);
  v121 = sub_231411374();
  v123 = v122;
  v124 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000011, 0x8000000231430180);
  *v120 = v121;
  v120[1] = v123;
  v120[2] = v124;
  v120[3] = v125;
  v126 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenDefaultLinkURL);
  sub_2314146BC();

  v127 = v160;
  sub_2314114A0();
  swift_bridgeObjectRelease();
  v128 = sub_2314114AC();
  v129 = *(_QWORD *)(v128 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_2313B28AC();
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))((char *)v120 + *(int *)(v130 + 48), v127, v128);
    swift_storeEnumTagMultiPayload();
    v131 = sub_2313B506C(0x67756F6E45746F4ELL, 0xED00006174614468, 0xD000000000000016, 0x80000002314301A0);
    v133 = v132;
    *(_QWORD *)&aBlock = 0xD00000000000001ALL;
    *((_QWORD *)&aBlock + 1) = 0x800000023142FF40;
    LOBYTE(v174) = 1;
    v175 = v156;
    v176 = v162;
    v134 = objc_allocWithZone(v165);
    sub_231412A90();
    sub_231412A90();
    v135 = (void *)sub_23141420C();
    v136 = objc_msgSend(v135, sel_view);

    if (v136)
    {
      v137 = v163;
      objc_msgSend(v136, sel_setBackgroundColor_, v163);
      v138 = v150;
    }
    else
    {
      v136 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
      v138 = v150;
      v137 = v163;
    }
    v139 = v159;
    v140 = v158;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v69 + 128) = v139;
    *(_QWORD *)(v69 + 136) = v140;
    v141 = v170;
    *(_QWORD *)(v69 + 144) = v171;
    *(_QWORD *)(v69 + 152) = v141;
    v142 = v168;
    *(_QWORD *)(v69 + 160) = v169;
    *(_QWORD *)(v69 + 168) = v142;
    v143 = v166;
    *(_QWORD *)(v69 + 176) = v167;
    *(_QWORD *)(v69 + 184) = v143;
    *(_QWORD *)(v69 + 192) = v164;
    *(_QWORD *)(v69 + 200) = v131;
    *(_QWORD *)(v69 + 208) = v133;
    *(_QWORD *)(v69 + 216) = v136;
    v144 = objc_allocWithZone((Class)type metadata accessor for ListOfResultItemsView());
    v145 = sub_2313B1F38(v69);
    v146 = objc_msgSend(v138, sel_contentView);
    objc_msgSend(v146, sel_addSubview_, v145);

    v147 = objc_msgSend(v138, sel_contentView);
    objc_msgSend(v145, sel_hk_alignConstraintsWithView_, v147);

    *(_QWORD *)&aBlock = objc_msgSend(v138, sel_scrollView);
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v148 = sub_231411440();
    swift_release();
    swift_release();

    v149 = *(void **)&v138[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
    *(_QWORD *)&v138[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = v148;

  }
}

id sub_2313B49A8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  if (v1 == (id)2)
  {
    v3 = (void *)sub_231414AD0();
    v4 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    v5 = objc_msgSend(v4, sel_resolvedColorWithTraitCollection_, v3);

    return v5;
  }
  else
  {
    if (v1 == (id)1)
      v2 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    else
      v2 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    return v2;
  }
}

uint64_t sub_2313B4AB0(uint64_t a1)
{
  sub_2312DEF74(a1, *(_QWORD *)(a1 + 24));
  return sub_2314137EC();
}

void sub_2313B4AEC(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  double v11;
  char v12;
  CGRect v13;

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x2348DE3BC](v4);
  if (v5)
  {
    v6 = (char *)v5;
    sub_2312D6DD8(0, &qword_255ED0370, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDCD4D8]);
    sub_231411434();
    if ((v12 & 1) != 0
      || v11 == 0.0
      || (objc_msgSend(v3, sel_contentSize), v8 = v7, objc_msgSend(v3, sel_bounds), v8 - CGRectGetHeight(v13) > v11))
    {

    }
    else
    {
      v9 = *(void **)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_continueButton];
      if (v9)
        objc_msgSend(v9, sel_setEnabled_, 1);
      v10 = *(void **)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver];
      *(_QWORD *)&v6[OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_scrollViewObserver] = 0;

    }
  }
}

uint64_t type metadata accessor for AFibBurdenOnboardingResultsViewController()
{
  return objc_opt_self();
}

uint64_t sub_2313B4DCC()
{
  return 3;
}

uint64_t sub_2313B4DD4()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate);
}

uint64_t sub_2313B4E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313B4E3C()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  sub_2312D3C68(0, &qword_255ECCA40);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231414C20();
  v3 = (id)sub_2314149BC();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_23131DB9C, v2);

}

id sub_2313B4FE0(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_2313B5030()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313B5054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313B5064()
{
  return swift_release();
}

uint64_t sub_2313B506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t result;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231418090;
  *(_QWORD *)(v8 + 32) = 0xD000000000000014;
  *(_QWORD *)(v8 + 40) = 0x8000000231427740;
  *(_QWORD *)(v8 + 48) = 0xD000000000000010;
  *(_QWORD *)(v8 + 56) = 0x80000002314264F0;
  sub_231412A90();
  sub_231412A90();
  v9 = sub_2312CDA80((_QWORD *)1, 4, 1, (_QWORD *)v8);
  v11 = v9[2];
  v10 = v9[3];
  v12 = v11 + 1;
  sub_231412A90();
  if (v11 >= v10 >> 1)
    v9 = sub_2312CDA80((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v9[2] = v12;
  v13 = &v9[2 * v11];
  v13[4] = a1;
  v13[5] = a2;
  v14 = v9[3];
  sub_231412A90();
  if (v12 >= v14 >> 1)
    v9 = sub_2312CDA80((_QWORD *)(v14 > 1), v11 + 2, 1, v9);
  v9[2] = v11 + 2;
  v15 = &v9[2 * v12];
  v15[4] = a3;
  v15[5] = a4;
  v16 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v17 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v17)
  {
    v18 = sub_2314146BC();

    swift_arrayDestroy();
    return v18;
  }
  else
  {
    result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

void sub_2313B5264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0358)
  {
    sub_2313B52BC();
    v0 = sub_231414218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0358);
  }
}

unint64_t sub_2313B52BC()
{
  unint64_t result;

  result = qword_255ED0360;
  if (!qword_255ED0360)
  {
    result = MEMORY[0x2348DE248](&unk_231417DA0, &type metadata for LocalizedImageView);
    atomic_store(result, (unint64_t *)&qword_255ED0360);
  }
  return result;
}

char *sub_2313B5300()
{
  return sel_contentOffset;
}

id sub_2313B530C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_contentOffset);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_2313B533C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentOffset_, *a1, a1[1]);
}

void sub_2313B5350(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_2313B4AEC(a1, a2, v2);
}

void sub_2313B5358(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2313B5394()
{
  sub_231414728();
  return swift_bridgeObjectRelease();
}

char *sub_2313B5464(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  _UNKNOWN **v71;
  __int128 v72;
  uint64_t v73;
  _UNKNOWN **v74;
  objc_super v75;

  v68 = a4;
  v66 = a2;
  v12 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v12);
  v67 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_coordinator] = 0;
  v6[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_navigateToDetailRoomUponOnboardingCompletion] = a5;
  v14 = (objc_class *)type metadata accessor for AFibBurdenOnboardingController();
  v75.receiver = v6;
  v75.super_class = v14;
  v65 = objc_msgSendSuper2(&v75, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v65, sel_setModalPresentationStyle_, 2);
  v15 = *MEMORY[0x24BDD2DC8];
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], a1);
  v17 = *MEMORY[0x24BDD2E00];
  v18 = objc_allocWithZone(MEMORY[0x24BDD3BE0]);
  v61 = a1;
  v19 = objc_msgSend(v18, sel_initWithFeatureIdentifier_healthStore_, v17, a1);
  v20 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
  v21 = v16;
  v62 = v21;
  v22 = objc_msgSend(v20, sel_initWithFeatureIdentifier_healthStore_, v15, a1);
  v23 = a3;
  v63 = a3;
  sub_2312DF850(a3, (uint64_t)&v72);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v22;
  v25 = v19;
  v64 = v25;
  v26 = v22;
  v27 = (id)HKPreferredRegulatoryDomainProvider();
  sub_2312DF850((uint64_t)&v72, (uint64_t)&v69);
  v28 = type metadata accessor for AFibBurdenOnboardingFlowManager();
  v29 = (_QWORD *)swift_allocObject();
  v30 = sub_2313BAF50(v21, (uint64_t)sub_2313BAF48, v24, v25, (uint64_t)v27, (uint64_t)&v69, 1, v29);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v72);
  sub_2312DF850(a2, (uint64_t)&v72);
  sub_2312DF850(v23, (uint64_t)&v69);
  type metadata accessor for AFibBurdenOnboardingViewControllerFactory();
  v31 = swift_allocObject();
  sub_2312DFB68(&v72, v31 + 16);
  sub_2312DFB68(&v69, v31 + 64);
  *(_BYTE *)(v31 + 56) = a6;
  v32 = sub_23141186C();
  swift_retain();
  v33 = sub_231411860();
  v73 = v28;
  v74 = &off_25002AC80;
  *(_QWORD *)&v72 = v30;
  v70 = v32;
  v71 = &off_250020BF0;
  *(_QWORD *)&v69 = v33;
  v34 = type metadata accessor for AFibBurdenOnboardingModel();
  v35 = (_QWORD *)swift_allocObject();
  v36 = sub_2312DEF74((uint64_t)&v72, v28);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (uint64_t *)((char *)&v60 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v39 + 16))(v38);
  v40 = sub_2312DEF74((uint64_t)&v69, v70);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (uint64_t *)((char *)&v60 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v43 + 16))(v42);
  v44 = *v38;
  v45 = *v42;
  v35[5] = v28;
  v35[6] = &off_25002AC80;
  v35[2] = v44;
  v35[10] = v32;
  v35[11] = &off_250020BF0;
  v35[7] = v45;
  swift_retain();
  swift_retain();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v69);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v72);
  swift_release();
  swift_release();
  v46 = v67;
  sub_2312D6C20(v68, v67, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  v47 = (char *)v65;
  swift_retain();
  v48 = (id)HKHRAFibBurdenLogForCategory();
  v49 = objc_allocWithZone(MEMORY[0x24BDD3918]);
  v50 = v61;
  v51 = objc_msgSend(v49, sel_initWithLoggingCategory_healthDataSource_, v48, v61);

  v73 = v34;
  v74 = &off_250020D20;
  *(_QWORD *)&v72 = v35;
  type metadata accessor for AFibBurdenOnboardingCoordinator();
  v52 = swift_allocObject();
  v53 = sub_2312DEF74((uint64_t)&v72, v34);
  MEMORY[0x24BDAC7A8](v53);
  v55 = (uint64_t *)((char *)&v60 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v56 + 16))(v55);
  v57 = *v55;
  swift_retain();
  v58 = sub_2313BB520(v57, v46, (uint64_t)v47, v31, v50, v51, v52);

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v72);

  swift_release();
  swift_release_n();
  sub_2312CEBD4(v68, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v63);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v66);
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_coordinator] = v58;
  swift_release();
  return v47;
}

uint64_t sub_2313B5A28(char a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v32;
  id v33;
  void *v34;
  void *v35;
  _QWORD *v36;
  _QWORD *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t ObjectType;
  uint64_t aBlock;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t (*v51)(char);
  _QWORD *v52;

  v43 = a2;
  ObjectType = swift_getObjectType();
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v44 = sub_2314114AC();
  v11 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a3;
  v19 = a4;
  v45 = v18;
  v18[4] = a4;
  if ((a1 & 1) == 0
    || *((_BYTE *)v4
       + OBJC_IVAR____TtC5Heart30AFibBurdenOnboardingController_navigateToDetailRoomUponOnboardingCompletion) != 1)
  {
    sub_231361B58(a3);
    v28 = qword_25415B6D8;
    v29 = v4;
    if (v28 != -1)
      swift_once();
    v30 = sub_2312CE3B8(v14, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v30, v14);
    *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
    aBlock = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (a3)
    {
      v51 = (uint64_t (*)(char))a3;
      v52 = v19;
      aBlock = MEMORY[0x24BDAC760];
      v48 = 1107296256;
      v49 = sub_23130DCCC;
      v50 = &unk_250027D38;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      v27 = 0;
    }
    objc_msgSend(v29, sel_dismissViewControllerAnimated_completion_, 1, v27, v39);
    goto LABEL_14;
  }
  sub_231361B58(a3);
  v20 = qword_25415B6D8;
  v39 = v4;
  if (v20 != -1)
    swift_once();
  v21 = sub_2312CE3B8(v14, (uint64_t)qword_254162EE8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v40 = v21;
  v41 = v22;
  ((void (*)(char *))v22)(v17);
  v23 = swift_allocObject();
  v24 = ObjectType;
  *(_QWORD *)(v23 + 16) = ObjectType;
  aBlock = 0;
  sub_231413594();
  swift_release();
  v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v17, v14);
  sub_2312F05B8(v43, (uint64_t)v10);
  v26 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v44) == 1)
  {
    sub_2313BB9B8((uint64_t)v10, (uint64_t)&qword_25415C0F0, (uint64_t)MEMORY[0x24BDCDAC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);
    v41(v17, v40, v14);
    *(_QWORD *)(swift_allocObject() + 16) = v24;
    aBlock = 0;
    sub_2314135B8();
    swift_release();
    v25(v17, v14);
    if (a3)
    {
      v51 = (uint64_t (*)(char))a3;
      v52 = v19;
      aBlock = MEMORY[0x24BDAC760];
      v48 = 1107296256;
      v49 = sub_23130DCCC;
      v50 = &unk_250027DB0;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      v27 = 0;
    }
    objc_msgSend(v39, sel_dismissViewControllerAnimated_completion_, 1, v27, v39);
LABEL_14:
    _Block_release(v27);
    return swift_release();
  }
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v10, v26);
  v33 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v34 = (void *)sub_231411488();
  sub_2313374B0(MEMORY[0x24BEE4AF8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_2312CCC24((unint64_t *)&qword_255ECAE48, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_231417AD4);
  v35 = (void *)sub_23141462C();
  swift_bridgeObjectRelease();
  v36 = (_QWORD *)swift_allocObject();
  v37 = v45;
  v36[2] = sub_2313BC364;
  v36[3] = v37;
  v36[4] = v24;
  v51 = sub_2313BC460;
  v52 = v36;
  aBlock = MEMORY[0x24BDAC760];
  v48 = 1107296256;
  v49 = sub_231375AB8;
  v50 = &unk_250027E00;
  v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_openURL_options_completionHandler_, v34, v35, v38);
  _Block_release(v38);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v32, v26);
}

void sub_2313B6004(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  _QWORD v5[6];

  if (a2)
  {
    v5[4] = a2;
    v5[5] = a3;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_23130DCCC;
    v5[3] = &unk_250027EA0;
    v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
  _Block_release(v4);
}

uint64_t sub_2313B60B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v33 = a4;
  v34 = a2;
  v35 = a3;
  v5 = sub_231414500();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231414524();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23141453C();
  v11 = *(_QWORD *)(v36 - 8);
  v12 = MEMORY[0x24BDAC7A8](v36);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v32 - v15;
  sub_2312D4A68();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v22 = sub_2312CE3B8(v18, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
    *(_QWORD *)(swift_allocObject() + 16) = v33;
    aBlock[0] = 0;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v23 = (void *)sub_231414A94();
  sub_231414530();
  MEMORY[0x2348DCF28](v14, 0.1);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25 = v14;
  v26 = v36;
  v24(v25, v36);
  v27 = swift_allocObject();
  v28 = v35;
  *(_QWORD *)(v27 + 16) = v34;
  *(_QWORD *)(v27 + 24) = v28;
  aBlock[4] = sub_23139CCC4;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250027E78;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  sub_231414D1C();
  MEMORY[0x2348DD450](v16, v10, v7, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  return ((uint64_t (*)(char *, uint64_t))v24)(v16, v26);
}

uint64_t sub_2313B6438()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

id sub_2313B6588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingController()
{
  return objc_opt_self();
}

void sub_2313B65E8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  _QWORD v8[6];

  if (a3)
  {
    v8[4] = a3;
    v8[5] = a4;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_23130DCCC;
    v8[3] = &unk_250027608;
    v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, a2 & 1, v7);
  _Block_release(v7);
}

void sub_2313B66A8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v7;
  char *v8;
  uint64_t v9;

  v1 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
  v8 = (char *)sub_2313A191C(1, 0, 0);
  *(_QWORD *)&v8[qword_255ECFC58 + 8] = &off_250027588;
  swift_unknownObjectWeakAssign();
  v2 = v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x2348DE3BC](v2))
  {
    v3 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_231417F90;
    *(_QWORD *)(v5 + 32) = v8;
    v9 = v5;
    sub_2314147B8();
    v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 24);
    v7 = v8;
    v6(v9, 0, ObjectType, v3);
    swift_bridgeObjectRelease();

    sub_2314130CC();
  }
  else
  {

  }
}

uint64_t sub_2313B67FC()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  sub_2312CEBD4(v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  swift_release();

  swift_release();
  sub_2312D2854(v0 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController);
  return swift_deallocClassInstance();
}

uint64_t sub_2313B688C()
{
  return type metadata accessor for AFibBurdenOnboardingCoordinator();
}

uint64_t type metadata accessor for AFibBurdenOnboardingCoordinator()
{
  uint64_t result;

  result = qword_255ED0408;
  if (!qword_255ED0408)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313B68D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2313B6978()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2313B6A44(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  char v4;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  sub_2313B5358(v4);
  sub_231414728();
  return 0;
}

uint64_t sub_2313B6B4C(void *a1, uint64_t a2)
{
  id *v2;
  id *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  int v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;

  v3 = v2;
  v49 = *v2;
  sub_2312D4A68();
  v7 = v6;
  v50 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v43 - v11;
  sub_2313BBA78();
  v13 = v12;
  v44 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313BBCF8(0, &qword_255ED0500, (unint64_t *)&qword_25415BAB0, MEMORY[0x24BEE1328], &qword_25415BAA8);
  v47 = *(_QWORD *)(v16 - 8);
  v48 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v46 = (char *)&v43 - v17;
  ObjectType = swift_getObjectType();
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *(_BYTE *)(result + 24) = v19;
  *(_QWORD *)(result + 32) = a1;
  *(_QWORD *)(result + 40) = a2;
  v21 = result;
  v22 = 0;
  do
  {
    if (v22 == 6)
    {
      __break(1u);
      return result;
    }
    v23 = *((unsigned __int8 *)&unk_25001EE38 + v22++ + 33);
  }
  while (v23 != 6);
  v24 = __OFSUB__(v22, 1);
  v25 = v22 - 1;
  if (v24)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v25 < 0)
  {
LABEL_11:
    v30 = a1;
    v31 = swift_retain();
    sub_2313B7AC0(v31, v19, v30, a2);
    return swift_release();
  }
  if (v25 >= 7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*((unsigned __int8 *)&unk_25001EE38 + v25 + 32) != v19)
    goto LABEL_11;
  if (*(id *)((char *)v2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber))
  {
    v26 = qword_25415B6D8;
    v27 = a1;
    swift_retain();
    if (v26 == -1)
    {
LABEL_10:
      v28 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
      v29 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v9, v28, v7);
      *(_QWORD *)(swift_allocObject() + 16) = v49;
      v52 = 0;
      sub_231413594();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v7);
    }
LABEL_15:
    swift_once();
    goto LABEL_10;
  }
  v32 = (uint64_t)v2[5];
  v50 = OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber;
  v33 = sub_2312CEA5C(v2 + 2, v32);
  sub_2312CEA5C((_QWORD *)(*v33 + 16), *(_QWORD *)(*v33 + 40));
  v49 = a1;
  swift_retain();
  v52 = sub_2313F85A4();
  LOBYTE(v51) = 0;
  sub_2312E7B9C();
  sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
  sub_231413EA0();
  swift_release();
  sub_2312CCC24(&qword_255ED0508, (uint64_t (*)(uint64_t))sub_2313BBA78, MEMORY[0x24BDB95A8]);
  v34 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
  v52 = v34;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v51 = (id)sub_231414A94();
  v35 = sub_231414A7C();
  v36 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v45, 1, 1, v35);
  sub_2313B01F8(0, (unint64_t *)&qword_25415BAB0);
  sub_2313B0018(&qword_25415BAA8, (unint64_t *)&qword_25415BAB0);
  sub_231308748();
  v37 = v46;
  sub_231413F54();
  sub_2313BB9B8(v36, (uint64_t)&unk_25415DEE0, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);

  swift_release();
  v38 = swift_allocObject();
  v39 = v49;
  *(_QWORD *)(v38 + 16) = v3;
  *(_QWORD *)(v38 + 24) = v39;
  *(_QWORD *)(v38 + 32) = a2;
  *(_BYTE *)(v38 + 40) = v19;
  *(_QWORD *)(v38 + 48) = sub_2313BBB1C;
  *(_QWORD *)(v38 + 56) = v21;
  sub_2313BBB8C();
  v40 = v39;
  swift_retain();
  swift_retain();
  v41 = v48;
  v42 = sub_231413F90();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v41);
  *(id *)((char *)v3 + v50) = (id)v42;
  return swift_release();
}

uint64_t sub_2313B70F4(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t aBlock[6];

  v5 = *v2;
  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v11 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v5;
  aBlock[0] = 0;
  v13 = a1;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  ObjectType = swift_getObjectType();
  if (!(*(unsigned __int8 (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2))
    return sub_2313B7664(0, 0, 0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  v15 = sub_231411374();
  v26 = v16;
  v27 = v15;
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231418140;
  sub_231411374();
  v18 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v18, 1, 0);

  *(_QWORD *)(inited + 32) = v20;
  sub_231411374();
  v21 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v22 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  aBlock[4] = (unint64_t)sub_2313BB950;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_231386C84;
  aBlock[3] = (unint64_t)&unk_2500276A8;
  v23 = _Block_copy(aBlock);
  swift_release();
  v24 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v22, 0, v23);
  _Block_release(v23);
  swift_release();

  *(_QWORD *)(inited + 40) = v24;
  aBlock[0] = inited;
  sub_2314147B8();
  sub_2313BB13C(v27, v26, 0, 0, aBlock[0], 0, 0, v13, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313B74FC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  char v4;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  sub_2313B5358(v4);
  sub_231414728();
  return 0;
}

uint64_t sub_2313B7604()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2313B7664(0, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_2313B7664(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = v3;
  v27 = a2;
  v28 = a3;
  v26 = *v4;
  v6 = sub_231414500();
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231414524();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v17 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a1 & 1;
  *(_QWORD *)(v18 + 24) = v26;
  aBlock[0] = 0;
  sub_2314135A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v19 = (void *)sub_231414A94();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a1 & 1;
  v22 = v27;
  v21 = v28;
  *(_QWORD *)(v20 + 24) = v4;
  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v21;
  aBlock[4] = sub_2313BB9A8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250027720;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_231361B58(v22);
  swift_release();
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v11, v8, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v30);
}

uint64_t sub_2313B7980(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  _QWORD v15[2];

  v5 = *v2;
  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v11 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v5;
  v15[1] = 0;
  v13 = a1;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_2313B6B4C(v13, a2);
}

uint64_t sub_2313B7AC0(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  char v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v25 = a4;
  v23 = a3;
  v6 = a2;
  v24 = a2;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - v9;
  sub_2313BBCF8(0, &qword_255ED0518, &qword_255ED0520, (uint64_t)&type metadata for AFibBurdenOnboardingProgressionState, &qword_255ED0528);
  v12 = v11;
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  sub_2312CEA5C((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  v27 = sub_2312FE0C4(v6, a3, a4);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v28 = (id)sub_231414A94();
  v16 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  sub_2313B01F8(0, &qword_255ED0520);
  sub_2313B0018(&qword_255ED0528, &qword_255ED0520);
  sub_231308748();
  sub_231413F54();
  sub_2313BB9B8((uint64_t)v10, (uint64_t)&unk_25415DEE0, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);

  swift_release();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_BYTE *)(v17 + 24) = v24;
  v18 = v23;
  v19 = v25;
  *(_QWORD *)(v17 + 32) = v23;
  *(_QWORD *)(v17 + 40) = v19;
  *(_QWORD *)(v17 + 48) = v15;
  sub_2313BBE24();
  swift_retain();
  v20 = v18;
  swift_retain();
  v21 = sub_231413F90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = v21;
  swift_release();
  return swift_release();
}

uint64_t sub_2313B7D98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char v9;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v9 = a3;
  v11 = *(_QWORD *)a1;
  v12 = *(unsigned __int8 *)(a1 + 8);
  if (v12 >> 6)
  {
    if (v12 >> 6 == 1)
    {
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a2;
      *(_BYTE *)(v13 + 24) = v9;
      swift_retain();
      sub_2313BBEE0(v11 & 1, a4, a5, (uint64_t)sub_2313BBEB0, v13);
      swift_release();
    }
    else
    {
      sub_2313B7EA0(a3, 0, 0);
    }
  }
  else
  {
    sub_2313B82EC(*(_QWORD *)a1, v12, a4, a5, a3);
  }
  swift_beginAccess();
  *(_QWORD *)(a6 + 16) = 0;
  return swift_release();
}

uint64_t sub_2313B7EA0(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _QWORD aBlock[7];

  v4 = v3;
  v8 = *v3;
  v9 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&aBlock[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v18 = 0;
    while (v18 != 6)
    {
      v19 = *((unsigned __int8 *)&unk_25001EE38 + v18++ + 33);
      if (v19 == a1)
        goto LABEL_6;
    }
    __break(1u);
  }
  else
  {
    v18 = 0;
LABEL_6:
    v20 = __OFADD__(v18, 1);
    v21 = v18 + 1;
    if (v20)
    {
      __break(1u);
      goto LABEL_15;
    }
    if (v21 < 7)
    {
      if ((v21 & 0x8000000000000000) == 0)
      {
        LODWORD(a3) = *((unsigned __int8 *)&unk_25001EE38 + v21 + 32);
        if (qword_25415B6D8 == -1)
        {
LABEL_10:
          v22 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
          v23 = swift_allocObject();
          *(_BYTE *)(v23 + 16) = a1;
          *(_BYTE *)(v23 + 17) = a3;
          *(_QWORD *)(v23 + 24) = v8;
          aBlock[0] = 0;
          sub_2314135A0();
          swift_release();
          (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
          return sub_2313B95F0(a3, a1);
        }
LABEL_16:
        swift_once();
        goto LABEL_10;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (qword_25415B6D8 != -1)
      swift_once();
    v24 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v24, v13);
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = a1;
    *(_QWORD *)(v25 + 24) = v8;
    aBlock[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    sub_2312D6C20((uint64_t)v4 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
    v26 = sub_2312CEA5C(v4 + 2, v4[5]);
    v27 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(*v26 + 16), *(_QWORD *)(*v26 + 40)) + 104);
    v28 = v27 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v27 + 16);
    v29 = (os_unfair_lock_s *)(v27 + ((*(unsigned int *)(*(_QWORD *)v27 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v29);
    sub_2313F72E8(v28, aBlock);
    os_unfair_lock_unlock(v29);
    v30 = aBlock[0];
    swift_release();
    type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
    v31 = swift_allocObject();
    sub_2313BC110((uint64_t)v11, v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext);
    *(_BYTE *)(v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_onboardingStep) = a1;
    *(_QWORD *)(v31 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_countryCode) = v30;
    v32 = *(void **)((char *)v4 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v8;
    aBlock[4] = sub_2313BC164;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_231330294;
    aBlock[3] = &unk_250027A90;
    v34 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_submitEvent_completion_, v31, v34);
    _Block_release(v34);
    swift_release();
    sub_2313B7664(1, a2, a3);
    return swift_release();
  }
  return result;
}

void sub_2313B82EC(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  void *v41;
  id v42;
  unint64_t v43;
  id v44;
  _QWORD v45[2];
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  _QWORD aBlock[7];
  unint64_t v58;

  v6 = v5;
  v53 = a3;
  v54 = a5;
  v52 = a4;
  v56 = *v5;
  sub_2312D4A68();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (qword_255ECAAD8 == -1)
      goto LABEL_6;
LABEL_22:
    swift_once();
    goto LABEL_6;
  }
  if (a2 != 1)
    __asm { BR              X9 }
  if (qword_255ECAAD8 != -1)
    goto LABEL_22;
LABEL_6:
  v50 = sub_231411374();
  v51 = v14;
  LODWORD(v46) = 0;
  v55 = 0;
  v48 = 0;
  v49 = 0;
  v45[1] = a1;
  if (qword_25415B6D8 != -1)
    swift_once();
  v15 = sub_2312CE3B8(v10, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = v56;
  aBlock[0] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_255ECAAD8 != -1)
    swift_once();
  v17 = a2;
  sub_231411374();
  v18 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v18, 1, 0);

  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231417F90;
  *(_QWORD *)(v20 + 32) = v19;
  aBlock[0] = v20;
  sub_2314147B8();
  v58 = aBlock[0];
  v21 = v55;
  v47 = v19;
  if (v55)
  {
    v22 = v19;
    v23 = v21;
    v24 = v22;
    v25 = v23;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();

  }
  else
  {
    v25 = v19;
  }
  v26 = sub_2312CEA5C(v6 + 2, v6[5]);
  v27 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(*v26 + 16), *(_QWORD *)(*v26 + 40)) + 104);
  v28 = (_QWORD *)MEMORY[0x24BEE27A8];
  v29 = v27 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v27 + 16);
  v30 = (os_unfair_lock_s *)(v27 + ((*(unsigned int *)(*(_QWORD *)v27 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v30);
  sub_2313F72E8(v29, aBlock);
  os_unfair_lock_unlock(v30);
  v31 = aBlock[0];
  swift_release();
  type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = a1;
  *(_BYTE *)(v32 + 24) = v17;
  *(_BYTE *)(v32 + 25) = v54;
  *(_QWORD *)(v32 + 32) = v31;
  v33 = *(void **)((char *)v6 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v56;
  aBlock[4] = sub_2313BBC24;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_231330294;
  aBlock[3] = &unk_250027888;
  v35 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_submitEvent_completion_, v32, v35);
  _Block_release(v35);
  swift_release();
  if ((v46 & 1) == 0)
  {
    v46 = (id)*MEMORY[0x24BDD2DC8];
    v36 = (id)HKHRAFibBurdenAnalyticsPropertyValueForVersion();
    v45[0] = sub_2314146BC();

    v37 = sub_2312CEA5C(v6 + 2, v6[5]);
    v38 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(*v37 + 16), *(_QWORD *)(*v37 + 40)) + 104);
    v39 = v38 + *(_QWORD *)(*v28 + *(_QWORD *)v38 + 16);
    v40 = (os_unfair_lock_s *)(v38 + ((*(unsigned int *)(*(_QWORD *)v38 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_2313F72E8(v39, aBlock);
    os_unfair_lock_unlock(v40);
    v41 = (void *)aBlock[0];
    swift_release();
    if (v41)
    {
      v42 = objc_msgSend(v41, sel_ISOCode);
      sub_2314130CC();
      sub_2314146BC();

    }
    __asm { BR              X10 }
  }
  v43 = v58;
  v44 = v25;
  sub_2313BB13C(v50, v51, v48, v49, v43, (uint64_t)v25, 1, v53, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_2313B8FD4()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313B909C(unsigned __int8 *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  int v10;
  uint64_t v11;

  v10 = *a1;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber) = 0;
  v11 = swift_release();
  if (v10 == 1)
    a6(v11);
  else
    sub_2313B82EC(4, 2, a3, a4, a5);
}

void sub_2313B9128(char a1)
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  __asm { BR              X10 }
}

uint64_t sub_2313B920C()
{
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v1;
}

void sub_2313B930C(char a1)
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  __asm { BR              X10 }
}

uint64_t sub_2313B9404()
{
  unsigned __int8 v0;
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  v1 = sub_231414728();
  return ((uint64_t (*)(uint64_t))((char *)sub_2313B94FC + 4 * byte_2314208C5[v0]))(v1);
}

uint64_t sub_2313B94FC()
{
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v1;
}

uint64_t sub_2313B95F0(int a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;

  v3 = v2;
  v32 = a1;
  v5 = *v2;
  v31 = sub_231414500();
  v35 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231414524();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20((uint64_t)v2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t)v13, v14);
  v15 = sub_2312CEA5C(v2 + 2, v2[5]);
  v16 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(*v15 + 16), *(_QWORD *)(*v15 + 40)) + 104);
  v17 = v16 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v16 + 16);
  v18 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(_QWORD *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v18);
  sub_2313F72E8(v17, &aBlock);
  os_unfair_lock_unlock(v18);
  v19 = aBlock;
  swift_release();
  type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
  v20 = swift_allocObject();
  sub_2313BC110((uint64_t)v13, v20 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext);
  *(_BYTE *)(v20 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_onboardingStep) = a2;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_countryCode) = v19;
  v21 = *(void **)((char *)v3 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v5;
  v40 = sub_2313BC1BC;
  v41 = v22;
  v23 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v37 = 1107296256;
  v38 = sub_231330294;
  v39 = &unk_250027B08;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_submitEvent_completion_, v20, v24);
  _Block_release(v24);
  swift_release();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v25 = (void *)sub_231414A94();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v3;
  *(_BYTE *)(v26 + 24) = v32;
  *(_QWORD *)(v26 + 32) = v5;
  v40 = sub_2313BC208;
  v41 = v26;
  aBlock = v23;
  v37 = 1107296256;
  v38 = sub_23130DCCC;
  v39 = &unk_250027B58;
  v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  sub_231414518();
  aBlock = MEMORY[0x24BEE4AF8];
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  v29 = v31;
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v10, v7, v27);
  _Block_release(v27);
  swift_release();

  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v34);
}

void sub_2313B99E8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  id v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];

  v24 = a3;
  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313CCC34(a2);
  v11 = v10;
  v13 = v12;
  ObjectType = swift_getObjectType();
  v15 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v13 + 24);
  v16 = swift_unknownObjectRetain();
  v15(v16, &off_250027588, ObjectType, v13);
  if (qword_25415B6D8 != -1)
    swift_once();
  v17 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v24;
  *(_QWORD *)&v25[0] = 0;
  sub_2314135A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = a1 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x2348DE3BC](v19))
  {
    v20 = *(_QWORD *)(v19 + 8);
    swift_getObjectType();
    memset(v25, 0, sizeof(v25));
    v21 = *(void (**)(void))(v20 + 32);
    v22 = v11;
    v21();
    sub_2314130CC();

    sub_2313BB9B8((uint64_t)v25, (uint64_t)&qword_25415E460, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312CF374);
  }
  else
  {

  }
}

void sub_2313B9BE4(char a1)
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  __asm { BR              X10 }
}

uint64_t sub_2313B9CCC()
{
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v1;
}

uint64_t sub_2313B9DB8()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313B9ED8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v18;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - v9;
  if ((a1 & 1) != 0)
  {
    v11 = (id)HKHRAFibBurdenDetailRoomBaseLink();
    sub_231411494();

    v12 = sub_2314114AC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    v13 = sub_2314114AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  v14 = a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x2348DE3BC](a2 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController))
  {
    v15 = *(_QWORD *)(v14 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 40))(a1 & 1, v10, a3, a4, ObjectType, v15);
    sub_2314130CC();
  }
  return sub_2313BB9B8((uint64_t)v10, (uint64_t)&qword_25415C0F0, (uint64_t)MEMORY[0x24BDCDAC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);
}

id sub_2313BA030(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t aBlock;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;

  if ((a3 & 1) != 0)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    swift_retain();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v16 = sub_2313BC304;
    v17 = v8;
    aBlock = MEMORY[0x24BDAC760];
    v13 = 1107296256;
    v7 = &unk_250027CC0;
  }
  else
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    swift_retain();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v16 = sub_2313BC2DC;
    v17 = v5;
    aBlock = MEMORY[0x24BDAC760];
    v13 = 1107296256;
    v7 = &unk_250027C70;
  }
  v14 = sub_231386C84;
  v15 = v7;
  v9 = _Block_copy(&aBlock);
  swift_release();
  v10 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v6, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  return v10;
}

id sub_2313BA27C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  if ((a3 & 1) != 0)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a2;
    swift_retain();
    v8 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_2313BC4B0;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_231386C84;
    aBlock[3] = &unk_250027C20;
    v9 = _Block_copy(aBlock);
    swift_release();
    v4 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v8, 1, v9, 0xE000000000000000);
    _Block_release(v9);

  }
  else
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v3 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v3, 1, 0, 0xE000000000000000);

  }
  return v4;
}

uint64_t sub_2313BA4A0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
  }
  else if (qword_255ECAAD8 != -1)
  {
    swift_once();
  }
  return sub_231411374();
}

id sub_2313BA580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a5;
  sub_231412A90();
  sub_231412A90();
  v9 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v13[4] = sub_2313BBCE0;
  v13[5] = v8;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_231386C84;
  v13[3] = &unk_250027978;
  v10 = _Block_copy(v13);
  swift_release();
  v11 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v9, 0, v10);
  _Block_release(v10);

  return v11;
}

uint64_t sub_2313BA698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v25[2];

  sub_2312D4A68();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - v13;
  v15 = sub_2314114AC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314114A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2313BB9B8((uint64_t)v14, (uint64_t)&qword_25415C0F0, (uint64_t)MEMORY[0x24BDCDAC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v19 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v19)
    {
      v20 = v19;
      v21 = (void *)sub_231411488();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v23 = sub_2312CE3B8(v8, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, v8);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a2;
  v24[3] = a3;
  v24[4] = a4;
  v25[1] = 0;
  sub_231412A90();
  sub_2314135AC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2313BA91C()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313BAA24()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313BAB38(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313BAC4C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[2];

  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = a2;
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v12, v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    v15[1] = 0;
    v14 = a2;
    sub_2314135AC();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_2313BAD80(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313BAE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_231411CF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE411F0], v0);
  sub_231411CEC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2313BAF24()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313BAF48()
{
  uint64_t v0;

  return sub_2313F7548(*(void **)(v0 + 16));
}

_QWORD *sub_2313BAF50(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, _QWORD *a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  void *v26;

  v26 = a4;
  v15 = type metadata accessor for AFibBurdenOnboardingFlowManager.State();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v18 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v18 = MEMORY[0x24BEE4B08];
  a8[12] = v18;
  v19 = sub_23141357C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  *(_QWORD *)&v17[*(int *)(v15 + 20)] = 0;
  v17[*(int *)(v15 + 24)] = 0;
  sub_2313BB648();
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + ((*(unsigned int *)(*(_QWORD *)v20 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2312D6C20((uint64_t)v17, v20 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v20 + 16), (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingFlowManager.State);
  sub_2312CEBD4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingFlowManager.State);
  a8[13] = v20;
  a8[2] = a1;
  a8[3] = a2;
  v21 = v26;
  a8[4] = a3;
  a8[5] = v21;
  a8[6] = a5;
  sub_2312DF850(a6, (uint64_t)(a8 + 7));
  if ((a7 & 1) != 0)
  {
    v22 = a1;
    swift_retain();
    v23 = v21;
    swift_unknownObjectRetain();
    sub_2313F7810();

    swift_release();
    sub_2314130CC();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a6);
  return a8;
}

uint64_t sub_2313BB13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  uint64_t i;
  id v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v35 = a6;
  v36 = a8;
  v13 = sub_231414500();
  v39 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231414524();
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    sub_231412A90();
    if (a2)
    {
      sub_231412A90();
      v19 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = 0;
    }
    v20 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v19, v20, a7);

  }
  else
  {
    if (a2)
    {
      sub_231412A90();
      v20 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = 0;
    }
    v21 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v20, a7);
  }

  if (!(a5 >> 62))
  {
    v22 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_231412A90();
    if (v22)
      goto LABEL_12;
LABEL_19:
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setPreferredAction_, v35);
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v27 = (void *)sub_231414A94();
    v28 = (_QWORD *)swift_allocObject();
    v29 = v36;
    v28[2] = v36;
    v28[3] = a9;
    v28[4] = v21;
    aBlock[4] = sub_2313BBA2C;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23130DCCC;
    aBlock[3] = &unk_250027770;
    v30 = _Block_copy(aBlock);
    v31 = v29;
    v32 = v21;
    swift_release();
    sub_231414518();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231350E5C();
    sub_231414D1C();
    MEMORY[0x2348DD48C](0, v18, v15, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v18, v38);
  }
  sub_231412A90();
  result = sub_231414F08();
  v22 = result;
  if (!result)
    goto LABEL_19;
LABEL_12:
  if (v22 >= 1)
  {
    for (i = 0; i != v22; ++i)
    {
      if ((a5 & 0xC000000000000001) != 0)
        v25 = (id)MEMORY[0x2348DD81C](i, a5);
      else
        v25 = *(id *)(a5 + 8 * i + 32);
      v26 = v25;
      objc_msgSend(v21, sel_addAction_, v25);

    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2313BB520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v17[5];

  v17[3] = type metadata accessor for AFibBurdenOnboardingModel();
  v17[4] = &off_250020D20;
  v17[0] = a1;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_completeOnboardingSubscriber) = 0;
  v13 = a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_2312DF850((uint64_t)v17, a7 + 16);
  sub_2312D6C20(a2, a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_presentationContext, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  *(_QWORD *)(v13 + 8) = &off_2500275A8;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_viewFactory) = a4;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_healthStore) = a5;
  *(_QWORD *)(a7 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_analyticsEventSubmissionManager) = a6;
  swift_retain();
  v14 = a5;
  v15 = a6;
  sub_2313B66A8();
  sub_2312CEBD4(a2, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  return a7;
}

void sub_2313BB648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED04F0)
  {
    type metadata accessor for AFibBurdenOnboardingFlowManager.State();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_231414E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED04F0);
  }
}

uint64_t sub_2313BB6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313BB6BC()
{
  return swift_release();
}

void sub_2313BB6C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  _QWORD v15[2];

  v1 = v0;
  v2 = *v0;
  sub_2312D4A68();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v8 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v15[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_2313DA83C();
  v9 = objc_allocWithZone((Class)sub_231411C20());
  v10 = (void *)sub_231411C14();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v10);
  v12 = (char *)v1 + OBJC_IVAR____TtC5Heart31AFibBurdenOnboardingCoordinator_navigationController;
  if (MEMORY[0x2348DE3BC](v12))
  {
    v13 = *((_QWORD *)v12 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(id, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v13 + 16))(v11, 1, 0, 0, ObjectType, v13);

    sub_2314130CC();
  }
  else
  {

  }
}

uint64_t sub_2313BB908()
{
  return swift_deallocObject();
}

uint64_t sub_2313BB918()
{
  return sub_2313B6978();
}

uint64_t sub_2313BB920()
{
  uint64_t v0;

  return sub_2313B74FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2313BB92C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313BB950()
{
  return sub_2313B7604();
}

uint64_t sub_2313BB958()
{
  return swift_deallocObject();
}

uint64_t sub_2313BB968()
{
  return sub_2313B9DB8();
}

uint64_t sub_2313BB974()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BB9A8()
{
  uint64_t v0;

  return sub_2313B9ED8(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2313BB9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2313BBA00()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2313BBA2C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(_QWORD *)(v0 + 32), 1, 0);
}

uint64_t sub_2313BBA48()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313BBA6C()
{
  uint64_t v0;

  return sub_2313B6A44(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_2313BBA78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED04F8)
  {
    sub_2312E7B9C();
    sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED04F8);
  }
}

uint64_t sub_2313BBAF0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2313BBB1C()
{
  uint64_t v0;

  return sub_2313B7AC0(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2313BBB2C()
{
  return swift_deallocObject();
}

uint64_t sub_2313BBB3C()
{
  return sub_2313B8FD4();
}

uint64_t sub_2313BBB44()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_2313BBB78(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_2313B909C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void (**)(uint64_t))(v1 + 48));
}

unint64_t sub_2313BBB8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED0510;
  if (!qword_255ED0510)
  {
    sub_2313BBCF8(255, &qword_255ED0500, (unint64_t *)&qword_25415BAB0, MEMORY[0x24BEE1328], &qword_25415BAA8);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255ED0510);
  }
  return result;
}

uint64_t sub_2313BBBF4()
{
  return swift_deallocObject();
}

uint64_t sub_2313BBC04()
{
  return sub_2313BAA24();
}

uint64_t sub_2313BBC14()
{
  return swift_deallocObject();
}

uint64_t sub_2313BBC24(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2313BAC4C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313BBC4C()
{
  return swift_deallocObject();
}

uint64_t sub_2313BBC5C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2313BAC4C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313BBC84()
{
  uint64_t v0;

  return sub_2313BAD80(*(void **)(v0 + 16));
}

uint64_t sub_2313BBC8C()
{
  uint64_t v0;

  return sub_2313BAB38(*(void **)(v0 + 16));
}

uint64_t sub_2313BBCBC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2313BBCE0(uint64_t a1)
{
  uint64_t *v1;

  return sub_2313BA698(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2313BBCEC()
{
  return sub_2313BA91C();
}

void sub_2313BBCF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_2313B01F8(255, a3);
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2313B0018(a5, a3);
    sub_231308748();
    v8 = sub_231413CFC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2313BBDB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BBDDC()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BBE10(uint64_t a1)
{
  uint64_t v1;

  return sub_2313B7D98(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

unint64_t sub_2313BBE24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED0530;
  if (!qword_255ED0530)
  {
    sub_2313BBCF8(255, &qword_255ED0518, &qword_255ED0520, (uint64_t)&type metadata for AFibBurdenOnboardingProgressionState, &qword_255ED0528);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255ED0530);
  }
  return result;
}

uint64_t sub_2313BBE8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BBEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2313B7EA0(*(_BYTE *)(v2 + 24), a1, a2);
}

uint64_t sub_2313BBEE0(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v23;

  v9 = a1 & 1;
  v10 = sub_2313BA030(a4, a5, a1 & 1);
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231417F90;
  *(_QWORD *)(v11 + 32) = v10;
  v23 = v11;
  sub_2314147B8();
  v12 = v10;
  v13 = sub_2313BA27C(a4, a5, v9);
  if (v13)
  {
    v14 = v13;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();

  }
  v15 = sub_2313BA4A0(v9);
  v17 = v16;
  if (v9)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    v18 = sub_231411374();
    v19 = v20;
  }
  else
  {
    v18 = 0;
    v19 = 0;
  }
  v21 = v12;
  sub_2313BB13C(v15, v17, v18, v19, v23, (uint64_t)v12, 1, a2, a3);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313BC0F4()
{
  return swift_deallocObject();
}

void sub_2313BC104()
{
  uint64_t v0;

  sub_2313B9128(*(_BYTE *)(v0 + 16));
}

uint64_t sub_2313BC110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313BC154()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC164(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2313BAC4C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313BC18C()
{
  return swift_deallocObject();
}

void sub_2313BC19C()
{
  uint64_t v0;

  sub_2313B930C(*(_BYTE *)(v0 + 16));
}

uint64_t sub_2313BC1AC()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC1BC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2313BAC4C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313BC1E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2313BC208()
{
  uint64_t v0;

  sub_2313B99E8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2313BC218()
{
  return swift_deallocObject();
}

void sub_2313BC228()
{
  uint64_t v0;

  sub_2313B9BE4(*(_BYTE *)(v0 + 16));
}

uint64_t sub_2313BC234()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313BC258()
{
  uint64_t v0;

  return sub_2313BAB38(*(void **)(v0 + 16));
}

uint64_t sub_2313BC288()
{
  uint64_t v0;

  return sub_2313BAB38(*(void **)(v0 + 16));
}

uint64_t sub_2313BC2B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BC2DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

uint64_t sub_2313BC304()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t (*)(), _QWORD))(v0 + 16))(sub_2313BAE98, 0);
}

uint64_t sub_2313BC330()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_2313BC364()
{
  uint64_t v0;

  sub_2313B6004(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2313BC370()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC380()
{
  return sub_2313B6438();
}

uint64_t sub_2313BC3B4()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC3C4()
{
  return sub_2313B6438();
}

uint64_t sub_2313BC3F8()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC408()
{
  return sub_2313B6438();
}

uint64_t sub_2313BC43C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313BC460(char a1)
{
  uint64_t *v1;

  return sub_2313B60B0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2313BC46C()
{
  return swift_deallocObject();
}

uint64_t sub_2313BC47C()
{
  return sub_2313B6438();
}

uint64_t type metadata accessor for HKHRCardioFitnessChartDataSource()
{
  uint64_t result;

  result = qword_255ED0570;
  if (!qword_255ED0570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313BC598()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231412DA8();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2313BC638(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = v2;
  v6 = sub_231412DA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = qword_255ED0548;
  *(_QWORD *)(v3 + qword_255ED0548) = 0;
  *(_QWORD *)(v3 + qword_255ED0560) = 0;
  *(_QWORD *)(v3 + qword_255ED0568) = 0;
  *(_QWORD *)(v3 + qword_255ED0538) = a1;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v11(v3 + qword_255ED0540, a2, v6);
  v11((uint64_t)v9, a2, v6);
  type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
  swift_allocObject();
  swift_retain();
  v12 = a1;
  *(_QWORD *)(v3 + v10) = sub_2313BD978((uint64_t)v9);
  swift_release();
  v13 = (void *)sub_2313BF028(v12);
  v14 = *(_QWORD *)(v3 + v10);
  swift_retain();
  sub_2313BC870(v12, a2, v14, v13);
  swift_release();
  *(_QWORD *)(v3 + qword_255ED0558) = sub_2314126A0();
  v15 = *(_QWORD *)(v3 + v10);
  if (v15)
    v16 = *(_BYTE *)(v15 + 32);
  else
    v16 = 2;
  v17 = (void *)sub_231412D90();
  type metadata accessor for CardioFitnessChartSection();
  swift_allocObject();
  v18 = v12;
  v19 = sub_2313E4740(v18, v16, v17);

  *(_QWORD *)(v3 + qword_255ED0550) = v19;
  swift_release();
  swift_retain();
  swift_retain();
  v20 = sub_231412AB4();
  swift_retain();
  sub_2313BCA74();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v20;
}

uint64_t sub_2313BC870(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v22;
  id v23;

  v22 = a1;
  v23 = a4;
  sub_2313BF6E8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_231412DA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v16 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v16 + 2) = sub_2313BF858;
  *((_QWORD *)v16 + 3) = v15;
  v17 = v22;
  *((_QWORD *)v16 + 4) = v22;
  *v9 = sub_2313BF8DC;
  v9[1] = v16;
  (*(void (**)(uint64_t (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE44110], v6);
  sub_2313BF8E8();
  swift_allocObject();
  v18 = v23;
  swift_retain();
  v19 = v17;
  sub_231412424();
  sub_2313BF960();
  swift_allocObject();
  v20 = sub_2314126B8();
  swift_release();
  return v20;
}

uint64_t sub_2313BCA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if (*(_QWORD *)(v0 + qword_255ED0548))
  {
    swift_retain();
    v2 = sub_2313BD4D4();
    swift_release();
  }
  else
  {
    v2 = 0;
  }
  v3 = qword_255ED0560;
  *(_QWORD *)(v1 + qword_255ED0560) = v2;
  swift_release();
  v4 = *(_QWORD *)(v1 + v3);
  if (v4)
  {
    swift_allocObject();
    swift_weakInit();
    sub_23134132C();
    sub_2312CCC24(&qword_25415C0B0, (uint64_t (*)(uint64_t))sub_23134132C, MEMORY[0x24BDB9AF8]);
    swift_retain();
    v4 = sub_231413F90();
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v1 + qword_255ED0568) = v4;
  return swift_release();
}

uint64_t sub_2313BCB94(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t result;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t (*v26)();
  uint64_t v27;

  v2 = sub_231414500();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231414524();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    aBlock = 0;
    v23 = 0xE000000000000000;
    v20 = result;
    v21 = v6;
    sub_231414728();
    swift_bridgeObjectRelease();
    v12 = sub_2313BF3E4(aBlock, v23, v10);
    swift_bridgeObjectRelease();
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v13 = (void *)sub_231414A94();
    v14 = swift_allocObject();
    v19 = v7;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v12;
    v26 = sub_2313BF5FC;
    v27 = v15;
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v24 = sub_23130DCCC;
    v25 = &unk_250027F28;
    v16 = _Block_copy(&aBlock);
    swift_release();
    sub_231414518();
    aBlock = MEMORY[0x24BEE4AF8];
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2313BF61C((unint64_t *)&qword_25415DE78, (uint64_t)&qword_25415DE70, (uint64_t)v17, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);
    sub_231414D1C();
    MEMORY[0x2348DD48C](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v21);
  }
  return result;
}

uint64_t sub_2313BCEB0()
{
  void *v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  void *v5;
  uint64_t result;
  id v7[10];

  v7[9] = *(id *)MEMORY[0x24BDAC8D0];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_2314128C8();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    v0 = (void *)sub_231412DC0();
    swift_release();
    v1 = (void *)sub_231413108();

    v7[0] = 0;
    v2 = objc_msgSend(v1, sel_performFetch_, v7);

    if (v2)
    {
      v3 = v7[0];
    }
    else
    {
      v4 = v7[0];
      v5 = (void *)sub_231411410();

      swift_willThrow();
    }
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_231412DD8();
    return swift_release();
  }
  return result;
}

id sub_2313BD06C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t Strong;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = *(unsigned __int8 *)(Strong + 32);
    swift_release();
    if (v4 == 2)
    {
      v5 = 0;
    }
    else
    {
      sub_231414728();
      swift_bridgeObjectRelease();
      v5 = 0xE000000000000000;
    }
  }
  else
  {
    v5 = 0;
    LOBYTE(v4) = 2;
  }
  v6 = sub_231412D90();
  v7 = sub_231414B78();
  a2[3] = (uint64_t)&type metadata for CardioFitnessChartItem;
  a2[4] = sub_2313BF668();
  v8 = swift_allocObject();
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v7;
  return a1;
}

uint64_t sub_2313BD1B4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t result;
  uint64_t v32;
  id v33;
  unint64_t v34;
  _BYTE v35[40];

  v8 = sub_231413780();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DF850(a1, (uint64_t)v35);
  sub_2312D1CE8();
  sub_231411BF0();
  if (swift_dynamicCast())
  {
    v12 = v33;
    v13 = objc_msgSend(v33, sel_userData);
    if (v13)
    {
      v14 = v13;
      v15 = sub_2314114DC();
      v32 = v9;
      v16 = a3;
      v17 = v8;
      v18 = v15;
      v19 = v12;
      v20 = v11;
      v22 = v21;

      v23 = (void *)sub_2314114C4();
      v24 = v18;
      v8 = v17;
      a3 = v16;
      v9 = v32;
      v25 = v22;
      v11 = v20;
      v12 = v19;
      sub_2312D6CA8(v24, v25);
    }
    else
    {
      v23 = 0;
    }
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A348]), sel_initWithData_, v23);

    if (v26)
    {
      sub_2312D6DD8(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t))sub_2312D1CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_231416A30;
      a3(v26, a5);

      v12 = v26;
    }
    else
    {
      sub_231413750();
      v28 = sub_231413768();
      v29 = sub_231414980();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_2312C8000, v28, v29, "Unable to decode sharable charting model", v30, 2u);
        MEMORY[0x2348DE308](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v27 = MEMORY[0x24BEE4AF8];
    }

    return v27;
  }
  else
  {
    sub_2312DF850(a1, (uint64_t)v35);
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_231414E18();
    sub_231414728();
    sub_231414ECC();
    sub_231414728();
    result = sub_231414EE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_2313BD4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v1 = v0;
  sub_2313BED10();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - v5;
  sub_231341164();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313BEF48(0);
  v13 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v37 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313BEE94();
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v40 = (id)sub_231413624();
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_231413EB8();
  swift_release();
  v19 = MEMORY[0x24BDB96C0];
  sub_2312CCC24(&qword_25415C090, (uint64_t (*)(uint64_t))sub_231341164, MEMORY[0x24BDB96C0]);
  v20 = (void *)sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v40 = v20;
  sub_23134132C();
  sub_2312CCC24(&qword_25415C0B0, (uint64_t (*)(uint64_t))sub_23134132C, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_231413EB8();
  swift_release();
  swift_release();
  v40 = *(id *)(v1 + 24);
  v21 = v40;
  v22 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  sub_2312CCC24(&qword_255ED06D8, (uint64_t (*)(uint64_t))sub_2313BEF48, v19);
  sub_231308748();
  v23 = v21;
  v24 = v36;
  sub_231413F54();
  sub_2312D6B98((uint64_t)v6, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v24);
  v25 = *(unsigned __int8 *)(v1 + 32);
  if (v25 == 2)
  {
    sub_2312CCC24(&qword_255ED06E8, (uint64_t (*)(uint64_t))sub_2313BEE94, MEMORY[0x24BDB9A08]);
    v26 = v39;
    v27 = sub_231413E7C();
  }
  else
  {
    v28 = v25 & 1;
    sub_2312CF374(0, &qword_255ED06F0, (uint64_t)&type metadata for CardioFitnessClassificationStatus, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_231416A30;
    *(_BYTE *)(v29 + 32) = v28;
    sub_2312CCC24(&qword_255ED06E8, (uint64_t (*)(uint64_t))sub_2313BEE94, MEMORY[0x24BDB9A08]);
    v30 = v33;
    v26 = v39;
    sub_231413F3C();
    swift_bridgeObjectRelease();
    sub_2312CCC24(&qword_255ED06F8, (uint64_t (*)(uint64_t))sub_2313BED10, MEMORY[0x24BDB9530]);
    v31 = v35;
    v27 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v31);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v26);
  return v27;
}

uint64_t sub_2313BD978(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  unsigned __int8 v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a1;
  v34 = *v1;
  v2 = sub_231413780();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231414A88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231414A64();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_231414524();
  MEMORY[0x24BDAC7A8](v10);
  v38 = sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  sub_231414518();
  v42 = MEMORY[0x24BEE4AF8];
  sub_2312CCC24(&qword_25415DED8, v9, MEMORY[0x24BEE5698]);
  sub_2312D6DD8(0, &qword_25415DE80, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2313BF61C(&qword_25415DE88, (uint64_t)&qword_25415DE80, (uint64_t)v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_2312D6DD8);
  sub_231414D1C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5750], v4);
  v11 = v39;
  v12 = v40;
  *(_QWORD *)(v11 + 24) = sub_231414AB8();
  *(_BYTE *)(v11 + 32) = 2;
  sub_231412D9C();
  v13 = sub_231412514();
  v15 = v14;
  if (v13 == sub_231412514() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v23 = v37;
      sub_231413750();
      v24 = sub_231413768();
      v25 = sub_23141498C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v41 = v27;
        *(_DWORD *)v26 = 136446210;
        v42 = v34;
        swift_getMetatypeMetadata();
        v28 = sub_2314146E0();
        v42 = sub_23133180C(v28, v29, &v41);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s] Non-primary profiles will not have feature availability / onboarding completion for Cardio Fitness feature, passing back nil onboarding status observer", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v27, -1, -1);
        MEMORY[0x2348DE308](v26, -1, -1);

        v30 = sub_231412DA8();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v12, v30);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
      }
      else
      {

        v31 = sub_231412DA8();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v12, v31);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
      }

      type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
      swift_deallocPartialClassInstance();
      return 0;
    }
  }
  v18 = (id)*MEMORY[0x24BDD2DD0];
  v19 = (void *)sub_231412D78();
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, v18, v19);

  *(_QWORD *)(v11 + 16) = v20;
  v21 = sub_2313BDE60();
  if (v21 == 2)
    v21 = sub_2313BE7B4();
  v22 = sub_231412DA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v12, v22);
  *(_BYTE *)(v11 + 32) = v21;
  return v11;
}

uint64_t sub_2313BDE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[4];

  v1 = v0;
  v2 = sub_231413780();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v47 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v47 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v47 - v10;
  v12 = (char *)sub_231412D78();
  sub_231411884();
  v13 = objc_msgSend(v12, sel_profileIdentifier);
  sub_231340D74(v13);

  sub_231412D60();
  sub_2312CEA5C(v55, v55[3]);
  v14 = (void *)sub_23141183C();
  v15 = (void *)sub_231411878();

  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v55);
  if (v15)
  {
    v51 = v12;
    v16 = objc_msgSend(v15, sel_data);
    if (v16)
    {
      v17 = v16;
      v18 = sub_2314114DC();
      v20 = v19;

      sub_2314111C4();
      swift_allocObject();
      sub_2314111B8();
      sub_2313BECCC();
      sub_2314111AC();
      swift_release();
      v37 = LOBYTE(v55[0]);
      sub_231413750();
      v38 = v0;
      swift_retain_n();
      v39 = sub_231413768();
      v40 = sub_23141498C();
      if (os_log_type_enabled(v39, v40))
      {
        v49 = v18;
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v54 = v38;
        v55[0] = v43;
        v48 = v20;
        *(_DWORD *)v42 = 136446210;
        v50 = (char *)(v42 + 4);
        type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
        swift_retain();
        v44 = sub_2314146E0();
        v54 = sub_23133180C(v44, v45, v55);
        sub_231414CBC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v39, v40, "[%{public}s] Using initial classification status from plugin data.", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v43, -1, -1);
        MEMORY[0x2348DE308](v42, -1, -1);
        sub_2312D6CA8(v49, v48);

      }
      else
      {
        swift_release_n();
        sub_2312D6CA8(v18, v20);

      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
    }
    else
    {
      sub_231413750();
      v30 = v0;
      swift_retain_n();
      v31 = sub_231413768();
      v32 = sub_231414974();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        v54 = v30;
        v55[0] = v34;
        *(_DWORD *)v33 = 136446210;
        type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
        swift_retain();
        v35 = sub_2314146E0();
        v54 = sub_23133180C(v35, v36, v55);
        sub_231414CBC();
        v37 = 2;
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v31, v32, "[%{public}s] Classification data plugin storage did not contain any data", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v34, -1, -1);
        MEMORY[0x2348DE308](v33, -1, -1);

      }
      else
      {

        v37 = 2;
        swift_release_n();

      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
    }
  }
  else
  {
    sub_231413750();
    swift_retain_n();
    v21 = v12;
    v22 = sub_231413768();
    v23 = sub_23141498C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v50 = (char *)swift_slowAlloc();
      v54 = v1;
      v55[0] = (uint64_t)v50;
      *(_DWORD *)v24 = 136446466;
      type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider();
      swift_retain();
      v26 = sub_2314146E0();
      v54 = sub_23133180C(v26, v27, v55);
      sub_231414CBC();
      v37 = 2;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2112;
      v28 = objc_msgSend(v21, sel_profileIdentifier);
      v54 = (uint64_t)v28;
      sub_231414CBC();
      *v25 = v28;

      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s] Unable to find classification data plugin storage for profile with identifier %@.", (uint8_t *)v24, 0x16u);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      v29 = v50;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v29, -1, -1);
      MEMORY[0x2348DE308](v24, -1, -1);

    }
    else
    {

      v37 = 2;
      swift_release_n();

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
  }
  return v37;
}

id sub_2313BE7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v8;

  v0 = sub_231413780();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23141357C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  sub_231413618();
  v5 = (void *)sub_231413588();
  v6 = objc_msgSend(v5, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_2313BEAE4()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_2313BEB10()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313BEB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255ED0540;
  v2 = sub_231412DA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2313BEBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_231412ACC();

  v1 = v0 + qword_255ED0540;
  v2 = sub_231412DA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2313BEC84()
{
  sub_2313BEBD8();
  return swift_deallocClassInstance();
}

uint64_t sub_2313BECA4()
{
  return type metadata accessor for HKHRCardioFitnessChartDataSource();
}

uint64_t type metadata accessor for HKHRCardioFitnessChartDataSource.HKHRCardioFitnessClassificationProvider()
{
  return objc_opt_self();
}

unint64_t sub_2313BECCC()
{
  unint64_t result;

  result = qword_255ED06A0;
  if (!qword_255ED06A0)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for CardioFitnessClassificationStatus, &type metadata for CardioFitnessClassificationStatus);
    atomic_store(result, (unint64_t *)&qword_255ED06A0);
  }
  return result;
}

void sub_2313BED10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED06A8)
  {
    sub_2313BEDD8();
    sub_2313BEE94();
    sub_2312CCC24(&qword_255ED06E0, (uint64_t (*)(uint64_t))sub_2313BEDD8, MEMORY[0x24BDB9970]);
    sub_2312CCC24(&qword_255ED06E8, (uint64_t (*)(uint64_t))sub_2313BEE94, MEMORY[0x24BDB9A08]);
    v0 = sub_231413C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED06A8);
  }
}

void sub_2313BEDD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED06B0)
  {
    sub_2312CF374(255, &qword_255ED06B8, (uint64_t)&type metadata for CardioFitnessClassificationStatus, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2313BF61C(&qword_255ED06C0, (uint64_t)&qword_255ED06B8, (uint64_t)&type metadata for CardioFitnessClassificationStatus, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_2312CF374);
    v0 = sub_231413CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED06B0);
  }
}

void sub_2313BEE94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED06C8)
  {
    sub_2313BEF48(255);
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ED06D8, (uint64_t (*)(uint64_t))sub_2313BEF48, MEMORY[0x24BDB96C0]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED06C8);
  }
}

void sub_2313BEF48(uint64_t a1)
{
  sub_2313BEF64(a1, &qword_255ED06D0, (uint64_t (*)(uint64_t))sub_23134132C, &qword_25415C0B0);
}

void sub_2313BEF64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_2312CCC24(a4, a3, MEMORY[0x24BDB9AF8]);
    v7 = sub_231413C60();
    if (!v8)
      atomic_store(v7, a2);
  }
}

char *sub_2313BEFEC@<X0>(char *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v3;

  v3 = *result;
  *(_BYTE *)(v2 + 32) = *result;
  *a2 = v3;
  return result;
}

uint64_t sub_2313BEFFC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313BF020(char *a1)
{
  return sub_2313BCB94(a1);
}

uint64_t sub_2313BF028(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  Class v27;
  id v28;
  uint64_t v29;
  __int128 v31;
  __int128 v32;
  _QWORD v33[4];

  sub_2312D6DD8(0, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - v3;
  sub_231411BF0();
  v5 = MEMORY[0x24BEE3598];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = sub_231411890();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  v31 = xmmword_231416A30;
  *(_OWORD *)(v9 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104))(v9 + v8, *MEMORY[0x24BE47440], v6);
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))v5);
  v10 = swift_allocObject();
  v32 = xmmword_231417F90;
  *(_OWORD *)(v10 + 16) = xmmword_231417F90;
  *(_QWORD *)(v10 + 32) = a1;
  v33[0] = v10;
  sub_2314147B8();
  v11 = v33[0];
  v12 = sub_231411248();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_2312CF374(0, (unint64_t *)&qword_255ECE908, MEMORY[0x24BE475B0], (uint64_t (*)(_QWORD, uint64_t))v5);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v31;
  v14 = a1;
  v15 = (void *)sub_231412D78();
  v16 = sub_231414914();

  *(_QWORD *)(v13 + 32) = v16;
  v17 = (void *)MEMORY[0x2348DA5A0](v9, v11, v4, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2312D6B98((uint64_t)v4, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v18 = v17;
  v19 = (void *)sub_231411BD8();

  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v32;
  v21 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v22 = (void *)sub_23141468C();
  v23 = objc_msgSend(v21, sel_initWithKey_ascending_, v22, 0);

  *(_QWORD *)(v20 + 32) = v23;
  v33[0] = v20;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECE920);
  v24 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setSortDescriptors_, v24);

  v25 = v19;
  sub_231412D60();
  sub_2312CEA5C(v33, v33[3]);
  v26 = (void *)sub_23141183C();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB688]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v25, v26, 0, 0);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v33);
  sub_2313BF76C();
  v28 = objc_allocWithZone(v27);
  v29 = sub_231413120();

  return v29;
}

id sub_2313BF3E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v17;

  v6 = sub_231411644();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel__quantityTypeWithCode_, 124);
  if (result)
  {
    v11 = result;
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2314127F0();
    v13 = swift_allocObject();
    v17 = xmmword_231416A30;
    *(_OWORD *)(v13 + 16) = xmmword_231416A30;
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t))sub_2312D1CE8, v12);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v17;
    *(_QWORD *)(v14 + 56) = &type metadata for CardioFitnessChartItem;
    *(_QWORD *)(v14 + 64) = sub_2313BF668();
    v15 = swift_allocObject();
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v15 + 16) = v11;
    *(_BYTE *)(v15 + 24) = a3 & 1;
    *(_QWORD *)(v15 + 32) = a1;
    *(_QWORD *)(v15 + 40) = a2;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 56) = 0;
    sub_231412A90();
    v16 = v11;
    sub_231411638();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2314127E4();

    return (id)v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313BF5D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2313BF5FC()
{
  return sub_2313BCEB0();
}

uint64_t sub_2313BF604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313BF614()
{
  return swift_release();
}

uint64_t sub_2313BF61C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a4(255, a2, a3, MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313BF668()
{
  unint64_t result;

  result = qword_255ED0700;
  if (!qword_255ED0700)
  {
    result = MEMORY[0x2348DE248](&unk_2314235E0, &type metadata for CardioFitnessChartItem);
    atomic_store(result, (unint64_t *)&qword_255ED0700);
  }
  return result;
}

uint64_t sub_2313BF6AC()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2313BF6E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0708)
  {
    sub_2313BF76C();
    sub_2312CCC24(&qword_255ED0720, (uint64_t (*)(uint64_t))sub_2313BF76C, MEMORY[0x24BE449E0]);
    v0 = sub_231412DCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0708);
  }
}

void sub_2313BF76C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0710)
  {
    sub_231411BF0();
    sub_2312CCC24(&qword_255ED0718, (uint64_t (*)(uint64_t))MEMORY[0x24BE48418], MEMORY[0x24BE41F18]);
    v0 = sub_231413114();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0710);
  }
}

uint64_t sub_2313BF7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_231412DA8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_2313BF858@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_231412DA8();
  return sub_2313BD06C(a1, a2);
}

uint64_t sub_2313BF8B0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2313BF8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2313BD1B4(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_2313BF8E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0728)
  {
    sub_2313BF76C();
    sub_2312CCC24(&qword_255ED0720, (uint64_t (*)(uint64_t))sub_2313BF76C, MEMORY[0x24BE449E0]);
    v0 = sub_231412430();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0728);
  }
}

void sub_2313BF960()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0730)
  {
    sub_2313BF8E8();
    v0 = sub_2314126AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0730);
  }
}

uint64_t sub_2313BF9C0()
{
  return sub_2313BFA0C(&OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow, 0x746361466566694CLL, 0xEB0000000073726FLL);
}

uint64_t sub_2313BF9E8()
{
  return sub_2313BFA0C(&OBJC_IVAR____TtC5Heart41AFibBurdenOnboardingResultsViewController_isInOnboardingModalFlow, 0xD000000000000010, 0x80000002314264F0);
}

uint64_t sub_2313BFA0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t result;

  if (v3[*a1] != 1)
    return 0;
  sub_2312E42E4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_231418090;
  *(_QWORD *)(v6 + 32) = 0xD000000000000014;
  *(_QWORD *)(v6 + 40) = 0x8000000231427740;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 56) = a3;
  v7 = (char *)sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v6);
  *((_QWORD *)v7 + 2) = 3;
  strcpy(v7 + 64, "ContinueButton");
  v7[79] = -18;
  v8 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v9)
  {
    sub_2314146BC();

    swift_arrayDestroy();
    v10 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v3, sel_hxui_addContinueButtonWithAccessibilityIdentifier_, v10);

    return (uint64_t)v11;
  }
  result = swift_arrayDestroy();
  __break(1u);
  return result;
}

id sub_2313BFBA0(char a1)
{
  _BYTE *v1;
  void *v3;
  void *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_isInOnboardingModalFlow] = a1;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  sub_231411374();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AFibBurdenOnboardingHowItWorksViewController();
  v5 = objc_msgSendSuper2(&v7, sel_initWithTitle_detailText_icon_contentLayout_, v3, v4, 0, 1, 0xE000000000000000);

  return v5;
}

void sub_2313BFCF8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v1 = v0;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_isInOnboardingModalFlow) == 1)
    objc_msgSend(v0, sel_hxui_addCancelButton);
  v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setBackButtonDisplayMode_, 1);

  v3 = objc_msgSend(v1, sel_headerView);
  if (qword_255ECA990 != -1)
    swift_once();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  if (qword_25415E610 != -1)
    swift_once();
  v5 = (id)qword_254163058;
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (!v7)
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_initWithImage_, v7);
  objc_msgSend(v14, sel_setContentMode_, 4);
  v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v14);

  v9 = objc_msgSend(v1, sel_contentView);
  v10 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v10);

  v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_, v11);

  v12 = objc_msgSend(v14, sel_heightAnchor);
  v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 200.0);

  objc_msgSend(v13, sel_setActive_, 1);
  sub_231414B0C();

}

id sub_2313C025C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingHowItWorksViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingHowItWorksViewController()
{
  return objc_opt_self();
}

uint64_t sub_2313C02BC()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate);
}

uint64_t sub_2313C02EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart44AFibBurdenOnboardingHowItWorksViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313C0324()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  sub_2312D3C68(0, &qword_255ECCA40);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231414C20();
  v3 = (id)sub_2314149BC();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_23131DB9C, v2);

}

uint64_t sub_2313C04C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t *sub_2313C04EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231411D1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_WORD *)((char *)a1 + a3[5]) = *(_WORD *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = *(uint64_t *)((char *)a2 + v10 + 8);
    sub_231412A90();
    if (v16)
    {
      *v14 = *v15;
      v14[1] = v16;
      v17 = v15[3];
      v14[2] = v15[2];
      v14[3] = v17;
      v18 = v15[4];
      v19 = v15[5];
      v14[4] = v18;
      v14[5] = v19;
      sub_231412A90();
      sub_231412A90();
      sub_231412A90();
    }
    else
    {
      v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v21;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    }
  }
  return a1;
}

uint64_t sub_2313C05F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2313C0668(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = *(_QWORD *)(a2 + v9 + 8);
  sub_231412A90();
  if (v15)
  {
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = v14[4];
    v18 = v14[5];
    v13[4] = v17;
    v13[5] = v18;
    sub_231412A90();
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v19 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v19;
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  }
  return a1;
}

uint64_t sub_2313C0740(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v6 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = a3[6];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 8);
  v20 = v18[1];
  if (v19)
  {
    if (v20)
    {
      *v17 = *v18;
      v17[1] = v18[1];
      sub_231412A90();
      swift_bridgeObjectRelease();
      v17[2] = v18[2];
      v17[3] = v18[3];
      sub_231412A90();
      swift_bridgeObjectRelease();
      v17[4] = v18[4];
      v17[5] = v18[5];
      sub_231412A90();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2313C08E8((uint64_t)v17);
      v22 = *((_OWORD *)v18 + 1);
      v21 = *((_OWORD *)v18 + 2);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_OWORD *)v17 + 2) = v21;
    }
  }
  else if (v20)
  {
    *v17 = *v18;
    v17[1] = v18[1];
    v17[2] = v18[2];
    v17[3] = v18[3];
    v17[4] = v18[4];
    v17[5] = v18[5];
    sub_231412A90();
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v23 = *(_OWORD *)v18;
    v24 = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
    *((_OWORD *)v17 + 2) = v24;
    *(_OWORD *)v17 = v23;
  }
  return a1;
}

uint64_t sub_2313C08E8(uint64_t a1)
{
  destroy for CenteredLabelWithSpinnerItem();
  return a1;
}

uint64_t sub_2313C0914(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_WORD *)(a1 + a3[5]) = *(_WORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  return a1;
}

uint64_t sub_2313C099C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_BYTE *)(a1 + v7);
  v10 = (_BYTE *)(a2 + v7);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = (_BYTE *)(a1 + v8);
  v12 = (_BYTE *)(a2 + v8);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  if (!*(_QWORD *)(a1 + v18 + 8))
    goto LABEL_5;
  v21 = *(_QWORD *)(v20 + 8);
  if (!v21)
  {
    sub_2313C08E8(v19);
LABEL_5:
    v24 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v24;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    return a1;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2313C0AA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313C0AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_231411D1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2313C0B38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313C0B44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231411D1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t _s15SettingsContentVMa()
{
  uint64_t result;

  result = qword_25415C388;
  if (!qword_25415C388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313C0BFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411D1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s15SettingsContentV6FooterVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *_s15SettingsContentV6FooterVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s15SettingsContentV6FooterVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s15SettingsContentV6FooterVMa()
{
  return &_s15SettingsContentV6FooterVN;
}

uint64_t sub_2313C0DC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;

  sub_23130589C(0, &qword_255ED0830, (uint64_t (*)(void))sub_2313C3498, (uint64_t)&_s15SettingsContentV11SwitchStateV10CodingKeysON, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v9 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C3498();
  sub_231415178();
  v11 = 0;
  v7 = v9[1];
  sub_231415028();
  if (!v7)
  {
    v10 = 1;
    sub_231415028();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2313C0F04()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0x64656C62616E65;
}

uint64_t sub_2313C0F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313C2738(a1, a2);
  *a3 = result;
  return result;
}

void sub_2313C0F68(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2313C0F74()
{
  sub_2313C3498();
  return sub_231415190();
}

uint64_t sub_2313C0F9C()
{
  sub_2313C3498();
  return sub_23141519C();
}

uint64_t sub_2313C0FC4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2313C2824(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_2313C0FF8(_QWORD *a1)
{
  return sub_2313C0DC8(a1);
}

BOOL sub_2313C1024(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_2313C104C()
{
  return 0x6554726564616568;
}

uint64_t sub_2313C1068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6554726564616568 && a2 == 0xEA00000000007478)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2313C1108()
{
  sub_2313C34DC();
  return sub_231415190();
}

uint64_t sub_2313C1130()
{
  sub_2313C34DC();
  return sub_23141519C();
}

uint64_t sub_2313C1158@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_23130589C(0, &qword_255ED0820, (uint64_t (*)(void))sub_2313C34DC, (uint64_t)&_s15SettingsContentV6HeaderV10CodingKeysON, MEMORY[0x24BEE33E0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C34DC();
  sub_23141516C();
  if (v2)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v9 = v15;
  v10 = sub_231414FBC();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_2313C129C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23130589C(0, &qword_255ED0838, (uint64_t (*)(void))sub_2313C34DC, (uint64_t)&_s15SettingsContentV6HeaderV10CodingKeysON, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C34DC();
  sub_231415178();
  sub_23141501C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2313C13A0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_231415070();
}

uint64_t sub_2313C13D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_23130589C(0, &qword_255ED07D8, (uint64_t (*)(void))sub_2313C2D58, (uint64_t)&_s15SettingsContentV6FooterV10CodingKeysON, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C2D58();
  sub_231415178();
  v12 = 0;
  sub_23141501C();
  if (!v1)
  {
    v11 = 1;
    sub_231414FF8();
    v10 = 2;
    sub_231414FF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2313C1528(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2313C1560 + 4 * byte_231420AA0[a1]))(0xD000000000000011, 0x8000000231430F20);
}

uint64_t sub_2313C1560()
{
  return 0x5365727574616566;
}

uint64_t sub_2313C1584(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_2313C159C()
{
  return 0x726564616568;
}

uint64_t sub_2313C15B0()
{
  return 0x7265746F6F66;
}

uint64_t sub_2313C15C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  char v12;
  char *v13;
  char v14;
  _OWORD *v15;
  __int128 v16;
  _OWORD v18[3];
  char v19;

  v3 = v1;
  sub_23130589C(0, &qword_255ED07A0, (uint64_t (*)(void))sub_2313C24A4, (uint64_t)&_s15SettingsContentV10CodingKeysON, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - v8;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C24A4();
  sub_231415178();
  LOBYTE(v18[0]) = 0;
  sub_231411D1C();
  sub_2313C24E8(&qword_255ED07A8, MEMORY[0x24BE412B8]);
  sub_231415034();
  if (!v2)
  {
    v10 = (int *)_s15SettingsContentVMa();
    v11 = (char *)(v3 + v10[5]);
    v12 = *v11;
    LOBYTE(v11) = v11[1];
    LOBYTE(v18[0]) = v12;
    BYTE1(v18[0]) = (_BYTE)v11;
    v19 = 1;
    sub_2313C25F4();
    sub_231415034();
    v13 = (char *)(v3 + v10[6]);
    v14 = *v13;
    LOBYTE(v13) = v13[1];
    LOBYTE(v18[0]) = v14;
    BYTE1(v18[0]) = (_BYTE)v13;
    v19 = 2;
    sub_231415034();
    v18[0] = *(_OWORD *)(v3 + v10[7]);
    v19 = 3;
    sub_2313C2638();
    sub_231415010();
    v15 = (_OWORD *)(v3 + v10[8]);
    v16 = v15[1];
    v18[0] = *v15;
    v18[1] = v16;
    v18[2] = v15[2];
    v19 = 4;
    sub_2313C267C();
    sub_231415010();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2313C1838@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  _BYTE *v18;
  char *v19;
  char v20;
  _BYTE *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v26 = a2;
  v3 = sub_231411D1C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ED0770, (uint64_t (*)(void))sub_2313C24A4, (uint64_t)&_s15SettingsContentV10CodingKeysON, MEMORY[0x24BEE33E0]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - v7;
  v9 = (int *)_s15SettingsContentVMa();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C24A4();
  v30 = v8;
  v12 = v32;
  sub_23141516C();
  if (v12)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v13 = (uint64_t)v11;
  v14 = v27;
  LOBYTE(v33) = 0;
  sub_2313C24E8(&qword_255ED0780, MEMORY[0x24BE412C8]);
  v15 = v28;
  v16 = v29;
  sub_231414FD4();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v16, v15);
  v36 = 1;
  sub_2313C2528();
  sub_231414FD4();
  v17 = BYTE1(v33);
  v18 = (_BYTE *)(v13 + v9[5]);
  *v18 = v33;
  v18[1] = v17;
  v36 = 2;
  v19 = v30;
  sub_231414FD4();
  v20 = BYTE1(v33);
  v21 = (_BYTE *)(v13 + v9[6]);
  *v21 = v33;
  v21[1] = v20;
  v36 = 3;
  sub_2313C256C();
  sub_231414FB0();
  *(_OWORD *)(v13 + v9[7]) = v33;
  v36 = 4;
  sub_2313C25B0();
  sub_231414FB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v31);
  v22 = (_OWORD *)(v13 + v9[8]);
  v23 = v34;
  *v22 = v33;
  v22[1] = v23;
  v22[2] = v35;
  sub_2312FD80C(v13, v26);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return sub_2312FD894(v13);
}

uint64_t sub_2313C1BE4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x694C7265746F6F66;
  if (*v0 != 1)
    v1 = 0x4C52556B6E696CLL;
  if (*v0)
    return v1;
  else
    return 0x65547265746F6F66;
}

uint64_t sub_2313C1C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313C2998(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2313C1C68()
{
  sub_2313C2D58();
  return sub_231415190();
}

uint64_t sub_2313C1C90()
{
  sub_2313C2D58();
  return sub_23141519C();
}

double sub_2313C1CB8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_2313C2B00(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2313C1CF8(_QWORD *a1)
{
  return sub_2313C13D0(a1);
}

uint64_t sub_2313C1D0C(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2313C1E04(v7, v8) & 1;
}

uint64_t sub_2313C1D50()
{
  unsigned __int8 *v0;

  return sub_2313C1528(*v0);
}

uint64_t sub_2313C1D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313C3270(a1, a2);
  *a3 = result;
  return result;
}

void sub_2313C1D7C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2313C1D88()
{
  sub_2313C24A4();
  return sub_231415190();
}

uint64_t sub_2313C1DB0()
{
  sub_2313C24A4();
  return sub_23141519C();
}

uint64_t sub_2313C1DD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313C1838(a1, a2);
}

uint64_t sub_2313C1DEC(_QWORD *a1)
{
  return sub_2313C15C4(a1);
}

uint64_t sub_2313C1E04(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_231415070();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = a1[3];
  v8 = a2[3];
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (v10 = sub_231415070(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    v11 = a1[5];
    v12 = a2[5];
    if (v11)
    {
      if (v12 && (a1[4] == a2[4] && v11 == v12 || (sub_231415070() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_2313C1ED4(uint64_t a1, uint64_t a2)
{
  int *v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v36[6];
  _QWORD v37[6];

  if ((sub_231411D10() & 1) == 0)
    return 0;
  v4 = (int *)_s15SettingsContentVMa();
  result = 0;
  v6 = v4[5];
  v7 = a1 + v6;
  v8 = *(unsigned __int8 *)(a1 + v6);
  v9 = (unsigned __int8 *)(a2 + v6);
  if (v8 != *v9)
    return result;
  if (((*(unsigned __int8 *)(v7 + 1) ^ v9[1]) & 1) != 0)
    return result;
  result = 0;
  v10 = v4[6];
  v11 = a1 + v10;
  v12 = *(unsigned __int8 *)(a1 + v10);
  v13 = (unsigned __int8 *)(a2 + v10);
  if (v12 != *v13 || ((*(unsigned __int8 *)(v11 + 1) ^ v13[1]) & 1) != 0)
    return result;
  v14 = v4[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14 + 8);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  if (!v16)
  {
    if (v18)
      return 0;
LABEL_15:
    v21 = v4[8];
    v23 = *(_QWORD *)(a1 + v21);
    v22 = *(_QWORD *)(a1 + v21 + 8);
    v25 = *(_QWORD *)(a1 + v21 + 16);
    v24 = *(_QWORD *)(a1 + v21 + 24);
    v26 = *(_QWORD *)(a1 + v21 + 32);
    v27 = *(_QWORD *)(a1 + v21 + 40);
    v28 = (uint64_t *)(a2 + v21);
    v29 = *v28;
    v30 = v28[1];
    v32 = v28[2];
    v31 = v28[3];
    v34 = v28[4];
    v33 = v28[5];
    if (v22)
    {
      if (v30)
      {
        v36[0] = v23;
        v36[1] = v22;
        v36[2] = v25;
        v36[3] = v24;
        v36[4] = v26;
        v36[5] = v27;
        v37[0] = v29;
        v37[1] = v30;
        v37[2] = v32;
        v37[3] = v31;
        v37[4] = v34;
        v37[5] = v33;
        v35 = sub_2313C1E04(v36, v37);
        sub_2313C26C0(v23, v22);
        sub_2313C26C0(v23, v22);
        sub_2313C26C0(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2313C26FC(v23, v22);
        return (v35 & 1) != 0;
      }
    }
    else if (!v30)
    {
      return 1;
    }
    sub_2313C26C0(v23, v22);
    sub_2313C26C0(v29, v30);
    sub_2313C26FC(v23, v22);
    sub_2313C26FC(v29, v30);
    return 0;
  }
  if (!v18)
    return 0;
  if (*v15 == *v17 && v16 == v18)
    goto LABEL_15;
  v20 = sub_231415070();
  result = 0;
  if ((v20 & 1) != 0)
    goto LABEL_15;
  return result;
}

uint64_t sub_2313C2174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_231347B40(0, (unint64_t *)&qword_25415B688, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231418090;
  if (qword_255ECAAD8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = sub_231411374();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_231411374();
  v4 = v3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v4;
  sub_231347B40(0, &qword_255ECC9C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_23131C5FC();
  v5 = sub_231414668();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2313C2330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_231347B40(0, (unint64_t *)&qword_25415B688, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231418090;
  if (qword_255ECAAD8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = sub_231411374();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_231411374();
  *(_QWORD *)(v0 + 56) = v2;
  sub_231347B40(0, &qword_255ECC9C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_23131C5FC();
  v3 = sub_231414668();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_2313C24A4()
{
  unint64_t result;

  result = qword_255ED0778;
  if (!qword_255ED0778)
  {
    result = MEMORY[0x2348DE248](&unk_231420EF8, &_s15SettingsContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0778);
  }
  return result;
}

uint64_t sub_2313C24E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_231411D1C();
    result = MEMORY[0x2348DE248](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313C2528()
{
  unint64_t result;

  result = qword_255ED0788;
  if (!qword_255ED0788)
  {
    result = MEMORY[0x2348DE248](&unk_231420ED0, &_s15SettingsContentV11SwitchStateVN);
    atomic_store(result, (unint64_t *)&qword_255ED0788);
  }
  return result;
}

unint64_t sub_2313C256C()
{
  unint64_t result;

  result = qword_255ED0790;
  if (!qword_255ED0790)
  {
    result = MEMORY[0x2348DE248](&unk_231420EA8, &_s15SettingsContentV6HeaderVN);
    atomic_store(result, (unint64_t *)&qword_255ED0790);
  }
  return result;
}

unint64_t sub_2313C25B0()
{
  unint64_t result;

  result = qword_255ED0798;
  if (!qword_255ED0798)
  {
    result = MEMORY[0x2348DE248](&unk_231420B88, &_s15SettingsContentV6FooterVN);
    atomic_store(result, (unint64_t *)&qword_255ED0798);
  }
  return result;
}

unint64_t sub_2313C25F4()
{
  unint64_t result;

  result = qword_255ED07B0;
  if (!qword_255ED07B0)
  {
    result = MEMORY[0x2348DE248](&unk_231420E80, &_s15SettingsContentV11SwitchStateVN);
    atomic_store(result, (unint64_t *)&qword_255ED07B0);
  }
  return result;
}

unint64_t sub_2313C2638()
{
  unint64_t result;

  result = qword_255ED07B8;
  if (!qword_255ED07B8)
  {
    result = MEMORY[0x2348DE248](&unk_231420E58, &_s15SettingsContentV6HeaderVN);
    atomic_store(result, (unint64_t *)&qword_255ED07B8);
  }
  return result;
}

unint64_t sub_2313C267C()
{
  unint64_t result;

  result = qword_255ED07C0;
  if (!qword_255ED07C0)
  {
    result = MEMORY[0x2348DE248](&unk_231420B60, &_s15SettingsContentV6FooterVN);
    atomic_store(result, (unint64_t *)&qword_255ED07C0);
  }
  return result;
}

uint64_t sub_2313C26C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_231412A90();
    sub_231412A90();
    return sub_231412A90();
  }
  return result;
}

uint64_t sub_2313C26FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2313C2738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000231430F60)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2313C2824(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;

  sub_23130589C(0, &qword_255ED0810, (uint64_t (*)(void))sub_2313C3498, (uint64_t)&_s15SettingsContentV11SwitchStateV10CodingKeysON, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - v6;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C3498();
  sub_23141516C();
  if (v1)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v14 = 0;
  v8 = sub_231414FC8();
  v13 = 1;
  v10 = sub_231414FC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  if ((v10 & 1) != 0)
    v11 = 256;
  else
    v11 = 0;
  return v11 & 0xFFFFFFFE | v8 & 1;
}

uint64_t sub_2313C2998(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x65547265746F6F66 && a2 == 0xEA00000000007478 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C7265746F6F66 && a2 == 0xEA00000000006B6ELL || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C52556B6E696CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2313C2B00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char v28;
  char v29;

  v26 = a2;
  sub_23130589C(0, &qword_255ED07C8, (uint64_t (*)(void))sub_2313C2D58, (uint64_t)&_s15SettingsContentV6FooterV10CodingKeysON, MEMORY[0x24BEE33E0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313C2D58();
  sub_23141516C();
  if (v2)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v9 = v6;
  v10 = v26;
  v29 = 0;
  v11 = sub_231414FBC();
  v13 = v12;
  v25 = v11;
  v28 = 1;
  sub_231412A90();
  v14 = sub_231414F98();
  v16 = v15;
  v23 = v14;
  v27 = 2;
  sub_231412A90();
  v24 = v16;
  v17 = sub_231414F98();
  v19 = v18;
  v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  sub_231412A90();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  v21 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v10 = v25;
  v10[1] = v13;
  v10[2] = v23;
  v10[3] = v21;
  v10[4] = v20;
  v10[5] = v19;
  return result;
}

unint64_t sub_2313C2D58()
{
  unint64_t result;

  result = qword_255ED07D0;
  if (!qword_255ED07D0)
  {
    result = MEMORY[0x2348DE248](&unk_231420E08, &_s15SettingsContentV6FooterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED07D0);
  }
  return result;
}

uint64_t _s15SettingsContentV6FooterV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313C2DE8 + 4 * byte_231420AAA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2313C2E1C + 4 * byte_231420AA5[v4]))();
}

uint64_t sub_2313C2E1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C2E24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313C2E2CLL);
  return result;
}

uint64_t sub_2313C2E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313C2E40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2313C2E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C2E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15SettingsContentV6FooterV10CodingKeysOMa()
{
  return &_s15SettingsContentV6FooterV10CodingKeysON;
}

uint64_t _s15SettingsContentV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2313C2EB4 + 4 * byte_231420AB4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2313C2EE8 + 4 * byte_231420AAF[v4]))();
}

uint64_t sub_2313C2EE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C2EF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313C2EF8);
  return result;
}

uint64_t sub_2313C2F04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313C2F0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2313C2F10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C2F18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15SettingsContentV10CodingKeysOMa()
{
  return &_s15SettingsContentV10CodingKeysON;
}

ValueMetadata *_s15SettingsContentV6HeaderVMa()
{
  return &_s15SettingsContentV6HeaderVN;
}

_WORD *initializeBufferWithCopyOfBuffer for HeartPromotionResult(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s15SettingsContentV11SwitchStateVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15SettingsContentV11SwitchStateVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313C3040 + 4 * byte_231420ABE[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2313C3074 + 4 * byte_231420AB9[v4]))();
}

uint64_t sub_2313C3074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313C307C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2313C3084);
  return result;
}

uint64_t sub_2313C3090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2313C3098);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313C309C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313C30A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *_s15SettingsContentV11SwitchStateVMa()
{
  return &_s15SettingsContentV11SwitchStateVN;
}

unint64_t sub_2313C30C4()
{
  unint64_t result;

  result = qword_255ED07E0;
  if (!qword_255ED07E0)
  {
    result = MEMORY[0x2348DE248](&unk_231420D28, &_s15SettingsContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED07E0);
  }
  return result;
}

unint64_t sub_2313C310C()
{
  unint64_t result;

  result = qword_255ED07E8;
  if (!qword_255ED07E8)
  {
    result = MEMORY[0x2348DE248](&unk_231420DE0, &_s15SettingsContentV6FooterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED07E8);
  }
  return result;
}

unint64_t sub_2313C3154()
{
  unint64_t result;

  result = qword_255ED07F0;
  if (!qword_255ED07F0)
  {
    result = MEMORY[0x2348DE248](&unk_231420D50, &_s15SettingsContentV6FooterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED07F0);
  }
  return result;
}

unint64_t sub_2313C319C()
{
  unint64_t result;

  result = qword_255ED07F8;
  if (!qword_255ED07F8)
  {
    result = MEMORY[0x2348DE248](&unk_231420D78, &_s15SettingsContentV6FooterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED07F8);
  }
  return result;
}

unint64_t sub_2313C31E4()
{
  unint64_t result;

  result = qword_255ED0800;
  if (!qword_255ED0800)
  {
    result = MEMORY[0x2348DE248](&unk_231420C98, &_s15SettingsContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0800);
  }
  return result;
}

unint64_t sub_2313C322C()
{
  unint64_t result;

  result = qword_255ED0808;
  if (!qword_255ED0808)
  {
    result = MEMORY[0x2348DE248](&unk_231420CC0, &_s15SettingsContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0808);
  }
  return result;
}

uint64_t sub_2313C3270(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000231430F20 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5365727574616566 && a2 == 0xED00006863746977 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000231430F40 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_2313C3498()
{
  unint64_t result;

  result = qword_255ED0818;
  if (!qword_255ED0818)
  {
    result = MEMORY[0x2348DE248](&unk_231421108, &_s15SettingsContentV11SwitchStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0818);
  }
  return result;
}

unint64_t sub_2313C34DC()
{
  unint64_t result;

  result = qword_255ED0828;
  if (!qword_255ED0828)
  {
    result = MEMORY[0x2348DE248](&unk_2314210B8, &_s15SettingsContentV6HeaderV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0828);
  }
  return result;
}

uint64_t _s15SettingsContentV6HeaderV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2313C3560 + 4 * byte_231420AC3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2313C3580 + 4 * byte_231420AC8[v4]))();
}

_BYTE *sub_2313C3560(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2313C3580(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313C3588(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313C3590(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313C3598(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313C35A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15SettingsContentV6HeaderV10CodingKeysOMa()
{
  return &_s15SettingsContentV6HeaderV10CodingKeysON;
}

uint64_t _s15SettingsContentV11SwitchStateV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313C3608 + 4 * byte_231420AD2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313C363C + 4 * byte_231420ACD[v4]))();
}

uint64_t sub_2313C363C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C3644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313C364CLL);
  return result;
}

uint64_t sub_2313C3658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313C3660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313C3664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313C366C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15SettingsContentV11SwitchStateV10CodingKeysOMa()
{
  return &_s15SettingsContentV11SwitchStateV10CodingKeysON;
}

unint64_t sub_2313C368C()
{
  unint64_t result;

  result = qword_255ED0840;
  if (!qword_255ED0840)
  {
    result = MEMORY[0x2348DE248](&unk_231420FD8, &_s15SettingsContentV11SwitchStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0840);
  }
  return result;
}

unint64_t sub_2313C36D4()
{
  unint64_t result;

  result = qword_255ED0848;
  if (!qword_255ED0848)
  {
    result = MEMORY[0x2348DE248](&unk_231421090, &_s15SettingsContentV6HeaderV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0848);
  }
  return result;
}

unint64_t sub_2313C371C()
{
  unint64_t result;

  result = qword_255ED0850;
  if (!qword_255ED0850)
  {
    result = MEMORY[0x2348DE248](&unk_231421000, &_s15SettingsContentV6HeaderV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0850);
  }
  return result;
}

unint64_t sub_2313C3764()
{
  unint64_t result;

  result = qword_255ED0858;
  if (!qword_255ED0858)
  {
    result = MEMORY[0x2348DE248](&unk_231421028, &_s15SettingsContentV6HeaderV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0858);
  }
  return result;
}

unint64_t sub_2313C37AC()
{
  unint64_t result;

  result = qword_255ED0860;
  if (!qword_255ED0860)
  {
    result = MEMORY[0x2348DE248](&unk_231420F48, &_s15SettingsContentV11SwitchStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0860);
  }
  return result;
}

unint64_t sub_2313C37F4()
{
  unint64_t result;

  result = qword_255ED0868;
  if (!qword_255ED0868)
  {
    result = MEMORY[0x2348DE248](&unk_231420F70, &_s15SettingsContentV11SwitchStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255ED0868);
  }
  return result;
}

uint64_t sub_2313C3848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = sub_231411D1C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v27 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = sub_231411D70();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E3F3C();
  v15 = sub_231411D58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_isBradycardiaDetectionEnabled);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v27 = v15;
    if (v17)
    {
      v19 = *MEMORY[0x24BE41298];
      v18(v10, v19, v1);
    }
    else
    {
      v18(v10, *MEMORY[0x24BE412A0], v1);
      v19 = *MEMORY[0x24BE41298];
    }
    v18(v8, v19, v1);
    v22 = sub_231411D10();
    v23 = *(void (**)(char *, uint64_t))(v2 + 8);
    v23(v8, v1);
    v23(v10, v1);
    sub_2312E3FB4(v22 & 1);
    if (objc_msgSend(v16, sel_isBradycardiaDetectionEnabled, v27))
      v24 = v19;
    else
      v24 = *MEMORY[0x24BE412A0];
    v18(v5, v24, v1);
    sub_231411D94();
    sub_231411D7C();
    v23(v5, v1);
    v25 = v28;
    sub_231413060();
    v26 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    v20 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
  }
}

uint64_t type metadata accessor for BradycardiaThresholdSpecifierConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_2313C3B0C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_isBradycardiaDetectionEnabled);
  v3 = sub_231411D1C();
  v4 = (unsigned int *)MEMORY[0x24BE41298];
  if (!v2)
    v4 = (unsigned int *)MEMORY[0x24BE412A0];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

uint64_t sub_2313C3B78@<X0>(uint64_t a1@<X8>)
{
  return sub_2313C3848(a1);
}

uint64_t sub_2313C3B9C()
{
  id v0;
  unint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_bradycardiaHeartRateOptions);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
  v1 = sub_2314147A0();

  swift_retain();
  v2 = sub_2313206DC(v1);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

id sub_2313C3C48()
{
  void *v0;
  double v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  if (!objc_msgSend(v0, sel_isBradycardiaDetectionEnabled))
    return 0;
  v1 = (double)(uint64_t)objc_msgSend(v0, sel_bradycardiaThresholdHeartRate);
  v2 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
  v3 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v2, v1);

  return v3;
}

void sub_2313C3CFC(void *a1)
{
  double v1;
  id v2;

  objc_msgSend(a1, sel__beatsPerMinute);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v1);
  objc_msgSend((id)objc_opt_self(), sel_setBradycardiaThresholdHeartRate_, v2);

}

id sub_2313C3D6C()
{
  return objc_msgSend((id)objc_opt_self(), sel_setBradycardiaThresholdHeartRate_, 0);
}

uint64_t sub_2313C3D94(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2312DF850(a2 + 16, (uint64_t)v4);
  sub_2312CEA5C(v4, v4[3]);
  sub_231413024();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v4);
  result = MEMORY[0x2348DE3BC](a2 + 56);
  if (result)
  {
    swift_getObjectType();
    sub_231412FF4();
    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_2313C3E28()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  sub_2312D2854(v0 + 56);
  sub_2312D2854(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BradycardiaSettingsViewControllerDelegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BradycardiaSettingsDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED0AD0);
}

uint64_t sub_2313C3E90()
{
  return sub_2313203D8();
}

uint64_t sub_2313C3EB0(uint64_t a1, uint64_t a2)
{
  return sub_2313C4C1C(a2);
}

id sub_2313C3EBC(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18[6];

  v18[0] = a1;
  swift_getObjectType();
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - v6;
  *(_QWORD *)&v2[qword_255ED0AB8] = 0;
  v8 = objc_allocWithZone(MEMORY[0x24BDD3C70]);
  v9 = v2;
  v10 = objc_msgSend(v8, sel_initWithHealthStore_, a1);
  type metadata accessor for BradycardiaFeatureStatusAvailability();
  swift_allocObject();
  *(_QWORD *)&v9[qword_255ED0AB0] = sub_2314109DC(v10);
  v11 = (void *)type metadata accessor for BradycardiaThresholdSpecifierConfiguration();
  swift_allocObject();
  v12 = swift_retain();
  v13 = sub_23131F438(v12);

  sub_2312E3F18();
  v14 = sub_2314120AC();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  v18[4] = v11;
  v18[5] = (id)sub_2312CCC24(&qword_255ED0B88, (uint64_t (*)(uint64_t))type metadata accessor for BradycardiaThresholdSpecifierConfiguration, (uint64_t)&unk_2314212DC);
  v18[1] = v13;
  swift_retain();
  v16 = (id)sub_2314133CC();
  sub_2313C40D4();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  return v16;
}

uint64_t sub_2313C40D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v1 = v0;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - v3;
  sub_231308600(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130861C();
  v11 = v10;
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231308694();
  v15 = v14;
  v23 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_231413E28();
  swift_endAccess();
  sub_2312CCC24(&qword_25415DE30, (uint64_t (*)(uint64_t))sub_231308600, MEMORY[0x24BDB9EE8]);
  sub_231413F60();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v24 = (id)sub_231414A94();
  v18 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  sub_2312CCC24(&qword_255ECC0C8, (uint64_t (*)(uint64_t))sub_23130861C, MEMORY[0x24BDB96F8]);
  sub_231308748();
  sub_231413F54();
  sub_231320A54((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312CCC24(&qword_255ECC0D8, (uint64_t (*)(uint64_t))sub_231308694, MEMORY[0x24BDB9A08]);
  v19 = sub_231413F90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v15);
  *(_QWORD *)(v1 + qword_255ED0AB8) = v19;
  return swift_release();
}

void sub_2313C43F4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313C4420()
{
  swift_release();
  return swift_release();
}

id sub_2313C444C()
{
  return sub_231308560(type metadata accessor for BradycardiaSettingsDataSource);
}

uint64_t sub_2313C4458()
{
  swift_release();
  return swift_release();
}

uint64_t sub_2313C4490()
{
  return type metadata accessor for BradycardiaSettingsDataSource(0);
}

uint64_t type metadata accessor for BradycardiaSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED0B30);
}

uint64_t sub_2313C44AC()
{
  return sub_2313203D8();
}

void sub_2313C44D0()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313C4528()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313C4554()
{
  uint64_t v0;

  return swift_release();
}

id sub_2313C4580()
{
  return sub_231308560(type metadata accessor for BradycardiaSettingsViewController);
}

uint64_t sub_2313C458C(uint64_t a1)
{

  return swift_release();
}

uint64_t sub_2313C45C4()
{
  return type metadata accessor for BradycardiaSettingsViewController(0);
}

char *sub_2313C45CC(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  __int128 v23;

  v22 = a2;
  swift_getObjectType();
  v5 = sub_2314120AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsDataSource(0));
  v9 = v2;
  v10 = sub_2313C3EBC(a1, (uint64_t)v8);
  v11 = qword_255ED0B20;
  *(_QWORD *)&v9[qword_255ED0B20] = v10;
  sub_2314133F0();
  type metadata accessor for BradycardiaSettingsViewControllerDelegate();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 80) = 0;
  swift_unknownObjectWeakInit();
  sub_2312DFB68(&v23, v12 + 16);
  *(_QWORD *)&v9[qword_255ED0B28] = v12;

  v13 = *(void **)&v9[v11];
  sub_2312CCC24(&qword_255ED0B80, (uint64_t (*)(uint64_t))type metadata accessor for BradycardiaSettingsViewControllerDelegate, (uint64_t)&unk_231421294);
  v14 = v13;
  swift_retain();
  v15 = (char *)(id)sub_231412F1C();
  sub_2312E3E98();
  v16 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setTitle_, v16);

  v17 = qword_255ED0B28;
  v18 = *(_QWORD *)&v15[qword_255ED0B28];
  swift_retain();
  sub_2314133D8();
  *(_QWORD *)(v18 + 64) = v19;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_2314130CC();
  *(_QWORD *)(*(_QWORD *)&v15[v17] + 80) = MEMORY[0x24BE44420];
  swift_unknownObjectWeakAssign();
  v20 = v15;
  sub_231412F28();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
  return v20;
}

void *sub_2313C4840(unint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[4];
  id v23;

  v23 = a2;
  v4 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  for (; v5; v5 = sub_231414F08())
  {
    v19 = v4;
    v20 = a3 + 16;
    v21 = v4 & 0xC000000000000001;
    v6 = 4;
    while (1)
    {
      a3 = v6 - 4;
      v8 = v21 ? (id)MEMORY[0x2348DD81C](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(a3, 1))
        break;
      v11 = objc_msgSend(v23, sel_identifier);
      if (v11)
      {
        v12 = v11;
        v13 = sub_2314146BC();
        v15 = v14;

      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      sub_2312DF850(v20, (uint64_t)v22);
      sub_2312CEA5C(v22, v22[3]);
      v16 = sub_23141300C();
      if (v15)
      {
        if (v13 == v16 && v15 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
LABEL_19:
          swift_bridgeObjectRelease();
          return v9;
        }
        v7 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
        if ((v7 & 1) != 0)
          goto LABEL_19;
      }
      else
      {
        swift_bridgeObjectRelease();
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
      }

      v4 = v19;
      ++v6;
      if (v10 == v5)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    sub_231412A90();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2313C4A54()
{
  void *v0;
  double v1;
  id v2;
  id v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;

  v0 = (void *)objc_opt_self();
  if (objc_msgSend(v0, sel_isBradycardiaDetectionEnabled))
  {
    v1 = (double)(uint64_t)objc_msgSend(v0, sel_bradycardiaThresholdHeartRate);
    v2 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
    v3 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v2, v1);

    objc_msgSend(v3, sel__beatsPerMinute);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v4);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2313F699C(v5, (uint64_t)v6);

    v7 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v0, sel_bradycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v7);

    v9 = sub_2314146BC();
  }
  else
  {
    v10 = (void *)sub_23141468C();
    v8 = objc_msgSend(v0, sel_bradycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v10);

    v9 = sub_2314146BC();
  }

  return v9;
}

uint64_t sub_2313C4C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  char v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t result;
  _QWORD v38[2];
  unint64_t aBlock;
  unint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  void *v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  swift_unknownObjectRetain();
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
    goto LABEL_30;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_identifier);
  if (v6)
  {
    v7 = v6;
    v8 = sub_2314146BC();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  sub_231413084();
  v11 = sub_231413078();
  if (v10)
  {
    if (v8 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v13 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
LABEL_11:
      sub_2312DF850(v2 + 16, (uint64_t)&aBlock);
      sub_2312CEA5C(&aBlock, (uint64_t)v42);
      sub_231413030();
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&aBlock);
      if (MEMORY[0x2348DE3BC](v2 + 56))
      {
        swift_getObjectType();
        sub_231412FE8();
        sub_2314130CC();
      }
      return sub_2314130CC();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v14 = *(_QWORD *)(v2 + 40);
  v15 = sub_2312CEA5C((_QWORD *)(v2 + 16), v14);
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v18);
  v19 = sub_231413000();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
  swift_unknownObjectRetain();
  swift_retain();
  v20 = sub_2313C4840(v19, v5, v2);
  swift_bridgeObjectRelease();
  sub_2314130CC();
  swift_release();
  if (!v20)
    return sub_2314130CC();
  objc_msgSend(v20, sel__beatsPerMinute);
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) != 0)
  {
    if (v21 > -9.22337204e18)
    {
      if (v21 < 9.22337204e18)
      {
        v22 = (uint64_t)v21;
        if ((uint64_t)objc_msgSend((id)objc_opt_self(), sel_bradycardiaWarningThreshold) > (uint64_t)v21)
          goto LABEL_20;
        v23 = *(_QWORD *)(v2 + 40);
        v24 = sub_2312CEA5C((_QWORD *)(v2 + 16), v23);
        v38[1] = v38;
        v25 = *(_QWORD *)(v23 - 8);
        MEMORY[0x24BDAC7A8](v24);
        v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v25 + 16))(v27);
        v28 = (void *)sub_231413018();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
        if (!v28)
          goto LABEL_22;
        sub_2312D3C68(0, &qword_255ECDFA0);
        v29 = v20;
        v30 = v28;
        v31 = sub_231414C08();

        if ((v31 & 1) != 0)
        {
LABEL_20:
          sub_2312DF850(v2 + 16, (uint64_t)&aBlock);
          sub_2312CEA5C(&aBlock, (uint64_t)v42);
          sub_231413024();
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&aBlock);
          if (MEMORY[0x2348DE3BC](v2 + 56))
          {
            swift_getObjectType();
            sub_231412FE8();
            sub_2314130CC();
          }
        }
        else
        {
LABEL_22:
          v32 = (void *)objc_opt_self();
          v33 = swift_allocObject();
          *(_QWORD *)(v33 + 16) = v2;
          *(_QWORD *)(v33 + 24) = v20;
          v43 = sub_2313C5200;
          v44 = v33;
          aBlock = MEMORY[0x24BDAC760];
          v40 = 1107296256;
          v41 = sub_231375AB8;
          v42 = &unk_250028540;
          v34 = _Block_copy(&aBlock);
          swift_retain();
          v20 = v20;
          swift_release();
          v35 = objc_msgSend(v32, sel_hkhr_bradycardiaConfirmationControllerWithValue_confirmHandler_cancelHandler_, v22, v34, 0);
          _Block_release(v34);
          if (MEMORY[0x2348DE3BC](v2 + 72))
          {
            swift_getObjectType();
            v36 = (void *)sub_231413408();
            sub_2314130CC();
            objc_msgSend(v36, sel_presentViewController_animated_completion_, v35, 1, 0);

          }
        }

        return sub_2314130CC();
      }
      goto LABEL_29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_2314130CC();
  aBlock = 0;
  v40 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000021;
  v40 = 0x8000000231431130;
  v45 = a1;
  swift_unknownObjectRetain();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_2313C51D4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2313C5200(uint64_t a1)
{
  uint64_t v1;

  return sub_2313C3D94(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2313C5208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313C5218()
{
  return swift_release();
}

uint64_t sub_2313C5220()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313C5244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t (*v5)(_BYTE *, _QWORD);
  _BYTE v7[32];

  v2 = sub_231413930();
  v3 = MEMORY[0x24BEBC5F0];
  a1[3] = v2;
  a1[4] = v3;
  sub_2312DFCA0(a1);
  sub_231413918();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231413924();
  v4 = objc_msgSend((id)objc_opt_self(), sel_hk_appTintColor, 0xE000000000000000);
  v5 = (uint64_t (*)(_BYTE *, _QWORD))sub_2314138B8();
  sub_2314138A0();
  return v5(v7, 0);
}

uint64_t sub_2313C534C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2313C5244(a1);
}

uint64_t sub_2313C5360(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_231415070();
}

uint64_t sub_2313C5390()
{
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

uint64_t sub_2313C53E8()
{
  sub_231412A90();
  sub_231414710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313C542C()
{
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

id sub_2313C5480@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v10;

  v5 = *v2;
  v4 = v2[1];
  v7 = v2[2];
  v6 = v2[3];
  v10 = (id)v2[4];
  a2[3] = a1;
  a2[4] = sub_2313C56B4();
  v8 = (_QWORD *)swift_allocObject();
  *a2 = v8;
  v8[2] = v5;
  v8[3] = v4;
  v8[4] = v7;
  v8[5] = v6;
  v8[6] = v10;
  sub_231412A90();
  sub_231412A90();
  return v10;
}

uint64_t sub_2313C550C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v12[5];

  v2 = *(void **)(a2 + 32);
  v3 = type metadata accessor for AFibBurdenPDFProvider();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v2;
  v5 = sub_231412AA8();
  v6 = v2;
  v7 = sub_231412A9C();
  v8 = MEMORY[0x24BE43B90];
  v4[6] = v5;
  v4[7] = v8;
  v4[3] = v7;
  v9 = (id)HKHRAFibBurdenLogForCategory();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v9, v6);

  v4[8] = v10;
  v12[3] = v3;
  v12[4] = sub_2312CCC24(&qword_255ED0BA0, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFProvider, (uint64_t)&unk_23141B888);
  v12[0] = v4;
  sub_231414A04();
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v12);
}

uint64_t sub_2313C562C(uint64_t a1, void *a2)
{
  return sub_2313C572C(a2);
}

unint64_t sub_2313C5670()
{
  unint64_t result;

  result = qword_255ED0B90;
  if (!qword_255ED0B90)
  {
    result = MEMORY[0x2348DE248](&unk_231421470, &type metadata for AFibBurdenPDFItem);
    atomic_store(result, (unint64_t *)&qword_255ED0B90);
  }
  return result;
}

unint64_t sub_2313C56B4()
{
  unint64_t result;

  result = qword_255ED0B98;
  if (!qword_255ED0B98)
  {
    result = MEMORY[0x2348DE248](&unk_231421360, &type metadata for AFibBurdenPDFItem);
    atomic_store(result, (unint64_t *)&qword_255ED0B98);
  }
  return result;
}

uint64_t sub_2313C56F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2313C572C(void *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  __int128 v22;
  __int128 v23;

  v3 = sub_231414500();
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231414524();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313880B0();
  v10 = (void *)sub_231414A94();
  v11 = *v1;
  v22 = v1[1];
  v23 = v11;
  v12 = (void *)*((_QWORD *)v1 + 4);
  v13 = swift_allocObject();
  v14 = v1[1];
  *(_OWORD *)(v13 + 24) = *v1;
  *(_QWORD *)(v13 + 16) = a1;
  *(_OWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 56) = *((_QWORD *)v1 + 4);
  aBlock[4] = sub_2313C599C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250028688;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  sub_2312E3A64((uint64_t)&v23);
  sub_2312E3A64((uint64_t)&v22);
  v17 = v12;
  swift_release();
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v9, v5, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2313C5960()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2313C599C()
{
  uint64_t v0;

  return sub_2313C550C(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_2313C59A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313C59B8()
{
  return swift_release();
}

void destroy for AFibBurdenPDFItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for AFibBurdenPDFItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  sub_231412A90();
  sub_231412A90();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for AFibBurdenPDFItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFItem()
{
  return &type metadata for AFibBurdenPDFItem;
}

uint64_t sub_2313C5BB0(void *a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t result;
  _OWORD v37[2];
  __int128 v38;
  unint64_t v39;
  unint64_t v40;

  v2 = objc_msgSend(a1, sel_healthDataSource);
  if (v2)
  {
    v3 = v2;
    v4 = sub_231336D90(MEMORY[0x24BEE4AF8]);
    v5 = sub_2313C60BC();
    v6 = MEMORY[0x24BEE0D00];
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v38 = v5;
    *((_QWORD *)&v38 + 1) = v7;
    sub_231304744(&v38, v37);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40 = v4;
    sub_2313D47BC(v37, 0xD00000000000001BLL, 0x8000000231431370, isUniquelyReferenced_nonNull_native);
    v9 = v40;
    swift_bridgeObjectRelease();
    v10 = sub_2313C61D4();
    v39 = v6;
    *(_QWORD *)&v38 = v10;
    *((_QWORD *)&v38 + 1) = v11;
    sub_231304744(&v38, v37);
    v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_2313D47BC(v37, 0xD000000000000010, 0x8000000231431390, v12);
    v40 = v9;
    swift_bridgeObjectRelease();
    v13 = (id)HKHRAFibBurdenDetermineIsFocusModeOn();
    if (v13)
    {
      v14 = v13;
      v39 = sub_2312E43A4();
      *(_QWORD *)&v38 = v14;
      sub_231304744(&v38, v37);
      v15 = swift_isUniquelyReferenced_nonNull_native();
      sub_2313D47BC(v37, 0x4D7375636F467369, 0xED00006E4F65646FLL, v15);
      v40 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2313D44F8(0x4D7375636F467369, 0xED00006E4F65646FLL, &v38);
      sub_2313045B8((uint64_t)&v38);
    }
    v16 = sub_2314146BC();
    v18 = v17;
    if (qword_25415C170 != -1)
      swift_once();
    v19 = sub_231413780();
    v20 = sub_2312CE3B8(v19, (uint64_t)qword_254162F00);
    v21 = sub_2313D4D2C(v3, v20);
    v39 = v6;
    *(_QWORD *)&v38 = v21;
    *((_QWORD *)&v38 + 1) = v22;
    sub_231304744(&v38, v37);
    v23 = v40;
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v40 = 0x8000000000000000;
    sub_2313D47BC(v37, v16, v18, v24);
    v40 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = sub_2314146BC();
    v27 = v26;
    v28 = objc_msgSend(a1, sel_environmentDataSource);
    v29 = sub_2313D52C0(v3, v28, v20);

    v39 = sub_2312E43A4();
    *(_QWORD *)&v38 = v29;
    sub_231304744(&v38, v37);
    v30 = v40;
    v31 = swift_isUniquelyReferenced_nonNull_native();
    v40 = 0x8000000000000000;
    sub_2313D47BC(v37, v25, v27, v31);
    v40 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = sub_23138423C(v3, (void *)*MEMORY[0x24BDD2DC8], 0, v20);
    if (v33)
    {
      v39 = v6;
      *(_QWORD *)&v38 = v32;
      *((_QWORD *)&v38 + 1) = v33;
      sub_231304744(&v38, v37);
      v34 = v40;
      v35 = swift_isUniquelyReferenced_nonNull_native();
      sub_2313D47BC(v37, 0x5665727574616566, 0xEE006E6F69737265, v35);
      sub_2314130CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2313D44F8(0x5665727574616566, 0xEE006E6F69737265, &v38);
      sub_2313045B8((uint64_t)&v38);
      sub_2314130CC();
      return v40;
    }
    return v34;
  }
  else
  {
    result = sub_231414EE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_2313C60BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  char v9;

  v1 = 0x7461642077656976;
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (sub_2314146BC() == v3 && v4 == v2)
    goto LABEL_12;
  v6 = sub_231415070();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v1;
  v1 = 0x7373696D736964;
  if (sub_2314146BC() == v3 && v7 == v2)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v1;
  }
  v9 = sub_231415070();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
    return sub_2314146BC();
  return v1;
}

uint64_t sub_2313C61D4()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  _BYTE v23[40];

  v1 = 0xD000000000000010;
  v2 = *(void **)(v0 + 16);
  v3 = objc_msgSend(v2, sel_content);
  v4 = objc_msgSend(v3, sel_categoryIdentifier);

  v5 = sub_2314146BC();
  v7 = v6;

  if (sub_2314146BC() == v5 && v8 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      if (sub_2314146BC() == v5 && v11 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v13 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
          return sub_2314146BC();
      }
      return v1;
    }
  }
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v2, sel_content);
  v15 = objc_msgSend(v14, sel_userInfo);

  v16 = sub_231414638();
  *(_QWORD *)&v21 = 0xD000000000000012;
  *((_QWORD *)&v21 + 1) = 0x80000002314312B0;
  sub_231414DD0();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_231338864((uint64_t)v23), (v18 & 1) != 0))
  {
    sub_2313046A8(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_231339154((uint64_t)v23);
  v19 = *((_QWORD *)&v22 + 1);
  sub_2313045B8((uint64_t)&v21);
  if (v19)
    return 0xD000000000000021;
  else
    return 0xD000000000000024;
}

uint64_t sub_2313C644C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for BiomeFocusModeOnDeterminer()
{
  return &type metadata for BiomeFocusModeOnDeterminer;
}

uint64_t PromotionAvailabilityState.rawValue.getter(char a1)
{
  if (!a1)
    return 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0x6E6564646968;
}

uint64_t sub_2313C650C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2313CE56C(*a1, *a2);
}

uint64_t sub_2313C6518()
{
  return sub_2313CEB00();
}

uint64_t sub_2313C6520()
{
  sub_231414710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313C659C()
{
  return sub_2313CEEEC();
}

uint64_t sub_2313C65A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s5Heart26PromotionAvailabilityStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_2313C65D0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = 0xD000000000000014;
  v3 = 0x8000000231425270;
  if (*v1 != 1)
  {
    v2 = 0x6E6564646968;
    v3 = 0xE600000000000000;
  }
  if (*v1)
  {
    v4 = v3;
  }
  else
  {
    v2 = 0xD000000000000015;
    v4 = 0x8000000231425250;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_2313C6630()
{
  sub_2313CB1E4();
  return sub_231414770();
}

uint64_t sub_2313C668C()
{
  sub_2313CB1E4();
  return sub_231414764();
}

unint64_t sub_2313C66D8()
{
  return 0xD000000000000011;
}

uint64_t sub_2313C66F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313CA58C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2313C671C()
{
  sub_2313CA504();
  return sub_231415190();
}

uint64_t sub_2313C6744()
{
  sub_2313CA504();
  return sub_23141519C();
}

uint64_t PromotionUserData.encode(to:)(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  sub_2313CB228(0, &qword_255ED0C88, MEMORY[0x24BEE3520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v10[-v7];
  sub_2312CEA5C(a1, a1[3]);
  sub_2313CA504();
  sub_231415178();
  v10[15] = a2;
  sub_2313CA548();
  sub_231415034();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *PromotionUserData.init(from:)(_QWORD *a1)
{
  return sub_2313CA610(a1);
}

_QWORD *sub_2313C6880@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_2313CA610(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_2313C68A8(_QWORD *a1)
{
  char *v1;

  return PromotionUserData.encode(to:)(a1, *v1);
}

BOOL sub_2313C68C0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_2313CA120(*a1, *a2);
}

uint64_t sub_2313C68CC(unsigned int *a1, unsigned int *a2)
{
  return sub_2313CA260(*a1, *a2);
}

uint64_t sub_2313C68D8()
{
  return sub_2313C6970();
}

uint64_t sub_2313C68EC()
{
  unsigned int v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2313C695C()
{
  return sub_2313C6970();
}

uint64_t sub_2313C6970()
{
  unsigned __int16 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2313C69D8()
{
  return sub_2313C6A00();
}

uint64_t sub_2313C69EC()
{
  return sub_2313C6A00();
}

uint64_t sub_2313C6A00()
{
  void *v0;
  id v1;

  sub_2313CAD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  sub_231411CB0();

  swift_release();
  return swift_release();
}

void sub_2313C6A98(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  int EnumCaseMultiPayload;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v29 = a1;
  sub_2312CCB14();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231411B48();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a2, sel_profileIdentifier);
  v15 = objc_msgSend(v14, sel_type);

  if (v15 == (id)1)
  {
    sub_2312D6C20(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_2312CCB14);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v17 = v29;
    if (EnumCaseMultiPayload == 1)
    {
      sub_2312CEBD4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_2312CCB14);
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, v17, a2);
      v19 = sub_2312DC718();
      v20 = MEMORY[0x24BE45B80];
      *(_QWORD *)(a4 + 24) = v19;
      *(_QWORD *)(a4 + 32) = v20;
      *(_QWORD *)a4 = v18;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      v21 = v17;
      v22 = a2;
      sub_231411B3C();
      v23 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
      v24 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      v25 = objc_msgSend(v23, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v21, v22, v24);

      v26 = sub_2312DC718();
      v27 = MEMORY[0x24BE45B80];
      *(_QWORD *)(a4 + 24) = v26;
      *(_QWORD *)(a4 + 32) = v27;
      *(_QWORD *)a4 = v25;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
}

id sub_2313C6CC8()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability], sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeartPromotionAvailability();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313C6E9C()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  sub_2312CEA5C((_QWORD *)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager + 24));
  sub_231413600();
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = ObjectType;
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_231413F90();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2313C6FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  id v24;
  __int16 v25;
  _QWORD v26[2];
  uint64_t v27;

  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v26 - v8;
  swift_beginAccess();
  result = MEMORY[0x2348DE3BC](a2 + 16);
  if (result)
  {
    v11 = (void *)result;
    if (qword_25415DF98 != -1)
      swift_once();
    v12 = sub_231413780();
    sub_2312CE3B8(v12, (uint64_t)qword_254162FF0);
    v13 = sub_231413768();
    v14 = sub_23141498C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v26[0] = a1;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v27 = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = sub_2314151A8();
      v26[1] = sub_23133180C(v18, v19, &v27);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s]: Received IRN feature status update", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v17, -1, -1);
      v20 = v16;
      a1 = v26[0];
      MEMORY[0x2348DE308](v20, -1, -1);
    }

    v21 = sub_23141357C();
    v22 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    v23 = *(_QWORD *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v9, a1, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v21);
    sub_2313CAD7C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2313085A0((uint64_t)v9, (uint64_t)v7);
    v27 = (uint64_t)v11;
    v24 = v11;
    sub_231411CBC();
    sub_2312F1A20((uint64_t)v9, &qword_25415C140, v22);
    v25 = sub_2313C80B0(0);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v27) = v25;
    v24;
    sub_231413E4C();
    sub_2313C7830();
    LOWORD(v21) = sub_2313C80B0(2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v27) = v21;
    return sub_231413E4C();
  }
  return result;
}

uint64_t sub_2313C7334()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;

  ObjectType = swift_getObjectType();
  sub_2312D6C20(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_2313CAC9C);
  if (!v6)
    return sub_2312CEBD4((uint64_t)v5, (uint64_t (*)(_QWORD))sub_2313CAC9C);
  sub_2312CEA5C(v5, v6);
  sub_231413600();
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = ObjectType;
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_231413F90();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v5);
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2313C74A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  id v23;
  __int16 v24;
  void *v25;

  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_2312D4A68();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x2348DE3BC](a2 + 16);
  if (result)
  {
    v18 = (void *)result;
    if (qword_25415B6D8 != -1)
      swift_once();
    v19 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
    *(_QWORD *)(swift_allocObject() + 16) = a3;
    v25 = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v20 = sub_23141357C();
    v21 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    v22 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v11, a1, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v20);
    sub_2313CAD7C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2313085A0((uint64_t)v11, (uint64_t)v9);
    v25 = v18;
    v23 = v18;
    sub_231411CBC();
    sub_2312F1A20((uint64_t)v11, &qword_25415C140, v21);
    sub_2313C7830();
    v24 = sub_2313C80B0(2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v25) = v24;
    v23;
    sub_231413E4C();
    LOWORD(v20) = sub_2313C80B0(0);
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v25) = v20;
    return sub_231413E4C();
  }
  return result;
}

uint64_t sub_2313C779C()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313C7830()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v10;
  unsigned int v11;
  char v12;
  unsigned int v13;
  id v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[4];

  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - v2;
  v4 = sub_23141357C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313CAD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  v17[0] = v0;
  v8 = v0;
  sub_231411CB0();

  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_2312F1A20((uint64_t)v3, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_2312D6C20((uint64_t)v8 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_2313CAC9C);
  if (v16)
  {
    sub_2312DFB68(&v15, (uint64_t)v17);
    sub_2312CEA5C(v17, v17[3]);
    v10 = (void *)sub_2314135F4();
    v11 = sub_2313C7B20((uint64_t)v7, 1, v10);

    if (sub_2313C80B0(2) > 1u)
    {
      v13 = HIWORD(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = sub_231415070();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        LOBYTE(v13) = BYTE2(v11);
      else
        LOBYTE(v13) = 2;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v15) = v11;
    BYTE2(v15) = v13;
    BYTE3(v15) = HIBYTE(v11);
    v14 = v8;
    sub_231413E4C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_2312CEBD4((uint64_t)&v15, (uint64_t (*)(_QWORD))sub_2313CAC9C);
  }
}

uint64_t sub_2313C7B20(uint64_t a1, int a2, void *a3)
{
  void *v3;
  void *v4;
  void *v7;
  unsigned int v8;
  char v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  int v30;
  int v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;

  v4 = v3;
  v7 = (void *)sub_231413588();
  v8 = objc_msgSend(v7, sel_areAllRequirementsSatisfied);

  v9 = sub_231413570();
  v10 = v9;
  if (v8 && (v9 & 1) == 0 && (_BYTE)a2)
  {
    v11 = a2 << 24;
    v12 = sub_2313C8FB4(a3) << 16;
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v13 = sub_231413780();
    sub_2312CE3B8(v13, (uint64_t)qword_254162FF0);
    v50 = v4;
    v14 = v4;
    v15 = a3;
    v16 = v14;
    v17 = v15;
    v18 = sub_231413768();
    v19 = sub_23141498C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v51 = v48;
      *(_DWORD *)v20 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v21 = sub_2314146E0();
      v49 = a3;
      sub_23133180C(v21, v22, &v51);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      sub_23133180C(0xD00000000000004ELL, 0x80000002314315E0, &v51);
      sub_231414CBC();
      *(_WORD *)(v20 + 22) = 2082;
      v23 = v17;
      v24 = sub_231414B00();
      v26 = v25;

      sub_23133180C(v24, v26, &v51);
      sub_231414CBC();

      a3 = v49;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v18, v19, "[%{public}s.%{public}s] %{public}s discover promotion should be hidden.", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v48, -1, -1);
      MEMORY[0x2348DE308](v20, -1, -1);

    }
    else
    {

    }
    v11 = 0;
    v12 = 0x20000;
    v4 = v50;
  }
  v27 = (void *)sub_231413588();
  v28 = objc_msgSend(v27, sel_areAllRequirementsSatisfied);

  if (v10 & 1 | ((v28 & 1) == 0) || !(_BYTE)a2)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v32 = sub_231413780();
    sub_2312CE3B8(v32, (uint64_t)qword_254162FF0);
    v33 = v4;
    v34 = a3;
    v35 = v33;
    v36 = v34;
    v37 = sub_231413768();
    v38 = sub_23141498C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v51 = v40;
      *(_DWORD *)v39 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v41 = sub_2314146E0();
      sub_23133180C(v41, v42, &v51);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      sub_23133180C(0xD00000000000004ELL, 0x80000002314315E0, &v51);
      sub_231414CBC();
      *(_WORD *)(v39 + 22) = 2082;
      v43 = v36;
      v44 = sub_231414B00();
      v46 = v45;

      sub_23133180C(v44, v46, &v51);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v37, v38, "[%{public}s.%{public}s] %{public}s non-discover promotion should be hidden.", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v40, -1, -1);
      MEMORY[0x2348DE308](v39, -1, -1);

    }
    else
    {

    }
    v30 = 0;
    v31 = 2;
  }
  else
  {
    v29 = sub_2313C8FB4(a3);
    v30 = a2 << 8;
    v31 = v29;
  }
  return v11 | v12 | v31 | v30;
}

uint64_t sub_2313C80B0(char a1)
{
  void *v1;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;

  if ((sub_2313C8738(a1) & 1) != 0)
    v3 = 0;
  else
    v3 = sub_2313CAE80(a1) & 1;
  v4 = sub_2313C8738(a1);
  v5 = sub_2313C8A18(a1);
  if (qword_25415DF98 != -1)
    swift_once();
  v6 = sub_231413780();
  sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
  v7 = v1;
  v8 = sub_231413768();
  v9 = sub_23141498C();
  if (os_log_type_enabled(v8, v9))
  {
    v34 = v5;
    v35 = v4;
    v10 = 0xD000000000000012;
    v11 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v36 = v33;
    *(_DWORD *)v11 = 136447746;
    swift_getObjectType();
    sub_2313CAD44();
    v12 = sub_2314146E0();
    sub_23133180C(v12, v13, &v36);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    sub_23133180C(0xD000000000000018, 0x80000002314315C0, &v36);
    sub_231414CBC();
    *(_WORD *)(v11 + 22) = 2082;
    if (a1)
    {
      if (a1 == 1)
        v10 = 0x6472754262694661;
      else
        v10 = 0x7461654662694661;
      if (a1 == 1)
        v14 = 0xEA00000000006E65;
      else
        v14 = 0xEC00000073657275;
    }
    else
    {
      v14 = 0x80000002314315A0;
    }
    sub_23133180C(v10, v14, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 32) = 2082;
    v15 = sub_2314146E0();
    sub_23133180C(v15, v16, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 42) = 2082;
    if ((v35 & 1) != 0)
      v17 = 1702195828;
    else
      v17 = 0x65736C6166;
    if ((v35 & 1) != 0)
      v18 = 0xE400000000000000;
    else
      v18 = 0xE500000000000000;
    sub_23133180C(v17, v18, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 52) = 2082;
    sub_23133180C(0x65736C6166, 0xE500000000000000, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 62) = 2082;
    if ((v34 & 1) != 0)
      v19 = 1702195828;
    else
      v19 = 0x65736C6166;
    if ((v34 & 1) != 0)
      v20 = 0xE400000000000000;
    else
      v20 = 0xE500000000000000;
    sub_23133180C(v19, v20, &v36);
    sub_231414CBC();
    v4 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v8, v9, "[%{public}s.%{public}s] promotion: %{public}s (shouldAdvertisePromotionType: %{public}s, isOnboardingCompleted: %{public}s, isRescinded: %{public}s, isExcluded: %{public}s)", (uint8_t *)v11, 0x48u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v33, -1, -1);
    v21 = v11;
    v5 = v34;
    MEMORY[0x2348DE308](v21, -1, -1);

  }
  else
  {

  }
  if ((v3 == 0) | (v4 | v5) & 1)
  {
    v22 = v7;
    v23 = sub_231413768();
    v24 = sub_23141498C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = 0xD000000000000012;
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v36 = v27;
      *(_DWORD *)v26 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v28 = sub_2314146E0();
      sub_23133180C(v28, v29, &v36);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_23133180C(0xD000000000000018, 0x80000002314315C0, &v36);
      sub_231414CBC();
      *(_WORD *)(v26 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1)
        {
          v25 = 0x6472754262694661;
          v30 = 0xEA00000000006E65;
        }
        else
        {
          v25 = 0x7461654662694661;
          v30 = 0xEC00000073657275;
        }
      }
      else
      {
        v30 = 0x80000002314315A0;
      }
      sub_23133180C(v25, v30, &v36);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v23, v24, "[%{public}s.%{public}s] %{public}s promotion should be hidden.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);

      v31 = 2;
    }
    else
    {

      v31 = 2;
    }
  }
  else
  {
    v31 = sub_2313C8AC4(a1);
  }
  return v31 | (v3 << 8);
}

uint64_t sub_2313C8738(char a1)
{
  return sub_2313C8744(a1, (uint64_t (*)(uint64_t))sub_2313C8738);
}

uint64_t sub_2313C8744(char a1, uint64_t (*a2)(uint64_t))
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  id v18;
  char v19;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;

  v23 = a2;
  v4 = sub_23141357C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_25415C140, v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  if (!a1)
  {
    sub_2313CAD7C();
    swift_getKeyPath();
    swift_getKeyPath();
    v24 = v2;
    v18 = v2;
    sub_231411CB0();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    {
      v16 = (void (*)(uint64_t))MEMORY[0x24BE45750];
      v17 = (uint64_t)v14;
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v14, v4);
    v21 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    v22 = (uint64_t)v14;
LABEL_12:
    sub_2312F1A20(v22, &qword_25415C140, v21);
    v19 = sub_231413570();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v19 & 1;
  }
  if (a1 == 1)
  {
    sub_2313CAD7C();
    swift_getKeyPath();
    swift_getKeyPath();
    v24 = v2;
    v15 = v2;
    sub_231411CB0();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
    {
      v16 = (void (*)(uint64_t))MEMORY[0x24BE45750];
      v17 = (uint64_t)v12;
LABEL_7:
      sub_2312F1A20(v17, &qword_25415C140, v16);
      v19 = 1;
      return v19 & 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v12, v4);
    v21 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    v22 = (uint64_t)v12;
    goto LABEL_12;
  }
  v19 = 1;
  if ((v23(1) & 1) == 0)
    return v23(0);
  return v19 & 1;
}

uint64_t sub_2313C8A18(unsigned __int8 a1)
{
  char v1;
  char v2;

  if (a1 > 1u)
    goto LABEL_5;
  if (sub_2313C80B0(2) > 1u)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v2 = 0;
    return v2 & 1;
  }
  v1 = sub_231415070();
  swift_bridgeObjectRelease();
  v2 = v1 ^ 1;
  return v2 & 1;
}

uint64_t sub_2313C8AC4(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;

  if ((sub_2313C9454() & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v3 = sub_231413780();
    sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
    v4 = v1;
    v5 = sub_231413768();
    v6 = sub_23141498C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = 0xD000000000000012;
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v24 = v9;
      *(_DWORD *)v8 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v10 = sub_2314146E0();
      sub_23133180C(v10, v11, &v24);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      sub_23133180C(0xD000000000000017, 0x8000000231431580, &v24);
      sub_231414CBC();
      *(_WORD *)(v8 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1)
          v7 = 0x6472754262694661;
        else
          v7 = 0x7461654662694661;
        if (a1 == 1)
          v12 = 0xEA00000000006E65;
        else
          v12 = 0xEC00000073657275;
      }
      else
      {
        v12 = 0x80000002314315A0;
      }
      sub_23133180C(v7, v12, &v24);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s.%{public}s] Age set. Showing %{public}s promotion with high priority.", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v9, -1, -1);
      MEMORY[0x2348DE308](v8, -1, -1);

      return 0;
    }
    else
    {

      return 0;
    }
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v13 = sub_231413780();
    sub_2312CE3B8(v13, (uint64_t)qword_254162FF0);
    v14 = v1;
    v15 = sub_231413768();
    v16 = sub_23141498C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = 0xD000000000000012;
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v20 = sub_2314146E0();
      sub_23133180C(v20, v21, &v24);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      sub_23133180C(0xD000000000000017, 0x8000000231431580, &v24);
      sub_231414CBC();
      *(_WORD *)(v18 + 22) = 2082;
      if (a1)
      {
        if (a1 == 1)
          v17 = 0x6472754262694661;
        else
          v17 = 0x7461654662694661;
        if (a1 == 1)
          v22 = 0xEA00000000006E65;
        else
          v22 = 0xEC00000073657275;
      }
      else
      {
        v22 = 0x80000002314315A0;
      }
      sub_23133180C(v17, v22, &v24);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s.%{public}s] Age not set. Showing %{public}s promotion with low priority.", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v18, -1, -1);

    }
    else
    {

    }
    return 1;
  }
}

uint64_t sub_2313C8FB4(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;

  if ((sub_2313C9454() & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v3 = sub_231413780();
    sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
    v4 = v1;
    v5 = a1;
    v6 = v4;
    v7 = v5;
    v8 = sub_231413768();
    v9 = sub_23141498C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v34 = v11;
      *(_DWORD *)v10 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v12 = sub_2314146E0();
      sub_23133180C(v12, v13, &v34);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      sub_23133180C(0xD000000000000028, 0x8000000231431550, &v34);
      sub_231414CBC();
      *(_WORD *)(v10 + 22) = 2082;
      v14 = v7;
      v15 = sub_231414B00();
      v17 = v16;

      sub_23133180C(v15, v17, &v34);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v8, v9, "[%{public}s.%{public}s] Age set. Showing %{public}s promotion with high priority.", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v19 = sub_231413780();
    sub_2312CE3B8(v19, (uint64_t)qword_254162FF0);
    v20 = v1;
    v21 = a1;
    v22 = v20;
    v23 = v21;
    v24 = sub_231413768();
    v25 = sub_23141498C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v34 = v27;
      *(_DWORD *)v26 = 136446722;
      swift_getObjectType();
      sub_2313CAD44();
      v28 = sub_2314146E0();
      sub_23133180C(v28, v29, &v34);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_23133180C(0xD000000000000028, 0x8000000231431550, &v34);
      sub_231414CBC();
      *(_WORD *)(v26 + 22) = 2082;
      v30 = v23;
      v31 = sub_231414B00();
      v33 = v32;

      sub_23133180C(v31, v33, &v34);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s.%{public}s] Age not set. Showing %{public}s promotion with low priority.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);

    }
    else
    {

    }
    return 1;
  }
}

uint64_t sub_2313C9454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  _BYTE v18[16];
  id v19[2];

  v19[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2314112F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2312D1E78(0, (unint64_t *)&qword_255ECBCC8, v5);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v18[-v7];
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_healthStore);
  v19[0] = 0;
  v10 = objc_msgSend(v9, sel_dateOfBirthComponentsWithError_, v19);
  v11 = v19[0];
  if (v10)
  {
    v12 = v10;
    sub_2314112D8();
    v13 = v11;

    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 32))(v8, v4, v1);
    v14 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v1);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) != 1)
      goto LABEL_6;
  }
  else
  {
    v15 = v19[0];
    v16 = (void *)sub_231411410();

    swift_willThrow();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, 1, 1, v1);
  }
  v14 = 0;
LABEL_6:
  sub_2312F1A20((uint64_t)v8, (unint64_t *)&qword_255ECBCC8, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  return v14;
}

uint64_t sub_2313C9650()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int16 v9;
  id v10;
  __int16 v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162FF0);
  v3 = sub_231413768();
  v4 = sub_23141498C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2314151A8();
    sub_23133180C(v7, v8, &v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%{public}s]: Heart rhythm availability did update", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }

  v9 = sub_2313C80B0(0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v14) = v9;
  v10 = v1;
  sub_231413E4C();
  sub_2313C7830();
  v11 = sub_2313C80B0(2);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v14) = v11;
  v12 = v10;
  return sub_231413E4C();
}

uint64_t sub_2313C98A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_2312CEA5C((_QWORD *)(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager), *(_QWORD *)(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager + 24));
  sub_2314135E8();
  v3 = sub_23141357C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_2313C9B88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;

  sub_2312D4A68();
  MEMORY[0x24BDAC7A8](v4);
  sub_2312D6C20(*a1 + OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2313CAC9C);
  if (v9)
  {
    sub_2312CEA5C(v8, v9);
    sub_2314135E8();
    v6 = sub_23141357C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v8);
  }
  else
  {
    sub_2312CEBD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2313CAC9C);
    v5 = sub_23141357C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

uint64_t sub_2313C9D80(uint64_t a1, void *a2)
{
  id v3;

  sub_231414E18();
  sub_231414728();
  swift_getObjectType();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v3 = a2;
  sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313C9E78@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;
  int v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2313C9EF4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_231413E4C();
}

uint64_t sub_2313C9F64(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_2313CAD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  sub_231411CB0();

  swift_release();
  return swift_release();
}

uint64_t sub_2313CA000(uint64_t a1, void **a2)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v4 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v14 - v9;
  sub_2313085A0(a1, (uint64_t)v14 - v9);
  v11 = *a2;
  sub_2313CAD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2313085A0((uint64_t)v10, (uint64_t)v8);
  v14[1] = v11;
  v12 = v11;
  sub_231411CBC();
  return sub_2312F1A20((uint64_t)v10, &qword_25415C140, v4);
}

BOOL sub_2313CA120(unsigned __int16 a1, unsigned __int16 a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  _BOOL8 result;

  v4 = 0x8000000231425250;
  if (!(_BYTE)a1)
  {
    v6 = 0xD000000000000015;
    v5 = 0x8000000231425250;
    if (!(_BYTE)a2)
      goto LABEL_10;
    goto LABEL_6;
  }
  if (a1 != 1)
  {
    v5 = 0xE600000000000000;
    v6 = 0x6E6564646968;
    if (!(_BYTE)a2)
      goto LABEL_10;
LABEL_6:
    if (a2 == 1)
    {
      v4 = 0x8000000231425270;
      if (v6 != 0xD000000000000014)
        goto LABEL_15;
    }
    else
    {
      v4 = 0xE600000000000000;
      if (v6 != 0x6E6564646968)
        goto LABEL_15;
    }
    goto LABEL_13;
  }
  v5 = 0x8000000231425270;
  v6 = 0xD000000000000014;
  if ((_BYTE)a2)
    goto LABEL_6;
LABEL_10:
  if (v6 != 0xD000000000000015)
  {
LABEL_15:
    v7 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
    return (a2 ^ a1) < 0x100;
  }
LABEL_13:
  if (v5 != v4)
    goto LABEL_15;
  swift_bridgeObjectRelease_n();
  return (a2 ^ a1) < 0x100;
}

uint64_t sub_2313CA260(unsigned int a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unsigned int v10;
  char v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  char v19;

  v4 = 0xD000000000000014;
  v5 = 0x8000000231425250;
  if (!(_BYTE)a1)
  {
    v7 = 0xD000000000000015;
    v6 = 0x8000000231425250;
    v8 = a2;
    if ((_BYTE)a2)
      goto LABEL_6;
    goto LABEL_9;
  }
  if (a1 != 1)
  {
    v6 = 0xE600000000000000;
    v7 = 0x6E6564646968;
    v8 = a2;
    if ((_BYTE)a2)
      goto LABEL_6;
LABEL_9:
    v9 = 0xD000000000000015;
    goto LABEL_11;
  }
  v6 = 0x8000000231425270;
  v7 = 0xD000000000000014;
  v8 = a2;
  if (!(_BYTE)a2)
    goto LABEL_9;
LABEL_6:
  if (v8 == 1)
  {
    v5 = 0x8000000231425270;
    v9 = 0xD000000000000014;
  }
  else
  {
    v5 = 0xE600000000000000;
    v9 = 0x6E6564646968;
  }
LABEL_11:
  v10 = a2 >> 8;
  if (v7 == v9 && v6 == v5)
  {
    swift_bridgeObjectRelease_n();
    if (v10 != BYTE1(a1))
      return 0;
LABEL_17:
    v13 = 0x8000000231425250;
    if (BYTE2(a1))
    {
      if (BYTE2(a1) == 1)
      {
        v14 = 0x8000000231425270;
        v15 = 0xD000000000000014;
        v16 = BYTE2(a2);
        if (!BYTE2(a2))
          goto LABEL_25;
LABEL_22:
        if (v16 == 1)
        {
          v13 = 0x8000000231425270;
        }
        else
        {
          v13 = 0xE600000000000000;
          v4 = 0x6E6564646968;
        }
        goto LABEL_27;
      }
      v14 = 0xE600000000000000;
      v15 = 0x6E6564646968;
      v16 = BYTE2(a2);
      if (BYTE2(a2))
        goto LABEL_22;
    }
    else
    {
      v15 = 0xD000000000000015;
      v14 = 0x8000000231425250;
      v16 = BYTE2(a2);
      if (BYTE2(a2))
        goto LABEL_22;
    }
LABEL_25:
    v4 = 0xD000000000000015;
LABEL_27:
    v17 = HIBYTE(a1);
    v18 = HIBYTE(a2);
    if (v15 == v4 && v14 == v13)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_31;
    }
    v19 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
LABEL_31:
      if (v17 == v18)
        return 1;
    }
    return 0;
  }
  v11 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v11 & 1) != 0 && v10 == BYTE1(a1))
    goto LABEL_17;
  return result;
}

uint64_t _s5Heart26PromotionAvailabilityStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_231414F74();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_2313CA504()
{
  unint64_t result;

  result = qword_255ED0C90;
  if (!qword_255ED0C90)
  {
    result = MEMORY[0x2348DE248](&unk_2314218F8, &type metadata for PromotionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED0C90);
  }
  return result;
}

unint64_t sub_2313CA548()
{
  unint64_t result;

  result = qword_255ED0C98;
  if (!qword_255ED0C98)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for PromotionAvailabilityState, &type metadata for PromotionAvailabilityState);
    atomic_store(result, (unint64_t *)&qword_255ED0C98);
  }
  return result;
}

uint64_t sub_2313CA58C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000231431530)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_231415070();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

_QWORD *sub_2313CA610(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  _BYTE v10[16];

  sub_2313CB228(0, &qword_255ED0CC8, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v10[-v6];
  v8 = sub_2312CEA5C(a1, a1[3]);
  sub_2313CA504();
  sub_23141516C();
  if (!v1)
  {
    sub_2313CB284();
    sub_231414FD4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[15];
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

unint64_t sub_2313CA74C()
{
  unint64_t result;

  result = qword_255ED0CA0;
  if (!qword_255ED0CA0)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for PromotionAvailabilityState, &type metadata for PromotionAvailabilityState);
    atomic_store(result, (unint64_t *)&qword_255ED0CA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionAvailabilityState()
{
  return &type metadata for PromotionAvailabilityState;
}

ValueMetadata *type metadata accessor for PromotionUserData()
{
  return &type metadata for PromotionUserData;
}

uint64_t sub_2313CA7B8()
{
  return type metadata accessor for HeartPromotionAvailability();
}

uint64_t type metadata accessor for HeartPromotionAvailability()
{
  uint64_t result;

  result = qword_25415B6E8;
  if (!qword_25415B6E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2313CA7FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2313CA8E4(319, &qword_25415D0B0);
  if (v0 <= 0x3F)
  {
    sub_2313CA8E4(319, &qword_25415D0B8);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_2313CA8E4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231413E58();
    if (!v4)
      atomic_store(v3, a2);
  }
}

_DWORD *initializeBufferWithCopyOfBuffer for HeartFeaturePromotionResult(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeartFeaturePromotionResult(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[4])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartFeaturePromotionResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartFeaturePromotionResult()
{
  return &type metadata for HeartFeaturePromotionResult;
}

uint64_t getEnumTagSinglePayload for HeartPromotionResult(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartPromotionResult(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313CAAA8 + 4 * byte_2314215A5[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_2313CAADC + 4 * byte_2314215A0[v4]))();
}

uint64_t sub_2313CAADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313CAAE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2313CAAECLL);
  return result;
}

uint64_t sub_2313CAAF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2313CAB00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2313CAB04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313CAB0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeartPromotionResult()
{
  return &type metadata for HeartPromotionResult;
}

uint64_t storeEnumTagSinglePayload for PromotionUserData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2313CAB68 + 4 * byte_2314215AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2313CAB88 + 4 * byte_2314215AF[v4]))();
}

_BYTE *sub_2313CAB68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2313CAB88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313CAB90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313CAB98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313CABA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313CABA8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PromotionUserData.CodingKeys()
{
  return &type metadata for PromotionUserData.CodingKeys;
}

unint64_t sub_2313CABC8()
{
  unint64_t result;

  result = qword_255ED0CA8;
  if (!qword_255ED0CA8)
  {
    result = MEMORY[0x2348DE248](&unk_231421870, &type metadata for PromotionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED0CA8);
  }
  return result;
}

unint64_t sub_2313CAC10()
{
  unint64_t result;

  result = qword_255ED0CB0;
  if (!qword_255ED0CB0)
  {
    result = MEMORY[0x2348DE248](&unk_2314217E0, &type metadata for PromotionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED0CB0);
  }
  return result;
}

unint64_t sub_2313CAC58()
{
  unint64_t result;

  result = qword_255ED0CB8;
  if (!qword_255ED0CB8)
  {
    result = MEMORY[0x2348DE248](&unk_231421808, &type metadata for PromotionUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED0CB8);
  }
  return result;
}

void sub_2313CAC9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C158)
  {
    sub_2312DF79C(255, &qword_25415C150);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C158);
  }
}

uint64_t sub_2313CAD00()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313CAD2C()
{
  uint64_t v0;

  return sub_2313C9D80(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_2313CAD44()
{
  unint64_t result;

  result = qword_25415D550;
  if (!qword_25415D550)
  {
    type metadata accessor for HeartPromotionAvailability();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D550);
  }
  return result;
}

void sub_2313CAD7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C120)
  {
    type metadata accessor for HeartPromotionAvailability();
    sub_2312D1E78(255, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    v0 = sub_231411CC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C120);
  }
}

uint64_t sub_2313CADF0(void **a1)
{
  return sub_2313C9F64(a1);
}

uint64_t sub_2313CAE14(uint64_t a1, void **a2)
{
  return sub_2313CA000(a1, a2);
}

uint64_t sub_2313CAE38(void **a1)
{
  return sub_2313C9F64(a1);
}

uint64_t sub_2313CAE5C(uint64_t a1, void **a2)
{
  return sub_2313CA000(a1, a2);
}

id sub_2313CAE80(char a1)
{
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  id v17;
  id v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v23;
  void *v24;
  void *v25;

  while (1)
  {
    v2 = a1;
    v3 = sub_23141357C();
    v4 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2312D1E78(0, &qword_25415C140, v7);
    v9 = MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x24BDAC7A8](v9);
    v13 = (char *)&v23 - v12;
    if (!v2)
      break;
    if (v2 == 1)
    {
      sub_2313CAD7C();
      swift_getKeyPath();
      swift_getKeyPath();
      v24 = v1;
      v14 = v1;
      sub_231411CB0();

      swift_release();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
      {
        v15 = (void (*)(uint64_t))MEMORY[0x24BE45750];
        v16 = (uint64_t)v11;
LABEL_7:
        sub_2312F1A20(v16, &qword_25415C140, v15);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v11, v3);
      v19 = (void (*)(uint64_t))MEMORY[0x24BE45750];
      v20 = (uint64_t)v11;
      goto LABEL_12;
    }
    v18 = 0;
    if ((sub_2313CAE80(0) & 1) == 0)
      return v18;
    a1 = 1;
    v1 = v25;
  }
  sub_2313CAD7C();
  swift_getKeyPath();
  swift_getKeyPath();
  v24 = v1;
  v17 = v1;
  sub_231411CB0();

  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3))
  {
    v15 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    v16 = (uint64_t)v13;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v13, v3);
  v19 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  v20 = (uint64_t)v13;
LABEL_12:
  sub_2312F1A20(v20, &qword_25415C140, v19);
  v21 = (void *)sub_231413588();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v18 = objc_msgSend(v21, sel_areAllRequirementsSatisfied);

  return v18;
}

uint64_t sub_2313CB174()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313CB198()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313CB1BC(uint64_t a1)
{
  uint64_t v1;

  return sub_2313C74A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2313CB1C4()
{
  return swift_deallocObject();
}

uint64_t sub_2313CB1D4()
{
  return sub_2313C779C();
}

uint64_t sub_2313CB1DC(uint64_t a1)
{
  uint64_t v1;

  return sub_2313C6FD8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_2313CB1E4()
{
  unint64_t result;

  result = qword_255ED0CC0;
  if (!qword_255ED0CC0)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for PromotionAvailabilityState, &type metadata for PromotionAvailabilityState);
    atomic_store(result, (unint64_t *)&qword_255ED0CC0);
  }
  return result;
}

void sub_2313CB228(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2313CA504();
    v7 = a3(a1, &type metadata for PromotionUserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2313CB284()
{
  unint64_t result;

  result = qword_255ED0CD0;
  if (!qword_255ED0CD0)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for PromotionAvailabilityState, &type metadata for PromotionAvailabilityState);
    atomic_store(result, (unint64_t *)&qword_255ED0CD0);
  }
  return result;
}

uint64_t _s5Heart26PromotionAvailabilityStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313CB314 + 4 * byte_2314215B9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2313CB348 + 4 * byte_2314215B4[v4]))();
}

uint64_t sub_2313CB348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313CB350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313CB358);
  return result;
}

uint64_t sub_2313CB364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313CB36CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2313CB370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313CB378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeartPromotionType()
{
  return &type metadata for HeartPromotionType;
}

unint64_t sub_2313CB398()
{
  unint64_t result;

  result = qword_255ED0CD8;
  if (!qword_255ED0CD8)
  {
    result = MEMORY[0x2348DE248](&unk_231421B04, &type metadata for HeartPromotionType);
    atomic_store(result, (unint64_t *)&qword_255ED0CD8);
  }
  return result;
}

void sub_2313CB3E0(char a1)
{
  uint64_t v2;

  v2 = sub_23141177C();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

id sub_2313CB458()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v5 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v6 = (int *)type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
  v1[3] = (uint64_t)v6;
  v1[4] = (uint64_t)&off_25002BA20;
  v7 = sub_2312DFCA0(v1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v7, v0, v2);
  v8 = type metadata accessor for AFibBurdenPDFChartPointProviderFactory();
  v9 = *(void **)(v0 + *(int *)(v8 + 24));
  v10 = *(_QWORD *)(v0 + *(int *)(v8 + 20));
  *(_QWORD *)(v4 - 56) = v10;
  *(uint64_t *)((char *)v7 + v6[5]) = v10;
  *(uint64_t *)((char *)v7 + v6[6]) = v5;
  *(uint64_t *)((char *)v7 + v6[7]) = (uint64_t)v9;
  v11 = v9;
  return *(id *)(v4 - 56);
}

void sub_2313CB614()
{
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  JUMPOUT(0x2313CB638);
}

void sub_2313CB6A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD29A0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v0, v2);
  v5 = *(void **)(v0 + *(int *)(type metadata accessor for AFibBurdenPDFChartPointProviderFactory() + 20));
  v1[3] = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v1[4] = (uint64_t)&off_250023B80;
  sub_2312DFCA0(v1);
  v6 = v5;
  JUMPOUT(0x2313CB730);
}

uint64_t type metadata accessor for AFibBurdenPDFChartPointProviderFactory()
{
  uint64_t result;

  result = qword_255ED0D38;
  if (!qword_255ED0D38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313CB78C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313CB798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23141177C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2313CB814()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313CB820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23141177C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

id sub_2313CB898()
{
  char *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithTitle_detailText_icon_contentLayout_, v4, 0, v7, 2);

  return v8;
}

void sub_2313CBA40()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();

  v4 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v4, sel_setHidesBackButton_, 1);

}

uint64_t sub_2313CBBD4(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result;
  char *v6;

  result = MEMORY[0x2348DE3BC](&a1[OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate]);
  if (result)
  {
    v6 = a1;
    a3();

    return sub_2314130CC();
  }
  return result;
}

id sub_2313CBC98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingSetupCompleteViewController()
{
  return objc_opt_self();
}

uint64_t sub_2313CBCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart50CardioFitnessOnboardingSetupCompleteViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313CBD30(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446722;
    nullsub_1(ObjectType);
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, &v15);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_23133180C(0xD00000000000002FLL, 0x8000000231430950, &v15);
    sub_231414CBC();
    *(_WORD *)(v9 + 22) = 2082;
    v13 = sub_2314146E0();
    sub_23133180C(v13, v14, &v15);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);

  }
  else
  {

  }
  sub_2313CC68C(v6, 0, a2);
}

void sub_2313CBF84(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446722;
    nullsub_1(ObjectType);
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, &v15);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_23133180C(0xD00000000000002FLL, 0x8000000231430950, &v15);
    sub_231414CBC();
    *(_WORD *)(v9 + 22) = 2082;
    v13 = sub_2314146E0();
    sub_23133180C(v13, v14, &v15);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);

  }
  else
  {

  }
  sub_2313CC708(v6, 0, a2);
}

uint64_t sub_2313CC1DC(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136446722;
    nullsub_1(ObjectType);
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, &v16);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_23133180C(0xD00000000000002FLL, 0x8000000231430950, &v16);
    sub_231414CBC();
    *(_WORD *)(v9 + 22) = 2082;
    v13 = sub_2314146E0();
    sub_23133180C(v13, v14, &v16);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);

  }
  else
  {

  }
  return sub_2313CC784(v6, 0, a2);
}

void sub_2313CC434(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446722;
    nullsub_1(ObjectType);
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, &v15);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_23133180C(0xD00000000000002FLL, 0x8000000231430950, &v15);
    sub_231414CBC();
    *(_WORD *)(v9 + 22) = 2082;
    v13 = sub_2314146E0();
    sub_23133180C(v13, v14, &v15);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: Primary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);

  }
  else
  {

  }
  sub_2313CC8AC(v6, 0, a2);
}

void sub_2313CC68C(void *a1, char a2, void *a3)
{
  uint64_t ObjectType;
  id v7;
  id v8;

  ObjectType = swift_getObjectType();
  v8 = a3;
  v7 = a1;
  sub_231399000(v8, 0, v7, (uint64_t)&off_25001FD60, a2 & 1, ObjectType);

}

void sub_2313CC708(void *a1, char a2, void *a3)
{
  uint64_t ObjectType;
  id v7;
  id v8;

  ObjectType = swift_getObjectType();
  v8 = a3;
  v7 = a1;
  sub_231399000(v8, 1, v7, (uint64_t)&off_250021F90, a2 & 1, ObjectType);

}

uint64_t sub_2313CC784(void *a1, char a2, void *a3)
{
  uint64_t ObjectType;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;

  ObjectType = swift_getObjectType();
  v7 = a2 & 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_BYTE *)(v8 + 24) = 2;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = &off_250023668;
  *(_BYTE *)(v8 + 48) = v7;
  *(_QWORD *)(v8 + 56) = ObjectType;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_2313CCBAC;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a1;
  v10[4] = &off_250023668;
  v10[5] = sub_2313CCBE8;
  v10[6] = v9;
  v10[7] = ObjectType;
  v11 = a1;
  v12 = a3;
  v13 = v11;
  swift_retain();
  swift_retain();
  sub_231401FD4((uint64_t)sub_2313CCC24, (uint64_t)v10);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_2313CC8AC(void *a1, char a2, void *a3)
{
  uint64_t ObjectType;
  id v7;
  id v8;

  ObjectType = swift_getObjectType();
  v8 = a3;
  v7 = a1;
  sub_231399000(v8, 3, v7, (uint64_t)&off_250028D20, a2 & 1, ObjectType);

}

void sub_2313CC928(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = a1;
  v7 = sub_231413768();
  v8 = sub_23141498C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446722;
    nullsub_1(ObjectType);
    v11 = sub_2314151A8();
    sub_23133180C(v11, v12, &v15);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_23133180C(0xD000000000000031, 0x8000000231431760, &v15);
    sub_231414CBC();
    *(_WORD *)(v9 + 22) = 2082;
    v13 = sub_2314146E0();
    sub_23133180C(v13, v14, &v15);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: Secondary button tapped for stage: %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);

  }
  else
  {

  }
  sub_2313CC8AC(v6, 1, a2);
}

uint64_t sub_2313CCB80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313CCBAC()
{
  uint64_t v0;

  return sub_231399000(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_2313CCBC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313CCBE8(uint64_t a1)
{
  uint64_t v1;

  return sub_23139A0D4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_2313CCBF0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_2313CCC24(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23139A864(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD))(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_2313CCC34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2313CCC60()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
  return sub_2313A191C(1, 0, 0);
}

uint64_t sub_2313CCD90()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingViewControllerFactory()
{
  return objc_opt_self();
}

uint64_t *sub_2313CCDDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231411248();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    sub_231412A90();
  }
  return a1;
}

uint64_t sub_2313CCE70(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313CCEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  sub_231412A90();
  return a1;
}

uint64_t sub_2313CCF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2313CCF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_2313CCFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2313CD064()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313CD070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_231411248();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2313CD0EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313CD0F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231411248();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartPoint()
{
  uint64_t result;

  result = qword_255ED0EB8;
  if (!qword_255ED0EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313CD1AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411248();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2313CD234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB798;
  if (!qword_255ECB798)
  {
    v1 = sub_231411248();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDCB890], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB798);
  }
  return result;
}

uint64_t sub_2313CD27C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_231411248();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartPoint.Tag(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2313CD2F4 + 4 * asc_231421CE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2313CD314 + 4 * byte_231421CE5[v4]))();
}

_BYTE *sub_2313CD2F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2313CD314(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313CD31C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313CD324(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313CD32C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313CD334(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartPoint.Tag()
{
  return &type metadata for AFibBurdenPDFChartPoint.Tag;
}

unint64_t sub_2313CD354()
{
  unint64_t result;

  result = qword_255ED0EF8;
  if (!qword_255ED0EF8)
  {
    result = MEMORY[0x2348DE248](&unk_231421DA4, &type metadata for AFibBurdenPDFChartPoint.Tag);
    atomic_store(result, (unint64_t *)&qword_255ED0EF8);
  }
  return result;
}

uint64_t sub_2313CD398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;

  v1 = v0;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - v3;
  sub_2313CE270();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313CE354();
  v11 = v10;
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
  v15 = sub_2313A1E6C(0);
  v16 = (void *)sub_2313A1C94();

  v21 = v16;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_2313CE2F0();
  sub_2312CCC24((unint64_t *)&qword_25415BAC8, (uint64_t (*)(uint64_t))sub_2313CE2F0, MEMORY[0x24BDB9AF8]);
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v21 = (id)sub_231414A94();
  v17 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  sub_2312CCC24(&qword_255ED1000, (uint64_t (*)(uint64_t))sub_2313CE270, MEMORY[0x24BDB96C0]);
  sub_231308748();
  sub_231413F54();
  sub_231320A54((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2312CCC24(&qword_255ED1008, (uint64_t (*)(uint64_t))sub_2313CE354, MEMORY[0x24BDB9A08]);
  v18 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v11);
  return v18;
}

uint64_t sub_2313CD63C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = v0;
  v2 = *v0;
  sub_23135E608();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[4];
  if (v8)
    v9 = v8;
  else
    v9 = sub_2313CD398();
  v12[1] = v9;
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  sub_2312D75F0();
  sub_2312D6DD8(0, &qword_255ECE4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2312CCC24((unint64_t *)&qword_255ECE4F0, (uint64_t (*)(uint64_t))sub_23135E608, MEMORY[0x24BDB96C0]);
  sub_231413E64();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_231412DFC();
  sub_231412544();
  swift_release();
  sub_23135E8BC();
  sub_2312CCC24(&qword_255ECE500, (uint64_t (*)(uint64_t))sub_23135E8BC, MEMORY[0x24BE428C8]);
  v10 = sub_231412568();
  swift_release();
  sub_2312CCC24(&qword_255ECE508, (uint64_t (*)(uint64_t))sub_23135E94C, MEMORY[0x24BE43020]);
  return v10;
}

uint64_t sub_2313CD868@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[5];

  v4 = sub_231411644();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2314127F0();
    v9 = swift_allocObject();
    v14 = xmmword_231416A30;
    *(_OWORD *)(v9 + 16) = xmmword_231416A30;
    sub_231331578();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v14;
    sub_2313CE0D8(v15);
    *(_QWORD *)(v10 + 56) = &type metadata for CenteredLabelWithSpinnerItem;
    *(_QWORD *)(v10 + 64) = sub_2313CE1F8();
    v11 = (_OWORD *)swift_allocObject();
    *(_QWORD *)(v10 + 32) = v11;
    v12 = v15[3];
    v11[3] = v15[2];
    v11[4] = v12;
    v11[5] = v15[4];
    v13 = v15[1];
    v11[1] = v15[0];
    v11[2] = v13;
    sub_231411638();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    result = sub_2314127E4();
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v9;
  return result;
}

uint64_t sub_2313CDA18()
{
  type metadata accessor for CenteredLabelWithSpinnerCell();
  sub_2312CCC24(&qword_255ED0FE0, (uint64_t (*)(uint64_t))type metadata accessor for CenteredLabelWithSpinnerCell, (uint64_t)&unk_231417E90);
  return sub_2314149EC();
}

uint64_t sub_2313CDA6C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t);
  _BYTE v16[32];

  sub_2312D6DD8(0, &qword_255ED0FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE42E30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v16[-v1];
  v3 = sub_2314125EC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v16[-v8];
  sub_2314125E0();
  v10 = (void (*)(_BYTE *, _QWORD))sub_231412598();
  *(_QWORD *)(v11 + 16) = 0;
  v10(v16, 0);
  v12 = sub_2314125A4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_2314125D4();
  sub_231412E8C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  v13 = sub_231412580();
  v14 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v14(v7, v3);
  v14(v9, v3);
  return v13;
}

void sub_2313CDBE0(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  SEL *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v4 = v3;
    if (qword_25415DF98 != -1)
      swift_once();
    v5 = sub_231413780();
    sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
    v6 = v3;
    v7 = v3;
    v8 = sub_231413768();
    v9 = sub_231414974();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v32 = v11;
      *(_DWORD *)v10 = 136446466;
      v12 = sub_2314151A8();
      sub_23133180C(v12, v13, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v14 = v3;
      sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
      v15 = sub_2314146E0();
      sub_23133180C(v15, v16, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312E1778(v3);
      sub_2312E1778(v3);
      _os_log_impl(&dword_2312C8000, v8, v9, "[%{public}s] Failed to get retrocompute state: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);

      sub_2312E1778(v3);
    }
    else
    {
      sub_2312E1778(v3);
      sub_2312E1778(v3);

    }
    v29 = 0;
  }
  else
  {
    v17 = qword_25415DF98;
    v18 = v3;
    if (v17 != -1)
      swift_once();
    v19 = sub_231413780();
    sub_2312CE3B8(v19, (uint64_t)qword_254162FF0);
    v20 = v18;
    v21 = sub_231413768();
    v22 = sub_23141498C();
    v23 = (SEL *)&unk_250035000;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v32 = v25;
      *(_DWORD *)v24 = 136446466;
      v26 = sub_2314151A8();
      v31 = sub_23133180C(v26, v27, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      objc_msgSend(v20, sel_status, v31, v32);
      sub_2312E1778(v3);
      sub_231414CBC();
      sub_2312E1778(v3);
      _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s] Received retrocompute status: %ld", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      v28 = v24;
      v23 = (SEL *)&unk_250035000;
      MEMORY[0x2348DE308](v28, -1, -1);
    }
    else
    {
      sub_2312E1778(v3);
      sub_2312E1778(v3);
    }

    v30 = objc_msgSend(v20, v23[249]);
    sub_2312E1778(v3);
    v29 = v30 == (id)2;
  }
  *a2 = v29;
}

uint64_t sub_2313CE024()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s29CardioFitnessSpinnerComponentCMa()
{
  return objc_opt_self();
}

uint64_t sub_2313CE070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  sub_231412A90();
  return v1;
}

uint64_t sub_2313CE0A0()
{
  return sub_2313CD63C();
}

uint64_t sub_2313CE0C0()
{
  return swift_deallocObject();
}

uint64_t sub_2313CE0D0@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2313CD868(a1, a2);
}

uint64_t sub_2313CE0D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_231411374();
  v6 = v5;

  if (qword_255ECA960 != -1)
    swift_once();
  v7 = unk_255ED2B10;
  *a1 = qword_255ED2B08;
  a1[1] = v7;
  a1[2] = 0xD000000000000014;
  a1[3] = 0x80000002314318B0;
  a1[4] = v4;
  a1[5] = v6;
  a1[6] = 0x4020000000000000;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return sub_231412A90();
}

unint64_t sub_2313CE1F8()
{
  unint64_t result;

  result = qword_255ED0FE8;
  if (!qword_255ED0FE8)
  {
    result = MEMORY[0x2348DE248](&unk_231417F10, &type metadata for CenteredLabelWithSpinnerItem);
    atomic_store(result, (unint64_t *)&qword_255ED0FE8);
  }
  return result;
}

uint64_t sub_2313CE23C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2313CE270()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0FF0)
  {
    sub_2313CE2F0();
    sub_2312CCC24((unint64_t *)&qword_25415BAC8, (uint64_t (*)(uint64_t))sub_2313CE2F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0FF0);
  }
}

void sub_2313CE2F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BAD0)
  {
    sub_2313A29B4();
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BAD0);
  }
}

void sub_2313CE354()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED0FF8)
  {
    sub_2313CE270();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ED1000, (uint64_t (*)(uint64_t))sub_2313CE270, MEMORY[0x24BDB96C0]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED0FF8);
  }
}

uint64_t sub_2313CE408()
{
  return swift_deallocObject();
}

void sub_2313CE418(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  sub_2313CDBE0(a1, a2);
}

uint64_t storeEnumTagSinglePayload for ArticleIdentifiers(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2313CE46C + 4 * byte_231421E35[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2313CE4A0 + 4 * byte_231421E30[v4]))();
}

uint64_t sub_2313CE4A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313CE4A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313CE4B0);
  return result;
}

uint64_t sub_2313CE4BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313CE4C4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2313CE4C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313CE4D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleIdentifiers()
{
  return &type metadata for ArticleIdentifiers;
}

uint64_t sub_2313CE4EC()
{
  return sub_2312CCC24(&qword_255ED1010, (uint64_t (*)(uint64_t))sub_2313CE518, MEMORY[0x24BEE12E0]);
}

void sub_2313CE518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1018)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1018);
  }
}

uint64_t sub_2313CE56C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x8000000231425250;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000014;
    else
      v4 = 0x6E6564646968;
    if (v3 == 1)
      v5 = 0x8000000231425270;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000014;
      else
        v7 = 0x6E6564646968;
      if (v6 == 1)
        v2 = 0x8000000231425270;
      else
        v2 = 0xE600000000000000;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD000000000000015;
    v5 = 0x8000000231425250;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD000000000000015)
  {
LABEL_21:
    v8 = sub_231415070();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2313CE668(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2313CE6A8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2313CE740 + 4 * byte_231421E3F[a2]))(0x694465746F6D6572);
}

uint64_t sub_2313CE740(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x694465746F6D6572 && v1 == 0xED0000656C626173)
    v2 = 1;
  else
    v2 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2313CE820(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_2313CE86C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_2313CE8E0 + 4 * byte_231421E49[a2]))(v2 + 17);
}

uint64_t sub_2313CE8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 17 && v2 == 0x80000002314252C0)
    v3 = 1;
  else
    v3 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2313CE984(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2313CE9C0 + 4 * byte_231421E4E[a1]))(0xD000000000000024, 0x8000000231425290);
}

uint64_t sub_2313CE9C0()
{
  uint64_t v0;

  return v0 + 17;
}

void sub_2313CEA14(char a1)
{
  sub_231415118();
  __asm { BR              X10 }
}

uint64_t sub_2313CEA5C()
{
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

uint64_t sub_2313CEB00()
{
  sub_231415118();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

void sub_2313CEBA0(char a1)
{
  sub_231415118();
  __asm { BR              X10 }
}

uint64_t sub_2313CEBFC()
{
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

void sub_2313CEC7C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2313CECC4()
{
  sub_231414710();
  return swift_bridgeObjectRelease();
}

void sub_2313CED2C(uint64_t a1, char a2)
{
  sub_231415118();
  __asm { BR              X10 }
}

uint64_t sub_2313CED84()
{
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

void sub_2313CEE04(uint64_t a1, char a2)
{
  sub_231415118();
  __asm { BR              X10 }
}

uint64_t sub_2313CEE48()
{
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

uint64_t sub_2313CEEEC()
{
  sub_231415118();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

void sub_2313CEF88(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

unint64_t sub_2313CEFC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  unint64_t result;

  v28[3] = &type metadata for HeartRateArticleDataProvider;
  v28[4] = sub_23137B4F4();
  result = sub_23137B538();
  v28[5] = result;
  return result;
}

id sub_2313CF198(char a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)qword_250028FF0[a1];
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *v1);
}

void sub_2313CF1F0(char *a1)
{
  sub_2313CE820(*a1);
}

void sub_2313CF1FC()
{
  char *v0;

  sub_2313CEBA0(*v0);
}

void sub_2313CF204(uint64_t a1)
{
  char *v1;

  sub_2313CEC7C(a1, *v1);
}

void sub_2313CF20C(uint64_t a1)
{
  char *v1;

  sub_2313CED2C(a1, *v1);
}

uint64_t sub_2313CF214@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2313CF6DC();
  *a1 = result;
  return result;
}

uint64_t sub_2313CF240@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2313CE984(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2313CF268(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001F208;
}

unint64_t sub_2313CF27C()
{
  unint64_t result;

  result = qword_255ED1020;
  if (!qword_255ED1020)
  {
    result = MEMORY[0x2348DE248](&unk_231421F44, &type metadata for ArticleIdentifiers);
    atomic_store(result, (unint64_t *)&qword_255ED1020);
  }
  return result;
}

unint64_t sub_2313CF2C0()
{
  unint64_t result;

  result = qword_25415D4F0;
  if (!qword_25415D4F0)
  {
    result = MEMORY[0x2348DE248](&unk_231422628, &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden);
    atomic_store(result, (unint64_t *)&qword_25415D4F0);
  }
  return result;
}

unint64_t sub_2313CF304()
{
  unint64_t result;

  result = qword_25415D4F8;
  if (!qword_25415D4F8)
  {
    result = MEMORY[0x2348DE248](&unk_2314225C0, &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden);
    atomic_store(result, (unint64_t *)&qword_25415D4F8);
  }
  return result;
}

unint64_t sub_2313CF348()
{
  unint64_t result;

  result = qword_25415D4E0;
  if (!qword_25415D4E0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A2E0, &type metadata for AFibBurdenArticleProviderLearnAboutAFib);
    atomic_store(result, (unint64_t *)&qword_25415D4E0);
  }
  return result;
}

unint64_t sub_2313CF38C()
{
  unint64_t result;

  result = qword_25415D4E8;
  if (!qword_25415D4E8)
  {
    result = MEMORY[0x2348DE248](&unk_23141A278, &type metadata for AFibBurdenArticleProviderLearnAboutAFib);
    atomic_store(result, (unint64_t *)&qword_25415D4E8);
  }
  return result;
}

unint64_t sub_2313CF3D0()
{
  unint64_t result;

  result = qword_25415E5C0;
  if (!qword_25415E5C0)
  {
    result = MEMORY[0x2348DE248](&unk_231419104, &type metadata for CardioFitnessOverviewArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25415E5C0);
  }
  return result;
}

unint64_t sub_2313CF414()
{
  unint64_t result;

  result = qword_25415E5C8;
  if (!qword_25415E5C8)
  {
    result = MEMORY[0x2348DE248](&unk_23141909C, &type metadata for CardioFitnessOverviewArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25415E5C8);
  }
  return result;
}

double sub_2313CF458@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  os_log_t v18;
  id v19;
  char v20;
  double result;
  uint64_t v22;
  os_log_t v23;
  int v24;
  id v25;
  uint64_t v26;
  id v27;

  v6 = sub_231413780();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412A90();
  v10 = sub_2313CF6DC();
  if (v10 == 5)
  {
    sub_231412148();
    swift_bridgeObjectRetain_n();
    v11 = sub_231413768();
    v12 = sub_231414974();
    v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      v14 = swift_slowAlloc();
      v24 = v13;
      v15 = v14;
      v25 = (id)swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v15 = 136446466;
      v23 = v11;
      v16 = sub_2314146E0();
      v26 = sub_23133180C(v16, v17, (uint64_t *)&v27);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      sub_231412A90();
      v26 = sub_23133180C(a1, a2, (uint64_t *)&v27);
      sub_231414CBC();
      swift_bridgeObjectRelease_n();
      v18 = v23;
      _os_log_impl(&dword_2312C8000, v23, (os_log_type_t)v24, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v15, 0x16u);
      v19 = v25;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  else
  {
    v20 = v10;
    v25 = (id)sub_231412664();
    sub_2313CEF88((uint64_t)v25, v20);

  }
  return result;
}

uint64_t sub_2313CF6DC()
{
  unint64_t v0;

  v0 = sub_231414F74();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

ValueMetadata *type metadata accessor for EducationArticleTileDataController()
{
  return &type metadata for EducationArticleTileDataController;
}

uint64_t type metadata accessor for AFibFeaturesPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_255ED1038;
  if (!qword_255ED1038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313CF770()
{
  return swift_initClassMetadata2();
}

void sub_2313CF7B8()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  _QWORD v15[2];

  ObjectType = swift_getObjectType();
  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v15[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = objc_allocWithZone((Class)type metadata accessor for AFibFeaturesOnboardingViewController());
  v12 = (char *)sub_23140AA90();
  *(_QWORD *)&v12[qword_255ED24A8 + 8] = &off_2500290B8;
  swift_unknownObjectWeakAssign();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v12);
  sub_231413210();
  v14 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v14, sel_presentViewController_animated_completion_, v13, 1, 0);

}

uint64_t sub_2313CF9C4()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313CFA84(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  void *v20;
  void *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t ObjectType;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  char v48[40];
  _QWORD v49[4];
  _QWORD aBlock[3];
  void *v51;
  void (*v52)();
  uint64_t v53;

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v5 = v4;
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v46);
  v8 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231412F64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&ObjectType - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&ObjectType - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&ObjectType - v17;
  sub_231413210();
  if ((a1 & 1) == 0)
  {
    sub_231412F40();
    v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v18, v9);
    sub_2312CEA5C(aBlock, (uint64_t)v51);
    v20 = (void *)sub_231412EE0();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)aBlock);
    sub_231413210();
    v21 = (void *)sub_231412F4C();
    v19(v18, v9);
    sub_2314149F8();

    sub_231413210();
    sub_231412F40();
    v19(v16, v9);
    sub_2312CEA5C(v49, v49[3]);
    sub_231412EF8();
    sub_231413210();
    sub_231412F40();
    v22 = v13;
    v23 = v19;
    v19(v22, v9);
    sub_2312CEA5C(v47, v47[3]);
    sub_231412EEC();
    swift_storeEnumTagMultiPayload();
    v24 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
    v25 = sub_2313B5464(v20, (uint64_t)aBlock, (uint64_t)v48, (uint64_t)v8, 1, 1);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v47);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v49);
LABEL_3:
    sub_231413210();
    v26 = (void *)sub_231412F4C();
    v23(v18, v9);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v2;
    *(_QWORD *)(v27 + 24) = v25;
    v52 = sub_2313D0EFC;
    v53 = v27;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23130DCCC;
    v51 = &unk_2500291E0;
    v28 = _Block_copy(aBlock);
    v29 = v2;
    v30 = v25;
    swift_release();
    objc_msgSend(v26, sel_dismissViewControllerAnimated_completion_, 1, v28);

    _Block_release(v28);
    return;
  }
  sub_231412F40();
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v18, v9);
  sub_2312CEA5C(aBlock, (uint64_t)v51);
  v31 = (void *)sub_231412EE0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)aBlock);
  if (qword_255ECAAA0 != -1)
    swift_once();
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C090]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v31, qword_255ED2EF8, 3, v2);

  v33 = qword_255ED1030;
  v34 = *(void **)&v2[qword_255ED1030];
  *(_QWORD *)&v2[qword_255ED1030] = v32;

  v35 = *(void **)&v2[v33];
  if (v35)
  {
    sub_2312E43A4();
    v36 = v35;
    v37 = (void *)sub_231414BE4();
    objc_msgSend(v36, sel_setHasAtrialFibrillationDiagnosis_, v37);

    v38 = *(void **)&v2[v33];
    if (v38)
    {
      v39 = (char *)objc_msgSend(v38, sel_onboardingNavigationController);
      if (v39)
      {
        v25 = v39;
        goto LABEL_3;
      }
    }
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v40 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
  v41 = v45;
  v42 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v40, v5);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  aBlock[0] = 0;
  sub_2314135B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v5);
}

uint64_t sub_2313CFFDC()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313D00A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  v7 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, a2, 1, 0);

}

void sub_2313D0154()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  _QWORD v22[4];

  ObjectType = swift_getObjectType();
  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22[-1] - v6;
  sub_2312D4A68();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v13 = sub_2312CE3B8(v9, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v22[0] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_231413210();
  sub_231412F40();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v7, v1);
  sub_2312CEA5C(v22, v22[3]);
  v15 = (void *)sub_231412EE0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_231311F68();
  v16 = objc_allocWithZone((Class)sub_231411C20());
  v17 = (void *)sub_231411C14();

  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v17);
  sub_231413210();
  v19 = (void *)sub_231412F4C();
  v14(v5, v1);
  v20 = objc_msgSend(v19, sel_presentedViewController);

  if (v20)
  {
    objc_msgSend(v20, sel_presentViewController_animated_completion_, v18, 1, 0);

  }
}

uint64_t sub_2313D0474()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313D053C()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[2];

  ObjectType = swift_getObjectType();
  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v12[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_231413210();
  v11 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v11, sel_dismissViewControllerAnimated_completion_, 1, 0);

}

uint64_t sub_2313D06E0()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313D07A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  _QWORD v20[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v12 = sub_2312CE3B8(v8, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v20[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = *(void **)(v1 + qword_255ED1030);
  *(_QWORD *)(v1 + qword_255ED1030) = 0;

  sub_231413210();
  v14 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = objc_msgSend(v14, sel_tabBarController);

  if (v15)
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_atrialFibrillationEventType);
    if (v16)
    {
      v17 = v16;
      type metadata accessor for AFibFeaturesPromotionTileActionHandler();
      sub_2312CCC24(&qword_255ECF600, (uint64_t (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler, (uint64_t)&unk_231422060);
      v18 = (void *)sub_2314131B0();
      if (v18)
      {
        v19 = v18;
        sub_231328348(v18, 0);

        v15 = v17;
        v17 = v19;
      }

      v15 = v17;
    }

  }
}

uint64_t sub_2313D09F8()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313D0AC0(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313D07A8();

}

void sub_2313D0AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v8 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v10[1] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = *(void **)(v1 + qword_255ED1030);
  *(_QWORD *)(v1 + qword_255ED1030) = 0;

}

uint64_t sub_2313D0C1C()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313D0CE4(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313D0AF4();

}

uint64_t sub_2313D0D18(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_255ED1030] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_2313D0DCC()
{
  uint64_t v0;

}

id sub_2313D0DDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibFeaturesPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2313D0E10(uint64_t a1)
{

}

uint64_t sub_2313D0E20()
{
  return type metadata accessor for AFibFeaturesPromotionTileActionHandler();
}

uint64_t sub_2313D0E28()
{
  return sub_2312CCC24(&qword_255ED1090, (uint64_t (*)(uint64_t))type metadata accessor for AFibFeaturesPromotionTileActionHandler, (uint64_t)&unk_231422020);
}

uint64_t sub_2313D0E58()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0E68()
{
  return sub_2313D0C1C();
}

uint64_t sub_2313D0E70()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0E80()
{
  return sub_2313D09F8();
}

uint64_t sub_2313D0E88()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0E98()
{
  return sub_2313D06E0();
}

uint64_t sub_2313D0EA0()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0EB0()
{
  return sub_2313D0474();
}

uint64_t sub_2313D0EB8()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0EC8()
{
  return sub_2313CFFDC();
}

uint64_t sub_2313D0ED0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2313D0EFC()
{
  uint64_t v0;

  sub_2313D00A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2313D0F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313D0F14()
{
  return swift_release();
}

uint64_t sub_2313D0F1C()
{
  return swift_deallocObject();
}

uint64_t sub_2313D0F2C()
{
  return sub_2313CF9C4();
}

uint64_t sub_2313D0F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_23141177C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23141174C();
  v4 = objc_allocWithZone(MEMORY[0x24BE4A5A8]);
  v5 = (void *)sub_2314116F8();
  v6 = objc_msgSend(v4, sel_initWithCalendar_, v5);

  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_255ED2EF8 = (uint64_t)v6;
  return result;
}

id sub_2313D0FEC(uint64_t a1)
{
  uint64_t *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  os_log_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id result;
  void *v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  void *v96;
  id v97;
  char *v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  id v133;
  id v134;
  void (*v135)(uint64_t, _QWORD, uint64_t, id);
  os_log_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  id v147;
  void (*v148)(_QWORD, _QWORD, _QWORD);
  uint64_t v149;
  uint64_t v150;
  char *v151;
  __int128 v152;
  uint64_t v153;
  _QWORD v154[9];
  uint64_t v155[25];
  uint64_t v156[5];
  uint64_t v157[10];
  uint64_t v158[5];
  uint64_t v159[5];
  uint64_t v160[25];
  _QWORD v161[3];
  uint64_t v162;

  v142 = *v1;
  sub_2312CCB14();
  v147 = v3;
  v145 = *((_QWORD *)v3 - 1);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v140 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v139 = (char *)&v132 - v6;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415BBF0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v146 = (char *)&v132 - v9;
  v10 = sub_231411A4C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v151 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v141 = (uint64_t *)((char *)&v132 - v14);
  v15 = sub_231413780();
  v149 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v143 = (char *)&v132 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v132 - v21;
  v150 = a1;
  v23 = (void *)sub_231411A28();
  v24 = v23;
  v25 = (void *)sub_2314118FC();
  LOBYTE(a1) = sub_2314118F0();

  if ((a1 & 1) == 0)
  {
    v148 = (void (*)(_QWORD, _QWORD, _QWORD))v24;
    if (!v23)
      return (id)MEMORY[0x24BEE4AF8];
    v144 = v15;
    sub_231412148();
    v45 = sub_231413768();
    v46 = sub_23141498C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v154[0] = v48;
      *(_DWORD *)v47 = 136446210;
      v147 = v47 + 4;
      v161[0] = v142;
      swift_getMetatypeMetadata();
      v49 = sub_2314146E0();
      v161[0] = sub_23133180C(v49, v50, v154);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v45, v46, "[%{public}s] Creating ArticlesGeneratorPipeline for single profile", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v48, -1, -1);
      MEMORY[0x2348DE308](v47, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v149 + 8))(v18, v144);
    v51 = v148;
    sub_2313D348C(0, &qword_25415DF38, &qword_25415D520, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_231416A30;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v151, v150, v10);
    sub_231411A10();
    sub_2312CEA5C(v161, v162);
    v53 = (void *)sub_2314119C8();
    sub_2313D38E8(v53);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v161);
    sub_2313D3AFC();
    v55 = v54;
    swift_allocObject();
    v56 = sub_231413684();
    *(_QWORD *)(v52 + 56) = v55;
    *(_QWORD *)(v52 + 64) = sub_2312CCC24(&qword_25415C160, (uint64_t (*)(uint64_t))sub_2313D3AFC, MEMORY[0x24BE3F870]);
    *(_QWORD *)(v52 + 32) = v56;

    return (id)v52;
  }

  v26 = v22;
  sub_231412148();
  v27 = v141;
  v148 = *(void (**)(_QWORD, _QWORD, _QWORD))(v11 + 16);
  v148(v141, v150, v10);
  v28 = sub_231413768();
  v29 = sub_23141498C();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v32 = v10;
  v144 = v15;
  if (v31)
  {
    v33 = swift_slowAlloc();
    v137 = swift_slowAlloc();
    v154[0] = v137;
    *(_DWORD *)v33 = 136446466;
    v136 = v28;
    v161[0] = v142;
    swift_getMetatypeMetadata();
    v34 = sub_2314146E0();
    LODWORD(v135) = v30;
    v161[0] = sub_23133180C(v34, v35, v154);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    v134 = (id)(v33 + 14);
    v36 = (void *)sub_231411A28();
    v37 = v11;
    v38 = v10;
    v39 = sub_2314118E4();
    v41 = v40;

    v42 = v39;
    v32 = v38;
    v161[0] = sub_23133180C(v42, v41, v154);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v27, v38);
    v43 = v136;
    _os_log_impl(&dword_2312C8000, v136, (os_log_type_t)v135, "[%{public}s]: returning pipeline for sourceProfile %{public}s", (uint8_t *)v33, 0x16u);
    v44 = v137;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v44, -1, -1);
    MEMORY[0x2348DE308](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v149 + 8))(v26, v144);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v27, v10);

    (*(void (**)(char *, uint64_t))(v149 + 8))(v26, v15);
  }
  v57 = v150;
  v58 = v151;
  sub_231411A10();
  sub_2312CEA5C(v161, v162);
  v59 = (void *)sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v161);
  v60 = (uint64_t)v146;
  sub_231411A40();
  v135 = *(void (**)(uint64_t, _QWORD, uint64_t, id))(v145 + 56);
  v135(v60, 0, 1, v147);
  v61 = sub_23131EBC8(v60);
  v63 = v62;
  sub_2313D3B98(v60);
  v64 = objc_allocWithZone(MEMORY[0x24BDD3C70]);
  v65 = v59;
  sub_231412A90();
  v136 = v61;
  v66 = (void *)sub_23141468C();
  v137 = v63;
  swift_bridgeObjectRelease();
  v133 = objc_msgSend(v64, sel_initWithHealthStore_currentCountryCode_, v65, v66);

  v134 = v65;
  *(_OWORD *)&v154[7] = xmmword_2314220A0;
  v155[3] = sub_231411BB4();
  v155[4] = MEMORY[0x24BE48388];
  v141 = v155;
  sub_2312DFCA0(v155);
  v67 = v148;
  v148(v58, v57, v32);
  v68 = (void *)*MEMORY[0x24BDD2DD0];
  sub_2313D348C(0, &qword_25415C0D8, (unint64_t *)&unk_25415BD00, MEMORY[0x24BE48230], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_231418090;
  v70 = type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider();
  v71 = v32;
  v72 = swift_allocObject();
  *(_QWORD *)(v69 + 56) = v70;
  *(_QWORD *)(v69 + 64) = sub_2312CCC24(&qword_25415BD18, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistFeedItemProvider, (uint64_t)&unk_23141F320);
  *(_QWORD *)(v69 + 32) = v72;
  v73 = type metadata accessor for CardioFitnessPromotionFeedItemProvider();
  v74 = swift_allocObject();
  *(_QWORD *)(v69 + 96) = v73;
  *(_QWORD *)(v69 + 104) = sub_2312CCC24(&qword_25415C000, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessPromotionFeedItemProvider, (uint64_t)&unk_231424494);
  *(_QWORD *)(v69 + 72) = v74;
  v75 = v68;
  v76 = (uint64_t)v151;
  sub_231411BA8();
  v67(v76, v57, v71);
  v77 = sub_231340E7C(v76);
  v155[8] = type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
  v155[9] = sub_2312CCC24(&qword_25415C058, type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline, (uint64_t)&unk_23141C1DC);
  v155[5] = v77;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v79 = result;
    v80 = objc_msgSend(result, sel_isCompanionCapable);

    if (v80)
    {
      v81 = type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
      v148(v76, v150, v71);
      v82 = sub_2312DC784(v76);
      v83 = sub_2312CCC24(&qword_25415B848, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline, (uint64_t)&unk_2314182C8);
    }
    else
    {
      v81 = 0;
      v83 = 0;
      v82 = 0;
      v155[11] = 0;
      v155[12] = 0;
    }
    v84 = v71;
    v155[13] = v81;
    v155[14] = v83;
    v155[10] = (uint64_t)v82;
    v85 = (uint64_t)v139;
    v86 = v150;
    sub_231411A40();
    type metadata accessor for HeartFeatureStatusAvailabilityProvider();
    v87 = 4;
    v88 = swift_allocObject();
    v89 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    v90 = swift_allocObject();
    sub_23131F270(v85, v90 + v89);
    *(_QWORD *)(v88 + 16) = sub_2313D3C7C;
    *(_QWORD *)(v88 + 24) = v90;
    v132 = v84;
    v148(v76, v86, v84);
    v91 = type metadata accessor for HeartFeatureStatusGeneratorPipeline();
    swift_allocObject();
    v92 = sub_23136269C(v76, v88);
    swift_release();
    v155[18] = v91;
    v155[19] = sub_2312CCC24(&qword_25415D618, (uint64_t (*)(uint64_t))type metadata accessor for HeartFeatureStatusGeneratorPipeline, (uint64_t)&unk_23141D9D4);
    v155[15] = v92;
    v93 = v134;
    v94 = v133;
    sub_231411A40();
    v95 = (uint64_t)v146;
    sub_2312CE3D0(v85, (uint64_t)v146);
    v135(v95, 0, 1, v147);
    sub_23131EBC8(v95);
    sub_2313D3B98(v95);
    v96 = (void *)*MEMORY[0x24BDD2E00];
    v97 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
    v98 = (char *)v93;
    v99 = v96;
    v100 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v101 = objc_msgSend(v97, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v99, v98, v100);

    v102 = v140;
    sub_2312CE3D0(v85, v140);
    v103 = (char *)objc_allocWithZone((Class)type metadata accessor for HeartPromotionAvailability());
    v104 = sub_2313D34F0(v98, v94, (uint64_t)v101, v102, v103);
    sub_23136334C(v85);
    v146 = v98;

    v147 = v94;
    v105 = (uint64_t)v151;
    v106 = v132;
    v107 = v148;
    v148(v151, v86, v132);
    v108 = type metadata accessor for HeartPromotionGeneratorPipeline();
    swift_allocObject();
    v109 = sub_2313AEFF0(v105, v104);

    v155[23] = v108;
    v155[24] = sub_2312CCC24(&qword_25415D558, (uint64_t (*)(uint64_t))type metadata accessor for HeartPromotionGeneratorPipeline, (uint64_t)&unk_231420680);
    v155[20] = v109;
    sub_2313D2490(v86, v156);
    sub_2313D2628(v86, v157);
    v110 = sub_2313D20D8(v86, (uint64_t)v136, v137);
    swift_bridgeObjectRelease();
    v157[8] = type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
    v157[9] = sub_2312CCC24(&qword_25415DBB8, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline, (uint64_t)&unk_231418528);
    v157[5] = (uint64_t)v110;
    sub_2313D2784(v86, v158);
    sub_2313D28DC(v86, v159);
    sub_2313D2A34(v86, v160);
    v111 = (uint64_t)v151;
    v112 = v107;
    v107((uint64_t)v151, v86, v106);
    sub_231411A10();
    sub_2312CEA5C(v161, v162);
    v113 = (void *)sub_2314119C8();
    sub_2313D38E8(v113);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v161);
    sub_2313D3AFC();
    v115 = v114;
    swift_allocObject();
    v116 = sub_231413684();
    v160[8] = v115;
    v160[9] = sub_2312CCC24(&qword_25415C160, (uint64_t (*)(uint64_t))sub_2313D3AFC, MEMORY[0x24BE3F870]);
    v160[5] = v116;
    v107(v111, v86, v106);
    v117 = type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline();
    swift_allocObject();
    v118 = sub_231371738(v111);
    v160[13] = v117;
    v160[14] = sub_2312CCC24(&qword_25415B928, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenNotificationSettingsGeneratorPipeline, (uint64_t)&unk_23141E2C0);
    v160[10] = (uint64_t)v118;
    v112(v111, v86, v106);
    v119 = type metadata accessor for AFibBurdenRescindedGeneratorPipeline();
    swift_allocObject();
    v120 = sub_2313E6A54(v111);
    v160[18] = v119;
    v160[19] = sub_2312CCC24(&qword_25415B720, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenRescindedGeneratorPipeline, (uint64_t)&unk_231423788);
    v160[15] = v120;
    v121 = sub_2313AC4E4(v86);
    v160[23] = type metadata accessor for RelatedSampleTypesGeneratorPipeline();
    v160[24] = sub_2312CCC24(&qword_25415C960, (uint64_t (*)(uint64_t))type metadata accessor for RelatedSampleTypesGeneratorPipeline, (uint64_t)&unk_231420544);
    v52 = MEMORY[0x24BEE4AF8];
    v160[20] = (uint64_t)v121;
    v122 = MEMORY[0x24BE47AB0];
    do
    {
      sub_2313D3CB8((uint64_t)&v154[v87 + 5], (uint64_t)v161);
      sub_2313D3D78((uint64_t)v161, (uint64_t)&v152, &qword_25415C110, &qword_25415D520, v122);
      if (v153)
      {
        sub_2312DFB68(&v152, (uint64_t)v154);
        sub_2312DFB68((__int128 *)v154, (uint64_t)&v152);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v52 = (uint64_t)sub_2312CDF30(0, *(_QWORD *)(v52 + 16) + 1, 1, (_QWORD *)v52);
        v124 = *(_QWORD *)(v52 + 16);
        v123 = *(_QWORD *)(v52 + 24);
        if (v124 >= v123 >> 1)
          v52 = (uint64_t)sub_2312CDF30((_QWORD *)(v123 > 1), v124 + 1, 1, (_QWORD *)v52);
        *(_QWORD *)(v52 + 16) = v124 + 1;
        sub_2312DFB68(&v152, v52 + 40 * v124 + 32);
      }
      else
      {
        sub_2313D3D1C((uint64_t)&v152);
      }
      v87 += 5;
    }
    while (v87 != 79);
    sub_2313D348C(0, &qword_25415C110, &qword_25415D520, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    v125 = v143;
    sub_231412148();
    v126 = sub_231413768();
    v127 = sub_23141498C();
    if (os_log_type_enabled(v126, v127))
    {
      v128 = (uint8_t *)swift_slowAlloc();
      v129 = swift_slowAlloc();
      v154[0] = v129;
      *(_DWORD *)v128 = 136446210;
      v161[0] = v142;
      swift_getMetatypeMetadata();
      v130 = sub_2314146E0();
      v161[0] = sub_23133180C(v130, v131, v154);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v126, v127, "[%{public}s] Feature disabled - no onboarding pipeline", v128, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v129, -1, -1);
      MEMORY[0x2348DE308](v128, -1, -1);

      (*(void (**)(char *, uint64_t))(v149 + 8))(v143, v144);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v149 + 8))(v125, v144);
    }
    return (id)v52;
  }
  __break(1u);
  return result;
}

uint64_t *sub_2313D20D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];

  v34 = a2;
  v6 = *v3;
  v7 = sub_231411A4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415BD10 != -1)
    swift_once();
  v11 = sub_231413780();
  sub_2312CE3B8(v11, (uint64_t)qword_254162E78);
  swift_bridgeObjectRetain_n();
  v12 = sub_231413768();
  v13 = sub_23141498C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v33 = a1;
    v16 = v15;
    v35 = v15;
    v36[0] = v6;
    *(_DWORD *)v14 = 136446466;
    swift_getMetatypeMetadata();
    v32 = v7;
    v17 = sub_2314146E0();
    v36[0] = sub_23133180C(v17, v18, &v35);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v36[0] = v34;
    v36[1] = a3;
    sub_2312CF374(0, (unint64_t *)&qword_25415BB00, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_231412A90();
    v19 = sub_2314146E0();
    v36[0] = sub_23133180C(v19, v20, &v35);
    v7 = v32;
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s] Creating Electrocardiogram update pipeline for single country: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    v21 = v16;
    a1 = v33;
    MEMORY[0x2348DE308](v21, -1, -1);
    MEMORY[0x2348DE308](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v22 = (id)*MEMORY[0x24BDD2DE0];
  sub_231411A10();
  sub_2312CEA5C(v36, v36[3]);
  v23 = (void *)sub_2314119C8();
  if (a3)
  {
    sub_231412A90();
    v24 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v22, v23, v24);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v26(v10, a1, v7);
  type metadata accessor for ElectrocardiogramUpdateAvailability(0);
  swift_allocObject();
  v27 = v25;
  v28 = sub_23138C0C4((uint64_t)v10, v27);

  v26(v10, a1, v7);
  type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
  swift_allocObject();
  v29 = sub_2312E56A8((uint64_t)v10, v28);

  swift_release();
  return v29;
}

uint64_t sub_2313D2490@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_231411A28();
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_2314118D8();
  sub_231414728();
  swift_bridgeObjectRelease();

  v9 = (uint64_t)v19;
  v10 = v20;
  v11 = type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
  swift_allocObject();
  v12 = sub_2314045A8(v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v13 = (void *)*MEMORY[0x24BDD2DE0];
  v21 = v11;
  v22 = sub_2312CCC24(&qword_25415CA98, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider, (uint64_t)&unk_2314245AC);
  v19 = v12;
  v14 = sub_231411BB4();
  v15 = MEMORY[0x24BE48388];
  a2[3] = v14;
  a2[4] = v15;
  sub_2312DFCA0(a2);
  v16 = v13;
  return sub_231411B9C();
}

uint64_t sub_2313D2628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A10();
  sub_2312CEA5C(v17, v18);
  v8 = sub_2314119C8();
  v9 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = (void *)*MEMORY[0x24BDD2DE0];
  v18 = v9;
  v19 = sub_2312CCC24(&qword_25415CC68, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider, (uint64_t)&protocol conformance descriptor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider);
  v17[0] = v10;
  v12 = sub_231411BB4();
  v13 = MEMORY[0x24BE48388];
  a2[3] = v12;
  a2[4] = v13;
  sub_2312DFCA0(a2);
  v14 = v11;
  return sub_231411B9C();
}

uint64_t sub_2313D2784@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  ValueMetadata *v19;
  unint64_t v20;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000028;
  v18 = 0x8000000231431BA0;
  v8 = (void *)sub_231411A28();
  sub_2314118D8();

  sub_231414728();
  swift_bridgeObjectRelease();
  v9 = v17;
  v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = (void *)*MEMORY[0x24BDD2E20];
  v19 = &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider;
  v20 = sub_2312EEAAC();
  v17 = v9;
  v18 = v10;
  v12 = sub_231411BB4();
  v13 = MEMORY[0x24BE48388];
  a2[3] = v12;
  a2[4] = v13;
  sub_2312DFCA0(a2);
  v14 = v11;
  return sub_231411B9C();
}

uint64_t sub_2313D28DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  ValueMetadata *v19;
  unint64_t v20;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000029;
  v18 = 0x8000000231431B70;
  v8 = (void *)sub_231411A28();
  sub_2314118D8();

  sub_231414728();
  swift_bridgeObjectRelease();
  v9 = v17;
  v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = (void *)*MEMORY[0x24BDD2DF8];
  v19 = &type metadata for HighHeartRateNotificationsHealthChecklistConfigurationProvider;
  v20 = sub_23137E98C();
  v17 = v9;
  v18 = v10;
  v12 = sub_231411BB4();
  v13 = MEMORY[0x24BE48388];
  a2[3] = v12;
  a2[4] = v13;
  sub_2312DFCA0(a2);
  v14 = v11;
  return sub_231411B9C();
}

uint64_t sub_2313D2A34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  ValueMetadata *v19;
  unint64_t v20;

  v4 = sub_231411A4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v17 = 0xD00000000000002BLL;
  v18 = 0x8000000231431B40;
  v8 = (void *)sub_231411A28();
  sub_2314118D8();

  sub_231414728();
  swift_bridgeObjectRelease();
  v9 = v17;
  v10 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = (void *)*MEMORY[0x24BDD2E00];
  v19 = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  v20 = sub_231342158();
  v17 = v9;
  v18 = v10;
  v12 = sub_231411BB4();
  v13 = MEMORY[0x24BE48388];
  a2[3] = v12;
  a2[4] = v13;
  sub_2312DFCA0(a2);
  v14 = v11;
  return sub_231411B9C();
}

uint64_t type metadata accessor for HeartHealthPluginDelegate()
{
  return objc_opt_self();
}

uint64_t sub_2313D2BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for HeartHealthPluginDelegate();
  result = swift_allocObject();
  *a1 = result;
  return result;
}

id sub_2313D2BDC(uint64_t a1)
{
  return sub_2313D0FEC(a1);
}

uint64_t sub_2313D2C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_231413780();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v45 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v45 - v11;
  swift_getObjectType();
  v13 = swift_conformsToProtocol2();
  if (v13)
    v14 = v13;
  else
    v14 = 0;
  if (v13)
    v15 = a1;
  else
    v15 = 0;
  if (v15)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v16 = (void *)sub_231411824();
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_profileIdentifier);
      v19 = objc_msgSend(v18, sel_type);

      if (v19 != (id)1)
      {
        sub_231413654();
        swift_unknownObjectRetain_n();
        v20 = sub_231413768();
        v21 = sub_23141498C();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v50 = v45;
          *(_DWORD *)v22 = 136446466;
          v23 = sub_2314151A8();
          v48 = sub_23133180C(v23, v24, &v50);
          sub_231414CBC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v22 + 12) = 2080;
          v48 = v15;
          v49 = v14;
          sub_2312CEA10(0, &qword_255ED10A0);
          swift_unknownObjectRetain();
          v25 = sub_2314146E0();
          v48 = sub_23133180C(v25, v26, &v50);
          sub_231414CBC();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s] Heart plugin only supports primary profile, ignoring context: %s", (uint8_t *)v22, 0x16u);
          v27 = v45;
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v27, -1, -1);
          MEMORY[0x2348DE308](v22, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
      }
      sub_2314130CC();

    }
    else
    {
      sub_231413654();
      swift_unknownObjectRetain_n();
      v36 = sub_231413768();
      v37 = sub_23141498C();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v50 = v39;
        *(_DWORD *)v38 = 136446466;
        v40 = sub_2314151A8();
        v48 = sub_23133180C(v40, v41, &v50);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        v48 = v15;
        v49 = v14;
        sub_2312CEA10(0, &qword_255ED10A0);
        swift_unknownObjectRetain();
        v42 = sub_2314146E0();
        v48 = sub_23133180C(v42, v43, &v50);
        sub_231414CBC();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v36, v37, "[%{public}s] Heart plugin cannot perform work without a health store, ignoring context: %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v39, -1, -1);
        MEMORY[0x2348DE308](v38, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);
      sub_2314130CC();
    }
  }
  else
  {
    sub_231413654();
    swift_unknownObjectRetain_n();
    v28 = sub_231413768();
    v29 = sub_23141498C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v50 = v31;
      *(_DWORD *)v30 = 136446466;
      v32 = sub_2314151A8();
      v48 = sub_23133180C(v32, v33, &v50);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v48 = a1;
      v49 = a2;
      sub_2312CEA10(0, &qword_255ED1098);
      swift_unknownObjectRetain();
      v34 = sub_2314146E0();
      v48 = sub_23133180C(v34, v35, &v50);
      sub_231414CBC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v28, v29, "[%{public}s] Heart plugin cannot perform work without a HealthPlatformOrchestrationContext, ignoring context: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v31, -1, -1);
      MEMORY[0x2348DE308](v30, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_2313D3298()
{
  return 0xD000000000000016;
}

uint64_t sub_2313D32B4(uint64_t a1, uint64_t a2)
{
  sub_2313D2C00(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2313D32DC(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v2 = a1;
  else
    v2 = 0;
  if (v2)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v3 = (void *)sub_231411824();
    sub_2314130CC();
    if (v3)

  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2313D335C@<X0>(_WORD *a1@<X8>)
{
  return sub_2313D3398(a1);
}

uint64_t sub_2313D3370(uint64_t a1, void **a2)
{
  return sub_2313D3424(a1, a2);
}

uint64_t sub_2313D3384@<X0>(_WORD *a1@<X8>)
{
  return sub_2313D3398(a1);
}

uint64_t sub_2313D3398@<X0>(_WORD *a1@<X8>)
{
  uint64_t result;
  __int16 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2313D3410(uint64_t a1, void **a2)
{
  return sub_2313D3424(a1, a2);
}

uint64_t sub_2313D3424(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_231413E4C();
}

void sub_2313D348C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2312CEA10(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

char *sub_2313D34F0(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  objc_class *v32;
  char *v33;
  void *v34;
  char *v35;
  char *v36;
  void *v38;
  void *v39;
  uint64_t ObjectType;
  uint64_t v41;
  objc_super v42;
  _DWORD v43[10];
  _QWORD v44[5];

  v41 = a4;
  v38 = a1;
  v39 = a2;
  ObjectType = swift_getObjectType();
  v7 = MEMORY[0x24BDB9EF0];
  sub_2312CF374(0, &qword_25415D0B8, (uint64_t)&type metadata for HeartFeaturePromotionResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9EF0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  sub_2312CF374(0, &qword_25415D0B0, (uint64_t)&type metadata for HeartPromotionResult, (uint64_t (*)(_QWORD, uint64_t))v7);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - v16;
  v44[3] = sub_2312DC718();
  v44[4] = MEMORY[0x24BE45B80];
  v44[0] = a3;
  v18 = &a5[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__atrialFibrillationAvailabilityResult];
  LOWORD(v43[0]) = 2;
  v19 = a5;
  sub_231413E1C();
  v20 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v20(v18, v17, v14);
  v21 = &v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibBurdenAvailabilityResult];
  v43[0] = 131074;
  sub_231413E1C();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  v22 = &v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibFeaturesAvailabilityResult];
  LOWORD(v43[0]) = 2;
  sub_231413E1C();
  v20(v22, v17, v14);
  v23 = OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__irregularRhythmNotificationsFeatureStatus;
  sub_2313CAD7C();
  swift_allocObject();
  *(_QWORD *)&v19[v23] = sub_231411CD4();
  v24 = OBJC_IVAR____TtC5Heart26HeartPromotionAvailability__aFibBurdenFeatureStatus;
  swift_allocObject();
  *(_QWORD *)&v19[v24] = sub_231411CD4();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v25 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v25 = MEMORY[0x24BEE4B08];
  v26 = v41;
  v27 = v38;
  v28 = v39;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_subscriptions] = v25;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_healthStore] = v27;
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability] = v28;
  sub_2312DF850((uint64_t)v44, (uint64_t)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_irregularRhythmNotificationsStatusManager]);
  v29 = (void *)*MEMORY[0x24BDD2DC8];
  v30 = v27;
  v31 = v28;
  sub_2313C6A98(v29, v30, v26, (uint64_t)v43);
  sub_2313D3D78((uint64_t)v43, (uint64_t)&v19[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_aFibBurdenFeatureStatusManager], (unint64_t *)&qword_25415C158, &qword_25415C150, MEMORY[0x24BE457C0]);

  v32 = (objc_class *)type metadata accessor for HeartPromotionAvailability();
  v42.receiver = v19;
  v42.super_class = v32;
  v33 = (char *)objc_msgSendSuper2(&v42, sel_init);
  v34 = *(void **)&v33[OBJC_IVAR____TtC5Heart26HeartPromotionAvailability_heartRhythmAvailability];
  v35 = v33;
  objc_msgSend(v34, sel_addHeartRhythmAvailabilityObserver_, v35);
  sub_2313C6E9C();
  sub_2313C7334();
  LOWORD(v34) = sub_2313C80B0(0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v43[0]) = (_WORD)v34;
  v36 = v35;
  sub_231413E4C();
  sub_2313C7830();
  LOWORD(v34) = sub_2313C80B0(2);
  swift_getKeyPath();
  swift_getKeyPath();
  LOWORD(v43[0]) = (_WORD)v34;
  sub_231413E4C();
  sub_23136334C(v26);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v44);
  return v36;
}

uint64_t sub_2313D38E8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;

  sub_2312D6DD8(0, &qword_25415DF40, (uint64_t (*)(uint64_t))sub_2313D3E64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23141ABD0;
  *(_QWORD *)(v2 + 56) = &type metadata for HeartRateArticleDataProvider;
  *(_QWORD *)(v2 + 64) = sub_23137B4F4();
  *(_QWORD *)(v2 + 72) = sub_23137B538();
  *(_QWORD *)(v2 + 104) = &type metadata for CardioFitnessOverviewArticleDataProvider;
  *(_QWORD *)(v2 + 112) = sub_2313CF3D0();
  *(_QWORD *)(v2 + 120) = sub_2313CF414();
  *(_QWORD *)(v2 + 80) = a1;
  v3 = *MEMORY[0x24BDD2DD0];
  v4 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
  v5 = a1;
  v6 = objc_msgSend(v4, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v3, v5, 0);
  v13 = sub_2312DC718();
  v14 = MEMORY[0x24BE45B80];
  *(_QWORD *)&v12 = v6;
  v7 = type metadata accessor for LowCardioFitnessArticleDataProvider();
  v8 = swift_allocObject();
  v9 = v8 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
  sub_2312D6DD8(0, &qword_25415C140, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_BYTE *)(v8 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink) = 2;
  *(_QWORD *)(v8 + 16) = v5;
  sub_2312DFB68(&v12, v8 + 24);
  *(_QWORD *)(v2 + 152) = v7;
  *(_QWORD *)(v2 + 160) = sub_2312CCC24(&qword_25415E5D8, (uint64_t (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider, (uint64_t)&unk_231423D50);
  *(_QWORD *)(v2 + 168) = sub_2312CCC24(qword_25415E620, (uint64_t (*)(uint64_t))type metadata accessor for LowCardioFitnessArticleDataProvider, (uint64_t)&unk_231423CE8);
  *(_QWORD *)(v2 + 128) = v8;
  *(_QWORD *)(v2 + 200) = &type metadata for AFibBurdenArticleProviderLearnAboutAFib;
  *(_QWORD *)(v2 + 208) = sub_2313CF348();
  *(_QWORD *)(v2 + 216) = sub_2313CF38C();
  *(_QWORD *)(v2 + 248) = &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden;
  *(_QWORD *)(v2 + 256) = sub_2313CF2C0();
  *(_QWORD *)(v2 + 264) = sub_2313CF304();
  return v2;
}

void sub_2313D3AFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C168)
  {
    sub_2313D3B54();
    v0 = sub_231413690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C168);
  }
}

unint64_t sub_2313D3B54()
{
  unint64_t result;

  result = qword_25415C938;
  if (!qword_25415C938)
  {
    result = MEMORY[0x2348DE248](&unk_231421F94, &type metadata for EducationArticleTileDataController);
    atomic_store(result, (unint64_t *)&qword_25415C938);
  }
  return result;
}

uint64_t sub_2313D3B98(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415BBF0, (uint64_t (*)(uint64_t))sub_2312CCB14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2313D3BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312CCB14();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
    v3 = sub_231411B00();
  else
    v3 = sub_231411B48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + ((v2 + 16) & ~v2), v3);
  return swift_deallocObject();
}

uint64_t sub_2313D3C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_2312CCB14();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_231361B68(a1, v1 + ((v4 + 16) & ~v4));
}

uint64_t sub_2313D3CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313D348C(0, &qword_25415C110, &qword_25415D520, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313D3D1C(uint64_t a1)
{
  uint64_t v2;

  sub_2313D348C(0, &qword_25415C110, &qword_25415D520, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2313D3D78(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_2313D348C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_2313D3DD4@<X0>(_WORD *a1@<X8>)
{
  return sub_2313D3398(a1);
}

uint64_t sub_2313D3DF8(uint64_t a1, void **a2)
{
  return sub_2313D3424(a1, a2);
}

uint64_t sub_2313D3E1C@<X0>(_WORD *a1@<X8>)
{
  return sub_2313D3398(a1);
}

uint64_t sub_2313D3E40(uint64_t a1, void **a2)
{
  return sub_2313D3424(a1, a2);
}

unint64_t sub_2313D3E64()
{
  unint64_t result;

  result = qword_25415D540;
  if (!qword_25415D540)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D540);
  }
  return result;
}

uint64_t sub_2313D3F4C(void *a1)
{
  uint64_t v1;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  const char *v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t result;
  _OWORD v35[2];
  __int128 v36;
  unint64_t v37;
  unint64_t v38;

  v3 = 0xD000000000000010;
  v4 = objc_msgSend(a1, sel_healthDataSource);
  if (!v4)
  {
    result = sub_231414EE4();
    __break(1u);
    return result;
  }
  v5 = v4;
  v6 = sub_231336D90(MEMORY[0x24BEE4AF8]);
  if (!*(_BYTE *)(v1 + 16))
  {
    v8 = "Data Type Viewed";
LABEL_7:
    v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (*(_BYTE *)(v1 + 16) != 1)
  {
    v3 = 0xD00000000000001ALL;
    v8 = "PDF Shared from PDF Viewer";
    goto LABEL_7;
  }
  v7 = 0xEA00000000006465;
  v3 = 0x7765695620464450;
LABEL_8:
  v37 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v36 = v3;
  *((_QWORD *)&v36 + 1) = v7;
  sub_231304744(&v36, v35);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2313D47BC(v35, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  v38 = v6;
  swift_bridgeObjectRelease();
  v10 = sub_2314146BC();
  v12 = v11;
  if (qword_25415C170 != -1)
    swift_once();
  v13 = sub_231413780();
  v14 = sub_2312CE3B8(v13, (uint64_t)qword_254162F00);
  v17 = sub_2313D4A68(v5, v14, v15, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent, &qword_255ECF498, v16);
  v37 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v36 = v17;
  *((_QWORD *)&v36 + 1) = v18;
  sub_231304744(&v36, v35);
  v19 = v38;
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v38 = 0x8000000000000000;
  sub_2313D47BC(v35, v10, v12, v20);
  v38 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = sub_2314146BC();
  v23 = v22;
  v24 = objc_msgSend(a1, sel_environmentDataSource);
  v27 = sub_2313D4DE4(v5, v24, v14, v25, (void (*)(uint64_t))type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent, &qword_255ECF498, v26);

  v37 = sub_2312E43A4();
  *(_QWORD *)&v36 = v27;
  sub_231304744(&v36, v35);
  v28 = v38;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v38 = 0x8000000000000000;
  sub_2313D47BC(v35, v21, v23, v29);
  v38 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = sub_231384290(v5, (void *)*MEMORY[0x24BDD2DC8], 1, v14);
  if (v31)
  {
    v37 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v36 = v30;
    *((_QWORD *)&v36 + 1) = v31;
    sub_231304744(&v36, v35);
    v32 = v38;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    sub_2313D47BC(v35, 0x5665727574616566, 0xEE006E6F69737265, v33);
    sub_2314130CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2313D44F8(0x5665727574616566, 0xEE006E6F69737265, &v36);
    sub_2313045B8((uint64_t)&v36);
    sub_2314130CC();
    return v38;
  }
  return v32;
}

uint64_t sub_2313D43B4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313D4430 + 4 * byte_231422215[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2313D4464 + 4 * byte_231422210[v4]))();
}

uint64_t sub_2313D4464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D446C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313D4474);
  return result;
}

uint64_t sub_2313D4480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313D4488);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2313D448C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D4494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction()
{
  return &type metadata for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction;
}

unint64_t sub_2313D44B4()
{
  unint64_t result;

  result = qword_255ED1168;
  if (!qword_255ED1168)
  {
    result = MEMORY[0x2348DE248](&unk_2314222A8, &type metadata for AFibBurdenDataTypeInteractionAnalyticsEvent.Interaction);
    atomic_store(result, (unint64_t *)&qword_255ED1168);
  }
  return result;
}

double sub_2313D44F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  sub_231412A90();
  v8 = sub_231338800(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_231379B94();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_231304744((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_2313D45E8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_2313D45E8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_231414D28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_231415118();
        sub_231412A90();
        sub_231414710();
        v10 = sub_231415148();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2313D47BC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_231338800(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v19);
        return sub_231304744(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_231379B94();
      goto LABEL_7;
    }
    sub_23137920C(v15, a4 & 1);
    v21 = sub_231338800(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2313D48EC(v12, a2, a3, a1, v18);
      return (_OWORD *)sub_231412A90();
    }
  }
  result = (_OWORD *)sub_2314150AC();
  __break(1u);
  return result;
}

_OWORD *sub_2313D48EC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_231304744(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_2313D4954(void *a1, uint64_t a2)
{
  return sub_2313D4A68(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent, &qword_255ED1178, 255);
}

id sub_2313D49B0(void *a1, void *a2, uint64_t a3)
{
  return sub_2313D4DE4(a1, a2, a3, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent, &qword_255ED1178, 255);
}

uint64_t sub_2313D4A0C(void *a1, uint64_t a2)
{
  return sub_2313D4A68(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent, &qword_255ED1170, 255);
}

uint64_t sub_2313D4A68(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v29[0] = 0;
  v10 = objc_msgSend(a1, sel_biologicalSexWithError_, v29);
  if (v10)
  {
    v11 = v10;
    v12 = v29[0];
    v13 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    v14 = sub_2314146BC();

  }
  else
  {
    v15 = v29[0];
    v16 = (void *)sub_231411410();

    swift_willThrow();
    v17 = v16;
    v18 = v16;
    v19 = sub_231413768();
    v20 = sub_231414974();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      v29[0] = v22;
      *(_DWORD *)v21 = 136446466;
      a4(a3);
      sub_2313D531C(0, a5, a6, a4);
      v23 = sub_2314146E0();
      sub_23133180C(v23, v24, (uint64_t *)v29);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      v25 = v16;
      sub_2312D3C14();
      v26 = sub_2314146E0();
      sub_23133180C(v26, v27, (uint64_t *)v29);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v19, v20, "[%{public}s] Error when retrieving biological sex: %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v22, -1, -1);
      MEMORY[0x2348DE308](v21, -1, -1);

    }
    else
    {

    }
    v14 = sub_2314146BC();

  }
  return v14;
}

uint64_t sub_2313D4D2C(void *a1, uint64_t a2)
{
  return sub_2313D4A68(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_255ECF4A0, 255);
}

id sub_2313D4D88(void *a1, void *a2, uint64_t a3)
{
  return sub_2313D4DE4(a1, a2, a3, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent, &qword_255ED1170, 255);
}

id sub_2313D4DE4(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  id v49[2];

  v47 = a7;
  v49[1] = *(id *)MEMORY[0x24BDAC8D0];
  v12 = sub_231411608();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a2, sel_currentDate);
  sub_2314115D8();

  v17 = (void *)sub_2314115C0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v49[0] = 0;
  v18 = objc_msgSend(a1, sel_ageWithCurrentDate_error_, v17, v49);

  v19 = v49[0];
  if (v18)
  {
    v20 = *MEMORY[0x24BDD4548];
    v21 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    v22 = v18;
    v23 = objc_msgSend(v21, sel_initWithInteger_, v20);
    v24 = (id)HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge();

    if (v24)
    {

      return v24;
    }
    v39 = sub_231413768();
    v40 = sub_231414974();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = (void *)swift_slowAlloc();
      v49[0] = v42;
      *(_DWORD *)v41 = 136446210;
      v46 = v41 + 4;
      v48 = ((uint64_t (*)(uint64_t))a5)(a4);
      sub_2313D531C(0, a6, v47, a5);
      v43 = sub_2314146E0();
      v48 = sub_23133180C(v43, v44, (uint64_t *)v49);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v39, v40, "[%{public}s] Error when bucketing retrieved age", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v42, -1, -1);
      MEMORY[0x2348DE308](v41, -1, -1);
    }

    v45 = (id)*MEMORY[0x24BDD2788];
  }
  else
  {
    v26 = v19;
    v27 = (void *)sub_231411410();

    swift_willThrow();
    v28 = v27;
    v29 = v27;
    v30 = sub_231413768();
    v31 = sub_231414974();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = (void *)swift_slowAlloc();
      v49[0] = v33;
      *(_DWORD *)v32 = 136446466;
      v48 = ((uint64_t (*)(uint64_t))a5)(a4);
      sub_2313D531C(0, a6, v47, a5);
      v34 = sub_2314146E0();
      v48 = sub_23133180C(v34, v35, (uint64_t *)v49);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      v48 = (uint64_t)v27;
      v36 = v27;
      sub_2312D3C14();
      v37 = sub_2314146E0();
      v48 = sub_23133180C(v37, v38, (uint64_t *)v49);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v30, v31, "[%{public}s] Error when retrieving bucketed age: %{public}s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v33, -1, -1);
      MEMORY[0x2348DE308](v32, -1, -1);

    }
    else
    {

    }
    v45 = (id)*MEMORY[0x24BDD2788];

  }
  return v45;
}

id sub_2313D52C0(void *a1, void *a2, uint64_t a3)
{
  return sub_2313D4DE4(a1, a2, a3, 0, (void (*)(uint64_t))type metadata accessor for AFibBurdenNotificationInteractionAnalyticsEvent, &qword_255ECF4A0, 255);
}

uint64_t sub_2313D531C(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a4(a3);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2313D5354(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2313D537C()
{
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  return MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
}

id sub_2313D548C(uint64_t a1, char a2)
{
  id result;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a1);
  if (result)
  {
    v4 = result;
    sub_2313D5354(a2);
    v6 = v5;
    v7 = objc_msgSend(v4, sel_displayTypeForObjectType_, v5);

    if (!v7)
    {
      if (qword_25415C170 != -1)
        swift_once();
      v8 = sub_231413780();
      sub_2312CE3B8(v8, (uint64_t)qword_254162F00);
      v9 = sub_231413768();
      v10 = sub_231414974();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v22 = v21;
        *(_DWORD *)v11 = 136446466;
        sub_2313D5AE4();
        v12 = sub_2314146E0();
        sub_23133180C(v12, v13, &v22);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2080;
        sub_2313D5354(a2);
        v15 = v14;
        v16 = objc_msgSend(v14, sel_description);

        v17 = sub_2314146BC();
        v19 = v18;

        sub_23133180C(v17, v19, &v22);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v9, v10, "[%{public}s] DisplayType not found for quantityType %s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v21, -1, -1);
        MEMORY[0x2348DE308](v11, -1, -1);
      }

      sub_2313D5A58();
      swift_allocError();
      *v20 = 0;
      swift_willThrow();
    }

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2313D573C(uint64_t a1, uint64_t a2, char a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  if (a3 == 2 || a3 == 5)
    return objc_msgSend((id)objc_opt_self(), sel_secondUnit);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a2);
  v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v8 = objc_msgSend(v7, sel_unitForDisplayType_, a1);
  if (v8)
  {
    a1 = (uint64_t)v8;

  }
  else
  {
    if (qword_25415C170 != -1)
      swift_once();
    v9 = sub_231413780();
    sub_2312CE3B8(v9, (uint64_t)qword_254162F00);
    v10 = sub_231413768();
    v11 = sub_231414974();
    if (os_log_type_enabled(v10, v11))
    {
      a1 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v22 = v21;
      *(_DWORD *)a1 = 136446466;
      sub_2313D5AE4();
      v12 = sub_2314146E0();
      sub_23133180C(v12, v13, &v22);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 12) = 2080;
      sub_2313D5354(a3);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_description);

      v17 = sub_2314146BC();
      v19 = v18;

      sub_23133180C(v17, v19, &v22);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v10, v11, "[%{public}s] Unit not found for sampleType %s", (uint8_t *)a1, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v21, -1, -1);
      MEMORY[0x2348DE308](a1, -1, -1);
    }

    sub_2313D5A58();
    swift_allocError();
    *v20 = 1;
    swift_willThrow();

  }
  return (id)a1;
}

unint64_t sub_2313D5A58()
{
  unint64_t result;

  result = qword_255ED1180;
  if (!qword_255ED1180)
  {
    result = MEMORY[0x2348DE248](&unk_231422488, &type metadata for AFibBurdenPDFChartDisplayTypeError);
    atomic_store(result, (unint64_t *)&qword_255ED1180);
  }
  return result;
}

void sub_2313D5A9C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001F0E0;
}

uint64_t sub_2313D5AAC()
{
  return sub_2314146E0();
}

unint64_t sub_2313D5AE4()
{
  unint64_t result;

  result = qword_255ED1188;
  if (!qword_255ED1188)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED1188);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartDisplayTypeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313D5B68 + 4 * byte_2314222DB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313D5B9C + 4 * byte_2314222D6[v4]))();
}

uint64_t sub_2313D5B9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D5BA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313D5BACLL);
  return result;
}

uint64_t sub_2313D5BB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313D5BC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313D5BC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D5BCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDisplayTypeError()
{
  return &type metadata for AFibBurdenPDFChartDisplayTypeError;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2313D5C34 + 4 * byte_2314222E5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2313D5C68 + 4 * byte_2314222E0[v4]))();
}

uint64_t sub_2313D5C68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D5C70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313D5C78);
  return result;
}

uint64_t sub_2313D5C84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313D5C8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2313D5C90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313D5C98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartType()
{
  return &type metadata for AFibBurdenPDFChartType;
}

unint64_t sub_2313D5CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1190;
  if (!qword_255ED1190)
  {
    sub_2313D5D00();
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ED1190);
  }
  return result;
}

void sub_2313D5D00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1198)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1198);
  }
}

unint64_t sub_2313D5D58()
{
  unint64_t result;

  result = qword_255ED11A0;
  if (!qword_255ED11A0)
  {
    result = MEMORY[0x2348DE248](&unk_2314223B0, &type metadata for AFibBurdenPDFChartType);
    atomic_store(result, (unint64_t *)&qword_255ED11A0);
  }
  return result;
}

unint64_t sub_2313D5DA4()
{
  unint64_t result;

  result = qword_255ED11A8;
  if (!qword_255ED11A8)
  {
    result = MEMORY[0x2348DE248](&unk_231422460, &type metadata for AFibBurdenPDFChartDisplayTypeError);
    atomic_store(result, (unint64_t *)&qword_255ED11A8);
  }
  return result;
}

uint64_t sub_2313D5DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_2313D5E00()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v0[8]);
  v0[10] = v1;
  sub_2313D7E68();
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_255ECDE98 + dword_255ECDE98);
  v2 = (_QWORD *)swift_task_alloc();
  v0[11] = v2;
  *v2 = v0;
  v2[1] = sub_2313D5EA0;
  return v4((uint64_t)v1);
}

uint64_t sub_2313D5EA0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);

  v2 = (_QWORD *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD))((char *)&dword_255ECDE30 + dword_255ECDE30);
  v4 = (_QWORD *)swift_task_alloc();
  v2[13] = v4;
  *v4 = v2;
  v4[1] = sub_2313D5F4C;
  return v5(v2[8]);
}

uint64_t sub_2313D5F4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2313D5FB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v16[2];

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 96);
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_255ED2F00);
  v3 = v1;
  v4 = v1;
  v5 = sub_231413768();
  v6 = sub_231414974();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 96);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16[0] = v10;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23133180C(0xD000000000000020, 0x8000000231431D90, v16);
    sub_231414CBC();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v8;
    v11 = v8;
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    v12 = sub_2314146E0();
    *(_QWORD *)(v0 + 32) = sub_23133180C(v12, v13, v16);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v5, v6, "[%s] Error when onboarding feature: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 80);
  sub_2313D6FDC();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D61F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  sub_2313D6FDC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D6230()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v16[2];

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 112);
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_255ED2F00);
  v3 = v1;
  v4 = v1;
  v5 = sub_231413768();
  v6 = sub_231414974();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 112);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16[0] = v10;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 40) = sub_23133180C(0xD000000000000020, 0x8000000231431D90, v16);
    sub_231414CBC();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v8;
    v11 = v8;
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    v12 = sub_2314146E0();
    *(_QWORD *)(v0 + 56) = sub_23133180C(v12, v13, v16);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v5, v6, "[%s] Error when running test: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 80);
  sub_2313D6FDC();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D6478()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = v0;
  return swift_task_switch();
}

uint64_t sub_2313D6490()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v0[38] = v1;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E40]), sel_initWithHealthStore_, v1);
  v0[39] = v2;
  v3 = sub_23141468C();
  v0[40] = v3;
  v0[15] = v0 + 30;
  v0[10] = v0;
  v0[11] = sub_2313D6598;
  v4 = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_2313D7210;
  v5[3] = &unk_2500295E8;
  v5[4] = v4;
  objc_msgSend(v2, sel_createProfileOfType_displayName_completion_, 100, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_2313D6598()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 328) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_2313D65F8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v17;

  v1 = (void *)v0[40];
  v2 = (void *)v0[30];
  v0[42] = v2;
  v3 = v2;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v4 = sub_231413780();
  v0[43] = sub_2312CE3B8(v4, (uint64_t)qword_255ED2F00);
  v5 = v3;
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v0[35] = sub_23133180C(0xD000000000000020, 0x8000000231431D90, &v17);
    sub_231414CBC();
    *(_WORD *)(v8 + 12) = 2080;
    v10 = v5;
    v11 = objc_msgSend(v10, sel_description);
    v12 = sub_2314146BC();
    v14 = v13;

    v0[36] = sub_23133180C(v12, v14, &v17);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v6, v7, "[%s] Created profile with identifier %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v9, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);
  }
  else
  {

  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v0[44] = v15;
  objc_msgSend(v15, sel_setProfileIdentifier_, v5);
  objc_msgSend(v15, sel_resume);
  sub_231414824();
  v0[45] = sub_231414818();
  sub_23141480C();
  return swift_task_switch();
}

uint64_t sub_2313D68A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v17[2];

  v1 = *(void **)(v0 + 320);
  swift_willThrow();

  if (qword_255ECAAA8 != -1)
    swift_once();
  v2 = *(void **)(v0 + 328);
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_255ED2F00);
  v4 = v2;
  v5 = v2;
  v6 = sub_231413768();
  v7 = sub_231414974();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 328);
  if (v8)
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17[0] = v11;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 248) = sub_23133180C(0xD000000000000020, 0x8000000231431D90, v17);
    sub_231414CBC();
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 224) = v9;
    v12 = v9;
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    v13 = sub_2314146E0();
    *(_QWORD *)(v0 + 232) = sub_23133180C(v13, v14, v17);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v6, v7, "[%s] Error when creating temporary profile: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    MEMORY[0x2348DE308](v10, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  v15 = *(void **)(v0 + 312);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D6B00()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = *(void **)(v0 + 352);
  swift_release();
  v2 = objc_msgSend(v1, sel_viewControllerFactory);
  v3 = objc_msgSend(v2, sel_createHKUnitPreferenceController);

  v6 = (uint64_t (*)(_QWORD))((char *)&dword_255ED1248 + dword_255ED1248);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v4;
  *v4 = v0;
  v4[1] = sub_2313D6BAC;
  return v6(*(_QWORD *)(v0 + 352));
}

uint64_t sub_2313D6BAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_2313D6C18()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[42];
  v2 = (void *)v0[39];
  v0[2] = v0;
  v0[3] = sub_2313D6CB4;
  v3 = swift_continuation_init();
  v0[23] = MEMORY[0x24BDAC760];
  v4 = v0 + 23;
  v4[1] = 0x40000000;
  v4[2] = sub_2313D72D0;
  v4[3] = &unk_250029600;
  v4[4] = v3;
  objc_msgSend(v2, sel_deleteProfile_completion_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_2313D6CB4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2313D6D14()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 312);

  v2 = *(void **)(v0 + 304);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D6D60()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 336);
  v4 = *(void **)(v0 + 304);
  v3 = *(void **)(v0 + 312);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D6DB4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v18[2];

  v1 = *(void **)(v0 + 384);
  v2 = *(void **)(v0 + 336);
  swift_willThrow();

  v3 = v1;
  v4 = v1;
  v5 = sub_231413768();
  v6 = sub_231414974();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 384);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18[0] = v9;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 256) = sub_23133180C(0xD000000000000020, 0x8000000231431D90, v18);
    sub_231414CBC();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 264) = v7;
    v10 = v7;
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    v11 = sub_2314146E0();
    *(_QWORD *)(v0 + 272) = sub_23133180C(v11, v12, v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v5, v6, "[%s] Error when deleting temporary profile: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v9, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);
  }
  else
  {
    v13 = *(void **)(v0 + 384);

  }
  v14 = *(void **)(v0 + 352);
  v15 = *(void **)(v0 + 312);
  swift_willThrow();

  v16 = *(void **)(v0 + 304);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2313D6FDC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v0 = sub_231413780();
  sub_2312CE3B8(v0, (uint64_t)qword_255ED2F00);
  swift_retain();
  v1 = sub_231413768();
  v2 = sub_23141498C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v10 = v4;
    *(_DWORD *)v3 = 136315394;
    sub_23133180C(0xD000000000000020, 0x8000000231431D90, &v10);
    sub_231414CBC();
    *(_WORD *)(v3 + 12) = 2080;
    v5 = (id)*MEMORY[0x24BDD2DC8];
    v6 = sub_231414B00();
    v8 = v7;

    sub_23133180C(v6, v8, &v10);
    sub_231414CBC();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v1, v2, "[%s] Tearing down overrides for feature with identifier %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v4, -1, -1);
    MEMORY[0x2348DE308](v3, -1, -1);

  }
  else
  {

    swift_release();
    v5 = (id)*MEMORY[0x24BDD2DC8];
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BC0]), sel_initWithFeatureIdentifier_, v5);
  objc_msgSend(v9, sel_resetAllRequirementSatisfactionOverrides);

}

uint64_t sub_2313D7210(uint64_t a1, void *a2, void *a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;

  result = sub_2312CEA10(0, (unint64_t *)&unk_255ED1250);
  v7 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    swift_allocError();
    *v8 = a3;
    v9 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v7 + 64) + 40) = a2;
    v10 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313D72D0(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v6;
  id v7;

  result = sub_2312CEA10(0, (unint64_t *)&unk_255ED1250);
  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_2312CEA10(0, (unint64_t *)&qword_25415DF60);
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313D7380()
{
  uint64_t v0;

  v0 = sub_231413780();
  sub_2312D6D6C(v0, qword_255ED2F00);
  sub_2312CE3B8(v0, (uint64_t)qword_255ED2F00);
  return sub_231413774();
}

uint64_t sub_2313D73EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;

  v7 = sub_2314122EC();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_231412A90();
  sub_2314122F8();
  v12 = sub_2314122E0();
  v14 = v13;
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!a3)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_231412A90();
  v15 = sub_231414F74();
  result = swift_bridgeObjectRelease();
  if (v15 <= 2)
  {
    if (a1)
    {
      v16 = sub_2313D75BC(a1, v15, v12, v14, a4);
      swift_bridgeObjectRelease();
      return v16 & 1;
    }
    goto LABEL_11;
  }
  if (a1)
  {
    v17 = (void *)sub_23141468C();
    v19 = 0;
    v20 = 0xE000000000000000;
    sub_231414E18();
    swift_bridgeObjectRelease();
    v19 = 0xD000000000000011;
    v20 = 0x8000000231431D20;
    sub_231414728();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_failedTest_withFailure_, v17, v18);

    v16 = 0;
    return v16 & 1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2313D75BC(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 *v20;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[5];
  _OWORD v25[2];
  uint64_t v26;

  ObjectType = swift_getObjectType();
  sub_2313D811C();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  if (a2 > 1u)
  {
    v20 = v25;
LABEL_6:
    sub_2313D8170((uint64_t)v20);
    return 0;
  }
  v14 = type metadata accessor for AFibBurdenPDFExportPPTTestRunner();
  swift_allocObject();
  sub_231412A90();
  v15 = a1;
  sub_231412A90();
  v16 = sub_23134AA00(a3, a4, v15, a5);
  v24[3] = v14;
  v24[4] = &off_2500238C0;
  v24[0] = v16;
  sub_2313D8170((uint64_t)v25);
  sub_2313D8214((uint64_t)v24, (uint64_t)v25);
  sub_2313D8258((uint64_t)v25, (uint64_t)&v22);
  if (!v23)
  {
    sub_2313D8170((uint64_t)v25);
    v20 = &v22;
    goto LABEL_6;
  }
  sub_2312DFB68(&v22, (uint64_t)v24);
  v17 = sub_23141483C();
  v18 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  sub_2312DF850((uint64_t)v24, (uint64_t)&v22);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = a3;
  v19[5] = a4;
  sub_2312DFB68(&v22, (uint64_t)(v19 + 6));
  v19[11] = ObjectType;
  sub_231412A90();
  sub_231385C60((uint64_t)v13, (uint64_t)&unk_255ED1230, (uint64_t)v19);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
  sub_2313D8170((uint64_t)v25);
  return v18;
}

uint64_t sub_2313D787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch();
}

uint64_t sub_2313D7898()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t (__cdecl *v12)();
  uint64_t v13;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  *(_QWORD *)(v0 + 88) = sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  swift_bridgeObjectRetain_n();
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v11 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = sub_2314151A8();
    *(_QWORD *)(v0 + 40) = sub_23133180C(v7, v8, &v13);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_231412A90();
    *(_QWORD *)(v0 + 48) = sub_23133180C(v11, v4, &v13);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Running test with name %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_2312CEA5C(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v12 = (uint64_t (__cdecl *)())((char *)&dword_255ED1238 + dword_255ED1238);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v9;
  *v9 = v0;
  v9[1] = sub_2313D7AD8;
  return v12();
}

uint64_t sub_2313D7AD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2313D7B3C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v8;

  swift_bridgeObjectRetain_n();
  v1 = sub_231413768();
  v2 = sub_23141498C();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_231412A90();
    *(_QWORD *)(v0 + 32) = sub_23133180C(v4, v3, &v8);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v1, v2, "Successfully completed run of test with name %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D7CA4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v10;
  uint64_t v11;

  swift_bridgeObjectRetain_n();
  v1 = sub_231413768();
  v2 = sub_23141498C();
  if (os_log_type_enabled(v1, v2))
  {
    v10 = *(id *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = sub_2314151A8();
    *(_QWORD *)(v0 + 16) = sub_23133180C(v7, v8, &v11);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_231412A90();
    *(_QWORD *)(v0 + 24) = sub_23133180C(v4, v3, &v11);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2312C8000, v1, v2, "[%s] Failed run of test with name %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313D7E68()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v18;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v0 = sub_231413780();
  sub_2312CE3B8(v0, (uint64_t)qword_255ED2F00);
  swift_retain();
  v1 = sub_231413768();
  v2 = sub_23141498C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v18 = v4;
    *(_DWORD *)v3 = 136315394;
    sub_23133180C(0xD000000000000020, 0x8000000231431D90, &v18);
    sub_231414CBC();
    *(_WORD *)(v3 + 12) = 2080;
    v5 = (id)*MEMORY[0x24BDD2DC8];
    v6 = sub_231414B00();
    v8 = v7;

    sub_23133180C(v6, v8, &v18);
    sub_231414CBC();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v1, v2, "[%s] Setting up overrides for feature with identifier %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v4, -1, -1);
    MEMORY[0x2348DE308](v3, -1, -1);

  }
  else
  {

    swift_release();
    v5 = (id)*MEMORY[0x24BDD2DC8];
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BC0]), sel_initWithFeatureIdentifier_, v5);
  v10 = (id)HKAllFeatureAvailabilityRequirementIdentifiers();
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  v11 = sub_2314147A0();

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    sub_2312E43A4();
    v13 = (void **)(v11 + 32);
    do
    {
      v14 = *v13++;
      v15 = v14;
      v16 = (void *)sub_231414BE4();
      objc_msgSend(v9, sel_overrideSatisfactionOfRequirementWithIdentifier_isSatisfied_, v15, v16);

      --v12;
    }
    while (v12);
  }

  return swift_bridgeObjectRelease();
}

void sub_2313D811C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1210)
  {
    sub_23141483C();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1210);
  }
}

uint64_t sub_2313D8170(uint64_t a1)
{
  uint64_t v2;

  sub_2313D81AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2313D81AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1218)
  {
    sub_2312CEA10(255, &qword_255ED1220);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1218);
  }
}

uint64_t sub_2313D8214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313D81AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313D8258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313D81AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313D829C()
{
  uint64_t v0;

  sub_2314130CC();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_2313D82D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0 + 6;
  v5 = v0[11];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23132724C;
  v6[9] = v4;
  v6[10] = v5;
  v6[7] = v2;
  v6[8] = v3;
  return swift_task_switch();
}

void sub_2313D8344()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313D839C()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313D83F4()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313D844C()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313D84A4()
{
  sub_231414EE4();
  __break(1u);
}

uint64_t sub_2313D84FC(unsigned int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(void);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD v62[6];

  v58 = a6;
  v57 = a5;
  v53 = a4;
  v55 = a3;
  v56 = a2;
  sub_2313D9E4C();
  v46 = v7;
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411A4C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313D9EC4();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313D9F5C();
  v50 = v18;
  v48 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v47 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313DA0E4();
  v51 = *(_QWORD *)(v20 - 8);
  v52 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v49 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (BYTE2(a1) && BYTE2(a1) != 1)
    v54 = 1;
  else
    v54 = sub_231415070();
  swift_bridgeObjectRelease();
  sub_2312D6C20(v53, (uint64_t)&v60, (uint64_t (*)(_QWORD))sub_2313D9DE8);
  if (v61)
  {
    LODWORD(v53) = HIBYTE(a1);
    LODWORD(v46) = HIWORD(a1);
    LODWORD(v45) = a1 >> 8;
    sub_2312DFB68(&v60, (uint64_t)v62);
    sub_2312CEA5C(v62, v62[3]);
    sub_2313DB198();
    sub_2312CCC24(&qword_25415CE28, (uint64_t (*)(uint64_t))sub_2313D9EC4, MEMORY[0x24BDB9568]);
    v22 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(_QWORD *)&v60 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v9);
    v23 = (*(unsigned __int8 *)(v10 + 80) + 37) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = swift_allocObject();
    *(_BYTE *)(v24 + 16) = v54 & 1;
    v25 = v59;
    *(_QWORD *)(v24 + 24) = v59;
    *(_BYTE *)(v24 + 32) = v56 & 1;
    *(_BYTE *)(v24 + 33) = a1;
    *(_BYTE *)(v24 + 34) = v45;
    *(_BYTE *)(v24 + 35) = v46;
    *(_BYTE *)(v24 + 36) = v53;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, v12, v9);
    v26 = (uint64_t *)(v24 + ((v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
    v27 = v57;
    v28 = v58;
    *v26 = v57;
    v26[1] = v28;
    sub_2313602BC(v27, v28);
    v29 = MEMORY[0x24BDB9AE0];
    sub_2313DA00C(0, (unint64_t *)&unk_25415CFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312E7D6C();
    sub_2313DA0A4(&qword_25415CF98, (unint64_t *)&unk_25415CFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v29, MEMORY[0x24BDB9AF8]);
    v30 = v47;
    sub_231413EB8();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = v25;
    sub_2312D6DD8(0, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_2312CCC24(&qword_25415CE68, (uint64_t (*)(uint64_t))sub_2313D9F5C, MEMORY[0x24BDB96C0]);
    sub_23138EB98();
    v32 = v49;
    v31 = v50;
    sub_231413ED0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v31);
    sub_2312CCC24(&qword_25415CF20, (uint64_t (*)(uint64_t))sub_2313DA0E4, MEMORY[0x24BDB9740]);
    v33 = v52;
    v34 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v33);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v62);
  }
  else
  {
    sub_2312CEBD4((uint64_t)&v60, (uint64_t (*)(_QWORD))sub_2313D9DE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v9);
    v35 = (*(unsigned __int8 *)(v10 + 80) + 30) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v59;
    *(_BYTE *)(v36 + 24) = v54 & 1;
    *(_BYTE *)(v36 + 25) = v56 & 1;
    *(_DWORD *)(v36 + 26) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v35, v12, v9);
    v37 = (uint64_t *)(v36 + ((v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8));
    v38 = v57;
    v39 = v58;
    *v37 = v57;
    v37[1] = v39;
    sub_2313602BC(v38, v39);
    sub_2312D6DD8(0, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_23138EB98();
    v40 = v44;
    sub_231413E04();
    sub_2312CCC24(qword_25415D3B0, (uint64_t (*)(uint64_t))sub_2313D9E4C, MEMORY[0x24BDB9E90]);
    v41 = v46;
    v34 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
  }
  return v34;
}

uint64_t sub_2313D8B3C(int a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD v57[2];
  int v58;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[4];

  v7 = v6;
  v59 = a5;
  v58 = a3;
  v61 = a1;
  v11 = sub_2314119B0();
  v68 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v64 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)v57 - v14;
  sub_2312E804C(0);
  v66 = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v63 = (uint64_t)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v62 = (uint64_t)v57 - v19;
  if (qword_25415DF98 != -1)
    swift_once();
  v20 = sub_231413780();
  v21 = sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
  v22 = sub_231413768();
  v23 = sub_23141498C();
  v24 = os_log_type_enabled(v22, v23);
  v69 = v7;
  v67 = v21;
  v65 = v11;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v71[0] = v26;
    *(_DWORD *)v25 = 136446722;
    v57[1] = a4;
    v27 = sub_2314151A8();
    v70 = sub_23133180C(v27, v28, v71);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 1026;
    LODWORD(v70) = v61 & 1;
    sub_231414CBC();
    *(_WORD *)(v25 + 18) = 1026;
    LODWORD(v70) = a2 & 1;
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s] hideInDiscover: %{BOOL,public}d shouldShowPromotion: %{BOOL,public}d", (uint8_t *)v25, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v26, -1, -1);
    MEMORY[0x2348DE308](v25, -1, -1);
  }

  if ((a2 & 1) != 0)
  {
    sub_2312D6DD8(0, &qword_255ECAC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v29 = v68;
    v30 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_231416A30;
    v32 = a6;
    v33 = v69;
    sub_2313D9664(v58, v61 & 1, v59, v32, v31 + v30);
  }
  else
  {
    v29 = v68;
    v33 = v69;
  }
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DF28, (uint64_t (*)(uint64_t))sub_2312E804C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v34 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_231416A30;
  v36 = v35 + v34;
  sub_231411A10();
  sub_2312CEA5C(v71, v71[3]);
  (*(void (**)(void))(v33 + 104))();
  sub_2314119D4();
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v71);
  sub_231412A90();
  v37 = v62;
  sub_2312D6C20(v36, v62, (uint64_t (*)(_QWORD))sub_2312E804C);
  v38 = v63;
  sub_2312E8120(v37, v63);
  v39 = v65;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v38, 1, v65) == 1)
  {
    sub_2312CEBD4(v38, (uint64_t (*)(_QWORD))sub_2312E804C);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
    v41 = v60;
    v40(v60, v38, v39);
    v40(v64, (uint64_t)v41, v39);
    v42 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_2312CDA58(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
    v44 = *(_QWORD *)(v42 + 16);
    v43 = *(_QWORD *)(v42 + 24);
    if (v44 >= v43 >> 1)
      v42 = sub_2312CDA58(v43 > 1, v44 + 1, 1, v42);
    *(_QWORD *)(v42 + 16) = v44 + 1;
    v40((char *)(v42+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v44), (uint64_t)v64, v39);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v45 = sub_2314147C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v46 = sub_231413768();
  v47 = sub_23141498C();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v71[0] = v49;
    *(_DWORD *)v48 = 136446466;
    v50 = sub_2314151A8();
    v70 = sub_23133180C(v50, v51, v71);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    v52 = sub_231412A90();
    v53 = MEMORY[0x2348DD18C](v52, MEMORY[0x24BE47F58]);
    v55 = v54;
    swift_bridgeObjectRelease();
    v70 = sub_23133180C(v53, v55, v71);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v46, v47, "%{public}s Submitting these changes: %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v49, -1, -1);
    MEMORY[0x2348DE308](v48, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v45;
}

uint64_t sub_2313D93D8(void **a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = *a1;
  if (qword_25415DF98 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162FF0);
  v3 = v1;
  v4 = v1;
  v5 = sub_231413768();
  v6 = sub_231414974();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_2314151A8();
    sub_23133180C(v9, v10, &v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    v11 = sub_2314150D0();
    sub_23133180C(v11, v12, &v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s] error fetching onboarding title dismissed date: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }
  else
  {

  }
  v14 = MEMORY[0x24BEE4AF8];
  sub_2312E7D6C();
  return sub_231413DD4();
}

uint64_t sub_2313D9604(uint64_t a1, int a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_2313D8B3C(a2, a3, a4, a5, a6, a7);
  sub_2312E7D6C();
  return sub_231413DD4();
}

uint64_t sub_2313D9664@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  unsigned int *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t (*v34)(_BYTE *, _QWORD);
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[40];

  v50 = a3;
  v51 = a4;
  v47 = a2;
  v52 = a1;
  v53 = a5;
  v6 = sub_231411AE8();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415D528, (uint64_t (*)(uint64_t))MEMORY[0x24BE47C90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)v38 - v9;
  v46 = sub_231411AC4();
  v44 = *(_QWORD *)(v46 - 8);
  v10 = MEMORY[0x24BDAC7A8](v46);
  v39 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v38 - v12;
  v13 = sub_231411F50();
  v48 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v5 + 136))(v14);
  v17 = (*(uint64_t (**)(void))(v5 + 104))();
  (*(void (**)(void))(v5 + 128))();
  v18 = (void *)sub_231411A28();
  (*(void (**)(void))(v5 + 120))();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    v38[1] = v17;
    if (sub_231414F08())
      sub_23138EEC4(MEMORY[0x24BEE4AF8]);
  }
  sub_23141192C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  if (BYTE2(v52))
  {
    if (BYTE2(v52) != 1)
    {
      v26 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v46);
      sub_2313DA3F0(v26);
      goto LABEL_8;
    }
    v19 = (unsigned int *)MEMORY[0x24BE47C78];
  }
  else
  {
    v19 = (unsigned int *)MEMORY[0x24BE47C80];
  }
  v21 = v44;
  v20 = v45;
  v22 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v45, *v19, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
  v23 = v40;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v40, v20, v22);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v39, v23, v22);
  v24 = v41;
  sub_231411AF4();
  v25 = v43;
  sub_231411944();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v22);
LABEL_8:
  v27 = sub_231411A94();
  v29 = v28;
  v30 = (uint64_t (*)(_BYTE *, _QWORD))sub_23141198C();
  sub_231412A90();
  sub_2313F2664(&v54, v27, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v30(v55, 0);
  v32 = *(void (**)(uint64_t))(v5 + 112);
  v32(v31);
  sub_2313DA444();
  v33 = sub_2314148B4();
  swift_bridgeObjectRelease();
  v34 = (uint64_t (*)(_BYTE *, _QWORD))sub_23141198C();
  sub_231370D80(v33);
  v35 = v34(v55, 0);
  v36 = ((uint64_t (*)(uint64_t))v32)(v35);
  sub_231403254(v36);
  swift_bridgeObjectRelease();
  sub_231411980();
  sub_23141195C();
  return sub_231411950();
}

uint64_t sub_2313D9AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2313D9B4C()
{
  return type metadata accessor for HeartFeaturePromotionGenerator();
}

uint64_t type metadata accessor for HeartFeaturePromotionGenerator()
{
  uint64_t result;

  result = qword_25415C1F0;
  if (!qword_25415C1F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313D9B90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2313D9C14()
{
  return swift_retain();
}

uint64_t sub_2313D9C28@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2313D9C70(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v7 = v6;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_featurePromotionResult) = a1;
  v12 = v6 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  v13 = sub_231411A04();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  if (a1 > 1u)
  {
    swift_bridgeObjectRelease();
    v16 = 0;
  }
  else
  {
    v15 = sub_231415070();
    swift_bridgeObjectRelease();
    v16 = v15 ^ 1;
  }
  v17 = sub_2313D84FC(a1, v16 & 1, a3, a2, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  v18 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a3, v18);
  sub_2312CEBD4(a2, (uint64_t (*)(_QWORD))sub_2313D9DE8);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_publisher) = v17;
  return v7;
}

void sub_2313D9DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CA30)
  {
    sub_2312DF79C(255, &qword_25415CA28);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CA30);
  }
}

void sub_2313D9E4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D078)
  {
    sub_2312D6DD8(255, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_23138EB98();
    v0 = sub_231413E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D078);
  }
}

void sub_2313D9EC4()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415CE30)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_2313DA00C(255, (unint64_t *)&qword_25415D050, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2313DA0A4(&qword_25415D048, (unint64_t *)&qword_25415D050, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    v1 = sub_231413C18();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415CE30);
  }
}

void sub_2313D9F5C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415CE70)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_2313DA00C(255, (unint64_t *)&unk_25415CFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312E7D6C();
    sub_2313DA0A4(&qword_25415CF98, (unint64_t *)&unk_25415CFA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231413C60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415CE70);
  }
}

void sub_2313DA00C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2312D6DD8(255, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = v6;
    v8 = sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2313DA0A4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2313DA00C(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2313DA0E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CF28)
  {
    sub_2313D9F5C();
    sub_2312D6DD8(255, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_2312CCC24(&qword_25415CE68, (uint64_t (*)(uint64_t))sub_2313D9F5C, MEMORY[0x24BDB96C0]);
    sub_23138EB98();
    v0 = sub_231413C78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CF28);
  }
}

uint64_t sub_2313DA1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 30) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(_QWORD *)(v0 + v4 + 8);
  if (v5 >> 60 != 15)
    sub_2312D6CA8(*(_QWORD *)(v0 + v4), v5);
  return swift_deallocObject();
}

uint64_t sub_2313DA220()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_231411A4C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 30) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_2313D9604(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_BYTE *)(v0 + 25), *(_DWORD *)(v0 + 26), v0 + v2, *v3, v3[1]);
}

uint64_t sub_2313DA284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 37) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(_QWORD *)(v0 + v4 + 8);
  if (v5 >> 60 != 15)
    sub_2312D6CA8(*(_QWORD *)(v0 + v4), v5);
  return swift_deallocObject();
}

uint64_t sub_2313DA304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 37) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_BYTE *)(v2 + 16);
  v8 = *(_BYTE *)(v2 + 32);
  v9 = *(_DWORD *)(v2 + 33);
  v10 = v2 + v6;
  v11 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = sub_231411608();
  v15 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14) != 1;
  result = sub_2313D8B3C((v7 | v15) & 1, v8, v9, v10, v12, v13);
  *a2 = result;
  return result;
}

uint64_t sub_2313DA3D8()
{
  return swift_deallocObject();
}

uint64_t sub_2313DA3E8(void **a1)
{
  return sub_2313D93D8(a1);
}

uint64_t sub_2313DA3F0(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, &qword_25415D528, (uint64_t (*)(uint64_t))MEMORY[0x24BE47C90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2313DA444()
{
  unint64_t result;

  result = qword_25415DEB0;
  if (!qword_25415DEB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DEB0);
  }
  return result;
}

uint64_t sub_2313DA480()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_231411374();

  return v2;
}

uint64_t sub_2313DA544()
{
  id v0;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_2313DA5B4()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231418140;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2978]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FBF48(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_2313DA6D0()
{
  return 0xD000000000000025;
}

unint64_t sub_2313DA6F0()
{
  return 0xD000000000000025;
}

uint64_t sub_2313DA70C()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2313DA7A0()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2313DA83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  void (*v9)(_QWORD);
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unsigned int v41;

  sub_231312950();
  v0 = sub_231411C08();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2314220A0;
  if (qword_25415E610 != -1)
    swift_once();
  v5 = (id)qword_254163058;
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (!v7)
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  v8 = v4 + v3;
  *(_QWORD *)v8 = v7;
  *(_BYTE *)(v8 + 8) = 0;
  v9 = *(void (**)(_QWORD))(v1 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v8, *MEMORY[0x24BE3F908], v0);
  v10 = (uint64_t *)(v8 + v2);
  *v10 = sub_231411374();
  v10[1] = v11;
  ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v8 + v2, *MEMORY[0x24BE3F910], v0);
  v12 = (uint64_t *)(v8 + 2 * v2);
  *v12 = sub_231411374();
  v12[1] = v13;
  v12[2] = 0;
  v41 = *MEMORY[0x24BE3F8D0];
  v9(v12);
  v40 = v4;
  v14 = v8 + 3 * v2;
  *(_QWORD *)v14 = sub_231411374();
  *(_QWORD *)(v14 + 8) = v15;
  *(_BYTE *)(v14 + 16) = 0;
  v16 = *MEMORY[0x24BE3F930];
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v14, v16, v0);
  v17 = v8 + 4 * v2;
  *(_QWORD *)v17 = sub_231411374();
  *(_QWORD *)(v17 + 8) = v18;
  *(_BYTE *)(v17 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v17, v16, v0);
  v19 = v8 + 5 * v2;
  *(_QWORD *)v19 = sub_231411374();
  *(_QWORD *)(v19 + 8) = v20;
  *(_BYTE *)(v19 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v19, v16, v0);
  v21 = (uint64_t *)(v8 + 6 * v2);
  *v21 = sub_231411374();
  v21[1] = v22;
  v21[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v21, v41, v0);
  v23 = v8 + 7 * v2;
  *(_QWORD *)v23 = sub_231411374();
  *(_QWORD *)(v23 + 8) = v24;
  *(_BYTE *)(v23 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v23, v16, v0);
  v25 = v8 + 8 * v2;
  *(_QWORD *)v25 = sub_231411374();
  *(_QWORD *)(v25 + 8) = v26;
  *(_BYTE *)(v25 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v25, v16, v0);
  v27 = v8 + 9 * v2;
  *(_QWORD *)v27 = sub_231411374();
  *(_QWORD *)(v27 + 8) = v28;
  *(_BYTE *)(v27 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v27, v16, v0);
  v29 = (uint64_t *)(v8 + 10 * v2);
  *v29 = sub_231411374();
  v29[1] = v30;
  v29[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v29, v41, v0);
  v31 = v8 + 11 * v2;
  *(_QWORD *)v31 = sub_231411374();
  *(_QWORD *)(v31 + 8) = v32;
  *(_BYTE *)(v31 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v31, v16, v0);
  v33 = v8 + 12 * v2;
  *(_QWORD *)v33 = sub_231411374();
  *(_QWORD *)(v33 + 8) = v34;
  *(_BYTE *)(v33 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v33, v16, v0);
  v35 = (uint64_t *)(v8 + 13 * v2);
  *v35 = sub_231411374();
  v35[1] = v36;
  v35[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v35, v41, v0);
  v37 = v8 + 14 * v2;
  *(_QWORD *)v37 = sub_231411374();
  *(_QWORD *)(v37 + 8) = v38;
  *(_BYTE *)(v37 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v37, v16, v0);
  return v40;
}

ValueMetadata *type metadata accessor for AFibBurdenArticleProviderLearnAboutAFibBurden()
{
  return &type metadata for AFibBurdenArticleProviderLearnAboutAFibBurden;
}

id sub_2313DAEF8()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (v2)
    return v2;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
}

uint64_t sub_2313DAFCC()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312D6D30();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

id sub_2313DB148()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramOnboardingSessionSimulationHeroView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ElectrocardiogramOnboardingSessionSimulationHeroView()
{
  return objc_opt_self();
}

uint64_t sub_2313DB198()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2314146BC();
  sub_231411B60();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_2312D7484();
  sub_2312CCC24(&qword_25415D048, (uint64_t (*)(uint64_t))sub_2312D7484, MEMORY[0x24BDB9E58]);
  sub_231413E94();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2313DB2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_2312D375C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_2312D4A68();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v12 = sub_2312CE3B8(v8, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_2312D3870(a1, (uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  sub_2312D38B4((uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(_QWORD *)(v14 + ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v16[1] = 0;
  sub_231413594();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2313DB428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[2];

  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_2312D3870(a1, (uint64_t)v4);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v6[0];
}

uint64_t sub_2313DB55C(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_2312D4A68();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (v9)
  {
    v10 = v9;
    if (qword_25415B6D8 != -1)
      swift_once();
    v11 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v9;
    *(_QWORD *)(v12 + 24) = a2;
    v17 = 0;
    v13 = v9;
    sub_2314135AC();
    swift_release();

  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v14 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    *(_QWORD *)(swift_allocObject() + 16) = a2;
    v17 = 0;
    sub_231413594();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2313DB718(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313DB830()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2313DB8F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *v1;
  sub_2312D375C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_2314146BC();
  v7 = sub_231411B6C();
  swift_bridgeObjectRelease();
  v11[1] = v7;
  sub_2312D3870(a1, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_2312D38B4((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(_QWORD *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  sub_2313DC0AC();
  sub_2312CCC24(&qword_255ECB3F0, (uint64_t (*)(uint64_t))sub_2313DC0AC, MEMORY[0x24BDB9E58]);
  sub_231413EC4();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2313DBA8C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  sub_2312D375C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  sub_2312D4A68();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if (v14)
  {
    v15 = v14;
    if (qword_25415B6D8 != -1)
      swift_once();
    v16 = sub_2312CE3B8(v10, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v16, v10);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = a3;
    v24 = 0;
    v18 = v14;
    sub_2314135AC();
    swift_release();

  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v19 = sub_2312CE3B8(v10, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
    sub_2312D3870(a2, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21 = swift_allocObject();
    sub_2312D38B4((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
    *(_QWORD *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    v24 = 0;
    sub_231413594();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_2313DBCC0(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313DBDD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];

  v2 = sub_231411608();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - v7;
  sub_2312D375C();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v16 - v13;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_2312D3870(a1, (uint64_t)v14);
  sub_2312D3870((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_2314146E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  sub_2312D3CA0((uint64_t)v14);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v16[0];
}

uint64_t sub_2313DC00C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenSettingsManager()
{
  return objc_opt_self();
}

uint64_t sub_2313DC05C(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_2312D375C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_2313DBA8C(a1, v1 + v5, *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_2313DC0AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB3E8)
  {
    sub_2312D3C14();
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB3E8);
  }
}

uint64_t sub_2313DC118()
{
  return sub_2313DC250((uint64_t (*)(unint64_t, _QWORD))sub_2313DBDD8);
}

uint64_t sub_2313DC124()
{
  uint64_t v0;

  return sub_2313DBCC0(*(void **)(v0 + 16));
}

uint64_t sub_2313DC12C()
{
  return swift_deallocObject();
}

uint64_t sub_2313DC13C(uint64_t a1)
{
  uint64_t v1;

  return sub_2313DB2B0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2313DC144()
{
  return swift_deallocObject();
}

uint64_t sub_2313DC154(void **a1)
{
  uint64_t v1;

  return sub_2313DB55C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2313DC15C()
{
  return swift_deallocObject();
}

uint64_t sub_2313DC16C()
{
  return sub_2313DB830();
}

uint64_t sub_2313DC174()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313DC198()
{
  uint64_t v0;

  return sub_2313DB718(*(void **)(v0 + 16));
}

uint64_t sub_2313DC1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2312D375C();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_2313DC244()
{
  return sub_2313DC250((uint64_t (*)(unint64_t, _QWORD))sub_2313DB428);
}

uint64_t sub_2313DC250(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_2312D375C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a1(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for AFibBurdenOnboardingShouldKnowViewController()
{
  uint64_t result;

  result = qword_255ED12F8;
  if (!qword_255ED12F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313DC2E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313DC330(char a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t result;
  char *v26;

  *(_QWORD *)&v1[qword_255ED12E8 + 8] = 0;
  swift_unknownObjectWeakInit();
  sub_2313DD320();
  sub_231412484();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23141ABD0;
  v2 = qword_255ECAAD8;
  v26 = v1;
  if (v2 != -1)
    swift_once();
  sub_231411374();
  sub_2312E42E4();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_231418090;
  *(_QWORD *)(v3 + 32) = 0xD000000000000014;
  *(_QWORD *)(v3 + 40) = 0x8000000231427740;
  *(_QWORD *)(v3 + 48) = 0xD000000000000013;
  *(_QWORD *)(v3 + 56) = 0x8000000231432400;
  v4 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v3);
  v4[2] = 3;
  v4[8] = 6647375;
  v4[9] = 0xE300000000000000;
  v5 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v6)
  {
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_13;
  }
  sub_2314146BC();

  swift_arrayDestroy();
  sub_231412478();
  sub_231411374();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_231418090;
  *(_QWORD *)(v7 + 32) = 0xD000000000000014;
  *(_QWORD *)(v7 + 40) = 0x8000000231427740;
  *(_QWORD *)(v7 + 48) = 0xD000000000000013;
  *(_QWORD *)(v7 + 56) = 0x8000000231432400;
  v8 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v7);
  v8[2] = 3;
  v8[8] = 7305044;
  v8[9] = 0xE300000000000000;
  v9 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v10)
  {
LABEL_13:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_14;
  }
  sub_2314146BC();

  swift_arrayDestroy();
  sub_231412478();
  sub_231411374();
  sub_231411374();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231418090;
  *(_QWORD *)(v11 + 32) = 0xD000000000000014;
  *(_QWORD *)(v11 + 40) = 0x8000000231427740;
  *(_QWORD *)(v11 + 48) = 0xD000000000000013;
  *(_QWORD *)(v11 + 56) = 0x8000000231432400;
  v12 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v11);
  v12[2] = 3;
  v12[8] = 0x6565726854;
  v12[9] = 0xE500000000000000;
  v13 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v14)
  {
LABEL_14:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_15;
  }
  sub_2314146BC();

  swift_arrayDestroy();
  sub_231412478();
  sub_231411374();
  sub_231411374();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  *(_QWORD *)(v15 + 32) = 0xD000000000000014;
  *(_QWORD *)(v15 + 40) = 0x8000000231427740;
  *(_QWORD *)(v15 + 48) = 0xD000000000000013;
  *(_QWORD *)(v15 + 56) = 0x8000000231432400;
  v16 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v15);
  v16[2] = 3;
  v16[8] = 1920298822;
  v16[9] = 0xE400000000000000;
  v17 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v18 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v18)
  {
LABEL_15:
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_16;
  }
  sub_2314146BC();

  swift_arrayDestroy();
  sub_231412478();
  sub_231411374();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231418090;
  *(_QWORD *)(v19 + 32) = 0xD000000000000014;
  *(_QWORD *)(v19 + 40) = 0x8000000231427740;
  *(_QWORD *)(v19 + 48) = 0xD000000000000013;
  *(_QWORD *)(v19 + 56) = 0x8000000231432400;
  v20 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v19);
  v20[2] = 3;
  v20[8] = 1702259014;
  v20[9] = 0xE400000000000000;
  v21 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v22 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v22)
  {
LABEL_16:
    result = swift_arrayDestroy();
    __break(1u);
    return result;
  }
  sub_2314146BC();

  swift_arrayDestroy();
  sub_231412478();
  v26[qword_255ED12F0] = a1 & 1;

  sub_231411374();
  if ((a1 & 1) != 0)
    return sub_231413204();
  v23 = (id)sub_231413204();
  v24 = objc_msgSend(v23, sel_navigationItem, 0);
  objc_msgSend(v24, sel_setRightBarButtonItem_, 0);

  return (uint64_t)v23;
}

uint64_t sub_2313DCC3C()
{
  unsigned __int8 *v0;
  void *v1;
  int v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t result;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v2 = v0[qword_255ED12F0];
  if (v2 == 1)
    objc_msgSend(v0, sel_hxui_addCancelButton);
  v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setBackButtonDisplayMode_, 1);

  v4 = objc_msgSend(v1, sel_headerView);
  if (qword_255ECA990 != -1)
    swift_once();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v5 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  if ((v2 & 1) == 0)
    return sub_231413294();
  sub_2312E42E4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_231418090;
  *(_QWORD *)(v6 + 32) = 0xD000000000000014;
  *(_QWORD *)(v6 + 40) = 0x8000000231427740;
  *(_QWORD *)(v6 + 48) = 0xD000000000000013;
  *(_QWORD *)(v6 + 56) = 0x8000000231432400;
  v7 = (char *)sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v6);
  *((_QWORD *)v7 + 2) = 3;
  strcpy(v7 + 64, "ContinueButton");
  v7[79] = -18;
  v8 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v9)
  {
    sub_2314146BC();

    swift_arrayDestroy();
    sub_231413288();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_arrayDestroy();
    __break(1u);
  }
  return result;
}

void sub_2313DCF24(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313DCC3C();

}

uint64_t sub_2313DCF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + qword_255ED12E8;
  result = MEMORY[0x2348DE3BC](v0 + qword_255ED12E8);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8))(v0, &off_250029880, ObjectType, v3);
    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_2313DCFD0(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ED12E8];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ED12E8]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 16);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

void sub_2313DD060()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313DD08C()
{
  uint64_t v0;

  return sub_2312D2854(v0 + qword_255ED12E8);
}

id sub_2313DD09C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313DD0D0(uint64_t a1)
{
  return sub_2312D2854(a1 + qword_255ED12E8);
}

uint64_t sub_2313DD0E0()
{
  return type metadata accessor for AFibBurdenOnboardingShouldKnowViewController();
}

uint64_t sub_2313DD0E8()
{
  return 5;
}

uint64_t sub_2313DD0F0()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + qword_255ED12E8);
}

uint64_t sub_2313DD120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + qword_255ED12E8 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313DD158()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  sub_2312D3C68(0, &qword_255ECCA40);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231414C20();
  v3 = (id)sub_2314149BC();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_23131DB9C, v2);

}

void sub_2313DD270(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313DD158();

}

void sub_2313DD2A4(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

uint64_t sub_2313DD2FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2313DD320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1348)
  {
    sub_231412484();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1348);
  }
}

uint64_t *sub_2313DD374(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_231411D1C();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v12 = (uint64_t *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    v15 = *(uint64_t *)((char *)a2 + v11 + 24);
    sub_231412A90();
    sub_231412A90();
    if (v15)
    {
      v12[2] = v13[2];
      v12[3] = v15;
      v16 = v13[5];
      v12[4] = v13[4];
      v12[5] = v16;
      sub_231412A90();
      sub_231412A90();
    }
    else
    {
      v18 = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
      *((_OWORD *)v12 + 2) = v18;
    }
  }
  return v4;
}

uint64_t sub_2313DD470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_231411D1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(v6 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *sub_2313DD4F8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_231411D1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10];
  v14 = *(_QWORD *)&a2[v10 + 8];
  *v11 = v13;
  v11[1] = v14;
  v15 = v12[3];
  sub_231412A90();
  sub_231412A90();
  if (v15)
  {
    v11[2] = v12[2];
    v11[3] = v15;
    v16 = v12[5];
    v11[4] = v12[4];
    v11[5] = v16;
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v17 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v17;
  }
  return a1;
}

_BYTE *sub_2313DD5C8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_231411D1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *v11 = *(_QWORD *)&a2[v10];
  v11[1] = *(_QWORD *)&a2[v10 + 8];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v13 = v11 + 2;
  v14 = v12 + 2;
  v15 = v12[3];
  if (v11[3])
  {
    if (v15)
    {
      v11[2] = v12[2];
      v11[3] = v12[3];
      sub_231412A90();
      swift_bridgeObjectRelease();
      v11[4] = v12[4];
      v11[5] = v12[5];
      sub_231412A90();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2313DD724((uint64_t)(v11 + 2));
      v16 = *((_OWORD *)v12 + 2);
      *v13 = *v14;
      *((_OWORD *)v11 + 2) = v16;
    }
  }
  else if (v15)
  {
    v11[2] = v12[2];
    v11[3] = v12[3];
    v11[4] = v12[4];
    v11[5] = v12[5];
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v17 = *((_OWORD *)v12 + 2);
    *v13 = *v14;
    *((_OWORD *)v11 + 2) = v17;
  }
  return a1;
}

uint64_t sub_2313DD724(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_2313DD754(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_231411D1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  return a1;
}

_BYTE *sub_2313DD7E4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_231411D1C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)v11 + 3))
    goto LABEL_5;
  v14 = *((_QWORD *)v12 + 3);
  if (!v14)
  {
    sub_2313DD724((uint64_t)(v11 + 16));
LABEL_5:
    v16 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v16;
    return a1;
  }
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 3) = v14;
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v12 + 5);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2313DD8C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313DD8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_231411D1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2313DD954()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313DD960(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231411D1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSettingsState()
{
  uint64_t result;

  result = qword_255ED13A8;
  if (!qword_255ED13A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313DDA18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411D1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.Link()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link;
}

uint64_t sub_2313DDAB4(_QWORD *a1, int a2)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;
  char v31;

  v28 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  sub_23130589C(0, &qword_255ED14D8, (uint64_t (*)(void))sub_2313E035C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys, MEMORY[0x24BEE3520]);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v21 - v5;
  sub_23130589C(0, &qword_255ED14E0, (uint64_t (*)(void))sub_2313E03A0, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys, v3);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v21 = (char *)&v21 - v7;
  sub_23130589C(0, &qword_255ED14E8, (uint64_t (*)(void))sub_2313E03E4, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys, v3);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  sub_23130589C(0, &qword_255ED14F0, (uint64_t (*)(void))sub_2313E0428, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys, v3);
  v14 = v13;
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v21 - v15;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E0428();
  sub_231415178();
  if ((_BYTE)v28)
  {
    if (v28 == 1)
    {
      v30 = 1;
      sub_2313E03A0();
      v17 = v21;
      sub_231414FEC();
      v19 = v22;
      v18 = v23;
    }
    else
    {
      v31 = 2;
      sub_2313E035C();
      v17 = v24;
      sub_231414FEC();
      v19 = v25;
      v18 = v26;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    v29 = 0;
    sub_2313E03E4();
    sub_231414FEC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v14);
}

uint64_t sub_2313DDD70(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;

  v13[2] = a5;
  v13[1] = a4;
  sub_23130589C(0, &qword_255ED1440, (uint64_t (*)(void))sub_2313DF92C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys, MEMORY[0x24BEE3520]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v13 - v9;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313DF92C();
  sub_231415178();
  v15 = 0;
  v11 = v13[3];
  sub_23141501C();
  if (!v11)
  {
    v14 = 1;
    sub_23141501C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2313DDEB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[32];
  _BYTE v12[48];

  v3 = v1;
  sub_23130589C(0, &qword_255ED14F8, (uint64_t (*)(void))sub_2313E046C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v11[-v8];
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E046C();
  sub_231415178();
  v11[0] = 0;
  sub_23141501C();
  if (!v2)
  {
    sub_2313E04F4(v3 + 16, (uint64_t)v12);
    sub_2313E04F4((uint64_t)v12, (uint64_t)v11);
    v12[47] = 1;
    sub_2313E0550();
    sub_231415010();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2313DE00C(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  __int128 v13;
  _QWORD v15[2];
  __int128 v16;
  __int128 v17;
  char v18;

  v3 = v1;
  sub_23130589C(0, &qword_255ED1410, (uint64_t (*)(void))sub_2313DEBEC, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313DEBEC();
  sub_231415178();
  LOBYTE(v15[0]) = *v3;
  v18 = 0;
  sub_2313DECB8();
  sub_231415034();
  if (!v2)
  {
    v10 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    LOBYTE(v15[0]) = 1;
    sub_231411D1C();
    sub_2313C24E8(&qword_255ED07A8, MEMORY[0x24BE412B8]);
    sub_231415034();
    v15[0] = *(_QWORD *)&v3[*(int *)(v10 + 24)];
    v18 = 2;
    sub_2312CF374(0, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2313DECFC(&qword_255ED1420, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_231415034();
    v11 = &v3[*(int *)(v10 + 28)];
    v12 = *((_QWORD *)v11 + 1);
    v15[0] = *(_QWORD *)v11;
    v15[1] = v12;
    v13 = *((_OWORD *)v11 + 2);
    v16 = *((_OWORD *)v11 + 1);
    v17 = v13;
    v18 = 3;
    sub_2313DED70();
    sub_231415034();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2313DE260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v22 = a2;
  v3 = sub_231411D1C();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ED13E8, (uint64_t (*)(void))sub_2313DEBEC, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys, MEMORY[0x24BEE33E0]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - v7;
  v9 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CEA5C(a1, a1[3]);
  sub_2313DEBEC();
  v26 = v8;
  v12 = v28;
  sub_23141516C();
  if (v12)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v28 = v6;
  v21 = a1;
  v13 = v23;
  v14 = v24;
  v15 = v25;
  v33 = 0;
  sub_2313DEC30();
  sub_231414FD4();
  *v11 = v29;
  LOBYTE(v29) = 1;
  sub_2313C24E8(&qword_255ED0780, MEMORY[0x24BE412C8]);
  sub_231414FD4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 32))(&v11[v9[5]], v13, v15);
  sub_2312CF374(0, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v33 = 2;
  sub_2313DECFC(&qword_255ED1400, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_231414FD4();
  *(_QWORD *)&v11[v9[6]] = v29;
  v33 = 3;
  sub_2313DEC74();
  sub_231414FD4();
  v16 = (uint64_t)v21;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  v17 = v30;
  v18 = &v11[v9[7]];
  *(_QWORD *)v18 = v29;
  *((_QWORD *)v18 + 1) = v17;
  v19 = v32;
  *((_OWORD *)v18 + 1) = v31;
  *((_OWORD *)v18 + 2) = v19;
  sub_23133F27C((uint64_t)v11, v22);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v16);
  return sub_23133F660((uint64_t)v11);
}

uint64_t sub_2313DE5FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28271;
  if (*v0 != 1)
    v1 = 6710895;
  if (*v0)
    return v1;
  else
    return 0x64656C6261736964;
}

uint64_t sub_2313DE644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313DF134(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2313DE668()
{
  sub_2313E0428();
  return sub_231415190();
}

uint64_t sub_2313DE690()
{
  sub_2313E0428();
  return sub_23141519C();
}

uint64_t sub_2313DE6B8()
{
  sub_2313E03E4();
  return sub_231415190();
}

uint64_t sub_2313DE6E0()
{
  sub_2313E03E4();
  return sub_23141519C();
}

uint64_t sub_2313DE708()
{
  sub_2313E035C();
  return sub_231415190();
}

uint64_t sub_2313DE730()
{
  sub_2313E035C();
  return sub_23141519C();
}

uint64_t sub_2313DE758()
{
  sub_2313E03A0();
  return sub_231415190();
}

uint64_t sub_2313DE780()
{
  sub_2313E03A0();
  return sub_23141519C();
}

char *sub_2313DE7A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_2313DF260(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_2313DE7D0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_2313DDAB4(a1, *v1);
}

uint64_t sub_2313DE7E8()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 1954047348;
}

uint64_t sub_2313DE814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313DF694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2313DE838()
{
  sub_2313DF92C();
  return sub_231415190();
}

uint64_t sub_2313DE860()
{
  sub_2313DF92C();
  return sub_23141519C();
}

uint64_t sub_2313DE888@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2313DF764(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2313DE8B4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2313DDD70(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_2313DE8D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_231415070(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_231415070();
  }
  return result;
}

uint64_t sub_2313DE960()
{
  _BYTE *v0;

  if (*v0)
    return 1802398060;
  else
    return 1954047348;
}

uint64_t sub_2313DE984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313DFEA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2313DE9A8()
{
  sub_2313E046C();
  return sub_231415190();
}

uint64_t sub_2313DE9D0()
{
  sub_2313E046C();
  return sub_23141519C();
}

double sub_2313DE9F8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_2313DFF74(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2313DEA38(_QWORD *a1)
{
  return sub_2313DDEB0(a1);
}

BOOL sub_2313DEA70(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2313DEDB4(v7, v8);
}

uint64_t sub_2313DEAB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2313DEAEC + 4 * byte_231422760[*v0]))(0x7453686374697773, 0xEB00000000657461);
}

uint64_t sub_2313DEAEC()
{
  return 0x73696C6B63656863;
}

unint64_t sub_2313DEB10()
{
  return 0xD000000000000019;
}

uint64_t sub_2313DEB2C()
{
  return 0x7265746F6F66;
}

uint64_t sub_2313DEB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313E0178(a1, a2);
  *a3 = result;
  return result;
}

void sub_2313DEB64(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2313DEB70()
{
  sub_2313DEBEC();
  return sub_231415190();
}

uint64_t sub_2313DEB98()
{
  sub_2313DEBEC();
  return sub_23141519C();
}

uint64_t sub_2313DEBC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313DE260(a1, a2);
}

uint64_t sub_2313DEBD4(_QWORD *a1)
{
  return sub_2313DE00C(a1);
}

unint64_t sub_2313DEBEC()
{
  unint64_t result;

  result = qword_255ED13F0;
  if (!qword_255ED13F0)
  {
    result = MEMORY[0x2348DE248](&unk_231422BF4, &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED13F0);
  }
  return result;
}

unint64_t sub_2313DEC30()
{
  unint64_t result;

  result = qword_255ED13F8;
  if (!qword_255ED13F8)
  {
    result = MEMORY[0x2348DE248](&unk_231422BCC, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState);
    atomic_store(result, (unint64_t *)&qword_255ED13F8);
  }
  return result;
}

unint64_t sub_2313DEC74()
{
  unint64_t result;

  result = qword_255ED1408;
  if (!qword_255ED1408)
  {
    result = MEMORY[0x2348DE248](&unk_231422BA4, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer);
    atomic_store(result, (unint64_t *)&qword_255ED1408);
  }
  return result;
}

unint64_t sub_2313DECB8()
{
  unint64_t result;

  result = qword_255ED1418;
  if (!qword_255ED1418)
  {
    result = MEMORY[0x2348DE248](&unk_231422B7C, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState);
    atomic_store(result, (unint64_t *)&qword_255ED1418);
  }
  return result;
}

uint64_t sub_2313DECFC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_2312CF374(255, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v8 = a2;
    result = MEMORY[0x2348DE248](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313DED70()
{
  unint64_t result;

  result = qword_255ED1428;
  if (!qword_255ED1428)
  {
    result = MEMORY[0x2348DE248](&unk_231422B54, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer);
    atomic_store(result, (unint64_t *)&qword_255ED1428);
  }
  return result;
}

BOOL sub_2313DEDB4(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_231415070(), result = 0, (v5 & 1) != 0))
  {
    v8 = a1[2];
    v7 = a1[3];
    v10 = a1[4];
    v9 = a1[5];
    v12 = a2[2];
    v11 = a2[3];
    v14 = a2[4];
    v13 = a2[5];
    if (v7)
    {
      if (v11)
      {
        if (v8 == v12 && v7 == v11 || (sub_231415070() & 1) != 0)
        {
          if (v10 == v14 && v9 == v13)
          {
            sub_23133F69C(v8, v7);
            sub_23133F69C(v8, v7);
            sub_23133F69C(v12, v11);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2313DF104(v8, v7);
            return 1;
          }
          v17 = sub_231415070();
          sub_23133F69C(v8, v7);
          sub_23133F69C(v8, v7);
          sub_23133F69C(v12, v11);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2313DF104(v8, v7);
          return (v17 & 1) != 0;
        }
        sub_23133F69C(v8, v7);
        sub_23133F69C(v8, v7);
        sub_23133F69C(v12, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v8;
        v16 = v7;
LABEL_16:
        sub_2313DF104(v15, v16);
        return 0;
      }
    }
    else if (!v11)
    {
      return 1;
    }
    sub_23133F69C(v8, v7);
    sub_23133F69C(v12, v11);
    sub_2313DF104(v8, v7);
    v15 = v12;
    v16 = v11;
    goto LABEL_16;
  }
  return result;
}

BOOL sub_2313DF048(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  __int128 v6;
  __int128 v7;
  unsigned __int8 *v8;
  __int128 v9;
  __int128 v10;
  _OWORD v13[3];
  _OWORD v14[3];

  if (*a1 == *a2
    && (v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState(), (sub_231411D10() & 1) != 0)
    && (sub_2313970F4(*(_QWORD **)&a1[*(int *)(v4 + 24)], *(_QWORD **)&a2[*(int *)(v4 + 24)]) & 1) != 0)
  {
    v5 = &a1[*(int *)(v4 + 28)];
    v6 = *((_OWORD *)v5 + 2);
    v7 = *(_OWORD *)v5;
    v13[1] = *((_OWORD *)v5 + 1);
    v13[2] = v6;
    v13[0] = v7;
    v8 = &a2[*(int *)(v4 + 28)];
    v9 = *((_OWORD *)v8 + 2);
    v10 = *(_OWORD *)v8;
    v14[1] = *((_OWORD *)v8 + 1);
    v14[2] = v9;
    v14[0] = v10;
    return sub_2313DEDB4(v13, v14);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_2313DF104(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2313DF134(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28271 && a2 == 0xE200000000000000 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6710895 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

char *sub_2313DF260(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  sub_23130589C(0, &qword_255ED1480, (uint64_t (*)(void))sub_2313E035C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys, MEMORY[0x24BEE33E0]);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v26 - v4;
  sub_23130589C(0, &qword_255ED1490, (uint64_t (*)(void))sub_2313E03A0, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys, v2);
  v32 = v5;
  v29 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v26 - v6;
  sub_23130589C(0, &qword_255ED14A0, (uint64_t (*)(void))sub_2313E03E4, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys, v2);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - v8;
  sub_23130589C(0, &qword_255ED14B0, (uint64_t (*)(void))sub_2313E0428, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys, v2);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E0428();
  v15 = v35;
  sub_23141516C();
  if (!v15)
  {
    v17 = v33;
    v16 = v34;
    v35 = v12;
    v18 = v14;
    v19 = sub_231414FE0();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      v14 = (char *)*(unsigned __int8 *)(v19 + 32);
      if (*(_BYTE *)(v19 + 32))
      {
        if ((_DWORD)v14 == 1)
        {
          v37 = 1;
          sub_2313E03A0();
          sub_231414F80();
          v20 = v35;
          (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v11);
        }
        else
        {
          v38 = 2;
          sub_2313E035C();
          sub_231414F80();
          v25 = v35;
          (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v11);
        }
      }
      else
      {
        v36 = 0;
        sub_2313E03E4();
        sub_231414F80();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v11);
      }
    }
    else
    {
      v21 = sub_231414E6C();
      swift_allocError();
      v23 = v22;
      sub_2313057F4();
      *v23 = &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState;
      sub_231414F8C();
      sub_231414E54();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v11);
    }
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v14;
}

uint64_t sub_2313DF694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2313DF764(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_23130589C(0, &qword_255ED1430, (uint64_t (*)(void))sub_2313DF92C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  sub_2312CEA5C(a1, a1[3]);
  sub_2313DF92C();
  sub_23141516C();
  if (v1)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_231414FBC();
    v11 = 1;
    sub_231412A90();
    sub_231414FBC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_231412A90();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_2313DF92C()
{
  unint64_t result;

  result = qword_255ED1438;
  if (!qword_255ED1438)
  {
    result = MEMORY[0x2348DE248](&unk_231422B04, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1438);
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessHealthChecklistSettingsState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2313DF9D4 + 4 * byte_231422769[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2313DFA08 + 4 * byte_231422764[v4]))();
}

uint64_t sub_2313DFA08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313DFA10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313DFA18);
  return result;
}

uint64_t sub_2313DFA24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313DFA2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2313DFA30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313DFA38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState;
}

uint64_t destroy for CardioFitnessHealthChecklistSettingsState.Footer(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for CardioFitnessHealthChecklistSettingsState.Footer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  sub_231412A90();
  if (v5)
  {
    a1[2] = a2[2];
    a1[3] = v5;
    v6 = a2[4];
    v7 = a2[5];
    a1[4] = v6;
    a1[5] = v7;
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
  }
  return a1;
}

_QWORD *assignWithCopy for CardioFitnessHealthChecklistSettingsState.Footer(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2 + 2;
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_231412A90();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_231412A90();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2313DD724((uint64_t)(a1 + 2));
      v7 = *((_OWORD *)a2 + 2);
      *v4 = *v5;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_231412A90();
    sub_231412A90();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *v4 = *v5;
    *((_OWORD *)a1 + 2) = v8;
  }
  return a1;
}

uint64_t assignWithTake for CardioFitnessHealthChecklistSettingsState.Footer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    sub_2313DD724(a1 + 16);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    return a1;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer;
}

unint64_t sub_2313DFCB0()
{
  unint64_t result;

  result = qword_255ED1448;
  if (!qword_255ED1448)
  {
    result = MEMORY[0x2348DE248](&unk_23142292C, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState);
    atomic_store(result, (unint64_t *)&qword_255ED1448);
  }
  return result;
}

unint64_t sub_2313DFCF8()
{
  unint64_t result;

  result = qword_255ED1450;
  if (!qword_255ED1450)
  {
    result = MEMORY[0x2348DE248](&unk_231422A24, &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1450);
  }
  return result;
}

unint64_t sub_2313DFD40()
{
  unint64_t result;

  result = qword_255ED1458;
  if (!qword_255ED1458)
  {
    result = MEMORY[0x2348DE248](&unk_231422ADC, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1458);
  }
  return result;
}

unint64_t sub_2313DFD88()
{
  unint64_t result;

  result = qword_255ED1460;
  if (!qword_255ED1460)
  {
    result = MEMORY[0x2348DE248](&unk_231422A4C, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1460);
  }
  return result;
}

unint64_t sub_2313DFDD0()
{
  unint64_t result;

  result = qword_255ED1468;
  if (!qword_255ED1468)
  {
    result = MEMORY[0x2348DE248](&unk_231422A74, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1468);
  }
  return result;
}

unint64_t sub_2313DFE18()
{
  unint64_t result;

  result = qword_255ED1470;
  if (!qword_255ED1470)
  {
    result = MEMORY[0x2348DE248](&unk_231422994, &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1470);
  }
  return result;
}

unint64_t sub_2313DFE60()
{
  unint64_t result;

  result = qword_255ED1478;
  if (!qword_255ED1478)
  {
    result = MEMORY[0x2348DE248](&unk_2314229BC, &type metadata for CardioFitnessHealthChecklistSettingsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1478);
  }
  return result;
}

uint64_t sub_2313DFEA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802398060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2313DFF74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v19 = a2;
  sub_23130589C(0, &qword_255ED14C0, (uint64_t (*)(void))sub_2313E046C, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys, MEMORY[0x24BEE33E0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E046C();
  sub_23141516C();
  if (v2)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  LOBYTE(v20) = 0;
  v9 = sub_231414FBC();
  v11 = v10;
  v24 = 1;
  sub_2313E04B0();
  sub_231412A90();
  sub_231414FB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v20;
  v13 = v21;
  v14 = v22;
  v15 = v23;
  sub_23133F69C(v20, v21);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = sub_2313DF104(v12, v13);
  v17 = v19;
  *v19 = v9;
  v17[1] = v11;
  v17[2] = v12;
  v17[3] = v13;
  v17[4] = v14;
  v17[5] = v15;
  return result;
}

uint64_t sub_2313E0178(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7453686374697773 && a2 == 0xEB00000000657461;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xEF73757461745374 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000231432500 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265746F6F66 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_2313E035C()
{
  unint64_t result;

  result = qword_255ED1488;
  if (!qword_255ED1488)
  {
    result = MEMORY[0x2348DE248](&unk_231423020, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1488);
  }
  return result;
}

unint64_t sub_2313E03A0()
{
  unint64_t result;

  result = qword_255ED1498;
  if (!qword_255ED1498)
  {
    result = MEMORY[0x2348DE248](&unk_231422FD0, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1498);
  }
  return result;
}

unint64_t sub_2313E03E4()
{
  unint64_t result;

  result = qword_255ED14A8;
  if (!qword_255ED14A8)
  {
    result = MEMORY[0x2348DE248](&unk_231422F80, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED14A8);
  }
  return result;
}

unint64_t sub_2313E0428()
{
  unint64_t result;

  result = qword_255ED14B8;
  if (!qword_255ED14B8)
  {
    result = MEMORY[0x2348DE248](&unk_231422F30, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED14B8);
  }
  return result;
}

unint64_t sub_2313E046C()
{
  unint64_t result;

  result = qword_255ED14C8;
  if (!qword_255ED14C8)
  {
    result = MEMORY[0x2348DE248](&unk_231422EE0, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED14C8);
  }
  return result;
}

unint64_t sub_2313E04B0()
{
  unint64_t result;

  result = qword_255ED14D0;
  if (!qword_255ED14D0)
  {
    result = MEMORY[0x2348DE248](&unk_23142284C, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link);
    atomic_store(result, (unint64_t *)&qword_255ED14D0);
  }
  return result;
}

uint64_t sub_2313E04F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CF374(0, &qword_255ED1500, (uint64_t)&type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2313E0550()
{
  unint64_t result;

  result = qword_255ED1508;
  if (!qword_255ED1508)
  {
    result = MEMORY[0x2348DE248](&unk_231422824, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.Link);
    atomic_store(result, (unint64_t *)&qword_255ED1508);
  }
  return result;
}

uint64_t _s5Heart41CardioFitnessHealthChecklistSettingsStateV6FooterV4LinkV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313E05E0 + 4 * byte_231422773[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313E0614 + 4 * byte_23142276E[v4]))();
}

uint64_t sub_2313E0614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E061C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313E0624);
  return result;
}

uint64_t sub_2313E0630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313E0638);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313E063C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E0644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys;
}

uint64_t _s5Heart41CardioFitnessHealthChecklistSettingsStateV11SwitchStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313E06AC + 4 * byte_23142277D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2313E06E0 + 4 * byte_231422778[v4]))();
}

uint64_t sub_2313E06E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E06E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313E06F0);
  return result;
}

uint64_t sub_2313E06FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313E0704);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2313E0708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E0710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys()
{
  return &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys;
}

unint64_t sub_2313E0760()
{
  unint64_t result;

  result = qword_255ED1510;
  if (!qword_255ED1510)
  {
    result = MEMORY[0x2348DE248](&unk_231422E00, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1510);
  }
  return result;
}

unint64_t sub_2313E07A8()
{
  unint64_t result;

  result = qword_255ED1518;
  if (!qword_255ED1518)
  {
    result = MEMORY[0x2348DE248](&unk_231422EB8, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1518);
  }
  return result;
}

unint64_t sub_2313E07F0()
{
  unint64_t result;

  result = qword_255ED1520;
  if (!qword_255ED1520)
  {
    result = MEMORY[0x2348DE248](&unk_231422E28, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1520);
  }
  return result;
}

unint64_t sub_2313E0838()
{
  unint64_t result;

  result = qword_255ED1528;
  if (!qword_255ED1528)
  {
    result = MEMORY[0x2348DE248](&unk_231422E50, &type metadata for CardioFitnessHealthChecklistSettingsState.Footer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1528);
  }
  return result;
}

unint64_t sub_2313E0880()
{
  unint64_t result;

  result = qword_255ED1530;
  if (!qword_255ED1530)
  {
    result = MEMORY[0x2348DE248](&unk_231422D70, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1530);
  }
  return result;
}

unint64_t sub_2313E08C8()
{
  unint64_t result;

  result = qword_255ED1538;
  if (!qword_255ED1538)
  {
    result = MEMORY[0x2348DE248](&unk_231422D98, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1538);
  }
  return result;
}

unint64_t sub_2313E0910()
{
  unint64_t result;

  result = qword_255ED1540;
  if (!qword_255ED1540)
  {
    result = MEMORY[0x2348DE248](&unk_231422D20, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1540);
  }
  return result;
}

unint64_t sub_2313E0958()
{
  unint64_t result;

  result = qword_255ED1548;
  if (!qword_255ED1548)
  {
    result = MEMORY[0x2348DE248](&unk_231422D48, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1548);
  }
  return result;
}

unint64_t sub_2313E09A0()
{
  unint64_t result;

  result = qword_255ED1550;
  if (!qword_255ED1550)
  {
    result = MEMORY[0x2348DE248](&unk_231422CD0, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1550);
  }
  return result;
}

unint64_t sub_2313E09E8()
{
  unint64_t result;

  result = qword_255ED1558;
  if (!qword_255ED1558)
  {
    result = MEMORY[0x2348DE248](&unk_231422CF8, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OnCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1558);
  }
  return result;
}

unint64_t sub_2313E0A30()
{
  unint64_t result;

  result = qword_255ED1560;
  if (!qword_255ED1560)
  {
    result = MEMORY[0x2348DE248](&unk_231422C80, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1560);
  }
  return result;
}

unint64_t sub_2313E0A78()
{
  unint64_t result;

  result = qword_255ED1568;
  if (!qword_255ED1568)
  {
    result = MEMORY[0x2348DE248](&unk_231422CA8, &type metadata for CardioFitnessHealthChecklistSettingsState.SwitchState.OffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1568);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject()
{
  return &type metadata for RelatedSampleTypesCacheObject;
}

uint64_t *sub_2313E0AD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_231411608();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_2313E0BBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_231411608();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_2313E0C24(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_2313E0CDC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_2313E0DE0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_2313E0E98(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_2313E0F9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313E0FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2313E0FFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313E1008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED15C8);
}

void sub_2313E1074()
{
  unint64_t v0;

  sub_2312D6DD8(319, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2313E10F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_2313E35DC();
  v56 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v55 = (_QWORD *)((char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v54 = (_QWORD *)((char *)v44 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)v44 - v8;
  v9 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (!v12)
    return v13;
  v44[1] = v1;
  v59 = MEMORY[0x24BEE4AF8];
  sub_23137D440(0, v12, 0);
  result = sub_2313E2BEC(a1);
  v16 = result;
  v17 = 0;
  v18 = a1 + 64;
  v45 = a1 + 80;
  v46 = v12;
  v49 = v11;
  v50 = a1;
  v47 = v15;
  v48 = a1 + 64;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(_BYTE *)(a1 + 32))
  {
    v21 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v57 = v17;
    v58 = 1 << v16;
    v22 = v56;
    v23 = v53;
    v24 = (uint64_t)&v53[*(int *)(v56 + 48)];
    v25 = *(_QWORD *)(a1 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v16);
    v27 = *v26;
    v28 = v26[1];
    v29 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    sub_2312D6C20(v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v16, v24, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    *v23 = v27;
    v23[1] = v28;
    v30 = v54;
    *v54 = v27;
    v30[1] = v28;
    sub_2312D6C20(v24, (uint64_t)v30 + *(int *)(v22 + 48), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    v31 = (uint64_t)v30;
    v32 = v55;
    sub_2312EE5FC(v31, (uint64_t)v55, (uint64_t (*)(_QWORD))sub_2313E35DC);
    swift_bridgeObjectRetain_n();
    sub_2312CEBD4((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2313E35DC);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(int *)(v22 + 48);
    v36 = v49;
    sub_2312D6C20((uint64_t)v32 + v35, (uint64_t)v49 + *(int *)(v52 + 20), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    *v36 = v34;
    v36[1] = v33;
    sub_231412A90();
    sub_2312CEBD4((uint64_t)v32, (uint64_t (*)(_QWORD))sub_2313E35DC);
    v13 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23137D440(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = v59;
    }
    v38 = *(_QWORD *)(v13 + 16);
    v37 = *(_QWORD *)(v13 + 24);
    a1 = v50;
    if (v38 >= v37 >> 1)
    {
      sub_23137D440(v37 > 1, v38 + 1, 1);
      v13 = v59;
    }
    *(_QWORD *)(v13 + 16) = v38 + 1;
    result = sub_2312EE5FC((uint64_t)v36, v13+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v38, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
    v19 = 1 << *(_BYTE *)(a1 + 32);
    if (v16 >= v19)
      goto LABEL_27;
    v18 = v48;
    v39 = *(_QWORD *)(v48 + 8 * v21);
    if ((v39 & v58) == 0)
      goto LABEL_28;
    LODWORD(v15) = v47;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v47)
      goto LABEL_29;
    v40 = v39 & (-2 << (v16 & 0x3F));
    if (v40)
    {
      v19 = __clz(__rbit64(v40)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v20 = v46;
    }
    else
    {
      v41 = v21 + 1;
      v42 = (unint64_t)(v19 + 63) >> 6;
      v20 = v46;
      if (v21 + 1 < v42)
      {
        v43 = *(_QWORD *)(v48 + 8 * v41);
        if (v43)
        {
LABEL_22:
          v19 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v21)
          {
            v43 = *(_QWORD *)(v45 + 8 * v21++);
            if (v43)
            {
              v41 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v57 + 1;
    v16 = v19;
    if (v57 + 1 == v20)
      return v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2313E14D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v18 = a2;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v19 = (char *)&v17 - v4;
  sub_23130589C(0, &qword_255ED1660, (uint64_t (*)(void))sub_2313E36A0, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys, MEMORY[0x24BEE33E0]);
  v20 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - v7;
  v9 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231411608();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E36A0();
  v13 = v21;
  sub_23141516C();
  if (!v13)
  {
    v14 = v18;
    sub_2312CCC24(&qword_255ED1670, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v15 = (uint64_t)v19;
    sub_231414FB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
    sub_2312D38F8(v15, (uint64_t)v11);
    sub_2312D6C20((uint64_t)v11, v14, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return sub_2312CEBD4((uint64_t)v11, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
}

uint64_t sub_2313E1718(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_23130589C(0, &qword_255ED1760, (uint64_t (*)(void))sub_2313E4078, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E4078();
  sub_231415178();
  v11 = 0;
  sub_23141501C();
  if (!v1)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
    v10 = 1;
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    sub_2312CCC24(&qword_255ED1768, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState, (uint64_t)&unk_2314230E4);
    sub_231415034();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2313E1888@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  char v23;

  v17 = a2;
  v19 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x24BDAC7A8](v19);
  v18 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ED1748, (uint64_t (*)(void))sub_2313E4078, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys, MEMORY[0x24BEE33E0]);
  v20 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - v6;
  v8 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E4078();
  v11 = (uint64_t)v21;
  sub_23141516C();
  if (v11)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v21 = a1;
  v12 = v5;
  v13 = (uint64_t)v18;
  v23 = 0;
  *v10 = sub_231414FBC();
  v10[1] = v14;
  v22 = 1;
  sub_2312CCC24(&qword_255ED1758, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState, (uint64_t)&unk_23142310C);
  sub_231414FD4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v20);
  sub_2312EE5FC(v13, (uint64_t)v10 + *(int *)(v8 + 20), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  sub_2312D6C20((uint64_t)v10, v17, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
  return sub_2312CEBD4((uint64_t)v10, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
}

uint64_t sub_2313E1AFC()
{
  return 0x616470557473616CLL;
}

uint64_t sub_2313E1B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x616470557473616CLL && a2 == 0xEF65746144646574)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2313E1BD8()
{
  sub_2313E36A0();
  return sub_231415190();
}

uint64_t sub_2313E1C00()
{
  sub_2313E36A0();
  return sub_23141519C();
}

uint64_t sub_2313E1C28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313E14D0(a1, a2);
}

uint64_t sub_2313E1C3C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23130589C(0, &qword_255ED1678, (uint64_t (*)(void))sub_2313E36A0, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E36A0();
  sub_231415178();
  sub_231411608();
  sub_2312CCC24(qword_255ED1680, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_231415010();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2313E1D70(uint64_t *a1, uint64_t *a2)
{
  return sub_2313E20F8(*a1, *a2);
}

uint64_t sub_2313E1D7C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 0x696669746E656469;
}

uint64_t sub_2313E1DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313E2F1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2313E1DDC()
{
  sub_2313E4078();
  return sub_231415190();
}

uint64_t sub_2313E1E04()
{
  sub_2313E4078();
  return sub_23141519C();
}

uint64_t sub_2313E1E2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313E1888(a1, a2);
}

uint64_t sub_2313E1E40(_QWORD *a1)
{
  return sub_2313E1718(a1);
}

unint64_t sub_2313E1E54()
{
  return 0xD000000000000013;
}

uint64_t sub_2313E1E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2313E3010(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2313E1E98()
{
  sub_2313E34A0();
  return sub_231415190();
}

uint64_t sub_2313E1EC0()
{
  sub_2313E34A0();
  return sub_23141519C();
}

uint64_t sub_2313E1EE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_23130589C(0, &qword_255ED1628, (uint64_t (*)(void))sub_2313E34A0, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.CodingKeys, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  v7 = sub_231412A90();
  v8 = sub_2313E10F4(v7);
  swift_bridgeObjectRelease();
  v12 = v8;
  swift_getKeyPath();
  sub_2312D6DD8(0, &qword_255ED1610, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2313E34E4();
  v9 = sub_23141474C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E34A0();
  sub_231415178();
  v12 = v9;
  sub_2313E3544(&qword_255ED1638, &qword_255ED1640, (uint64_t)&unk_2314233D8, MEMORY[0x24BEE12A0]);
  sub_231415034();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2313E20B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2313E3094(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2313E20E0(_QWORD *a1)
{
  return sub_2313E1EE8(a1);
}

uint64_t sub_2313E20F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(uint64_t, uint64_t);
  char *v64;
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v4 = sub_231411608();
  v77 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v65 - v9;
  sub_2312DA2F4();
  v74 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  v78 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v65 - v18;
  sub_2312D6DD8(0, &qword_255ED1650, (uint64_t (*)(uint64_t))sub_2313E35DC, v6);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (int64_t *)((char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v21);
  v76 = (char *)&v65 - v25;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v75 = 0;
  v70 = a1;
  v71 = v4;
  v28 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v26 = v28;
  v29 = 1 << *(_BYTE *)(v27 - 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v26;
  v67 = (unint64_t)(v29 + 63) >> 6;
  v68 = v10;
  v65 = v67 - 1;
  v66 = v27;
  v72 = v17;
  v73 = a2;
  while (1)
  {
    v32 = (uint64_t)v76;
    if (v31)
    {
      v33 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v34 = v33 | (v75 << 6);
LABEL_9:
      v35 = *(_QWORD *)(v70 + 56);
      v36 = (_QWORD *)(*(_QWORD *)(v70 + 48) + 16 * v34);
      v37 = v36[1];
      *v23 = *v36;
      v23[1] = v37;
      v38 = v35 + *(_QWORD *)(v78 + 72) * v34;
      sub_2313E35DC();
      v40 = v39;
      sub_2312D6C20(v38, (uint64_t)v23 + *(int *)(v39 + 48), type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 0, 1, v40);
      sub_231412A90();
      goto LABEL_31;
    }
    v41 = v75 + 1;
    if (__OFADD__(v75, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v41 < v67)
    {
      v42 = *(_QWORD *)(v66 + 8 * v41);
      if (v42)
        goto LABEL_13;
      v43 = v75 + 2;
      ++v75;
      if (v41 + 1 < v67)
      {
        v42 = *(_QWORD *)(v66 + 8 * v43);
        if (v42)
          goto LABEL_16;
        v75 = v41 + 1;
        if (v41 + 2 < v67)
        {
          v42 = *(_QWORD *)(v66 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_13;
          }
          v75 = v41 + 2;
          if (v41 + 3 < v67)
          {
            v42 = *(_QWORD *)(v66 + 8 * (v41 + 3));
            if (v42)
            {
              v41 += 3;
              goto LABEL_13;
            }
            v43 = v41 + 4;
            v75 = v41 + 3;
            if (v41 + 4 < v67)
              break;
          }
        }
      }
    }
LABEL_30:
    sub_2313E35DC();
    v40 = v44;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v23, 1, 1, v44);
    v31 = 0;
LABEL_31:
    sub_2313E3644((uint64_t)v23, v32);
    sub_2313E35DC();
    v45 = 1;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v32, 1, v40) == 1)
      return v45;
    v46 = (uint64_t *)v32;
    v47 = v23;
    v48 = (uint64_t)v13;
    v49 = *v46;
    v50 = v46[1];
    sub_2312EE5FC((uint64_t)v46 + *(int *)(v40 + 48), (uint64_t)v19, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    v51 = v73;
    v52 = sub_231338800(v49, v50);
    LOBYTE(v49) = v53;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      goto LABEL_43;
    sub_2312D6C20(*(_QWORD *)(v51 + 56) + *(_QWORD *)(v78 + 72) * v52, (uint64_t)v17, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    v13 = (char *)v48;
    v54 = (uint64_t)v19;
    v55 = v48 + *(int *)(v74 + 48);
    sub_2312D3870((uint64_t)v17, v48);
    v56 = (char *)v54;
    sub_2312D3870(v54, v55);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
    v58 = v71;
    if (v57(v48, 1, v71) == 1)
    {
      if (v57(v55, 1, v58) != 1)
        goto LABEL_41;
      sub_2312D3CA0(v48);
      v19 = v56;
    }
    else
    {
      v59 = (uint64_t)v68;
      sub_2312D3870(v48, (uint64_t)v68);
      if (v57(v55, 1, v58) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v59, v58);
LABEL_41:
        sub_2312CEBD4(v48, (uint64_t (*)(_QWORD))sub_2312DA2F4);
        v19 = v56;
LABEL_42:
        sub_2312CEBD4((uint64_t)v72, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
LABEL_43:
        sub_2312CEBD4((uint64_t)v19, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
        return 0;
      }
      v60 = v77;
      v61 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v69, v55, v58);
      sub_2312CCC24(&qword_255ED1658, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v62 = sub_231414680();
      v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v63(v59, v58);
      v64 = v61;
      v13 = (char *)v48;
      v63((uint64_t)v64, v58);
      sub_2312D3CA0(v48);
      v19 = v56;
      if ((v62 & 1) == 0)
        goto LABEL_42;
    }
    v17 = v72;
    sub_2312CEBD4((uint64_t)v72, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    result = sub_2312CEBD4((uint64_t)v19, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    v23 = v47;
  }
  v42 = *(_QWORD *)(v66 + 8 * v43);
  if (v42)
  {
LABEL_16:
    v41 = v43;
LABEL_13:
    v31 = (v42 - 1) & v42;
    v34 = __clz(__rbit64(v42)) + (v41 << 6);
    v75 = v41;
    goto LABEL_9;
  }
  while (1)
  {
    v41 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v41 >= v67)
    {
      v75 = v65;
      goto LABEL_30;
    }
    v42 = *(_QWORD *)(v66 + 8 * v41);
    ++v43;
    if (v42)
      goto LABEL_13;
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_2313E2738(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  _QWORD *v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;

  v7 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23137E28C();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = (_QWORD *)((char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v59) = a2;
  v56[1] = v3;
  v57 = v8;
  v17 = (uint64_t)v15 + *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v56[0];
  v61 = *(_QWORD *)(v13 + 72);
  v58 = a1;
  sub_231412A90();
  sub_2312D6C20(v18, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23137E28C);
  v20 = v15[1];
  v65 = *v15;
  v19 = v65;
  v66 = v20;
  v60 = v17;
  v62 = v10;
  sub_2312EE5FC(v17, (uint64_t)v10, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  v21 = (_QWORD *)*a3;
  v23 = sub_231338800(v19, v20);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
    goto LABEL_23;
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((v59 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_231379D88();
      if ((v27 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v32 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v33 = (uint64_t *)(v32[6] + 16 * v23);
    *v33 = v19;
    v33[1] = v20;
    v34 = v32[7];
    v59 = *(_QWORD *)(v57 + 72);
    sub_2312EE5FC((uint64_t)v62, v34 + v59 * v23, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
    v35 = v32[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v32[2] = v37;
    v38 = v16 - 1;
    if (v16 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v39 = v58 + v61 + v56[0];
    v40 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState;
    while (1)
    {
      sub_2312D6C20(v39, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23137E28C);
      v41 = v15[1];
      v65 = *v15;
      v42 = v65;
      v66 = v41;
      v43 = v40;
      sub_2312EE5FC(v60, (uint64_t)v62, v40);
      v44 = (_QWORD *)*a3;
      v45 = sub_231338800(v42, v41);
      v47 = v44[2];
      v48 = (v46 & 1) == 0;
      v36 = __OFADD__(v47, v48);
      v49 = v47 + v48;
      if (v36)
        break;
      v50 = v46;
      if (v44[3] < v49)
      {
        sub_23137951C(v49, 1);
        v45 = sub_231338800(v42, v41);
        if ((v50 & 1) != (v51 & 1))
          goto LABEL_25;
      }
      if ((v50 & 1) != 0)
        goto LABEL_10;
      v52 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v53 = (uint64_t *)(v52[6] + 16 * v45);
      *v53 = v42;
      v53[1] = v41;
      v40 = v43;
      sub_2312EE5FC((uint64_t)v62, v52[7] + v59 * v45, v43);
      v54 = v52[2];
      v36 = __OFADD__(v54, 1);
      v55 = v54 + 1;
      if (v36)
        goto LABEL_24;
      v52[2] = v55;
      v39 += v61;
      if (!--v38)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_23137951C(v26, v59 & 1);
  v28 = sub_231338800(v19, v20);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    if ((v27 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v30 = (void *)swift_allocError();
    swift_willThrow();
    v67 = v30;
    v31 = v30;
    sub_2312D3C14();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_2312CEBD4((uint64_t)v62, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_2314150AC();
  __break(1u);
LABEL_26:
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_231414ECC();
  sub_231414728();
  sub_231414EE4();
  __break(1u);
}

uint64_t sub_2313E2BEC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

BOOL sub_2313E2C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;

  v4 = sub_231411608();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA2F4();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v27 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - v20;
  sub_2312D3870(a1, (uint64_t)&v27 - v20);
  sub_2312D3870(a2, (uint64_t)v19);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2312D3870((uint64_t)v21, (uint64_t)v12);
  sub_2312D3870((uint64_t)v19, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v23((uint64_t)v12, 1, v4) == 1)
  {
    sub_2312D3CA0((uint64_t)v19);
    sub_2312D3CA0((uint64_t)v21);
    if (v23(v22, 1, v4) == 1)
    {
      sub_2312D3CA0((uint64_t)v12);
      return 1;
    }
    goto LABEL_6;
  }
  sub_2312D3870((uint64_t)v12, (uint64_t)v16);
  if (v23(v22, 1, v4) == 1)
  {
    sub_2312D3CA0((uint64_t)v19);
    sub_2312D3CA0((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v4);
LABEL_6:
    sub_2312CEBD4((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2312DA2F4);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v22, v4);
  sub_2312CCC24(&qword_255ED1658, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v24 = sub_231414680();
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v8, v4);
  sub_2312D3CA0((uint64_t)v19);
  sub_2312D3CA0((uint64_t)v21);
  v25(v16, v4);
  sub_2312D3CA0((uint64_t)v12);
  return (v24 & 1) != 0;
}

uint64_t sub_2313E2F1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2313E3010(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000231432590)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_231415070();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2313E3094(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  v39 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23137E28C();
  v7 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v43 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23130589C(0, &qword_255ED1600, (uint64_t (*)(void))sub_2313E34A0, (uint64_t)&type metadata for RelatedSampleTypesCacheObject.CodingKeys, MEMORY[0x24BEE33E0]);
  v40 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v33 - v12;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313E34A0();
  v14 = v41;
  sub_23141516C();
  if (v14)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
    return v11;
  }
  v15 = v39;
  v36 = v11;
  v37 = a1;
  sub_2312D6DD8(0, &qword_255ED1610, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2313E3544(&qword_255ED1618, &qword_255ED1620, (uint64_t)&unk_231423400, MEMORY[0x24BEE12D0]);
  sub_231414FD4();
  v34 = v13;
  v35 = 0;
  v17 = v44;
  v18 = *(_QWORD *)(v44 + 16);
  if (v18)
  {
    v44 = MEMORY[0x24BEE4AF8];
    sub_23137D414(0, v18, 0);
    v19 = *(unsigned __int8 *)(v15 + 80);
    v33[1] = v17;
    v20 = v17 + ((v19 + 32) & ~v19);
    v41 = *(_QWORD *)(v15 + 72);
    v21 = v44;
    v22 = v38;
    do
    {
      sub_2312D6C20(v20, (uint64_t)v5, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
      v23 = (uint64_t)v9 + *(int *)(v42 + 48);
      v24 = v5[1];
      *v9 = *v5;
      v9[1] = v24;
      sub_2312D6C20((uint64_t)v5 + *(int *)(v22 + 20), v23, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
      sub_231412A90();
      sub_2312CEBD4((uint64_t)v5, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23137D414(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v44;
      }
      v25 = v43;
      v27 = *(_QWORD *)(v21 + 16);
      v26 = *(_QWORD *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23137D414(v26 > 1, v27 + 1, 1);
        v25 = v43;
        v21 = v44;
      }
      *(_QWORD *)(v21 + 16) = v27 + 1;
      sub_2312EE5FC((uint64_t)v9, v21+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v27, (uint64_t (*)(_QWORD))sub_23137E28C);
      v20 += v41;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  v28 = v35;
  v29 = v36;
  if (*(_QWORD *)(v21 + 16))
  {
    sub_2313391EC();
    v30 = sub_231414F44();
  }
  else
  {
    v30 = MEMORY[0x24BEE4B00];
  }
  v31 = (uint64_t)v37;
  v44 = v30;
  v32 = sub_231412A90();
  sub_2313E2738(v32, 1, &v44);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    v11 = v44;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v40);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v31);
    return v11;
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED16E0);
}

unint64_t sub_2313E34A0()
{
  unint64_t result;

  result = qword_255ED1608;
  if (!qword_255ED1608)
  {
    result = MEMORY[0x2348DE248](&unk_231423428, &type metadata for RelatedSampleTypesCacheObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1608);
  }
  return result;
}

unint64_t sub_2313E34E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1630;
  if (!qword_255ED1630)
  {
    sub_2312D6DD8(255, &qword_255ED1610, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255ED1630);
  }
  return result;
}

uint64_t sub_2313E3544(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_2312D6DD8(255, &qword_255ED1610, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v10 = v9;
    v11 = sub_2312CCC24(a2, type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState, a3);
    result = MEMORY[0x2348DE248](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2313E35DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ED1648)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ED1648);
  }
}

uint64_t sub_2313E3644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, &qword_255ED1650, (uint64_t (*)(uint64_t))sub_2313E35DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2313E36A0()
{
  unint64_t result;

  result = qword_255ED1668;
  if (!qword_255ED1668)
  {
    result = MEMORY[0x2348DE248](&unk_231423388, &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1668);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys;
}

uint64_t _s5Heart29RelatedSampleTypesCacheObjectV13DataTypeStateV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2313E3738 + 4 * byte_231423070[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2313E3758 + 4 * byte_231423075[v4]))();
}

_BYTE *sub_2313E3738(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2313E3758(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313E3760(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313E3768(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313E3770(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313E3778(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.CodingKeys;
}

uint64_t *sub_2313E3794(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_231411608();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    sub_231412A90();
    if (v11(v8, 1, v9))
    {
      sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_2313E38A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_231411608();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_2313E391C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_231411608();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  sub_231412A90();
  if (v10(v7, 1, v8))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_2313E39FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_2313E3B38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_231411608();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_2313E3C08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231411608();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_2313E3D34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313E3D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2313E3DBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313E3DC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_2313E3E3C()
{
  unint64_t v0;

  sub_2312D6DD8(319, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_2313E3ECC()
{
  unint64_t result;

  result = qword_255ED1718;
  if (!qword_255ED1718)
  {
    result = MEMORY[0x2348DE248](&unk_2314232A8, &type metadata for RelatedSampleTypesCacheObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1718);
  }
  return result;
}

unint64_t sub_2313E3F14()
{
  unint64_t result;

  result = qword_255ED1720;
  if (!qword_255ED1720)
  {
    result = MEMORY[0x2348DE248](&unk_231423360, &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1720);
  }
  return result;
}

unint64_t sub_2313E3F5C()
{
  unint64_t result;

  result = qword_255ED1728;
  if (!qword_255ED1728)
  {
    result = MEMORY[0x2348DE248](&unk_2314232D0, &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1728);
  }
  return result;
}

unint64_t sub_2313E3FA4()
{
  unint64_t result;

  result = qword_255ED1730;
  if (!qword_255ED1730)
  {
    result = MEMORY[0x2348DE248](&unk_2314232F8, &type metadata for RelatedSampleTypesCacheObject.DataTypeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1730);
  }
  return result;
}

unint64_t sub_2313E3FEC()
{
  unint64_t result;

  result = qword_255ED1738;
  if (!qword_255ED1738)
  {
    result = MEMORY[0x2348DE248](&unk_231423218, &type metadata for RelatedSampleTypesCacheObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1738);
  }
  return result;
}

unint64_t sub_2313E4034()
{
  unint64_t result;

  result = qword_255ED1740;
  if (!qword_255ED1740)
  {
    result = MEMORY[0x2348DE248](&unk_231423240, &type metadata for RelatedSampleTypesCacheObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1740);
  }
  return result;
}

unint64_t sub_2313E4078()
{
  unint64_t result;

  result = qword_255ED1750;
  if (!qword_255ED1750)
  {
    result = MEMORY[0x2348DE248](&unk_231423530, &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1750);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313E4108 + 4 * byte_23142307F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313E413C + 4 * byte_23142307A[v4]))();
}

uint64_t sub_2313E413C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E4144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313E414CLL);
  return result;
}

uint64_t sub_2313E4158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313E4160);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313E4164(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313E416C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys()
{
  return &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys;
}

unint64_t sub_2313E418C()
{
  unint64_t result;

  result = qword_255ED1770;
  if (!qword_255ED1770)
  {
    result = MEMORY[0x2348DE248](&unk_231423508, &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1770);
  }
  return result;
}

unint64_t sub_2313E41D4()
{
  unint64_t result;

  result = qword_255ED1778;
  if (!qword_255ED1778)
  {
    result = MEMORY[0x2348DE248](&unk_231423478, &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1778);
  }
  return result;
}

unint64_t sub_2313E421C()
{
  unint64_t result;

  result = qword_255ED1780;
  if (!qword_255ED1780)
  {
    result = MEMORY[0x2348DE248](&unk_2314234A0, &type metadata for RelatedSampleTypesCacheObject.DataTypeIdentifierAndState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ED1780);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessChartSection()
{
  uint64_t result;

  result = qword_255ED1788;
  if (!qword_255ED1788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313E429C()
{
  return swift_initClassMetadata2();
}

void sub_2313E42D8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313E4304()
{
  return type metadata accessor for CardioFitnessChartSection();
}

uint64_t sub_2313E430C()
{
  MEMORY[0x2348DE248](&unk_231423640);
  return sub_231413414();
}

void *sub_2313E4358()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void *sub_2313E437C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t sub_2313E43A0(void *a1)
{
  return sub_2313E43D8(a1);
}

uint64_t sub_2313E43D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char v12;
  char v13;

  v2 = v1;
  sub_2313E4980(v1 + 8, (uint64_t)&v12);
  sub_2313E4980((uint64_t)&v12, (uint64_t)&v13);
  v4 = v13 & 1;
  v5 = objc_msgSend(a1, sel_healthStore);
  v6 = objc_msgSend(objc_allocWithZone((Class)HKHRCardioFitnessDataSource), sel_initWithHealthStore_classificationsAvailable_, v5, v4);

  sub_2314146BC();
  v7 = v6;
  v8 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_registerInteractiveChartViewControllerProvider_typeIdentifier_, v7, v8);

  if (*(_QWORD *)(v2 + 40))
    v9 = (void *)sub_231414B60();
  else
    v9 = 0;
  sub_2313E4A18();
  v10 = sub_231412B68();

  return v10;
}

unint64_t sub_2313E4538()
{
  return 0xD000000000000016;
}

unint64_t sub_2313E4558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED17D8;
  if (!qword_255ED17D8)
  {
    v1 = type metadata accessor for CardioFitnessChartSection();
    result = MEMORY[0x2348DE248](&unk_231423610, v1);
    atomic_store(result, (unint64_t *)&qword_255ED17D8);
  }
  return result;
}

void destroy for CardioFitnessChartItem(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v3;
  sub_231412A90();
  v8 = v5;
  v9 = v6;
  return a1;
}

uint64_t assignWithCopy for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 40);
  v11 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for CardioFitnessChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for CardioFitnessChartItem()
{
  return &type metadata for CardioFitnessChartItem;
}

uint64_t sub_2313E4740(void *a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  __int128 v16;
  _QWORD v17[2];

  v6 = sub_231411644();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17[-2] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CE560(0, &qword_255ECF200, (void (*)(uint64_t))MEMORY[0x24BE43368]);
  sub_2314127F0();
  v10 = swift_allocObject();
  v16 = xmmword_231416A30;
  *(_OWORD *)(v10 + 16) = xmmword_231416A30;
  sub_2312CE560(0, (unint64_t *)&qword_255ECAC50, (void (*)(uint64_t))sub_2312D1CE8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v16;
  *(_QWORD *)(v11 + 56) = &type metadata for CardioFitnessChartItem;
  *(_QWORD *)(v11 + 64) = sub_2313BF668();
  v12 = swift_allocObject();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v12 + 16) = a1;
  *(_BYTE *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = 0;
  v13 = a3;
  v14 = a1;
  sub_2314127D8();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_231411638();
  sub_231411614();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return sub_2314128BC();
}

uint64_t sub_2313E4944()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2313E4980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313E49C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2313E49C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED17E0)
  {
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED17E0);
  }
}

unint64_t sub_2313E4A18()
{
  unint64_t result;

  result = qword_255ED17E8;
  if (!qword_255ED17E8)
  {
    result = MEMORY[0x2348DE248](&unk_231423688, &type metadata for CardioFitnessChartItem);
    atomic_store(result, (unint64_t *)&qword_255ED17E8);
  }
  return result;
}

double sub_2313E4A5C(void *a1, char a2, uint64_t a3)
{
  double v3;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  if (!a2)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_sleepDurationNoDataRange);
    v10 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
    v3 = sub_2313E4B7C((uint64_t)v10);

    return v3;
  }
  v3 = 0.0;
  if (a2 == 1)
  {
    v5 = a1;
    v6 = objc_msgSend(v5, sel_hk_axisScalingRuleForChartSizeClass_unitController_, 1, a3);
    if (v6)
    {
      v7 = objc_msgSend(v6, sel_noDataStartingRange);
      if (v7)
      {
        v8 = v7;
        v3 = sub_2313E4D2C();

        sub_2314130CC();
        return v3;
      }
      sub_2314130CC();
    }

  }
  return v3;
}

double sub_2313E4B7C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD v20[2];

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v2, sel_minValue);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_doubleValueForUnit_, a1);
    v13 = v12;

    v14 = objc_msgSend(v2, sel_maxValue);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, sel_doubleValueForUnit_, a1);
      v17 = v16;

      if (v13 <= v17)
        return v13;
      __break(1u);
    }
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v18 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v20[1] = 0;
  sub_2314135B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0.0;
}

double sub_2313E4D2C()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  _QWORD v18[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, sel_minValue);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    v11 = v10;

    v12 = objc_msgSend(v1, sel_maxValue);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_doubleValue);
      v15 = v14;

      if (v11 <= v15)
        return v11;
      __break(1u);
    }
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v16 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
  v18[1] = 0;
  sub_2314135B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0.0;
}

uint64_t sub_2313E4ED0(uint64_t a1, void *a2, unsigned __int8 a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;

  if (a3 >= 2u)
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A2D0]), sel_init);
    v9 = 0;
  }
  else
  {
    v6 = a2;
    v7 = objc_msgSend(v6, sel_hk_dimensionForChartAxisWithUnitController_, a4);
    if (!v7)
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A2D0]), sel_init);
    v8 = objc_msgSend(v6, sel_chartingRules);
    v9 = objc_msgSend(v8, sel_axisScalingRule);

    v10 = objc_msgSend(a4, sel_unitForDisplayType_, v6);
    if (v10)
    {
      if (v9 && (objc_msgSend(v9, sel_respondsToSelector_, sel_setUnit_) & 1) != 0)
        objc_msgSend(v9, sel_setUnit_, v10);

    }
  }
  v11 = (void *)sub_231414848();
  v12 = (void *)sub_231414848();
  v13 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v11, v12);

  if (v9)
    v14 = objc_msgSend(v9, sel_yValueRangeForRange_zoomLevel_, v13, 3);
  else
    v14 = v13;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_minValue);
  v17 = objc_msgSend(v15, sel_maxValue);
  v18 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v16, v17);

  v19 = objc_msgSend((id)objc_opt_self(), sel_ticksAndLabelsForRangeInModelCoordinates_maximumLabelCount_endingOptions_dimension_, v18, a1, 0, v7);
  if (v19)
  {
    v20 = v19;
    sub_2312D3C68(0, &qword_255ED1800);
    v21 = sub_2314147A0();

    sub_2314130CC();
  }
  else
  {

    sub_2314130CC();
    v21 = 0;
  }
  sub_2314130CC();
  return v21;
}

uint64_t sub_2313E51A4@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t (*v80)@<X0>(uint64_t@<X8>);
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v99 = a5;
  v98 = a4;
  v97 = a3;
  v96 = a2;
  sub_231326980(0, &qword_255ED17F0, sub_2312EDE60, sub_2313E636C);
  v92 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v90 = (char *)&v84 - v9;
  v86 = sub_231413978();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313E636C(0);
  v91 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v89 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v87 = (char *)&v84 - v16;
  v17 = sub_231413BC4();
  v103 = *(_QWORD *)(v17 - 8);
  v104 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v102 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231413AB0();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_231413AD4();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (void (*)(char *, char *, uint64_t))((char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23130BB78();
  v24 = v23;
  v94 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDF34(0);
  v100 = *(_QWORD *)(v27 - 8);
  v101 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDE60(0);
  v107 = v30;
  v110 = *(_QWORD **)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v106 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v95 = (char *)&v84 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v109 = (char *)&v84 - v35;
  v36 = sub_231413BB8();
  v93 = a6;
  v88 = v13;
  v105 = v11;
  v108 = a1;
  if (v36)
  {
    v37 = sub_231413BB8();
    v38 = sub_231413BAC();
    if (__OFSUB__(v38, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v37 == v38 - 1)
      v39 = sub_2314144DC();
    else
      v39 = sub_2314144F4();
  }
  else
  {
    v39 = sub_2314144E8();
  }
  MEMORY[0x24BDAC7A8](v39);
  sub_231413AC8();
  sub_231413AA4();
  sub_2312EE04C();
  v82 = v40;
  v83 = sub_2312EE0FC();
  v80 = sub_2313E63F4;
  v81 = &v76;
  v79 = 0;
  v78 = 0;
  v77 = 0;
  v76 = 0x4010000000000000;
  sub_231413A2C();
  if (qword_255ECAA50 != -1)
    swift_once();
  v112 = qword_255ED2E88;
  v41 = sub_2312CCC24((unint64_t *)&qword_255ECB888, (uint64_t (*)(uint64_t))sub_23130BB78, MEMORY[0x24BDB7E40]);
  v42 = MEMORY[0x24BDF3E48];
  v43 = MEMORY[0x24BDF3E18];
  sub_231413B04();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v26, v24);
  if (qword_255ECAA58 != -1)
    swift_once();
  v112 = v24;
  v113 = v42;
  v114 = v41;
  v115 = v43;
  swift_getOpaqueTypeConformance2();
  v44 = v95;
  v45 = v101;
  sub_231413B10();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v29, v45);
  v22 = (void (*)(char *, char *, uint64_t))v110[4];
  v22(v109, v44, v107);
  v46 = v108;
  v47 = sub_231413BB8();
  v49 = v102;
  v48 = v103;
  v50 = v104;
  (*(void (**)(char *, _QWORD, uint64_t))(v103 + 16))(v102, v46, v104);
  a6 = v105;
  if (!v47)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    goto LABEL_17;
  }
  v51 = sub_231413BB8();
  v52 = sub_231413BAC();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  if (__OFSUB__(v52, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v51 != v52 - 1)
  {
    if (qword_255ECAA48 == -1)
    {
LABEL_15:
      v53 = &xmmword_255ED2E60;
      goto LABEL_20;
    }
LABEL_25:
    swift_once();
    goto LABEL_15;
  }
LABEL_17:
  if (qword_255ECAA40 != -1)
    swift_once();
  v53 = &xmmword_255ED2E38;
LABEL_20:
  v108 = v22;
  v54 = *((_QWORD *)v53 + 2);
  v55 = *(_QWORD *)v53;
  v56 = *((_QWORD *)v53 + 4);
  v57 = *((_QWORD *)v53 + 1);
  v58 = sub_231412A90();
  v112 = v55;
  v113 = v57;
  v114 = v54;
  v115 = v58;
  v116 = v56;
  sub_23141396C();
  if (qword_255ECAA38 != -1)
    swift_once();
  v111 = qword_255ED2E30;
  v59 = v89;
  v60 = v86;
  sub_231413B04();
  (*(void (**)(char *, uint64_t))(v85 + 8))(a6, v60);
  v61 = v88;
  v62 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
  v63 = v87;
  v64 = v91;
  v62(v87, v59, v91);
  v65 = (void (*)(char *, char *, uint64_t))v110[2];
  v67 = v106;
  v66 = v107;
  v65(v106, v109, v107);
  v68 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v68(v59, v63, v64);
  v69 = v90;
  v65(v90, v67, v66);
  v70 = v92;
  v71 = &v69[*(int *)(v92 + 48)];
  v68(v71, v59, v64);
  v72 = v93;
  v108(v93, v69, v66);
  v62(&v72[*(int *)(v70 + 48)], v71, v64);
  v73 = *(void (**)(char *, uint64_t))(v61 + 8);
  v73(v63, v64);
  v74 = (void (*)(char *, uint64_t))v110[1];
  v74(v109, v66);
  v73(v59, v64);
  return ((uint64_t (*)(char *, uint64_t))v74)(v106, v66);
}

uint64_t sub_2313E59C0@<X0>(unint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;

  result = sub_231413BA0();
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_2313E6408(a1, v13);
    sub_2312D104C();
    v5 = sub_2314142F0();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    if (qword_255ECAA60 != -1)
      swift_once();
    v12 = qword_255ED2E98;
    result = swift_getKeyPath();
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v7;
    *(_BYTE *)(a2 + 16) = v9 & 1;
    *(_QWORD *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = result;
    *(_QWORD *)(a2 + 40) = v12;
  }
  return result;
}

uint64_t sub_2313E5AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v33 = a1;
  sub_231326980(0, &qword_255ED17F8, (void (*)(uint64_t))MEMORY[0x24BDB7B38], (void (*)(uint64_t))MEMORY[0x24BDB8210]);
  v32 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v31 = (char *)&v28 - v2;
  v3 = sub_231413B28();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_231413B40();
  v28 = *(_QWORD *)(v4 - 8);
  v5 = v28;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  v11 = sub_231413978();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  sub_23141396C();
  sub_231413B1C();
  v30 = v10;
  sub_231413B34();
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v18(v15, v17, v11);
  v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v29 = v8;
  v19(v8, v10, v4);
  v20 = v31;
  v18(v31, v15, v11);
  v21 = v32;
  v22 = &v20[*(int *)(v32 + 48)];
  v19(v22, v8, v4);
  v23 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v33, v20, v11);
  v24 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v23 + *(int *)(v21 + 48), v22, v4);
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v30, v4);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v17, v11);
  v25(v29, v4);
  return ((uint64_t (*)(char *, uint64_t))v26)(v15, v11);
}

uint64_t sub_2313E5D2C()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313E5DF0(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;

  if (a1 >> 62)
    goto LABEL_31;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  for (; v2; v2 = sub_231414F08())
  {
    v3 = 0;
    v4 = a1 & 0xC000000000000001;
    while (1)
    {
      if (v4)
      {
        v5 = (id)MEMORY[0x2348DD81C](v3, a1);
      }
      else
      {
        if (v3 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_30;
        v5 = *(id *)(a1 + 8 * v3 + 32);
      }
      v6 = v5;
      v7 = v3 + 1;
      if (__OFADD__(v3, 1))
        break;
      v8 = objc_msgSend(v5, sel_text);
      if (v8)
      {
        v9 = v8;
        sub_2314146BC();

        v10 = sub_23141471C();
        swift_bridgeObjectRelease();
        if (v10 > 0)
        {
          v11 = objc_msgSend(v6, sel_location);
          sub_231414D04();
          sub_2314130CC();
          sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            objc_msgSend(v21, sel_doubleValue);

            if (v7 == v2)
              goto LABEL_16;
          }
          else
          {

            if (v7 == v2)
              goto LABEL_16;
          }
          v12 = v3 + 5;
          while (1)
          {
            v13 = v12 - 4;
            if (v4)
            {
              v14 = (id)MEMORY[0x2348DD81C](v12 - 4, a1);
            }
            else
            {
              if (v13 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_30;
              v14 = *(id *)(a1 + 8 * v12);
            }
            v15 = v14;
            v16 = v12 - 3;
            if (__OFADD__(v13, 1))
              goto LABEL_29;
            v17 = objc_msgSend(v14, sel_text);
            if (v17)
            {
              v18 = v17;
              sub_2314146BC();

              v19 = sub_23141471C();
              swift_bridgeObjectRelease();
              if (v19 > 0)
              {
                swift_bridgeObjectRelease();
                v20 = objc_msgSend(v15, sel_location);
                sub_231414D04();
                sub_2314130CC();
                if (swift_dynamicCast())
                {
                  objc_msgSend(v21, sel_doubleValue);

                }
                else
                {

                }
                return;
              }
            }

            ++v12;
            if (v16 == v2)
              goto LABEL_16;
          }
        }
      }

      ++v3;
      if (v7 == v2)
        goto LABEL_16;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_231412A90();
  }
LABEL_16:
  swift_bridgeObjectRelease();
}

void sub_2313E6120(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  id v6;
  id v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  BOOL v13;
  uint64_t v14;
  id v15;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = (id)MEMORY[0x2348DD81C](0, v1);
      swift_bridgeObjectRelease();
      v13 = __OFSUB__(v2, 1);
      v14 = v2 - 1;
      if (v13)
        goto LABEL_24;
      sub_231412A90();
      v6 = (id)MEMORY[0x2348DD81C](v14, v1);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      break;
    v4 = *(id *)(v1 + 32);
    swift_bridgeObjectRelease();
    v5 = v2 - 1;
    if (__OFSUB__(v2, 1))
      goto LABEL_22;
    if (v5 >= v3)
      goto LABEL_23;
    v6 = *(id *)(v1 + 32 + 8 * v5);
LABEL_8:
    v7 = objc_msgSend(v4, sel_location);
    sub_231414D04();
    sub_2314130CC();
    v1 = sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
    if (swift_dynamicCast())
    {
      objc_msgSend(v15, sel_doubleValue);
      v9 = v8;

    }
    else
    {
      v9 = 0.0;
    }
    v10 = objc_msgSend(v6, sel_location);
    sub_231414D04();
    sub_2314130CC();
    if (swift_dynamicCast())
    {
      v1 = (uint64_t)v15;
      objc_msgSend(v15, sel_doubleValue);
      v12 = v11;

      if (v9 <= v12)
        return;
      __break(1u);
    }

    if (v9 <= 0.0)
      return;
    __break(1u);
LABEL_16:
    sub_231412A90();
    v2 = sub_231414F08();
    if (!v2)
      goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_2313E636C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  if (!qword_255ECB890)
  {
    v4[0] = sub_231413978();
    v4[1] = MEMORY[0x24BDF3E48];
    v4[2] = MEMORY[0x24BDB7B30];
    v4[3] = MEMORY[0x24BDF3E18];
    v2 = MEMORY[0x2348DE200](a1, v4, MEMORY[0x24BDB81B8], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255ECB890);
  }
}

uint64_t sub_2313E63F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2313E59C0(*(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_2313E6408(unint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v16;

  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  for (; v4; v4 = sub_231414F08())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348DD81C](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, sel_location);
      sub_231414D04();
      sub_2314130CC();
      sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
      if (swift_dynamicCast())
      {
        objc_msgSend(v16, sel_doubleValue);
        v11 = v10;

      }
      else
      {
        v11 = 0.0;
      }
      v12 = objc_msgSend(v7, sel_text);
      if (v12)
      {
        v13 = v12;
        v14 = sub_2314146BC();

        if (vabdd_f64(v11, a2) <= 2.22044605e-16)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
        swift_bridgeObjectRelease();
      }
      else
      {

      }
      ++v5;
      if (v8 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_18:
    sub_231412A90();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2313E65F4()
{
  return swift_deallocObject();
}

uint64_t sub_2313E6604()
{
  return sub_2313E5D2C();
}

uint64_t sub_2313E6634()
{
  return swift_deallocObject();
}

uint64_t sub_2313E6644()
{
  return sub_2313E5D2C();
}

uint64_t destroy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1)
{
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
}

_OWORD *initializeWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;

  *a1 = *a2;
  v3 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

_QWORD *assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2312DB81C(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider.AxisResult()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider.AxisResult;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v3;
  v7 = v5;
  return a1;
}

void destroy for AFibBurdenPDFChartVerticalAxisProvider(id *a1)
{

}

uint64_t assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v7 = v4;

  v8 = *(void **)(a2 + 16);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle()
{
  return &type metadata for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle;
}

uint64_t sub_2313E6A54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[4];

  v2 = sub_231411B48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CCB14();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26[-1] - v10;
  sub_231411A10();
  sub_2312CEA5C(v26, v26[3]);
  v12 = (void *)sub_2314119C8();
  v13 = (void *)*MEMORY[0x24BDD2DC8];
  sub_231411A40();
  sub_2312D6C20((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_2312CCB14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23136334C((uint64_t)v9);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v14 = sub_231411B3C();
    v15 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v17 = sub_231400D68(v13, 1, v14, v15);

  swift_bridgeObjectRelease();
  sub_23136334C((uint64_t)v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  if (qword_25415B718 != -1)
    swift_once();
  v18 = sub_231411A04();
  v19 = sub_2312CE3B8(v18, (uint64_t)qword_254162DF0);
  v20 = v25;
  v21 = v25 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v25 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain, v19, v18);
  v22 = sub_2313E6FCC(a1, v21, v17);
  swift_release();
  v23 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_publisher) = v22;
  return v20;
}

uint64_t sub_2313E6CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v22 = a1;
  sub_2312E804C(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&unk_25415D020, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_231411A04();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_231411A4C();
  MEMORY[0x24BDAC7A8](v15);
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  sub_2312D6C20(v22, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2312E804C);
  sub_231413DD4();
  v18 = sub_231411A7C();
  v19 = MEMORY[0x24BE47A60];
  a4[3] = v18;
  a4[4] = v19;
  sub_2312DFCA0(a4);
  sub_2313632EC();
  return sub_231411A70();
}

uint64_t sub_2313E6EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2313E6F08()
{
  return type metadata accessor for AFibBurdenRescindedGeneratorPipeline();
}

uint64_t type metadata accessor for AFibBurdenRescindedGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415B728;
  if (!qword_25415B728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313E6F4C()
{
  return swift_retain();
}

uint64_t sub_2313E6F60@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart36AFibBurdenRescindedGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2313E6FA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23135FB74();
  *a1 = result;
  return result;
}

uint64_t sub_2313E6FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a2;
  v53 = a1;
  sub_2313E7568();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411A04();
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  v64 = *(_QWORD *)(v62 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231411A4C();
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  v60 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313E7700();
  v11 = v10;
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313E7798();
  v15 = v14;
  v55 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313E75E8(0, &qword_25415CF08, v18, sub_2312E804C, (void (*)(void))sub_2313E7810);
  v20 = v19;
  v54 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v48 - v21;
  sub_2313E75E8(0, &qword_25415BA38, sub_2313E7668, (void (*)(uint64_t))sub_2312E5B54, (void (*)(void))sub_2313E767C);
  v66 = *(_QWORD *)(v23 - 8);
  v67 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v56 = (char *)&v48 - v24;
  v25 = (void *)sub_231411A28();
  v68 = a3;
  v26 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2313411FC(0, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v26);
  sub_231413EB8();
  sub_2312CCC24(&qword_25415CE90, (uint64_t (*)(uint64_t))sub_2313E7700, MEMORY[0x24BDB96C0]);
  sub_231360568();
  sub_231413F6C();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v11);
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  sub_2312E804C(0);
  sub_2313E7810();
  v27 = v25;
  sub_231413EB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v15);
  sub_2313E7860();
  v28 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v20);

  v68 = v28;
  v30 = v57;
  v29 = v58;
  v31 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v53, v59);
  v33 = v61;
  v32 = v62;
  v34 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v65, v63);
  v35 = v29;
  v36 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v37 = v32;
  v38 = (v60 + *(unsigned __int8 *)(v32 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v39 + v36, v30, v31);
  v40 = *(void (**)(unint64_t, char *, uint64_t))(v37 + 32);
  v41 = v56;
  v40(v39 + v38, v33, v34);
  sub_2313E7668(0);
  sub_2312E5B54();
  sub_2313E767C();
  sub_231413EB8();
  swift_release();
  swift_release();
  LOBYTE(v39) = sub_231411A1C();
  sub_2313E7698();
  if ((v39 & 1) != 0)
  {
    v43 = v67;
    v45 = sub_231413E7C();
  }
  else
  {
    v42 = v49;
    v43 = v67;
    sub_231413EDC();
    sub_2312CCC24(&qword_25415B698, (uint64_t (*)(uint64_t))sub_2313E7568, MEMORY[0x24BDB9770]);
    v44 = v51;
    v45 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v44);
  }
  (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v43);
  v68 = v45;
  sub_2313411FC(0, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  sub_231341258((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  v46 = sub_231413E7C();
  swift_release();
  return v46;
}

void sub_2313E7568()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BA70)
  {
    sub_2313E75E8(255, &qword_25415BA38, sub_2313E7668, (void (*)(uint64_t))sub_2312E5B54, (void (*)(void))sub_2313E767C);
    sub_2313E7698();
    v0 = sub_231413C84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BA70);
  }
}

void sub_2313E75E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_231413C60();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2313E7668(uint64_t a1)
{
  sub_2313411FC(a1, &qword_25415BAA0, sub_2312E804C);
}

uint64_t sub_2313E767C()
{
  return sub_2312CCC24(&qword_25415BA98, (uint64_t (*)(uint64_t))sub_2313E7668, MEMORY[0x24BDB9AF8]);
}

unint64_t sub_2313E7698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415BA30;
  if (!qword_25415BA30)
  {
    sub_2313E75E8(255, &qword_25415BA38, sub_2313E7668, (void (*)(uint64_t))sub_2312E5B54, (void (*)(void))sub_2313E767C);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25415BA30);
  }
  return result;
}

void sub_2313E7700()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415CE98)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    sub_2313411FC(255, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v0);
    v1 = sub_231413C60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415CE98);
  }
}

void sub_2313E7798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CE60)
  {
    sub_2313E7700();
    sub_2312CCC24(&qword_25415CE90, (uint64_t (*)(uint64_t))sub_2313E7700, MEMORY[0x24BDB96C0]);
    v0 = sub_231413C48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CE60);
  }
}

uint64_t sub_2313E7810()
{
  return sub_2312CCC24(&qword_25415CE58, (uint64_t (*)(uint64_t))sub_2313E7798, MEMORY[0x24BDB9658]);
}

uint64_t sub_2313E782C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313E7850@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23135F398(*a1, a2);
}

unint64_t sub_2313E7860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415CF00;
  if (!qword_25415CF00)
  {
    sub_2313E75E8(255, &qword_25415CF08, (void (*)(uint64_t))sub_2313E7798, sub_2312E804C, (void (*)(void))sub_2313E7810);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25415CF00);
  }
  return result;
}

uint64_t sub_2313E78C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_231411A04();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2313E797C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A04() - 8) + 80);
  return sub_2313E6CC8(a1, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t type metadata accessor for AFibBurdenSpecifierDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED1848);
}

void sub_2313E7A08()
{
  unint64_t v0;

  sub_2312D6DD8(319, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_2313E7AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = _s15SettingsContentVMa();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_231411D1C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + qword_255ED1838;
  swift_beginAccess();
  sub_2313EBB10(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    sub_2312D6B98((uint64_t)v10, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(a1, *MEMORY[0x24BE412A0], v11);
  }
  else
  {
    sub_2312FD80C((uint64_t)v10, (uint64_t)v6);
    sub_2312D6B98((uint64_t)v10, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v6, v11);
    sub_2312FD894((uint64_t)v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v14, v11);
  }
}

uint64_t sub_2313E7CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  id v65;
  id v66;

  ObjectType = swift_getObjectType();
  v1 = sub_23141450C();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v49 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_231414B18();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313ECDAC(0, &qword_255ED1900, v4, (void (*)(void))sub_2313ECCA4);
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v44 - v7;
  sub_2313ECCC0();
  v9 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  v59 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313ECDAC(0, &qword_255ED1918, v11, (void (*)(void))sub_2313ECD90);
  v13 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  v61 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v44 - v14;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v44 - v16;
  sub_2313ECDAC(0, (unint64_t *)&qword_255ECC928, (void (*)(uint64_t))sub_2312DC608, (void (*)(void))sub_23130D2C0);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  sub_2312CEA5C((_QWORD *)(v0 + qword_255ED1818), *(_QWORD *)(v0 + qword_255ED1818 + 24));
  v65 = (id)sub_231413600();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v66 = (id)sub_231414A94();
  v45 = sub_231414A7C();
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v63(v17, 1, 1, v45);
  sub_2312DC608();
  sub_23130D2C0();
  v62 = sub_231308748();
  sub_231413F54();
  sub_2312D6B98((uint64_t)v17, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  swift_release();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = swift_allocObject();
  v25 = ObjectType;
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v25;
  sub_2313ECE74(&qword_255ECC930, (unint64_t *)&qword_255ECC928, (void (*)(uint64_t))sub_2312DC608, (void (*)(void))sub_23130D2C0);
  sub_231413F90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v46 = v0 + qword_255ED1820;
  v44 = v0;
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  swift_release();
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v27 = v47;
  sub_231414B24();

  v29 = v49;
  v28 = v50;
  v30 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *MEMORY[0x24BEE5488], v51);
  v31 = (void *)sub_231414AC4();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  v65 = v31;
  v32 = v45;
  v63(v17, 1, 1, v45);
  sub_2313ECCA4();
  v33 = v48;
  v34 = v52;
  sub_231413F54();
  sub_2312D6B98((uint64_t)v17, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v34);
  v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v36 = swift_allocObject();
  v37 = ObjectType;
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = v37;
  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2313ECE74(&qword_255ED1910, &qword_255ED1900, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_2313ECCA4);
  v38 = v54;
  v39 = v56;
  sub_231413F00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v39);
  v65 = (id)sub_231414A94();
  v63(v17, 1, 1, v32);
  sub_2313ECD90();
  v40 = v55;
  v41 = v58;
  sub_231413F54();
  sub_2312D6B98((uint64_t)v17, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v41);
  *(_QWORD *)(swift_allocObject() + 16) = v37;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2313ECE74(&qword_255ED1928, &qword_255ED1918, (void (*)(uint64_t))sub_2313ECCC0, (void (*)(void))sub_2313ECD90);
  v42 = v60;
  sub_231413EC4();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v42);
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

void sub_2313E842C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35[5];

  v34 = a3;
  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - v6;
  v8 = sub_23141357C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v17 = MEMORY[0x2348DE3BC](a2 + 16);
  if (v17)
  {
    v18 = (char *)v17;
    v33 = v7;
    if (qword_25415B6D8 != -1)
      swift_once();
    v19 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v19, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    v20 = *(unsigned __int8 *)(v9 + 80);
    v32 = a1;
    v21 = (v20 + 16) & ~v20;
    v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23 + v21, v11, v8);
    *(_QWORD *)(v23 + v22) = v34;
    v35[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v25 = *(_QWORD *)&v18[qword_255ED1840 + 24];
    v24 = *(_QWORD *)&v18[qword_255ED1840 + 32];
    v26 = sub_2312CEA5C(&v18[qword_255ED1840], v25);
    v35[3] = v25;
    v35[4] = *(_QWORD *)(v24 + 8);
    v27 = sub_2312DFCA0(v35);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v27, v26, v25);
    v28 = (uint64_t)v33;
    sub_231396630(v32, v35, (uint64_t)v33);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v35);
    v29 = (uint64_t)&v18[qword_255ED1838];
    swift_beginAccess();
    sub_2312FD8D0(v28, v29);
    swift_endAccess();
    v30 = &v18[qword_255ED2F38];
    swift_beginAccess();
    if (MEMORY[0x2348DE3BC](v30))
    {
      swift_getObjectType();
      sub_231412FF4();

      sub_2314130CC();
    }
    else
    {

    }
  }
}

uint64_t sub_2313E8728()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_23141357C();
  sub_231414ECC();
  sub_231414728();
  return 0;
}

void sub_2313E8800(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];
  uint64_t v26;

  v26 = sub_23141357C();
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v15 = MEMORY[0x2348DE3BC](a1 + 16);
  if (v15)
  {
    v16 = (char *)v15;
    v24 = a3;
    if (qword_25415B6D8 != -1)
      swift_once();
    v17 = sub_2312CE3B8(v11, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
    *(_QWORD *)(swift_allocObject() + 16) = a2;
    v25[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_2312CEA5C(&v16[qword_255ED1818], *(_QWORD *)&v16[qword_255ED1818 + 24]);
    sub_2314135E8();
    if (v3)
    {

    }
    else
    {
      v19 = *(_QWORD *)&v16[qword_255ED1840 + 24];
      v20 = *(_QWORD *)&v16[qword_255ED1840 + 32];
      v21 = sub_2312CEA5C(&v16[qword_255ED1840], v19);
      v25[3] = v19;
      v25[4] = *(_QWORD *)(v20 + 8);
      v22 = sub_2312DFCA0(v25);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v21, v19);
      sub_231396630((uint64_t)v9, v25, v24);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v25);
    }
  }
  else
  {
    v18 = _s15SettingsContentVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t sub_2313E8A64(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[2];

  sub_2312D4A68();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (v10)
  {
    v11 = v10;
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v12, v5);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = a2;
    v15[1] = 0;
    v14 = v10;
    sub_2314135AC();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_2313E8B90(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

void sub_2313E8C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - v5;
  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x2348DE3BC](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_2313EBB10(a1, (uint64_t)v6);
    v10 = (uint64_t)v9 + qword_255ED1838;
    swift_beginAccess();
    sub_2312FD8D0((uint64_t)v6, v10);
    swift_endAccess();

  }
  swift_beginAccess();
  v11 = MEMORY[0x2348DE3BC](v7);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = v11 + qword_255ED2F38;
    swift_beginAccess();
    v14 = MEMORY[0x2348DE3BC](v13);

    if (v14)
    {
      swift_getObjectType();
      sub_231412FF4();
      sub_2314130CC();
    }
  }
}

uint64_t sub_2313E8DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = a1;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v3 = v2;
  v46 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231411D1C();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v40 - v8;
  v9 = _s15SettingsContentVMa();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v40 - v18;
  if (qword_25415E610 != -1)
    swift_once();
  v20 = (id)qword_254163058;
  v21 = (void *)sub_23141468C();
  v22 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v21, v20);

  if (!v22)
  {
    v30 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v47, 1, 1, v30);
  }
  v23 = v1 + qword_255ED1838;
  swift_beginAccess();
  sub_2313EBB10(v23, (uint64_t)v19);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v24(v19, 1, v9))
  {
    sub_2312D6B98((uint64_t)v19, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
LABEL_6:
    if (qword_25415B6D8 != -1)
      swift_once();
    v25 = sub_2312CE3B8(v3, (uint64_t)qword_254162EE8);
    v26 = v46;
    v27 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v44, v25, v3);
    *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
    v48 = 0;
    sub_2314135AC();
    swift_release();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v3);
    v28 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v47, 1, 1, v28);
  }
  sub_2312FD80C((uint64_t)v19, (uint64_t)v12);
  sub_2312D6B98((uint64_t)v19, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  v31 = &v12[*(int *)(v9 + 28)];
  v32 = *(_QWORD *)v31;
  v33 = *((_QWORD *)v31 + 1);
  sub_231412A90();
  sub_2312FD894((uint64_t)v12);
  if (!v33)
    goto LABEL_6;
  v46 = v32;
  sub_2313EBB10(v23, (uint64_t)v17);
  if (v24(v17, 1, v9))
  {
    sub_2312D6B98((uint64_t)v17, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    v35 = v41;
    v34 = v42;
    v36 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, *MEMORY[0x24BE412A0], v43);
  }
  else
  {
    sub_2312FD80C((uint64_t)v17, (uint64_t)v12);
    sub_2312D6B98((uint64_t)v17, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    v34 = v42;
    v36 = v43;
    v37 = v40;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v12, v43);
    sub_2312FD894((uint64_t)v12);
    v35 = v41;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v41, v37, v36);
  }
  v38 = v47;
  sub_231411D94();
  sub_231411D7C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_231413054();
  v39 = sub_23141306C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
}

uint64_t sub_2313E92CC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v0 = sub_2313E93E0();
  sub_2313EBCD4(v0, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EC2E0);
  v1 = sub_2313E99DC();
  sub_2313EBCD4(v1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EC2E0);
  v2 = v8;
  if (v8 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414EFC();
    swift_bridgeObjectRelease_n();
    return v7;
  }
  else
  {
    v3 = v8 & 0xFFFFFFFFFFFFFF8;
    sub_231412A90();
    sub_23141507C();
    if (swift_dynamicCastMetatype() || (v5 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = (_QWORD *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
    return v2;
  }
}

uint64_t sub_2313E93E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  NSUInteger v32;
  NSUInteger v33;
  objc_class *ObjCClassFromMetadata;
  NSString *v35;
  void *v36;
  NSString *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSRange v47;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s15SettingsContentVMa();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - v13;
  v46 = MEMORY[0x24BEE4AF8];
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_23141468C();
  v17 = objc_msgSend(v15, sel_groupSpecifierWithID_, v16);

  if (!v17)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v20 = sub_2312CE3B8(v3, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
    *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
    v45 = 0;
    sub_2314135AC();
    goto LABEL_10;
  }
  v18 = v1 + qword_255ED1838;
  swift_beginAccess();
  sub_2313EBB10(v18, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
  {
    sub_2312D6B98((uint64_t)v14, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
LABEL_4:
    if (qword_25415B6D8 != -1)
      swift_once();
    v19 = sub_2312CE3B8(v3, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v19, v3);
    *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
    v44 = 0;
    sub_2314135AC();

LABEL_10:
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return v46;
  }
  v42 = v1;
  sub_2312FD80C((uint64_t)v14, (uint64_t)v10);
  sub_2312D6B98((uint64_t)v14, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  v22 = (uint64_t *)&v10[*(int *)(v7 + 32)];
  v23 = v22[1];
  v24 = v22[4];
  v25 = v22[5];
  v41 = *v22;
  sub_2313C26C0(v41, v23);
  sub_2312FD894((uint64_t)v10);
  if (!v23)
    goto LABEL_4;
  v26 = (uint64_t *)(v42 + qword_255ED1828);
  *v26 = v24;
  v26[1] = v25;
  swift_bridgeObjectRelease();
  v27 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  sub_231412A90();
  v28 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v27, sel_initWithString_, v28);

  v30 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, sel_localizedStandardRangeOfString_, v30);
  v33 = v32;

  sub_2312D3C68(0, &qword_255ECC0E8);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v35 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v35)
  {
    sub_2314146BC();
    v35 = (NSString *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v17, sel_setProperty_forKey_, v35, *MEMORY[0x24BE75A30]);

  v36 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setProperty_forKey_, v36, *MEMORY[0x24BE75A58]);

  v47.location = (NSUInteger)v31;
  v47.length = v33;
  v37 = NSStringFromRange(v47);
  if (!v37)
  {
    sub_2314146BC();
    v37 = (NSString *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v17, sel_setProperty_forKey_, v37, *MEMORY[0x24BE75A40]);

  v38 = objc_msgSend((id)objc_opt_self(), sel_valueWithNonretainedObject_, v42);
  objc_msgSend(v17, sel_setProperty_forKey_, v38, *MEMORY[0x24BE75A50]);
  sub_231411800();
  v39 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setProperty_forKey_, v39, *MEMORY[0x24BE75A38]);

  v40 = v17;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();

  return v46;
}

uint64_t sub_2313E99DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v1 = _s15SettingsContentVMa();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = 0;
  v13 = v0 + qword_255ED1808;
  if (*(_BYTE *)(v0 + qword_255ED1808) == 1)
  {
    v14 = v0 + qword_255ED1838;
    swift_beginAccess();
    sub_2313EBB10(v14, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1))
    {
      sub_2312D6B98((uint64_t)v11, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
      v15 = 2;
    }
    else
    {
      sub_2312FD80C((uint64_t)v11, (uint64_t)v4);
      sub_2312D6B98((uint64_t)v11, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
      v15 = v4[*(int *)(v1 + 20)];
      sub_2312FD894((uint64_t)v4);
    }
    v16 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenTitleDescription);
    v17 = sub_2314146BC();
    v19 = v18;

    v12 = sub_2313E9E5C(v15, v17, v19, 0xD00000000000001ALL, 0x8000000231432940, (uint64_t)sel_setAFibBurdenFeatureEnabledWithValue_, (uint64_t)sel_isAFibBurdenFeatureEnabled);
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v13 + 1) == 1)
  {
    v20 = v0 + qword_255ED1838;
    swift_beginAccess();
    sub_2313EBB10(v20, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
    {
      sub_2312D6B98((uint64_t)v9, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
      v21 = 2;
    }
    else
    {
      sub_2312FD80C((uint64_t)v9, (uint64_t)v4);
      sub_2312D6B98((uint64_t)v9, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
      v21 = v4[*(int *)(v1 + 24)];
      sub_2312FD894((uint64_t)v4);
    }
    if (qword_255ECAAD8 != -1)
      swift_once();
    v23 = sub_231411374();
    v22 = sub_2313E9E5C(v21, v23, v24, 0xD00000000000001FLL, 0x8000000231432920, (uint64_t)sel_setAFibBurdenNotificationEnabledWithValue_, (uint64_t)sel_isAFibBurdenNotificationEnabled);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  v32 = MEMORY[0x24BEE4AF8];
  if (!v12)
  {
    v27 = v22;
    if (!v22)
      goto LABEL_23;
    goto LABEL_20;
  }
  v25 = v22;
  v26 = v12;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();
  if (v22)
  {
LABEL_20:
    v28 = v22;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();
  }
LABEL_23:
  v29 = v32;

  return v29;
}

id sub_2313E9E5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  id v8;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  if (a1 == 2)
    return 0;
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_23141468C();
  v8 = objc_msgSend(v11, sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v12, v7, a6, a7, 0, 6, 0);

  if (v8)
  {
    v13 = (void *)sub_23141468C();
    objc_msgSend(v8, sel_setIdentifier_, v13);

    v14 = (void *)sub_231414800();
    objc_msgSend(v8, sel_setProperty_forKey_, v14, *MEMORY[0x24BE75A18]);

    v15 = (void *)sub_231414800();
    objc_msgSend(v8, sel_setProperty_forKey_, v15, *MEMORY[0x24BE75868]);

  }
  return v8;
}

uint64_t sub_2313E9FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = _s15SettingsContentVMa();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - v7;
  v9 = v0 + qword_255ED1838;
  swift_beginAccess();
  sub_2313EBB10(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1))
  {
    sub_2312D6B98((uint64_t)v8, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  }
  else
  {
    sub_2312FD80C((uint64_t)v8, (uint64_t)v4);
    sub_2312D6B98((uint64_t)v8, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    sub_2312FD894((uint64_t)v4);
  }
  return sub_231414800();
}

id sub_2313EA10C(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_2313E9FBC();

  return v2;
}

void sub_2313EA13C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = ObjectType;
  aBlock[0] = 0;
  v12 = a1;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = *(void **)(v2 + qword_255ED1810);
  v14 = (void *)*MEMORY[0x24BDD2EB0];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = ObjectType;
  aBlock[4] = sub_2313ECAC8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_231330294;
  aBlock[3] = &unk_25002A680;
  v16 = _Block_copy(aBlock);
  v17 = v14;
  swift_release();
  objc_msgSend(v13, sel_setFeatureSettingNumber_forKey_completion_, v12, v17, v16);
  _Block_release(v16);

}

void sub_2313EA318(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_2313EA13C(v4);

}

uint64_t sub_2313EA36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = _s15SettingsContentVMa();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - v7;
  v9 = v0 + qword_255ED1838;
  swift_beginAccess();
  sub_2313EBB10(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1))
  {
    sub_2312D6B98((uint64_t)v8, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  }
  else
  {
    sub_2312FD80C((uint64_t)v8, (uint64_t)v4);
    sub_2312D6B98((uint64_t)v8, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
    sub_2312FD894((uint64_t)v4);
  }
  return sub_231414800();
}

id sub_2313EA4BC(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_2313EA36C();

  return v2;
}

void sub_2313EA4EC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v42 = a4;
  v37 = a3;
  v6 = sub_231414500();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231414524();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130D990();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v22 = MEMORY[0x2348DE3BC](a2 + 16);
  if (v22)
  {
    v23 = (void *)v22;
    if (objc_msgSend(a1, sel_authorizationStatus) == (id)2)
    {
      if (qword_25415B6D8 != -1)
        swift_once();
      v24 = sub_2312CE3B8(v18, (uint64_t)qword_254162EE8);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v24, v18);
      v25 = swift_allocObject();
      v26 = v37;
      v27 = v42;
      *(_QWORD *)(v25 + 16) = v37;
      *(_QWORD *)(v25 + 24) = v27;
      aBlock[0] = 0;
      v28 = v26;
      sub_231413594();
      swift_release();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      swift_getObjectType();
      objc_msgSend(v28, sel_BOOLValue);
      sub_2314146BC();
      sub_231414A34();
      *(_QWORD *)(swift_allocObject() + 16) = v42;
      sub_231414B84();
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);

    }
    else
    {
      if (qword_25415B6D8 != -1)
        swift_once();
      v29 = sub_2312CE3B8(v18, (uint64_t)qword_254162EE8);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v29, v18);
      *(_QWORD *)(swift_allocObject() + 16) = v42;
      aBlock[0] = 0;
      sub_231413594();
      swift_release();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
      v30 = (void *)sub_231414A94();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v23;
      aBlock[4] = sub_2313EBA08;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23130DCCC;
      aBlock[3] = &unk_25002A568;
      v32 = _Block_copy(aBlock);
      v33 = v23;
      swift_release();
      sub_231414518();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
      sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_231350E5C();
      v35 = v41;
      sub_231414D1C();
      MEMORY[0x2348DD48C](0, v11, v8, v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v35);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
    }
  }
}

uint64_t sub_2313EA9A8()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

void sub_2313EAA3C(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + qword_255ED2F38;
  swift_beginAccess();
  if (MEMORY[0x2348DE3BC](v1))
  {
    swift_getObjectType();
    sub_231412FF4();
    sub_2314130CC();
  }
  sub_2313EB170();
}

uint64_t sub_2313EAABC(void *a1)
{
  id v2;
  id v3;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  v3 = objc_msgSend(v2, sel_description);
  sub_2314146BC();

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313EABB8(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[2];

  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    v15[1] = 0;
    v14 = a2;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_2313EACE0(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ED1EC0, (uint64_t (*)(uint64_t))sub_2312D3C14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313EADDC(char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  char *v9;

  ObjectType = swift_getObjectType();
  sub_2312CEA5C(&a1[qword_255ED1840], *(_QWORD *)&a1[qword_255ED1840 + 24]);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a3;
  v7[4] = ObjectType;
  v8 = a3;
  v9 = a1;
  swift_retain();
  sub_231411848();

  swift_release();
  return swift_release();
}

void sub_2313EAEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v1 = *(_QWORD *)(v0 + qword_255ED1828 + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + qword_255ED1828);
    v3 = (void *)objc_opt_self();
    sub_231412A90();
    v4 = objc_msgSend(v3, sel_aFibBurdenArticleLinkURL);
    v5 = sub_2314146BC();
    v7 = v6;

    if (v2 == v5 && v1 == v7)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      sub_2313EAFF8();
      return;
    }
    v9 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      goto LABEL_10;
    sub_231414704();
    swift_bridgeObjectRelease();
  }
}

void sub_2313EAFC4(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313EAEBC();

}

void sub_2313EAFF8()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;

  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_2313DA83C();
  v1 = objc_allocWithZone((Class)sub_231411C20());
  v2 = (void *)sub_231411C14();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v2, 0xE000000000000000);
  v4 = v0 + qword_255ED2F40;
  swift_beginAccess();
  if (MEMORY[0x2348DE3BC](v4))
  {
    swift_getObjectType();
    v5 = (void *)sub_231413408();
    sub_2314130CC();
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v3, 1, 0);

  }
}

void sub_2313EB170()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v1, v2, 1, 0xE000000000000000);

  sub_231411374();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_actionWithTitle_style_handler_, v4, 1, 0, 0xE000000000000000);

  sub_231411374();
  v7 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2313BAE98;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_231386C84;
  aBlock[3] = &unk_25002A608;
  v8 = _Block_copy(aBlock);
  swift_release();
  v9 = objc_msgSend(v5, sel_actionWithTitle_style_handler_, v7, 0, v8, 0xE000000000000000);
  _Block_release(v8);

  objc_msgSend(v3, sel_addAction_, v6);
  objc_msgSend(v3, sel_addAction_, v9);
  objc_msgSend(v3, sel_setPreferredAction_, v9);
  v10 = v0 + qword_255ED2F40;
  swift_beginAccess();
  if (MEMORY[0x2348DE3BC](v10))
  {
    swift_getObjectType();
    v11 = (void *)sub_231413408();
    sub_2314130CC();
    objc_msgSend(v11, sel_presentViewController_animated_completion_, v3, 1, 0);

  }
}

void sub_2313EB4C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313EB4F0()
{
  uint64_t v0;

  sub_2314130CC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + qword_255ED1818);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2312D6B98(v0 + qword_255ED1838, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + qword_255ED1840);
  sub_2312D2854(v0 + qword_255ED2F38);
  return sub_2312D2854(v0 + qword_255ED2F40);
}

id sub_2313EB5A0()
{
  return sub_231308560(type metadata accessor for AFibBurdenSpecifierDataSource);
}

uint64_t sub_2313EB5AC(uint64_t a1)
{
  sub_2314130CC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + qword_255ED1818);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2312D6B98(a1 + qword_255ED1838, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + qword_255ED1840);
  sub_2312D2854(a1 + qword_255ED2F38);
  return sub_2312D2854(a1 + qword_255ED2F40);
}

uint64_t sub_2313EB668()
{
  return type metadata accessor for AFibBurdenSpecifierDataSource(0);
}

uint64_t type metadata accessor for AFibBurdenSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED1898);
}

uint64_t sub_2313EB684()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313EB6C0(uint64_t a1, uint64_t a2)
{
  return sub_23133EEE8(a1, a2, &qword_255ED2F38);
}

uint64_t sub_2313EB6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23133EF3C(a1, a2, a3, a4, &qword_255ED2F38);
}

void (*sub_2313EB6D8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ED2F38;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23133EED8;
}

uint64_t sub_2313EB74C(uint64_t a1, uint64_t a2)
{
  return sub_23133EEE8(a1, a2, &qword_255ED2F40);
}

uint64_t sub_2313EB758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23133EF3C(a1, a2, a3, a4, &qword_255ED2F40);
}

void (*sub_2313EB764(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ED2F40;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23133EED8;
}

void sub_2313EB7E0()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313EB838()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_2313EB864()
{
  return sub_231308560(type metadata accessor for AFibBurdenSettingsViewController);
}

uint64_t sub_2313EB870()
{
  return type metadata accessor for AFibBurdenSettingsViewController(0);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenSpecifierDataSource.Configuration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2313EB8C4 + 4 * byte_2314237C5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2313EB8F8 + 4 * byte_2314237C0[v4]))();
}

uint64_t sub_2313EB8F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313EB900(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2313EB908);
  return result;
}

uint64_t sub_2313EB914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2313EB91CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313EB920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2313EB928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenSpecifierDataSource.Configuration()
{
  return &type metadata for AFibBurdenSpecifierDataSource.Configuration;
}

uint64_t sub_2313EB944()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313EB968()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_2313EB994(void *a1)
{
  uint64_t v1;

  sub_2313EA4EC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2313EB9A0()
{
  return swift_deallocObject();
}

uint64_t sub_2313EB9B0()
{
  return sub_2313EA9A8();
}

uint64_t sub_2313EB9E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2313EBA08()
{
  uint64_t v0;

  sub_2313EAA3C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2313EBA10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313EBA20()
{
  return swift_release();
}

uint64_t sub_2313EBA28()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313EBA4C()
{
  uint64_t v0;

  return sub_2313EAABC(*(void **)(v0 + 16));
}

uint64_t sub_2313EBA80()
{
  return swift_deallocObject();
}

uint64_t sub_2313EBA90(char a1, void *a2)
{
  uint64_t v2;

  return sub_2313EABB8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313EBAB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313EBADC()
{
  uint64_t v0;

  return sub_2313EACE0(*(void **)(v0 + 16));
}

uint64_t sub_2313EBB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313EBB6C(unint64_t a1)
{
  return sub_2313EBCD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EBEA8);
}

uint64_t sub_2313EBB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2312CDA80(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2313EBCC8(unint64_t a1)
{
  return sub_2313EBCD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EC0C4);
}

uint64_t sub_2313EBCD4(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    sub_231412A90();
    v5 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414F08();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    sub_231412A90();
    v6 = MEMORY[0x2348DD828](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_231412A90();
    v11 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2314147B8();
  }
  __break(1u);
  return result;
}

uint64_t sub_2313EBE90(unint64_t a1)
{
  return sub_2313EBCD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EC2E0);
}

uint64_t sub_2313EBE9C(unint64_t a1)
{
  return sub_2313EBCD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2313EC4FC);
}

uint64_t sub_2313EBEA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_231412A90();
    v10 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2313ECBAC(0, &qword_255ED1930, (unint64_t *)&qword_255ED2440);
        sub_2313ED414();
        sub_231412A90();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23137A164(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2313EC0C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_231412A90();
    v10 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2313ECBAC(0, &qword_255ED1950, (unint64_t *)&unk_255ECF280);
        sub_2313ED4D4();
        sub_231412A90();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23137A164(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2313EC2E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_231412A90();
    v10 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2313ECBAC(0, &qword_255ED18F0, &qword_255ED18E8);
        sub_2313ECC00();
        sub_231412A90();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23137A1BC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2312D3C68(0, &qword_255ED18E8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2313EC4FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_231412A90();
    v10 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2313ECBAC(0, &qword_255ED1940, (unint64_t *)&qword_255ECDC18);
        sub_2313ED474();
        sub_231412A90();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23137A164(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_255ECDC18);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

id sub_2313EC718(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  __int16 v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v55 = a8;
  v54 = a7;
  v60 = a4;
  v47 = a3;
  v50 = a1;
  v52 = a9;
  v53 = a5;
  v51 = a11;
  v13 = sub_2314120AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v16;
  v17 = _s15SettingsContentVMa();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a10 - 8);
  v22 = MEMORY[0x24BDAC7A8](v18);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v47 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))((char *)&v47 - v25, v60, a10);
  v60 = a2;
  sub_2312FD80C(a2, (uint64_t)v20);
  v57 = v14;
  v58 = v13;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v28 = v47;
  v59 = a6;
  v27(v16, a6, v13);
  v29 = sub_23141186C();
  v30 = sub_231411860();
  v62 = v29;
  v63 = &off_25002A428;
  v61[0] = v30;
  v31 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSpecifierDataSource(0));
  v32 = sub_2312DEF74((uint64_t)v61, v62);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t *)((char *)&v47 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  v36 = *v34;
  v49 = v21;
  v37 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v56 = v26;
  v37(v24, v26, a10);
  LOWORD(v34) = v50 & 0x101;
  swift_retain();
  v38 = (__int16)v34;
  v39 = v53;
  v40 = sub_2313ECFE4(v38, (uint64_t)v20, v28, (uint64_t)v24, v53, (uint64_t)v48, v36, v31, v52, a10, v51);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v61);
  swift_release();
  sub_2312CCC24(&qword_255ECBB68, type metadata accessor for AFibBurdenSpecifierDataSource, (uint64_t)&unk_231423900);
  v41 = v40;
  v42 = (void *)sub_231412F1C();
  v43 = (void *)objc_opt_self();
  v44 = v42;
  v45 = objc_msgSend(v43, sel_aFibBurdenSectionTitle);
  if (!v45)
  {
    sub_2314146BC();
    v45 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v44, sel_setTitle_, v45, v47);

  sub_2314130CC();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v56, a10);
  sub_2312FD894(v60);
  return v44;
}

uint64_t sub_2313ECA84()
{
  uint64_t v0;

  return sub_2313EAABC(*(void **)(v0 + 16));
}

uint64_t sub_2313ECAB8()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECAC8(char a1, void *a2)
{
  uint64_t v2;

  return sub_2313EABB8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313ECAF0()
{
  uint64_t v0;

  return sub_2313EACE0(*(void **)(v0 + 16));
}

uint64_t sub_2313ECB24()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECB34()
{
  return sub_2313EA9A8();
}

uint64_t sub_2313ECB68()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECB78()
{
  return sub_2313EA9A8();
}

void sub_2313ECBAC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2312D3C68(255, a3);
    v4 = sub_2314147F4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_2313ECC00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED18F8;
  if (!qword_255ED18F8)
  {
    sub_2313ECBAC(255, &qword_255ED18F0, &qword_255ED18E8);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ED18F8);
  }
  return result;
}

uint64_t sub_2313ECC60()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECC70()
{
  return sub_2313EA9A8();
}

uint64_t sub_2313ECCA4()
{
  return sub_2312CCC24(&qword_25415DF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
}

void sub_2313ECCC0()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ED1908)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_2313ECDAC(255, &qword_255ED1900, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_2313ECCA4);
    sub_2312D6DD8(255, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2313ECE74(&qword_255ED1910, &qword_255ED1900, v0, (void (*)(void))sub_2313ECCA4);
    v1 = sub_231413CC0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ED1908);
  }
}

uint64_t sub_2313ECD90()
{
  return sub_2312CCC24(&qword_255ED1920, (uint64_t (*)(uint64_t))sub_2313ECCC0, MEMORY[0x24BDB98C8]);
}

void sub_2313ECDAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    a4();
    sub_231308748();
    v6 = sub_231413CFC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2313ECE48()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2313ECE6C(uint64_t a1)
{
  uint64_t v1;

  sub_2313E842C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2313ECE74(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2313ECDAC(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9A08], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2313ECEB4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2313E8800(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2313ECECC()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECEDC(void **a1)
{
  uint64_t v1;

  return sub_2313E8A64(a1, *(_QWORD *)(v1 + 16));
}

void sub_2313ECEE4(uint64_t a1)
{
  uint64_t v1;

  sub_2313E8C74(a1, v1);
}

uint64_t sub_2313ECEEC()
{
  uint64_t v0;

  return sub_2313E8B90(*(void **)(v0 + 16));
}

uint64_t sub_2313ECEF4()
{
  return swift_deallocObject();
}

uint64_t sub_2313ECF04()
{
  return sub_2313EA9A8();
}

uint64_t sub_2313ECF38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23141357C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313ECFA4()
{
  sub_23141357C();
  return sub_2313E8728();
}

id sub_2313ECFE4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  char *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  uint64_t v43[5];

  v40 = a6;
  v41 = a2;
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v39 - v19;
  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, v17);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v39 - v22;
  v43[3] = a10;
  v43[4] = a11;
  v24 = sub_2312DFCA0(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 32))(v24, a4, a10);
  v42[3] = sub_23141186C();
  v42[4] = &off_25002A428;
  v42[0] = a7;
  v25 = a8;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v26 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v26 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v25[qword_255ED1820] = v26;
  v27 = &v25[qword_255ED1828];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = (uint64_t)&v25[qword_255ED1838];
  v29 = _s15SettingsContentVMa();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v30(v28, 1, 1, v29);
  *(_QWORD *)&v25[qword_255ED2F38 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v25[qword_255ED2F40 + 8] = 0;
  swift_unknownObjectWeakInit();
  v31 = &v25[qword_255ED1808];
  *v31 = a1 & 1;
  v31[1] = HIBYTE(a1) & 1;
  *(_QWORD *)&v25[qword_255ED1810] = a3;
  sub_2312DF850((uint64_t)v43, (uint64_t)&v25[qword_255ED1818]);
  *(_QWORD *)&v25[qword_255ED1830] = a5;
  v32 = v41;
  sub_2312FD80C(v41, (uint64_t)v23);
  v30((uint64_t)v23, 0, 1, v29);
  swift_beginAccess();
  swift_unknownObjectRetain();
  v33 = a5;
  sub_2312FD8D0((uint64_t)v23, v28);
  swift_endAccess();
  sub_2312DF850((uint64_t)v42, (uint64_t)&v25[qword_255ED1840]);

  v34 = sub_2314120AC();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v20, v40, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v20, 0, 1, v34);
  sub_231412A90();
  HKImproveHealthAndActivityAnalyticsAllowed();
  v37 = (id)sub_2314120A0();
  sub_2313E7CB4();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v43);
  sub_2312FD894(v32);
  return v37;
}

id sub_2313ED330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;

  v23 = a7;
  v21 = a5;
  v22 = a6;
  v14 = a1;
  v15 = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSettingsViewController(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a4, a10);
  return sub_2313EC718(v14 & 0x101, a2, a3, (uint64_t)v17, v21, v22, v23, (uint64_t)v18, a9, a10, a11);
}

unint64_t sub_2313ED414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1938;
  if (!qword_255ED1938)
  {
    sub_2313ECBAC(255, &qword_255ED1930, (unint64_t *)&qword_255ED2440);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ED1938);
  }
  return result;
}

unint64_t sub_2313ED474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1948;
  if (!qword_255ED1948)
  {
    sub_2313ECBAC(255, &qword_255ED1940, (unint64_t *)&qword_255ECDC18);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ED1948);
  }
  return result;
}

unint64_t sub_2313ED4D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1958;
  if (!qword_255ED1958)
  {
    sub_2313ECBAC(255, &qword_255ED1950, (unint64_t *)&unk_255ECF280);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ED1958);
  }
  return result;
}

uint64_t sub_2313ED554()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *(_BYTE *)(v0 + 40);
  v3 = sub_231412D78();
  type metadata accessor for AFibBurdenEducationSectionGenerator();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(_BYTE *)(v4 + 40) = v2;
  swift_unknownObjectRetain();
  v5 = sub_23136735C();
  swift_release();
  return v5;
}

uint64_t sub_2313ED5D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = 0xD000000000000013;
  *(_QWORD *)(a5 + 16) = 0x8000000231428B30;
  *(_QWORD *)(a5 + 24) = a2;
  *(_QWORD *)(a5 + 32) = a4;
  *(_BYTE *)(a5 + 40) = a3;
  return result;
}

uint64_t _s28AFibBurdenEducationComponentVwxx(id *a1)
{

  swift_bridgeObjectRelease();
  return sub_2314130CC();
}

uint64_t _s28AFibBurdenEducationComponentVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = v3;
  sub_231412A90();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s28AFibBurdenEducationComponentVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_2314130CC();
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 _s28AFibBurdenEducationComponentVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s28AFibBurdenEducationComponentVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_2314130CC();
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t _s28AFibBurdenEducationComponentVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s28AFibBurdenEducationComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s28AFibBurdenEducationComponentVMa()
{
  return &_s28AFibBurdenEducationComponentVN;
}

uint64_t type metadata accessor for ElectrocardiogramSpecifierDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED1968);
}

uint64_t sub_2313ED854()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313ED89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE41298];
  v3 = sub_231411D1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2313ED8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_getObjectType();
  sub_2313EDFD0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + qword_255ED1960 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_23140E320();
  v6 = sub_2314120AC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = sub_2314120A0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t sub_2313ED9F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  swift_getObjectType();
  v2 = sub_231411D1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411D70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23140E338();
  v10 = sub_231411D58();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
    swift_initStackObject();
    sub_2314045A8(0, 0xE000000000000000);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE41298], v2);
    sub_231412A90();
    sub_231411D94();
    sub_231411D7C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_231413060();
    swift_release();
    v11 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  else
  {
    v13 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

void sub_2313EDBC8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313EDBF4()
{
  uint64_t v0;

  return sub_2312D2854(v0 + qword_255ED1960);
}

id sub_2313EDC04()
{
  return sub_231308560(type metadata accessor for ElectrocardiogramSpecifierDataSource);
}

uint64_t sub_2313EDC10(uint64_t a1)
{
  return sub_2312D2854(a1 + qword_255ED1960);
}

uint64_t sub_2313EDC20()
{
  return type metadata accessor for ElectrocardiogramSpecifierDataSource(0);
}

uint64_t type metadata accessor for ElectrocardiogramSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ED19B8);
}

uint64_t sub_2313EDC3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313EDC78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255ED1960;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v1);
}

uint64_t sub_2313EDCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + qword_255ED1960;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void (*sub_2313EDD2C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ED1960;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_231308278;
}

id sub_2313EDDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;

  swift_getObjectType();
  v2 = sub_2314120AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramSpecifierDataSource(0));
  v7 = (void *)sub_2313ED8E0((uint64_t)v5);
  sub_2313EDF88();
  v8 = v7;
  v9 = (id)sub_231412F1C();
  sub_23140E3A8();
  v10 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTitle_, v10);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v9;
}

void sub_2313EDEF0()
{
  sub_231414EE4();
  __break(1u);
}

void sub_2313EDF48()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_2313EDF74()
{
  return sub_231308560(type metadata accessor for ElectrocardiogramSettingsViewController);
}

uint64_t sub_2313EDF80()
{
  return type metadata accessor for ElectrocardiogramSettingsViewController(0);
}

unint64_t sub_2313EDF88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ED1A08;
  if (!qword_255ED1A08)
  {
    v1 = type metadata accessor for ElectrocardiogramSpecifierDataSource(255);
    result = MEMORY[0x2348DE248](&unk_231423A48, v1);
    atomic_store(result, (unint64_t *)&qword_255ED1A08);
  }
  return result;
}

void sub_2313EDFD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBB70)
  {
    sub_2314120AC();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBB70);
  }
}

void sub_2313EE024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context);
  swift_beginAccess();
  v4 = v3[3];
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  v5 = sub_2312CEA5C(v3, v3[3]);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = sub_231412F04();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v11 >> 60 != 15)
  {
    v34 = ObjectType;
    if (qword_25415C170 != -1)
      swift_once();
    v19 = sub_231413780();
    sub_2312CE3B8(v19, (uint64_t)qword_254162F00);
    v20 = sub_231413768();
    v21 = sub_23141498C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v33 = v11;
      v24 = v23;
      v35 = v23;
      *(_DWORD *)v22 = 136446210;
      v36 = v34;
      swift_getMetatypeMetadata();
      v25 = sub_2314146E0();
      v36 = sub_23133180C(v25, v26, &v35);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s] Cache object set, decoding", v22, 0xCu);
      swift_arrayDestroy();
      v27 = v24;
      v11 = v33;
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v22, -1, -1);
    }

    sub_2314111C4();
    swift_allocObject();
    sub_2314111B8();
    sub_2313EF4C0();
    sub_2314111AC();
    swift_release();
    v28 = OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject) = v36;
    swift_bridgeObjectRelease();
    v29 = *(void **)(v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView);
    if (!v29)
      goto LABEL_15;
    v30 = *(_QWORD *)(v1 + v28);
    if (v30)
    {
      v31 = v29;
      sub_231412A90();
      v32 = sub_2313A0570();
      sub_231348600(v30);

      swift_bridgeObjectRelease();
LABEL_15:
      sub_231311034(v9, v11);
      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if (qword_25415C170 != -1)
    swift_once();
  v12 = sub_231413780();
  sub_2312CE3B8(v12, (uint64_t)qword_254162F00);
  v13 = sub_231413768();
  v14 = sub_231414980();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v35 = v16;
    *(_DWORD *)v15 = 136446210;
    v36 = ObjectType;
    swift_getMetatypeMetadata();
    v17 = sub_2314146E0();
    v36 = sub_23133180C(v17, v18, &v35);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s] No user data found, expected related sample types cache object", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v16, -1, -1);
    MEMORY[0x2348DE308](v15, -1, -1);
  }

}

id sub_2313EE638(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  void *v6;
  id v7;
  objc_super v9;

  v5 = &v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView] = 0;
  if (a2)
  {
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  v7 = objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void sub_2313EE7B4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[24];
  _QWORD v16[3];
  uint64_t v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_cacheObject];
  if (v1)
  {
    v2 = v0;
    v3 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context];
    swift_beginAccess();
    sub_231310E3C(v3, (uint64_t)v16);
    v4 = v17;
    if (v17)
    {
      v5 = sub_2312CEA5C(v16, v17);
      v6 = *(_QWORD *)(v4 - 8);
      MEMORY[0x24BDAC7A8](v5);
      v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *))(v6 + 16))(v8);
      sub_231412A90();
      v9 = (void *)sub_231412EE0();
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v4);
      v10 = (char *)objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorsTileView());
      v11 = v2;
      v12 = sub_2313EF568(v1, v9, v11, v10);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v16);
      v13 = OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView;
      v14 = *(void **)&v11[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView];
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_tileView] = v12;

      objc_msgSend(v11, sel_setView_, *(_QWORD *)&v11[v13]);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2313EE950()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsTileViewController()
{
  return objc_opt_self();
}

uint64_t sub_2313EE9F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  return sub_231310E3C(v3, a1);
}

uint64_t sub_2313EEA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_231310D94(a1, v3);
  swift_endAccess();
  sub_2313EE024();
  return sub_2312CEBD4(a1, (uint64_t (*)(_QWORD))sub_2313EF504);
}

void (*sub_2313EEAB4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2313EEAFC;
}

void sub_2313EEAFC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2313EE024();
}

void sub_2313EEB2C()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;

  ObjectType = swift_getObjectType();
  v2 = v0 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_231310E3C(v2, (uint64_t)v22);
  v3 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = sub_2312CEA5C(v22, v23);
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (void *)sub_231412EE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  v9 = objc_msgSend(v8, sel_displayTypeController);

  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  sub_2312D6D30();
  v10 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v11 = objc_msgSend(v9, sel_displayTypeForObjectType_, v10);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
  if (v11)
  {
    v12 = objc_msgSend(v11, sel_displayCategory);
    objc_msgSend(v12, sel_color);

  }
  else
  {
    if (qword_25415C170 != -1)
      swift_once();
    v13 = sub_231413780();
    sub_2312CE3B8(v13, (uint64_t)qword_254162F00);
    v14 = sub_231413768();
    v15 = sub_231414980();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = v17;
      *(_DWORD *)v16 = 136446210;
      v22[0] = ObjectType;
      swift_getMetatypeMetadata();
      v18 = sub_2314146E0();
      v22[0] = sub_23133180C(v18, v19, &v21);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v14, v15, "[%{public}s] No display type found for burden quantity type", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v17, -1, -1);
      MEMORY[0x2348DE308](v16, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_blueColor);
  }
}

void sub_2313EEF10()
{
  sub_2313EEB2C();
}

uint64_t sub_2313EEF30()
{
  return 0;
}

uint64_t sub_2313EEF3C(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_231423B70, a1);
  return sub_231412028();
}

uint64_t sub_2313EEF80()
{
  return sub_2312E21E8(261);
}

uint64_t sub_2313EEF8C(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_255ED1A28, a2, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsTileViewController, (uint64_t)&unk_231423B20);
}

uint64_t sub_2313EEFB8(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_255ED1A30, a2, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsTileViewController, (uint64_t)&unk_231423BB8);
}

uint64_t sub_2313EEFE4(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];
  _OWORD v27[4];

  sub_23130E4D4();
  type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(0);
  swift_allocObject();
  v4 = sub_2313618A8(v27);
  sub_2313EFA5C((uint64_t)v27);
  v5 = sub_2313EF288(a2);
  v7 = v6;
  swift_retain();
  sub_2314149F8();
  sub_2312CEA5C(v26, v26[3]);
  sub_23141183C();
  v8 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0));
  v8[qword_255ECE7F8] = a1;
  *(_QWORD *)&v8[qword_255ECE800] = a2;
  swift_retain();
  sub_231318848(a1);
  sub_2313EFABC();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231416A30;
  *(_QWORD *)(v9 + 32) = sub_2314118FC();
  v10 = (void *)sub_23141342C();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  swift_retain();
  v11 = sub_2312CDBD0(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v12 = v11[2];
  v13 = v11[3];
  v14 = v12 + 1;
  if (v12 >= v13 >> 1)
    v11 = sub_2312CDBD0((_QWORD *)(v13 > 1), v12 + 1, 1, v11);
  v11[2] = v14;
  v15 = MEMORY[0x24BE42890];
  v16 = &v11[2 * v12];
  v16[4] = v4;
  v16[5] = v15;
  if (v5)
  {
    v17 = v11[3];
    v18 = v12 + 2;
    swift_unknownObjectRetain();
    if (v14 >= v17 >> 1)
      v11 = sub_2312CDBD0((_QWORD *)(v17 > 1), v18, 1, v11);
    v11[2] = v18;
    v19 = &v11[2 * v14];
    v19[4] = v5;
    v19[5] = v7;
  }
  v20 = v11[2];
  v21 = v11[3];
  v22 = v10;
  if (v20 >= v21 >> 1)
    v11 = sub_2312CDBD0((_QWORD *)(v21 > 1), v20 + 1, 1, v11);
  v23 = sub_2312F23F0(&qword_255ED1A40, 255, type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource, MEMORY[0x24BE449E0]);
  v11[2] = v20 + 1;
  v24 = &v11[2 * v20];
  v24[4] = v22;
  v24[5] = v23;
  swift_release();

  sub_2314130CC();
  sub_231412B38();
  swift_allocObject();
  return sub_231412B44();
}

uint64_t sub_2313EF288(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[40];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = sub_231412BA4();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313EFB10();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231412DA8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(a1 + 24);
  v13 = sub_231411818();
  v14 = sub_23141180C();
  v24 = v13;
  v25 = MEMORY[0x24BE47240];
  v23 = v14;
  v15 = objc_msgSend(v12, sel_profileIdentifier);
  v16 = sub_23141231C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_231412508();

  sub_2312CEBD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2313EFB10);
  sub_2312DF850(a1 + 32, (uint64_t)v22);
  sub_231414A28();
  sub_231412D6C();
  v17 = *(unsigned __int8 *)(a1 + 16);
  if (v17 == 1)
  {
    sub_231411BF0();
    sub_231411BCC();
  }
  else
  {
    sub_231318848(v17);
  }
  sub_231412B8C();
  v18 = sub_231412B98();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v18;
}

unint64_t sub_2313EF4C0()
{
  unint64_t result;

  result = qword_255ED1A38;
  if (!qword_255ED1A38)
  {
    result = MEMORY[0x2348DE248](&unk_231423184, &type metadata for RelatedSampleTypesCacheObject);
    atomic_store(result, (unint64_t *)&qword_255ED1A38);
  }
  return result;
}

void sub_2313EF504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2420)
  {
    sub_2312DF79C(255, (unint64_t *)&qword_255ECC468);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2420);
  }
}

char *sub_2313EF568(uint64_t a1, void *a2, void *a3, char *a4)
{
  char *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  objc_super v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___textLabel] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___horizontalRule] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView____lazy_storage___contentView] = 0;
  v8 = &a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate];
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_contentViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = (uint64_t *)&a4[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  v10 = a4;
  v27 = sub_2312E21E8(261);
  v28 = v11;
  sub_231414728();
  v12 = v28;
  *v9 = v27;
  v9[1] = v12;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_cacheObject] = a1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_healthStore] = a2;
  *((_QWORD *)v8 + 1) = &off_25002A9F0;
  swift_unknownObjectWeakAssign();
  v13 = a2;

  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsTileView();
  v14 = objc_msgSendSuper2(&v26, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = sub_2313A02E8();
  objc_msgSend(v14, sel_addSubview_, v15);

  v16 = v14;
  v17 = sub_2313A04AC();
  objc_msgSend(v16, sel_addSubview_, v17);

  v18 = (char *)v16;
  v19 = sub_2313A0570();
  objc_msgSend(v18, sel_addSubview_, v19);

  sub_2313A072C();
  v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier];
  v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorsTileView_baseIdentifier + 8];
  sub_231412A90();
  v22 = (void *)sub_23141468C();
  objc_msgSend(v18, sel_setAccessibilityIdentifier_, v22);

  v23 = sub_2313A02E8();
  v27 = v21;
  v28 = v20;
  sub_231412A90();
  sub_231414728();
  v24 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v24);
  swift_bridgeObjectRelease();

  return v18;
}

void sub_2313EF7E4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  __int128 v20[2];
  _QWORD v21[3];
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v2 = v1;
  v4 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart39AFibBurdenLifeFactorsTileViewController_context;
  swift_beginAccess();
  sub_231310E3C(v4, (uint64_t)v23);
  v5 = v24;
  if (v24)
  {
    v6 = sub_2312CEA5C(v23, v24);
    v7 = *(_QWORD *)(v5 - 8);
    MEMORY[0x24BDAC7A8](v6);
    v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = sub_231412EE0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_231310E3C(v4, (uint64_t)v21);
    v11 = v22;
    if (v22)
    {
      v12 = sub_2312CEA5C(v21, v22);
      v13 = *(_QWORD *)(v11 - 8);
      MEMORY[0x24BDAC7A8](v12);
      v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      sub_231412EF8();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      type metadata accessor for AFibBurdenLifeFactorDetailViewModel();
      v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(_BYTE *)(v16 + 16) = a1;
      *(_QWORD *)(v16 + 24) = v10;
      sub_2312DFB68(v20, v16 + 32);
      swift_unknownObjectWeakAssign();
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
      sub_2313EEFE4(a1, v16);
      v17 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenLifeFactorDetailViewController());
      swift_retain();
      v18 = (void *)sub_231413348();
      swift_unknownObjectWeakAssign();
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v18);
      objc_msgSend(v2, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v19, 0, 1, 0);
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2313EFA5C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23130E320(v2);
  return a1;
}

void sub_2313EFABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE908)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE908);
  }
}

void sub_2313EFB10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF270)
  {
    sub_23141231C();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF270);
  }
}

uint64_t sub_2313EFB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  sub_2312D1E78(0, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v4[12] = swift_task_alloc();
  v5 = sub_231411608();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  sub_2312D1E78(0, &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v4[23] = swift_task_alloc();
  v6 = sub_231411248();
  v4[24] = v6;
  v4[25] = *(_QWORD *)(v6 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v7 = sub_231413648();
  v4[29] = v7;
  v4[30] = *(_QWORD *)(v7 - 8);
  v4[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2313EFCEC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 256) = sub_2314116F8();
  sub_23141363C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v1;
  *v1 = v0;
  v1[1] = sub_2313EFD58;
  return sub_231413630();
}

uint64_t sub_2313EFD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2313EFDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;

  v1 = *(_QWORD *)(v0 + 272);
  sub_2312D6D30();
  v2 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v3 = (void *)v2;
  if (*(_QWORD *)(v1 + 16) && (v4 = sub_231338924(v2), (v5 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 16))(*(_QWORD *)(v0 + 184), *(_QWORD *)(*(_QWORD *)(v0 + 272) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 200) + 72) * v4, *(_QWORD *)(v0 + 192));
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v6, 1, v7);
  swift_bridgeObjectRelease();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v10 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(void (**)(uint64_t))(v0 + 80);
    v16 = sub_2312F1A20(*(_QWORD *)(v0 + 184), &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v15(v16);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v17(v11, v10, v13);
    v89 = v17;
    v17(v12, v10, v13);
    sub_231411218();
    v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v10, v13);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 32))(v19, *(_QWORD *)(v0 + 184), v20);
    sub_231411230();
    sub_23141123C();
    v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v89(v23, v22, v24);
    sub_231411224();
    v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v26(v22, v24);
    v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v18 = v26;
    v27(v19, v20);
  }
  v28 = *(void **)(v0 + 256);
  v29 = *(_QWORD *)(v0 + 176);
  v90 = *(_QWORD *)(v0 + 144);
  v96 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 104);
  v31 = sub_2314116A4();
  sub_231411230();
  v32 = (void *)sub_2314115C0();
  v18(v29, v30);
  v33 = objc_msgSend(v28, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v31, v32, 0);

  sub_2314115D8();
  v34 = sub_2314116A4();
  sub_23141120C();
  v35 = (void *)sub_2314115C0();
  v94 = v18;
  v18(v29, v30);
  v36 = objc_msgSend(v28, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v34, v35, 1);

  sub_2314115D8();
  v37 = v89;
  v89(v96, v90, v30);
  if (sub_2314115E4() == -1)
  {
    v92 = *(_QWORD *)(v0 + 200);
    v46 = *(_QWORD *)(v0 + 112);
    v97 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v47 = *(void **)(v0 + 256);
      v37(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
      v48 = (void *)sub_2314115C0();
      v49 = objc_msgSend(v47, sel_dateByAddingUnit_value_toDate_options_, 0x2000, -26, v48, 0);

      if (!v49)
        break;
      v50 = *(_QWORD *)(v0 + 176);
      v52 = *(_QWORD *)(v0 + 96);
      v51 = *(_QWORD *)(v0 + 104);
      sub_2314115D8();

      v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
      v53(v52, v50, v51);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v52, 0, 1, v51);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v52, 1, v51) == 1)
        goto LABEL_21;
      v55 = *(_QWORD *)(v0 + 168);
      v54 = *(_QWORD *)(v0 + 176);
      v57 = *(_QWORD *)(v0 + 120);
      v56 = *(_QWORD *)(v0 + 128);
      v58 = v37;
      v59 = *(_QWORD *)(v0 + 104);
      v53(v57, *(_QWORD *)(v0 + 96), v59);
      v58(v54, v57, v59);
      v58(v55, v56, v59);
      sub_231411218();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v97 = sub_2312CDD08(0, *(_QWORD *)(v97 + 16) + 1, 1, v97);
      v61 = *(_QWORD *)(v97 + 16);
      v60 = *(_QWORD *)(v97 + 24);
      if (v61 >= v60 >> 1)
        v97 = sub_2312CDD08(v60 > 1, v61 + 1, 1, v97);
      v62 = *(_QWORD *)(v0 + 208);
      v63 = *(_QWORD *)(v0 + 192);
      v65 = *(_QWORD *)(v0 + 128);
      v64 = *(_QWORD *)(v0 + 136);
      v66 = *(_QWORD *)(v0 + 120);
      v67 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v97 + 16) = v61 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v92 + 32))(v97+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v61, v62, v63);
      v18 = v94;
      v94(v65, v67);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40))(v64, v66, v67);
      v37 = v58;
      if (sub_2314115E4() != -1)
        goto LABEL_10;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v46 + 56))(*(_QWORD *)(v0 + 96), 1, 1, *(_QWORD *)(v0 + 104));
LABEL_21:
    v68 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease();
    sub_2312F1A20(v68, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (qword_25415C170 != -1)
      swift_once();
    v69 = sub_231413780();
    sub_2312CE3B8(v69, (uint64_t)qword_254162F00);
    v70 = sub_231413768();
    v71 = sub_231414980();
    v72 = os_log_type_enabled(v70, v71);
    v73 = *(void **)(v0 + 256);
    if (v72)
    {
      v98 = *(void **)(v0 + 256);
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      v100 = v75;
      *(_DWORD *)v74 = 136446467;
      *(_QWORD *)(v0 + 40) = &type metadata for AFibBurdenPDFChartDateIntervalProvider;
      sub_2313F07B4();
      v76 = sub_2314146E0();
      *(_QWORD *)(v0 + 48) = sub_23133180C(v76, v77, &v100);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2085;
      swift_beginAccess();
      v78 = sub_2314115A8();
      *(_QWORD *)(v0 + 56) = sub_23133180C(v78, v79, &v100);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v70, v71, "[%{public}s] Hitting critical error while trying to add -26 weeks to: %{sensitive}s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v75, -1, -1);
      MEMORY[0x2348DE308](v74, -1, -1);

    }
    else
    {

    }
    v80 = *(_QWORD *)(v0 + 240);
    v99 = *(_QWORD *)(v0 + 248);
    v81 = *(_QWORD *)(v0 + 224);
    v93 = *(_QWORD *)(v0 + 232);
    v83 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 200);
    v85 = *(_QWORD *)(v0 + 144);
    v84 = *(_QWORD *)(v0 + 152);
    v86 = *(_QWORD *)(v0 + 136);
    v87 = *(_QWORD *)(v0 + 104);
    v94(*(_QWORD *)(v0 + 128), v87);
    v94(v85, v87);
    v94(v84, v87);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v99, v93);
    v94(v86, v87);
    v97 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v97 = MEMORY[0x24BEE4AF8];
LABEL_10:
    v38 = *(_QWORD *)(v0 + 248);
    v39 = *(_QWORD *)(v0 + 224);
    v91 = *(_QWORD *)(v0 + 240);
    v95 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 192);
    v40 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 136);
    v45 = *(_QWORD *)(v0 + 104);

    v18(v42, v45);
    v18(v43, v45);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v38, v95);
    v18(v44, v45);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v97);
}

uint64_t sub_2313F06A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2313F07B4()
{
  unint64_t result;

  result = qword_255ED1A50;
  if (!qword_255ED1A50)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED1A50);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for AFibBurdenPDFChartDateIntervalProvider(id *a1)
{

  return swift_release();
}

uint64_t assignWithCopy for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AFibBurdenPDFChartDateIntervalProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDateIntervalProvider()
{
  return &type metadata for AFibBurdenPDFChartDateIntervalProvider;
}

uint64_t sub_2313F0904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  sub_2313F216C(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus;
  swift_beginAccess();
  sub_2312D6C20(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2313F216C);
  sub_2312DC5EC(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1)
    return sub_2312EE5FC((uint64_t)v8, a1, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  sub_2312CEBD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2313F216C);
  sub_2313F0A84(v1, a1);
  sub_2312D6C20(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_2313F4DB4((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_2313F0A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_2312CEA5C((_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 48));
  sub_2314135E8();
  v3 = sub_23141357C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_2313F0CA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned __int8 v3;

  v1 = OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___showBridgeLink);
  if (v2 == 2)
  {
    v3 = sub_2313F0CE8();
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

id sub_2313F0CE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  id v10;
  uint64_t v12;

  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23141357C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313F0904((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_2312CEBD4((uint64_t)v2, (uint64_t (*)(_QWORD))sub_2312DC5EC);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v7 = (void *)sub_231413588();
  v8 = objc_msgSend(v7, sel_areAllRequirementsSatisfied);

  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  v9 = (void *)sub_231413588();
  v10 = objc_msgSend(v9, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

id sub_2313F0E54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = (void *)objc_opt_self();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = objc_msgSend(v1, sel_sharedInstanceForHealthStore_, v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = (void *)sub_2314148E4();
  v6 = objc_msgSend(v4, sel_displayTypeWithIdentifier_, v5);

  if (!v6)
  {

    return 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A7D8]), sel_initWithDisplayType_healthStore_shouldEmbedInScrollView_, v6, v2, 0);

  return v7;
}

uint64_t sub_2313F0F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - v4;
  v6 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  v7 = objc_msgSend(v6, sel_type);

  if (v7 == (id)1 && (sub_2313F0CA0() & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
    v8 = sub_231411374();
    v10 = v9;
    v11 = sub_2313F4B18();
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v11 & 0xFFFFFFFFFFFFLL;
    if (v13)
    {
      *a1 = v8;
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = v12;
      sub_2314114A0();
      v14 = sub_2314114AC();
      v15 = *(_QWORD *)(v14 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14);
      if ((_DWORD)result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_231301B4C();
        v18 = (char *)a1 + *(int *)(v17 + 64);
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v5, v14);
        v19 = *MEMORY[0x24BE3F8B8];
        v20 = sub_231411BFC();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
        v21 = *MEMORY[0x24BE3F8E8];
        v22 = sub_231411C08();
        v23 = *(_QWORD *)(v22 - 8);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 104))(a1, v21, v22);
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      *a1 = v8;
      a1[1] = v10;
      *((_BYTE *)a1 + 16) = 0;
      v25 = *MEMORY[0x24BE3F930];
      v26 = sub_231411C08();
      v27 = *(_QWORD *)(v26 - 8);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v27 + 104))(a1, v25, v26);
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
    }
  }
  else
  {
    v24 = sub_231411C08();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
  }
  return result;
}

void sub_2313F120C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(unint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(unint64_t, uint64_t, uint64_t);
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(unint64_t, uint64_t, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(unint64_t, uint64_t, uint64_t);
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void (*v89)(unint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *);
  char *v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v110;
  unsigned int v111;
  unint64_t v112;
  void (*v113)(unint64_t, uint64_t, uint64_t);
  char *v114;
  uint64_t v115;
  uint64_t v116;

  v1 = sub_231411C08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (void (*)(unint64_t, uint64_t, uint64_t))((char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v114 = (char *)&v101 - v6;
  sub_231301870(0);
  v105 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v115 = (uint64_t)&v101 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v101 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v16((char *)&v101 - v14, 1, 1, v1);
  v104 = v0;
  v17 = sub_2313F0E54();
  if (v17)
  {
    v18 = v17;
    sub_2312CEBD4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_231301870);
    *(_QWORD *)v15 = v18;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v15, *MEMORY[0x24BE3F898], v1);
    v16(v15, 0, 1, v1);
  }
  v106 = v15;
  sub_2312D6DD8(0, &qword_255ECBD18, (uint64_t (*)(uint64_t))sub_231301870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v116 = *(_QWORD *)(v8 + 72);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231423C70;
  if (qword_25415E610 != -1)
    swift_once();
  v21 = (id)qword_254163058;
  v22 = (void *)sub_23141468C();
  v23 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v22, v21);

  if (v23)
  {
    v103 = v20;
    v24 = v20 + v19;
    *(_QWORD *)v24 = v23;
    *(_BYTE *)(v24 + 8) = 0;
    v25 = *MEMORY[0x24BE3F908];
    v113 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 104);
    v113(v20 + v19, v25, v1);
    v26 = v20 + v19;
    v27 = v16;
    v16((char *)v26, 0, 1, v1);
    v28 = (uint64_t *)(v24 + v116);
    v112 = v24;
    v29 = v116;
    *v28 = sub_231411374();
    v28[1] = v30;
    v31 = (void (*)(unint64_t))v113;
    v113((unint64_t)v28, *MEMORY[0x24BE3F910], v1);
    v27((char *)v28, 0, 1, v1);
    v107 = 2 * v29;
    v32 = v24 + 2 * v29;
    v110 = 0xD000000000000013;
    *(_QWORD *)v32 = sub_231411374();
    *(_QWORD *)(v32 + 8) = v33;
    *(_BYTE *)(v32 + 16) = 0;
    v111 = *MEMORY[0x24BE3F930];
    v31(v32);
    v27((char *)v32, 0, 1, v1);
    v109 = v27;
    v34 = (uint64_t *)(v112 + v107 + v29);
    *v34 = sub_231411374();
    v34[1] = v35;
    v34[2] = 0;
    LODWORD(v107) = *MEMORY[0x24BE3F8D0];
    v31((unint64_t)v34);
    v27((char *)v34, 0, 1, v1);
    v36 = 4 * v29;
    v37 = v112;
    v38 = v112 + 4 * v29;
    *(_QWORD *)v38 = sub_231411374();
    *(_QWORD *)(v38 + 8) = v39;
    *(_BYTE *)(v38 + 16) = 0;
    v40 = v37 + 4 * v29;
    v41 = v111;
    v113(v40, v111, v1);
    v109((char *)v38, 0, 1, v1);
    v42 = v37 + v36 + v116;
    v108 = 0x8000000231432D70;
    *(_QWORD *)v42 = sub_231411374();
    *(_QWORD *)(v42 + 8) = v43;
    *(_BYTE *)(v42 + 16) = 0;
    v44 = v113;
    v113(v42, v41, v1);
    v45 = v109;
    v109((char *)v42, 0, 1, v1);
    v46 = v116;
    v47 = (uint64_t *)(v37 + 6 * v116);
    *v47 = sub_231411374();
    v47[1] = v48;
    v47[2] = 0;
    v49 = v107;
    v44(v37 + 6 * v46, v107, v1);
    v45((char *)(v37 + 6 * v46), 0, 1, v1);
    v50 = v46;
    v46 *= 8;
    sub_2312D6C20((uint64_t)v106, v37 + v46 - v50, (uint64_t (*)(_QWORD))sub_231301870);
    v51 = (uint64_t *)(v37 + v46);
    *v51 = sub_231411374();
    v51[1] = v52;
    v51[2] = 0;
    v53 = v49;
    v54 = v113;
    v113(v37 + v46, v53, v1);
    v109((char *)(v37 + v46), 0, 1, v1);
    v55 = v37 + v46 + v50;
    *(_QWORD *)v55 = sub_231411374();
    *(_QWORD *)(v55 + 8) = v56;
    *(_BYTE *)(v55 + 16) = 0;
    v57 = v111;
    v54(v55, v111, v1);
    v58 = v109;
    v109((char *)v55, 0, 1, v1);
    v59 = v37 + 10 * v116;
    *(_QWORD *)v59 = sub_231411374();
    *(_QWORD *)(v59 + 8) = v60;
    *(_BYTE *)(v59 + 16) = 0;
    v54(v59, v57, v1);
    v58((char *)v59, 0, 1, v1);
    v61 = v116;
    v62 = (uint64_t *)(v37 + 11 * v116);
    *v62 = sub_231411374();
    v62[1] = v63;
    v62[2] = 0;
    v54(v37 + 11 * v61, v107, v1);
    v58((char *)(v37 + 11 * v61), 0, 1, v1);
    v64 = (uint64_t *)(v37 + 12 * v61);
    v65 = sub_231411374();
    v101 = v66;
    v102 = v65;
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_23141A310;
    *(_QWORD *)(v67 + 32) = sub_231411374();
    *(_QWORD *)(v67 + 40) = v68;
    *(_QWORD *)(v67 + 48) = sub_231411374();
    *(_QWORD *)(v67 + 56) = v69;
    *(_QWORD *)(v67 + 64) = sub_231411374();
    *(_QWORD *)(v67 + 72) = v70;
    v71 = v101;
    *v64 = v102;
    v64[1] = v71;
    v64[2] = v67;
    v72 = v113;
    v113((unint64_t)v64, *MEMORY[0x24BE3F8F0], v1);
    v73 = v109;
    v109((char *)v64, 0, 1, v1);
    v74 = v116;
    v75 = v112;
    sub_2313F0F18((uint64_t *)(v112 + 13 * v116));
    v76 = (uint64_t *)(v75 + 14 * v74);
    *v76 = sub_231411374();
    v76[1] = v77;
    v76[2] = 0;
    v72((unint64_t)v76, v107, v1);
    v78 = (void (*)(unint64_t, _QWORD, uint64_t, uint64_t))v73;
    v73((char *)v76, 0, 1, v1);
    v79 = 16 * v74;
    v80 = v75 + 15 * v74;
    *(_QWORD *)v80 = sub_231411374();
    *(_QWORD *)(v80 + 8) = v81;
    *(_BYTE *)(v80 + 16) = 0;
    v82 = v113;
    v113(v80, v111, v1);
    v73((char *)v80, 0, 1, v1);
    v83 = (uint64_t *)(v75 + v79);
    *v83 = sub_231411374();
    v83[1] = v84;
    v83[2] = 0;
    v82(v75 + v79, v107, v1);
    v73((char *)(v75 + v79), 0, 1, v1);
    v85 = v116;
    v86 = v112;
    v87 = v112 + v79 + v116;
    *(_QWORD *)v87 = sub_231411374();
    *(_QWORD *)(v87 + 8) = v88;
    *(_BYTE *)(v87 + 16) = 0;
    v89 = v113;
    v113(v87, v111, v1);
    v78(v87, 0, 1, v1);
    v90 = v86 + 18 * v85;
    *(_QWORD *)v90 = sub_231411374();
    *(_QWORD *)(v90 + 8) = v91;
    *(_BYTE *)(v90 + 16) = 0;
    v89(v90, v111, v1);
    v78(v90, 0, 1, v1);
    v92 = MEMORY[0x24BEE4AF8];
    v93 = 19;
    v94 = v86;
    v113 = v5;
    do
    {
      v95 = v115;
      sub_2312D6C20(v94, v115, (uint64_t (*)(_QWORD))sub_231301870);
      sub_2312EE5FC(v95, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_231301870);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1) == 1)
      {
        sub_2312CEBD4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_231301870);
      }
      else
      {
        v96 = *(void (**)(char *))(v2 + 32);
        v97 = v114;
        v96(v114);
        ((void (*)(_QWORD, char *, uint64_t))v96)(v5, v97, v1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v92 = sub_2312CDA6C(0, *(_QWORD *)(v92 + 16) + 1, 1, v92);
        v99 = *(_QWORD *)(v92 + 16);
        v98 = *(_QWORD *)(v92 + 24);
        if (v99 >= v98 >> 1)
          v92 = sub_2312CDA6C(v98 > 1, v99 + 1, 1, v92);
        *(_QWORD *)(v92 + 16) = v99 + 1;
        v100 = v92
             + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
             + *(_QWORD *)(v2 + 72) * v99;
        v5 = v113;
        ((void (*)(unint64_t, _QWORD, uint64_t))v96)(v100, v113, v1);
      }
      v94 += v116;
      --v93;
    }
    while (v93);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_2312CEBD4((uint64_t)v106, (uint64_t (*)(_QWORD))sub_231301870);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2313F2054()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  sub_2312CEBD4(v0 + OBJC_IVAR____TtC5Heart35LowCardioFitnessArticleDataProvider____lazy_storage___featureStatus, (uint64_t (*)(_QWORD))sub_2313F216C);
  return swift_deallocClassInstance();
}

uint64_t sub_2313F209C()
{
  return type metadata accessor for LowCardioFitnessArticleDataProvider();
}

uint64_t type metadata accessor for LowCardioFitnessArticleDataProvider()
{
  uint64_t result;

  result = qword_25415BFF0;
  if (!qword_25415BFF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2313F20E0()
{
  unint64_t v0;

  sub_2313F216C(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2313F216C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415BFB0, (uint64_t (*)(uint64_t))sub_2312DC5EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2313F2188()
{
  sub_2313F120C();
}

unint64_t sub_2313F21A8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_2313F21C4()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2313F2254()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2313F22EC()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

void sub_2313F2380()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (!v2)
    __break(1u);
}

uint64_t sub_2313F243C(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_2314146BC();
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  v7 = sub_231415148();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_2313F363C((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_2314146BC();
  v12 = v11;
  if (v10 == sub_2314146BC() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_2314146BC();
        v19 = v18;
        if (v17 == sub_2314146BC() && v19 == v20)
          goto LABEL_16;
        v22 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_2313F2664(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  v8 = sub_231415148();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_231415070() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_231412A90();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_231415070() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  sub_231412A90();
  sub_2313F3868(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2313F2810(_QWORD *a1, void *a2)
{
  return sub_2313F2834(a1, a2, (unint64_t *)&qword_25415DEB0, 0x24BDD3F08, &qword_25415DF18, (unint64_t *)&qword_25415DEB8);
}

uint64_t sub_2313F2834(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  unint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v11 = v6;
  v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *v6;
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    sub_231412A90();
    v16 = a2;
    v17 = sub_231414D88();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_2312D3C68(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      sub_2314130CC();
      return 0;
    }
    result = sub_231414D7C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_2313F2B1C(v15, result + 1, a5, a3, a4, a6);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v35 = a5;
      v36 = v30 + 1;
      v37 = v16;
      sub_2313F3324(v36, v35, a3, a4, a6);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v16;
    }
    sub_2313F35BC((uint64_t)v16, v31);
    *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    sub_231412A90();
    v19 = sub_231414BFC();
    v20 = -1 << *(_BYTE *)(v14 + 32);
    v21 = v19 & ~v20;
    v40 = a4;
    if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_2312D3C68(0, a3);
      v22 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
      v23 = sub_231414C08();

      if ((v23 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v27 = *(void **)(*(_QWORD *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
        v26 = sub_231414C08();

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v6;
    *v6 = 0x8000000000000000;
    v34 = a2;
    sub_2313F3A00((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_2313F2B1C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_2312FDBA4(0, a3, a4, a5, a6);
    v10 = sub_231414DF4();
    v23 = v10;
    sub_231414D4C();
    if (sub_231414DA0())
    {
      sub_2312D3C68(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_2313F3324(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_231414BFC();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_231414DA0());
    }
    swift_release();
  }
  else
  {
    sub_2314130CC();
    return MEMORY[0x24BEE4B08];
  }
  return v10;
}

uint64_t sub_2313F2D40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  sub_2313F4E40();
  v3 = sub_231414DE8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_2314146BC();
      sub_231415118();
      sub_231414710();
      v18 = sub_231415148();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2313F304C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_2312FDCEC();
  v3 = sub_231414DE8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_231415118();
      sub_231414710();
      result = sub_231415148();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2313F3324(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_2312FDBA4(0, a2, a3, a4, a5);
  v8 = sub_231414DE8();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_231414BFC();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

unint64_t sub_2313F35BC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_231414BFC();
  result = sub_231414D34();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_2313F363C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_2313F2D40();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_2313F3BB4();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_2313F40B8();
  }
  v9 = *v3;
  sub_2314146BC();
  sub_231415118();
  sub_231414710();
  v10 = sub_231415148();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_2314146BC();
  v14 = v13;
  if (v12 == sub_2314146BC() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_231415070();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_2314146BC();
      v21 = v20;
      if (v19 == sub_2314146BC() && v21 == v22)
        goto LABEL_25;
      v24 = sub_231415070();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  result = sub_2314150A0();
  __break(1u);
  return result;
}

uint64_t sub_2313F3868(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2313F304C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2313F3D58();
      goto LABEL_22;
    }
    sub_2313F4390();
  }
  v11 = *v4;
  sub_231415118();
  sub_231414710();
  result = sub_231415148();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_231415070(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2314150A0();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_231415070();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_2313F3A00(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2313F3324(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_2313F3F04(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_2313F4638(v13, a4, a5, a6, a7);
  }
  v14 = *v7;
  v15 = sub_231414BFC();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_2312D3C68(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_231414C08();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_2314150A0();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_231414C08();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

id sub_2313F3BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_2313F4E40();
  v2 = *v0;
  v3 = sub_231414DDC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2313F3D58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_2312FDCEC();
  v2 = *v0;
  v3 = sub_231414DDC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)sub_231412A90();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2313F3F04(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_2312FDBA4(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_231414DDC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2313F40B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_2313F4E40();
  v3 = sub_231414DE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_2314146BC();
    sub_231415118();
    v18 = v17;
    sub_231414710();
    v19 = sub_231415148();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2313F4390()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_2312FDCEC();
  v3 = sub_231414DE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_231415118();
    sub_231412A90();
    sub_231414710();
    result = sub_231415148();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2313F4638(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_2312FDBA4(0, a2, a3, a4, a5);
  v8 = sub_231414DE8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_231414BFC();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2313F48AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  sub_2313F4DF8();
  result = sub_2314148A8();
  v7 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_2313F243C(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2313F4934(unint64_t a1)
{
  return sub_2313F497C(a1, (unint64_t *)&qword_25415DE98, 0x24BDD3DC0, (unint64_t *)&unk_25415DEA0, (unint64_t *)&qword_25415E450);
}

uint64_t sub_2313F4958(unint64_t a1)
{
  return sub_2313F497C(a1, (unint64_t *)&qword_25415DEC8, 0x24BDD3E80, &qword_255ED1A58, &qword_255ED1A60);
}

uint64_t sub_2313F497C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_231412A90();
    sub_231414F08();
    swift_bridgeObjectRelease();
  }
  sub_2312D3C68(0, a2);
  sub_2312FDC2C(a4, a2);
  result = sub_2314148A8();
  v18 = result;
  if (v10)
  {
    sub_231412A90();
    v12 = sub_231414F08();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = (void *)MEMORY[0x2348DD81C](i, a1);
        sub_2313F2834(&v17, v14, a2, a3, a5, a4);

      }
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15++;
        sub_2313F2834(&v17, v16, a2, a3, a5, a4);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2313F4B18()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_2314146BC();

    if (qword_25415E610 != -1)
      swift_once();
    v3 = sub_231411374();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    if (qword_25415E610 != -1)
      swift_once();
    return sub_231411374();
  }
}

uint64_t sub_2313F4C98()
{
  unint64_t inited;
  uint64_t v1;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2314186B0;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35B8]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 48) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2978]);
  sub_2314147B8();
  v1 = sub_2313F497C(inited, (unint64_t *)&qword_25415DE98, 0x24BDD3DC0, (unint64_t *)&unk_25415DEA0, (unint64_t *)&qword_25415E450);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2313F4DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313F216C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2313F4DF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECAE68;
  if (!qword_255ECAE68)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    result = MEMORY[0x2348DE248](&unk_231417B18, v1);
    atomic_store(result, (unint64_t *)&qword_255ECAE68);
  }
  return result;
}

void sub_2313F4E40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1A68)
  {
    type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(255);
    sub_2313F4DF8();
    v0 = sub_231414E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1A68);
  }
}

void sub_2313F4EA0()
{
  qword_255ED1A70 = 0x402C000000000000;
}

id sub_2313F4EB0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 17.0, *MEMORY[0x24BEBB610]);
  qword_255ED1A78 = (uint64_t)result;
  return result;
}

id sub_2313F4EF8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  qword_255ED1A80 = (uint64_t)result;
  return result;
}

id sub_2313F4F30()
{
  if (qword_255ECA9A8 != -1)
    swift_once();
  qword_255ED1A88 = qword_255ED2BE0;
  return (id)qword_255ED2BE0;
}

id sub_2313F4F78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView);
  }
  else
  {
    v4 = sub_2313F4FD4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2313F4FD4()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend(v0, sel_layer);
  if (qword_255ECAAB0 != -1)
    swift_once();
  objc_msgSend(v1, sel_setCornerRadius_, *(double *)&qword_255ED1A70);

  v2 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v2);

  v3 = (void *)objc_opt_self();
  sub_2312D3AD4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231418140;
  v5 = objc_msgSend(v0, sel_heightAnchor);
  v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_255ED1A70 + *(double *)&qword_255ED1A70);

  *(_QWORD *)(v4 + 32) = v6;
  v7 = objc_msgSend(v0, sel_widthAnchor);
  v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, *(double *)&qword_255ED1A70 + *(double *)&qword_255ED1A70);

  *(_QWORD *)(v4 + 40) = v8;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
  v9 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v9);

  return v0;
}

id sub_2313F51E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel);
  }
  else
  {
    v4 = sub_2313F5240();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2313F5240()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;

  if (qword_255ECAAC8 != -1)
    swift_once();
  sub_23132B144();
  if (qword_255ECAAC0 != -1)
    swift_once();
  v0 = qword_255ECAAB8;
  v1 = (id)qword_255ED1A80;
  if (v0 != -1)
    swift_once();
  v2 = (void *)qword_255ED1A78;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_init);
  objc_msgSend(v5, sel_setTextColor_, v1);
  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v6);

  objc_msgSend(v5, sel_setFont_, v4);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v5;
}

id sub_2313F53C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView_title + 8))
    {
      sub_231412A90();
      v5 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, sel_setText_, v5);

    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_2313F54F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_231412A90();
    v5 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v5);

    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_2313F561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  objc_super v13;

  v8 = &v5[OBJC_IVAR____TtC5Heart16NumberedTextView_title];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberBubbleView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___numberLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Heart16NumberedTextView_number] = a1;
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v9 = v5;
  swift_bridgeObjectRelease();
  v10 = &v9[OBJC_IVAR____TtC5Heart16NumberedTextView_details];
  *(_QWORD *)v10 = a4;
  *((_QWORD *)v10 + 1) = a5;

  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for NumberedTextView();
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2313F57A8();

  return v11;
}

uint64_t sub_2313F57A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v70;

  v1 = v0;
  swift_getObjectType();
  sub_2312D3AD4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_231419E70;
  *(_QWORD *)(v2 + 32) = sub_2313F4F78();
  *(_QWORD *)(v2 + 40) = sub_2313F51E0();
  *(_QWORD *)(v2 + 48) = sub_2313F53C4();
  *(_QWORD *)(v2 + 56) = sub_2313F54F8();
  sub_2314147B8();
  sub_231414BA8();
  swift_bridgeObjectRelease();
  v70 = (id)objc_opt_self();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23141B9A0;
  v4 = sub_2313F4F78();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v1, sel_leadingAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 12.0);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = sub_2313F4F78();
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v1, sel_topAnchor);
  v11 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToAnchor_, v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = sub_2313F51E0();
  v13 = objc_msgSend(v12, sel_centerYAnchor);

  v14 = sub_2313F4F78();
  v15 = objc_msgSend(v14, sel_centerYAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v3 + 48) = v16;
  v17 = sub_2313F51E0();
  v18 = objc_msgSend(v17, sel_centerXAnchor);

  v19 = sub_2313F4F78();
  v20 = objc_msgSend(v19, sel_centerXAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(_QWORD *)(v3 + 56) = v21;
  v22 = sub_2313F51E0();
  v23 = objc_msgSend(v22, sel_firstBaselineAnchor);

  v24 = sub_2313F53C4();
  v25 = objc_msgSend(v24, sel_firstBaselineAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(_QWORD *)(v3 + 64) = v26;
  v27 = sub_2313F53C4();
  v28 = objc_msgSend(v27, sel_topAnchor);

  v29 = objc_msgSend(v1, sel_topAnchor);
  v30 = objc_msgSend(v28, sel_constraintGreaterThanOrEqualToAnchor_, v29);

  *(_QWORD *)(v3 + 72) = v30;
  v31 = sub_2313F53C4();
  v32 = objc_msgSend(v31, sel_leadingAnchor);

  v33 = sub_2313F4F78();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 6.0);
  *(_QWORD *)(v3 + 80) = v35;
  v36 = sub_2313F53C4();
  v37 = objc_msgSend(v36, sel_trailingAnchor);

  v38 = objc_msgSend(v1, sel_trailingAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, -12.0);

  *(_QWORD *)(v3 + 88) = v39;
  v40 = sub_2313F54F8();
  v41 = objc_msgSend(v40, sel_topAnchor);

  v42 = sub_2313F53C4();
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 4.0);
  *(_QWORD *)(v3 + 96) = v44;
  v45 = sub_2313F54F8();
  v46 = objc_msgSend(v45, sel_leadingAnchor);

  v47 = sub_2313F53C4();
  v48 = objc_msgSend(v47, sel_leadingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(_QWORD *)(v3 + 104) = v49;
  v50 = sub_2313F54F8();
  v51 = objc_msgSend(v50, sel_trailingAnchor);

  v52 = sub_2313F53C4();
  v53 = objc_msgSend(v52, sel_trailingAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(_QWORD *)(v3 + 112) = v54;
  v55 = sub_2313F54F8();
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v57 = objc_msgSend(v1, sel_bottomAnchor);
  v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);

  *(_QWORD *)(v3 + 120) = v58;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
  v59 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v70, sel_activateConstraints_, v59);

  v60 = sub_2313F53C4();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v61 = (void *)sub_231414B9C();
  objc_msgSend(v60, sel_setFont_, v61);

  v62 = sub_2313F54F8();
  v63 = (void *)sub_231414B9C();
  objc_msgSend(v62, sel_setFont_, v63);

  sub_2312DB584();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_231418090;
  v65 = sub_231413960();
  v66 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v64 + 32) = v65;
  *(_QWORD *)(v64 + 40) = v66;
  v67 = sub_2314137F8();
  v68 = MEMORY[0x24BEBC318];
  *(_QWORD *)(v64 + 48) = v67;
  *(_QWORD *)(v64 + 56) = v68;
  sub_231414BC0();
  sub_2314130CC();
  return swift_bridgeObjectRelease();
}

id sub_2313F5F90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NumberedTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NumberedTextView()
{
  return objc_opt_self();
}

void sub_2313F6064()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  v0 = sub_2313F53C4();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v1 = (void *)sub_231414B9C();
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = sub_2313F54F8();
  v3 = (id)sub_231414B9C();
  objc_msgSend(v2, sel_setFont_, v3);

}

uint64_t type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource()
{
  uint64_t result;

  result = qword_255ED1AF0;
  if (!qword_255ED1AF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313F61A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313F61DC(void *a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;

  sub_231411BF0();
  v4 = (void *)sub_231411BCC();
  sub_2312D3AD4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231417F90;
  sub_2313F67B8();
  swift_getKeyPath();
  *(_QWORD *)(v5 + 32) = sub_2314149E0();
  sub_2314147B8();
  v6 = v4;
  v7 = (void *)sub_231411BD8();

  v8 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  sub_2312CEA5C(a2, a2[3]);
  v9 = v7;
  v10 = (void *)sub_23141183C();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB688]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v9, v10, 0, 0);

  v11 = sub_231413120();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a2);
  return v11;
}

uint64_t sub_2313F638C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_relevantStartDate);
  if (v3)
  {
    v4 = v3;
    sub_2314115D8();

    v5 = sub_231411608();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_231411608();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2313F6410(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3870(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_231411608();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_2314115C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setRelevantStartDate_, v10);

}

uint64_t sub_2313F64E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  v2 = sub_231413930();
  MEMORY[0x24BDAC7A8](v2);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231413900();
  v3 = sub_231412160();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42248];
  swift_allocObject();
  v5 = sub_231412154();
  a1[3] = v3;
  result = sub_2312CCC24(&qword_255ECEA40, v4, MEMORY[0x24BE42230]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

void sub_2313F6644()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_2313F6670()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313F66A4()
{
  return type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource();
}

uint64_t sub_2313F66AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2313F64E8(a1);
}

uint64_t sub_2313F66C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2314125EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314125BC();
  v4 = sub_231412580();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2313F6740()
{
  MEMORY[0x2348DE248](&unk_231423E10);
  return sub_231413414();
}

uint64_t sub_2313F678C()
{
  return sub_2312CCC24((unint64_t *)&unk_255ED1B40, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorsPlatterDataSource, (uint64_t)&unk_231423DE0);
}

unint64_t sub_2313F67B8()
{
  unint64_t result;

  result = qword_255ECE920;
  if (!qword_255ECE920)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECE920);
  }
  return result;
}

char *sub_2313F67F4()
{
  return sel_relevantStartDate;
}

uint64_t *LocalizationSource.cardioFitness.unsafeMutableAddressor()
{
  if (qword_255ECAAE0 != -1)
    swift_once();
  return &static LocalizationSource.cardioFitness;
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;
  uint64_t v12;

  result = sub_231411374();
  if (*(_QWORD *)(a11 + 16))
  {
    v12 = sub_2314146C8();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t *LocalizationSource.aFibBurden.unsafeMutableAddressor()
{
  if (qword_255ECAAD8 != -1)
    swift_once();
  return &static LocalizationSource.aFibBurden;
}

uint64_t *LocalizationSource.seahorse.unsafeMutableAddressor()
{
  if (qword_255ECAB08 != -1)
    swift_once();
  return &static LocalizationSource.seahorse;
}

uint64_t *LocalizationSource.electrocardiogramRecording.unsafeMutableAddressor()
{
  if (qword_255ECAAF0 != -1)
    swift_once();
  return &static LocalizationSource.electrocardiogramRecording;
}

uint64_t sub_2313F699C(void *a1, uint64_t a2)
{
  double v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t result;

  if (a1)
  {
    objc_msgSend(a1, sel_doubleValue);
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a2);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend((id)objc_opt_self(), sel_quantityTypeForIdentifier_, *MEMORY[0x24BDD35B8]);
      v8 = objc_msgSend(v6, sel_displayTypeForObjectType_, v7);

      if (v8)
      {
        v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A910]), sel_initWithHealthStore_, a2);
        v10 = objc_msgSend((id)objc_opt_self(), sel__quantityWithBeatsPerMinute_, v4);
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A640]), sel_initWithQuantity_, v10);
        v12 = objc_msgSend(v11, sel_stringWithDisplayType_unitController_, v8, v9);
        if (v12)
        {
          v13 = v12;
          v14 = sub_2314146BC();

          return v14;
        }
      }
      else
      {

      }
    }
  }
  result = sub_231414EE4();
  __break(1u);
  return result;
}

id sub_2313F6BC4()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_254163058 = (uint64_t)result;
  return result;
}

id sub_2313F6C18()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.aFibBurden = qword_254163058;
  unk_255ED2FA0 = 0xD000000000000016;
  qword_255ED2FA8 = 0x80000002314285D0;
  return (id)qword_254163058;
}

uint64_t static LocalizationSource.aFibBurden.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAAD8 != -1)
    swift_once();
  v0 = static LocalizationSource.aFibBurden;
  v1 = (id)static LocalizationSource.aFibBurden;
  sub_231412A90();
  return v0;
}

id sub_2313F6CF0()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.cardioFitness = qword_254163058;
  *(_QWORD *)algn_255ED2FB8 = 0xD000000000000019;
  qword_255ED2FC0 = 0x80000002314256D0;
  return (id)qword_254163058;
}

uint64_t static LocalizationSource.cardioFitness.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAAE0 != -1)
    swift_once();
  v0 = static LocalizationSource.cardioFitness;
  v1 = (id)static LocalizationSource.cardioFitness;
  sub_231412A90();
  return v0;
}

id sub_2313F6DC8()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.cardioFitnessDict = qword_254163058;
  unk_255ED2FD0 = 0xD00000000000001DLL;
  qword_255ED2FD8 = 0x80000002314330B0;
  return (id)qword_254163058;
}

uint64_t *LocalizationSource.cardioFitnessDict.unsafeMutableAddressor()
{
  if (qword_255ECAAE8 != -1)
    swift_once();
  return &static LocalizationSource.cardioFitnessDict;
}

uint64_t static LocalizationSource.cardioFitnessDict.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAAE8 != -1)
    swift_once();
  v0 = static LocalizationSource.cardioFitnessDict;
  v1 = (id)static LocalizationSource.cardioFitnessDict;
  sub_231412A90();
  return v0;
}

id sub_2313F6EE0()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.electrocardiogramRecording = qword_254163058;
  *(_QWORD *)algn_255ED2FE8 = 0xD000000000000026;
  qword_255ED2FF0 = 0x80000002314330D0;
  return (id)qword_254163058;
}

uint64_t static LocalizationSource.electrocardiogramRecording.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAAF0 != -1)
    swift_once();
  v0 = static LocalizationSource.electrocardiogramRecording;
  v1 = (id)static LocalizationSource.electrocardiogramRecording;
  sub_231412A90();
  return v0;
}

id sub_2313F6FB8()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.heart = qword_254163058;
  unk_255ED3000 = 0x617A696C61636F4CLL;
  qword_255ED3008 = 0xEB00000000656C62;
  return (id)qword_254163058;
}

uint64_t *LocalizationSource.heart.unsafeMutableAddressor()
{
  if (qword_255ECAAF8 != -1)
    swift_once();
  return &static LocalizationSource.heart;
}

uint64_t static LocalizationSource.heart.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAAF8 != -1)
    swift_once();
  v0 = static LocalizationSource.heart;
  v1 = (id)static LocalizationSource.heart;
  sub_231412A90();
  return v0;
}

id sub_2313F70D4()
{
  if (qword_25415E610 != -1)
    swift_once();
  qword_255ED3010 = qword_254163058;
  *(_QWORD *)algn_255ED3018 = 0xD000000000000028;
  qword_255ED3020 = 0x8000000231433080;
  return (id)qword_254163058;
}

id sub_2313F713C()
{
  if (qword_25415E610 != -1)
    swift_once();
  static LocalizationSource.seahorse = qword_254163058;
  unk_255ED3030 = 0xD000000000000014;
  qword_255ED3038 = 0x8000000231433100;
  return (id)qword_254163058;
}

uint64_t static LocalizationSource.seahorse.getter()
{
  uint64_t v0;
  id v1;

  if (qword_255ECAB08 != -1)
    swift_once();
  v0 = static LocalizationSource.seahorse;
  v1 = (id)static LocalizationSource.seahorse;
  sub_231412A90();
  return v0;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;
  uint64_t v12;

  result = sub_231411374();
  if (*(_QWORD *)(a11 + 16))
  {
    v12 = sub_2314146C8();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

uint64_t sub_2313F72B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2312D6C20(a1, a2, (uint64_t (*)(_QWORD))sub_2312DC5EC);
}

uint64_t sub_2313F72E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for AFibBurdenOnboardingFlowManager.State() + 20));
  return swift_unknownObjectRetain();
}

uint64_t sub_2313F7330(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[2];

  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    v15[1] = 0;
    v14 = a2;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_2313F744C(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ED1EC0, (uint64_t (*)(uint64_t))sub_2312D3C14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2314146EC();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F7548(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_2312DC3FC();
  v3 = v2;
  v21 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FA948(0, (unint64_t *)&qword_25415D070, sub_2312DC5D0, (void (*)(void))sub_2313FA00C);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  sub_2312DC4C4();
  v12 = v11;
  v20 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312DC5D0(0);
  sub_2313FA00C();
  sub_231413E04();
  sub_23141357C();
  sub_2313FA028((unint64_t *)&unk_25415D060, (unint64_t *)&qword_25415D070, sub_2312DC5D0, (void (*)(void))sub_2313FA00C);
  sub_231413E88();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v15 = a1;
  v16 = sub_231413624();

  v22 = v16;
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_2312CCC24(&qword_25415CDE0, (uint64_t (*)(uint64_t))sub_2312DC4C4, MEMORY[0x24BDB94C8]);
  sub_231413F48();
  swift_release();
  sub_2312CCC24((unint64_t *)&unk_25415CE00, (uint64_t (*)(uint64_t))sub_2312DC3FC, MEMORY[0x24BDB9530]);
  v17 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v12);
  return v17;
}

uint64_t sub_2313F7810()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  ((void (*)(void))v0[3])();
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_231413F90();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2313F7914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t result;
  _QWORD v16[8];

  sub_2312D4A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  v16[5] = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v12 = *(_QWORD *)(Strong + 104);
    swift_retain();
    swift_release();
    v13 = v12 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v12 + 16);
    v14 = (os_unfair_lock_s *)(v12 + ((*(unsigned int *)(*(_QWORD *)v12 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v14);
    sub_2313F7B7C(v13, a1);
    os_unfair_lock_unlock(v14);
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2313F7AE8()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F7B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_2313FA404(a1);
  v4 = sub_23141357C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_2313F7BF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *v0;
  sub_2313FA948(0, &qword_255ED1EE8, (void (*)(uint64_t))sub_2313FA9AC, (void (*)(void))sub_2313FAA28);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  sub_2313FA9AC();
  swift_allocObject();
  sub_231413DF8();
  sub_2313FAA28();
  swift_retain();
  sub_231413E04();
  sub_2313FA028(&qword_255ED1F08, &qword_255ED1EE8, (void (*)(uint64_t))sub_2313FA9AC, (void (*)(void))sub_2313FAA28);
  v9 = sub_231413E7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_2313F7D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD aBlock[6];

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    v10 = *(void **)(Strong + 48);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = sub_2313FA5B8;
    v11[3] = v7;
    v11[4] = v9;
    v11[5] = a4;
    aBlock[4] = sub_2313FAA9C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2313F853C;
    aBlock[3] = &unk_25002AF90;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_fetchMobileCountryCodeFromCellularWithCompletion_, v12);
    _Block_release(v12);
    swift_release();
    return sub_2314130CC();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

void sub_2313F7EC8(uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2312D4A68();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v16 = *(void **)(a5 + 16);
    v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_ISOCode);
    if (!v17)
    {
      sub_2314146BC();
      v38 = v13;
      v17 = (id)sub_23141468C();
      v13 = v38;
      swift_bridgeObjectRelease();
    }
    v40[0] = 0;
    v18 = objc_msgSend(v16, sel_onboardingEligibilityForCountryCode_error_, v17, v40);

    if (v18)
    {
      v19 = *(_QWORD *)(a5 + 104);
      v20 = v19 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v19 + 16);
      v21 = (os_unfair_lock_s *)(v19 + ((*(unsigned int *)(*(_QWORD *)v19 + 48) + 3) & 0x1FFFFFFFCLL));
      v22 = v40[0];
      swift_retain();
      os_unfair_lock_lock(v21);
      v23 = *(int *)(type metadata accessor for AFibBurdenOnboardingFlowManager.State() + 20);
      swift_unknownObjectRetain();
      sub_2314130CC();
      *(_QWORD *)(v20 + v23) = a1;
      os_unfair_lock_unlock(v21);
      swift_release();
      v24 = v18;
      a3(v18, 0);

      sub_2314130CC();
      return;
    }
    v31 = v40[0];
    v32 = (void *)sub_231411410();

    swift_willThrow();
    if (qword_25415B6D8 != -1)
      swift_once();
    v33 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v33, v12);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v32;
    *(_QWORD *)(v34 + 24) = a6;
    v40[0] = 0;
    v35 = v32;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v36 = v32;
    a3(v32, 1);
    sub_2314130CC();

    v30 = v32;
  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v25 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v25, v12);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    *(_QWORD *)(v26 + 24) = a6;
    v40[0] = 0;
    v27 = a2;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v28 = a2;
    if (!a2)
    {
      type metadata accessor for HKError(0);
      v39 = 3;
      sub_2313FA2D4(MEMORY[0x24BEE4AF8]);
      sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
      sub_2314113EC();
      v28 = v40[0];
    }
    v29 = a2;
    a3(v28, 1);
    v30 = v28;
  }

}

uint64_t sub_2313F82E8(uint64_t a1)
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  if (a1)
  {
    swift_getErrorValue();
    sub_2314150D0();
    sub_2314146E0();
  }
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F8428()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  swift_getErrorValue();
  sub_2314150D0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F853C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return sub_2314130CC();
}

uint64_t sub_2313F85A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  unsigned __int8 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t (*v56)(void);
  char *v57;
  uint64_t v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = v0;
  v73 = *v0;
  sub_23135E7C8(0, (unint64_t *)&qword_25415DDD8, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDB9DE0]);
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v60 - v3;
  sub_23138D060(0, &qword_25415DF80, MEMORY[0x24BDBA1B0]);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v60 - v6;
  sub_23138D060(0, &qword_255ED1E80, MEMORY[0x24BDB9DA0]);
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)&v60 - v9;
  sub_2313FA1B8();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23135E7C8(0, (unint64_t *)&qword_255ECACA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BE45B58]);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v60 - v13;
  sub_2312D4A68();
  v15 = v14;
  v75 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v74 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1[13];
  v21 = (_QWORD *)MEMORY[0x24BEE27A8];
  v22 = v20 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v20 + 16);
  v23 = (os_unfair_lock_s *)(v20 + ((*(unsigned int *)(*(_QWORD *)v20 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v23);
  v24 = type metadata accessor for AFibBurdenOnboardingFlowManager.State();
  LOBYTE(v22) = *(_BYTE *)(v22 + *(int *)(v24 + 24));
  os_unfair_lock_unlock(v23);
  swift_release();
  if ((v22 & 1) != 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v25 = sub_2312CE3B8(v15, (uint64_t)qword_254162EE8);
    v26 = v74;
    v27 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v25, v15);
    *(_QWORD *)(swift_allocObject() + 16) = v73;
    v77 = 0;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v15);
    LOBYTE(v77) = 1;
    sub_231413DD4();
    sub_2312D3C14();
    v28 = v70;
    sub_231413DBC();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v4, v28);
    sub_2313FA250((unint64_t *)&qword_25415DF70, &qword_25415DF80, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v29 = v72;
    v30 = sub_231413E7C();
    v31 = v71;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v29);
    return v30;
  }
  v32 = v1[13];
  v33 = v32 + *(_QWORD *)(*v21 + *(_QWORD *)v32 + 16);
  v34 = (os_unfair_lock_s *)(v32 + ((*(unsigned int *)(*(_QWORD *)v32 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v34);
  v35 = *(_QWORD *)(v33 + *(int *)(v24 + 20));
  swift_unknownObjectRetain();
  os_unfair_lock_unlock(v34);
  swift_release();
  if (!v35)
  {
    v45 = v74;
    v46 = v75;
    if (qword_25415B6D8 != -1)
      swift_once();
    v47 = sub_2312CE3B8(v15, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v47, v15);
    *(_QWORD *)(swift_allocObject() + 16) = v73;
    v77 = 0;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v15);
    type metadata accessor for HKError(0);
    v76 = 3;
    sub_2313FA2D4(MEMORY[0x24BEE4AF8]);
    sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
    sub_2314113EC();
    v76 = v77;
    sub_2312D3C14();
    v7 = v63;
    sub_231413DB0();
    sub_2313FA250((unint64_t *)&unk_255ED1EA0, &qword_255ED1E80, MEMORY[0x24BDB9DA0], MEMORY[0x24BDB9DB0]);
    v29 = v65;
    v30 = sub_231413E7C();
    v31 = v64;
    goto LABEL_11;
  }
  v36 = v1[13];
  v37 = v36 + *(_QWORD *)(*v21 + *(_QWORD *)v36 + 16);
  v38 = (os_unfair_lock_s *)(v36 + ((*(unsigned int *)(*(_QWORD *)v36 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v38);
  sub_2312D6C20(v37, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  os_unfair_lock_unlock(v38);
  swift_release();
  v39 = sub_23141357C();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v39);
  v43 = v74;
  v42 = v75;
  if (v41 == 1)
  {
    sub_2313FA404((uint64_t)v19);
    v44 = v73;
  }
  else
  {
    v48 = (void *)sub_231413588();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v39);
    v49 = objc_msgSend(v48, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D38]);

    v44 = v73;
    if ((v49 & 1) == 0)
    {
      if (qword_25415B6D8 != -1)
        swift_once();
      v50 = sub_2312CE3B8(v15, (uint64_t)qword_254162EE8);
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v50, v15);
      *(_QWORD *)(swift_allocObject() + 16) = v44;
      v77 = 0;
      sub_231413594();
      swift_release();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v15);
      swift_getObjectType();
      v51 = v60;
      sub_231414A40();
      *(_QWORD *)(swift_allocObject() + 16) = v44;
      sub_231414B84();
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v51, v62);
    }
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v52 = sub_2312CE3B8(v15, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v52, v15);
  *(_QWORD *)(swift_allocObject() + 16) = v44;
  v77 = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v15);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v53 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2312CEA5C(v1 + 7, v1[10]);
  sub_231411B24();
  v54 = swift_allocObject();
  swift_weakInit();
  v55 = (_QWORD *)swift_allocObject();
  v55[2] = v54;
  v55[3] = v35;
  v55[4] = v44;
  v56 = MEMORY[0x24BDB9E38];
  sub_23138D060(0, &qword_255ED1E90, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_231413DF8();
  sub_2313FA250(&qword_255ED1E98, &qword_255ED1E90, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))v56, MEMORY[0x24BDB9E58]);
  swift_retain();
  v57 = v66;
  sub_231413E04();
  sub_2312CCC24((unint64_t *)&unk_255ED1EB0, (uint64_t (*)(uint64_t))sub_2313FA1B8, MEMORY[0x24BDB9E90]);
  v58 = v68;
  v30 = sub_231413E7C();
  sub_2314130CC();
  swift_release();

  (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v58);
  return v30;
}

void sub_2313F8F70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  _QWORD aBlock[6];

  sub_2312D4A68();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v16 = Strong;
    v17 = qword_25415B6D8;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = sub_2312CE3B8(v10, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
    *(_QWORD *)(swift_allocObject() + 16) = a5;
    aBlock[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_2312D6DD8(0, &qword_255ECCF70, (uint64_t (*)(uint64_t))sub_231327314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_231416A30;
    *(_QWORD *)(inited + 32) = sub_2314146BC();
    *(_QWORD *)(inited + 40) = v20;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 48) = 1;
    sub_231336D90(inited);
    v21 = objc_allocWithZone(MEMORY[0x24BDD3BE8]);
    v22 = (void *)sub_23141462C();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_initWithDictionary_, v22);

    v24 = *(void **)(v16 + 16);
    swift_unknownObjectRetain();
    v25 = objc_msgSend(a4, sel_ISOCode);
    if (!v25)
    {
      sub_2314146BC();
      v25 = (id)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    v26 = objc_msgSend(a4, sel_provenance);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a4;
    v27[3] = sub_2313FA5B8;
    v27[4] = v14;
    v27[5] = v16;
    v27[6] = a5;
    aBlock[4] = sub_2313FA634;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_231330294;
    aBlock[3] = &unk_25002AEA0;
    v28 = _Block_copy(aBlock);
    v29 = v23;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v25, v26, 0, v29, v28);
    _Block_release(v28);
    swift_release();
    sub_2314130CC();

  }
  else
  {
    swift_retain();
    swift_release();
  }
}

uint64_t sub_2313F92F0()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_2313F93B4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;

  sub_2312D4A68();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v17 = a2;
    if (qword_25415B6D8 != -1)
      swift_once();
    v18 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a3;
    v19[3] = a2;
    v19[4] = a7;
    v28 = 0;
    swift_unknownObjectRetain();
    v20 = a2;
    sub_2314135AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v21 = a2;
    a4(a2, 1);

  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v22 = sub_2312CE3B8(v13, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22, v13);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a3;
    *(_QWORD *)(v23 + 24) = a7;
    v28 = 0;
    swift_unknownObjectRetain();
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v24 = *(_QWORD *)(a6 + 104);
    v25 = v24 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v24 + 16);
    v26 = (os_unfair_lock_s *)(v24 + ((*(unsigned int *)(*(_QWORD *)v24 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v26);
    *(_BYTE *)(v25 + *(int *)(type metadata accessor for AFibBurdenOnboardingFlowManager.State() + 24)) = 1;
    os_unfair_lock_unlock(v26);
    swift_release();
    a4((void *)1, 0);
  }
}

uint64_t sub_2313F9644()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_2313FA6E4();
  sub_231414ECC();
  sub_231414728();
  swift_getErrorValue();
  sub_2314150D0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F97A4()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_2313FA6E4();
  sub_231414ECC();
  sub_231414728();
  return 0;
}

uint64_t sub_2313F98B4()
{
  uint64_t v0;

  sub_2314130CC();
  swift_release();
  sub_2314130CC();
  sub_2314130CC();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingFlowManager()
{
  return objc_opt_self();
}

uint64_t *sub_2313F9928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23141357C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2312DC5EC(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_2313F9A18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23141357C();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return sub_2314130CC();
}

char *sub_2313F9A80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23141357C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2312DC5EC(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  swift_unknownObjectRetain();
  return a1;
}

char *sub_2313F9B44(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23141357C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2312DC5EC(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_unknownObjectRetain();
  sub_2314130CC();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2313F9C64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23141357C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2312DC5EC(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  a1[v9] = a2[v9];
  return a1;
}

char *sub_2313F9D24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23141357C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2312DC5EC(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  sub_2314130CC();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2313F9E3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313F9E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  sub_2312DC5EC(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2313F9ED0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2313F9EDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_2312DC5EC(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
}

uint64_t type metadata accessor for AFibBurdenOnboardingFlowManager.State()
{
  uint64_t result;

  result = qword_255ED1DE0;
  if (!qword_255ED1DE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2313F9F90()
{
  unint64_t v0;

  sub_2312DC5EC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2313FA00C()
{
  return sub_2312CCC24(&qword_25415D030, (uint64_t (*)(uint64_t))sub_2312DC5D0, MEMORY[0x24BDB9DF8]);
}

uint64_t sub_2313FA028(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2313FA948(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9E90], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2313FA068()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313FA08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = MEMORY[0x2348DE3BC](a1 + 16);
  if (v5)
  {
    v6 = (void *)v5;
    sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
    sub_231413618();

    v8 = sub_23141357C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    v7 = sub_23141357C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  }
  return sub_231413DD4();
}

void sub_2313FA1B8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ED1E88)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_23138D060(255, &qword_255ED1E90, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2313FA250(&qword_255ED1E98, &qword_255ED1E90, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    v1 = sub_231413E10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ED1E88);
  }
}

uint64_t sub_2313FA250(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23138D060(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2313FA290()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA2A0()
{
  return sub_2313F92F0();
}

unint64_t sub_2313FA2D4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2313FA738();
  v2 = sub_231414F44();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2312D6C20(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_231327314);
    v7 = v15;
    v8 = v16;
    result = sub_2313FA7A0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_231304744(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2313FA404(uint64_t a1)
{
  uint64_t v2;

  sub_2312DC5EC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2313FA440()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA450()
{
  return sub_2313F92F0();
}

uint64_t sub_2313FA484()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2313FA4A8()
{
  return sub_2313FA69C((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

void sub_2313FA4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2313F8F70(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_2313FA4C8()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA4D8()
{
  return sub_2313F92F0();
}

uint64_t sub_2313FA50C()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA51C(char a1, void *a2)
{
  uint64_t v2;

  return sub_2313F7330(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_2313FA524()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA534()
{
  return sub_2313F92F0();
}

uint64_t sub_2313FA568()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2313FA58C()
{
  uint64_t v0;

  return sub_2313F744C(*(void **)(v0 + 16));
}

uint64_t sub_2313FA594()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313FA5BC()
{
  return swift_deallocObject();
}

uint64_t sub_2313FA5CC()
{
  return sub_2313F92F0();
}

uint64_t sub_2313FA600()
{
  sub_2314130CC();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2313FA634(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2313F93B4(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_2313FA644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313FA654()
{
  return swift_release();
}

uint64_t sub_2313FA65C()
{
  sub_2314130CC();
  return swift_deallocObject();
}

uint64_t sub_2313FA680()
{
  return sub_2313F97A4();
}

uint64_t sub_2313FA688()
{
  return sub_2313FA69C((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_2313FA69C(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

uint64_t sub_2313FA6D8()
{
  return sub_2313F9644();
}

unint64_t sub_2313FA6E4()
{
  unint64_t result;

  result = qword_255ED1ED8;
  if (!qword_255ED1ED8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED1ED8);
  }
  return result;
}

void sub_2313FA738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1EE0)
  {
    v0 = sub_231414F50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1EE0);
  }
}

unint64_t sub_2313FA7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231415118();
  sub_231414710();
  v4 = sub_231415148();
  return sub_2313FA804(a1, a2, v4);
}

unint64_t sub_2313FA804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_231415070() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_231415070() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_231415070() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_2313FA948(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_231413E10();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2313FA9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED1EF0)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_255ECBCF8);
    sub_2312D3C14();
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED1EF0);
  }
}

uint64_t sub_2313FAA28()
{
  return sub_2312CCC24(&qword_255ED1F00, (uint64_t (*)(uint64_t))sub_2313FA9AC, MEMORY[0x24BDB9E58]);
}

uint64_t sub_2313FAA44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313FAA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2313F7D74(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2313FAA70()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2313FAA9C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2313F7EC8(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_2313FAAA8()
{
  uint64_t v0;

  return sub_2313F82E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2313FAAB0()
{
  return sub_2313F8428();
}

uint64_t sub_2313FAAB8(uint64_t a1)
{
  uint64_t v1;

  return sub_2313F7914(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2313FAAC0()
{
  return swift_deallocObject();
}

uint64_t sub_2313FAAD0()
{
  return sub_2313F7AE8();
}

uint64_t *sub_2313FAAF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231411248();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = a3[7];
    v11 = a3[8];
    v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    sub_231412A90();
    v15 = v9;
    v16 = v12;
  }
  return a1;
}

void sub_2313FABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

}

uint64_t sub_2313FAC10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[7];
  v10 = a3[8];
  v11 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  sub_231412A90();
  v14 = v8;
  v15 = v11;
  return a1;
}

uint64_t sub_2313FACA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[7];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *v17;
  *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
  *(_OWORD *)v16 = v18;
  return a1;
}

uint64_t sub_2313FAD5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  return a1;
}

uint64_t sub_2313FADE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[7];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  return a1;
}

uint64_t sub_2313FAE8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313FAE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_231411248();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2313FAF14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313FAF20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231411248();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartViewModel()
{
  uint64_t result;

  result = qword_255ED1F68;
  if (!qword_255ED1F68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313FAFD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411248();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartViewModel.DataRange(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartViewModel.DataRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartViewModel.DataRange()
{
  return &type metadata for AFibBurdenPDFChartViewModel.DataRange;
}

uint64_t sub_2313FB10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + *(int *)(v2 + 28)), sel_displayCategory);
  v6 = objc_msgSend(v5, sel_color);

  if (v6)
    JUMPOUT(0x2348DCDA8);
  if (qword_25415C170 != -1)
    swift_once();
  v7 = sub_231413780();
  sub_2312CE3B8(v7, (uint64_t)qword_254162F00);
  sub_2312D6C20(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  v8 = sub_231413768();
  v9 = sub_231414980();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = objc_msgSend(*(id *)&v4[*(int *)(v1 + 28)], sel_description);
    v13 = sub_2314146BC();
    v15 = v14;

    v17 = sub_23133180C(v13, v15, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312CEBD4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
    _os_log_impl(&dword_2312C8000, v8, v9, "%s doesn't have a displayCategory color", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    MEMORY[0x2348DE308](v10, -1, -1);
  }
  else
  {
    sub_2312CEBD4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  }

  return sub_2314143B0();
}

uint64_t sub_2313FB388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  _BYTE v42[12];
  int v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[9];

  v6 = sub_231411248();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t (*)())&v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for AFibBurdenPDFChartPoint();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v16 = &v42[-v15];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v6 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v18 = *(double *)(v6 + *(int *)(v10 + 20));
    a3 = *(_QWORD *)(v14 + 72);
    v45 = a1;
    sub_231412A90();
    LOBYTE(a2) = 0;
    v9 = type metadata accessor for AFibBurdenPDFChartPoint;
    v7 = -1;
    v19 = v18;
    do
    {
      sub_2312D6C20(v6, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      v20 = *(int *)(v10 + 20);
      v21 = *(double *)&v16[v20];
      if (v18 <= v21)
        v18 = *(double *)&v16[v20];
      if (v21 < v19)
        v19 = *(double *)&v16[v20];
      sub_2312D6C20((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      if ((a2 & 1) != 0)
      {
        a2 = 1;
      }
      else
      {
        v22 = *(_QWORD *)&v13[*(int *)(v10 + 24)];
        if (*(_QWORD *)(v22 + 16))
        {
          sub_231415118();
          sub_231415124();
          v23 = sub_231415148() & ~(-1 << *(_BYTE *)(v22 + 32));
          a2 = (*(_QWORD *)(v22 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v23) & 1;
        }
        else
        {
          a2 = 0;
        }
      }
      sub_2312CEBD4((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      sub_2312CEBD4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      v6 += a3;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    if (v19 <= v18)
      return a2;
    __break(1u);
    goto LABEL_21;
  }
  if (qword_25415C170 != -1)
LABEL_21:
    swift_once();
  v25 = sub_231413780();
  sub_2312CE3B8(v25, (uint64_t)qword_254162F00);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v26 = (id)a2;
  v27 = sub_231413768();
  v28 = sub_23141498C();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v47[0] = v45;
    *(_DWORD *)v30 = 136446723;
    v44 = v27;
    v46 = type metadata accessor for AFibBurdenPDFChartViewModel();
    sub_2313FB828();
    v43 = v29;
    v31 = sub_2314146E0();
    v46 = sub_23133180C(v31, v32, v47);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2085;
    v33 = objc_msgSend(v26, sel_localization);
    v34 = objc_msgSend(v33, sel_displayName);

    v35 = sub_2314146BC();
    v37 = v36;

    v46 = sub_23133180C(v35, v37, v47);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2085;
    sub_2313FB860();
    v38 = sub_231415040();
    v46 = sub_23133180C(v38, v39, v47);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t (*)(), uint64_t))(v7 + 8))(v9, v6);
    v40 = v44;
    _os_log_impl(&dword_2312C8000, v44, (os_log_type_t)v43, "[%{public}s] No data for display type %{sensitive}s in PDF page for %{sensitive}s", (uint8_t *)v30, 0x20u);
    v41 = v45;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v41, -1, -1);
    MEMORY[0x2348DE308](v30, -1, -1);

  }
  else
  {

    (*(void (**)(uint64_t (*)(), uint64_t))(v7 + 8))(v9, v6);
  }
  return 2;
}

unint64_t sub_2313FB828()
{
  unint64_t result;

  result = qword_255ED1FB0;
  if (!qword_255ED1FB0)
  {
    type metadata accessor for AFibBurdenPDFChartViewModel();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED1FB0);
  }
  return result;
}

unint64_t sub_2313FB860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECCF98;
  if (!qword_255ECCF98)
  {
    v1 = sub_231411248();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDCB8B8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECCF98);
  }
  return result;
}

_QWORD *sub_2313FB8A8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char v24;
  void *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void (*v39)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a3[6];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_231411248();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
    v12 = v11[6];
    v13 = *(void **)(v9 + v12);
    *(_QWORD *)(v8 + v12) = v13;
    v14 = v11[7];
    v15 = *(void **)(v9 + v14);
    *(_QWORD *)(v8 + v14) = v15;
    v16 = v11[8];
    v17 = v8 + v16;
    v18 = v9 + v16;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)v4 + v19;
    v22 = (uint64_t)a2 + v19;
    v23 = *(void **)v22;
    v24 = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v24;
    v25 = *(void **)(v22 + 16);
    *((_QWORD *)v21 + 2) = v25;
    v26 = (char *)v4 + v20;
    v27 = (uint64_t)a2 + v20;
    v28 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v28;
    v29 = v28;
    v39 = **(void (***)(char *, uint64_t, uint64_t))(v28 - 8);
    sub_231412A90();
    v30 = v13;
    v31 = v15;
    v32 = v23;
    v33 = v25;
    v39(v26, v27, v29);
    v34 = a3[9];
    v35 = *(void **)((char *)a2 + v34);
    *(_QWORD *)((char *)v4 + v34) = v35;
    v36 = v35;
  }
  return v4;
}

void sub_2313FBA38(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;

  v4 = a1 + a2[6];
  v5 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

  v7 = (id *)(a1 + a2[7]);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + a2[8]);

}

uint64_t sub_2313FBAE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void (*v37)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  v11 = v10[6];
  v12 = *(void **)(v8 + v11);
  *(_QWORD *)(v7 + v11) = v12;
  v13 = v10[7];
  v14 = *(void **)(v8 + v13);
  *(_QWORD *)(v7 + v13) = v14;
  v15 = v10[8];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(void **)v21;
  v23 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v23;
  v24 = *(void **)(v21 + 16);
  *(_QWORD *)(v20 + 16) = v24;
  v25 = a1 + v19;
  v26 = a2 + v19;
  v27 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v27;
  v28 = v27;
  v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  sub_231412A90();
  v29 = v12;
  v30 = v14;
  v31 = v22;
  v32 = v24;
  v37(v25, v26, v28);
  v33 = a3[9];
  v34 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  v35 = v34;
  return a1;
}

uint64_t sub_2313FBC44(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v9 + v12[5]) = *(_QWORD *)(v10 + v12[5]);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v13 = v12[6];
  v14 = *(void **)(v10 + v13);
  v15 = *(void **)(v9 + v13);
  *(_QWORD *)(v9 + v13) = v14;
  v16 = v14;

  v17 = v12[7];
  v18 = *(void **)(v10 + v17);
  v19 = *(void **)(v9 + v17);
  *(_QWORD *)(v9 + v17) = v18;
  v20 = v18;

  v21 = v12[8];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = *(_QWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = v24;
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = (uint64_t)a2 + v25;
  v28 = *(void **)((char *)a2 + v25);
  LOBYTE(v22) = *(_BYTE *)(v27 + 8);
  v29 = *(void **)v26;
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v22;
  v30 = v28;

  v31 = *(void **)(v27 + 16);
  v32 = *(void **)(v26 + 16);
  *(_QWORD *)(v26 + 16) = v31;
  v33 = v31;

  sub_2312DB81C((uint64_t *)(a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  v34 = a3[9];
  v35 = *(void **)((char *)a2 + v34);
  v36 = *(void **)(a1 + v34);
  *(_QWORD *)(a1 + v34) = v35;
  v37 = v35;

  return a1;
}

uint64_t sub_2313FBDA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  v11 = v10[8];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a1 + v15;
  v19 = a2 + v15;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_2313FBEB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  v11 = v10[6];
  v12 = *(void **)(v7 + v11);
  *(_QWORD *)(v7 + v11) = *(_QWORD *)(v8 + v11);

  v13 = v10[7];
  v14 = *(void **)(v7 + v13);
  *(_QWORD *)(v7 + v13) = *(_QWORD *)(v8 + v13);

  v15 = v10[8];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  LOBYTE(v16) = *(_BYTE *)(a2 + v18 + 8);
  v21 = *(void **)(a1 + v18);
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_BYTE *)(v19 + 8) = v16;

  v22 = *(void **)(v19 + 16);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);

  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  return a1;
}

uint64_t sub_2313FC008()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313FC014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2313FC098()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313FC0A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFAFibChart()
{
  uint64_t result;

  result = qword_255ED2010;
  if (!qword_255ED2010)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313FC160()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2313FC1F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313FC22C(a1, (uint64_t (*)(_QWORD))sub_2313FFBF8, (uint64_t (*)(_QWORD))sub_2312ECFB0, (void (*)(void))sub_2312ED374, a2);
}

uint64_t sub_2313FC210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313FC22C(a1, (uint64_t (*)(_QWORD))sub_2313FFB0C, (uint64_t (*)(_QWORD))sub_23136B494, (void (*)(void))sub_23136BB24, a2);
}

uint64_t sub_2313FC22C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, _QWORD, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v25 = a5;
  v8 = a2(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - v9;
  v11 = a3(0);
  a4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 16))(v10, *a1, v11);
  sub_2312ED1B4(0);
  v14 = v13;
  sub_2312EE1E4(255, &qword_255ECB7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8288], MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
  sub_231413B7C();
  v15 = &v10[*(int *)(v8 + 48)];
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 16);
  v17(v15, a1[1], v14);
  v18 = &v10[*(int *)(v8 + 64)];
  v17(v18, a1[2], v14);
  v19 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v25, v10, v11);
  v20 = v19 + *(int *)(v8 + 48);
  v21 = v19;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v22(v20, v15, v14);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(v21 + *(int *)(v8 + 64), v18, v14);
}

uint64_t sub_2313FC394()
{
  return sub_2314140F8();
}

uint64_t sub_2313FC3B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_231414068();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_231414104();
}

uint64_t sub_2313FC430@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t result;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t OpaqueTypeConformance2;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  __int128 v107;
  uint64_t KeyPath;
  id v109;
  id v110;
  unsigned int *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t **v157;
  char *v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161[5];
  __int128 v162;
  __int128 v163;
  __int128 v164;

  v126 = a6;
  v134 = a5;
  v151 = a7;
  v150 = sub_231414068();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v148 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v141 = (char *)&v119 - v13;
  sub_2313FE8DC(0);
  v129 = v14;
  v128 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v127 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FF1B4(0);
  v132 = v16;
  v131 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v130 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FF264(0);
  v137 = v18;
  v135 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v133 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FF354(0);
  v140 = v20;
  v139 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v138 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FF4A0(0);
  v144 = v22;
  v143 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v142 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ED2120, v24, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v136 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v146 = (char *)&v119 - v26;
  sub_2313FE970(0);
  v147 = v27;
  v145 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v154 = (uint64_t)&v119 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDA34();
  v124 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v121 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v123 = (char *)&v119 - v32;
  v33 = sub_231411608();
  v120 = *(_QWORD *)(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v119 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v152 = (char *)&v119 - v37;
  sub_2312ED508(0);
  v125 = v38;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v122 = (char *)&v119 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v153 = (uint64_t)&v119 - v41;
  v42 = sub_231411248();
  v43 = *(_QWORD *)(v42 - 8);
  v155 = v42;
  v156 = v43;
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v119 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_231413A68();
  MEMORY[0x24BDAC7A8](v46);
  v47 = sub_2314139F0();
  MEMORY[0x24BDAC7A8](v47);
  v48 = sub_231413A20();
  MEMORY[0x24BDAC7A8](v48);
  v49 = *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 32);
  v157 = (uint64_t **)a1;
  v158 = v45;
  if (*(_BYTE *)(a1 + v49) == 2)
    sub_2313E4A5C(a2, a3, (uint64_t)a4);
  v50 = sub_2313E4ED0(2, a2, a3, a4);
  if (v50)
  {
    v51 = a4;
    v52 = v50;
    sub_2313E5DF0(v50);
    v54 = v53;
    sub_2313FF7C0(0);
    *((_QWORD *)&v163 + 1) = v55;
    *(_QWORD *)&v164 = sub_2312CCC24((unint64_t *)&qword_255ECB8A0, (uint64_t (*)(uint64_t))sub_2313FF7C0, MEMORY[0x24BDB82F0]);
    v119 = sub_2312DFCA0((uint64_t *)&v162);
    *(_QWORD *)&v160 = v54;
    sub_2312EE3F4();
    sub_2314139FC();
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = a2;
    *(_BYTE *)(v56 + 24) = a3;
    *(_QWORD *)(v56 + 32) = v51;
    *(_QWORD *)(v56 + 40) = v52;
    v57 = a2;
    v58 = v51;
    sub_231412A90();
    sub_2314139E4();
    sub_231413A5C();
    sub_2312EDDD0();
    sub_2312EE268();
    sub_231413B88();
    sub_2312DFB68(&v162, (uint64_t)v161);
    sub_2313E6120(v52);
    v60 = v59;
    v62 = v61;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2314139E4();
    sub_231413A5C();
    sub_231413A14();
    sub_2313FF614(0);
    v161[3] = v63;
    v161[4] = sub_2312CCC24((unint64_t *)&qword_255ECB838, (uint64_t (*)(uint64_t))sub_2313FF614, MEMORY[0x24BDB82F0]);
    sub_2312DFCA0(v161);
    sub_2312EDA98();
    sub_2312EDB08();
    sub_231413B94();
    v60 = 0;
    v62 = 0;
  }
  *(_QWORD *)&v160 = v60;
  *((_QWORD *)&v160 + 1) = v62;
  (*(void (**)(char *, uint64_t **, uint64_t))(v156 + 16))(v158, v157, v155);
  v64 = v152;
  sub_231411230();
  sub_23141120C();
  sub_2312CCC24(&qword_255ECB7D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  result = sub_231414674();
  if ((result & 1) != 0)
  {
    v66 = v124;
    v67 = v121;
    v68 = v120;
    v69 = v123;
    v70 = &v123[*(int *)(v124 + 48)];
    v71 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
    v71(v123, v64, v33);
    v71(v70, v36, v33);
    v72 = &v67[*(int *)(v66 + 48)];
    v73 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    v73(v67, v69, v33);
    v73(v72, v70, v33);
    v74 = (uint64_t)v122;
    v71(v122, v67, v33);
    v75 = *(void (**)(char *, uint64_t))(v68 + 8);
    v75(v72, v33);
    v76 = &v67[*(int *)(v66 + 48)];
    v71(v67, v69, v33);
    v71(v76, v70, v33);
    v77 = v125;
    v71((char *)(v74 + *(int *)(v125 + 36)), v76, v33);
    v75(v67, v33);
    sub_2312EE5FC(v74, v153, (uint64_t (*)(_QWORD))sub_2312ED508);
    v78 = v154;
    v79 = sub_2313FD20C((uint64_t)v157, v126, v154);
    v157 = &v119;
    MEMORY[0x24BDAC7A8](v79);
    v80 = (uint64_t *)v158;
    *(&v119 - 2) = (uint64_t *)v78;
    *(&v119 - 1) = v80;
    sub_2313FE900();
    sub_2313FEF74();
    v81 = v127;
    sub_231413AE0();
    v82 = sub_231413BD0();
    v152 = *(char **)(*(_QWORD *)(v82 - 8) + 56);
    v83 = (uint64_t)v141;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v152)(v141, 1, 1, v82);
    v84 = sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    v85 = sub_2312ED5B0();
    v86 = v130;
    v87 = v129;
    sub_231414314();
    sub_23136C180(v83);
    v88 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v81, v87);
    MEMORY[0x24BDAC7A8](v88);
    *(&v119 - 2) = v134;
    *(_QWORD *)&v162 = v87;
    *((_QWORD *)&v162 + 1) = v77;
    *(_QWORD *)&v163 = v84;
    *((_QWORD *)&v163 + 1) = v85;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v90 = MEMORY[0x24BDB7DC8];
    v91 = MEMORY[0x24BDB7DB8];
    v92 = v133;
    v93 = v132;
    sub_2314142FC();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v86, v93);
    v159 = v160;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v152)(v83, 1, 1, v82);
    sub_2312EE6B4(0, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v95 = v94;
    *(_QWORD *)&v162 = v93;
    *((_QWORD *)&v162 + 1) = v90;
    *(_QWORD *)&v163 = OpaqueTypeConformance2;
    *((_QWORD *)&v163 + 1) = v91;
    v96 = swift_getOpaqueTypeConformance2();
    v97 = sub_2312ED84C();
    v98 = v138;
    v99 = v137;
    sub_231414320();
    sub_23136C180(v83);
    v100 = (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v92, v99);
    MEMORY[0x24BDAC7A8](v100);
    *(&v119 - 2) = (uint64_t *)&v160;
    *(_QWORD *)&v162 = v99;
    *((_QWORD *)&v162 + 1) = v95;
    *(_QWORD *)&v163 = v96;
    *((_QWORD *)&v163 + 1) = v97;
    swift_getOpaqueTypeConformance2();
    v101 = v142;
    v102 = v140;
    sub_231414308();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v98, v102);
    sub_2314144C4();
    sub_231413FFC();
    v103 = v143;
    v104 = (uint64_t)v146;
    v105 = v144;
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v146, v101, v144);
    v106 = (_OWORD *)(v104 + *(int *)(v136 + 36));
    v107 = v163;
    *v106 = v162;
    v106[1] = v107;
    v106[2] = v164;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v105);
    KeyPath = swift_getKeyPath();
    v109 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v110 = objc_msgSend(v109, sel_userInterfaceLayoutDirection);

    v111 = (unsigned int *)MEMORY[0x24BDED118];
    v112 = v149;
    if (v110 != (id)1)
      v111 = (unsigned int *)MEMORY[0x24BDED100];
    v113 = v148;
    v114 = v150;
    (*(void (**)(char *, _QWORD, uint64_t))(v149 + 104))(v148, *v111, v150);
    sub_2313FF664();
    v116 = v151;
    v117 = (uint64_t *)(v151 + *(int *)(v115 + 36));
    sub_2312D6DD8(0, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))((char *)v117 + *(int *)(v118 + 28), v113, v114);
    *v117 = KeyPath;
    sub_2313FF700(v104, v116);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
    sub_2313FF764(v104);
    sub_2312CEBD4(v153, (uint64_t (*)(_QWORD))sub_2312ED508);
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v154, v147);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v158, v155);
    return sub_2312EDD9C((uint64_t)&v160);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313FD20C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v35[2] = a3;
  v5 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  type metadata accessor for AFibBurdenPDFAFibAnnotationFormatter();
  v9 = swift_allocObject();
  sub_2312D6C20((uint64_t)v8, v9 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_viewModel, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_unitController) = a2;
  v10 = *(void **)&v8[v5[7]];
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_displayType) = v10;
  v11 = *(void **)&v8[v5[6]];
  v12 = a2;
  v13 = v10;
  v14 = v11;
  sub_2312CEBD4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_unit) = v14;
  v40 = *(_QWORD *)(a1 + v5[5]);
  sub_2312D6C20(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  sub_2312EE5FC((uint64_t)v8, v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  *(_QWORD *)(v16 + ((v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  sub_2312D6DD8(0, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v35[1] = v17;
  v35[0] = sub_231411248();
  sub_2313FE984(0);
  sub_2312ED154();
  sub_2313FEAC4(255);
  v19 = v18;
  sub_2313FEDB8();
  v21 = v20;
  sub_2313FEBC0(255);
  v23 = v22;
  sub_2313FEC98(255);
  v25 = v24;
  sub_2313FED44(255);
  v27 = v26;
  v28 = sub_231413B7C();
  sub_231412A90();
  v36 = v28;
  v37 = MEMORY[0x24BDB8280];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v27;
  v37 = MEMORY[0x24BDF3E48];
  v38 = OpaqueTypeConformance2;
  v39 = MEMORY[0x24BDF3E18];
  v30 = swift_getOpaqueTypeConformance2();
  v36 = v25;
  v37 = v30;
  v31 = swift_getOpaqueTypeConformance2();
  v36 = v23;
  v37 = v31;
  v32 = swift_getOpaqueTypeConformance2();
  v33 = sub_2313FEE2C();
  v36 = v19;
  v37 = v21;
  v38 = v32;
  v39 = v33;
  swift_getOpaqueTypeConformance2();
  sub_2312CCC24(&qword_255ECB8B8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t)&unk_231421D28);
  return sub_231414470();
}

uint64_t sub_2313FD50C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[3];
  char v78[40];
  _QWORD v79[4];

  v72 = a2;
  v3 = sub_231411608();
  v69 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECB8B0, v6, MEMORY[0x24BDB7A98], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - v8;
  v63 = sub_231413B7C();
  v57 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE1E4(0, &qword_255ECB7A8, v12, MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
  v75 = v13;
  v58 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v53 - v14;
  sub_2312ED1B4(0);
  v64 = v15;
  v76 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v71 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v53 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v53 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v73 = (char *)&v53 - v22;
  sub_2313FE970(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v67 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v65 = v26;
  v27 = *(void (**)(void))(v26 + 16);
  v60 = (char *)&v53 - v28;
  v68 = v29;
  v59 = v27;
  v27();
  sub_2314141C4();
  v66 = a1;
  sub_231411230();
  v30 = v11;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = *(void (**)(char *, uint64_t))(v69 + 8);
  v56(v5, v3);
  v61 = v9;
  v69 = v3;
  sub_231413B64();
  if (qword_255ECAA38 != -1)
    swift_once();
  v79[0] = qword_255ED2E30;
  v31 = v62;
  v32 = v63;
  v33 = MEMORY[0x24BDF3E48];
  v34 = MEMORY[0x24BDB8280];
  v35 = MEMORY[0x24BDF3E18];
  sub_2314139B4();
  v57 = *(_QWORD *)(v57 + 8);
  ((void (*)(char *, uint64_t))v57)(v30, v32);
  sub_231413FD8();
  v79[0] = v32;
  v79[1] = v33;
  v79[2] = v34;
  v79[3] = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v74;
  v37 = v75;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)v78);
  v58 = *(_QWORD *)(v58 + 8);
  ((void (*)(char *, uint64_t))v58)(v31, v37);
  v54 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v38 = v64;
  v54(v73, v36, v64);
  sub_2314141C4();
  sub_23141120C();
  v39 = v69;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56(v5, v39);
  sub_231413B64();
  v79[0] = qword_255ED2E30;
  sub_2314139B4();
  ((void (*)(char *, uint64_t))v57)(v30, v32);
  sub_231413FD8();
  v40 = v70;
  v41 = v75;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)v79);
  ((void (*)(char *, uint64_t))v58)(v31, v41);
  v42 = v74;
  v54(v74, v40, v38);
  v43 = v67;
  v44 = v60;
  v45 = v68;
  ((void (*)(char *, char *, uint64_t))v59)(v67, v60, v68);
  v77[0] = v43;
  v46 = v76;
  v47 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v48 = v73;
  v47(v40, v73, v38);
  v77[1] = v40;
  v49 = v71;
  v47(v71, v42, v38);
  v77[2] = v49;
  sub_2313FC22C(v77, (uint64_t (*)(_QWORD))sub_2313FF8B8, (uint64_t (*)(_QWORD))sub_2313FE970, (void (*)(void))sub_2313FF064, v72);
  v50 = *(void (**)(char *, uint64_t))(v46 + 8);
  v50(v42, v38);
  v50(v48, v38);
  v51 = *(void (**)(char *, uint64_t))(v65 + 8);
  v51(v44, v45);
  v50(v49, v38);
  v50(v40, v38);
  return ((uint64_t (*)(char *, uint64_t))v51)(v43, v45);
}

uint64_t sub_2313FDC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  double v33;
  id v34;
  double v35;
  double v36;
  char *v37;
  char *v38;
  uint64_t v39;
  double v40;
  char *v41;
  double v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v65[2];
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104[2];

  v94 = a3;
  v80 = a2;
  v98 = a4;
  v78 = type metadata accessor for AFibBurdenPDFChartPoint();
  v91 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v92 = v5;
  v93 = (uint64_t)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231413A98();
  v96 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v95 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_2314141DC();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v85 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E88];
  sub_2312EE6B4(0, &qword_255ECB8C0, MEMORY[0x24BDB84C8], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)v65 - v11;
  v12 = sub_231411608();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECB8B0, v16, MEMORY[0x24BDB7A98], v9);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v99 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v65[1] = (char *)v65 - v20;
  v72 = sub_231413B7C();
  v73 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v69 = (char *)v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FED44(0);
  v74 = v22;
  v77 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v70 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FEC98(0);
  v79 = v24;
  v81 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v71 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FEBC0(0);
  v68 = v26;
  v82 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v76 = (char *)v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FEAC4(0);
  v90 = v28;
  v88 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v67 = (char *)v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313FE984(0);
  v86 = v30;
  v84 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v83 = (char *)v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314141C4();
  sub_231411230();
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v15, v12);
  sub_2314141C4();
  v66 = a1;
  sub_23141120C();
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32(v15, v12);
  sub_2314141C4();
  v78 = *(int *)(v78 + 20);
  v33 = *(double *)(a1 + v78);
  v34 = objc_msgSend(*(id *)(v80 + *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 28)), sel_presentation);
  objc_msgSend(v34, sel_scaleFactor);
  v36 = v35;

  v37 = v67;
  v104[0] = v33 * v36;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v69;
  v39 = v68;
  sub_231413B70();
  v40 = MEMORY[0x24BDB8280];
  v41 = v70;
  v42 = *(double *)&v72;
  sub_2314139C0();
  (*(void (**)(char *, double))(v73 + 8))(v38, COERCE_DOUBLE(*(_QWORD *)&v42));
  v100 = sub_2313FB10C();
  v104[0] = v42;
  v104[1] = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v44 = MEMORY[0x24BDF3E48];
  v45 = MEMORY[0x24BDF3E18];
  v46 = v71;
  v47 = v74;
  sub_2314139B4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v41, v47);
  sub_231413FD8();
  v100 = v47;
  v101 = v44;
  v48 = v66;
  v102 = OpaqueTypeConformance2;
  v103 = v45;
  v49 = swift_getOpaqueTypeConformance2();
  v50 = v76;
  v51 = v79;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)v104);
  v52 = v46;
  v53 = v51;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v51);
  v54 = v87;
  v55 = v85;
  v56 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v85, *MEMORY[0x24BDEEB68], v89);
  v100 = v53;
  v101 = v49;
  v57 = swift_getOpaqueTypeConformance2();
  sub_2314139A8();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v39);
  v58 = v95;
  if (*(double *)(v48 + v78) >= 0.9)
    sub_231413A8C();
  else
    sub_231413A80();
  v59 = v93;
  sub_2312D6C20(v48, v93, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
  v60 = (*(unsigned __int8 *)(v91 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v94;
  sub_2312EE5FC(v59, v61 + v60, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
  swift_retain();
  sub_2314144B8();
  sub_2313FEDB8();
  v100 = v39;
  v101 = v57;
  swift_getOpaqueTypeConformance2();
  sub_2313FEE2C();
  v62 = v83;
  v63 = v90;
  sub_231413990();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v58, v97);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v37, v63);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v84 + 32))(v98, v62, v86);
}

double sub_2313FE5AC@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  double result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v18;

  v4 = sub_23141135C();
  MEMORY[0x24BDAC7A8](v4);
  sub_23140ED9C(a1);
  v5 = sub_2314142E4();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  KeyPath = swift_getKeyPath();
  sub_2314144B8();
  sub_231413FFC();
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v14;
  *(_BYTE *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v16;
  *(_BYTE *)(a2 + 72) = v17;
  result = *(double *)&v18;
  *(_OWORD *)(a2 + 80) = v18;
  return result;
}

uint64_t sub_2313FE6C0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2313FC430(v2 + a1[6], *(void **)(v2 + a1[7]), *(_BYTE *)(v2 + a1[7] + 8), *(void **)(v2 + a1[7] + 16), (uint64_t *)(v2 + a1[8]), *(void **)(v2 + a1[9]), a2);
}

uint64_t sub_2313FE6EC()
{
  sub_2312CCC24(&qword_255ED2070, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_2314240C8);
  return sub_2314134B0();
}

uint64_t sub_2313FE744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2313FE75C(a1, a2, a3, MEMORY[0x24BE452B8]);
}

uint64_t sub_2313FE750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2313FE75C(a1, a2, a3, MEMORY[0x24BE452C0]);
}

uint64_t sub_2313FE75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  v6 = sub_2312CCC24(&qword_255ED2070, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_2314240C8);
  return a4(a1, a2, v6);
}

uint64_t sub_2313FE7BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2312CCC24(&qword_255ED2068, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_231424088);
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

uint64_t sub_2313FE838()
{
  return sub_2312CCC24(&qword_255ED2060, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_231424060);
}

uint64_t sub_2313FE864()
{
  return sub_2312CCC24(&qword_255ED2068, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_231424088);
}

uint64_t sub_2313FE890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2313FE8A0(uint64_t a1)
{
  uint64_t result;

  result = sub_2312CCC24(&qword_255ED2070, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_2314240C8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2313FE8DC(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ED2078, (uint64_t (*)(uint64_t))sub_2313FE900, (uint64_t (*)(void))sub_2313FEF74, MEMORY[0x24BDB8128]);
}

void sub_2313FE900()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2080)
  {
    sub_2313FE970(255);
    sub_2312ED1B4(255);
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2080);
  }
}

void sub_2313FE970(uint64_t a1)
{
  sub_2313FFB20(a1, &qword_255ED2088, sub_2313FE984);
}

void sub_2313FE984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ED2090)
  {
    sub_2313FEAC4(255);
    v3 = v2;
    sub_2313FEDB8();
    v5 = v4;
    sub_2313FEBC0(255);
    sub_2313FEC98(255);
    sub_2313FED44(255);
    sub_231413B7C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_2313FEE2C();
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB7BC8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ED2090);
  }
}

void sub_2313FEAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_255ED2098)
  {
    sub_2313FEBC0(255);
    v3 = v2;
    sub_2313FEC98(255);
    sub_2313FED44(255);
    sub_231413B7C();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x2348DE200](a1, v6, MEMORY[0x24BDB7C08], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255ED2098);
  }
}

void sub_2313FEBC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_255ED20A0)
  {
    sub_2313FEC98(255);
    v3 = v2;
    sub_2313FED44(255);
    sub_231413B7C();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = MEMORY[0x24BDF3E18];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x2348DE200](a1, v6, MEMORY[0x24BDB7D68], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255ED20A0);
  }
}

void sub_2313FEC98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ED20A8)
  {
    sub_2313FED44(255);
    v3 = v2;
    sub_231413B7C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDF3E48];
    v7[2] = OpaqueTypeConformance2;
    v7[3] = MEMORY[0x24BDF3E18];
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB7C28], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ED20A8);
  }
}

void sub_2313FED44(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  if (!qword_255ED20B0)
  {
    v4[0] = sub_231413B7C();
    v4[1] = MEMORY[0x24BDB8280];
    v2 = MEMORY[0x2348DE200](a1, v4, MEMORY[0x24BDB7D08], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255ED20B0);
  }
}

void sub_2313FEDB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED20B8)
  {
    sub_2313FF7E4(255, &qword_255ED20C0, &qword_255ED20C8);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED20B8);
  }
}

unint64_t sub_2313FEE2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255ED20D0;
  if (!qword_255ED20D0)
  {
    sub_2313FEDB8();
    v2 = v1;
    v3[0] = sub_2313FEE94();
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255ED20D0);
  }
  return result;
}

unint64_t sub_2313FEE94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255ED20D8;
  if (!qword_255ED20D8)
  {
    sub_2313FF7E4(255, &qword_255ED20C0, &qword_255ED20C8);
    v2 = v1;
    v3 = sub_2313FEF34(&qword_255ED20E0, &qword_255ED20C8);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ED20D8);
  }
  return result;
}

uint64_t sub_2313FEF34(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_2313FF840(255, a2);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF1028], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2313FEF74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  unint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;

  result = qword_255ED20E8;
  if (!qword_255ED20E8)
  {
    sub_2313FE900();
    v2 = v1;
    v7 = sub_2313FF064();
    v3 = MEMORY[0x24BDB8280];
    sub_2312EE1E4(255, &qword_255ECB7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8288], MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
    v5 = v4;
    sub_231413B7C();
    v6[3] = v3;
    v6[4] = MEMORY[0x24BDF3E18];
    v6[1] = v5;
    v6[2] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v9 = OpaqueTypeConformance2;
    v6[0] = &v7;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B80], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ED20E8);
  }
  return result;
}

unint64_t sub_2313FF064()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  result = qword_255ED20F0;
  if (!qword_255ED20F0)
  {
    sub_2313FE970(255);
    v2 = v1;
    sub_2313FEAC4(255);
    v4 = v3;
    sub_2313FEDB8();
    v6 = v5;
    sub_2313FEBC0(255);
    sub_2313FEC98(255);
    sub_2313FED44(255);
    sub_231413B7C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v7[1] = v4;
    v7[2] = v6;
    v7[3] = swift_getOpaqueTypeConformance2();
    v7[4] = sub_2313FEE2C();
    v7[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8490], v2, v7);
    atomic_store(result, (unint64_t *)&qword_255ED20F0);
  }
  return result;
}

void sub_2313FF1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ED20F8)
  {
    sub_2313FE8DC(255);
    v3 = v2;
    sub_2312ED508(255);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    v7[3] = sub_2312ED5B0();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB83B0], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ED20F8);
  }
}

void sub_2313FF264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ED2108)
  {
    sub_2313FF1B4(255);
    v3 = v2;
    sub_2313FE8DC(255);
    sub_2312ED508(255);
    sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    sub_2312ED5B0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDB7DC8];
    v7[2] = OpaqueTypeConformance2;
    v7[3] = MEMORY[0x24BDB7DB8];
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB8360], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ED2108);
  }
}

void sub_2313FF354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ED2110)
  {
    sub_2313FF264(255);
    v3 = v2;
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v5 = v4;
    sub_2313FF1B4(255);
    sub_2313FE8DC(255);
    sub_2312ED508(255);
    sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_2312ED84C();
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB83E0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ED2110);
  }
}

void sub_2313FF4A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ED2118)
  {
    sub_2313FF354(255);
    v3 = v2;
    sub_2313FF264(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_2313FF1B4(255);
    sub_2313FE8DC(255);
    sub_2312ED508(255);
    sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24BDB7DC8];
    v5 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = v5;
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB8380], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ED2118);
  }
}

void sub_2313FF614(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ECB820, (uint64_t (*)(uint64_t))sub_2312EDA98, (uint64_t (*)(void))sub_2312EDB08, MEMORY[0x24BDB82E0]);
}

uint64_t sub_2313FF638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2313FD50C(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2313FF640()
{
  return sub_2314140F8();
}

void sub_2313FF664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2128)
  {
    sub_2312EE4B8(255, &qword_255ED2120, (uint64_t (*)(uint64_t))sub_2313FF4A0, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2312D6DD8(255, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2128);
  }
}

uint64_t sub_2313FF700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312EE4B8(0, &qword_255ED2120, (uint64_t (*)(uint64_t))sub_2313FF4A0, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313FF764(uint64_t a1)
{
  uint64_t v2;

  sub_2312EE4B8(0, &qword_255ED2120, (uint64_t (*)(uint64_t))sub_2313FF4A0, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2313FF7C0(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ECB850, (uint64_t (*)(uint64_t))sub_2312EDDD0, (uint64_t (*)(void))sub_2312EE268, MEMORY[0x24BDB82E0]);
}

void sub_2313FF7E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2313FF840(255, a3);
    v4 = sub_231414074();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2313FF840(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231414260();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2313FF884()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2313FF8B8(uint64_t a1)
{
  sub_2313FFC0C(a1, &qword_255ED2130, sub_2313FE970);
}

uint64_t sub_2313FF8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313FF980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2313FDC38(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2313FF9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartPoint() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_2313FFA70@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartPoint() - 8) + 80);
  return sub_2313FE5AC(v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_2313FFAC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_231414128();
  *a1 = result;
  return result;
}

uint64_t sub_2313FFAE8()
{
  return sub_231414134();
}

void sub_2313FFB0C(uint64_t a1)
{
  sub_2313FFC0C(a1, &qword_255ED2138, (void (*)(uint64_t))sub_23136B494);
}

void sub_2313FFB20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_2312D6DD8(255, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231411248();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    a3(255);
    sub_2312ED154();
    sub_2312CCC24((unint64_t *)&qword_255ECB798, v5, MEMORY[0x24BDCB890]);
    v6 = sub_231414488();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2313FFBF8(uint64_t a1)
{
  sub_2313FFC0C(a1, &qword_255ED2140, (void (*)(uint64_t))sub_2312ECFB0);
}

void sub_2313FFC0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata3;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_2312ED1B4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v5)
      atomic_store(TupleTypeMetadata3, a2);
  }
}

unint64_t sub_2313FFC80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255ED2148;
  if (!qword_255ED2148)
  {
    sub_2313FF664();
    v2 = v1;
    v3[0] = sub_2313FFCE8();
    v3[1] = sub_2312EE918();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255ED2148);
  }
  return result;
}

unint64_t sub_2313FFCE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  result = qword_255ED2150;
  if (!qword_255ED2150)
  {
    sub_2312EE4B8(255, &qword_255ED2120, (uint64_t (*)(uint64_t))sub_2313FF4A0, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    sub_2313FF354(255);
    v4 = v3;
    sub_2313FF264(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_2313FF1B4(255);
    sub_2313FE8DC(255);
    sub_2312ED508(255);
    sub_2312CCC24(&qword_255ED2100, (uint64_t (*)(uint64_t))sub_2313FE8DC, MEMORY[0x24BDB8148]);
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24BDB7DC8];
    v6 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = swift_getOpaqueTypeConformance2();
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_255ED2150);
  }
  return result;
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = sub_2314130CC();
  if (*(_QWORD *)(a1 + 64))
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  return result;
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a1 + 40;
  v7 = a2 + 40;
  v8 = *(_QWORD *)(a2 + 64);
  v9 = v4;
  sub_231412A90();
  swift_unknownObjectRetain();
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v11;
    *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
  }
  return a1;
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  sub_2314130CC();
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v9 = *(_OWORD *)(a2 + 40);
    v10 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v9;
    *(_OWORD *)(a1 + 56) = v10;
    return a1;
  }
  if (!v8)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
    goto LABEL_7;
  }
  sub_2312DB81C((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_2314130CC();
  *(_QWORD *)(a1 + 32) = v6;
  if (*(_QWORD *)(a1 + 64))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s36AFibBurdenChartOrOnboardingComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s36AFibBurdenChartOrOnboardingComponentVMa()
{
  return &_s36AFibBurdenChartOrOnboardingComponentVN;
}

uint64_t sub_2314001AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[5];
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[5];

  v2 = v1;
  v4 = sub_231412DA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23135E6AC(v2 + 40, (uint64_t)&v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2312DFB68(&v19, (uint64_t)&v21);
LABEL_9:
    sub_2312DFB68(&v21, (uint64_t)v24);
    sub_231412D60();
    sub_231400568(v18);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v18);
    sub_2312DF850((uint64_t)v24, (uint64_t)v18);
    sub_231400B54(0);
    swift_allocObject();
    swift_retain();
    sub_23140072C((uint64_t)v18);
    v12 = (void *)sub_231412D90();
    v14 = *(_QWORD *)(v2 + 24);
    v13 = *(_QWORD *)(v2 + 32);
    type metadata accessor for AFibBurdenChartSection();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_23135A104(v12, v14, v13);
    sub_231400BE0();
    swift_allocObject();
    v15 = sub_231412AB4();
    swift_release();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
    sub_2312CCC24(&qword_255ED2180, (uint64_t (*)(uint64_t))sub_231400BE0, MEMORY[0x24BE43BF8]);
    return v15;
  }
  v8 = (void *)sub_231412D78();
  v9 = objc_msgSend(v8, sel_profileIdentifier);
  v10 = objc_msgSend(v9, sel_type);

  if (v10 == (id)1)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v8);

    if (v11)
    {
      *((_QWORD *)&v22 + 1) = sub_2312DC718();
      v23 = MEMORY[0x24BE45B80];
      *(_QWORD *)&v21 = v11;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_8;
    }
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v23 = 0;
  v21 = 0u;
  v22 = 0u;
LABEL_8:
  sub_23135E710((uint64_t)&v19);
  if (*((_QWORD *)&v22 + 1))
    goto LABEL_9;
  sub_23135E710((uint64_t)&v21);
  if (qword_25415B6D8 != -1)
    swift_once();
  sub_2312D4A68();
  sub_2312CE3B8(v17, (uint64_t)qword_254162EE8);
  v24[0] = 0;
  sub_2314135AC();
  return 0;
}

uint64_t sub_2314004C4()
{
  sub_231414E18();
  sub_231414728();
  sub_231400D30();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_231400568(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  Class v11;
  id v12;
  id v13;
  void *v14;
  void (*v15)(_BYTE *, uint64_t);
  void (*v16)(_BYTE *, _QWORD);
  _QWORD *v17;
  uint64_t v18;
  _BYTE v20[32];

  v2 = sub_2314125EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v20[-v7];
  sub_2312CEA5C(a1, a1[3]);
  v9 = (void *)sub_23141183C();
  v10 = (void *)sub_231414B48();

  sub_2313BF76C();
  v12 = objc_allocWithZone(v11);
  v13 = v10;
  v14 = (void *)sub_231413120();
  sub_2314125B0();
  sub_23141258C();
  v15 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v15(v6, v2);
  v16 = (void (*)(_BYTE *, _QWORD))sub_231412598();
  *v17 = 0x4034000000000000;
  v16(v20, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_2312CCC24(&qword_255ED0720, (uint64_t (*)(uint64_t))sub_2313BF76C, MEMORY[0x24BE449E0]);
  v18 = sub_23141255C();

  v15(v6, v2);
  v15(v8, v2);
  return v18;
}

_QWORD *sub_23140072C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _OWORD *v14;
  __int128 v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  __int128 v25;

  v23 = a1;
  sub_23135E45C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231400C84(0, &qword_255ED2188, MEMORY[0x24BE42C68]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  *((_BYTE *)v1 + *(_QWORD *)(qword_255ED3070 + *v1 + 16)) = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)(qword_255ED3070 + *v1 + 24)) = 0;
  sub_2312DF850(a1, (uint64_t)v24);
  *((_QWORD *)&v25 + 1) = *MEMORY[0x24BDD2C50];
  v13 = (void *)*((_QWORD *)&v25 + 1);
  v14 = (_OWORD *)((char *)v1 + *(_QWORD *)(qword_255ED3070 + *v1 + 32));
  v15 = v24[1];
  *v14 = v24[0];
  v14[1] = v15;
  v14[2] = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE42C58], v9);
  v16 = v13;
  swift_retain();
  v17 = (_QWORD *)sub_23141252C();
  swift_retain();
  *(_QWORD *)&v24[0] = sub_2313901F0();
  sub_23135E7C8(0, &qword_255ECE4E0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_231416A30;
  *(_BYTE *)(v18 + 32) = sub_23138F9A4() & 1;
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  sub_231413F3C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2312CCC24(&qword_255ECE4E8, (uint64_t (*)(uint64_t))sub_23135E45C, MEMORY[0x24BDB9530]);
  v19 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)&v24[0] = v19;
  swift_allocObject();
  swift_weakInit();
  v20 = sub_231413F90();
  swift_release();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v23);
  swift_release();
  *(_QWORD *)((char *)v17 + *(_QWORD *)(qword_255ED3070 + *v17 + 24)) = v20;
  swift_release();
  return v17;
}

uint64_t sub_231400A2C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *Strong;
  uint64_t result;
  unsigned int *v9;
  _BYTE v10[24];

  sub_231400C84(0, &qword_255ED2188, MEMORY[0x24BE42C68]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v10[-v5];
  swift_beginAccess();
  Strong = (_QWORD *)swift_weakLoadStrong();
  if (Strong)
  {
    *((_BYTE *)Strong + *(_QWORD *)(qword_255ED3070 + *Strong + 16)) = a1 & 1;
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = (unsigned int *)MEMORY[0x24BE42C60];
    if ((a1 & 1) == 0)
      v9 = (unsigned int *)MEMORY[0x24BE42C58];
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *v9, v3);
    sub_231412520();
    return swift_release();
  }
  return result;
}

void sub_231400B54(uint64_t a1)
{
  sub_231400C84(a1, &qword_255ED2158, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AFibBurdenHideableOnboardingDataSource);
}

void sub_231400B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2160)
  {
    sub_2313BF76C();
    sub_2312CCC24(&qword_255ED0720, (uint64_t (*)(uint64_t))sub_2313BF76C, MEMORY[0x24BE449E0]);
    v0 = sub_2314126AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2160);
  }
}

void sub_231400BE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2170)
  {
    sub_231400B54(255);
    type metadata accessor for AFibBurdenChartSection();
    sub_2312CCC24(&qword_255ED2178, (uint64_t (*)(uint64_t))sub_231400B54, MEMORY[0x24BE42CC8]);
    v0 = sub_231412AC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2170);
  }
}

void sub_231400C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_231400B68();
    v7 = v6;
    v8 = sub_2312CCC24(&qword_255ED2168, (uint64_t (*)(uint64_t))sub_231400B68, MEMORY[0x24BE43020]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_231400D00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231400D24(char *a1)
{
  return sub_231400A2C(*a1);
}

unint64_t sub_231400D30()
{
  unint64_t result;

  result = qword_255ED2190;
  if (!qword_255ED2190)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED2190);
  }
  return result;
}

uint64_t sub_231400D68(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v46 = a2;
  sub_23138C87C(0, &qword_25415D040, MEMORY[0x24BDB9E10]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - v10;
  sub_2312DC3FC();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v43 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC558();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC4C4();
  v41 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v40 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(v4, sel_profileIdentifier);
  v20 = objc_msgSend(v19, sel_type);

  if (v20 != (id)1)
    goto LABEL_7;
  v21 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
  v22 = v21;
  if (!a4)
  {
    v26 = objc_msgSend(v21, sel_initWithFeatureIdentifier_healthStore_, a1, v4);
    if (v26)
      goto LABEL_4;
LABEL_7:
    sub_23141357C();
    sub_231413DE0();
    sub_231401218((unint64_t *)&qword_255ECF5F0, &qword_25415D040, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
    v35 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v35;
  }
  v23 = a1;
  v24 = v4;
  sub_231412A90();
  v25 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v22, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v23, v24, v25);

  if (!v26)
    goto LABEL_7;
LABEL_4:
  if ((v46 & 1) == 0)
  {
    sub_2312DC718();
    v37 = sub_231413624();

    return v37;
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312DC5D0(0);
  sub_2312CCC24(&qword_25415D030, (uint64_t (*)(uint64_t))sub_2312DC5D0, MEMORY[0x24BDB9DF8]);
  sub_231413E04();
  sub_23141357C();
  sub_2312CCC24((unint64_t *)&unk_25415D060, (uint64_t (*)(uint64_t))sub_2312DC558, MEMORY[0x24BDB9E90]);
  v27 = v39;
  v28 = v40;
  sub_231413E88();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v27);
  sub_2312DC718();
  v29 = v26;
  v30 = sub_231413624();

  v47 = v30;
  v31 = MEMORY[0x24BDB9AE0];
  sub_23138C87C(0, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231401218((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v31, MEMORY[0x24BDB9AF8]);
  sub_2312CCC24(&qword_25415CDE0, (uint64_t (*)(uint64_t))sub_2312DC4C4, MEMORY[0x24BDB94C8]);
  v32 = v43;
  v33 = v42;
  sub_231413F48();
  swift_release();
  sub_2312CCC24((unint64_t *)&unk_25415CE00, (uint64_t (*)(uint64_t))sub_2312DC3FC, MEMORY[0x24BDB9530]);
  v34 = v45;
  v35 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v34);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v33);

  return v35;
}

uint64_t sub_231401210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2313085A0(a1, a2);
}

uint64_t sub_231401218(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23138C87C(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231401258()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23140127C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return sub_231412A90();
}

void sub_231401298(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *oslog;
  uint64_t v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    v3 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_lockedDeliveredCountryCode);
    v4 = a1;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 32));
    sub_2314015C4((_QWORD *)(v3 + 16), v4);
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 32));
    swift_release();

  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v6 = sub_231413780();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v7 = a2;
    v8 = a2;
    oslog = sub_231413768();
    v9 = sub_231414974();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18[0] = v12;
      *(_DWORD *)v10 = 136446466;
      v13 = sub_2314151A8();
      sub_23133180C(v13, v14, v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2112;
      if (a2)
      {
        v15 = a2;
        v16 = _swift_stdlib_bridgeErrorToNSError();
        sub_231414CBC();
      }
      else
      {
        sub_231414CBC();
        v16 = 0;
      }
      *v11 = v16;

      _os_log_impl(&dword_2312C8000, oslog, v9, "[%{public}s] Unable to retrieve onboarding record with error %@", (uint8_t *)v10, 0x16u);
      sub_2312D1E78(0, (unint64_t *)&qword_25415BD20, (void (*)(uint64_t))sub_23132B35C);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v12, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);

    }
    else
    {

    }
  }
}

void sub_2314015C4(_QWORD *a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a2, sel_onboardingCompletion);
  v5 = v4;
  if (!v4)
    goto LABEL_5;
  v6 = objc_msgSend(v4, sel_countryCode);

  if (!v6)
  {
    v5 = 0;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v5 = (void *)sub_2314146BC();
  v8 = v7;

LABEL_6:
  *a1 = v5;
  a1[1] = v8;
}

uint64_t sub_23140166C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;
  uint64_t result;
  void *v6;
  uint64_t v7;

  v2 = a2 + 16;
  v3 = (void *)sub_231413588();
  v4 = objc_msgSend(v3, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2DB8]);

  swift_beginAccess();
  result = MEMORY[0x2348DE3BC](v2);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_wristDetectEnabled);
    swift_retain();

    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 20));
    *(_BYTE *)(v7 + 16) = v4;
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 20));
    return swift_release();
  }
  return result;
}

uint64_t sub_231401734(char a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a7;
  v42 = a6;
  v43 = a5;
  v11 = sub_231411608();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, (unint64_t *)&qword_255ECBCC8, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  v18 = sub_2314112F0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v22 = 1;
    return a3(v22);
  }
  v38 = v21;
  v39 = a3;
  v40 = a4;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_detailsChanged) = a1 & 1;
  sub_231412838();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_2312F1A20((uint64_t)v17, (unint64_t *)&qword_255ECBCC8, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
LABEL_12:
    a3 = v39;
    v22 = 2;
    return a3(v22);
  }
  v23 = v18;
  v24 = v38;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v38, v17, v23);
  v25 = *MEMORY[0x24BDD4570];
  v26 = (void *)sub_2314112CC();
  (*(void (**)(void))(v43 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_dateProvider))();
  v27 = (void *)sub_2314115C0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v28 = objc_msgSend(v26, sel_hk_ageWithCurrentDate_, v27);

  if ((uint64_t)v28 >= v25)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v23);
    goto LABEL_12;
  }
  v29 = v19;
  if (qword_25415DF98 != -1)
    swift_once();
  v30 = sub_231413780();
  sub_2312CE3B8(v30, (uint64_t)qword_254162FF0);
  v31 = sub_231413768();
  v32 = sub_23141498C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v45 = v34;
    *(_DWORD *)v33 = 136446210;
    v35 = sub_2314151A8();
    v44 = sub_23133180C(v35, v36, &v45);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v31, v32, "[%{public}s] User not old enough to continue onboarding", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v34, -1, -1);
    MEMORY[0x2348DE308](v33, -1, -1);
  }

  v39(0);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v38, v23);
}

uint64_t sub_231401AB4(unsigned __int8 *a1, uint64_t (*a2)(uint64_t))
{
  int v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  v3 = *a1;
  if (v3 == 2)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v4 = sub_231413780();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v5 = sub_231413768();
    v6 = sub_231414980();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v26 = v8;
      *(_DWORD *)v7 = 136446466;
      v9 = sub_2314151A8();
      sub_23133180C(v9, v10, &v26);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_23133180C(0xD00000000000003ALL, 0x8000000231433590, &v26);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s.%{public}s]: Haven't retrieved feature status by the time we got to setup complete", (uint8_t *)v7, 0x16u);
      v11 = 2;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v8, -1, -1);
      MEMORY[0x2348DE308](v7, -1, -1);

      return a2(v11);
    }
LABEL_16:

    v11 = 2;
    return a2(v11);
  }
  if ((v3 & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v19 = sub_231413780();
    sub_2312CE3B8(v19, (uint64_t)qword_254162FF0);
    v5 = sub_231413768();
    v20 = sub_231414968();
    if (os_log_type_enabled(v5, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136446466;
      v23 = sub_2314151A8();
      sub_23133180C(v23, v24, &v26);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      sub_23133180C(0xD00000000000003ALL, 0x8000000231433590, &v26);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v5, v20, "[%{public}s.%{public}s]: Wrist detect enabled, proceeding", (uint8_t *)v21, 0x16u);
      v11 = 2;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v22, -1, -1);
      MEMORY[0x2348DE308](v21, -1, -1);

      return a2(v11);
    }
    goto LABEL_16;
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v12 = sub_231413780();
  sub_2312CE3B8(v12, (uint64_t)qword_254162FF0);
  v13 = sub_231413768();
  v14 = sub_231414968();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v26 = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = sub_2314151A8();
    sub_23133180C(v17, v18, &v26);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    sub_23133180C(0xD00000000000003ALL, 0x8000000231433590, &v26);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s.%{public}s]: Wrist detect disabled, warning", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v16, -1, -1);
    MEMORY[0x2348DE308](v15, -1, -1);
  }

  v11 = 3;
  return a2(v11);
}

uint64_t sub_231401FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_23130D990();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_featureAvailabilityProvider);
  swift_getObjectType();
  sub_231414A40();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v11;
  v12[5] = ObjectType;
  swift_retain();
  swift_unknownObjectRetain();
  sub_231414B84();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2314020E0(char a1, void *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32[2];

  v32[1] = *MEMORY[0x24BDAC8D0];
  sub_23130D990();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_getObjectType();
    sub_2314146BC();
    sub_231414A34();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a3;
    v16[3] = a4;
    v16[4] = a6;
    swift_retain();
    sub_231414B84();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v18 = sub_231413780();
    sub_2312CE3B8(v18, (uint64_t)qword_254162FF0);
    v19 = a2;
    v20 = a2;
    v21 = sub_231413768();
    v22 = sub_231414974();
    if (os_log_type_enabled(v21, v22))
    {
      v30 = a3;
      v23 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v32[0] = v25;
      *(_DWORD *)v23 = 136446466;
      v26 = sub_2314151A8();
      v31 = sub_23133180C(v26, v27, v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2112;
      if (a2)
      {
        v28 = a2;
        v29 = _swift_stdlib_bridgeErrorToNSError();
        v31 = v29;
        sub_231414CBC();
      }
      else
      {
        v31 = 0;
        sub_231414CBC();
        v29 = 0;
      }
      *v24 = v29;

      _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s] Error when setting feature enable setting: %@", (uint8_t *)v23, 0x16u);
      sub_2312D1E78(0, (unint64_t *)&qword_25415BD20, (void (*)(uint64_t))sub_23132B35C);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      MEMORY[0x2348DE308](v23, -1, -1);

      a3 = v30;
    }
    else
    {

    }
    return a3(0, a2);
  }
}

uint64_t sub_231402458(char a1, void *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t v4;
  void *v5;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20[2];

  v20[1] = *MEMORY[0x24BDAC8D0];
  if ((a1 & 1) != 0)
  {
    v4 = 1;
    v5 = 0;
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v7 = sub_231413780();
    sub_2312CE3B8(v7, (uint64_t)qword_254162FF0);
    v8 = a2;
    v9 = a2;
    v10 = sub_231413768();
    v11 = sub_231414974();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20[0] = v19;
      *(_DWORD *)v12 = 136446466;
      v14 = sub_2314151A8();
      sub_23133180C(v14, v15, v20);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2112;
      if (a2)
      {
        v16 = a2;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        sub_231414CBC();
      }
      else
      {
        sub_231414CBC();
        v17 = 0;
      }
      *v13 = v17;

      _os_log_impl(&dword_2312C8000, v10, v11, "[%{public}s] Error when setting notification details entered setting: %@", (uint8_t *)v12, 0x16u);
      sub_2312D1E78(0, (unint64_t *)&qword_25415BD20, (void (*)(uint64_t))sub_23132B35C);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v13, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v12, -1, -1);
    }
    else
    {

    }
    v4 = 0;
    v5 = a2;
  }
  return a3(v4, v5);
}

id sub_231402734()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingModel()
{
  return objc_opt_self();
}

uint64_t sub_231402810()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC5Heart28CardioFitnessOnboardingModel_mostRecentSampleDateProvider);
  v2 = v1[3];
  v3 = v1[4];
  sub_2312CEA5C(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t sub_231402868()
{
  swift_release();
  sub_2314130CC();
  return swift_deallocObject();
}

uint64_t sub_231402894(char a1, void *a2)
{
  uint64_t v2;

  return sub_2314020E0(a1, a2, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_2314028A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2314028C4(char a1, void *a2)
{
  uint64_t v2;

  return sub_231402458(a1, a2, *(uint64_t (**)(uint64_t, void *))(v2 + 16));
}

void sub_2314028D0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getObjectType();
  sub_2312D1E78(0, qword_255ECD770, (void (*)(uint64_t))MEMORY[0x24BE43418]);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_231412880();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_2314029C0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (qword_25415DF98 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_254162FF0);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_QWORD *)(v0 - 128) = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_2314151A8();
    *(_QWORD *)(v0 - 168) = sub_23133180C(v6, v7, (uint64_t *)(v0 - 128));
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%{public}s] Proceeding from start", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t))(v0 - 184))(2);
}

uint64_t sub_231402EC8(uint64_t a1)
{
  uint64_t v2;

  sub_231402F04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_231402F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2210)
  {
    sub_2312CEA10(255, &qword_255ED2208);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2210);
  }
}

uint64_t sub_231402F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_231412880();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_231402FF4(char a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_231412880() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_231401734(a1, v4, *(uint64_t (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t storeEnumTagSinglePayload for CardioFitnessOnboardingModel.CannotProgressReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2314030A8 + 4 * byte_23142423D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2314030DC + 4 * byte_231424238[v4]))();
}

uint64_t sub_2314030DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2314030E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2314030ECLL);
  return result;
}

uint64_t sub_2314030F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231403100);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_231403104(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23140310C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessOnboardingModel.CannotProgressReason()
{
  return &type metadata for CardioFitnessOnboardingModel.CannotProgressReason;
}

unint64_t sub_23140312C()
{
  unint64_t result;

  result = qword_255ED2218;
  if (!qword_255ED2218)
  {
    result = MEMORY[0x2348DE248](&unk_2314242E4, &type metadata for CardioFitnessOnboardingModel.CannotProgressReason);
    atomic_store(result, (unint64_t *)&qword_255ED2218);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessOnboardingModel.WarningReason(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2314031B0 + 4 * byte_231424242[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2314031D0 + 4 * byte_231424247[v4]))();
}

_BYTE *sub_2314031B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2314031D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2314031D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2314031E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2314031E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2314031F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessOnboardingModel.WarningReason()
{
  return &type metadata for CardioFitnessOnboardingModel.WarningReason;
}

unint64_t sub_231403210()
{
  unint64_t result;

  result = qword_255ED2220;
  if (!qword_255ED2220)
  {
    result = MEMORY[0x2348DE248](&unk_23142435C, &type metadata for CardioFitnessOnboardingModel.WarningReason);
    atomic_store(result, (unint64_t *)&qword_255ED2220);
  }
  return result;
}

uint64_t sub_231403254(uint64_t a1)
{
  return sub_23140328C(a1, (unint64_t *)&qword_25415DEB0, 0x24BDD3F08, (unint64_t *)&qword_25415DEB8);
}

uint64_t sub_231403270(uint64_t a1)
{
  return sub_23140328C(a1, (unint64_t *)&qword_25415DEC8, 0x24BDD3E80, &qword_255ED1A58);
}

uint64_t sub_23140328C(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v5 = a1;
  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_231414D7C())
      goto LABEL_3;
LABEL_6:
    v7 = MEMORY[0x24BEE4B08];
    if (v6)
      goto LABEL_4;
LABEL_7:
    v12 = -1 << *(_BYTE *)(v5 + 32);
    v34 = v5 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v5 + 56);
    sub_231412A90();
    result = swift_retain();
    v10 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_231404518();
  v7 = sub_231414E00();
  if (!v6)
    goto LABEL_7;
LABEL_4:
  sub_231412A90();
  swift_retain();
  sub_231414D4C();
  sub_2312D3C68(0, a2);
  sub_2312FDC2C(a4, a2);
  result = sub_2314148D8();
  v5 = v36;
  v34 = v37;
  v9 = v38;
  v10 = v39;
  v11 = v40;
LABEL_11:
  v15 = (unint64_t)(v9 + 64) >> 6;
  v16 = v7 + 56;
  while (v5 < 0)
  {
    if (!sub_231414DA0())
      goto LABEL_45;
    sub_2312D3C68(0, a2);
    swift_dynamicCast();
    v20 = v35;
LABEL_36:
    result = sub_231414BFC();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v32 == -1);
      v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v20;
    ++*(_QWORD *)(v7 + 16);
  }
  if (v11)
  {
    v18 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v19 = v18 | (v10 << 6);
LABEL_35:
    v20 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v19);
    v35 = v20;
    v25 = v20;
    goto LABEL_36;
  }
  v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 >= v15)
      goto LABEL_45;
    v22 = *(_QWORD *)(v34 + 8 * v21);
    v23 = v10 + 1;
    if (!v22)
    {
      v23 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_45;
      v22 = *(_QWORD *)(v34 + 8 * v23);
      if (!v22)
      {
        v23 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_45;
        v22 = *(_QWORD *)(v34 + 8 * v23);
        if (!v22)
        {
          v23 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_45;
          v22 = *(_QWORD *)(v34 + 8 * v23);
          if (!v22)
          {
            v23 = v10 + 5;
            if (v10 + 5 >= v15)
              goto LABEL_45;
            v22 = *(_QWORD *)(v34 + 8 * v23);
            if (!v22)
            {
              v24 = v10 + 6;
              while (v15 != v24)
              {
                v22 = *(_QWORD *)(v34 + 8 * v24++);
                if (v22)
                {
                  v23 = v24 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_231366FFC();
              return v7;
            }
          }
        }
      }
    }
LABEL_34:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v23 << 6);
    v10 = v23;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_231403628()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2313DA5B4();
  v1 = sub_23140328C(v0, (unint64_t *)&qword_25415DEB0, 0x24BDD3F08, (unint64_t *)&qword_25415DEB8);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_231403684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t ObjCClassFromMetadata;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_231411D70();
  MEMORY[0x24BDAC7A8](v2);
  v3 = (void *)sub_231413588();
  v4 = objc_msgSend(v3, sel_areAllRequirementsSatisfied);

  if (v4)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v5 = sub_231413780();
    sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
    v6 = sub_231413768();
    v7 = sub_23141498C();
    v28 = a1;
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v29 = v9;
      *(_DWORD *)v8 = 136446466;
      v10 = sub_2314151A8();
      sub_23133180C(v10, v11, &v29);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      sub_23133180C(0xD000000000000017, 0x8000000231433690, &v29);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s.%{public}s]: Creating cardio fitness promo tile configuration", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v9, -1, -1);
      MEMORY[0x2348DE308](v8, -1, -1);
    }

    sub_2314146BC();
    if (qword_25415E610 != -1)
      swift_once();
    v12 = (id)qword_254163058;
    sub_231411D64();
    type metadata accessor for HeartHealthPluginDelegate();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v14 = (void *)objc_opt_self();
    v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_231411374();

    v16 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_231411374();

    v17 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_231411374();

    sub_231411F2C();
    v18 = sub_231411F50();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v28, 0, 1, v18);
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v20 = sub_231413780();
    sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
    v21 = sub_231413768();
    v22 = sub_23141498C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29 = v24;
      *(_DWORD *)v23 = 136446466;
      v25 = sub_2314151A8();
      sub_23133180C(v25, v26, &v29);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      sub_23133180C(0xD000000000000017, 0x8000000231433690, &v29);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s.%{public}s]: Onboarding initiation context not satisfied, no promotion tile", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v24, -1, -1);
      MEMORY[0x2348DE308](v23, -1, -1);
    }

    v27 = sub_231411F50();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 1, 1, v27);
  }
}

uint64_t sub_231403C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (void *)sub_231413588();
  v5 = objc_msgSend(v4, sel_areAllRequirementsSatisfied);

  if ((v5 & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v6 = sub_231413780();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v7 = sub_231413768();
    v8 = sub_23141498C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v23 = v10;
      *(_DWORD *)v9 = 136446466;
      v11 = sub_2314151A8();
      sub_23133180C(v11, v12, &v23);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      sub_23133180C(0xD000000000000026, 0x8000000231433660, &v23);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s.%{public}s]: All requirements met for onboarding promotion, not hiding from discover", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v10, -1, -1);
      MEMORY[0x2348DE308](v9, -1, -1);
    }

    v13 = sub_2314119B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, a1, v13);
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v15 = sub_231413780();
    sub_2312CE3B8(v15, (uint64_t)qword_254162FF0);
    v16 = sub_231413768();
    v17 = sub_23141498C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136446466;
      v20 = sub_2314151A8();
      sub_23133180C(v20, v21, &v23);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      sub_23133180C(0xD000000000000026, 0x8000000231433660, &v23);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v16, v17, "[%{public}s.%{public}s]: Not all requirements for onboarding promotion met, hiding from discover", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v18, -1, -1);
    }

    v22 = sub_2314119B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a2, a1, v22);
    return sub_231411950();
  }
}

uint64_t type metadata accessor for CardioFitnessPromotionFeedItemProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CardioFitnessPromotionActionHandler()
{
  uint64_t result;

  result = qword_25415BFD0;
  if (!qword_25415BFD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231404094()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2314040D0@<X0>(uint64_t a1@<X8>)
{
  return sub_231403684(a1);
}

void sub_2314040F4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_231404104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231403C84(a1, a2);
}

uint64_t sub_231404124()
{
  return sub_2314146BC();
}

uint64_t sub_231404134()
{
  return sub_231403628();
}

uint64_t sub_231404154(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_2314244EC, a1);
  return sub_2314132B8();
}

uint64_t sub_231404198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_2314244EC, a3);
  return sub_2314132AC();
}

unint64_t sub_2314041E4()
{
  return 0xD000000000000012;
}

void sub_231404200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  int v12;
  BOOL v14;
  char v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  _QWORD v21[3];
  uint64_t v22;

  v0 = sub_23141231C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231412F64();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21[-1] - v9;
  sub_231413210();
  sub_231412F40();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_2312CEA5C(v21, v22);
  sub_231412EEC();
  v12 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  v14 = v12 == *MEMORY[0x24BE425F0] || v12 == *MEMORY[0x24BE42650] || v12 == *MEMORY[0x24BE42668];
  v15 = v14;
  if (!v14)
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
  sub_231413210();
  sub_231412F40();
  v11(v8, v4);
  sub_2312CEA5C(v21, v22);
  v16 = (void *)sub_231412EE0();
  v17 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingViewController());
  v18 = sub_231397A1C(v16, v15);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
  sub_231413210();
  v19 = (void *)sub_231412F4C();
  v11(v8, v4);
  objc_msgSend(v19, sel_presentViewController_animated_completion_, v18, 1, 0);

}

id sub_231404434()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessPromotionActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231404468()
{
  return type metadata accessor for CardioFitnessPromotionActionHandler();
}

uint64_t sub_231404470()
{
  return sub_2312F23F0(&qword_25415BFA8, 255, MEMORY[0x24BE42BF8], MEMORY[0x24BE42BE8]);
}

uint64_t sub_2314044A0()
{
  return sub_2312F23F0(&qword_25415BFC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessPromotionActionHandler, (uint64_t)&unk_231424424);
}

uint64_t sub_2314044D4(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415C000, a2, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessPromotionFeedItemProvider, (uint64_t)&unk_231424494);
}

uint64_t sub_231404500()
{
  return MEMORY[0x24BEE1798];
}

uint64_t sub_23140450C()
{
  return MEMORY[0x24BEE1770];
}

void sub_231404518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E450)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_25415DE98);
    sub_2312FDC2C((unint64_t *)&unk_25415DEA0, (unint64_t *)&qword_25415DE98);
    v0 = sub_231414E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E450);
  }
}

_QWORD *sub_2314045A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231418090;
  if (qword_25415E610 != -1)
    swift_once();
  *(_QWORD *)(v5 + 32) = sub_231411374();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = sub_231411374();
  *(_QWORD *)(v5 + 56) = v7;
  v2[3] = a2;
  v2[4] = v5;
  v2[2] = a1;
  return v2;
}

uint64_t sub_2314046D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;

  v23 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v22 - v6;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v22 - v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))((char *)v22 - v13, *MEMORY[0x24BE41298], v8);
  v15 = sub_23140E3A8();
  v22[1] = v16;
  v22[2] = v15;
  v22[0] = sub_23140E320();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_23140E338();
  v17 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
  sub_231412A90();
  sub_231411DD0();
  v18 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  v19 = v23;
  sub_231411ED8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v20 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

uint64_t sub_23140494C@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[5];
  uint64_t v26;

  v26 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v25 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - v6;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v25[0] = sub_231411374();
  v13 = v12;
  v14 = sub_23140E3A8();
  v25[3] = v15;
  v25[4] = v14;
  v16 = sub_23140E320();
  v25[1] = v17;
  v25[2] = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE41278], v8);
  sub_23140E338();
  v18 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 0, 1, v18);
  sub_231411374();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231418090;
  *(_QWORD *)(v19 + 32) = sub_231411374();
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(v19 + 48) = v25[0];
  *(_QWORD *)(v19 + 56) = v13;
  v21 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  v22 = v26;
  sub_231411ED8();
  v23 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
}

uint64_t sub_231404CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[6];
  char *v27;
  uint64_t v28;

  v28 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)v26 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v26 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v26 - v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))((char *)v26 - v12, *MEMORY[0x24BE412A0], v7);
  v14 = sub_23140E3A8();
  v26[4] = v15;
  v26[5] = v14;
  v16 = sub_23140E320();
  v26[2] = v17;
  v26[3] = v16;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_23140E338();
  v18 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 0, 1, v18);
  v26[1] = sub_231411DA0();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231418090;
  if (qword_25415E610 != -1)
    swift_once();
  *(_QWORD *)(v19 + 32) = sub_231411374();
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(v19 + 48) = sub_231411374();
  *(_QWORD *)(v19 + 56) = v21;
  sub_231411DD0();
  v22 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v27, 1, 1, v22);
  v23 = v28;
  sub_231411ED8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v24 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
}

uint64_t sub_231405004(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v11 - v4;
  v6 = sub_231411D1C();
  MEMORY[0x24BDAC7A8](v6);
  sub_231411EB4();
  sub_2314051A4(a2, (uint64_t)v5);
  sub_2314130FC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8];
  swift_allocObject();
  v8 = sub_2314130E4();
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  v11[1] = v8;
  sub_2312F23F0(&qword_255ECCDA0, 255, v7, MEMORY[0x24BE449B0]);
  v9 = sub_2314111D0();
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_2314051A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unsigned int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *v2;
  v6 = sub_231411CF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v46 - v14;
  v16 = (void *)sub_2314055E0(a1);
  if (!v16)
    goto LABEL_12;
  v17 = v16;
  v49 = v5;
  v18 = objc_msgSend(v16, sel_highestPriorityUnsatisfiedRequirement);
  if (!v18)
  {

LABEL_12:
    v31 = sub_2314114AC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  v19 = v18;
  v48 = a2;
  v20 = sub_2314114AC();
  v46 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v47 = v20;
  v46(v15, 1, 1);
  v21 = sub_2314146BC();
  v23 = v22;
  if (v21 == sub_2314146BC() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v26 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      v27 = sub_2314146BC();
      v29 = v28;
      if (v27 == sub_2314146BC() && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
LABEL_18:
        sub_23140E644((uint64_t)v13);
        goto LABEL_15;
      }
      v34 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
        goto LABEL_18;
      v35 = sub_2314146BC();
      v37 = v36;
      if (v35 == sub_2314146BC() && v37 == v38)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v39 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
          v41 = sub_2314146BC();
          v43 = v42;
          if (v41 == sub_2314146BC() && v43 == v44)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v45 = sub_231415070();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v45 & 1) == 0)
            {
              sub_23140E82C();
              goto LABEL_15;
            }
          }
          v40 = (unsigned int *)MEMORY[0x24BE41200];
LABEL_24:
          (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v40, v6);
          sub_231411CE0();

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          sub_2312F0614((uint64_t)v15);
          goto LABEL_16;
        }
      }
      v40 = (unsigned int *)MEMORY[0x24BE411F8];
      goto LABEL_24;
    }
  }
  sub_23140E428((uint64_t)v13);
LABEL_15:

  sub_2312F0614((uint64_t)v15);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v46)(v13, 0, 1, v47);
LABEL_16:
  v33 = v48;
  sub_231406F10((uint64_t)v13, (uint64_t)v15);
  return sub_231406F10((uint64_t)v15, v33);
}

uint64_t sub_2314055E0(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD);
  void (*v2)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(_QWORD, _QWORD);
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  void (*v32)(_QWORD, _QWORD);
  char *v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  void *v53;
  _QWORD v55[3];
  void (*v56)(_QWORD, _QWORD);
  id v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD);

  v2 = v1;
  v4 = sub_23141351C();
  v62 = *(char **)(v4 - 8);
  v63 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231413558();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231413540();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v55 - v14;
  v16 = sub_23141357C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 != *MEMORY[0x24BE45748])
  {
    if (v20 == *MEMORY[0x24BE45700])
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      v46 = v62;
      v45 = v63;
      v47 = v59;
      (*((void (**)(char *, char *, uint64_t))v62 + 4))(v59, v19, v63);
      v64 = v2;
      type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
      sub_2312F23F0(qword_255ED2240, v48, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider, (uint64_t)&unk_23142466C);
      v49 = sub_2314120F4();
      if (v49)
      {
        v50 = (void *)v49;
        sub_231413510();
        v51 = sub_231413564();

        (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
        (*((void (**)(char *, uint64_t))v46 + 1))(v47, v45);
        return v51;
      }
      (*((void (**)(char *, uint64_t))v46 + 1))(v47, v45);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  v62 = v15;
  v63 = v10;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v19, v9);
  v21 = (void *)*MEMORY[0x24BDD2CA0];
  v64 = v2;
  v22 = type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider();
  v24 = sub_2312F23F0(qword_255ED2240, v23, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider, (uint64_t)&unk_23142466C);
  v25 = v21;
  v59 = (char *)sub_2314120F4();
  v26 = v2;
  v64 = v2;
  v55[1] = v24;
  v55[2] = v22;
  v57 = (id)sub_2314120D0();
  v27 = (uint64_t)v25;
  v28 = sub_2312CE090(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v30 = v28[2];
  v29 = v28[3];
  v31 = v30 + 1;
  if (v30 >= v29 >> 1)
    goto LABEL_29;
  while (1)
  {
    v28[2] = v31;
    v58 = (id)v27;
    v28[v30 + 4] = v27;
    v32 = v26;
    v33 = v59;
    v56 = v32;
    if (v59)
    {
      v34 = v28[3];
      v35 = v59;
      if ((uint64_t)(v30 + 2) > (uint64_t)(v34 >> 1))
        v28 = sub_2312CE090((_QWORD *)(v34 > 1), v30 + 2, 1, v28);
      v28[2] = v30 + 2;
      v28[v31 + 4] = v35;
      v32 = v56;
    }
    v36 = v28[2];
    v37 = v28[3];
    v38 = v57;
    if (v36 >= v37 >> 1)
      v28 = sub_2312CE090((_QWORD *)(v37 > 1), v36 + 1, 1, v28);
    v28[2] = v36 + 1;
    v28[v36 + 4] = v38;

    v39 = v28[2];
    if (!v39)
      break;
    v31 = *(_QWORD *)(v63 + 16);
    sub_231412A90();
    v30 = 0;
    LOBYTE(v27) = 0;
    v40 = v39 - 1;
    v41 = v62;
    do
    {
      v44 = (void *)v28[v30 + 4];
      ((void (*)(char *, char *, uint64_t))v31)(v13, v41, v9);
      if ((v27 & 1) != 0)
      {
        v26 = *(void (**)(_QWORD, _QWORD))(v63 + 8);
        v26(v13, v9);
        if (v40 == v30)
        {
          swift_bridgeObjectRelease_n();
LABEL_24:
          v26(v62, v9);
          return 0;
        }
        v27 = 1;
      }
      else
      {
        v42 = v44;
        sub_231413510();
        v43 = (void *)sub_231413564();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
        v27 = (uint64_t)objc_msgSend(v43, sel_areAllRequirementsSatisfied);

        v26 = *(void (**)(_QWORD, _QWORD))(v63 + 8);
        v26(v13, v9);

        if (v40 == v30)
        {
          swift_bridgeObjectRelease_n();
          v32 = v56;
          if ((v27 & 1) == 0)
            goto LABEL_22;
          goto LABEL_24;
        }
      }
      v29 = ++v30;
      v41 = v62;
    }
    while (!__OFADD__(v30, 1));
    __break(1u);
LABEL_29:
    v28 = sub_2312CE090((_QWORD *)(v29 > 1), v31, 1, v28);
  }
  swift_bridgeObjectRelease();
LABEL_22:
  v52 = v62;
  sub_231413510();
  v64 = v32;
  v53 = (void *)sub_2314120D0();
  v51 = sub_231413564();

  (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v9);
  return v51;
}

uint64_t sub_231405B7C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, _QWORD, uint64_t);
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  void (*v129)(char *, _QWORD, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  __int128 v135;
  char *v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;

  v138 = a1;
  v141 = a2;
  v3 = *v2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v142 = (char *)&v123 - v6;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v4);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v133 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v123 - v10;
  v12 = sub_231411EF0();
  v139 = *(_QWORD *)(v12 - 8);
  v140 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v143 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_231411D1C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v131 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v123 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v136 = (char *)&v123 - v21;
  sub_23140E3A8();
  sub_23140E320();
  v22 = *MEMORY[0x24BE41280];
  v132 = v15;
  v23 = *(void (**)(_QWORD))(v15 + 104);
  LODWORD(v124) = v22;
  v137 = v14;
  v125 = (void (*)(char *, _QWORD, uint64_t))v23;
  v23(v20);
  v134 = v3;
  sub_23140E338();
  v24 = sub_231411D70();
  v129 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v130 = v24;
  v129(v11, 0, 1);
  LOBYTE(v14) = sub_231411DB8();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v126 = v25;
  v26 = swift_allocObject();
  v135 = xmmword_231416A30;
  *(_OWORD *)(v26 + 16) = xmmword_231416A30;
  if ((v14 & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
  }
  else if (qword_25415E610 != -1)
  {
    swift_once();
  }
  *(_QWORD *)(v26 + 32) = sub_231411374();
  *(_QWORD *)(v26 + 40) = v27;
  sub_231411DC4();
  v28 = sub_231411B48();
  v127 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v128 = v28;
  v127(v142, 1, 1);
  v29 = v143;
  sub_231411ED8();
  v30 = objc_msgSend(v138, sel_highestPriorityUnsatisfiedRequirement);
  if (v30)
  {
    v31 = v30;
    v32 = sub_2314146BC();
    v34 = v33;
    if (v32 == sub_2314146BC() && v34 == v35)
      goto LABEL_10;
    v43 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
      goto LABEL_15;
    v46 = sub_2314146BC();
    v48 = v47;
    if (v46 == sub_2314146BC() && v48 == v49)
      goto LABEL_10;
    v50 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
      goto LABEL_15;
    v51 = sub_2314146BC();
    v53 = v52;
    if (v51 == sub_2314146BC() && v53 == v54)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
LABEL_15:
      v36 = v139;
      v44 = v29;
      v41 = v140;
      (*(void (**)(char *, uint64_t))(v139 + 8))(v44, v140);

      v42 = 1;
      v38 = v141;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v38, v42, 1, v41);
    }
    v55 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v55 & 1) != 0)
      goto LABEL_15;
    v56 = sub_2314146BC();
    v58 = v57;
    if (v56 == sub_2314146BC() && v58 == v59)
    {
      swift_bridgeObjectRelease_n();
LABEL_27:
      v125(v136, *MEMORY[0x24BE41288], v137);
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = v135;
      if (qword_25415E610 != -1)
        swift_once();
      *(_QWORD *)(v61 + 32) = sub_231411374();
      *(_QWORD *)(v61 + 40) = v62;
      *(_QWORD *)&v135 = sub_231411374();
      v138 = (id)v61;
      goto LABEL_36;
    }
    v60 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
      goto LABEL_27;
    v63 = sub_2314146BC();
    v65 = v64;
    if (v63 == sub_2314146BC() && v65 == v66)
      goto LABEL_32;
    v67 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v67 & 1) != 0)
      goto LABEL_34;
    v76 = sub_2314146BC();
    v78 = v77;
    if (v76 == sub_2314146BC() && v78 == v79)
    {
LABEL_32:
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
    v80 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
    {
LABEL_34:
      v125(v136, v124, v137);
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v135;
      if (qword_25415E610 == -1)
      {
LABEL_35:
        *(_QWORD *)(v68 + 32) = sub_231411374();
        *(_QWORD *)(v68 + 40) = v69;
        *(_QWORD *)&v135 = sub_231411DC4();
        v138 = (id)v68;
LABEL_36:
        v70 = sub_23140E3A8();
        v125 = v71;
        v126 = v70;
        v124 = sub_23140E320();
        v72 = v132;
        v74 = v136;
        v73 = v137;
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v131, v136, v137);
        v75 = v133;
        sub_23140E338();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v129)(v75, 0, 1, v130);
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v127)(v142, 1, 1, v128);
        v38 = v141;
        sub_231411ED8();

        v36 = v139;
        v41 = v140;
        (*(void (**)(char *, uint64_t))(v139 + 8))(v143, v140);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v73);
        goto LABEL_13;
      }
LABEL_64:
      swift_once();
      goto LABEL_35;
    }
    v81 = sub_2314146BC();
    v83 = v82;
    if (v81 == sub_2314146BC() && v83 == v84)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_44;
    }
    v85 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v85 & 1) != 0)
    {
LABEL_44:
      v125(v136, v124, v137);
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v135;
      if (qword_25415E610 == -1)
        goto LABEL_35;
      goto LABEL_64;
    }
    v86 = sub_2314146BC();
    v88 = v87;
    if (v86 == sub_2314146BC() && v88 == v89)
    {
      swift_bridgeObjectRelease_n();
LABEL_50:

      v36 = v139;
      v37 = *(void (**)(uint64_t, char *, uint64_t))(v139 + 32);
      v38 = v141;
      v39 = v141;
      v40 = v143;
      goto LABEL_12;
    }
    v90 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v90 & 1) != 0)
      goto LABEL_50;
    v91 = sub_2314146BC();
    v93 = v92;
    if (v91 == sub_2314146BC() && v93 == v94)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_55;
    }
    v95 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v95 & 1) != 0)
    {
LABEL_55:
      v125(v136, v124, v137);
      v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = v135;
      if (qword_25415E610 == -1)
        goto LABEL_62;
      goto LABEL_78;
    }
    v97 = sub_2314146BC();
    v99 = v98;
    if (v97 == sub_2314146BC() && v99 == v100)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_61;
    }
    v101 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v101 & 1) != 0)
    {
LABEL_61:
      v125(v136, v124, v137);
      v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = v135;
      if (qword_25415E610 == -1)
      {
LABEL_62:
        *(_QWORD *)(v96 + 32) = sub_231411374();
        *(_QWORD *)(v96 + 40) = v102;
        v138 = (id)v96;
        v103 = sub_231411DC4();
LABEL_63:
        *(_QWORD *)&v135 = v103;
        goto LABEL_36;
      }
LABEL_78:
      swift_once();
      goto LABEL_62;
    }
    v104 = sub_2314146BC();
    v106 = v105;
    if (v104 == sub_2314146BC() && v106 == v107)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v108 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v108 & 1) == 0)
      {
        v112 = sub_2314146BC();
        v114 = v113;
        if (v112 == sub_2314146BC() && v114 == v115)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v116 = sub_231415070();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v116 & 1) == 0)
            goto LABEL_50;
        }
        v109 = sub_231411E00();
        v111 = v117;
        if (qword_25415E610 == -1)
          goto LABEL_76;
LABEL_80:
        swift_once();
LABEL_76:
        sub_231411374();
        sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v118 = swift_allocObject();
        *(_OWORD *)(v118 + 16) = v135;
        *(_QWORD *)(v118 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v118 + 64) = sub_2312D6E84();
        *(_QWORD *)(v118 + 32) = v109;
        *(_QWORD *)(v118 + 40) = v111;
        v119 = sub_231414698();
        v121 = v120;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v125(v136, *MEMORY[0x24BE41288], v137);
        v122 = swift_allocObject();
        *(_OWORD *)(v122 + 16) = v135;
        *(_QWORD *)(v122 + 32) = v119;
        *(_QWORD *)(v122 + 40) = v121;
        v138 = (id)v122;
        v103 = sub_231411DDC();
        goto LABEL_63;
      }
    }
    v109 = sub_231411DF4();
    v111 = v110;
    if (qword_25415E610 == -1)
      goto LABEL_76;
    goto LABEL_80;
  }
  v36 = v139;
  v37 = *(void (**)(uint64_t, char *, uint64_t))(v139 + 32);
  v38 = v141;
  v39 = v141;
  v40 = v29;
LABEL_12:
  v41 = v140;
  v37(v39, v40, v140);
LABEL_13:
  v42 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v38, v42, 1, v41);
}

uint64_t sub_231406B40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider()
{
  return objc_opt_self();
}

uint64_t sub_231406B8C()
{
  uint64_t v0;
  id v1;

  v0 = *MEMORY[0x24BDD2CA0];
  v1 = (id)*MEMORY[0x24BDD2CA0];
  return v0;
}

uint64_t sub_231406BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_2314046D8(a1);
}

uint64_t sub_231406BD8@<X0>(uint64_t a1@<X8>)
{
  return sub_23140494C(a1);
}

uint64_t sub_231406BF8@<X0>(uint64_t a1@<X8>)
{
  return sub_231404CA4(a1);
}

uint64_t sub_231406C1C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_231405B7C(a1, a2);
}

uint64_t sub_231406C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE41610];
  v3 = sub_231411E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_231406C84(uint64_t a1, uint64_t a2)
{
  return sub_231405004(a1, a2);
}

uint64_t sub_231406CA4()
{
  MEMORY[0x2348DE248](&unk_23142466C);
  return sub_2314120B8();
}

uint64_t sub_231406CF0(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_2314245F4, a1);
  return sub_231412118();
}

uint64_t sub_231406D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_2314245F4, a3);
  return sub_23141210C();
}

unint64_t sub_231406D80()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_231406D9C(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415CA98, a2, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider, (uint64_t)&unk_2314245AC);
}

uint64_t sub_231406DC8()
{
  return sub_2312F23F0(&qword_25415CA58, 255, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramFeatureStatusActionHandler, (uint64_t)&unk_23141B1B8);
}

uint64_t sub_231406DF8(uint64_t a1, uint64_t a2)
{
  return sub_2312F23F0(&qword_25415C070, a2, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingHealthChecklistFeedItemProvider, (uint64_t)&unk_2314245F4);
}

uint64_t sub_231406E24()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_electrocardiogramType);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_231406F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_231406F6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23141177C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void sub_231406FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_23140703C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_23140709C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_231407104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_231407160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_2314071C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2314071D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23141177C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23140724C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231407258(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23141177C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartSleepQuery()
{
  uint64_t result;

  result = qword_255ED22A0;
  if (!qword_255ED22A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140730C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23141177C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_231407380(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  id v11;
  void *v12;

  objc_msgSend(*(id *)(a4 + *(int *)(type metadata accessor for AFibBurdenPDFChartSleepQuery() + 20)), sel_stopQuery_, a1);
  if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(a5 + 64) + 40) = a2;
    sub_231412A90();
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      v9 = a3;
    }
    else
    {
      type metadata accessor for HKError(0);
      sub_2313FA2D4(MEMORY[0x24BEE4AF8]);
      sub_231353F8C();
      sub_2314113EC();
      v9 = v12;
    }
    sub_2312D3C14();
    swift_allocError();
    *v10 = v9;
    v11 = a3;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_23140749C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_255ED22E0 + dword_255ED22E0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2312DBC38;
  return v5(a1);
}

uint64_t sub_231407500(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_2314080D8();
    v5 = sub_2314147A0();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_231407590(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_231411248();
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = swift_task_alloc();
  sub_231407EF0();
  v2[24] = swift_task_alloc();
  v4 = type metadata accessor for AFibBurdenPDFChartPoint();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v5 = type metadata accessor for AFibBurdenPDFChartSleepQuery();
  v2[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[30] = v6;
  v2[31] = *(_QWORD *)(v6 + 64);
  v2[32] = swift_task_alloc();
  v7 = sub_231411608();
  v2[33] = v7;
  v2[34] = *(_QWORD *)(v7 - 8);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  return swift_task_switch();
}

void sub_2314076C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (*v5)(uint64_t, uint64_t);
  void *v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  char *v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[38];
  v3 = v0[33];
  v2 = v0[34];
  sub_231411230();
  v4 = (void *)sub_2314115C0();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[39] = v5;
  v5(v1, v3);
  v6 = (void *)sub_2314116F8();
  v7 = objc_msgSend(v4, sel_hk_morningIndexWithCalendar_, v6);

  sub_23141120C();
  v8 = (void *)sub_2314115C0();
  v5(v1, v3);
  v9 = (void *)sub_2314116F8();
  v10 = (char *)objc_msgSend(v8, sel_hk_morningIndexWithCalendar_, v9);

  v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = __OFSUB__(v11, v7);
  v13 = v11 - v7;
  if (v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v12 = __OFADD__(v13, 1);
  v14 = v13 + 1;
  if (!v12)
  {
    v0[16] = v7;
    v0[17] = v14;
    swift_task_switch();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2314077F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v19;

  v1 = v0[16];
  v2 = v0[17];
  v4 = v0[31];
  v3 = v0[32];
  v5 = v0[30];
  v19 = v0[29];
  v6 = v0[20];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2314079F8;
  v7 = swift_continuation_init();
  sub_231407F44(v6, v3);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = (v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_allocObject();
  sub_2312EE5FC(v3, v10 + v8, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartSleepQuery);
  *(_QWORD *)(v10 + v9) = v7;
  v11 = objc_allocWithZone(MEMORY[0x24BDD3F98]);
  v0[10] = MEMORY[0x24BDAC760];
  v0[14] = sub_23140801C;
  v0[15] = v10;
  v0[11] = 1107296256;
  v0[12] = sub_231407500;
  v0[13] = &unk_25002B6C0;
  v12 = _Block_copy(v0 + 10);
  v13 = objc_msgSend(v11, sel_initWithMorningIndexRange_ascending_limit_options_resultsHandler_, v1, v2, 1, 0, 10, v12);
  _Block_release(v12);
  swift_release();
  v14 = objc_allocWithZone(MEMORY[0x24BDD3F90]);
  v15 = (void *)sub_23141468C();
  v16 = objc_msgSend(v14, sel_initWithIdentifier_mode_, v15, 1);

  objc_msgSend(v13, sel_setCacheSettings_, v16);
  v17 = (void *)sub_2314116F8();
  objc_msgSend(v13, sel_setCalendarOverrides_, v17);

  objc_msgSend(*(id *)(v6 + *(int *)(v19 + 20)), sel_executeQuery_, v13);
  return swift_continuation_await();
}

uint64_t sub_2314079F8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    *(_QWORD *)(v1 + 320) = *(_QWORD *)(v1 + 144);
    return swift_task_switch();
  }
}

uint64_t sub_231407AFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;

  v1 = *(_QWORD *)(v0 + 320);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_231412A90();
    if (v2)
      goto LABEL_3;
LABEL_20:
    v43 = MEMORY[0x24BEE4AF8];
LABEL_21:
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v43);
  }
  sub_231412A90();
  result = sub_231414F08();
  v2 = result;
  if (!result)
    goto LABEL_20;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v37 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 208);
    v34 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 200);
    v6 = v1 & 0xC000000000000001;
    v32 = *(_QWORD *)(v0 + 320) + 32;
    v43 = MEMORY[0x24BEE4AF8];
    v7 = &selRef_irregularHeartRhythmFooterLinkURL;
    v38 = v2;
    v36 = v5;
    v33 = v1 & 0xC000000000000001;
    do
    {
      if (v6)
        v8 = (id)MEMORY[0x2348DD81C](v4, *(_QWORD *)(v0 + 320));
      else
        v8 = *(id *)(v32 + 8 * v4);
      v9 = v8;
      objc_msgSend(v8, v7[209], v32);
      if (v10 <= 2.22044605e-16)
      {
        v25 = *(_QWORD *)(v0 + 192);
        v26 = *(_QWORD *)(v0 + 200);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v25, 1, 1, v26);

        v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v25, 1, v26);
      }
      else
      {
        v11 = *(_QWORD *)(v0 + 304);
        v12 = *(_QWORD *)(v0 + 288);
        v13 = *(_QWORD *)(v0 + 296);
        v14 = *(_QWORD *)(v0 + 280);
        v15 = *(_QWORD *)(v0 + 264);
        v16 = *(_QWORD *)(v0 + 192);
        v41 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
        v42 = *(_QWORD *)(v0 + 200);
        v39 = *(_QWORD *)(v0 + 184);
        v40 = *(_QWORD *)(v0 + 168);
        v17 = objc_msgSend((id)objc_opt_self(), sel_sleepDaySummaryNoonAlignedXValue_, v9);
        sub_2314115D8();

        v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
        v18(v13, v11, v15);
        objc_msgSend(v9, sel_sleepDuration);
        v20 = v19;
        v18(v12, v13, v15);
        v18(v14, v13, v15);
        v2 = v38;
        sub_231411218();
        v41(v13, v15);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v16, v39, v40);
        *(_QWORD *)(v16 + *(int *)(v35 + 20)) = v20;
        *(_QWORD *)(v16 + *(int *)(v35 + 24)) = MEMORY[0x24BEE4B08];
        v21 = v11;
        v5 = v36;
        v22 = v15;
        v7 = &selRef_irregularHeartRhythmFooterLinkURL;
        v41(v21, v22);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v16, 0, 1, v42);

        v23 = v16;
        v6 = v33;
        v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v23, 1, v42);
      }
      if (v24 == 1)
      {
        sub_23140809C(*(_QWORD *)(v0 + 192));
      }
      else
      {
        v27 = *(_QWORD *)(v0 + 216);
        v28 = *(_QWORD *)(v0 + 224);
        sub_2312EE5FC(*(_QWORD *)(v0 + 192), v28, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
        sub_2312EE5FC(v28, v27, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v43 = sub_2312CDBA0(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
        v30 = *(_QWORD *)(v43 + 16);
        v29 = *(_QWORD *)(v43 + 24);
        if (v30 >= v29 >> 1)
          v43 = sub_2312CDBA0(v29 > 1, v30 + 1, 1, v43);
        v31 = *(_QWORD *)(v0 + 216);
        *(_QWORD *)(v43 + 16) = v30 + 1;
        sub_2312EE5FC(v31, v43+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_231407EF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECDF70)
  {
    type metadata accessor for AFibBurdenPDFChartPoint();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, &qword_255ECDF70);
  }
}

uint64_t sub_231407F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartSleepQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231407F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for AFibBurdenPDFChartSleepQuery();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_23140801C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartSleepQuery() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_231407380(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_231408084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231408094()
{
  return swift_release();
}

uint64_t sub_23140809C(uint64_t a1)
{
  uint64_t v2;

  sub_231407EF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2314080D8()
{
  unint64_t result;

  result = qword_255ED22E8;
  if (!qword_255ED22E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED22E8);
  }
  return result;
}

void sub_231408114(char a1)
{
  __asm { BR              X10 }
}

id sub_231408140()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingStartViewController());
  return sub_2312D2120();
}

uint64_t sub_231408204()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardioFitnessOnboardingViewControllerFactory()
{
  return objc_opt_self();
}

uint64_t sub_231408258(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  __int128 v16[2];
  _QWORD v17[5];

  v17[3] = sub_231413048();
  v17[4] = MEMORY[0x24BE447F0];
  v17[0] = a2;
  *(_QWORD *)&a3[qword_255ECC848 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a3[qword_255ECC850] = 0;
  sub_2312DF850((uint64_t)v17, (uint64_t)v16);
  type metadata accessor for ConfirmDetailsModel();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit();
  v7 = v6 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  v8 = sub_231412880();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker) = 4;
  sub_2312DFB68(v16, v6 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter);
  type metadata accessor for ConfirmDetailsDataSource();
  swift_allocObject();
  v9 = a3;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v9[qword_255ECC858] = sub_231394500(a1, v6);

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v13 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  swift_retain();
  v14 = sub_231412F34();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  *(_QWORD *)(*(_QWORD *)(v14 + qword_255ECC858) + qword_255ECF860 + 8) = &off_250021F68;
  swift_unknownObjectWeakAssign();
  return v14;
}

id sub_231408568()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramUpdateTileView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void (*sub_2314085FC(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_231408568();
  return sub_231408630;
}

void sub_231408630(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView) = v2;

}

uint64_t sub_231408648()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  objc_class *updated;
  id v10;
  void *v11;
  objc_super v13;

  v1 = v0;
  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413750();
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2312C8000, v6, v7, "ElectrocardiogramUpdateViewController loaded", v8, 2u);
    MEMORY[0x2348DE308](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  updated = (objc_class *)type metadata accessor for ElectrocardiogramUpdateViewController();
  v13.receiver = v1;
  v13.super_class = updated;
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  sub_231408848();
  v10 = sub_231408568();
  v11 = (void *)sub_231412058();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_231412A6C();

  return swift_release();
}

void sub_2314087C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2348DE3BC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_231408C20();

  }
}

void sub_231408848()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = sub_231408568();
  objc_msgSend(v2, sel_addSubview_, v3);

  sub_2312D3AD4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231419E70;
  v5 = sub_231408568();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_topAnchor);

  v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v4 + 32) = v10;
  v11 = sub_231408568();
  v12 = objc_msgSend(v11, sel_bottomAnchor);

  v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_bottomAnchor);

  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v4 + 40) = v16;
  v17 = sub_231408568();
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v0, sel_view);
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_leadingAnchor);

  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v4 + 48) = v22;
  v23 = sub_231408568();
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v0, sel_view);
  if (v25)
  {
    v26 = v25;
    v27 = (void *)objc_opt_self();
    v28 = objc_msgSend(v26, sel_trailingAnchor);

    v29 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v28);
    *(_QWORD *)(v4 + 56) = v29;
    sub_2314147B8();
    sub_2312EA780();
    v30 = (id)sub_231414788();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_activateConstraints_, v30);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_231408C20()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27[3];
  uint64_t v28;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_parentViewController);
  if (v2)
  {
    v3 = v2;
    v4 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context];
    swift_beginAccess();
    sub_231310E3C(v4, (uint64_t)v27);
    v5 = v28;
    if (v28)
    {
      v6 = sub_2312CEA5C(v27, v28);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x24BDAC7A8](v6);
      v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = (void *)sub_231412EE0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      if (qword_255ECAAA0 != -1)
        swift_once();
      LOBYTE(v24) = 1;
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C0A0]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_isSampleInteractive_, 1, 0, v10, qword_255ED2EF8, 3, v1, v24);

      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v27);
      v12 = OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_onboardingManager;
      v13 = *(void **)&v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_onboardingManager];
      *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_onboardingManager] = v11;

      v14 = *(void **)&v1[v12];
      if (v14)
      {
        v15 = objc_msgSend(v14, sel_onboardingNavigationController);
        if (v15)
        {
          v16 = v15;
          -[NSObject setModalInPresentation:](v15, sel_setModalInPresentation_, 1);
          objc_msgSend(v3, sel_presentViewController_animated_completion_, v16, 1, 0);
LABEL_12:

          return;
        }
      }
      if (qword_25415DF98 != -1)
        swift_once();
      v17 = sub_231413780();
      sub_2312CE3B8(v17, (uint64_t)qword_254162FF0);
      v18 = v1;
      v16 = sub_231413768();
      v19 = sub_231414980();
      if (os_log_type_enabled(v16, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        v27[0] = v21;
        *(_DWORD *)v20 = 136446466;
        ObjectType = swift_getObjectType();
        sub_23140A184();
        v22 = sub_2314146E0();
        ObjectType = sub_23133180C(v22, v23, v27);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2082;
        ObjectType = sub_23133180C(0xD000000000000021, 0x8000000231433BE0, v27);
        sub_231414CBC();
        _os_log_impl(&dword_2312C8000, v16, v19, "[%{public}s.%{public}s] On-boarding navigation controller not initialized", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v21, -1, -1);
        MEMORY[0x2348DE308](v20, -1, -1);
        goto LABEL_12;
      }

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_231408FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  _BYTE v10[24];
  _QWORD v11[3];
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context;
  swift_beginAccess();
  result = sub_231310E3C(v1, (uint64_t)v11);
  if (v12)
  {
    v3 = (void *)objc_opt_self();
    v4 = v12;
    v5 = sub_2312CEA5C(v11, v12);
    v6 = *(_QWORD *)(v4 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v6 + 16))(v8);
    v9 = (void *)sub_231412EE0();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v4);
    objc_msgSend(v3, sel_markElectrocardiogramUpdateAsViewed_, v9);

    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2314090E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *p_ObjectType;
  uint64_t v38;
  id v39;
  _QWORD v40[3];
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;

  ObjectType = swift_getObjectType();
  sub_2313EFB10();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&ObjectType - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231412DA8();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&ObjectType - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231412A0C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412A00();
  v39 = objc_msgSend((id)objc_opt_self(), sel_electrocardiogramType, ObjectType);
  sub_2314149F8();
  v11 = v0 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context;
  swift_beginAccess();
  result = sub_231310E3C(v11, (uint64_t)v44);
  v13 = v45;
  if (!v45)
  {
    __break(1u);
    goto LABEL_6;
  }
  v34 = v8;
  v35 = v4;
  v36 = v7;
  v14 = sub_2312CEA5C(v44, v45);
  p_ObjectType = &ObjectType;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&ObjectType - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v17);
  sub_231412EE0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
  result = sub_231310E3C(v11, (uint64_t)v42);
  v18 = v43;
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v19 = sub_2312CEA5C(v42, v43);
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&ObjectType - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v22);
  v23 = (void *)sub_231412EE0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
  v24 = objc_msgSend(v23, sel_profileIdentifier);

  v25 = sub_23141231C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v3, 1, 1, v25);
  sub_231412508();

  sub_2312CEBD4((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2313EFB10);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  result = sub_231310E3C(v11, (uint64_t)v40);
  v26 = v41;
  if (v41)
  {
    v27 = sub_2312CEA5C(v40, v41);
    v28 = *(_QWORD *)(v26 - 8);
    MEMORY[0x24BDAC7A8](v27);
    v30 = (char *)&ObjectType - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v30);
    sub_231412EF8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    sub_231412D6C();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v40);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v44);
    v31 = v39;
    v32 = sub_2314129F4();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v35);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
    return v32;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_231409788(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  objc_super v16;

  v6 = &v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_onboardingManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView] = 0;
  v7 = &v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_detail];
  v8 = *MEMORY[0x24BE43138];
  v9 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = &v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_deselectionBehavior];
  v3[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_deselectionBehavior] = 1;
  v11 = *MEMORY[0x24BE435F8];
  v12 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  if (a2)
  {
    v13 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for ElectrocardiogramUpdateViewController();
  v14 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, v13, a3);

  return v14;
}

id sub_231409920(void *a1)
{
  _BYTE *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_onboardingManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_detail];
  v5 = *MEMORY[0x24BE43138];
  v6 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = &v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_deselectionBehavior];
  v1[OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_deselectionBehavior] = 1;
  v8 = *MEMORY[0x24BE435F8];
  v9 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for ElectrocardiogramUpdateViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_231409A44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramUpdateViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231409B18()
{
  return type metadata accessor for ElectrocardiogramUpdateViewController();
}

uint64_t type metadata accessor for ElectrocardiogramUpdateViewController()
{
  uint64_t result;

  result = qword_255ED23F0;
  if (!qword_255ED23F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231409B5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231412718();
  if (v1 <= 0x3F)
  {
    result = sub_231412970();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_231409BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context;
  swift_beginAccess();
  return sub_231310E3C(v3, a1);
}

uint64_t sub_231409C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_context;
  swift_beginAccess();
  sub_23140A140(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_231409CA4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_231409CF8()
{
  sub_231408C20();
}

uint64_t sub_231409D18@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_deselectionBehavior, (uint64_t (*)(_QWORD))MEMORY[0x24BE43608], a1);
}

id sub_231409D2C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_231408568();
  *a1 = result;
  return result;
}

void sub_231409D54(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v3 = *(void **)(*v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView);
  *(_QWORD *)(*v1 + OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController____lazy_storage___tileView) = v2;

}

void (*sub_231409D70(id **a1))(_QWORD *)
{
  id *v2;

  v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2314085FC(v2);
  return sub_23137A1B8;
}

uint64_t sub_231409DB8(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_231424988, a1);
  return sub_231412FAC();
}

uint64_t sub_231409DFC@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart37ElectrocardiogramUpdateViewController_detail, (uint64_t (*)(_QWORD))MEMORY[0x24BE43140], a1);
}

uint64_t sub_231409E10(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_231424988, a1);
  MEMORY[0x2348DE248](&unk_2314249C8, a1);
  return sub_231412FA0() & 1;
}

uint64_t sub_231409E70(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_2314248B8, a1);
  return sub_2314132F4();
}

uint64_t sub_231409EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_2314248B8, a3);
  return sub_231413300();
}

void (*sub_231409EF0(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  MEMORY[0x2348DE248](&unk_2314248B8, a2);
  v4[4] = sub_2314132E8();
  return sub_23137A1B8;
}

uint64_t sub_231409F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348DE248](&unk_2314248B8, a3);
  return sub_23141330C();
}

uint64_t sub_23140A064()
{
  return sub_23140A100(&qword_255ED2400, (uint64_t)&unk_2314247F0);
}

uint64_t sub_23140A088()
{
  return sub_23140A100(&qword_255ED2408, (uint64_t)&unk_2314247C8);
}

uint64_t sub_23140A0AC()
{
  return MEMORY[0x24BE42038];
}

uint64_t sub_23140A0B8()
{
  return sub_23140A100(&qword_255ED2410, (uint64_t)&unk_231424828);
}

uint64_t sub_23140A0DC()
{
  return sub_23140A100(&qword_255ED2418, (uint64_t)&unk_231424878);
}

uint64_t sub_23140A100(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t updated;

  result = *a1;
  if (!result)
  {
    updated = type metadata accessor for ElectrocardiogramUpdateViewController();
    result = MEMORY[0x2348DE248](a2, updated);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23140A140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313EF504();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23140A184()
{
  unint64_t result;

  result = qword_255ED2430;
  if (!qword_255ED2430)
  {
    type metadata accessor for ElectrocardiogramUpdateViewController();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED2430);
  }
  return result;
}

uint64_t sub_23140A1BC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23140A1E0()
{
  uint64_t v0;

  sub_2314087C4(v0);
}

uint64_t type metadata accessor for AFibBurdenOnboardingSetupCompleteViewController()
{
  uint64_t result;

  result = qword_255ED2458;
  if (!qword_255ED2458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140A224()
{
  return swift_initClassMetadata2();
}

id sub_23140A26C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v15;
  _BYTE v17[40];
  _BYTE v18[40];

  *(_QWORD *)(v2 + qword_255ED2450 + 8) = 0;
  swift_unknownObjectWeakInit();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  if (qword_25415E610 != -1)
    swift_once();
  v4 = (id)qword_254163058;
  v5 = (void *)sub_23141468C();
  v6 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v5, v4, 0xE000000000000000);

  sub_2312DF850(a1, (uint64_t)v18);
  sub_2312DF850((uint64_t)a2, (uint64_t)v17);
  sub_2312D6D30();
  v7 = (id)*MEMORY[0x24BDD3378];
  MEMORY[0x2348DD384]();
  LOBYTE(v15) = 1;
  v8 = (void *)sub_23141327C();
  v9 = v7;
  v10 = v8;
  v11 = (void *)MEMORY[0x2348DD384](v9);
  sub_2312CEA5C(a2, a2[3]);
  v12 = objc_msgSend(v11, sel_identifier, v15);
  sub_2314146BC();

  v13 = sub_231411B18();
  swift_bridgeObjectRelease();
  if (v13 != 2 && (v13 & 1) == 0)
  {
    sub_2312CEA5C(a2, a2[3]);
    sub_231411B24();
  }

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a2);
  return v10;
}

void sub_23140A568()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for AFibBurdenOnboardingSetupCompleteViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  sub_2312E42E4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_231418090;
  *(_QWORD *)(v2 + 32) = 0xD000000000000014;
  *(_QWORD *)(v2 + 40) = 0x8000000231427740;
  *(_QWORD *)(v2 + 48) = 0x6974656C706D6F43;
  *(_QWORD *)(v2 + 56) = 0xEA00000000006E6FLL;
  v3 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v2);
  v3[2] = 3;
  v3[8] = 0x74747542656E6F44;
  v3[9] = 0xEA00000000006E6FLL;
  v4 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v5 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v5)
  {
    sub_2314146BC();

    swift_arrayDestroy();
    v6 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();

    v7 = objc_msgSend(v0, sel_navigationItem);
    objc_msgSend(v7, sel_setHidesBackButton_, 1);

  }
  else
  {
    swift_arrayDestroy();
    __break(1u);
  }
}

void sub_23140A7C0(void *a1)
{
  id v1;

  v1 = a1;
  sub_23140A568();

}

uint64_t sub_23140A7F4(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ED2450];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ED2450]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 8);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_23140A884(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ED2450];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ED2450]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 16);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

void sub_23140A914()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23140A940()
{
  uint64_t v0;

  return sub_2312D2854(v0 + qword_255ED2450);
}

id sub_23140A950()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingSetupCompleteViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23140A984(uint64_t a1)
{
  return sub_2312D2854(a1 + qword_255ED2450);
}

uint64_t sub_23140A994()
{
  return type metadata accessor for AFibBurdenOnboardingSetupCompleteViewController();
}

uint64_t sub_23140A99C()
{
  return 6;
}

uint64_t sub_23140A9A4()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + qword_255ED2450);
}

uint64_t sub_23140A9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + qword_255ED2450 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

uint64_t type metadata accessor for AFibFeaturesOnboardingViewController()
{
  uint64_t result;

  result = qword_255ED24B0;
  if (!qword_255ED24B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140AA48()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23140AA90()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  *(_QWORD *)(v0 + qword_255ED24A8 + 8) = 0;
  swift_unknownObjectWeakInit();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  if (qword_25415E610 != -1)
    swift_once();
  v1 = (id)qword_254163058;
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1, 0xE000000000000000);

  if (!v3)
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  sub_231411374();
  return sub_231413258();
}

void sub_23140ACB4()
{
  void *v0;
  uint64_t ObjectType;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v11;

  ObjectType = swift_getObjectType();
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AFibFeaturesOnboardingViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  objc_msgSend(v0, sel_hxui_addCancelButton);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_23141468C();
  v4 = objc_msgSend(v0, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v2, v3, 0xE000000000000000);

  sub_231411374();
  v5 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend(v0, sel_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_, v5, 1, v6, 0xE000000000000000);

  v10 = v4;
  v8 = v4;
  v9 = v7;
  sub_23140AEC4((uint64_t)&v10, ObjectType);
  v10 = v9;
  sub_23140AEC4((uint64_t)&v10, ObjectType);

}

uint64_t sub_23140AEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  id v20;
  void (*v21)(_QWORD *, _QWORD);
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  v23 = a2;
  sub_2312D4A68();
  v3 = v2;
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23140B444();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = sub_231414C74();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231414C8C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_23140B498((uint64_t)v11);
    if (qword_25415B6D8 != -1)
      swift_once();
    v16 = sub_2312CE3B8(v3, (uint64_t)qword_254162EE8);
    v17 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v5, v16, v3);
    *(_QWORD *)(swift_allocObject() + 16) = v23;
    v25[0] = 0;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v19 = (void *)objc_opt_self();
    v20 = objc_msgSend(v19, sel_secondarySystemFillColor);
    v21 = (void (*)(_QWORD *, _QWORD))sub_231414C2C();
    sub_231413828();
    v21(v25, 0);
    v22 = objc_msgSend(v19, sel_tintColor);
    sub_231414C50();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    sub_231414C98();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_23140B180()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_23140B24C(void *a1)
{
  id v1;

  v1 = a1;
  sub_23140ACB4();

}

uint64_t sub_23140B280(char *a1)
{
  uint64_t result;
  char *v3;

  result = MEMORY[0x2348DE3BC](&a1[qword_255ED24A8]);
  if (result)
  {
    v3 = a1;
    sub_2313D053C();

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_23140B2D4(char *a1, uint64_t a2)
{
  return sub_23140B2E4(a1, a2, 1);
}

uint64_t sub_23140B2DC(char *a1, uint64_t a2)
{
  return sub_23140B2E4(a1, a2, 0);
}

uint64_t sub_23140B2E4(char *a1, uint64_t a2, char a3)
{
  uint64_t result;
  char *v6;

  result = MEMORY[0x2348DE3BC](&a1[qword_255ED24A8]);
  if (result)
  {
    v6 = a1;
    sub_2313CFA84(a3);

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_23140B34C()
{
  uint64_t v0;
  uint64_t result;

  result = MEMORY[0x2348DE3BC](v0 + qword_255ED24A8);
  if (result)
  {
    sub_2313D0154();
    return sub_2314130CC();
  }
  return result;
}

void sub_23140B390()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23140B3BC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23140B3E8()
{
  uint64_t v0;

  return sub_2312D2854(v0 + qword_255ED24A8);
}

id sub_23140B3F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibFeaturesOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23140B42C(uint64_t a1)
{
  return sub_2312D2854(a1 + qword_255ED24A8);
}

uint64_t sub_23140B43C()
{
  return type metadata accessor for AFibFeaturesOnboardingViewController();
}

void sub_23140B444()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD700)
  {
    sub_231414C74();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD700);
  }
}

uint64_t sub_23140B498(uint64_t a1)
{
  uint64_t v2;

  sub_23140B444();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23140B4D4()
{
  return swift_deallocObject();
}

uint64_t sub_23140B4E4()
{
  return sub_23140B180();
}

uint64_t type metadata accessor for HeartAdvertisableFeatureSourceProvider()
{
  return objc_opt_self();
}

uint64_t sub_23140B50C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for HeartAdvertisableFeatureSourceProvider();
  result = swift_allocObject();
  *a1 = result;
  return result;
}

char *sub_23140B540(void *a1, void *a2, uint64_t a3, char *a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  objc_super v15;
  _QWORD v16[5];

  v16[4] = &off_250023018;
  v16[3] = type metadata accessor for AdvertisableFeatureHeartSettingsProvider();
  v16[0] = a3;
  v8 = &a4[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_identifier];
  v9 = *MEMORY[0x24BE412E0];
  v10 = sub_231411D28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_healthStore] = a1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue] = a2;
  sub_2312DF850((uint64_t)v16, (uint64_t)&a4[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider]);
  v15.receiver = a4;
  v15.super_class = (Class)type metadata accessor for BradycardiaAdvertisableFeatureSource();
  v11 = a1;
  v12 = a2;
  v13 = (char *)objc_msgSendSuper2(&v15, sel_init);
  objc_msgSend(*(id *)(*sub_2312CEA5C(&v13[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_addHeartRhythmAvailabilityObserver_, v13);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v16);
  return v13;
}

char *sub_23140B68C(void *a1, void *a2, uint64_t a3, char *a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  objc_super v15;
  _QWORD v16[5];

  v16[4] = &off_250023018;
  v16[3] = type metadata accessor for AdvertisableFeatureHeartSettingsProvider();
  v16[0] = a3;
  v8 = &a4[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_identifier];
  v9 = *MEMORY[0x24BE412E8];
  v10 = sub_231411D28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_healthStore] = a1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue] = a2;
  sub_2312DF850((uint64_t)v16, (uint64_t)&a4[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider]);
  v15.receiver = a4;
  v15.super_class = (Class)type metadata accessor for TachycardiaAdvertisableFeatureSource();
  v11 = a1;
  v12 = a2;
  v13 = (char *)objc_msgSendSuper2(&v15, sel_init);
  objc_msgSend(*(id *)(*sub_2312CEA5C(&v13[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_addHeartRhythmAvailabilityObserver_, v13);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v16);
  return v13;
}

uint64_t sub_23140B7D8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void *, void *, uint64_t, id))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t (*v25)(void *, void *, uint64_t, id);
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  v24 = a2;
  v25 = a3;
  v4 = sub_231411F8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_231411F98();
  v9 = (void *)sub_231411FC8();
  v10 = (void *)sub_231411F98();
  sub_231411F80();
  v11 = type metadata accessor for AdvertisableFeatureHeartSettingsProvider();
  v12 = swift_allocObject();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C70]), sel_initWithHealthStore_, v10);

  *(_QWORD *)(v12 + 16) = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + OBJC_IVAR____TtC5Heart40AdvertisableFeatureHeartSettingsProvider_activeDeviceSource, v7, v4);
  v27 = v11;
  v28 = &off_250023018;
  v26[0] = v12;
  v14 = objc_allocWithZone((Class)v24(0));
  v15 = sub_2312DEF74((uint64_t)v26, v27);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = *v17;
  swift_retain();
  v20 = v25(v8, v9, v19, v14);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v26);
  swift_release();
  v21 = sub_231411FD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
  return v20;
}

uint64_t sub_23140B9B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v25 = a1;
  v2 = sub_231411D40();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CCB14();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231411FD4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v12(v11, a1, v8);
  sub_231411FA4();
  sub_2312CEA5C(v28, v29);
  sub_231411FE0();
  v13 = sub_231411FBC();
  sub_231411FB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v14 = type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider();
  v15 = swift_allocObject();
  sub_23131F270((uint64_t)v7, v15 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_currentCountry);
  *(_BYTE *)(v15
           + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_includeFeaturesMadeAvailableByBuddy) = v13 & 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v15 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_presentationLocation, v4, v27);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v28);
  sub_23140BCA4();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23141A310;
  sub_231411CA4();
  v17 = v25;
  v12(v11, v25, v8);
  v29 = v14;
  v30 = sub_2312CCC24(qword_255ED25B0, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider, (uint64_t)&unk_231416D08);
  v28[0] = v15;
  swift_retain();
  v18 = sub_231411C98();
  v19 = MEMORY[0x24BE41030];
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v19;
  v12(v11, v17, v8);
  v20 = sub_23140B7D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for BradycardiaAdvertisableFeatureSource, (uint64_t (*)(void *, void *, uint64_t, id))sub_23140B540);
  v21 = sub_2312CCC24(&qword_255ECD020, (uint64_t (*)(uint64_t))type metadata accessor for BradycardiaAdvertisableFeatureSource, (uint64_t)&unk_23141B3A8);
  *(_QWORD *)(v16 + 48) = v20;
  *(_QWORD *)(v16 + 56) = v21;
  v12(v11, v17, v8);
  v22 = sub_23140B7D8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TachycardiaAdvertisableFeatureSource, (uint64_t (*)(void *, void *, uint64_t, id))sub_23140B68C);
  v23 = sub_2312CCC24(&qword_255ECDAC0, (uint64_t (*)(uint64_t))type metadata accessor for TachycardiaAdvertisableFeatureSource, (uint64_t)&unk_23141BF68);
  *(_QWORD *)(v16 + 64) = v22;
  *(_QWORD *)(v16 + 72) = v23;
  swift_release();
  return v16;
}

void sub_23140BCA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED25A0)
  {
    sub_23140BCF8();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED25A0);
  }
}

unint64_t sub_23140BCF8()
{
  unint64_t result;

  result = qword_255ED25A8;
  if (!qword_255ED25A8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED25A8);
  }
  return result;
}

uint64_t sub_23140BD4C()
{
  return swift_initClassMetadata2();
}

void sub_23140BDAC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23140BDD8()
{
  _QWORD *v0;

  swift_release();
  return sub_23135E918((uint64_t)v0 + *(_QWORD *)(qword_255ED3070 + *v0 + 32));
}

_QWORD *sub_23140BE20()
{
  _QWORD *v0;

  v0 = (_QWORD *)sub_231412538();
  swift_release();
  sub_23135E918((uint64_t)v0 + *(_QWORD *)(qword_255ED3070 + *v0 + 32));
  return v0;
}

uint64_t sub_23140BE78()
{
  sub_23140BE20();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenHideableOnboardingDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2313A3100(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AFibBurdenHideableOnboardingDataSource);
}

void sub_23140BEA0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  void *v30;
  _BYTE v31[24];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;

  v1 = v0;
  swift_getObjectType();
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell_item;
  swift_beginAccess();
  sub_2312D1C94(v2, (uint64_t)v31);
  if (v32)
  {
    sub_2312DF79C(0, (unint64_t *)&qword_255ECF1F0);
    sub_2312DF79C(0, &qword_255ED2678);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v34 + 1))
      {
        sub_2312DFB68(&v33, (uint64_t)v36);
        v3 = (char *)sub_23140C3AC();
        *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart16NumberedTextView_number] = *sub_2312CEA5C(v36, v37);
        v4 = sub_2313F51E0();
        if (qword_255ECAAC8 != -1)
          swift_once();
        sub_23132B144();
        v5 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setText_, v5);

        v6 = (char *)sub_23140C3AC();
        v7 = sub_2312CEA5C(v36, v37);
        v9 = v7[1];
        v8 = v7[2];
        v10 = &v6[OBJC_IVAR____TtC5Heart16NumberedTextView_title];
        *(_QWORD *)v10 = v9;
        *((_QWORD *)v10 + 1) = v8;
        sub_231412A90();
        swift_bridgeObjectRelease();
        v11 = sub_2313F53C4();
        if (*((_QWORD *)v10 + 1))
        {
          sub_231412A90();
          v12 = (void *)sub_23141468C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v12 = 0;
        }
        objc_msgSend(v11, sel_setText_, v12);

        v24 = (char *)sub_23140C3AC();
        v25 = sub_2312CEA5C(v36, v37);
        v27 = v25[3];
        v26 = v25[4];
        v28 = &v24[OBJC_IVAR____TtC5Heart16NumberedTextView_details];
        *(_QWORD *)v28 = v27;
        *((_QWORD *)v28 + 1) = v26;
        sub_231412A90();
        swift_bridgeObjectRelease();
        v29 = sub_2313F54F8();
        sub_231412A90();
        v30 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setText_, v30);

        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
        return;
      }
    }
    else
    {
      v35 = 0;
      v33 = 0u;
      v34 = 0u;
    }
  }
  else
  {
    sub_231347BDC((uint64_t)v31, (unint64_t *)&qword_255ECB1A8, (unint64_t *)&qword_255ECF1F0);
    v33 = 0u;
    v34 = 0u;
    v35 = 0;
  }
  sub_231347BDC((uint64_t)&v33, &qword_255ED2670, &qword_255ED2678);
  if (qword_25415DF98 != -1)
    swift_once();
  v13 = sub_231413780();
  sub_2312CE3B8(v13, (uint64_t)qword_254162FF0);
  v14 = v1;
  v15 = sub_231413768();
  v16 = sub_231414974();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v36[0] = v18;
    *(_DWORD *)v17 = 136446722;
    v19 = sub_2314151A8();
    *(_QWORD *)&v33 = sub_23133180C(v19, v20, v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)&v33 = sub_23133180C(1835365481, 0xE400000000000000, v36);
    sub_231414CBC();
    *(_WORD *)(v17 + 22) = 2082;
    sub_231347B88(0, (unint64_t *)&qword_255ECB1A8, (unint64_t *)&qword_255ECF1F0);
    *(_QWORD *)&v33 = v21;
    sub_23140C738();
    v22 = sub_2314146E0();
    *(_QWORD *)&v33 = sub_23133180C(v22, v23, v36);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s.%{public}s]: Attempted to set item (%{public}s) that did not conform to NumberedTextProviding", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v18, -1, -1);
    MEMORY[0x2348DE308](v17, -1, -1);

  }
  else
  {

  }
}

id sub_23140C3AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell____lazy_storage___numberedTextView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell____lazy_storage___numberedTextView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell____lazy_storage___numberedTextView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for NumberedTextView());
    v6 = sub_2313F561C(0, 0, 0xE000000000000000, 0, 0xE000000000000000);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = (void *)objc_opt_self();
    v3 = v6;
    v8 = objc_msgSend(v7, sel_clearColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v8);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_23140C54C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NumberedTextTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NumberedTextTableViewCell()
{
  return objc_opt_self();
}

uint64_t sub_23140C5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t sub_23140C63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  sub_23140BEA0();
  return sub_231347BDC(a1, (unint64_t *)&qword_255ECB1A8, (unint64_t *)&qword_255ECF1F0);
}

void (*sub_23140C6C0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23140C708;
}

void sub_23140C708(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_23140BEA0();
}

unint64_t sub_23140C738()
{
  unint64_t result;

  result = qword_255ED2680;
  if (!qword_255ED2680)
  {
    sub_231347B88(255, (unint64_t *)&qword_255ECB1A8, (unint64_t *)&qword_255ECF1F0);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED2680);
  }
  return result;
}

id sub_23140C788(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  v3 = &v2[OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart25NumberedTextTableViewCell____lazy_storage___numberedTextView] = 0;
  if (a2)
  {
    v4 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for NumberedTextTableViewCell();
  v5 = objc_msgSendSuper2(&v12, sel_initWithStyle_reuseIdentifier_, 1, v4);

  v6 = v5;
  objc_msgSend(v6, sel_setUserInteractionEnabled_, 0);
  v7 = objc_msgSend(v6, sel_contentView);
  v8 = sub_23140C3AC();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = sub_23140C3AC();
  v10 = objc_msgSend(v6, sel_contentView);
  objc_msgSend(v9, sel_hk_alignConstraintsWithView_insets_, v10, 10.0, 0.0, 10.0, 0.0);

  return v6;
}

uint64_t *sub_23140C8C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23141177C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = a3[7];
    v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    v14 = v10;
    v15 = v11;
    v16 = v13;
  }
  return a1;
}

void sub_23140C970(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_23140C9CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = v9;
  v14 = v10;
  v15 = v12;
  return a1;
}

uint64_t sub_23140CA48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  return a1;
}

uint64_t sub_23140CAE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23140CB50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  return a1;
}

uint64_t sub_23140CBDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23140CBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23141177C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23140CC64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23140CC70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23141177C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery()
{
  uint64_t result;

  result = qword_255ED26E0;
  if (!qword_255ED26E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140CD24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23141177C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23140CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_23140E150(0, &qword_255ED2730, (unint64_t *)&qword_255ECB348, 0x24BDD3E68, MEMORY[0x24BDD2220]);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23141177C();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v6 = sub_231411608();
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v7 = sub_231414614();
  v3[16] = v7;
  v3[17] = *(_QWORD *)(v7 - 8);
  v3[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23140CEB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t KeyPath;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[18];
  v2 = v0[16];
  v23 = v0[17];
  v3 = v0[9];
  v4 = v0[10];
  v5 = v0[8];
  v22 = v5;
  v6 = v0[4];
  sub_231411230();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v4, v6, v5);
  sub_2314145FC();
  v24 = sub_231414608();
  v8 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v8(v1, v2);
  sub_23141120C();
  v7(v4, v6, v22);
  sub_2314145FC();
  v9 = sub_231414608();
  v8(v1, v2);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_hk_earliestPossibleDateWithDayIndex_, v24);
  sub_2314115D8();

  v12 = objc_msgSend(v10, sel_hk_latestPossibleDateWithDayIndex_, v9);
  sub_2314115D8();

  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2120];
  sub_23140E1B0(0, &qword_255ED2738, &qword_255ECC6A0, MEMORY[0x24BDD2120]);
  sub_23140E150(0, &qword_255ECC6A0, (unint64_t *)&qword_255ECB348, 0x24BDD3E68, v13);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_2314115C0();
  v16 = (void *)sub_2314115C0();
  v17 = objc_msgSend(v14, sel_predicateForSamplesWithStartDate_endDate_options_, v15, v16, 3);

  sub_2312D3C68(0, (unint64_t *)&qword_255ECB348);
  sub_2314145B4();

  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCBEC0];
  sub_23140E1B0(0, &qword_255ED2740, &qword_255ED2748, MEMORY[0x24BDCBEC0]);
  sub_23140E150(0, &qword_255ED2748, (unint64_t *)&qword_255ECB348, 0x24BDD3E68, v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  KeyPath = swift_getKeyPath();
  MEMORY[0x2348D9D00](KeyPath, 0);
  sub_2314145C0();
  v20 = (_QWORD *)swift_task_alloc();
  v0[19] = v20;
  *v20 = v0;
  v20[1] = sub_23140D244;
  return sub_2314145CC();
}

uint64_t sub_23140D244(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 168) = a1;
  return swift_task_switch();
}

uint64_t sub_23140D2B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = swift_task_alloc();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v0 + 24);
  v9 = sub_231351254((void (*)(id *))sub_23140E228, v8, v1);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v10 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v10(v3, v4);
  v10(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
}

uint64_t sub_23140D3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23140D480(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_endDate);
  sub_2314115D8();

}

uint64_t sub_23140D4CC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void (*v28)(char *, uint64_t);
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v63 = a3;
  v5 = sub_231411248();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v62 - v9;
  sub_2312D1E78(0, &qword_255ECCF68, v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v64 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v62 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v72 = (uint64_t)&v62 - v18;
  v19 = sub_23141177C();
  v70 = *(_QWORD *)(v19 - 8);
  v71 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v23 = objc_msgSend(*a1, sel_quantity);
  objc_msgSend(v23, sel_doubleValueForUnit_, a2);
  v25 = v24;

  sub_23140DB9C(v22, (uint64_t)v21);
  v26 = (void *)objc_opt_self();
  v65 = v22;
  sub_231414BCC();
  v27 = (void *)sub_2314111F4();
  v66 = v6;
  v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v68 = v5;
  v28(v10, v5);
  v69 = v21;
  v29 = (void *)sub_2314116F8();
  v30 = (void *)sub_2314116F8();
  v31 = objc_msgSend(v26, sel_hk_julianDayDateIntervalFromOpenUpperBoundDateInterval_sourceCalendar_localCalendar_, v27, v29, v30);

  if (v31)
  {
    sub_231411200();

    v32 = 0;
  }
  else
  {
    v32 = 1;
  }
  v33 = v66;
  v34 = v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v17, v32, 1, v68);
  v35 = v72;
  sub_23140E240((uint64_t)v17, v72);
  v36 = v64;
  sub_23140E294(v35, v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1, v34) != 1)
  {
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
    v49(v67, v36, v34);
    v50 = objc_msgSend(v65, sel_metadata);
    if (v50)
    {
      v51 = v50;
      v52 = sub_231414638();

      v53 = sub_2314146BC();
      if (*(_QWORD *)(v52 + 16) && (v55 = sub_231338800(v53, v54), (v56 & 1) != 0))
      {
        sub_2313046A8(*(_QWORD *)(v52 + 56) + 32 * v55, (uint64_t)&v73);
      }
      else
      {
        v73 = 0u;
        v74 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v74 + 1))
      {
        if (swift_dynamicCast())
        {
          v59 = v63;
          if ((v75 & 1) != 0)
            v60 = sub_2312FDD48((uint64_t)&unk_25001F298);
          else
            v60 = MEMORY[0x24BEE4B08];
          goto LABEL_23;
        }
LABEL_22:
        v60 = MEMORY[0x24BEE4B08];
        v59 = v63;
LABEL_23:
        sub_2312F1A20(v35, &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
        v49(v59, (uint64_t)v67, v34);
        v61 = type metadata accessor for AFibBurdenPDFChartPoint();
        *(_QWORD *)&v59[*(int *)(v61 + 20)] = v25;
        *(_QWORD *)&v59[*(int *)(v61 + 24)] = v60;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v59, 0, 1, v61);
      }
    }
    else
    {
      v73 = 0u;
      v74 = 0u;
    }
    sub_2313045B8((uint64_t)&v73);
    goto LABEL_22;
  }
  sub_2312F1A20(v36, &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  if (qword_25415C170 != -1)
    swift_once();
  v37 = sub_231413780();
  sub_2312CE3B8(v37, (uint64_t)qword_254162F00);
  v38 = v65;
  v39 = sub_231413768();
  v40 = sub_231414980();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = (_QWORD *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    *(_QWORD *)&v73 = v68;
    *(_DWORD *)v41 = 136446467;
    v75 = type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
    sub_23140E2E8();
    v43 = sub_2314146E0();
    v75 = sub_23133180C(v43, v44, (uint64_t *)&v73);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2117;
    v75 = (uint64_t)v38;
    v45 = v38;
    sub_231414CBC();
    *v42 = v38;

    _os_log_impl(&dword_2312C8000, v39, v40, "[%{public}s] Invalid date interval for AFibBurden sample: %{sensitive}@", (uint8_t *)v41, 0x16u);
    sub_23140E150(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v42, -1, -1);
    v46 = v68;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v46, -1, -1);
    MEMORY[0x2348DE308](v41, -1, -1);

    v47 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v48 = v72;
  }
  else
  {

    v47 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v48 = v35;
  }
  sub_2312F1A20(v48, &qword_255ECCF68, v47);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
  v57 = type metadata accessor for AFibBurdenPDFChartPoint();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v63, 1, 1, v57);
}

uint64_t sub_23140DB9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  void *v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  sub_2312D1E78(0, qword_255ECDEB0, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - v7;
  v9 = sub_2314117A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel__timeZoneName);
  if (!v13)
  {
    if (qword_25415C170 != -1)
      swift_once();
    v26 = sub_231413780();
    sub_2312CE3B8(v26, (uint64_t)qword_254162F00);
    v16 = a1;
    v17 = sub_231413768();
    v18 = sub_231414980();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v19 = 136446467;
      v39 = type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
      sub_23140E2E8();
      v27 = sub_2314146E0();
      v39 = sub_23133180C(v27, v28, &v40);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2117;
      v39 = (uint64_t)v16;
      v29 = a2;
      v30 = v16;
      sub_231414CBC();
      v24 = v37;
      *v37 = v16;

      a2 = v29;
      v25 = "[%{public}s] AFibBurden sample with missing timezone: %{sensitive}@";
      goto LABEL_11;
    }
LABEL_12:

    goto LABEL_13;
  }
  v14 = v13;
  sub_2314146BC();

  sub_231411788();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2312F1A20((uint64_t)v8, qword_255ECDEB0, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
    if (qword_25415C170 != -1)
      swift_once();
    v15 = sub_231413780();
    sub_2312CE3B8(v15, (uint64_t)qword_254162F00);
    v16 = a1;
    v17 = sub_231413768();
    v18 = sub_231414980();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v19 = 136446467;
      v39 = type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
      sub_23140E2E8();
      v20 = sub_2314146E0();
      v39 = sub_23133180C(v20, v21, &v40);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2117;
      v39 = (uint64_t)v16;
      v22 = v3;
      v23 = v16;
      sub_231414CBC();
      v24 = v37;
      *v37 = v16;

      v3 = v22;
      v25 = "[%{public}s] AFibBurden sample with non-existing timezone: %{sensitive}@";
LABEL_11:
      _os_log_impl(&dword_2312C8000, v17, v18, v25, (uint8_t *)v19, 0x16u);
      sub_23140E150(0, (unint64_t *)&qword_25415BD20, (unint64_t *)&qword_25415BD30, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v24, -1, -1);
      v31 = v38;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v31, -1, -1);
      MEMORY[0x2348DE308](v19, -1, -1);

LABEL_13:
      v32 = sub_23141177C();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a2, v3, v32);
    }
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v34 = *(void **)(v3 + *(int *)(type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery() + 28));
  v35 = (void *)sub_231411794();
  v36 = objc_msgSend(v34, sel_calendarForTimeZone_, v35);

  sub_231411710();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23140E0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2312DBC38;
  return sub_23140CD9C(a1, a2);
}

void sub_23140E150(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2312D3C68(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_23140E1B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_23140E150(255, a3, (unint64_t *)&qword_255ECB348, 0x24BDD3E68, a4);
    v5 = sub_23141504C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

char *sub_23140E218()
{
  return sel_endDate;
}

uint64_t sub_23140E228@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23140D4CC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23140E240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23140E294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECCF68, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23140E2E8()
{
  unint64_t result;

  result = qword_255ED2750;
  if (!qword_255ED2750)
  {
    type metadata accessor for AFibBurdenPDFChartJulianIndexedSevenDaySampleQuery();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED2750);
  }
  return result;
}

uint64_t sub_23140E320()
{
  return 0x70704120474345;
}

uint64_t sub_23140E338()
{
  id v0;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_23140E3A8()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_23140E428@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_seedExpiredLinkURL);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
  v7 = sub_2314114AC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  sub_2312F0614((uint64_t)v5);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_231418090;
  v16[1] = v1;
  swift_getMetatypeMetadata();
  v11 = sub_2314146E0();
  v13 = v12;
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v15 = sub_2312D6E84();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v15;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 72) = 0xD00000000000001DLL;
  *(_QWORD *)(v10 + 80) = 0x8000000231434140;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_23140E644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - v4;
  sub_2314146BC();
  sub_2314114A0();
  swift_bridgeObjectRelease();
  v6 = sub_2314114AC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
  sub_2312F0614((uint64_t)v5);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231418090;
  v15[1] = v1;
  swift_getMetatypeMetadata();
  v10 = sub_2314146E0();
  v12 = v11;
  v13 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v14 = sub_2312D6E84();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 96) = v13;
  *(_QWORD *)(v9 + 104) = v14;
  *(_QWORD *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 72) = 0xD000000000000020;
  *(_QWORD *)(v9 + 80) = 0x8000000231434160;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_23140E830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_electrocardiogramLearnMoreURL);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
  v7 = sub_2314114AC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  sub_2312F0614((uint64_t)v5);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_231418090;
  v16[1] = v1;
  swift_getMetatypeMetadata();
  v11 = sub_2314146E0();
  v13 = v12;
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v15 = sub_2312D6E84();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v15;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 72) = 0xD00000000000001BLL;
  *(_QWORD *)(v10 + 80) = 0x8000000231434190;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AFibBurdenFeatureRegulatoryInfoTransformProvider()
{
  uint64_t result;

  result = qword_255ED2758;
  if (!qword_255ED2758)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140EA88()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23140EAC4()
{
  if (qword_255ECAAD8 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_23140EB44()
{
  return 0x7369682D62696661;
}

uint64_t sub_23140EB64()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_aFibBurdenAppleSupportURL);
  sub_2314146BC();

  sub_2314114A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23140EBD0()
{
  return type metadata accessor for AFibBurdenFeatureRegulatoryInfoTransformProvider();
}

uint64_t sub_23140EBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_2314146BC();
    sub_231415118();
    sub_231414710();
    v3 = sub_231415148();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_2314146BC();
      v9 = v8;
      if (v7 == sub_2314146BC() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_2314146BC();
          v17 = v16;
          if (v15 == sub_2314146BC() && v17 == v18)
            break;
          v20 = sub_231415070();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

id sub_23140ED9C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id result;
  void *v12;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_displayType);
  v4 = objc_msgSend(v3, sel_presentation);
  v5 = type metadata accessor for AFibBurdenPDFChartPoint();
  v6 = (void *)sub_231414848();
  v7 = objc_msgSend(v4, sel_adjustedValueForDaemonValue_, v6);

  if ((sub_23140F4F8(*(_QWORD *)(a1 + *(int *)(v5 + 24))) & 1) != 0)
  {
    v8 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();
    sub_2314146BC();

    sub_23140EF84();
    return (id)swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_unitController), sel_localizedDisplayNameForDisplayType_value_, v3, v7);
  sub_2314146BC();

  v10 = objc_msgSend(v3, sel_hk_numberFormatterForUnit_, *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_unit));
  result = (id)HKFormattedStringFromValue();
  if (result)
  {
    v12 = result;
    sub_2314146BC();

    sub_231412A90();
    sub_231414728();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23140EF84();

    sub_2314130CC();
    return (id)swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23140EF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  v0 = sub_23141138C();
  MEMORY[0x24BDAC7A8](v0);
  sub_231412A90();
  sub_231411380();
  sub_231411368();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  if (qword_255ECAA70 != -1)
    swift_once();
  v4 = qword_255ED2EC0;
  sub_23140F2B8();
  swift_retain();
  sub_231411350();
  v1 = swift_getKeyPath();
  *(&KeyPath - 2) = MEMORY[0x24BDAC7A8](v1);
  swift_getKeyPath();
  if (qword_255ECAA50 != -1)
    swift_once();
  v4 = qword_255ED2E88;
  sub_23140F3A4();
  swift_retain();
  return sub_231411350();
}

uint64_t sub_23140F120(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_23140F49C(0, a4);
  return sub_231414680() & 1;
}

uint64_t sub_23140F17C()
{
  uint64_t v0;

  sub_23140F574(v0 + OBJC_IVAR____TtC5Heart36AFibBurdenPDFAFibAnnotationFormatter_viewModel);

  return swift_deallocClassInstance();
}

uint64_t sub_23140F1DC()
{
  return type metadata accessor for AFibBurdenPDFAFibAnnotationFormatter();
}

uint64_t type metadata accessor for AFibBurdenPDFAFibAnnotationFormatter()
{
  uint64_t result;

  result = qword_255ED27F0;
  if (!qword_255ED27F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23140F220()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23140F29C()
{
  sub_231411338();
  __break(1u);
}

unint64_t sub_23140F2B8()
{
  unint64_t result;

  result = qword_255ED28A0;
  if (!qword_255ED28A0)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_255ED28A0);
  }
  return result;
}

void sub_23140F2FC()
{
  sub_23140F2B8();
  sub_2314113F8();
  __break(1u);
}

uint64_t sub_23140F320()
{
  return 8;
}

uint64_t sub_23140F32C()
{
  return swift_release();
}

uint64_t sub_23140F334(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23140F340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23140F120(a1, a2, a3, &qword_255ED28B8) & 1;
}

uint64_t sub_23140F368(uint64_t a1, uint64_t a2)
{
  return sub_23140F454(a1, a2, &qword_255ED28B8);
}

_QWORD *sub_23140F37C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_23140F388()
{
  sub_23141132C();
  __break(1u);
}

unint64_t sub_23140F3A4()
{
  unint64_t result;

  result = qword_255ED28A8;
  if (!qword_255ED28A8)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_255ED28A8);
  }
  return result;
}

void sub_23140F3E8()
{
  sub_23140F3A4();
  sub_2314113F8();
  __break(1u);
}

uint64_t sub_23140F40C()
{
  return 8;
}

uint64_t sub_23140F418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23140F120(a1, a2, a3, &qword_255ED28B0) & 1;
}

uint64_t sub_23140F440(uint64_t a1, uint64_t a2)
{
  return sub_23140F454(a1, a2, &qword_255ED28B0);
}

uint64_t sub_23140F454(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_23140F49C(0, a3);
  return sub_23141465C();
}

void sub_23140F49C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_231411344();
    v3 = sub_231415184();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23140F4F8(uint64_t a1)
{
  unint64_t v2;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  sub_231415118();
  sub_231415124();
  v2 = sub_231415148() & ~(-1 << *(_BYTE *)(a1 + 32));
  return (*(_QWORD *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v2) & 1;
}

uint64_t sub_23140F574(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AFibBurdenPDFChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23140F5BC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char a5@<W4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  int *v14;
  uint64_t *v15;
  int *v16;
  uint64_t *v17;
  char *v18;
  id v19;
  char *v20;
  id v21;

  if (((1 << a1) & 0x36) != 0)
  {
    v14 = (int *)type metadata accessor for AFibBurdenPDFBarChart();
    a8[3] = (uint64_t)v14;
    a8[4] = sub_2312CCC24(&qword_255ED28C0, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_231418870);
    v15 = sub_2312DFCA0(a8);
    sub_2312EE518(a2, (uint64_t)v15 + v14[6]);
    sub_2312EE47C(a3, (uint64_t)v15 + v14[8]);
    *v15 = 0;
    *((_BYTE *)v15 + 8) = 1;
    v15[2] = 0;
    *((_BYTE *)v15 + 24) = 1;
LABEL_6:
    v20 = (char *)v15 + v14[7];
    *(_QWORD *)v20 = a4;
    v20[8] = a5;
    *((_QWORD *)v20 + 2) = a6;
    a7 = a6;
    goto LABEL_7;
  }
  if (a1)
  {
    v14 = (int *)type metadata accessor for AFibBurdenPDFLineChart();
    a8[3] = (uint64_t)v14;
    a8[4] = sub_2312CCC24(&qword_255ED28C8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DEA0);
    v15 = sub_2312DFCA0(a8);
    sub_2312EE518(a2, (uint64_t)v15 + v14[6]);
    sub_2312EE47C(a3, (uint64_t)v15 + v14[8]);
    *v15 = 0;
    *((_BYTE *)v15 + 8) = 1;
    v15[2] = 0;
    *((_BYTE *)v15 + 24) = 1;
    goto LABEL_6;
  }
  v16 = (int *)type metadata accessor for AFibBurdenPDFAFibChart();
  a8[3] = (uint64_t)v16;
  a8[4] = sub_2312CCC24(&qword_255ED28D0, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFAFibChart, (uint64_t)&unk_231424120);
  v17 = sub_2312DFCA0(a8);
  sub_2312EE518(a2, (uint64_t)v17 + v16[6]);
  sub_2312EE47C(a3, (uint64_t)v17 + v16[8]);
  *v17 = 0;
  *((_BYTE *)v17 + 8) = 1;
  v17[2] = 0;
  *((_BYTE *)v17 + 24) = 1;
  v18 = (char *)v17 + v16[7];
  *(_QWORD *)v18 = a4;
  v18[8] = a5;
  *((_QWORD *)v18 + 2) = a6;
  *(uint64_t *)((char *)v17 + v16[9]) = (uint64_t)a7;
  v19 = a4;
  a4 = a6;
LABEL_7:
  v21 = a4;
  return a7;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartFactory()
{
  return &type metadata for AFibBurdenPDFChartFactory;
}

uint64_t sub_23140F7D4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23140F7F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_23140F858()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 48);
  objc_msgSend(v1, sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2 = *(void **)(v0 + 56);
  objc_msgSend(v2, sel_unregisterObserver_, v0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC5Heart36BradycardiaFeatureStatusAvailability__featureStatus;
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_23140F918()
{
  sub_23140F858();
  return swift_deallocClassInstance();
}

uint64_t sub_23140F93C()
{
  return type metadata accessor for BradycardiaFeatureStatusAvailability();
}

uint64_t type metadata accessor for BradycardiaFeatureStatusAvailability()
{
  uint64_t result;

  result = qword_25415E348;
  if (!qword_25415E348)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23140F980()
{
  unint64_t v0;

  sub_2312D6DD8(319, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_23140FA38@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((sub_231411D94() & 1) == 0)
  {
    v7 = sub_231411D1C();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
    return v8(v9, v10, 1, v7);
  }
  if ((sub_23140FB68() & 1) == 0)
  {
    v11 = (unsigned int *)MEMORY[0x24BE41280];
LABEL_9:
    v12 = *v11;
    v13 = sub_231411D1C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v12, v13);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v9 = a1;
    v10 = 0;
    v7 = v13;
    return v8(v9, v10, 1, v7);
  }
  v2 = (void *)objc_opt_self();
  if ((objc_msgSend(v2, sel_isBackgroundHeartRateEnabled) & 1) == 0)
  {
    v11 = (unsigned int *)MEMORY[0x24BE41288];
    goto LABEL_9;
  }
  v3 = objc_msgSend(v2, sel_isBradycardiaDetectionEnabled);
  v4 = sub_231411D1C();
  v5 = *(_QWORD *)(v4 - 8);
  if ((v3 & 1) != 0)
    v6 = (unsigned int *)MEMORY[0x24BE41298];
  else
    v6 = (unsigned int *)MEMORY[0x24BE412A0];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(a1, *v6, v4);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v9 = a1;
  v10 = 0;
  v7 = v4;
  return v8(v9, v10, 1, v7);
}

id sub_23140FB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id result;
  void *v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;

  v1 = sub_231411608();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_activePairedWatchSupportsHeartRateMotionContexts);
  if ((_DWORD)result)
  {
    result = objc_msgSend((id)objc_opt_self(), sel_isBradycardiaDetectionSupportedOnActiveWatch);
    if ((_DWORD)result)
    {
      v6 = *(void **)(v0 + 48);
      sub_2314115FC();
      v7 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v8 = objc_msgSend(v6, sel_isHeartAgeGatingEnabledOnActiveWatchWithCurrentDate_, v7);

      return (id)(v8 ^ 1);
    }
  }
  return result;
}

void sub_23140FC4C()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)v0;
  objc_msgSend(*(id *)(v0 + 48), sel_addHeartRhythmAvailabilityObserver_, v0);
  objc_msgSend(*(id *)(v0 + 56), sel_registerObserver_, v0);
  v2 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  sub_231412A90();
  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    v5 = v1[4];
    v6 = v1[5];
    v7 = v4;
    v8 = sub_231410248(v4, v5, v6);

    v1[8] = v8;
    swift_bridgeObjectRelease();
    v9 = sub_231412A90();
    sub_2314104DC(v9);
    swift_bridgeObjectRelease();
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_231410818;
    *(_QWORD *)(v11 + 24) = v10;
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    v12 = sub_231413F90();

    swift_release();
    swift_release();
    v1[9] = v12;
    swift_release();
  }
}

uint64_t sub_23140FE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  sub_2312E9964(0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23140FA38((uint64_t)v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_231306890((uint64_t)v5, (uint64_t)v3);
    swift_retain();
    sub_231413E4C();
    sub_2313068D4((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_2314100EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_231410158(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_2312E9964(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_231306890(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231306890((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_231413E4C();
  return sub_2313068D4((uint64_t)v7);
}

uint64_t sub_231410248(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;

  sub_2314146BC();
  v5 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithSuiteName_, v6);

  if (!v7)
    return MEMORY[0x24BEE4AF8];
  sub_2314146BC();
  v8 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v9 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithSuiteName_, v9);

  if (!v10)
  {

    return MEMORY[0x24BEE4AF8];
  }
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231418140;
  sub_2314146BC();
  v12 = (objc_class *)sub_231411E48();
  v13 = objc_allocWithZone(v12);
  v14 = v7;
  *(_QWORD *)(v11 + 32) = sub_231411E30();
  sub_2314146BC();
  objc_allocWithZone(v12);
  v15 = v10;
  *(_QWORD *)(v11 + 40) = sub_231411E30();
  sub_2314147B8();
  v16 = v11;
  if (a1 && a3)
  {
    v17 = objc_allocWithZone(v12);
    v18 = a1;
    sub_231412A90();
    sub_231411E30();
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();

    return v11;
  }
  else
  {

  }
  return v16;
}

uint64_t sub_2314104DC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_231410844();
  v3 = v2;
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231410948();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1;
  if (a1 >> 62)
  {
    sub_231412A90();
    a1 = v24;
    v11 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = MEMORY[0x24BEE4AF8];
  if (!v11)
  {
LABEL_11:
    v26 = v12;
    sub_231306968();
    sub_2314109C0(0);
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    sub_2312CCC24(&qword_25415E448, (uint64_t (*)(uint64_t))sub_2314109C0, MEMORY[0x24BEE12C8]);
    sub_231413CF0();
    sub_2312CCC24(&qword_25415E410, (uint64_t (*)(uint64_t))sub_231410948, MEMORY[0x24BDB99D8]);
    v18 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v18;
  }
  v26 = MEMORY[0x24BEE4AF8];
  result = sub_231414EA8();
  if ((v11 & 0x8000000000000000) == 0)
  {
    v20 = v10;
    v21 = v8;
    v22 = v7;
    v14 = 0;
    v15 = a1 & 0xC000000000000001;
    do
    {
      if (v15)
        v16 = (id)MEMORY[0x2348DD81C](v14, a1);
      else
        v16 = *(id *)(a1 + 8 * v14 + 32);
      v17 = v16;
      ++v14;
      v25 = sub_231411E3C();
      sub_2314108C8();
      sub_2312CCC24(&qword_25415E430, (uint64_t (*)(uint64_t))sub_2314108C8, MEMORY[0x24BDB9CB0]);
      sub_231413EB8();
      swift_release();
      sub_2312CCC24((unint64_t *)&unk_25415E270, (uint64_t (*)(uint64_t))sub_231410844, MEMORY[0x24BDB96C0]);
      sub_231413E7C();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);

      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      sub_231414E9C();
      a1 = v24;
    }
    while (v11 != v14);
    v12 = v26;
    v8 = v21;
    v7 = v22;
    v10 = v20;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2314107F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231410818()
{
  return sub_23140FE00();
}

uint64_t sub_231410820()
{
  swift_release();
  return swift_deallocObject();
}

void sub_231410844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E400)
  {
    sub_2314108C8();
    sub_2312CCC24(&qword_25415E430, (uint64_t (*)(uint64_t))sub_2314108C8, MEMORY[0x24BDB9CB0]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E400);
  }
}

void sub_2314108C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E438)
  {
    sub_2312CF374(255, (unint64_t *)&qword_25415E460, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_231413D68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E438);
  }
}

void sub_231410948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E418)
  {
    sub_231306968();
    sub_2312CCC24((unint64_t *)&qword_25415E420, (uint64_t (*)(uint64_t))sub_231306968, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413CE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E418);
  }
}

void sub_2314109C0(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415E440, (uint64_t (*)(uint64_t))sub_231306968, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

_QWORD *sub_2314109DC(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v22;

  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - v6;
  sub_2312E9964(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v1[2] = sub_2314146BC();
  v1[3] = v14;
  v1[4] = sub_2314146BC();
  v1[5] = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4170]), sel_init);
  v17 = MEMORY[0x24BEE4AF8];
  v1[7] = v16;
  v1[8] = v17;
  v1[9] = 0;
  v18 = (char *)v1 + OBJC_IVAR____TtC5Heart36BradycardiaFeatureStatusAvailability__featureStatus;
  v19 = sub_231411D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  sub_231306890((uint64_t)v13, (uint64_t)v11);
  sub_231413E1C();
  sub_2313068D4((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v7, v4);
  v1[6] = a1;
  v20 = a1;
  sub_23140FA38((uint64_t)v13);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231306890((uint64_t)v13, (uint64_t)v11);
  swift_retain();
  sub_231413E4C();
  sub_2313068D4((uint64_t)v13);
  sub_23140FC4C();
  return v1;
}

uint64_t sub_231410BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_2314141C4();
  result = sub_2314142D8();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_231410C58()
{
  type metadata accessor for ViewSandboxCollectionViewCell();
  sub_23141113C();
  return sub_231412328();
}

unint64_t sub_231410C88()
{
  return 0xD00000000000001DLL;
}

void sub_231410DD4()
{
  char *v0;
  char *v1;
  Class v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  v1 = v0;
  sub_231411084();
  v3 = objc_allocWithZone(v2);
  v4 = (void *)sub_23141420C();
  v5 = objc_msgSend(v4, sel_view);
  if (v5)
  {
    v6 = OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_sandboxView;
    v7 = *(void **)&v0[OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_sandboxView];
    *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_sandboxView] = v5;
    v8 = v5;

    v9 = objc_msgSend(v1, sel_contentView);
    if (!*(_QWORD *)&v1[v6])
      goto LABEL_7;
    v10 = v9;
    objc_msgSend(v9, sel_addSubview_);

  }
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_sandboxView];
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v1, sel_contentView);
    objc_msgSend(v12, sel_hk_alignConstraintsWithView_, v13);

    return;
  }
  __break(1u);
LABEL_7:
  __break(1u);
}

id sub_231410EE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewSandboxCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ViewSandboxCollectionViewCell()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DebugView()
{
  return &type metadata for DebugView;
}

uint64_t sub_231410F80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_231410F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t sub_231410FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart29ViewSandboxCollectionViewCell_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  return sub_2312D1D70(a1);
}

uint64_t (*sub_231411040())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_231411084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ED2910)
  {
    sub_2314110DC();
    v0 = sub_231414218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ED2910);
  }
}

unint64_t sub_2314110DC()
{
  unint64_t result;

  result = qword_255ED2918;
  if (!qword_255ED2918)
  {
    result = MEMORY[0x2348DE248](&unk_231424FB8, &type metadata for DebugView);
    atomic_store(result, (unint64_t *)&qword_255ED2918);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewSandboxCollectionViewItem()
{
  return &type metadata for ViewSandboxCollectionViewItem;
}

uint64_t sub_231411130()
{
  return MEMORY[0x24BDF1F80];
}

unint64_t sub_23141113C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECF268;
  if (!qword_255ECF268)
  {
    v1 = type metadata accessor for ViewSandboxCollectionViewCell();
    result = MEMORY[0x2348DE248](&unk_231425008, v1);
    atomic_store(result, (unint64_t *)&qword_255ECF268);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_2314111A0()
{
  return MEMORY[0x24BDCB148]();
}

uint64_t sub_2314111AC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2314111B8()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2314111C4()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2314111D0()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2314111DC()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_2314111E8()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2314111F4()
{
  return MEMORY[0x24BDCB810]();
}

uint64_t sub_231411200()
{
  return MEMORY[0x24BDCB828]();
}

uint64_t sub_23141120C()
{
  return MEMORY[0x24BDCB830]();
}

uint64_t sub_231411218()
{
  return MEMORY[0x24BDCB838]();
}

uint64_t sub_231411224()
{
  return MEMORY[0x24BDCB840]();
}

uint64_t sub_231411230()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_23141123C()
{
  return MEMORY[0x24BDCB868]();
}

uint64_t sub_231411248()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_231411254()
{
  return MEMORY[0x24BDCB958]();
}

uint64_t sub_231411260()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_23141126C()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_231411278()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_231411284()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_231411290()
{
  return MEMORY[0x24BDCBA60]();
}

uint64_t sub_23141129C()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_2314112A8()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_2314112B4()
{
  return MEMORY[0x24BDCBAE0]();
}

uint64_t sub_2314112C0()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_2314112CC()
{
  return MEMORY[0x24BDCBCA0]();
}

uint64_t sub_2314112D8()
{
  return MEMORY[0x24BDCBCC0]();
}

uint64_t sub_2314112E4()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_2314112F0()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_2314112FC()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_231411308()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_231411314()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_231411320()
{
  return MEMORY[0x24BDCBEF8]();
}

uint64_t sub_23141132C()
{
  return MEMORY[0x24BDEAD50]();
}

uint64_t sub_231411338()
{
  return MEMORY[0x24BDEAD60]();
}

uint64_t sub_231411344()
{
  return MEMORY[0x24BDEAD80]();
}

uint64_t sub_231411350()
{
  return MEMORY[0x24BDCC2D8]();
}

uint64_t sub_23141135C()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_231411368()
{
  return MEMORY[0x24BDCC5D8]();
}

uint64_t sub_231411374()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_231411380()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_23141138C()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_231411398()
{
  return MEMORY[0x24BDCC8B8]();
}

uint64_t sub_2314113A4()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_2314113B0()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_2314113BC()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_2314113C8()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_2314113D4()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_2314113E0()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_2314113EC()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_2314113F8()
{
  return MEMORY[0x24BDEAD90]();
}

uint64_t sub_231411404()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_231411410()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23141141C()
{
  return MEMORY[0x24BDCD438]();
}

uint64_t sub_231411428()
{
  return MEMORY[0x24BDCD460]();
}

uint64_t sub_231411434()
{
  return MEMORY[0x24BDCD4C8]();
}

uint64_t sub_231411440()
{
  return MEMORY[0x24BDCD5A8]();
}

uint64_t sub_23141144C()
{
  return MEMORY[0x24BDCD6C8]();
}

uint64_t sub_231411458()
{
  return MEMORY[0x24BDCD6D8]();
}

uint64_t sub_231411464()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_231411470()
{
  return MEMORY[0x24BDCD830]();
}

uint64_t sub_23141147C()
{
  return MEMORY[0x24BE40F08]();
}

uint64_t sub_231411488()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_231411494()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2314114A0()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2314114AC()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2314114B8()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_2314114C4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2314114D0()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_2314114DC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2314114E8()
{
  return MEMORY[0x24BDCDED0]();
}

uint64_t sub_2314114F4()
{
  return MEMORY[0x24BDCDEE8]();
}

uint64_t sub_231411500()
{
  return MEMORY[0x24BDCDF18]();
}

uint64_t sub_23141150C()
{
  return MEMORY[0x24BDCDF30]();
}

uint64_t sub_231411518()
{
  return MEMORY[0x24BDCE010]();
}

uint64_t sub_231411524()
{
  return MEMORY[0x24BDCE020]();
}

uint64_t sub_231411530()
{
  return MEMORY[0x24BDCE038]();
}

uint64_t sub_23141153C()
{
  return MEMORY[0x24BDCE040]();
}

uint64_t sub_231411548()
{
  return MEMORY[0x24BDCE060]();
}

uint64_t sub_231411554()
{
  return MEMORY[0x24BDCE078]();
}

uint64_t sub_231411560()
{
  return MEMORY[0x24BDCE110]();
}

uint64_t sub_23141156C()
{
  return MEMORY[0x24BDCE130]();
}

uint64_t sub_231411578()
{
  return MEMORY[0x24BDCE138]();
}

uint64_t sub_231411584()
{
  return MEMORY[0x24BDCE160]();
}

uint64_t sub_231411590()
{
  return MEMORY[0x24BDCE228]();
}

uint64_t sub_23141159C()
{
  return MEMORY[0x24BDCE2A0]();
}

uint64_t sub_2314115A8()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_2314115B4()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_2314115C0()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2314115CC()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_2314115D8()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_2314115E4()
{
  return MEMORY[0x24BDCE898]();
}

uint64_t sub_2314115F0()
{
  return MEMORY[0x24BDCE8D8]();
}

uint64_t sub_2314115FC()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_231411608()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_231411614()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_231411620()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23141162C()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_231411638()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_231411644()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_231411650()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23141165C()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_231411668()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_231411674()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_231411680()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_23141168C()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_231411698()
{
  return MEMORY[0x24BDCEFD8]();
}

uint64_t sub_2314116A4()
{
  return MEMORY[0x24BDCEFE8]();
}

uint64_t sub_2314116B0()
{
  return MEMORY[0x24BDCEFF0]();
}

uint64_t sub_2314116BC()
{
  return MEMORY[0x24BDCF028]();
}

uint64_t sub_2314116C8()
{
  return MEMORY[0x24BDCF058]();
}

uint64_t sub_2314116D4()
{
  return MEMORY[0x24BDCF078]();
}

uint64_t sub_2314116E0()
{
  return MEMORY[0x24BDCF0A8]();
}

uint64_t sub_2314116EC()
{
  return MEMORY[0x24BDCF0B8]();
}

uint64_t sub_2314116F8()
{
  return MEMORY[0x24BDCF0C0]();
}

uint64_t sub_231411704()
{
  return MEMORY[0x24BDCF0D0]();
}

uint64_t sub_231411710()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t sub_23141171C()
{
  return MEMORY[0x24BDCF150]();
}

uint64_t sub_231411728()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_231411734()
{
  return MEMORY[0x24BDCF188]();
}

uint64_t sub_231411740()
{
  return MEMORY[0x24BDCF198]();
}

uint64_t sub_23141174C()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_231411758()
{
  return MEMORY[0x24BDCF1C8]();
}

uint64_t sub_231411764()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_231411770()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t sub_23141177C()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_231411788()
{
  return MEMORY[0x24BDCF490]();
}

uint64_t sub_231411794()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_2314117A0()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_2314117AC()
{
  return MEMORY[0x24BDCF638]();
}

uint64_t sub_2314117B8()
{
  return MEMORY[0x24BDCF650]();
}

uint64_t sub_2314117C4()
{
  return MEMORY[0x24BEBBE78]();
}

uint64_t sub_2314117D0()
{
  return MEMORY[0x24BEBBE80]();
}

uint64_t sub_2314117DC()
{
  return MEMORY[0x24BEBBE88]();
}

uint64_t sub_2314117E8()
{
  return MEMORY[0x24BEBBEB8]();
}

uint64_t sub_2314117F4()
{
  return MEMORY[0x24BDCF678]();
}

uint64_t sub_231411800()
{
  return MEMORY[0x24BEE5B90]();
}

uint64_t sub_23141180C()
{
  return MEMORY[0x24BE47238]();
}

uint64_t sub_231411818()
{
  return MEMORY[0x24BE47248]();
}

uint64_t sub_231411824()
{
  return MEMORY[0x24BE47270]();
}

uint64_t sub_231411830()
{
  return MEMORY[0x24BE47298]();
}

uint64_t sub_23141183C()
{
  return MEMORY[0x24BE472A8]();
}

uint64_t sub_231411848()
{
  return MEMORY[0x24BE472B8]();
}

uint64_t sub_231411854()
{
  return MEMORY[0x24BE472C8]();
}

uint64_t sub_231411860()
{
  return MEMORY[0x24BE472E0]();
}

uint64_t sub_23141186C()
{
  return MEMORY[0x24BE472E8]();
}

uint64_t sub_231411878()
{
  return MEMORY[0x24BE473C0]();
}

uint64_t sub_231411884()
{
  return MEMORY[0x24BE473C8]();
}

uint64_t sub_231411890()
{
  return MEMORY[0x24BE474E8]();
}

uint64_t sub_23141189C()
{
  return MEMORY[0x24BE47528]();
}

uint64_t sub_2314118A8()
{
  return MEMORY[0x24BE47538]();
}

uint64_t sub_2314118B4()
{
  return MEMORY[0x24BE47558]();
}

uint64_t sub_2314118C0()
{
  return MEMORY[0x24BE47570]();
}

uint64_t sub_2314118CC()
{
  return MEMORY[0x24BE47580]();
}

uint64_t sub_2314118D8()
{
  return MEMORY[0x24BE47588]();
}

uint64_t sub_2314118E4()
{
  return MEMORY[0x24BE47590]();
}

uint64_t sub_2314118F0()
{
  return MEMORY[0x24BE47598]();
}

uint64_t sub_2314118FC()
{
  return MEMORY[0x24BE475A0]();
}

uint64_t sub_231411908()
{
  return MEMORY[0x24BE475C8]();
}

uint64_t sub_231411914()
{
  return MEMORY[0x24BE475F0]();
}

uint64_t sub_231411920()
{
  return MEMORY[0x24BE47608]();
}

uint64_t sub_23141192C()
{
  return MEMORY[0x24BE41F00]();
}

uint64_t sub_231411938()
{
  return MEMORY[0x24BE41F10]();
}

uint64_t sub_231411944()
{
  return MEMORY[0x24BE47658]();
}

uint64_t sub_231411950()
{
  return MEMORY[0x24BE47678]();
}

uint64_t sub_23141195C()
{
  return MEMORY[0x24BE47688]();
}

uint64_t sub_231411968()
{
  return MEMORY[0x24BE47698]();
}

uint64_t sub_231411974()
{
  return MEMORY[0x24BE476A0]();
}

uint64_t sub_231411980()
{
  return MEMORY[0x24BE476C0]();
}

uint64_t sub_23141198C()
{
  return MEMORY[0x24BE47798]();
}

uint64_t sub_231411998()
{
  return MEMORY[0x24BE477A8]();
}

uint64_t sub_2314119A4()
{
  return MEMORY[0x24BE477C0]();
}

uint64_t sub_2314119B0()
{
  return MEMORY[0x24BE477D0]();
}

uint64_t sub_2314119BC()
{
  return MEMORY[0x24BE47838]();
}

uint64_t sub_2314119C8()
{
  return MEMORY[0x24BE47840]();
}

uint64_t sub_2314119D4()
{
  return MEMORY[0x24BE47890]();
}

uint64_t sub_2314119E0()
{
  return MEMORY[0x24BE47928]();
}

uint64_t sub_2314119EC()
{
  return MEMORY[0x24BE47940]();
}

uint64_t sub_2314119F8()
{
  return MEMORY[0x24BE47948]();
}

uint64_t sub_231411A04()
{
  return MEMORY[0x24BE47958]();
}

uint64_t sub_231411A10()
{
  return MEMORY[0x24BE47970]();
}

uint64_t sub_231411A1C()
{
  return MEMORY[0x24BE47978]();
}

uint64_t sub_231411A28()
{
  return MEMORY[0x24BE47988]();
}

uint64_t sub_231411A34()
{
  return MEMORY[0x24BE47998]();
}

uint64_t sub_231411A40()
{
  return MEMORY[0x24BE479A8]();
}

uint64_t sub_231411A4C()
{
  return MEMORY[0x24BE479B8]();
}

uint64_t sub_231411A58()
{
  return MEMORY[0x24BE47A38]();
}

uint64_t sub_231411A64()
{
  return MEMORY[0x24BE47A40]();
}

uint64_t sub_231411A70()
{
  return MEMORY[0x24BE47A48]();
}

uint64_t sub_231411A7C()
{
  return MEMORY[0x24BE47A68]();
}

uint64_t sub_231411A88()
{
  return MEMORY[0x24BE40F78]();
}

uint64_t sub_231411A94()
{
  return MEMORY[0x24BE47B28]();
}

uint64_t sub_231411AA0()
{
  return MEMORY[0x24BE47BC8]();
}

uint64_t sub_231411AAC()
{
  return MEMORY[0x24BE47BD0]();
}

uint64_t sub_231411AB8()
{
  return MEMORY[0x24BE47C20]();
}

uint64_t sub_231411AC4()
{
  return MEMORY[0x24BE47C90]();
}

uint64_t sub_231411AD0()
{
  return MEMORY[0x24BE47D78]();
}

uint64_t sub_231411ADC()
{
  return MEMORY[0x24BE47D90]();
}

uint64_t sub_231411AE8()
{
  return MEMORY[0x24BE47DA8]();
}

uint64_t sub_231411AF4()
{
  return MEMORY[0x24BE47DB0]();
}

uint64_t sub_231411B00()
{
  return MEMORY[0x24BE47EC8]();
}

uint64_t sub_231411B0C()
{
  return MEMORY[0x24BE47F78]();
}

uint64_t sub_231411B18()
{
  return MEMORY[0x24BE47F80]();
}

uint64_t sub_231411B24()
{
  return MEMORY[0x24BE47F88]();
}

uint64_t sub_231411B30()
{
  return MEMORY[0x24BE47F90]();
}

uint64_t sub_231411B3C()
{
  return MEMORY[0x24BE47FB8]();
}

uint64_t sub_231411B48()
{
  return MEMORY[0x24BE47FD0]();
}

uint64_t sub_231411B54()
{
  return MEMORY[0x24BE48088]();
}

uint64_t sub_231411B60()
{
  return MEMORY[0x24BE48098]();
}

uint64_t sub_231411B6C()
{
  return MEMORY[0x24BE480A8]();
}

uint64_t sub_231411B78()
{
  return MEMORY[0x24BE480B0]();
}

uint64_t sub_231411B84()
{
  return MEMORY[0x24BE480B8]();
}

uint64_t sub_231411B90()
{
  return MEMORY[0x24BE481D8]();
}

uint64_t sub_231411B9C()
{
  return MEMORY[0x24BE48378]();
}

uint64_t sub_231411BA8()
{
  return MEMORY[0x24BE48380]();
}

uint64_t sub_231411BB4()
{
  return MEMORY[0x24BE48390]();
}

uint64_t sub_231411BC0()
{
  return MEMORY[0x24BE48660]();
}

uint64_t sub_231411BCC()
{
  return MEMORY[0x24BE486A0]();
}

uint64_t sub_231411BD8()
{
  return MEMORY[0x24BE483F0]();
}

uint64_t sub_231411BE4()
{
  return MEMORY[0x24BE48408]();
}

uint64_t sub_231411BF0()
{
  return MEMORY[0x24BE48418]();
}

uint64_t sub_231411BFC()
{
  return MEMORY[0x24BE3F8C0]();
}

uint64_t sub_231411C08()
{
  return MEMORY[0x24BE3F938]();
}

uint64_t sub_231411C14()
{
  return MEMORY[0x24BE3F948]();
}

uint64_t sub_231411C20()
{
  return MEMORY[0x24BE3F950]();
}

uint64_t sub_231411C2C()
{
  return MEMORY[0x24BE3F988]();
}

uint64_t sub_231411C38()
{
  return MEMORY[0x24BE3F9A8]();
}

uint64_t sub_231411C44()
{
  return MEMORY[0x24BE3F9B0]();
}

uint64_t sub_231411C50()
{
  return MEMORY[0x24BE3F9B8]();
}

uint64_t sub_231411C5C()
{
  return MEMORY[0x24BE3F9C0]();
}

uint64_t sub_231411C68()
{
  return MEMORY[0x24BE3F9D8]();
}

uint64_t sub_231411C74()
{
  return MEMORY[0x24BE3F9E0]();
}

uint64_t sub_231411C80()
{
  return MEMORY[0x24BE41018]();
}

uint64_t sub_231411C8C()
{
  return MEMORY[0x24BE41020]();
}

uint64_t sub_231411C98()
{
  return MEMORY[0x24BE41028]();
}

uint64_t sub_231411CA4()
{
  return MEMORY[0x24BE41038]();
}

uint64_t sub_231411CB0()
{
  return MEMORY[0x24BE410F8]();
}

uint64_t sub_231411CBC()
{
  return MEMORY[0x24BE41100]();
}

uint64_t sub_231411CC8()
{
  return MEMORY[0x24BE41108]();
}

uint64_t sub_231411CD4()
{
  return MEMORY[0x24BE41118]();
}

uint64_t sub_231411CE0()
{
  return MEMORY[0x24BE41210]();
}

uint64_t sub_231411CEC()
{
  return MEMORY[0x24BE41218]();
}

uint64_t sub_231411CF8()
{
  return MEMORY[0x24BE41220]();
}

uint64_t sub_231411D04()
{
  return MEMORY[0x24BE41228]();
}

uint64_t sub_231411D10()
{
  return MEMORY[0x24BE41290]();
}

uint64_t sub_231411D1C()
{
  return MEMORY[0x24BE412A8]();
}

uint64_t sub_231411D28()
{
  return MEMORY[0x24BE41300]();
}

uint64_t sub_231411D34()
{
  return MEMORY[0x24BE41320]();
}

uint64_t sub_231411D40()
{
  return MEMORY[0x24BE41328]();
}

uint64_t sub_231411D4C()
{
  return MEMORY[0x24BE41368]();
}

uint64_t sub_231411D58()
{
  return MEMORY[0x24BE41388]();
}

uint64_t sub_231411D64()
{
  return MEMORY[0x24BE413A8]();
}

uint64_t sub_231411D70()
{
  return MEMORY[0x24BE413B0]();
}

uint64_t sub_231411D7C()
{
  return MEMORY[0x24BE41520]();
}

uint64_t sub_231411D88()
{
  return MEMORY[0x24BE41F40]();
}

uint64_t sub_231411D94()
{
  return MEMORY[0x24BE41578]();
}

uint64_t sub_231411DA0()
{
  return MEMORY[0x24BE41580]();
}

uint64_t sub_231411DAC()
{
  return MEMORY[0x24BE41588]();
}

uint64_t sub_231411DB8()
{
  return MEMORY[0x24BE41590]();
}

uint64_t sub_231411DC4()
{
  return MEMORY[0x24BE41598]();
}

uint64_t sub_231411DD0()
{
  return MEMORY[0x24BE415B0]();
}

uint64_t sub_231411DDC()
{
  return MEMORY[0x24BE415B8]();
}

uint64_t sub_231411DE8()
{
  return MEMORY[0x24BE415C0]();
}

uint64_t sub_231411DF4()
{
  return MEMORY[0x24BE415C8]();
}

uint64_t sub_231411E00()
{
  return MEMORY[0x24BE415D0]();
}

uint64_t sub_231411E0C()
{
  return MEMORY[0x24BE415F8]();
}

uint64_t sub_231411E18()
{
  return MEMORY[0x24BE41620]();
}

uint64_t sub_231411E24()
{
  return MEMORY[0x24BE41680]();
}

uint64_t sub_231411E30()
{
  return MEMORY[0x24BE416A8]();
}

uint64_t sub_231411E3C()
{
  return MEMORY[0x24BE416B0]();
}

uint64_t sub_231411E48()
{
  return MEMORY[0x24BE416B8]();
}

uint64_t sub_231411E54()
{
  return MEMORY[0x24BE417A0]();
}

uint64_t sub_231411E60()
{
  return MEMORY[0x24BE417A8]();
}

uint64_t sub_231411E6C()
{
  return MEMORY[0x24BE417C8]();
}

uint64_t sub_231411E78()
{
  return MEMORY[0x24BE417D0]();
}

uint64_t sub_231411E84()
{
  return MEMORY[0x24BE41888]();
}

uint64_t sub_231411E90()
{
  return MEMORY[0x24BE41890]();
}

uint64_t sub_231411E9C()
{
  return MEMORY[0x24BE41898]();
}

uint64_t sub_231411EA8()
{
  return MEMORY[0x24BE418A0]();
}

uint64_t sub_231411EB4()
{
  return MEMORY[0x24BE418C8]();
}

uint64_t sub_231411EC0()
{
  return MEMORY[0x24BE418D0]();
}

uint64_t sub_231411ECC()
{
  return MEMORY[0x24BE418E0]();
}

uint64_t sub_231411ED8()
{
  return MEMORY[0x24BE418E8]();
}

uint64_t sub_231411EE4()
{
  return MEMORY[0x24BE418F0]();
}

uint64_t sub_231411EF0()
{
  return MEMORY[0x24BE418F8]();
}

uint64_t sub_231411EFC()
{
  return MEMORY[0x24BE41998]();
}

uint64_t sub_231411F08()
{
  return MEMORY[0x24BE419B8]();
}

uint64_t sub_231411F14()
{
  return MEMORY[0x24BE41A30]();
}

uint64_t sub_231411F20()
{
  return MEMORY[0x24BE41A38]();
}

uint64_t sub_231411F2C()
{
  return MEMORY[0x24BE41A40]();
}

uint64_t sub_231411F38()
{
  return MEMORY[0x24BE41A60]();
}

uint64_t sub_231411F44()
{
  return MEMORY[0x24BE41A68]();
}

uint64_t sub_231411F50()
{
  return MEMORY[0x24BE41A70]();
}

uint64_t sub_231411F5C()
{
  return MEMORY[0x24BE41C28]();
}

uint64_t sub_231411F68()
{
  return MEMORY[0x24BE41C40]();
}

uint64_t sub_231411F74()
{
  return MEMORY[0x24BE41C88]();
}

uint64_t sub_231411F80()
{
  return MEMORY[0x24BE41CB0]();
}

uint64_t sub_231411F8C()
{
  return MEMORY[0x24BE41CC8]();
}

uint64_t sub_231411F98()
{
  return MEMORY[0x24BE41CD8]();
}

uint64_t sub_231411FA4()
{
  return MEMORY[0x24BE41CE0]();
}

uint64_t sub_231411FB0()
{
  return MEMORY[0x24BE41CE8]();
}

uint64_t sub_231411FBC()
{
  return MEMORY[0x24BE41CF0]();
}

uint64_t sub_231411FC8()
{
  return MEMORY[0x24BE41CF8]();
}

uint64_t sub_231411FD4()
{
  return MEMORY[0x24BE41D00]();
}

uint64_t sub_231411FE0()
{
  return MEMORY[0x24BE41D10]();
}

uint64_t sub_231411FEC()
{
  return MEMORY[0x24BE487D0]();
}

uint64_t sub_231411FF8()
{
  return MEMORY[0x24BE487D8]();
}

uint64_t sub_231412004()
{
  return MEMORY[0x24BE41F50]();
}

uint64_t sub_231412010()
{
  return MEMORY[0x24BE41F58]();
}

uint64_t sub_23141201C()
{
  return MEMORY[0x24BE41F60]();
}

uint64_t sub_231412028()
{
  return MEMORY[0x24BE41F98]();
}

uint64_t sub_231412034()
{
  return MEMORY[0x24BE41FA0]();
}

uint64_t sub_231412040()
{
  return MEMORY[0x24BE41FC0]();
}

uint64_t sub_23141204C()
{
  return MEMORY[0x24BE41FD8]();
}

uint64_t sub_231412058()
{
  return MEMORY[0x24BE41FF8]();
}

uint64_t sub_231412064()
{
  return MEMORY[0x24BE42008]();
}

uint64_t sub_231412070()
{
  return MEMORY[0x24BE42010]();
}

uint64_t sub_23141207C()
{
  return MEMORY[0x24BE42020]();
}

uint64_t sub_231412088()
{
  return MEMORY[0x24BE42068]();
}

uint64_t sub_231412094()
{
  return MEMORY[0x24BE42070]();
}

uint64_t sub_2314120A0()
{
  return MEMORY[0x24BE420C0]();
}

uint64_t sub_2314120AC()
{
  return MEMORY[0x24BE42170]();
}

uint64_t sub_2314120B8()
{
  return MEMORY[0x24BE421C0]();
}

uint64_t sub_2314120C4()
{
  return MEMORY[0x24BE421C8]();
}

uint64_t sub_2314120D0()
{
  return MEMORY[0x24BE421D0]();
}

uint64_t sub_2314120DC()
{
  return MEMORY[0x24BE421D8]();
}

uint64_t sub_2314120E8()
{
  return MEMORY[0x24BE421E0]();
}

uint64_t sub_2314120F4()
{
  return MEMORY[0x24BE421E8]();
}

uint64_t sub_231412100()
{
  return MEMORY[0x24BE421F0]();
}

uint64_t sub_23141210C()
{
  return MEMORY[0x24BE421F8]();
}

uint64_t sub_231412118()
{
  return MEMORY[0x24BE42208]();
}

uint64_t sub_231412124()
{
  return MEMORY[0x24BE42210]();
}

uint64_t sub_231412130()
{
  return MEMORY[0x24BE42218]();
}

uint64_t sub_23141213C()
{
  return MEMORY[0x24BE42220]();
}

uint64_t sub_231412148()
{
  return MEMORY[0x24BE42228]();
}

uint64_t sub_231412154()
{
  return MEMORY[0x24BE42238]();
}

uint64_t sub_231412160()
{
  return MEMORY[0x24BE42248]();
}

uint64_t sub_23141216C()
{
  return MEMORY[0x24BE42258]();
}

uint64_t sub_231412178()
{
  return MEMORY[0x24BE42260]();
}

uint64_t sub_231412184()
{
  return MEMORY[0x24BE42270]();
}

uint64_t sub_231412190()
{
  return MEMORY[0x24BE42280]();
}

uint64_t sub_23141219C()
{
  return MEMORY[0x24BE42298]();
}

uint64_t sub_2314121A8()
{
  return MEMORY[0x24BE422A0]();
}

uint64_t sub_2314121B4()
{
  return MEMORY[0x24BE422A8]();
}

uint64_t sub_2314121C0()
{
  return MEMORY[0x24BE422B0]();
}

uint64_t sub_2314121CC()
{
  return MEMORY[0x24BE422C8]();
}

uint64_t sub_2314121D8()
{
  return MEMORY[0x24BE422D8]();
}

uint64_t sub_2314121E4()
{
  return MEMORY[0x24BE422E8]();
}

uint64_t sub_2314121F0()
{
  return MEMORY[0x24BE422F0]();
}

uint64_t sub_2314121FC()
{
  return MEMORY[0x24BE422F8]();
}

uint64_t sub_231412208()
{
  return MEMORY[0x24BE42310]();
}

uint64_t sub_231412214()
{
  return MEMORY[0x24BE42348]();
}

uint64_t sub_231412220()
{
  return MEMORY[0x24BE42350]();
}

uint64_t sub_23141222C()
{
  return MEMORY[0x24BE423E8]();
}

uint64_t sub_231412238()
{
  return MEMORY[0x24BE423F0]();
}

uint64_t sub_231412244()
{
  return MEMORY[0x24BE42400]();
}

uint64_t sub_231412250()
{
  return MEMORY[0x24BE42410]();
}

uint64_t sub_23141225C()
{
  return MEMORY[0x24BE42418]();
}

uint64_t sub_231412268()
{
  return MEMORY[0x24BE42420]();
}

uint64_t sub_231412274()
{
  return MEMORY[0x24BE42428]();
}

uint64_t sub_231412280()
{
  return MEMORY[0x24BE42438]();
}

uint64_t sub_23141228C()
{
  return MEMORY[0x24BE42440]();
}

uint64_t sub_231412298()
{
  return MEMORY[0x24BE42458]();
}

uint64_t sub_2314122A4()
{
  return MEMORY[0x24BE42480]();
}

uint64_t sub_2314122B0()
{
  return MEMORY[0x24BE42488]();
}

uint64_t sub_2314122BC()
{
  return MEMORY[0x24BE42510]();
}

uint64_t sub_2314122C8()
{
  return MEMORY[0x24BE42550]();
}

uint64_t sub_2314122D4()
{
  return MEMORY[0x24BE42558]();
}

uint64_t sub_2314122E0()
{
  return MEMORY[0x24BE425B8]();
}

uint64_t sub_2314122EC()
{
  return MEMORY[0x24BE425C0]();
}

uint64_t sub_2314122F8()
{
  return MEMORY[0x24BE425D0]();
}

uint64_t sub_231412304()
{
  return MEMORY[0x24BE425E0]();
}

uint64_t sub_231412310()
{
  return MEMORY[0x24BE42640]();
}

uint64_t sub_23141231C()
{
  return MEMORY[0x24BE42678]();
}

uint64_t sub_231412328()
{
  return MEMORY[0x24BE426A0]();
}

uint64_t sub_231412334()
{
  return MEMORY[0x24BE426A8]();
}

uint64_t sub_231412340()
{
  return MEMORY[0x24BE426B0]();
}

uint64_t sub_23141234C()
{
  return MEMORY[0x24BE426B8]();
}

uint64_t sub_231412358()
{
  return MEMORY[0x24BE42748]();
}

uint64_t sub_231412364()
{
  return MEMORY[0x24BE42758]();
}

uint64_t sub_231412370()
{
  return MEMORY[0x24BE42888]();
}

uint64_t sub_23141237C()
{
  return MEMORY[0x24BE42898]();
}

uint64_t sub_231412388()
{
  return MEMORY[0x24BE428A8]();
}

uint64_t sub_231412394()
{
  return MEMORY[0x24BE428B0]();
}

uint64_t sub_2314123A0()
{
  return MEMORY[0x24BE428B8]();
}

uint64_t sub_2314123AC()
{
  return MEMORY[0x24BE428E0]();
}

uint64_t sub_2314123B8()
{
  return MEMORY[0x24BE428F0]();
}

uint64_t sub_2314123C4()
{
  return MEMORY[0x24BE42920]();
}

uint64_t sub_2314123D0()
{
  return MEMORY[0x24BE42928]();
}

uint64_t sub_2314123DC()
{
  return MEMORY[0x24BE42930]();
}

uint64_t sub_2314123E8()
{
  return MEMORY[0x24BE42940]();
}

uint64_t sub_2314123F4()
{
  return MEMORY[0x24BE42950]();
}

uint64_t sub_231412400()
{
  return MEMORY[0x24BE429F8]();
}

uint64_t sub_23141240C()
{
  return MEMORY[0x24BE42A00]();
}

uint64_t sub_231412418()
{
  return MEMORY[0x24BE42A08]();
}

uint64_t sub_231412424()
{
  return MEMORY[0x24BE42A10]();
}

uint64_t sub_231412430()
{
  return MEMORY[0x24BE42A18]();
}

uint64_t sub_23141243C()
{
  return MEMORY[0x24BE42A40]();
}

uint64_t sub_231412448()
{
  return MEMORY[0x24BE42A58]();
}

uint64_t sub_231412454()
{
  return MEMORY[0x24BE42A60]();
}

uint64_t sub_231412460()
{
  return MEMORY[0x24BE42A70]();
}

uint64_t sub_23141246C()
{
  return MEMORY[0x24BE42AA8]();
}

uint64_t sub_231412478()
{
  return MEMORY[0x24BE42AF8]();
}

uint64_t sub_231412484()
{
  return MEMORY[0x24BE42B00]();
}

uint64_t sub_231412490()
{
  return MEMORY[0x24BE42B10]();
}

uint64_t sub_23141249C()
{
  return MEMORY[0x24BE42B18]();
}

uint64_t sub_2314124A8()
{
  return MEMORY[0x24BE42B20]();
}

uint64_t sub_2314124B4()
{
  return MEMORY[0x24BE42B28]();
}

uint64_t sub_2314124C0()
{
  return MEMORY[0x24BE42B38]();
}

uint64_t sub_2314124CC()
{
  return MEMORY[0x24BE42BA8]();
}

uint64_t sub_2314124D8()
{
  return MEMORY[0x24BE42BB0]();
}

uint64_t sub_2314124E4()
{
  return MEMORY[0x24BE42C10]();
}

uint64_t sub_2314124F0()
{
  return MEMORY[0x24BE42C18]();
}

uint64_t sub_2314124FC()
{
  return MEMORY[0x24BE42C20]();
}

uint64_t sub_231412508()
{
  return MEMORY[0x24BE42C28]();
}

uint64_t sub_231412514()
{
  return MEMORY[0x24BE42C30]();
}

uint64_t sub_231412520()
{
  return MEMORY[0x24BE42C80]();
}

uint64_t sub_23141252C()
{
  return MEMORY[0x24BE42C98]();
}

uint64_t sub_231412538()
{
  return MEMORY[0x24BE42CB8]();
}

uint64_t sub_231412544()
{
  return MEMORY[0x24BE42D28]();
}

uint64_t sub_231412550()
{
  return MEMORY[0x24BE42D30]();
}

uint64_t sub_23141255C()
{
  return MEMORY[0x24BE42D38]();
}

uint64_t sub_231412568()
{
  return MEMORY[0x24BE42D48]();
}

uint64_t sub_231412574()
{
  return MEMORY[0x24BE42D68]();
}

uint64_t sub_231412580()
{
  return MEMORY[0x24BE42DF0]();
}

uint64_t sub_23141258C()
{
  return MEMORY[0x24BE42E00]();
}

uint64_t sub_231412598()
{
  return MEMORY[0x24BE42E18]();
}

uint64_t sub_2314125A4()
{
  return MEMORY[0x24BE42E30]();
}

uint64_t sub_2314125B0()
{
  return MEMORY[0x24BE42E48]();
}

uint64_t sub_2314125BC()
{
  return MEMORY[0x24BE42E58]();
}

uint64_t sub_2314125C8()
{
  return MEMORY[0x24BE42E60]();
}

uint64_t sub_2314125D4()
{
  return MEMORY[0x24BE42E78]();
}

uint64_t sub_2314125E0()
{
  return MEMORY[0x24BE42E80]();
}

uint64_t sub_2314125EC()
{
  return MEMORY[0x24BE42E90]();
}

uint64_t sub_2314125F8()
{
  return MEMORY[0x24BE42EC0]();
}

uint64_t sub_231412604()
{
  return MEMORY[0x24BE42EC8]();
}

uint64_t sub_231412610()
{
  return MEMORY[0x24BE42ED0]();
}

uint64_t sub_23141261C()
{
  return MEMORY[0x24BE42EE0]();
}

uint64_t sub_231412628()
{
  return MEMORY[0x24BE42EF8]();
}

uint64_t sub_231412634()
{
  return MEMORY[0x24BE42F00]();
}

uint64_t sub_231412640()
{
  return MEMORY[0x24BE42F08]();
}

uint64_t sub_23141264C()
{
  return MEMORY[0x24BE42F18]();
}

uint64_t sub_231412658()
{
  return MEMORY[0x24BE42F28]();
}

uint64_t sub_231412664()
{
  return MEMORY[0x24BE42F78]();
}

uint64_t sub_231412670()
{
  return MEMORY[0x24BE42FB0]();
}

uint64_t sub_23141267C()
{
  return MEMORY[0x24BE42FB8]();
}

uint64_t sub_231412688()
{
  return MEMORY[0x24BE42FC0]();
}

uint64_t sub_231412694()
{
  return MEMORY[0x24BE42FC8]();
}

uint64_t sub_2314126A0()
{
  return MEMORY[0x24BE42FE8]();
}

uint64_t sub_2314126AC()
{
  return MEMORY[0x24BE42FF0]();
}

uint64_t sub_2314126B8()
{
  return MEMORY[0x24BE43010]();
}

uint64_t sub_2314126C4()
{
  return MEMORY[0x24BE43080]();
}

uint64_t sub_2314126D0()
{
  return MEMORY[0x24BE430A0]();
}

uint64_t sub_2314126DC()
{
  return MEMORY[0x24BE430B0]();
}

uint64_t sub_2314126E8()
{
  return MEMORY[0x24BE430D0]();
}

uint64_t sub_2314126F4()
{
  return MEMORY[0x24BE43100]();
}

uint64_t sub_231412700()
{
  return MEMORY[0x24BE43108]();
}

uint64_t sub_23141270C()
{
  return MEMORY[0x24BE43110]();
}

uint64_t sub_231412718()
{
  return MEMORY[0x24BE43140]();
}

uint64_t sub_231412724()
{
  return MEMORY[0x24BE43188]();
}

uint64_t sub_231412730()
{
  return MEMORY[0x24BE431A0]();
}

uint64_t sub_23141273C()
{
  return MEMORY[0x24BE431A8]();
}

uint64_t sub_231412748()
{
  return MEMORY[0x24BE431B0]();
}

uint64_t sub_231412754()
{
  return MEMORY[0x24BE431B8]();
}

uint64_t sub_231412760()
{
  return MEMORY[0x24BE431D0]();
}

uint64_t sub_23141276C()
{
  return MEMORY[0x24BE431E0]();
}

uint64_t sub_231412778()
{
  return MEMORY[0x24BE431E8]();
}

uint64_t sub_231412784()
{
  return MEMORY[0x24BE431F0]();
}

uint64_t sub_231412790()
{
  return MEMORY[0x24BE43200]();
}

uint64_t sub_23141279C()
{
  return MEMORY[0x24BE43208]();
}

uint64_t sub_2314127A8()
{
  return MEMORY[0x24BE43210]();
}

uint64_t sub_2314127B4()
{
  return MEMORY[0x24BE43270]();
}

uint64_t sub_2314127C0()
{
  return MEMORY[0x24BE43280]();
}

uint64_t sub_2314127CC()
{
  return MEMORY[0x24BE43290]();
}

uint64_t sub_2314127D8()
{
  return MEMORY[0x24BE43348]();
}

uint64_t sub_2314127E4()
{
  return MEMORY[0x24BE43360]();
}

uint64_t sub_2314127F0()
{
  return MEMORY[0x24BE43368]();
}

uint64_t sub_2314127FC()
{
  return MEMORY[0x24BE433B0]();
}

uint64_t sub_231412808()
{
  return MEMORY[0x24BE433B8]();
}

uint64_t sub_231412814()
{
  return MEMORY[0x24BE433C0]();
}

uint64_t sub_231412820()
{
  return MEMORY[0x24BE433C8]();
}

uint64_t sub_23141282C()
{
  return MEMORY[0x24BE433D0]();
}

uint64_t sub_231412838()
{
  return MEMORY[0x24BE433D8]();
}

uint64_t sub_231412844()
{
  return MEMORY[0x24BE433E0]();
}

uint64_t sub_231412850()
{
  return MEMORY[0x24BE433E8]();
}

uint64_t sub_23141285C()
{
  return MEMORY[0x24BE433F0]();
}

uint64_t sub_231412868()
{
  return MEMORY[0x24BE433F8]();
}

uint64_t sub_231412874()
{
  return MEMORY[0x24BE43408]();
}

uint64_t sub_231412880()
{
  return MEMORY[0x24BE43418]();
}

uint64_t sub_23141288C()
{
  return MEMORY[0x24BE43428]();
}

uint64_t sub_231412898()
{
  return MEMORY[0x24BE43430]();
}

uint64_t sub_2314128A4()
{
  return MEMORY[0x24BE43438]();
}

uint64_t sub_2314128B0()
{
  return MEMORY[0x24BE43478]();
}

uint64_t sub_2314128BC()
{
  return MEMORY[0x24BE434A0]();
}

uint64_t sub_2314128C8()
{
  return MEMORY[0x24BE434B0]();
}

uint64_t sub_2314128D4()
{
  return MEMORY[0x24BE434C0]();
}

uint64_t sub_2314128E0()
{
  return MEMORY[0x24BE434E8]();
}

uint64_t sub_2314128EC()
{
  return MEMORY[0x24BE43508]();
}

uint64_t sub_2314128F8()
{
  return MEMORY[0x24BE43538]();
}

uint64_t sub_231412904()
{
  return MEMORY[0x24BE43568]();
}

uint64_t sub_231412910()
{
  return MEMORY[0x24BE43570]();
}

uint64_t sub_23141291C()
{
  return MEMORY[0x24BE43588]();
}

uint64_t sub_231412928()
{
  return MEMORY[0x24BE43598]();
}

uint64_t sub_231412934()
{
  return MEMORY[0x24BE435A8]();
}

uint64_t sub_231412940()
{
  return MEMORY[0x24BE435C0]();
}

uint64_t sub_23141294C()
{
  return MEMORY[0x24BE435E0]();
}

uint64_t sub_231412958()
{
  return MEMORY[0x24BE435E8]();
}

uint64_t sub_231412964()
{
  return MEMORY[0x24BE435F0]();
}

uint64_t sub_231412970()
{
  return MEMORY[0x24BE43608]();
}

uint64_t sub_23141297C()
{
  return MEMORY[0x24BE43668]();
}

uint64_t sub_231412988()
{
  return MEMORY[0x24BE436A8]();
}

uint64_t sub_231412994()
{
  return MEMORY[0x24BE436B8]();
}

uint64_t sub_2314129A0()
{
  return MEMORY[0x24BE436F0]();
}

uint64_t sub_2314129AC()
{
  return MEMORY[0x24BE436F8]();
}

uint64_t sub_2314129B8()
{
  return MEMORY[0x24BE43778]();
}

uint64_t sub_2314129C4()
{
  return MEMORY[0x24BE43798]();
}

uint64_t sub_2314129D0()
{
  return MEMORY[0x24BE43898]();
}

uint64_t sub_2314129DC()
{
  return MEMORY[0x24BE438B8]();
}

uint64_t sub_2314129E8()
{
  return MEMORY[0x24BE438C0]();
}

uint64_t sub_2314129F4()
{
  return MEMORY[0x24BE43958]();
}

uint64_t sub_231412A00()
{
  return MEMORY[0x24BE43960]();
}

uint64_t sub_231412A0C()
{
  return MEMORY[0x24BE43968]();
}

uint64_t sub_231412A18()
{
  return MEMORY[0x24BE43978]();
}

uint64_t sub_231412A24()
{
  return MEMORY[0x24BE439B8]();
}

uint64_t sub_231412A30()
{
  return MEMORY[0x24BE439C0]();
}

uint64_t sub_231412A3C()
{
  return MEMORY[0x24BE439D0]();
}

uint64_t sub_231412A48()
{
  return MEMORY[0x24BE439D8]();
}

uint64_t sub_231412A54()
{
  return MEMORY[0x24BE439E0]();
}

uint64_t sub_231412A60()
{
  return MEMORY[0x24BE43A28]();
}

uint64_t sub_231412A6C()
{
  return MEMORY[0x24BE43A98]();
}

uint64_t sub_231412A78()
{
  return MEMORY[0x24BE43AD0]();
}

uint64_t sub_231412A84()
{
  return MEMORY[0x24BE43AD8]();
}

uint64_t sub_231412A90()
{
  return MEMORY[0x24BE43B70]();
}

uint64_t sub_231412A9C()
{
  return MEMORY[0x24BE43B78]();
}

uint64_t sub_231412AA8()
{
  return MEMORY[0x24BE43B98]();
}

uint64_t sub_231412AB4()
{
  return MEMORY[0x24BE43BD8]();
}

uint64_t sub_231412AC0()
{
  return MEMORY[0x24BE43BE0]();
}

uint64_t sub_231412ACC()
{
  return MEMORY[0x24BE43BF0]();
}

uint64_t sub_231412AD8()
{
  return MEMORY[0x24BE43CB0]();
}

uint64_t sub_231412AE4()
{
  return MEMORY[0x24BE43CD8]();
}

uint64_t sub_231412AF0()
{
  return MEMORY[0x24BE43D08]();
}

uint64_t sub_231412AFC()
{
  return MEMORY[0x24BE43D10]();
}

uint64_t sub_231412B08()
{
  return MEMORY[0x24BE43D28]();
}

uint64_t sub_231412B14()
{
  return MEMORY[0x24BE43D40]();
}

uint64_t sub_231412B20()
{
  return MEMORY[0x24BE43D50]();
}

uint64_t sub_231412B2C()
{
  return MEMORY[0x24BE43D58]();
}

uint64_t sub_231412B38()
{
  return MEMORY[0x24BE43D78]();
}

uint64_t sub_231412B44()
{
  return MEMORY[0x24BE43D90]();
}

uint64_t sub_231412B50()
{
  return MEMORY[0x24BE43D98]();
}

uint64_t sub_231412B5C()
{
  return MEMORY[0x24BE43DA0]();
}

uint64_t sub_231412B68()
{
  return MEMORY[0x24BE43DA8]();
}

uint64_t sub_231412B74()
{
  return MEMORY[0x24BE43DB8]();
}

uint64_t sub_231412B80()
{
  return MEMORY[0x24BE43DD0]();
}

uint64_t sub_231412B8C()
{
  return MEMORY[0x24BE43DD8]();
}

uint64_t sub_231412B98()
{
  return MEMORY[0x24BE43DE0]();
}

uint64_t sub_231412BA4()
{
  return MEMORY[0x24BE43DF0]();
}

uint64_t sub_231412BB0()
{
  return MEMORY[0x24BE43DF8]();
}

uint64_t sub_231412BBC()
{
  return MEMORY[0x24BE43E00]();
}

uint64_t sub_231412BC8()
{
  return MEMORY[0x24BE43E08]();
}

uint64_t sub_231412BD4()
{
  return MEMORY[0x24BE43E18]();
}

uint64_t sub_231412BE0()
{
  return MEMORY[0x24BE43E20]();
}

uint64_t sub_231412BEC()
{
  return MEMORY[0x24BE43E30]();
}

uint64_t sub_231412BF8()
{
  return MEMORY[0x24BE43E48]();
}

uint64_t sub_231412C04()
{
  return MEMORY[0x24BE43E50]();
}

uint64_t sub_231412C10()
{
  return MEMORY[0x24BE43E60]();
}

uint64_t sub_231412C1C()
{
  return MEMORY[0x24BE43E90]();
}

uint64_t sub_231412C28()
{
  return MEMORY[0x24BE43EA8]();
}

uint64_t sub_231412C34()
{
  return MEMORY[0x24BE43EB8]();
}

uint64_t sub_231412C40()
{
  return MEMORY[0x24BE43EC0]();
}

uint64_t sub_231412C4C()
{
  return MEMORY[0x24BE43EC8]();
}

uint64_t sub_231412C58()
{
  return MEMORY[0x24BE43ED8]();
}

uint64_t sub_231412C64()
{
  return MEMORY[0x24BE43EF0]();
}

uint64_t sub_231412C70()
{
  return MEMORY[0x24BE43EF8]();
}

uint64_t sub_231412C7C()
{
  return MEMORY[0x24BE43F28]();
}

uint64_t sub_231412C88()
{
  return MEMORY[0x24BE43F40]();
}

uint64_t sub_231412C94()
{
  return MEMORY[0x24BE43F50]();
}

uint64_t sub_231412CA0()
{
  return MEMORY[0x24BE43F58]();
}

uint64_t sub_231412CAC()
{
  return MEMORY[0x24BE43F78]();
}

uint64_t sub_231412CB8()
{
  return MEMORY[0x24BE43F88]();
}

uint64_t sub_231412CC4()
{
  return MEMORY[0x24BE43FA8]();
}

uint64_t sub_231412CD0()
{
  return MEMORY[0x24BE43FC0]();
}

uint64_t sub_231412CDC()
{
  return MEMORY[0x24BE43FC8]();
}

uint64_t sub_231412CE8()
{
  return MEMORY[0x24BE43FD8]();
}

uint64_t sub_231412CF4()
{
  return MEMORY[0x24BE44000]();
}

uint64_t sub_231412D00()
{
  return MEMORY[0x24BE44010]();
}

uint64_t sub_231412D0C()
{
  return MEMORY[0x24BE44020]();
}

uint64_t sub_231412D18()
{
  return MEMORY[0x24BE44028]();
}

uint64_t sub_231412D24()
{
  return MEMORY[0x24BE44038]();
}

uint64_t sub_231412D30()
{
  return MEMORY[0x24BE44048]();
}

uint64_t sub_231412D3C()
{
  return MEMORY[0x24BE44058]();
}

uint64_t sub_231412D48()
{
  return MEMORY[0x24BE44080]();
}

uint64_t sub_231412D54()
{
  return MEMORY[0x24BE44088]();
}

