uint64_t sub_2317CA9E0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  LOBYTE(v1) = a1;
  v2 = sub_2318D4080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CD49C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(_BYTE)v1)
    return v1;
  v9 = sub_2318D29AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_2318D4074();
  v1 = sub_2318D444C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2317CD4F0((uint64_t)v8);
  return v1;
}

BOOL sub_2317CAB88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t *sub_2317CAB9C@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_2317CABB4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_2317CABC0(_QWORD *a1@<X8>)
{
  *a1 = &unk_25007C458;
}

uint64_t sub_2317CABD0()
{
  sub_2318D6348();
  sub_2318D6354();
  return sub_2318D6384();
}

uint64_t sub_2317CAC14()
{
  return sub_2318D6354();
}

uint64_t sub_2317CAC3C()
{
  sub_2318D6348();
  sub_2318D6354();
  return sub_2318D6384();
}

void sub_2317CAC7C(uint64_t a1, void *a2, unsigned __int8 a3)
{
  id v5;

  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      sub_2318D567C();
      sub_2318D6354();
    }
    else
    {
      sub_2318D567C();
    }
  }
  else
  {
    v5 = objc_msgSend(a2, sel_semanticIdentifier);
    sub_2318D5E80();

    sub_2318D6360();
    sub_2317CBC04(a2, a3);
  }
}

uint64_t sub_2317CAD70(void *a1, unsigned __int8 a2)
{
  id v4;

  sub_2318D6348();
  if (a2 >> 6)
  {
    sub_2318D567C();
    if (a2 >> 6 == 1)
      sub_2318D6354();
  }
  else
  {
    v4 = objc_msgSend(a1, sel_semanticIdentifier);
    sub_2318D5E80();

    sub_2318D6360();
    sub_2317CBC04(a1, a2);
  }
  return sub_2318D6384();
}

uint64_t sub_2317CAE58()
{
  uint64_t v0;

  return sub_2317CAD70(*(void **)v0, *(_BYTE *)(v0 + 8));
}

void sub_2317CAE64(uint64_t a1)
{
  uint64_t v1;

  sub_2317CAC7C(a1, *(void **)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_2317CAE70()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_2318D6348();
  if (v2 >> 6)
  {
    sub_2318D567C();
    if (v2 >> 6 == 1)
      sub_2318D6354();
  }
  else
  {
    v3 = objc_msgSend(v1, sel_semanticIdentifier);
    sub_2318D5E80();

    sub_2318D6360();
    sub_2317CBC04(v1, v2);
  }
  return sub_2318D6384();
}

uint64_t sub_2317CAF54(uint64_t a1, uint64_t a2)
{
  return sub_2317CCB8C(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_2317CAF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v4 = v3;
  v8 = sub_2318D2B80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D2B74();
  result = sub_2318D2B74();
  if (v12 == result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    v14 = sub_2318D2B74();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v14 == 1)
    {
      sub_2317CD53C();
      v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2318D4C44();
      result = v15(a1, a2, a3);
      v16 = *(void (**)(uint64_t, uint64_t))(v4 + qword_255F25090);
      if (v16)
      {
        swift_retain();
        v16(a2, a3);
        return sub_2317CD52C((uint64_t)v16);
      }
    }
  }
  return result;
}

uint64_t sub_2317CB0A8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v5 = sub_2318D2B80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  sub_2318D2B38();
  sub_2318D2B38();
  v12 = a3;
  v13 = a1;
  sub_2317CAF6C((uint64_t)v12, (uint64_t)v11, (uint64_t)v9);

  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

BOOL sub_2317CB19C(uint64_t a1, uint64_t a2)
{
  return sub_2317CCCD4(a2);
}

uint64_t sub_2317CB1A4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_2317CB470(a1, a2, a3, a4, (uint64_t (*)(char *))sub_2317CCCD4);
}

uint64_t sub_2317CB1B0()
{
  return 3;
}

uint64_t sub_2317CB1B8()
{
  return 3;
}

uint64_t sub_2317CB1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_2318D4080();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CD49C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2 || (v10 = 0, a2 == 1))
  {
    v11 = sub_2318D29AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_2318D4074();
    v10 = sub_2318D444C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_2317CD4F0((uint64_t)v9);
  }
  return v10;
}

id sub_2317CB36C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v5;

  if (a4 <= 2 && (sub_2317CA9E0(a4), v4))
  {
    v5 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

uint64_t sub_2317CB3B8(uint64_t a1, uint64_t a2)
{
  return sub_2317CCE60(a2);
}

id sub_2317CB3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;

  sub_2317CCE60(a4);
  if (v4)
  {
    v5 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

uint64_t sub_2317CB404(uint64_t a1, uint64_t a2)
{
  return sub_2317CCFAC(a2);
}

uint64_t sub_2317CB40C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_2317CCFAC(a4);

  return v8;
}

uint64_t sub_2317CB45C(uint64_t a1, uint64_t a2)
{
  return sub_2317CD1E0(a2);
}

uint64_t sub_2317CB464(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_2317CB470(a1, a2, a3, a4, (uint64_t (*)(char *))sub_2317CD1E0);
}

uint64_t sub_2317CB470(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v15;

  v8 = sub_2318D2B80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D2B38();
  v12 = a3;
  v13 = a1;
  LOBYTE(a5) = a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

uint64_t sub_2317CB530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255F28528;
  v2 = sub_2318D4974();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return sub_2317CD52C(*(_QWORD *)(v0 + qword_255F25090));
}

id sub_2317CB580()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListEditTableDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2317CB5B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_255F28528;
  v3 = sub_2318D4974();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return sub_2317CD52C(*(_QWORD *)(a1 + qword_255F25090));
}

void sub_2317CB608()
{
  swift_release();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.imageSizeConfig()
{
  void *v0;
  id v1;

  sub_2317CCC9C(0, &qword_25418B0C0);
  v0 = (void *)sub_2318D5DC0();
  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v0);

  return v1;
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.hierarchicalColorConfig()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationWithHierarchicalColor_, v0);

  return v1;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_listManager()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.coreMedsShardStateCancellable()
{
  return 0;
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.localeSupportsOntology()
{
  return objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.baseIdentifier()
{
  uint64_t v1;

  v1 = sub_2318D55BC();
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletOne()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletTwo()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletThree()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletFour()
{
  return 0;
}

uint64_t variable initialization expression of MedicationCategoryViewController.cancellables()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t variable initialization expression of MedicationListCompactDataSource.viewController()
{
  return 0;
}

uint64_t variable initialization expression of MedicationListCompactDataSource.$__lazy_storage_$_ontologyStore()
{
  return 0;
}

uint64_t variable initialization expression of MedicationListCompactDataSource.$__lazy_storage_$_itemsPublisher()
{
  return 0;
}

uint64_t variable initialization expression of FollowUpNotificationTipDataSource.listManagerCancellable()
{
  return 0;
}

uint64_t variable initialization expression of ExpiringScheduleDataSource.expiringSchedulesSubscription()
{
  return 0;
}

uint64_t variable initialization expression of TipDataSource.viewController()
{
  return 0;
}

uint64_t _s26MedicationsHealthAppPlugin32MedicationCategoryViewControllerC20incompatibilityCache33_9A20BE614D3472384699E28C88C3636BLL0bA10Experience0a23ScheduleIncompatibilityJ0Cvpfi_0()
{
  sub_2318D4584();
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2318D453C();
  swift_allocObject();
  return sub_2318D4530();
}

uint64_t variable initialization expression of ArchivedMedicationsListDataSource.$__lazy_storage_$_itemsPublisher()
{
  return 0;
}

id variable initialization expression of InteractiveTimelineViewController.focusIndicatorImageView()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  if (qword_25418B0E0 != -1)
    swift_once();
  v0 = (void *)qword_25418FC38;
  v1 = objc_allocWithZone(MEMORY[0x24BEBD668]);
  v2 = v0;
  v3 = objc_msgSend(v1, sel_initWithImage_, v2);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v3, sel_setTintColor_, v4);

  return v3;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.$__lazy_storage_$_timelineViewController()
{
  return 0;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.dateIndicator()
{
  return 0;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.timelineHeight()
{
  return 0;
}

uint64_t variable initialization expression of LocalScheduleUnavailableDataSource.$__lazy_storage_$_scheduleControlObserver()
{
  return 0;
}

uint64_t variable initialization expression of LocalScheduleUnavailableDataSource.cancellables()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t variable initialization expression of LoggingBaseFeedItemViewController.feedItemData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t variable initialization expression of LoggingBaseFeedItemViewController.$__lazy_storage_$_decoder()
{
  return 0;
}

double variable initialization expression of LoggingBaseFeedItemViewController.context@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of TimeZoneDataSource.timeZoneChangeSubscription()
{
  return 0;
}

uint64_t variable initialization expression of TimeZoneDataSource.notificationManager()
{
  sub_2318D2BF8();
  return sub_2318D2BEC();
}

uint64_t variable initialization expression of RemoteScheduleUnavailableDataSource.$__lazy_storage_$_scheduleControlObserver()
{
  return 0;
}

uint64_t variable initialization expression of RemoteScheduleUnavailableDataSource.cancellables()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t type metadata accessor for ListEditTableDataSource()
{
  uint64_t result;

  result = qword_255F25098;
  if (!qword_255F25098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317CBA6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D4974();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2317CBAE8()
{
  return type metadata accessor for ListEditTableDataSource();
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F25148, (uint64_t)&unk_25007C968, MEMORY[0x24BEE4D40]);
}

__n128 initializeWithTake for MedicationDoseEventDetails(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2317CBB1C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2317CBB3C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F25150, (uint64_t)&unk_25007C9E0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKMedicationRoomProvenance(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F25158, (uint64_t)&unk_25007CA08, MEMORY[0x24BEE4D40]);
}

uint64_t initializeBufferWithCopyOfBuffer for EditListCellModel(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_2317CBBE0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_2317CBBE0(id result, unsigned __int8 a2)
{
  if (a2 <= 0x3Fu)
    return result;
  return result;
}

void destroy for EditListCellModel(uint64_t a1)
{
  sub_2317CBC04(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_2317CBC04(id a1, unsigned __int8 a2)
{
  if (a2 <= 0x3Fu)

}

uint64_t assignWithCopy for EditListCellModel(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_2317CBBE0(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_2317CBC04(v5, v6);
  return a1;
}

uint64_t initializeWithTake for EditListCellModel(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for EditListCellModel(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_2317CBC04(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditListCellModel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EditListCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_2317CBD60(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2317CBD80(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_2317CBD90(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditListCellModel()
{
  return &type metadata for EditListCellModel;
}

_BYTE *initializeBufferWithCopyOfBuffer for Section(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Section(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2317CBEB4 + 4 * byte_2318D7475[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2317CBEE8 + 4 * byte_2318D7470[v4]))();
}

uint64_t sub_2317CBEE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2317CBEF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2317CBEF8);
  return result;
}

uint64_t sub_2317CBF04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2317CBF0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2317CBF10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2317CBF18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2317CBF24(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2317CBF30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Section()
{
  return &type metadata for Section;
}

void type metadata accessor for HKMedicationFreeTextLoggingUnitCode(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_254189F40, (uint64_t)&unk_25007CB48, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKMedicationFreeTextFormTypeCode(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_254189F18, (uint64_t)&unk_25007CB68, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2317CBF80()
{
  return sub_2317CC4AC(&qword_255F25160, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&unk_2318D75D4);
}

_QWORD *sub_2317CBFAC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_2317CBFC0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_2317CBFF0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_2317CC004(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_2317CC018(uint64_t a1, uint64_t a2)
{
  return sub_2317CC3E4(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_2317CC024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2317CC434(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_2317CC030(uint64_t a1, uint64_t a2)
{
  return sub_2317CC9B8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2317CC048(uint64_t a1, uint64_t a2)
{
  return sub_2317CC9B8(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2317CC05C()
{
  return sub_2318D6354();
}

void sub_2317CC084(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_2317CC08C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_2317CC0A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_2317CC0B4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2317CC0E0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_2317CC104(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_2317CC118@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2317CC12C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_2317CC140(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_2317CC154(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2317CC168()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_2317CC178()
{
  return sub_2318D5FF4();
}

_QWORD *sub_2317CC190(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_2317CC1A4()
{
  return sub_2318D58E0();
}

uint64_t sub_2317CC1AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x2348E66A8](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_2317CC1FC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x2348E66B4](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_2317CC250(float *a1@<X8>)
{
  *a1 = MEMORY[0x2348E66C0]();
}

uint64_t sub_2317CC274(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2318D55A4();
  *a2 = 0;
  return result;
}

uint64_t sub_2317CC2E8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2318D55B0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2317CC364@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2318D55BC();
  v2 = sub_2318D558C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2317CC3A4(uint64_t a1, uint64_t a2)
{
  return sub_2317CC3E4(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_2317CC3B0()
{
  return sub_2318D6378();
}

uint64_t sub_2317CC3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2317CC434(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_2317CC3E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  sub_2318D6348();
  a3(v5);
  return sub_2318D6384();
}

uint64_t sub_2317CC434(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v6;

  v6 = *v4;
  sub_2318D6348();
  a4(v6);
  return sub_2318D6384();
}

uint64_t sub_2317CC480()
{
  return sub_2317CC4AC(&qword_255F25168, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextLoggingUnitCode, (uint64_t)&unk_2318D7674);
}

uint64_t sub_2317CC4AC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2348E7734](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2317CC4F0()
{
  unint64_t result;

  result = qword_255F25170;
  if (!qword_255F25170)
  {
    result = MEMORY[0x2348E7734](&unk_2318D7784, &type metadata for Section);
    atomic_store(result, (unint64_t *)&qword_255F25170);
  }
  return result;
}

unint64_t sub_2317CC538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25178;
  if (!qword_255F25178)
  {
    sub_2317CDA94(255, &qword_255F25180, (uint64_t)&type metadata for Section, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255F25178);
  }
  return result;
}

unint64_t sub_2317CC59C()
{
  unint64_t result;

  result = qword_255F25188;
  if (!qword_255F25188)
  {
    result = MEMORY[0x2348E7734](&unk_2318D77AC, &type metadata for EditListCellModel);
    atomic_store(result, (unint64_t *)&qword_255F25188);
  }
  return result;
}

uint64_t sub_2317CC5E0()
{
  return sub_2317CC4AC(&qword_255F25190, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, (uint64_t)&unk_2318D7864);
}

BOOL sub_2317CC610(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_2317CC624@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2317CC634(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2317CC640@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2317CDA40(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_2317CC67C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2317CC68C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2318D55BC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2317CC6B4()
{
  sub_2317CC4AC(&qword_255F252E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8380);
  sub_2317CC4AC((unint64_t *)&unk_255F252F0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D82D4);
  return sub_2318D61C8();
}

uint64_t sub_2317CC738()
{
  sub_2317CC4AC(&qword_255F25288, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2318D80E8);
  sub_2317CC4AC((unint64_t *)&unk_255F25290, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2318D8090);
  return sub_2318D61C8();
}

uint64_t sub_2317CC7BC()
{
  sub_2317CC4AC((unint64_t *)&unk_25418B090, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_2318D8170);
  sub_2317CC4AC(&qword_255F252A0, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_2318D7F84);
  return sub_2318D61C8();
}

_DWORD *sub_2317CC840@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_2317CC850@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_2317CC85C()
{
  sub_2317CC4AC(&qword_255F252A8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2318D7CFC);
  sub_2317CC4AC(&qword_255F252B0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2318D7C9C);
  return sub_2318D61C8();
}

uint64_t sub_2317CC8F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2318D558C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2317CC934()
{
  sub_2317CC4AC(&qword_255F252B8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2318D81B4);
  sub_2317CC4AC(&qword_255F252C0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2318D7B88);
  return sub_2318D61C8();
}

uint64_t sub_2317CC9B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2318D55BC();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2317CC9F4()
{
  sub_2318D55BC();
  sub_2318D567C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2317CCA34()
{
  uint64_t v0;

  sub_2318D55BC();
  sub_2318D6348();
  sub_2318D567C();
  v0 = sub_2318D6384();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2317CCAA4()
{
  return sub_2318D5910();
}

uint64_t sub_2317CCAAC()
{
  return sub_2318D636C();
}

void sub_2317CCADC()
{
  JUMPOUT(0x2348E70F8);
}

uint64_t sub_2317CCAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2318D55BC();
  v2 = v1;
  if (v0 == sub_2318D55BC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_2317CCB78(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2317CCB8C(void *a1, unsigned __int8 a2, void *a3, unsigned __int8 a4)
{
  char v7;
  char v9;

  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      if ((a4 & 0xC0) == 0x40)
      {
        v7 = a3 == a1;
        return v7 & 1;
      }
    }
    else if ((a4 & 0xC0) == 0x80 && !a3 && a4 == 128)
    {
      v7 = 1;
      return v7 & 1;
    }
LABEL_13:
    v7 = 0;
    return v7 & 1;
  }
  if (a4 >= 0x40u)
    goto LABEL_13;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B2D8);
  sub_2317CBBE0(a1, a2);
  sub_2317CBBE0(a3, a4);
  v9 = sub_2318D5E74();
  sub_2317CBC04(a3, a4);
  sub_2317CBC04(a1, a2);
  v7 = ((a2 & 1) == 0) ^ a4;
  if ((v9 & 1) == 0)
    v7 = 0;
  return v7 & 1;
}

uint64_t sub_2317CCC9C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

BOOL sub_2317CCCD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = sub_2318D4974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D2B80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = sub_2318D2B74();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12 != 1)
    return 0;
  v13 = v2 + qword_255F28528;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  v14 = sub_2318D4968();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v15 > 1;
}

uint64_t sub_2317CCE60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_2318D4080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CD49C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if (a1 == 2)
  {
    v10 = sub_2318D29AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_2318D4074();
    v9 = sub_2318D444C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_2317CD4F0((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_2317CCFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = sub_2318D4974();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  switch(a1)
  {
    case 0:
      return 1;
    case 1:
      v10 = v1 + qword_255F28528;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v10, v3);
      v11 = sub_2318D4968();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      break;
    case 2:
      v13 = v1 + qword_255F28528;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v13, v3);
      v11 = sub_2318D4920();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      break;
    default:
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_2318D60C0();
      swift_bridgeObjectRelease();
      v15 = 0xD00000000000001FLL;
      v16 = 0x80000002318DEBA0;
      v17 = a1;
      sub_2318D6288();
      sub_2318D56A0();
      swift_bridgeObjectRelease();
      result = sub_2318D6150();
      __break(1u);
      return result;
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v14 <= 1)
    return 1;
  else
    return v14;
}

uint64_t sub_2317CD1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;

  v2 = v1;
  v4 = sub_2318D4974();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_2318D2B80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v31 = a1;
  v17((char *)&v30 - v15, a1, v10);
  v18 = sub_2318D2B74();
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v16, v10);
  if (v18 == 2)
  {
    v20 = v2 + qword_255F28528;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v20, v4);
    v21 = sub_2318D4920();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v23 = v22 != 0;
  }
  else
  {
    v23 = 0;
  }
  v17(v14, v31, v10);
  v24 = sub_2318D2B74();
  v19(v14, v10);
  if (v24 == 1)
  {
    v25 = v2 + qword_255F28528;
    swift_beginAccess();
    v26 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v30, v25, v4);
    v27 = sub_2318D4968();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v23)
      return v28 != 0;
    return 1;
  }
  return v23;
}

void sub_2317CD49C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B2C0)
  {
    sub_2318D29AC();
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B2C0);
  }
}

uint64_t sub_2317CD4F0(uint64_t a1)
{
  uint64_t v2;

  sub_2317CD49C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317CD52C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_2317CD53C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25198)
  {
    sub_2317CD5B4();
    sub_2317CD5F8();
    v0 = sub_2318D4C38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25198);
  }
}

unint64_t sub_2317CD5B4()
{
  unint64_t result;

  result = qword_255F251A0;
  if (!qword_255F251A0)
  {
    result = MEMORY[0x2348E7734](&unk_2318D76D4, &type metadata for Section);
    atomic_store(result, (unint64_t *)&qword_255F251A0);
  }
  return result;
}

unint64_t sub_2317CD5F8()
{
  unint64_t result;

  result = qword_255F251A8;
  if (!qword_255F251A8)
  {
    result = MEMORY[0x2348E7734](&unk_2318D77D4, &type metadata for EditListCellModel);
    atomic_store(result, (unint64_t *)&qword_255F251A8);
  }
  return result;
}

void type metadata accessor for HKDisplayCategoryIdentifier(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F251B0, (uint64_t)&unk_25007CB88, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F251B8, (uint64_t)&unk_25007CBA8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
  sub_2317CDA94(a1, (unint64_t *)&unk_255F251C0, (uint64_t)&unk_25007CBD8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_25418B0A8, (uint64_t)&unk_25007CC00, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
  sub_2317CDA94(a1, (unint64_t *)&unk_255F251D0, (uint64_t)&unk_25007CC28, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_25418B058, (uint64_t)&unk_25007CC50, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F251E0, (uint64_t)&unk_25007CCD0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F251E8, (uint64_t)&unk_25007CCF8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_2317CDA94(a1, (unint64_t *)&unk_255F251F0, (uint64_t)&unk_25007CD20, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKMedicationDoseEventStatus(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_254189F08, (uint64_t)&unk_25007CD40, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2317CD754()
{
  return sub_2317CC4AC(&qword_255F25200, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2318D7B4C);
}

uint64_t sub_2317CD780()
{
  return sub_2317CC4AC(&qword_255F25208, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2318D7B20);
}

uint64_t sub_2317CD7AC()
{
  return sub_2317CC4AC(&qword_255F25210, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2318D7C60);
}

uint64_t sub_2317CD7D8()
{
  return sub_2317CC4AC(&qword_255F25218, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2318D7C34);
}

uint64_t sub_2317CD804()
{
  return sub_2317CC4AC(&qword_255F25220, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2318D7CD0);
}

uint64_t sub_2317CD830()
{
  return sub_2317CC4AC(&qword_255F25228, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2318D7DBC);
}

uint64_t sub_2317CD85C()
{
  return sub_2317CC4AC(&qword_255F25230, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2318D7D8C);
}

uint64_t sub_2317CD888()
{
  return sub_2317CC4AC(&qword_255F25238, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2318D7DE4);
}

uint64_t sub_2317CD8B4()
{
  return sub_2317CC4AC(&qword_255F25240, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2318D7E1C);
}

uint64_t sub_2317CD8E0()
{
  return sub_2317CC4AC(&qword_255F25248, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_2318D7F48);
}

uint64_t sub_2317CD90C()
{
  return sub_2317CC4AC(&qword_255F25250, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_2318D7F1C);
}

uint64_t sub_2317CD938()
{
  return sub_2317CC4AC(&qword_255F25258, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2318D8058);
}

uint64_t sub_2317CD964()
{
  return sub_2317CC4AC(&qword_255F25260, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2318D8030);
}

uint64_t sub_2317CD990()
{
  return sub_2317CC4AC((unint64_t *)&unk_255F25268, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2318D80C0);
}

uint64_t sub_2317CD9BC()
{
  return sub_2317CC4AC(&qword_25418B0A0, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_2318D7FB8);
}

uint64_t sub_2317CD9E8()
{
  return sub_2317CC4AC(&qword_255F25278, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2318D7BBC);
}

uint64_t sub_2317CDA14()
{
  return sub_2317CC4AC(&qword_255F25280, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_2318D7AB8);
}

uint64_t sub_2317CDA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_2317CDA94(a1, &qword_255F252C8, (uint64_t)&unk_25007CD60, MEMORY[0x24BEE4D40]);
}

void sub_2317CDA94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_2317CDAD8()
{
  return sub_2317CC4AC(&qword_255F252D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8298);
}

uint64_t sub_2317CDB04()
{
  return sub_2317CC4AC(&qword_255F252D8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D826C);
}

uint64_t sub_2317CDB30()
{
  return sub_2317CC4AC(&qword_255F252E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8308);
}

void LoggingBaseFeedItemViewController.decoder.setter()
{
  swift_deletedMethodError();
  __break(1u);
}

_QWORD *sub_2317CDBAC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v4;
  v27 = a3;
  v29 = a2;
  sub_2317CE948(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D2A90();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4228(0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v5[2] = v15;
  v5[4] = 0;
  v16 = (char *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  v17 = sub_2318D54C0();
  v28 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v16, a3, v17);
  v5[5] = a4;
  v18 = a4;
  v19 = a1;
  v20 = objc_msgSend(v18, sel_currentCalendar);
  sub_2318D2A3C();

  type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(0);
  swift_allocObject();
  sub_2318332B8(v19, (uint64_t)v14);
  sub_2317D42DC(0, &qword_25418ABE0, type metadata accessor for MedicationDaySummaryViewModelProviderDataSource, sub_2317D434C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DailyModelProvider);
  swift_allocObject();
  v21 = swift_retain();
  v22 = sub_2317CEE34(v21, 200, 1000);
  v5[3] = v22;
  v30 = *((_QWORD *)v22 + 3);
  swift_allocObject();
  swift_weakInit();
  sub_2317D4370();
  sub_2317CC4AC(&qword_255F253F0, (uint64_t (*)(uint64_t))sub_2317D4370, MEMORY[0x24BDB9CB0]);
  swift_retain();
  v23 = sub_2318D4FF8();
  swift_release();
  swift_release();
  v5[4] = v23;
  swift_release();
  v24 = v27;
  sub_2317CE490(v11);
  sub_2317CE964(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 0, 1, v25);
  sub_2317CE6CC((uint64_t)v11);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v24, v17);
  return v5;
}

uint64_t sub_2317CDEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v1 = sub_2318D54C0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v30 - v6;
  sub_2317CE948(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CE964(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v31 = v2;
    v21 = *(_QWORD *)(result + 24) + *(_QWORD *)(**(_QWORD **)(result + 24) + 168);
    swift_beginAccess();
    sub_2317D404C(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_2317CE948);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      swift_release();
      return sub_2317CF774((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2317CE948);
    }
    sub_2317D40A8((uint64_t)v10, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_2317CE964);
    v22 = v32;
    if ((sub_2317CE208(v32) & 1) != 0)
    {
      v23 = *(_QWORD *)(v20 + 16);
      swift_retain();
      sub_2317E6920(v23, v20);
      swift_release();
      v24 = v20 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
      swift_beginAccess();
      v25 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      v25(v7, v24, v1);
      v30 = sub_2317CE988();
      LOBYTE(v24) = sub_2318D5568();
      v25(v5, (uint64_t)v7, v1);
      sub_2317D404C(v22, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_2317CE964);
      if ((v24 & 1) != 0)
      {
        v26 = sub_2318D5550();
        sub_2317CF774((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2317CE964);
        v27 = *(void (**)(char *, uint64_t))(v31 + 8);
        v27(v5, v1);
        v27(v7, v1);
        if ((v26 & 1) != 0)
        {
          v28 = *(_QWORD *)(v20 + 16);
          swift_retain();
          sub_2317E6B30(v28, v20);
          swift_release_n();
          return sub_2317CF774((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2317CE964);
        }
      }
      else
      {
        sub_2317CF774((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2317CE964);
        v29 = *(void (**)(char *, uint64_t))(v31 + 8);
        v29(v5, v1);
        v29(v7, v1);
      }
    }
    sub_2317CF774((uint64_t)v18, (uint64_t (*)(_QWORD))sub_2317CE964);
    return swift_release();
  }
  return result;
}

uint64_t sub_2317CE208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_2317CE964(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v20 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  sub_2318D54C0();
  sub_2317CE988();
  v14 = sub_2318D5568();
  sub_2317D404C(v1, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317D404C(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2317CE964);
  if ((v14 & 1) != 0)
  {
    sub_2317CF774((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2317CE964);
    sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
    sub_2317D404C(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE964);
LABEL_4:
    sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE964);
    v16 = v21;
    sub_2317D404C(a1, v21, (uint64_t (*)(_QWORD))sub_2317CE964);
    goto LABEL_5;
  }
  v15 = sub_2318D5568();
  sub_2317CF774((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317D404C(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE964);
  if ((v15 & 1) != 0)
    goto LABEL_4;
  sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  v19 = sub_2318D5580();
  sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE964);
  v16 = v21;
  sub_2317D404C(a1, v21, (uint64_t (*)(_QWORD))sub_2317CE964);
  if ((v19 & 1) == 0)
  {
    v17 = sub_2318D5580() ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  v17 = 0;
LABEL_6:
  sub_2317CF774(v16, (uint64_t (*)(_QWORD))sub_2317CE964);
  return v17 & 1;
}

uint64_t sub_2317CE490@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v28 = a1;
  sub_2317CFFEC();
  v2 = v1;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - v6;
  v8 = sub_2318D54C0();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v27 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v27 - v16;
  sub_2318D5478();
  sub_2318D5460();
  sub_2318D54A8();
  v18 = (void (*)(char *, uint64_t))v9[1];
  v18(v12, v8);
  sub_2317CE988();
  result = sub_2318D5568();
  if ((result & 1) != 0)
  {
    v20 = &v7[*(int *)(v2 + 48)];
    v21 = (void (*)(char *, char *, uint64_t))v9[4];
    v21(v7, v17, v8);
    v21(v20, v15, v8);
    v22 = &v5[*(int *)(v2 + 48)];
    v23 = (void (*)(char *, char *, uint64_t))v9[2];
    v23(v5, v7, v8);
    v23(v22, v20, v8);
    v24 = v28;
    v21(v28, v5, v8);
    v18(v22, v8);
    v25 = &v5[*(int *)(v2 + 48)];
    v21(v5, v7, v8);
    v21(v25, v20, v8);
    sub_2317CE964(0);
    v21(&v24[*(int *)(v26 + 36)], v25, v8);
    return ((uint64_t (*)(char *, uint64_t))v18)(v5, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2317CE6CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  sub_2317CE948(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v12[-v7];
  v9 = *(_QWORD *)(v1 + 24);
  sub_2317D404C(a1, (uint64_t)&v12[-v7], (uint64_t (*)(_QWORD))sub_2317CE948);
  v10 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 168);
  swift_beginAccess();
  sub_2317D404C(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_2317CE948);
  swift_beginAccess();
  swift_retain();
  sub_2317CE9A4((uint64_t)v8, v10);
  swift_endAccess();
  sub_2317CEF50((uint64_t)v6);
  sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE948);
  sub_2317CF774((uint64_t)v6, (uint64_t (*)(_QWORD))sub_2317CE948);
  swift_release();
  return sub_2317CF774(a1, (uint64_t (*)(_QWORD))sub_2317CE948);
}

uint64_t sub_2317CE800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  v2 = sub_2318D54C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2317CE870()
{
  return type metadata accessor for MedicationsTimelineDataProvider();
}

uint64_t type metadata accessor for MedicationsTimelineDataProvider()
{
  uint64_t result;

  result = qword_255F25360;
  if (!qword_255F25360)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317CE8B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D54C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2317CE948(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2317CE964(uint64_t a1)
{
  sub_2317D42DC(a1, (unint64_t *)&unk_254187A28, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_2317CE988, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
}

uint64_t sub_2317CE988()
{
  return sub_2317CC4AC(&qword_254187A20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
}

uint64_t sub_2317CE9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317CE948(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

int *sub_2317CE9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  id v9;
  int *result;
  _QWORD *v11;

  swift_retain();
  v4 = sub_2317F8080(a1);
  v6 = v5;
  swift_release();
  if (v4 >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = 2 - v6;
  }
  else
  {
    sub_2317D41EC(v4);
    v7 = 0;
  }
  v8 = sub_2318D54C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_redColor);
  result = (int *)type metadata accessor for TimelineDay();
  *(_QWORD *)(a2 + result[5]) = v9;
  v11 = (_QWORD *)(a2 + result[6]);
  *v11 = 77;
  v11[1] = 0xE100000000000000;
  *(_BYTE *)(a2 + result[7]) = v7;
  return result;
}

uint64_t sub_2317CEB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_2318D582C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2318D5820();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_2317D33B4(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2318D57F0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void (*sub_2317CEC2C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_2318D54C0();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_2317D2874(v2, (uint64_t)v5);
  return sub_2317CECBC;
}

void (*sub_2317CECC0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_2318D54C0();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_2317D29F8(v2, (uint64_t)v5);
  return sub_2317CECBC;
}

void (*sub_2317CED50(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_2318D54C0();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_2317D2938(v2, (uint64_t)v5);
  return sub_2317CECBC;
}

void sub_2317CEDE0(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

char *sub_2317CEE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v4 = v3;
  sub_2317D4370();
  swift_allocObject();
  *((_QWORD *)v3 + 3) = sub_2318D4DB8();
  sub_2318D2AE4();
  sub_2318D2AE4();
  *(_QWORD *)&v3[*(_QWORD *)(*(_QWORD *)v3 + 128)] = MEMORY[0x24BEE4B00];
  v8 = &v4[*(_QWORD *)(*(_QWORD *)v4 + 152)];
  sub_2317CE964(0);
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v11(v8, 1, 1, v9);
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 160)] = 0;
  v11(&v4[*(_QWORD *)(*(_QWORD *)v4 + 168)], 1, 1, v10);
  *((_QWORD *)v4 + 2) = a1;
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 136)] = a3;
  if (a2 >= 0)
    v12 = a2;
  else
    v12 = a2 + 1;
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 144)] = v12 >> 1;
  return v4;
}

uint64_t sub_2317CEF50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_2317CE964(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)&v74 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v79 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (uint64_t)&v74 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v77 = (uint64_t)&v74 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v81 = (uint64_t)&v74 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v88 = (uint64_t)&v74 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v82 = (uint64_t)&v74 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v83 = (uint64_t)&v74 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v90 = (uint64_t)&v74 - v24;
  sub_2317CE948(0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v76 = (uint64_t)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v85 = (uint64_t)&v74 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v86 = (uint64_t)&v74 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v74 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v74 - v35;
  sub_2317CF714();
  v38 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v74 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v89 = v1;
  v42 = v1 + v41;
  swift_beginAccess();
  v43 = (uint64_t)&v40[*(int *)(v38 + 48)];
  v87 = a1;
  sub_2317D404C(a1, (uint64_t)v40, (uint64_t (*)(_QWORD))sub_2317CE948);
  sub_2317D404C(v42, v43, (uint64_t (*)(_QWORD))sub_2317CE948);
  v78 = v5;
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v45 = v4;
  if (v44((uint64_t)v40, 1, v4) == 1)
  {
    if (v44(v43, 1, v4) == 1)
    {
      v46 = sub_2317CE948;
      v47 = (uint64_t)v40;
      return sub_2317CF774(v47, (uint64_t (*)(_QWORD))v46);
    }
    v48 = (uint64_t (*)(_QWORD))sub_2317CF714;
    goto LABEL_12;
  }
  sub_2317D404C((uint64_t)v40, (uint64_t)v36, (uint64_t (*)(_QWORD))sub_2317CE948);
  if (v44(v43, 1, v4) == 1)
  {
    v48 = (uint64_t (*)(_QWORD))sub_2317CF714;
LABEL_11:
    sub_2317CF774((uint64_t)v36, (uint64_t (*)(_QWORD))sub_2317CE964);
LABEL_12:
    sub_2317CF774((uint64_t)v40, v48);
LABEL_13:
    sub_2317D404C(v42, (uint64_t)v34, (uint64_t (*)(_QWORD))sub_2317CE948);
    if (v44((uint64_t)v34, 1, v45) == 1)
    {
      sub_2317CF774((uint64_t)v34, (uint64_t (*)(_QWORD))sub_2317CE948);
      v56 = v85;
      sub_2317D404C(v87, v85, (uint64_t (*)(_QWORD))sub_2317CE948);
      if (v44(v56, 1, v45) != 1)
      {
        v63 = v56;
        v64 = v77;
        sub_2317D40A8(v63, v77, (uint64_t (*)(_QWORD))sub_2317CE964);
        v65 = v64;
        v66 = v76;
        sub_2317D40A8(v65, v76, (uint64_t (*)(_QWORD))sub_2317CE964);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v66, 0, 1, v45);
        swift_beginAccess();
        sub_2317CF7B0(v66, v42);
        return swift_endAccess();
      }
      v46 = sub_2317CE948;
      v47 = v56;
      return sub_2317CF774(v47, (uint64_t (*)(_QWORD))v46);
    }
    v57 = v88;
    sub_2317D40A8((uint64_t)v34, v88, (uint64_t (*)(_QWORD))sub_2317CE964);
    v58 = v89;
    v59 = v89 + *(_QWORD *)(*(_QWORD *)v89 + 152);
    swift_beginAccess();
    v60 = v86;
    sub_2317D404C(v59, v86, (uint64_t (*)(_QWORD))sub_2317CE948);
    if (v44(v60, 1, v45) == 1)
    {
      sub_2317CF774(v60, (uint64_t (*)(_QWORD))sub_2317CE948);
      v61 = v84;
      sub_2317CF7F4(*(_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 144)), v84);
      sub_2317CFC98((uint64_t)v61);
      v62 = (uint64_t)v61;
LABEL_24:
      sub_2317CF774(v62, (uint64_t (*)(_QWORD))sub_2317CE964);
      v47 = v57;
      v46 = sub_2317CE964;
      return sub_2317CF774(v47, (uint64_t (*)(_QWORD))v46);
    }
    v67 = v81;
    sub_2317D40A8(v60, v81, (uint64_t (*)(_QWORD))sub_2317CE964);
    v68 = sub_2318D5448();
    v69 = v80;
    sub_2317D404C(v57, v80, (uint64_t (*)(_QWORD))sub_2317CE964);
    v70 = v79;
    sub_2317D404C(v67, v79, (uint64_t (*)(_QWORD))sub_2317CE964);
    if ((v68 & 1) != 0)
    {
      sub_2317CF774(v70, (uint64_t (*)(_QWORD))sub_2317CE964);
      sub_2317CF774(v69, (uint64_t (*)(_QWORD))sub_2317CE964);
    }
    else
    {
      sub_2318D54C0();
      sub_2317CE988();
      v71 = sub_2318D5550();
      sub_2317CF774(v70, (uint64_t (*)(_QWORD))sub_2317CE964);
      sub_2317CF774(v69, (uint64_t (*)(_QWORD))sub_2317CE964);
      if ((v71 & 1) == 0)
      {
LABEL_23:
        v62 = v67;
        goto LABEL_24;
      }
    }
    v72 = v75;
    sub_2317CF7F4(*(_QWORD *)(v58 + *(_QWORD *)(*(_QWORD *)v58 + 144)), v75);
    v73 = v84;
    sub_2317CFA40(v72, v84);
    sub_2317CF774((uint64_t)v72, (uint64_t (*)(_QWORD))sub_2317CE964);
    sub_2317CFC98((uint64_t)v73);
    sub_2317CF774((uint64_t)v73, (uint64_t (*)(_QWORD))sub_2317CE964);
    goto LABEL_23;
  }
  v49 = v90;
  sub_2317D40A8(v43, v90, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2318D54C0();
  v74 = sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  v50 = sub_2318D5580();
  v51 = v83;
  sub_2317D404C((uint64_t)v36, v83, (uint64_t (*)(_QWORD))sub_2317CE964);
  v52 = v49;
  v53 = v82;
  sub_2317D404C(v52, v82, (uint64_t (*)(_QWORD))sub_2317CE964);
  if ((v50 & 1) == 0)
  {
    sub_2317CF774(v53, (uint64_t (*)(_QWORD))sub_2317CE964);
    sub_2317CF774(v51, (uint64_t (*)(_QWORD))sub_2317CE964);
    sub_2317CF774(v90, (uint64_t (*)(_QWORD))sub_2317CE964);
    v48 = (uint64_t (*)(_QWORD))sub_2317CE948;
    goto LABEL_11;
  }
  v54 = sub_2318D5580();
  sub_2317CF774(v53, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317CF774(v51, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317CF774(v90, (uint64_t (*)(_QWORD))sub_2317CE964);
  sub_2317CF774((uint64_t)v36, (uint64_t (*)(_QWORD))sub_2317CE964);
  result = sub_2317CF774((uint64_t)v40, (uint64_t (*)(_QWORD))sub_2317CE948);
  if ((v54 & 1) == 0)
    goto LABEL_13;
  return result;
}

void sub_2317CF714()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F25378)
  {
    sub_2317CE948(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F25378);
  }
}

uint64_t sub_2317CF774(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2317CF7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317CE948(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317CF7F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  sub_2317CFFEC();
  v5 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = sub_2318D54C0();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - v17;
  if (__OFSUB__(0, a1))
  {
    __break(1u);
  }
  else
  {
    v29 = a2;
    v30 = -a1;
    sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_2318D5F88();
    sub_2317CE964(0);
    v28 = v19;
    v30 = a1;
    sub_2318D5F88();
    sub_2317CE988();
    result = sub_2318D5568();
    if ((result & 1) != 0)
    {
      v20 = &v10[*(int *)(v5 + 48)];
      v21 = (void (*)(char *, char *, uint64_t))v12[4];
      v21(v10, v18, v11);
      v21(v20, v15, v11);
      v22 = &v8[*(int *)(v5 + 48)];
      v23 = (void (*)(char *, char *, uint64_t))v12[2];
      v23(v8, v10, v11);
      v23(v22, v20, v11);
      v24 = v29;
      v21(v29, v8, v11);
      v25 = (void (*)(char *, uint64_t))v12[1];
      v25(v22, v11);
      v26 = &v8[*(int *)(v5 + 48)];
      v21(v8, v10, v11);
      v21(v26, v20, v11);
      v21(&v24[*(int *)(v28 + 36)], v26, v11);
      return ((uint64_t (*)(char *, uint64_t))v25)(v8, v11);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2317CFA40@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v3 = v2;
  v40 = a2;
  sub_2317CFFEC();
  v39 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  v11 = sub_2318D54C0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v37 - v16;
  sub_2317CE988();
  v18 = sub_2318D5550();
  v38 = v12;
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  if ((v18 & 1) != 0)
    v20 = a1;
  else
    v20 = v3;
  v19(v17, v20, v11);
  sub_2317CE964(0);
  v22 = v21;
  v23 = *(int *)(v21 + 36);
  v24 = &v3[v23];
  v25 = &a1[v23];
  if ((sub_2318D555C() & 1) != 0)
    v26 = v25;
  else
    v26 = v24;
  v27 = v19;
  v19(v15, v26, v11);
  result = sub_2318D5568();
  if ((result & 1) != 0)
  {
    v37 = v22;
    v29 = v38;
    v30 = v39;
    v31 = &v10[*(int *)(v39 + 48)];
    v32 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v32(v10, v17, v11);
    v32(v31, v15, v11);
    v33 = &v8[*(int *)(v30 + 48)];
    v27(v8, v10, v11);
    v27(v33, v31, v11);
    v34 = v40;
    v32(v40, v8, v11);
    v35 = *(void (**)(char *, uint64_t))(v29 + 8);
    v35(v33, v11);
    v36 = &v8[*(int *)(v30 + 48)];
    v32(v8, v10, v11);
    v32(v36, v31, v11);
    v32(&v34[*(int *)(v37 + 36)], v36, v11);
    return ((uint64_t (*)(char *, uint64_t))v35)(v8, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2317CFC98(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v31 = *v1;
  sub_2317CE964(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v30 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - v9;
  sub_2317CE948(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  sub_2317D404C(a1, (uint64_t)&v29 - v15, (uint64_t (*)(_QWORD))sub_2317CE964);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
  sub_2317D40A8((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_2317CE948);
  v17 = (uint64_t)v2 + *(_QWORD *)(*v2 + 152);
  swift_beginAccess();
  sub_2317CF7B0((uint64_t)v14, v17);
  swift_endAccess();
  v18 = sub_2318D549C();
  result = sub_2318D549C();
  if (result < v18)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_2318D2A9C();
    swift_endAccess();
    v20 = *(_QWORD *)(*v2 + 160);
    if (*(_QWORD *)((char *)v2 + v20))
    {
      sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
      swift_retain();
      sub_2318D5868();
      swift_release();
    }
    v21 = sub_2318D582C();
    v22 = (uint64_t)v10;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = v2[2];
    v25 = v30;
    sub_2317D404C(a1, v30, (uint64_t (*)(_QWORD))sub_2317CE964);
    v26 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v27 = (v7 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v24;
    sub_2317D40A8(v25, (uint64_t)v28 + v26, (uint64_t (*)(_QWORD))sub_2317CE964);
    *(_QWORD *)((char *)v28 + v27) = v23;
    *(_QWORD *)((char *)v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
    swift_retain();
    *(_QWORD *)((char *)v2 + v20) = sub_2317CEB00(v22, (uint64_t)&unk_255F25388, (uint64_t)v28);
    return swift_release();
  }
  return result;
}

void sub_2317CFFEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F25780)
  {
    sub_2318D54C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F25780);
  }
}

uint64_t sub_2317D0050()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2317D0074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v7[22] = a6;
  v7[23] = a7;
  v7[21] = a5;
  v9 = sub_2318D5388();
  v7[24] = v9;
  v7[25] = *(_QWORD *)(v9 - 8);
  v7[26] = swift_task_alloc();
  v10 = sub_2318D53AC();
  v7[27] = v10;
  v7[28] = *(_QWORD *)(v10 - 8);
  v7[29] = swift_task_alloc();
  sub_2317CE964(0);
  v12 = *(_QWORD *)(v11 - 8);
  v7[30] = v12;
  v7[31] = *(_QWORD *)(v12 + 64);
  v7[32] = swift_task_alloc();
  v13 = sub_2318D4A1C();
  v7[33] = v13;
  v7[34] = *(_QWORD *)(v13 - 8);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  sub_2317D3408(0, &qword_25418B028, MEMORY[0x24BEE6D28]);
  v7[37] = v14;
  v7[38] = *(_QWORD *)(v14 - 8);
  v15 = swift_task_alloc();
  v7[39] = v15;
  sub_2317D3408(0, &qword_25418B020, MEMORY[0x24BEE6D08]);
  v7[40] = v16;
  v7[41] = *(_QWORD *)(v16 - 8);
  v7[42] = swift_task_alloc();
  v17 = (_QWORD *)swift_task_alloc();
  v7[43] = v17;
  *v17 = v7;
  v17[1] = sub_2317D0200;
  return sub_2318339D0(v15, a5);
}

uint64_t sub_2317D0200()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2317D0264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[37];
  sub_2318D5838();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v4 = (_QWORD *)swift_task_alloc();
  v0[45] = v4;
  *v4 = v0;
  v4[1] = sub_2317D032C;
  return sub_2318D58B0();
}

uint64_t sub_2317D032C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_BYTE *)(v2 + 376) = 1;
  return swift_task_switch();
}

uint64_t sub_2317D0394()
{
  uint64_t v0;
  id *v1;
  uint64_t result;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 352);
  v1 = (id *)(v0 + 152);
  sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
  sub_2317CCC9C(0, &qword_255F25398);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3 = *v1;
    if ((objc_msgSend(*v1, sel_hk_isDatabaseAccessibilityError) & 1) != 0)
    {
      v4 = *(_QWORD *)(v0 + 256);
      v26 = *(_QWORD *)(v0 + 240);
      v5 = *(_QWORD *)(v0 + 168);
      sub_2318D3000();
      sub_2318D2FF4();
      v6 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      sub_2317D404C(v5, v4, (uint64_t (*)(_QWORD))sub_2317CE964);
      v7 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v6;
      sub_2317D40A8(v4, v8 + v7, (uint64_t (*)(_QWORD))sub_2317CE964);
      swift_retain();
      sub_2318D2FE8();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_2318D4A04();
    v9 = v3;
    v10 = sub_2318D4A10();
    v11 = sub_2318D5A3C();
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 264);
    if (v12)
    {
      v27 = *(_QWORD *)(v0 + 272);
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28 = v17;
      *(_DWORD *)v16 = 136315394;
      v25 = v15;
      v18 = sub_2318D63CC();
      *(_QWORD *)(v0 + 120) = sub_231851EBC(v18, v19, &v28);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v20 = v9;
      v21 = objc_msgSend(v20, sel_description);
      v22 = sub_2318D55BC();
      v24 = v23;

      *(_QWORD *)(v0 + 112) = sub_231851EBC(v22, v24, &v28);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v10, v11, "[%s] Error fetching medication dose event samples with error %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v17, -1, -1);
      MEMORY[0x2348E77E8](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v13, v25);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_2317D07A4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  _QWORD *v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 136);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
    goto LABEL_5;
  }
  if ((sub_2318D5874() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_2318D49EC();
  swift_bridgeObjectRetain_n();
  v3 = sub_2318D4A10();
  v4 = sub_2318D5A54();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 288);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v33 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_2318D63CC();
    *(_QWORD *)(v9 + 4) = sub_231851EBC(v11, v12, &v33);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    v13 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 14) = v13;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v3, v4, "[%s] Received new changes, total changes(i.e. remove, add, etc): %ld)", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  v24 = *(_BYTE *)(v0 + 376);
  v15 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 200);
  v30 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 208);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v26 = (void *)sub_2318D5B80();
  v18 = swift_allocObject();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_2317D404C(v17, v14, (uint64_t (*)(_QWORD))sub_2317CE964);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_BYTE *)(v20 + 24) = v24;
  sub_2317D40A8(v14, v20 + v19, (uint64_t (*)(_QWORD))sub_2317CE964);
  *(_QWORD *)(v20 + ((v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  *(_QWORD *)(v0 + 48) = sub_2317D3628;
  *(_QWORD *)(v0 + 56) = v20;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_2317D1468;
  *(_QWORD *)(v0 + 40) = &unk_25007D068;
  v21 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  sub_2318D53A0();
  *(_QWORD *)(v0 + 160) = MEMORY[0x24BEE4AF8];
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2317CC4AC((unint64_t *)&unk_25418B3B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2317D4194(0, (unint64_t *)&unk_25418B3D0, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317D3688();
  sub_2318D6000();
  MEMORY[0x2348E6948](0, v25, v28, v21);
  _Block_release(v21);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v27);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v31);
  swift_release();
  swift_release();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v23;
  *v23 = v0;
  v23[1] = sub_2317D107C;
  return sub_2318D58B0();
}

uint64_t sub_2317D0C5C()
{
  uint64_t v0;
  id *v1;
  uint64_t result;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 144);
  v1 = (id *)(v0 + 152);
  sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
  sub_2317CCC9C(0, &qword_255F25398);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3 = *v1;
    if ((objc_msgSend(*v1, sel_hk_isDatabaseAccessibilityError) & 1) != 0)
    {
      v4 = *(_QWORD *)(v0 + 256);
      v26 = *(_QWORD *)(v0 + 240);
      v5 = *(_QWORD *)(v0 + 168);
      sub_2318D3000();
      sub_2318D2FF4();
      v6 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      sub_2317D404C(v5, v4, (uint64_t (*)(_QWORD))sub_2317CE964);
      v7 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v6;
      sub_2317D40A8(v4, v8 + v7, (uint64_t (*)(_QWORD))sub_2317CE964);
      swift_retain();
      sub_2318D2FE8();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_2318D4A04();
    v9 = v3;
    v10 = sub_2318D4A10();
    v11 = sub_2318D5A3C();
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 264);
    if (v12)
    {
      v27 = *(_QWORD *)(v0 + 272);
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28 = v17;
      *(_DWORD *)v16 = 136315394;
      v25 = v15;
      v18 = sub_2318D63CC();
      *(_QWORD *)(v0 + 120) = sub_231851EBC(v18, v19, &v28);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v20 = v9;
      v21 = objc_msgSend(v20, sel_description);
      v22 = sub_2318D55BC();
      v24 = v23;

      *(_QWORD *)(v0 + 112) = sub_231851EBC(v22, v24, &v28);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v10, v11, "[%s] Error fetching medication dose event samples with error %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v17, -1, -1);
      MEMORY[0x2348E77E8](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v13, v25);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_2317D107C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_BYTE *)(v2 + 376) = 0;
  return swift_task_switch();
}

uint64_t sub_2317D10E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36[4];

  v30 = (char *)a4;
  sub_2317CE964(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D42DC(0, &qword_25418B120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF3E8], sub_2317D36E8, MEMORY[0x24BEE2C00]);
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  v12 = sub_2318D2ACC();
  v31 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v18 = sub_2318D2AF0();
  v32 = *(_QWORD *)(v18 - 8);
  v33 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v34 = (uint64_t)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v21 = (char *)result;
    if ((a2 & 1) != 0)
    {
      swift_retain();
      sub_2317D3748(a3, v21);
      swift_release();
      v22 = sub_2318D549C();
      result = sub_2318D549C();
      if (result < v22)
      {
        __break(1u);
        return result;
      }
      swift_beginAccess();
      sub_2318D2A9C();
      swift_endAccess();
    }
    v35 = v21;
    sub_2317D14F0((uint64_t)v30, v34);
    sub_2318D2AD8();
    v30 = v17;
    sub_2318D2AC0();
    v23 = &v11[*(int *)(v29 + 36)];
    sub_2317D36E8();
    v24 = *(_QWORD *)v23;
    sub_2318D5970();
    v25 = v31;
    if (v24 != v36[0])
    {
      do
      {
        v26 = (void (*)(uint64_t *, _QWORD))sub_2318D5988();
        v26(v36, 0);
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v15, v11, v12);
        sub_2318D597C();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
        sub_2318D5994();
        sub_2318D4DAC();
        sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317CE964);
        v27 = *(_QWORD *)v23;
        sub_2318D5970();
      }
      while (v27 != v36[0]);
    }
    swift_release();
    sub_2317D3704((uint64_t)v11, &qword_25418B120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF3E8], sub_2317D36E8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  return result;
}

uint64_t sub_2317D1468(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_2317D1494(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2317CFC98(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2317D14F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  int64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  char v123;
  char *v124;
  unint64_t v125;
  char *v126;
  int v127;
  uint64_t v128;
  _QWORD *v129;
  int v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  _BOOL8 v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  _QWORD *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  int64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  void (*v166)(char *, uint64_t);
  uint64_t v167;
  char *v168;
  _QWORD *v169;
  char *v170;
  char *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;

  v150 = a2;
  sub_2317D3F24(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v160 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v165 = (char *)&v147 - v6;
  sub_2317D3FA8(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v158 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v147 - v10;
  v12 = sub_2318D54C0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v154 = (uint64_t)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v163 = (char *)&v147 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v167 = (uint64_t)&v147 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v157 = (char *)&v147 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v159 = (char *)&v147 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v171 = (char *)&v147 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v170 = (char *)&v147 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v172 = (unint64_t)&v147 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v164 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  v30 = *(_QWORD *)(v164 - 8);
  v31 = MEMORY[0x24BDAC7A8](v164);
  v166 = (void (*)(char *, uint64_t))((char *)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = MEMORY[0x24BDAC7A8](v31);
  v169 = (uint64_t *)((char *)&v147 - v34);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v147 - v35;
  v153 = sub_2318D2AF0();
  v152 = *(_QWORD *)(v153 - 8);
  v37 = MEMORY[0x24BDAC7A8](v153);
  v155 = (char *)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v161 = (char *)&v147 - v39;
  sub_2318D2AE4();
  v40 = MEMORY[0x24BEE4B00];
  v177 = MEMORY[0x24BEE4B00];
  v41 = *(_QWORD *)(a1 + 16);
  v173 = v13;
  v174 = v12;
  v168 = v11;
  if (v41)
  {
    v156 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v42 = a1 + v156;
    v162 = *(_QWORD *)(v30 + 72);
    v149 = a1;
    swift_bridgeObjectRetain();
    sub_2317D404C(v42, (uint64_t)v36, type metadata accessor for MedicationDaySummaryViewModelChange);
    sub_2317D404C((uint64_t)v36, (uint64_t)v169, type metadata accessor for MedicationDaySummaryViewModelChange);
    v43 = (char *)&loc_2317D18EC + *((int *)qword_2317D2860 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v44 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 64);
  v156 = MEMORY[0x24BEE4B00] + 64;
  v45 = 1 << *(_BYTE *)(MEMORY[0x24BEE4B00] + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v172 = v46 & v44;
  v47 = v151 + *(_QWORD *)(*(_QWORD *)v151 + 128);
  swift_bridgeObjectRetain();
  v169 = (_QWORD *)v47;
  swift_beginAccess();
  v48 = 0;
  v49 = (unint64_t)(v45 + 63) >> 6;
  v148 = v49 - 1;
  v162 = v49;
  v151 = v49 - 4;
  v164 = v40;
  v149 = v40 + 96;
  v50 = (unint64_t)v160;
  v51 = (uint64_t)v165;
  v52 = (uint64_t)v159;
  v53 = (uint64_t)v158;
  while (1)
  {
    if (v172)
    {
      v54 = __clz(__rbit64(v172));
      v172 &= v172 - 1;
      v55 = v54 | ((_QWORD)v48 << 6);
      goto LABEL_10;
    }
    v60 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      JUMPOUT(0x2317D282CLL);
    }
    if ((uint64_t)v60 >= v162)
    {
      v60 = v48;
    }
    else
    {
      v61 = *(_QWORD *)(v156 + 8 * (_QWORD)v60);
      if (v61)
        goto LABEL_14;
      if ((uint64_t)(v48 + 2) < v162)
      {
        v61 = *(_QWORD *)(v156 + 8 * (_QWORD)(v48 + 2));
        if (v61)
        {
          v60 = v48 + 2;
LABEL_14:
          v172 = (v61 - 1) & v61;
          v55 = __clz(__rbit64(v61)) + ((_QWORD)v60 << 6);
          v48 = v60;
LABEL_10:
          v56 = v164;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(v53, *(_QWORD *)(v164 + 48) + *(_QWORD *)(v13 + 72) * v55, v12);
          v57 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v55);
          sub_2317D3FC4();
          v59 = v58;
          *(_QWORD *)(v53 + *(int *)(v58 + 48)) = v57;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v53, 0, 1, v58);
          swift_bridgeObjectRetain();
          goto LABEL_17;
        }
        v60 = v48 + 2;
        if ((uint64_t)(v48 + 3) < v162)
        {
          v61 = *(_QWORD *)(v156 + 8 * (_QWORD)(v48 + 3));
          v60 = v48 + 3;
          if (v61)
            goto LABEL_14;
          while ((char *)v151 != v48)
          {
            v61 = *(_QWORD *)(v149 + 8 * (_QWORD)v48++);
            if (v61)
            {
              v60 = v48 + 3;
              goto LABEL_14;
            }
          }
          v60 = (char *)v148;
        }
      }
    }
    sub_2317D3FC4();
    v59 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v53, 1, 1, v62);
    v172 = 0;
    v48 = v60;
LABEL_17:
    sub_2317D40A8(v53, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2317D3FA8);
    sub_2317D3FC4();
    v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v11, 1, v59);
    v64 = v171;
    if (v63 == 1)
      break;
    v170 = v48;
    v65 = *(_QWORD *)&v11[*(int *)(v59 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v171, v11, v12);
    if (qword_255F24FF0 != -1)
      swift_once();
    v66 = sub_2317D4090(v12, (uint64_t)qword_255F28678);
    sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
    if ((sub_2318D5580() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v64, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2318D549C();
      sub_2318D2AA8();
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      v68 = (uint64_t)v157;
      v67(v157, v66, v12);
      v69 = v177;
      if (*(_QWORD *)(v177 + 16))
      {
        v70 = sub_2317FBF8C(v68);
        v71 = MEMORY[0x24BEE4AF8];
        if ((v72 & 1) != 0)
        {
          v71 = *(_QWORD *)(*(_QWORD *)(v69 + 56) + 8 * v70);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v71 = MEMORY[0x24BEE4AF8];
      }
      v73 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v73(v68, v12);
      v74 = (uint64_t)v171;
      v67((char *)v167, (uint64_t)v171, v12);
      v176 = v65;
      sub_23185596C(v71);
      v75 = v176;
      v76 = *v169;
      v77 = *(_QWORD *)(*v169 + 16);
      v166 = (void (*)(char *, uint64_t))v73;
      if (v77)
      {
        swift_bridgeObjectRetain();
        v78 = sub_2317FBF8C(v74);
        if ((v79 & 1) != 0)
        {
          v80 = (uint64_t *)(*(_QWORD *)(v76 + 56) + 32 * v78);
          v81 = *v80;
          v82 = v80[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v81 = 0;
          v82 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v81 = 0;
        v82 = 0;
      }
      v83 = sub_2318B78E4(v75, v81, v82);
      v85 = v84;
      v87 = v86;
      v89 = v88;
      swift_bridgeObjectRelease();
      sub_2317D3EEC(v81);
      v90 = v169;
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v175 = (_QWORD *)*v90;
      *v90 = 0x8000000000000000;
      v92 = v83;
      v93 = v167;
      sub_2317FE568(v92, v85, v87, v89, v167, isUniquelyReferenced_nonNull_native);
      *v90 = v175;
      swift_bridgeObjectRelease();
      v94 = v93;
      v12 = v174;
      v95 = v166;
      v166((char *)v94, v174);
      swift_endAccess();
      v95(v171, v12);
      v50 = (unint64_t)v160;
      v51 = (uint64_t)v165;
      v13 = v173;
      v52 = (uint64_t)v159;
      v53 = (uint64_t)v158;
    }
    v11 = v168;
    v48 = v170;
  }
  swift_release();
  if (qword_255F24FF0 != -1)
    goto LABEL_88;
  while (1)
  {
    v96 = sub_2317D4090(v12, (uint64_t)qword_255F28678);
    v170 = *(char **)(v13 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v170)(v52, v96, v12);
    v97 = v177;
    if (!*(_QWORD *)(v177 + 16))
      break;
    v98 = sub_2317FBF8C(v52);
    if ((v99 & 1) == 0)
      break;
    v100 = *(_QWORD *)(*(_QWORD *)(v97 + 56) + 8 * v98);
    swift_bridgeObjectRetain();
    v171 = *(char **)(v13 + 8);
    ((void (*)(uint64_t, uint64_t))v171)(v52, v12);
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v155, v161, v153);
    v101 = *v169;
    v102 = *(_QWORD *)(*v169 + 64);
    v158 = (char *)(*v169 + 64);
    v103 = 1 << *(_BYTE *)(v101 + 32);
    v104 = -1;
    if (v103 < 64)
      v104 = ~(-1 << v103);
    v12 = v104 & v102;
    v105 = (unint64_t)(v103 + 63) >> 6;
    v151 = v105 - 1;
    v106 = swift_bridgeObjectRetain();
    v107 = 0;
    v166 = (void (*)(char *, uint64_t))v105;
    v157 = (char *)(v105 - 4);
    v167 = v106;
    v156 = v106 + 96;
    v168 = (char *)v100;
    while (1)
    {
      if (v12)
      {
        v108 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v109 = v108 | (v107 << 6);
        goto LABEL_50;
      }
      v118 = v107 + 1;
      if (__OFADD__(v107, 1))
        break;
      if (v118 >= (uint64_t)v166)
      {
        v118 = v107;
      }
      else
      {
        v119 = *(_QWORD *)&v158[8 * v118];
        if (v119)
          goto LABEL_54;
        if ((uint64_t)(v107 + 2) < (uint64_t)v166)
        {
          v119 = *(_QWORD *)&v158[8 * v107 + 16];
          if (v119)
          {
            v118 = v107 + 2;
LABEL_54:
            v12 = (v119 - 1) & v119;
            v109 = __clz(__rbit64(v119)) + (v118 << 6);
            v107 = v118;
LABEL_50:
            v110 = v167;
            ((void (*)(unint64_t, unint64_t, uint64_t))v170)(v50, *(_QWORD *)(v167 + 48) + *(_QWORD *)(v13 + 72) * v109, v174);
            v111 = *(_QWORD *)(v110 + 56) + 32 * v109;
            v112 = *(_QWORD *)v111;
            v113 = *(_QWORD *)(v111 + 8);
            v114 = *(_BYTE *)(v111 + 16);
            v52 = *(_QWORD *)(v111 + 24);
            sub_2317D3F40();
            v116 = v115;
            v117 = v50 + *(int *)(v115 + 48);
            *(_QWORD *)v117 = v112;
            *(_QWORD *)(v117 + 8) = v113;
            *(_BYTE *)(v117 + 16) = v114;
            *(_QWORD *)(v117 + 24) = v52;
            (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v50, 0, 1, v115);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v100 = (uint64_t)v168;
            goto LABEL_57;
          }
          v118 = v107 + 2;
          if ((uint64_t)(v107 + 3) < (uint64_t)v166)
          {
            v119 = *(_QWORD *)&v158[8 * v107 + 24];
            v118 = v107 + 3;
            if (v119)
              goto LABEL_54;
            while (v157 != (char *)v107)
            {
              v119 = *(_QWORD *)(v156 + 8 * v107++);
              if (v119)
              {
                v118 = v107 + 3;
                goto LABEL_54;
              }
            }
            v118 = v151;
          }
        }
      }
      sub_2317D3F40();
      v116 = v120;
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v50, 1, 1, v120);
      v12 = 0;
      v107 = v118;
LABEL_57:
      sub_2317D40A8(v50, v51, (uint64_t (*)(_QWORD))sub_2317D3F24);
      sub_2317D3F40();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v51, 1, v116) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v152 + 8))(v155, v153);
        goto LABEL_83;
      }
      v172 = v107;
      v121 = (uint64_t *)(v51 + *(int *)(v116 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v163, v51, v174);
      v51 = *v121;
      v13 = v121[1];
      v122 = v121[3];
      sub_2318D549C();
      if ((sub_2318D2AB4() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v123 = sub_23183AF10(v51, v13, v122, v100);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v123 & 1) != 0)
        {
          v124 = v163;
          sub_2318D549C();
          sub_2318D2AA8();
          v52 = v154;
          ((void (*)(uint64_t, char *, uint64_t))v170)(v154, v124, v174);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v125 = sub_2318B78E4(v100, v51, v13);
          v159 = v126;
          LODWORD(v162) = v127;
          v164 = v128;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v129 = v169;
          swift_beginAccess();
          v130 = swift_isUniquelyReferenced_nonNull_native();
          v175 = (_QWORD *)*v129;
          v131 = v175;
          *v129 = 0x8000000000000000;
          v50 = sub_2317FBF8C(v52);
          v133 = v131[2];
          v134 = (v132 & 1) == 0;
          v135 = v133 + v134;
          if (__OFADD__(v133, v134))
            goto LABEL_86;
          v52 = v132;
          if (v131[3] >= v135)
          {
            if ((v130 & 1) != 0)
            {
              v138 = v175;
              if ((v132 & 1) == 0)
                goto LABEL_78;
            }
            else
            {
              sub_2317FED54();
              v138 = v175;
              if ((v52 & 1) == 0)
                goto LABEL_78;
            }
          }
          else
          {
            sub_2317FCA48(v135, v130);
            v136 = sub_2317FBF8C(v154);
            if ((v52 & 1) != (v137 & 1))
            {
              sub_2318D62F4();
              __break(1u);
              JUMPOUT(0x2317D2860);
            }
            v50 = v136;
            v138 = v175;
            if ((v52 & 1) == 0)
            {
LABEL_78:
              v138[(v50 >> 6) + 8] |= 1 << v50;
              ((void (*)(unint64_t, uint64_t, uint64_t))v170)(v138[6] + *(_QWORD *)(v173 + 72) * v50, v154, v174);
              v141 = v138[7] + 32 * v50;
              v142 = v159;
              *(_QWORD *)v141 = v125;
              *(_QWORD *)(v141 + 8) = v142;
              *(_BYTE *)(v141 + 16) = v162;
              *(_QWORD *)(v141 + 24) = v164;
              v143 = v138[2];
              v144 = __OFADD__(v143, 1);
              v145 = v143 + 1;
              if (v144)
                goto LABEL_87;
              v138[2] = v145;
              goto LABEL_80;
            }
          }
          v139 = v138[7] + 32 * v50;
          v140 = v159;
          *(_QWORD *)v139 = v125;
          *(_QWORD *)(v139 + 8) = v140;
          *(_BYTE *)(v139 + 16) = v162;
          *(_QWORD *)(v139 + 24) = v164;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_80:
          *v169 = v138;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, uint64_t))v171)(v154, v174);
          swift_endAccess();
          v50 = (unint64_t)v160;
          v100 = (uint64_t)v168;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v171)(v163, v174);
      v51 = (uint64_t)v165;
      v107 = v172;
      v13 = v173;
    }
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    swift_once();
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v52, v12);
LABEL_83:
  (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v150, v161, v153);
  return swift_bridgeObjectRelease();
}

void (*sub_2317D2874(_QWORD *a1, uint64_t a2))(uint64_t)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_2318D54C0();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2317D2F0C(v4);
  v4[12] = sub_2317D2B24(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2317D2934;
}

void (*sub_2317D2938(_QWORD *a1, uint64_t a2))(uint64_t)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_2318D54C0();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2317D2F38(v4);
  v4[12] = sub_2317D2C7C(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2317D2934;
}

void (*sub_2317D29F8(_QWORD *a1, uint64_t a2))(uint64_t)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_2318D54C0();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2317D2F38(v4);
  v4[12] = sub_2317D2DF0(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2317D2934;
}

void sub_2317D2AB8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_2317D2B24(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_2317FBF8C(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_2317D2C40;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2317FEFDC();
      goto LABEL_7;
    }
    sub_2317FCE10(v14, a3 & 1);
    v18 = sub_2317FBF8C(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_2318D54C0();
  result = (void (*)(uint64_t **))sub_2318D62F4();
  __break(1u);
  return result;
}

void sub_2317D2C40(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_2317D2F58(*a1, *((_BYTE *)*a1 + 32), (_QWORD *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_2317D2C7C(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_2317FBF8C(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_2317D2D98;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2317FF608();
      goto LABEL_7;
    }
    sub_2317FD7D0(v14, a3 & 1);
    v18 = sub_2317FBF8C(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_2318D54C0();
  result = (void (*)(uint64_t **, uint64_t))sub_2318D62F4();
  __break(1u);
  return result;
}

void sub_2317D2D98(uint64_t **a1, uint64_t a2)
{
  sub_2317D2DAC(a1, a2, (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_2317FEC20, (void (*)(uint64_t, _QWORD))sub_2318747F8);
}

void sub_2317D2DAC(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t, uint64_t), void (*a4)(uint64_t, _QWORD))
{
  uint64_t *v4;

  v4 = *a1;
  sub_2317D3044(*a1, *((_BYTE *)*a1 + 32), (_QWORD *)(*a1)[2], (*a1)[3], (*a1)[1], a3, a4);
  swift_bridgeObjectRelease();
  free(v4);
}

void (*sub_2317D2DF0(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_2317FBF8C(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_2317D2D98;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2317FF624();
      goto LABEL_7;
    }
    sub_2317FD7EC(v14, a3 & 1);
    v18 = sub_2317FBF8C(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_2318D54C0();
  result = (void (*)(uint64_t **, uint64_t))sub_2318D62F4();
  __break(1u);
  return result;
}

uint64_t (*sub_2317D2F0C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2317D2F2C;
}

uint64_t sub_2317D2F2C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_2317D2F38(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2317D43D4;
}

uint64_t sub_2317D2F58(uint64_t *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v10 = sub_2318D54C0();
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if (v14)
  {
    v15 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * a4) = v14;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 16))(v13, a5);
      sub_2317FEC20(a4, v13, v14, v15);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_2318747F8(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2317D3044(uint64_t *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, char *, uint64_t, uint64_t), void (*a7)(uint64_t, _QWORD))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v14 = sub_2318D54C0();
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  if (v18)
  {
    v19 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * a4) = v18;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 16))(v17, a5);
      a6(a4, v17, v18, v19);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    a7(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2317D3140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  _QWORD *v15;

  v14 = *a4;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2317D31D8;
  return sub_2317D0074(a1, a2, a3, v14, a5, a6, a7);
}

uint64_t sub_2317D31D8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2317D3220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_2317CE964(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 40) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  v5 = v0 + v4;
  v6 = sub_2318D54C0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v2 + 36), v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317D32E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  sub_2317CE964(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1 + 4;
  v11 = *(uint64_t *)((char *)v1 + v7);
  v12 = (uint64_t)v1 + v6;
  v13 = *(uint64_t *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_2317D31D8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_255F25380
                                                                                                  + dword_255F25380))(a1, v8, v9, v10, v12, v11, v13);
}

uint64_t sub_2317D33B4(uint64_t a1)
{
  uint64_t v2;

  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2317D3408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2317D4194(255, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = v6;
    v8 = sub_2317D4290(255, (unint64_t *)&qword_25418B4A0);
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2317D34A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_2317CE964(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = v0 + v4;
  v6 = sub_2318D54C0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v2 + 36), v6);
  return swift_deallocObject();
}

uint64_t sub_2317D3544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2317CE964(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_2317D1494(*(_QWORD *)(v0 + 16), v0 + ((v2 + 24) & ~v2));
}

uint64_t sub_2317D3574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_2317CE964(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 25) & ~v3;
  swift_release();
  v5 = v0 + v4;
  v6 = sub_2318D54C0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v2 + 36), v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2317D3628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_2317CE964(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_2317D10E0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + v3, *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2317D3670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2317D3680()
{
  return swift_release();
}

unint64_t sub_2317D3688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418B3E0;
  if (!qword_25418B3E0)
  {
    sub_2317D4194(255, (unint64_t *)&unk_25418B3D0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25418B3E0);
  }
  return result;
}

uint64_t sub_2317D36E8()
{
  return sub_2317CC4AC(&qword_25418A9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF3E8], MEMORY[0x24BDCF400]);
}

uint64_t sub_2317D3704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t v5;

  sub_2317D42DC(0, a2, a3, a4, MEMORY[0x24BEE2C00]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2317D3748(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t result;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  uint64_t *v71;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  _QWORD v74[2];
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  char *v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  v91 = a2;
  sub_2317CFFEC();
  v83 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v82 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v81 = (char *)v74 - v6;
  sub_2317CE964(0);
  v8 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v80 = (uint64_t)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)v74 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v77 = (uint64_t)v74 - v13;
  v14 = sub_2318D54C0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v88 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v74 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v74 - v21;
  sub_2317D4194(0, (unint64_t *)&unk_255F257A0, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v24);
  v89 = (char *)v74 - v25;
  sub_2317D42DC(0, &qword_255F253A0, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(void))sub_2317D3E28, MEMORY[0x24BEE2C00]);
  v27 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v74 - v28;
  sub_2317D404C(a1, (uint64_t)v74 - v28, (uint64_t (*)(_QWORD))sub_2317CE964);
  v30 = *(int *)(v27 + 36);
  v31 = v15;
  v32 = &v29[v30];
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v33(&v29[v30], a1, v14);
  v79 = v8;
  v34 = *(int *)(v8 + 36);
  v84 = v29;
  v35 = &v29[v34];
  v36 = sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  if ((sub_2318D5580() & 1) != 0)
  {
    v37 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v89, 1, 1, v14);
    return sub_2317D3704(v37, &qword_255F253A0, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(void))sub_2317D3E28);
  }
  else
  {
    v74[1] = v36;
    v86 = v20;
    v87 = v33;
    v75 = v35;
    v76 = v22;
    v38 = *(_QWORD *)(*(_QWORD *)v91 + 128);
    v39 = v35;
    v90 = v31;
    v85 = (uint64_t *)&v91[v38];
    v92 = v32;
    while (1)
    {
      v43 = v87;
      v87(v89, (uint64_t)v32, v14);
      v44 = sub_2317CE988();
      v45 = (uint64_t)v84;
      v46 = v14;
      v91 = (char *)v44;
      if ((sub_2318D5568() & 1) == 0)
        break;
      v47 = v83;
      v48 = v39;
      v49 = v81;
      v50 = v31;
      v51 = &v81[*(int *)(v83 + 48)];
      v43(v81, v45, v14);
      v43(v51, (uint64_t)v48, v14);
      v52 = (void (*)(char *, char *, uint64_t))v43;
      v53 = v82;
      v54 = &v82[*(int *)(v47 + 48)];
      v52(v82, v49, v14);
      v52(v54, v51, v14);
      v55 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      v56 = (uint64_t)v78;
      v55(v78, v53, v14);
      v32 = *(char **)(v50 + 8);
      ((void (*)(char *, uint64_t))v32)(v54, v14);
      v57 = &v53[*(int *)(v47 + 48)];
      v58 = v49;
      v59 = v79;
      v55(v53, v58, v14);
      v55(v57, v51, v14);
      v55((char *)(v56 + *(int *)(v59 + 36)), v57, v14);
      ((void (*)(char *, uint64_t))v32)(v53, v14);
      v60 = v77;
      sub_2317D40A8(v56, v77, (uint64_t (*)(_QWORD))sub_2317CE964);
      v61 = v92;
      LOBYTE(v51) = sub_2318D5568();
      v46 = (uint64_t)v86;
      v87(v86, (uint64_t)v61, v14);
      v45 = v80;
      sub_2317D404C(v60, v80, (uint64_t (*)(_QWORD))sub_2317CE964);
      if ((v51 & 1) == 0)
        goto LABEL_15;
      v62 = sub_2318D5550();
      sub_2317CF774(v45, (uint64_t (*)(_QWORD))sub_2317CE964);
      result = ((uint64_t (*)(char *, uint64_t))v32)(v86, v14);
      if ((v62 & 1) == 0)
        goto LABEL_16;
      sub_2317CF774(v60, (uint64_t (*)(_QWORD))sub_2317CE964);
      v93 = 1;
      sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      v64 = v76;
      v65 = v92;
      sub_2318D5F88();
      ((void (*)(char *, uint64_t))v32)(v65, v14);
      v55(v65, v64, v14);
      v66 = v89;
      v91 = *(char **)(v90 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v91)(v89, 0, 1, v14);
      v67 = (uint64_t)v88;
      v55(v88, v66, v14);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v68 = sub_2317FBF8C(v67);
      v70 = v69;
      swift_bridgeObjectRelease();
      v41 = 0;
      if ((v70 & 1) != 0)
      {
        v71 = v85;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v73 = *v71;
        v94 = *v71;
        *v71 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2317FED54();
          v73 = v94;
        }
        ((void (*)(unint64_t, uint64_t))v32)(*(_QWORD *)(v73 + 48) + *(_QWORD *)(v90 + 72) * v68, v14);
        v40 = v94;
        v41 = *(_QWORD *)(*(_QWORD *)(v94 + 56) + 32 * v68);
        sub_231874558(v68, v94);
        *v71 = v40;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_2317D3EEC(v41);
      ((void (*)(char *, uint64_t))v32)(v88, v14);
      v32 = v92;
      v39 = v75;
      v42 = sub_2318D5580();
      v31 = v90;
      if ((v42 & 1) != 0)
      {
        v37 = (uint64_t)v84;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v91)(v89, 1, 1, v14);
        return sub_2317D3704(v37, &qword_255F253A0, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(void))sub_2317D3E28);
      }
    }
    __break(1u);
LABEL_15:
    sub_2317CF774(v45, (uint64_t (*)(_QWORD))sub_2317CE964);
    result = ((uint64_t (*)(uint64_t, uint64_t))v32)(v46, v14);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_2317D3E28()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F253A8;
  if (!qword_255F253A8)
  {
    sub_2317CE964(255);
    v2 = v1;
    v3[0] = sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    v3[1] = sub_2317D3EA8();
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE1BD8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F253A8);
  }
  return result;
}

unint64_t sub_2317D3EA8()
{
  unint64_t result;

  result = qword_255F253B0;
  if (!qword_255F253B0)
  {
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255F253B0);
  }
  return result;
}

uint64_t sub_2317D3EEC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2317D3F24(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F253B8, (uint64_t (*)(uint64_t))sub_2317D3F40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2317D3F40()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F253C0)
  {
    sub_2318D54C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F253C0);
  }
}

void sub_2317D3FA8(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F253C8, (uint64_t (*)(uint64_t))sub_2317D3FC4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2317D3FC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F253D0)
  {
    sub_2318D54C0();
    sub_2317D4194(255, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F253D0);
  }
}

uint64_t sub_2317D404C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2317D4090(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2317D40A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2317D40EC(uint64_t a1)
{
  sub_2317D4194(a1, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_2317D4108(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2318D54C0();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_2317D4178(uint64_t a1)
{
  sub_2317D4194(a1, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_2317D4194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_2317D41EC(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2317D4228(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_25418AB58[0])
  {
    v2 = sub_2317D4290(255, (unint64_t *)&qword_25418AD90);
    v5 = type metadata accessor for ObserverSet(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_25418AB58);
  }
}

uint64_t sub_2317D4290(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2317D42DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_2317D434C()
{
  return sub_2317CC4AC(&qword_25418ADE0, type metadata accessor for MedicationDaySummaryViewModelProviderDataSource, (uint64_t)&unk_2318DA910);
}

uint64_t sub_2317D4368(uint64_t a1)
{
  return sub_2317CDEA8(a1);
}

void sub_2317D4370()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F253E8)
  {
    sub_2317CE964(255);
    v0 = sub_2318D4DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F253E8);
  }
}

uint64_t sub_2317D43E0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  char *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint8_t *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  uint64_t v44;
  _QWORD v45[4];
  _OWORD v46[2];
  uint64_t v47;

  v4 = sub_2318D4A1C();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v36 - v7;
  v8 = sub_2318D3AF8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_2318D3B04();
  v12 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1;
  v15 = objc_msgSend(a1, sel_identifier);
  v16 = sub_2318D55BC();
  v18 = v17;

  if (v16 == 0xD000000000000036 && v18 == 0x80000002318DED30)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v20 = (void *)sub_2318D3AE0();
    sub_2318D3AEC();
    v21 = objc_allocWithZone((Class)type metadata accessor for MedicationsRoutingDetailViewController());
    v22 = (uint64_t)sub_2317E8048(v20, (uint64_t)v45, 3);

    return v22;
  }
  v19 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_5;
  v47 = 0;
  memset(v46, 0, sizeof(v46));
  sub_2317D497C((uint64_t)v46, (uint64_t)&v43);
  if (v44)
  {
    sub_2317D4AF0(&v43, (uint64_t)v45);
    sub_2317D4B08(v45, v45[3]);
    sub_2318D3D2C();
    sub_2318D3A98();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    v31 = objc_allocWithZone((Class)sub_2318D3B7C());
    v32 = v42;
    v22 = sub_2318D3B70();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
    sub_2317D4A24((uint64_t)v46);
    sub_2317D4B2C((uint64_t)v45);
  }
  else
  {
    sub_2317D4A24((uint64_t)&v43);
    v23 = v39;
    sub_2318D49F8();
    v24 = v42;
    v25 = sub_2318D4A10();
    v26 = sub_2318D5A3C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412290;
      v45[0] = v24;
      v29 = v24;
      sub_2318D5F70();
      *v28 = v24;

      _os_log_impl(&dword_2317C8000, v25, v26, "[MedicationsHealthAppPluginDelegate] No custom detail view controller or configuration provided for %@", v27, 0xCu);
      sub_2317D4A60();
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v28, -1, -1);
      v30 = v27;
      v23 = v39;
      MEMORY[0x2348E77E8](v30, -1, -1);
    }
    else
    {

    }
    v34 = v40;
    v33 = v41;

    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v33);
    sub_2317D4A24((uint64_t)v46);
    return 0;
  }
  return v22;
}

uint64_t sub_2317D497C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D49C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2317D49C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F253F8)
  {
    sub_2317D4B4C(255, &qword_255F25400);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F253F8);
  }
}

uint64_t sub_2317D4A24(uint64_t a1)
{
  uint64_t v2;

  sub_2317D49C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2317D4A60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B2B0)
  {
    sub_2317D4AB4();
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B2B0);
  }
}

unint64_t sub_2317D4AB4()
{
  unint64_t result;

  result = qword_25418B2D8;
  if (!qword_25418B2D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B2D8);
  }
  return result;
}

uint64_t sub_2317D4AF0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *sub_2317D4B08(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2317D4B2C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2317D4B4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsTimeZoneItem()
{
  uint64_t result;

  result = qword_255F25418;
  if (!qword_255F25418)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317D4BD4()
{
  return swift_initClassMetadata2();
}

void sub_2317D4C28()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2317D4C54()
{
  return swift_release();
}

uint64_t sub_2317D4C64()
{
  sub_2318D3984();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2317D4CA0()
{
  return type metadata accessor for MedicationsTimeZoneItem();
}

uint64_t sub_2317D4CA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_255F25408);
}

uint64_t sub_2317D4CB8()
{
  return 1;
}

uint64_t sub_2317D4CC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_255F25410) = a1;
  swift_retain();
  swift_retain();
  *(_BYTE *)(v1 + qword_255F25408) = sub_2318D4488() & 1;
  swift_release();
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  return sub_2318D3978();
}

uint64_t sub_2317D4DAC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49C8();
  v6 = sub_2318D4A10();
  v7 = sub_2318D5A54();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v17 = v3;
    v9 = v8;
    v10 = swift_slowAlloc();
    v19 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_2318D63CC();
    v18 = sub_231851EBC(v11, v12, &v19);
    v16 = v2;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if ((a1 & 1) != 0)
      v13 = 28271;
    else
      v13 = 6710895;
    if ((a1 & 1) != 0)
      v14 = 0xE200000000000000;
    else
      v14 = 0xE300000000000000;
    v18 = sub_231851EBC(v13, v14, &v19);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v6, v7, "[%s]: Notification setting switch toggled to %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_2318D4494();
}

uint64_t sub_2317D4FD4(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;

  sub_2318D60C0();
  swift_bridgeObjectRelease();
  v4 = a1;
  v5 = objc_msgSend(v4, sel_description);
  sub_2318D55BC();

  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v6 = a2;
  v7 = objc_msgSend(v6, sel_description);
  sub_2318D55BC();

  sub_2318D56A0();
  swift_bridgeObjectRelease();
  return 0x6E65764565736F64;
}

uint64_t sub_2317D50FC()
{
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B2D8);
  if ((sub_2318D5E74() & 1) != 0)
    return sub_2318D5E74() & 1;
  else
    return 0;
}

uint64_t sub_2317D5170()
{
  void **v0;

  return sub_2317D4FD4(*v0, v0[1]);
}

uint64_t sub_2317D5178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t);
  id v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a2;
  v21 = sub_2318D2DC0();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v7 = v6;
  v8 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v9 = v6;
    MEMORY[0x2348E6528]();
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2318D57B4();
    sub_2318D57D8();
    sub_2318D57A8();
    v8 = v23;
  }

  sub_2317D4194(0, (unint64_t *)&qword_25418B468, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_2318D2C04();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2318D8510;
  v15 = v14 + v13;
  v16 = *(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x24BE47460], v10);
  v16(v15 + v12, *MEMORY[0x24BE47490], v10);
  if (v8 >> 62)
  {
    sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
    v19 = a1;
    swift_bridgeObjectRetain();
    sub_2318D6168();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = a1;
    swift_bridgeObjectRetain();
    sub_2318D62C4();
    sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE47920], v21);
  return sub_2318D2DCC();
}

uint64_t sub_2317D53E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[4];

  v2 = v1;
  v4 = sub_2318D2DE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_2318D2E14();
  sub_2317D5178(v8, (uint64_t)v7);

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain, v7, v4);
  sub_2318D49A4();
  sub_2318D2DFC();
  sub_2317D4B08(v14, v14[3]);
  sub_2318D2D84();
  v9 = (void *)sub_2318D4998();
  sub_2317D4B2C((uint64_t)v14);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_changeProvider) = v9;
  v10 = sub_2317D5520(a1, v9);
  v11 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  *(_QWORD *)(v2 + 16) = v10;
  return v2;
}

uint64_t sub_2317D5520(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v5 = sub_2318D2E50();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_2317DBE18();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = sub_2317D56F8(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_QWORD *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  sub_2317DCED0(0, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2317D4B4C(0, (unint64_t *)&qword_2541881E0);
  sub_2317DBEB0();
  sub_2318D4F44();
  swift_release();
  swift_release();
  sub_2317CC4AC(&qword_254187908, (uint64_t (*)(uint64_t))sub_2317DBE18, MEMORY[0x24BDB96C0]);
  v15 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_2317D56F8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;

  v64 = a2;
  v4 = sub_2318D2E50();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = v6;
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DBFA8();
  v54 = v8;
  v56 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DC1BC();
  v55 = v11;
  v57 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DC284();
  v60 = v14;
  v62 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v58 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DC328();
  v61 = v16;
  v63 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  v53 = v2;
  v65 = sub_2317D977C(a1);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v46 = v4;
  v49(v7, a1, v4);
  v18 = *(unsigned __int8 *)(v5 + 80);
  v52 = v18 | 7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v2;
  v51 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v51(v19 + ((v18 + 24) & ~v18), v7, v4);
  v20 = MEMORY[0x24BDB9AE0];
  sub_2317DC058(0, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2317DC0D8();
  v47 = v21;
  v22 = MEMORY[0x24BDB9AF8];
  sub_2317DDD1C(&qword_254189A90, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v20, MEMORY[0x24BDB9AF8]);
  sub_2318D4F44();
  swift_release();
  swift_release();
  v23 = sub_2317CC4AC(&qword_254189678, (uint64_t (*)(uint64_t))sub_2317DBFA8, MEMORY[0x24BDB96C0]);
  v24 = sub_2317CC4AC(&qword_254189B90, (uint64_t (*)(uint64_t))sub_2317DC0D8, v22);
  v25 = v54;
  MEMORY[0x2348E5D9C](v54, v23, v24);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v25);
  v26 = MEMORY[0x24BDB9610];
  sub_2317CC4AC(&qword_254189668, (uint64_t (*)(uint64_t))sub_2317DC1BC, MEMORY[0x24BDB9610]);
  v27 = v55;
  v28 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v27);
  v65 = v28;
  v29 = v46;
  v49(v7, v50, v46);
  v30 = (v18 + 16) & ~v18;
  v31 = (v48 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject();
  v51(v33 + v30, v7, v29);
  v34 = v53;
  *(_QWORD *)(v33 + v31) = v53;
  v35 = v64;
  *(_QWORD *)(v33 + v32) = v64;
  *(_QWORD *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v34;
  sub_2317DCED0(0, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  v36 = v35;
  v37 = v58;
  sub_2318D4F44();
  swift_release();
  swift_release();
  v38 = sub_2317CC4AC(&qword_2541896B8, (uint64_t (*)(uint64_t))sub_2317DC284, MEMORY[0x24BDB96C0]);
  v39 = sub_2317DBEB0();
  v41 = v59;
  v40 = v60;
  MEMORY[0x2348E5D9C](v60, v38, v39);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v40);
  sub_2317CC4AC(&qword_254189648, (uint64_t (*)(uint64_t))sub_2317DC328, v26);
  v42 = v61;
  v43 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v42);
  return v43;
}

uint64_t sub_2317D5BA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_2318D2E50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D4A1C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_2318D49E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_bridgeObjectRetain_n();
  v43 = v13;
  v15 = sub_2318D4A10();
  v16 = sub_2318D5A54();
  v42 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v40 = v10;
    v18 = v17;
    v39 = swift_slowAlloc();
    v45 = v39;
    *(_DWORD *)v18 = 136315906;
    v38 = v15;
    v19 = sub_2318D63CC();
    v41 = a2;
    v44 = sub_231851EBC(v19, v20, &v45);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v36 = v18 + 14;
    v21 = (void *)sub_2318D2E14();
    v22 = sub_2318D2C40();
    v37 = v11;
    v23 = v22;
    v24 = a3;
    v26 = v25;

    v44 = sub_231851EBC(v23, v26, &v45);
    sub_2318D5F70();
    a3 = v24;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v18 + 22) = 2048;
    v27 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRelease();
    v44 = v27;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 32) = 2080;
    v44 = v14;
    sub_2317CDA94(0, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    swift_bridgeObjectRetain();
    v28 = sub_2318D5610();
    v44 = sub_231851EBC(v28, v29, &v45);
    a2 = v41;
    sub_2318D5F70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v30 = v38;
    _os_log_impl(&dword_2317C8000, v38, (os_log_type_t)v42, "[%s]_%s: Received %ld medications, emitting generator for: %s", (uint8_t *)v18, 0x2Au);
    v31 = v39;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v31, -1, -1);
    MEMORY[0x2348E77E8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v40);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v10);
  }
  v32 = sub_2318D2E68();
  v33 = MEMORY[0x24BE47A60];
  a3[3] = v32;
  a3[4] = v33;
  v34 = sub_2317DBF6C(a3);
  return sub_231864020(a2, v14, (uint64_t)v34);
}

uint64_t sub_2317D5F48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  v45 = a4;
  v46 = a3;
  v53 = a5;
  sub_2317DC590(0, &qword_254189C38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v49 = &v43[-v8];
  v52 = sub_2318D2E50();
  v9 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_2318D4A1C();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2317DC600();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v21 = sub_2317D641C(a2, v20);
    sub_2318D2E08();
    if ((sub_2318D2FDC() & 1) != 0)
    {
      v22 = sub_2317D6724(v20, a2);
      v54 = v21;
      v55 = v22;
      sub_2317DCED0(0, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
      sub_2317DBEB0();
      sub_2318D4FB0();
      sub_2317CC4AC(&qword_254189558, (uint64_t (*)(uint64_t))sub_2317DC600, MEMORY[0x24BDB9530]);
      v23 = sub_2318D4F08();
      swift_release();
      swift_release();
      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
    }
    else
    {
      v55 = v21;
      sub_2317DCED0(0, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
      sub_2317DBEB0();
      v23 = sub_2318D4F08();
      result = swift_release();
    }
    v25 = v53;
    goto LABEL_12;
  }
  sub_2318D49E0();
  v27 = v52;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v52);
  v28 = sub_2318D4A10();
  v29 = sub_2318D5A54();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v44 = v30;
    v32 = v31;
    v46 = swift_slowAlloc();
    v55 = v46;
    *(_DWORD *)v32 = 136315394;
    v33 = sub_2318D63CC();
    v54 = sub_231851EBC(v33, v34, &v55);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    v45 = v32 + 14;
    v35 = (void *)sub_2318D2E14();
    v36 = sub_2318D2C40();
    v38 = v37;

    v54 = sub_231851EBC(v36, v38, &v55);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v27);
    _os_log_impl(&dword_2317C8000, v28, (os_log_type_t)v44, "[%s]_%s: No dose events found, returning empty array for no data snippet", (uint8_t *)v32, 0x16u);
    v39 = v46;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v39, -1, -1);
    MEMORY[0x2348E77E8](v32, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v27);
  }

  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v14, v48);
  v25 = v53;
  v41 = v50;
  v40 = v51;
  v42 = v49;
  v55 = MEMORY[0x24BEE4AF8];
  sub_2317CDA94(0, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2318D4E0C();
  sub_2317DC67C();
  v23 = sub_2318D4F08();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v41 + 8))(v42, v40);
LABEL_12:
  *v25 = v23;
  return result;
}

uint64_t sub_2317D641C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v27[0] = a1;
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - v5;
  v7 = sub_2318D2DE4();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D2E50();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DCE28();
  v15 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  v31 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v18, v13, v10);
  *(_QWORD *)(v20 + v19) = v27[1];
  sub_2317DCED0(0, &qword_254189C78, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v33 = sub_2318D4E30();
  v21 = (void *)sub_2318D2E14();
  sub_2317D5178(v21, (uint64_t)v9);

  v22 = (void *)sub_2318D2E38();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  v32 = v22;
  v23 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  sub_2317DCF50();
  sub_2317DC754();
  sub_2318D4FBC();
  sub_2317DD39C((uint64_t)v6, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  swift_release();
  sub_2317CC4AC(&qword_254189A60, (uint64_t (*)(uint64_t))sub_2317DCE28, MEMORY[0x24BDB9A08]);
  v24 = v30;
  v25 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v24);
  return v25;
}

uint64_t sub_2317D6724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;

  v51 = a1;
  v44 = sub_2318D2E50();
  v3 = *(_QWORD *)(v44 - 8);
  v46 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v44);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - v7;
  v9 = sub_2318D2DE4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DDA2C(0, (unint64_t *)&qword_25418A220, (uint64_t (*)(uint64_t))sub_2317DC6D4, sub_2317DC738, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
  v43 = v13;
  v45 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v41 - v14;
  sub_2317DC7AC();
  v47 = v16;
  v49 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DC8C4();
  v48 = v19;
  v50 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v42 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2318D498C();
  v21 = (void *)sub_2318D2E14();
  sub_2317D5178(v21, (uint64_t)v12);

  v22 = (void *)sub_2318D2E38();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v53 = v22;
  v23 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  sub_2317DC6D4();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  sub_2317DC738();
  sub_2317DC754();
  sub_2318D4FBC();
  sub_2317DD39C((uint64_t)v8, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  swift_release();
  v24 = v3;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v26 = v5;
  v27 = v5;
  v28 = v44;
  v25(v27, a2, v44);
  v29 = v24;
  v30 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v31 = (v46 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject();
  v33 = v51;
  v34 = v52;
  *(_QWORD *)(v32 + 16) = v52;
  *(_QWORD *)(v32 + 24) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v32 + v30, v26, v28);
  *(_QWORD *)(v32 + v31) = v34;
  sub_2317CDA94(0, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317DC85C();
  swift_bridgeObjectRetain();
  v35 = v43;
  sub_2318D4F14();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v35);
  sub_2317CC4AC(&qword_25418A1A0, (uint64_t (*)(uint64_t))sub_2317DC7AC, MEMORY[0x24BDB94C8]);
  sub_2317DCA20();
  v36 = v42;
  v37 = v47;
  sub_2318D4FD4();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v37);
  sub_2317CC4AC(&qword_25418A1C8, (uint64_t (*)(uint64_t))sub_2317DC8C4, MEMORY[0x24BDB9658]);
  v38 = v48;
  v39 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v38);
  return v39;
}

uint64_t sub_2317D6B80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *ObjCClassFromMetadata;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (**v39)(uint64_t, char);
  uint64_t (*v40)(uint64_t, char);
  id v41;
  void *v42;
  uint64_t (*v43)(uint64_t, char);
  char *v44;
  char *v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  os_log_type_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t (*v68)(uint64_t, char);
  char *v69;
  id v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t aBlock[3];
  void *v84;
  uint64_t (*v85)(uint64_t, void *, uint64_t, int, void *);
  uint64_t v86;

  v72 = a5;
  v81 = a4;
  v8 = sub_2318D4A1C();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D2E50();
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  v11 = *(_QWORD *)(v74 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v66 - v13;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v68 = (uint64_t (*)(uint64_t, char))v14;
  v15 = (void *)objc_opt_self();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  v17 = objc_msgSend(ObjCClassFromMetadata, sel__typeIdentifier);
  v18 = objc_msgSend(v15, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v17);

  v78 = a3;
  v19 = sub_2318A9220(a3);
  v20 = *(_QWORD *)(v19 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  if (v20)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2318D6114();
    v22 = v19 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v23 = (void *)sub_2318D558C();
      v24 = objc_msgSend(v15, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v23);
      swift_bridgeObjectRelease();

      sub_2318D60FC();
      sub_2318D6120();
      sub_2318D612C();
      sub_2318D6108();
      v22 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_2317CCC9C(0, &qword_25418B3F8);
  v25 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_orPredicateWithSubpredicates_, v25);

  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2318D8520;
  *(_QWORD *)(v28 + 32) = v18;
  *(_QWORD *)(v28 + 40) = v27;
  aBlock[0] = v28;
  sub_2318D57A8();
  v71 = v18;
  v70 = v27;
  v29 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v80 = objc_msgSend(v26, sel_andPredicateWithSubpredicates_, v29);

  aBlock[0] = v21;
  sub_2317DC590(0, &qword_2541881D0, MEMORY[0x24BE483D8]);
  swift_allocObject();
  v30 = sub_2318D303C();
  v31 = v74;
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v32 = v69;
  v33 = v81;
  v34 = v75;
  v67(v69, v81, v75);
  v35 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v36 = (v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v38 + v35, v32, v34);
  *(_QWORD *)(v38 + v36) = v78;
  v39 = (uint64_t (**)(uint64_t, char))(v38 + v37);
  v40 = v68;
  *v39 = sub_2317DD0B0;
  v39[1] = v40;
  *(_QWORD *)(v38 + ((v37 + 23) & 0xFFFFFFFFFFFFFFF8)) = v72;
  v41 = objc_allocWithZone(MEMORY[0x24BDD4078]);
  v85 = sub_2317DD194;
  v86 = v38;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23186E1B8;
  v84 = &unk_25007D218;
  v42 = _Block_copy(aBlock);
  v69 = (char *)v30;
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = (uint64_t (*)(uint64_t, char))objc_msgSend(v41, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v80, 0, 0, 0, v42);
  _Block_release(v42);
  swift_release();
  v44 = v79;
  sub_2318D49E0();
  v45 = v73;
  v67(v73, v33, v34);
  swift_bridgeObjectRetain_n();
  v46 = sub_2318D4A10();
  v47 = sub_2318D5A54();
  if (os_log_type_enabled(v46, (os_log_type_t)v47))
  {
    LODWORD(v67) = v47;
    v68 = v43;
    v48 = swift_slowAlloc();
    v66 = swift_slowAlloc();
    aBlock[0] = v66;
    *(_DWORD *)v48 = 136315906;
    v49 = sub_2318D63CC();
    v50 = v34;
    v82 = sub_231851EBC(v49, v51, aBlock);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    v52 = (void *)sub_2318D2E14();
    v53 = v45;
    v54 = sub_2318D2C40();
    v56 = v55;

    v82 = sub_231851EBC(v54, v56, aBlock);
    sub_2318D5F70();
    v57 = v78;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v53, v50);
    *(_WORD *)(v48 + 22) = 2048;
    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      v58 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v59 = v79;
    v60 = v67;
    swift_bridgeObjectRelease();
    v82 = v58;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 32) = 2080;
    v82 = v57;
    sub_2317DC15C(0, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    swift_bridgeObjectRetain();
    v61 = sub_2318D5610();
    v82 = sub_231851EBC(v61, v62, aBlock);
    sub_2318D5F70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v46, v60, "[%s]_%s: Querying for concepts associated with %ld dose events: %s", (uint8_t *)v48, 0x2Au);
    v63 = v66;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v63, -1, -1);
    MEMORY[0x2348E77E8](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v59, v77);
    v43 = v68;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v45, v34);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v44, v77);
  }
  sub_2318D2DFC();
  sub_2317D4B08(aBlock, (uint64_t)v84);
  v64 = (void *)sub_2318D2D84();
  objc_msgSend(v64, sel_executeQuery_, v43);

  swift_release();
  return sub_2317D4B2C((uint64_t)aBlock);
}

uint64_t sub_2317D73E0(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t, _QWORD), uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  char *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  char *v62;
  char *v63;
  id v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  os_log_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  id v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  os_log_t v102;
  id v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;
  _QWORD *v110;
  id v111;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_t v118;
  char *v119;
  char *v120;
  int v121;
  uint64_t v122;
  _QWORD *v123;
  void (*v124)(uint64_t, _QWORD);
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134[2];

  v132 = a8;
  v125 = a6;
  v126 = a2;
  v14 = a10;
  v124 = a9;
  v15 = sub_2318D2E50();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v119 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v113 - v19;
  v21 = sub_2318D4A1C();
  v131 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v120 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v118 = (os_log_t)((char *)&v113 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v123 = (uint64_t *)((char *)&v113 - v27);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v113 - v29;
  v128 = a7;
  v129 = a10;
  v130 = a11;
  v127 = v28;
  if (!a5)
    goto LABEL_6;
  v31 = a4;
  v32 = a5;
  sub_2318D49E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, a7, v15);
  v33 = a5;
  v122 = v16;
  swift_bridgeObjectRetain();
  v34 = a5;
  swift_bridgeObjectRetain();
  v35 = v15;
  v36 = sub_2318D4A10();
  v37 = sub_2318D5A3C();
  if (os_log_type_enabled(v36, (os_log_type_t)v37))
  {
    v114 = v30;
    LODWORD(v116) = v37;
    v117 = v36;
    v121 = v31;
    v38 = swift_slowAlloc();
    v115 = swift_slowAlloc();
    v134[0] = v115;
    *(_DWORD *)v38 = 136315906;
    v39 = sub_2318D63CC();
    v133 = sub_231851EBC(v39, v40, v134);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v41 = (void *)sub_2318D2E14();
    v42 = sub_2318D2C40();
    v44 = v43;

    v133 = sub_231851EBC(v42, v44, v134);
    v45 = v132;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v20, v35);
    *(_WORD *)(v38 + 22) = 2048;
    v15 = v35;
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      v46 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v47 = v131;
    v48 = v117;
    v49 = v114;
    swift_bridgeObjectRelease();
    v133 = v46;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 32) = 2080;
    v133 = (uint64_t)a5;
    v50 = a5;
    sub_2317D4B4C(0, (unint64_t *)&qword_25418B4A0);
    v51 = sub_2318D55EC();
    v133 = sub_231851EBC(v51, v52, v134);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2317C8000, v48, (os_log_type_t)v116, "[%s]_%s: Error when querying for concepts for the %ld dose events: %s", (uint8_t *)v38, 0x2Au);
    v53 = v115;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v53, -1, -1);
    MEMORY[0x2348E77E8](v38, -1, -1);

    v21 = v127;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v127);
    v14 = v129;
    a4 = v121;
    v16 = v122;
LABEL_6:
    v54 = v126;
    if (!v126)
      goto LABEL_13;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();

  v16 = v122;
  (*(void (**)(char *, uint64_t))(v122 + 8))(v20, v15);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v131 + 8))(v30, v21);
  a4 = v31;
  v14 = v129;
  v54 = v126;
  if (!v126)
  {
LABEL_13:
    v87 = v131;
    v88 = v123;
    sub_2318D49E0();
    v89 = a5;
    swift_bridgeObjectRetain();
    v90 = a5;
    swift_bridgeObjectRetain();
    v91 = sub_2318D4A10();
    v92 = sub_2318D5A3C();
    if (os_log_type_enabled(v91, v92))
    {
      v121 = a4;
      v93 = swift_slowAlloc();
      v94 = swift_slowAlloc();
      v134[0] = v94;
      *(_DWORD *)v93 = 136315650;
      v95 = sub_2318D63CC();
      v133 = sub_231851EBC(v95, v96, v134);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 12) = 2048;
      if (v132 >> 62)
      {
        swift_bridgeObjectRetain();
        v97 = sub_2318D6174();
        swift_bridgeObjectRelease();
      }
      else
      {
        v97 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v133 = v97;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 22) = 2080;
      v133 = (uint64_t)a5;
      v98 = a5;
      sub_2317DD260();
      v99 = sub_2318D55EC();
      v133 = sub_231851EBC(v99, v100, v134);
      sub_2318D5F70();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2317C8000, v91, v92, "[%s] No HKMedicationUserDomainConcept returned for the %ld dose events: error: %s", (uint8_t *)v93, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v94, -1, -1);
      MEMORY[0x2348E77E8](v93, -1, -1);

      (*(void (**)(_QWORD *, uint64_t))(v87 + 8))(v123, v127);
      v101 = v125;
LABEL_23:
      v14 = v129;
      LOBYTE(a4) = v121;
      return sub_2317D806C(a4 & 1, v101, v128, v132, v124, v14);
    }
    swift_bridgeObjectRelease_n();

    (*(void (**)(_QWORD *, uint64_t))(v87 + 8))(v88, v127);
    goto LABEL_18;
  }
LABEL_9:
  objc_opt_self();
  v55 = swift_dynamicCastObjCClass();
  if (!v55)
    goto LABEL_13;
  v56 = (void *)v55;
  v57 = v54;
  v58 = sub_2317DCC44(v132, v56);
  if (v58)
  {
    v59 = (void *)v58;
    v121 = a4;
    v60 = v57;
    v61 = v59;
    v62 = v120;
    sub_2318D49E0();
    v63 = v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v119, v128, v15);
    v64 = v60;
    v65 = v61;
    v126 = v64;
    v66 = v65;
    v67 = sub_2318D4A10();
    v68 = sub_2318D5A24();
    v69 = v68;
    if (os_log_type_enabled(v67, v68))
    {
      v70 = swift_slowAlloc();
      v122 = v16;
      v71 = v70;
      v123 = (_QWORD *)swift_slowAlloc();
      v134[0] = (uint64_t)v123;
      *(_DWORD *)v71 = 136315650;
      v118 = v67;
      v72 = sub_2318D63CC();
      LODWORD(v117) = v69;
      v133 = sub_231851EBC(v72, v73, v134);
      v116 = v15;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      v74 = (void *)sub_2318D2E14();
      v75 = sub_2318D2C40();
      v77 = v76;

      v133 = sub_231851EBC(v75, v77, v134);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v63, v116);
      *(_WORD *)(v71 + 22) = 2080;
      v78 = v126;
      v79 = v126;
      v80 = v66;
      v81 = sub_2317D4FD4(v80, v56);
      v83 = v82;

      v133 = sub_231851EBC(v81, v83, v134);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      v84 = v118;
      _os_log_impl(&dword_2317C8000, v118, (os_log_type_t)v117, "[%s]_%s: Concept returned, details formed, adding to result: %s", (uint8_t *)v71, 0x20u);
      v85 = v123;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v85, -1, -1);
      MEMORY[0x2348E77E8](v71, -1, -1);

      v86 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v120, v127);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v63, v15);

      v78 = v126;
      v86 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v62, v21);
    }
    MEMORY[0x24BDAC7A8](v86);
    *(&v113 - 2) = (uint64_t)v66;
    *(&v113 - 1) = (uint64_t)v56;
    v101 = v125;
    sub_2318D3030();

    goto LABEL_23;
  }
  v102 = v118;
  sub_2318D49E0();
  v103 = v57;
  v104 = sub_2318D4A10();
  v105 = sub_2318D5A3C();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = swift_slowAlloc();
    v123 = (_QWORD *)swift_slowAlloc();
    v126 = (id)swift_slowAlloc();
    v134[0] = (uint64_t)v126;
    *(_DWORD *)v106 = 136315394;
    v107 = sub_2318D63CC();
    v133 = sub_231851EBC(v107, v108, v134);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 12) = 2112;
    v133 = (uint64_t)v56;
    v109 = v103;
    v14 = v129;
    sub_2318D5F70();
    v110 = v123;
    *v123 = v56;

    _os_log_impl(&dword_2317C8000, v104, v105, "[%s] No associated dose event for queried medication %@", (uint8_t *)v106, 0x16u);
    sub_2317DC15C(0, (unint64_t *)&qword_25418B2B0, (unint64_t *)&qword_25418B2D8, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v110, -1, -1);
    v111 = v126;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v111, -1, -1);
    MEMORY[0x2348E77E8](v106, -1, -1);

    (*(void (**)(os_log_t, uint64_t))(v131 + 8))(v118, v127);
  }
  else
  {

    (*(void (**)(os_log_t, uint64_t))(v131 + 8))(v102, v127);
  }
LABEL_18:
  v101 = v125;
  return sub_2317D806C(a4 & 1, v101, v128, v132, v124, v14);
}

uint64_t sub_2317D806C(char a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, _QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  os_log_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a6;
  v44 = a5;
  v10 = sub_2318D2E50();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D4A1C();
  result = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v42 = v16;
    sub_2318D3024();
    v41 = v47;
    sub_2318D49E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v19 = sub_2318D4A10();
    v20 = sub_2318D5A54();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      v36 = v20;
      v37 = v19;
      v38 = a2;
      v39 = v18;
      v40 = v14;
      v21 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v47 = v35;
      *(_DWORD *)v21 = 136315906;
      v22 = sub_2318D63CC();
      v46 = sub_231851EBC(v22, v23, &v47);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v24 = (void *)sub_2318D2E14();
      v25 = sub_2318D2C40();
      v27 = v26;

      v46 = sub_231851EBC(v25, v27, &v47);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_WORD *)(v21 + 22) = 2048;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        v28 = sub_2318D6174();
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v29 = v36;
      swift_bridgeObjectRelease();
      v46 = v28;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2080;
      sub_2318D3024();
      v45 = v46;
      sub_2317CDA94(0, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
      v30 = sub_2318D5610();
      v46 = sub_231851EBC(v30, v31, &v47);
      sub_2318D5F70();
      swift_release_n();
      swift_bridgeObjectRelease();
      v32 = v37;
      _os_log_impl(&dword_2317C8000, v37, v29, "[%s]_%s: Query complete for concepts associated with %ld: %s", (uint8_t *)v21, 0x2Au);
      v33 = v35;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v33, -1, -1);
      MEMORY[0x2348E77E8](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v40);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      swift_release_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
    }
    v44(v41, 0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2317D8468(_QWORD **a1, void *a2, void *a3)
{
  _QWORD *v5;
  id v6;
  id v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = *a1;
  v6 = a2;
  v7 = a3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_2317EC0C4(0, v5[2] + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v10 = v5[2];
  v9 = v5[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_2317EC0C4((_QWORD *)(v9 > 1), v10 + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v5[2] = v10 + 1;
  v11 = &v5[2 * v10];
  v11[4] = v6;
  v11[5] = v7;
  *a1 = v5;
  return result;
}

uint64_t sub_2317D8518@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  os_log_t v89;
  uint64_t result;
  os_log_type_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  NSObject *v105;
  os_log_type_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  void *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  os_log_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t *v129;
  uint64_t v130;
  os_log_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140[8];

  v132 = a5;
  v133 = a4;
  v130 = a3;
  v131 = a2;
  v136 = a6;
  v7 = sub_2318D2E50();
  v137 = *(_QWORD *)(v7 - 8);
  v138 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v126 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v123 = (char *)&v122 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v127 = (char *)&v122 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v124 = (char *)&v122 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v129 = (uint64_t *)((char *)&v122 - v16);
  v17 = sub_2318D4A1C();
  v134 = *(_QWORD *)(v17 - 8);
  v135 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v125 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v122 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v122 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v128 = (char *)&v122 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v122 - v28;
  v30 = sub_2318D4980();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v122 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (unint64_t *)((char *)&v122 - v38);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v40((char *)&v122 - v38, a1, v30);
  v41 = (*(uint64_t (**)(unint64_t *, uint64_t))(v31 + 88))(v39, v30);
  if (v41 == *MEMORY[0x24BE48B68] || v41 == *MEMORY[0x24BE48B78])
  {
    (*(void (**)(unint64_t *, uint64_t))(v31 + 96))(v39, v30);
    v56 = *v39;
    v57 = v133;
    v140[2] = v130;
    v140[3] = v133;
    v140[4] = (uint64_t)v131;
    v58 = sub_2318244A0((void (*)(__int128 *__return_ptr, id *))sub_2317DCADC, (uint64_t)v140, v56);
    swift_bridgeObjectRelease();
    if (!v58[2])
    {
      swift_bridgeObjectRelease();
      v22 = v128;
      sub_2318D49E0();
      v74 = v137;
      v75 = v138;
      v76 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v124, v57, v138);
      v77 = sub_2318D4A10();
      v91 = sub_2318D5A24();
      v92 = v91;
      if (os_log_type_enabled(v77, v91))
      {
        v93 = swift_slowAlloc();
        LODWORD(v131) = v92;
        v94 = v93;
        v133 = swift_slowAlloc();
        v140[0] = v133;
        *(_DWORD *)v94 = 136315394;
        v95 = sub_2318D63CC();
        v139 = sub_231851EBC(v95, v96, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2080;
        v97 = (void *)sub_2318D2E14();
        v98 = v74;
        v99 = sub_2318D2C40();
        v101 = v100;

        v139 = sub_231851EBC(v99, v101, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v76, v75);
        _os_log_impl(&dword_2317C8000, v77, (os_log_type_t)v131, "[%s]_%s: Update/create received, but not associated with dose events", (uint8_t *)v94, 0x16u);
        v102 = v133;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v102, -1, -1);
        MEMORY[0x2348E77E8](v94, -1, -1);

        result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v128, v135);
        goto LABEL_19;
      }
LABEL_16:
      (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);

      result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v22, v135);
      goto LABEL_19;
    }
    sub_2318D49E0();
    v60 = v137;
    v59 = v138;
    v61 = v129;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v137 + 16))(v129, v57, v138);
    v62 = sub_2318D4A10();
    v63 = sub_2318D5A54();
    v64 = v63;
    if (os_log_type_enabled(v62, v63))
    {
      v65 = swift_slowAlloc();
      v133 = swift_slowAlloc();
      v140[0] = v133;
      *(_DWORD *)v65 = 136315394;
      LODWORD(v131) = v64;
      v66 = sub_2318D63CC();
      v139 = sub_231851EBC(v66, v67, v140);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2080;
      v132 = v65 + 14;
      v68 = (void *)sub_2318D2E14();
      v69 = v60;
      v70 = sub_2318D2C40();
      v72 = v71;

      v139 = sub_231851EBC(v70, v72, v140);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v69 + 8))(v61, v138);
      _os_log_impl(&dword_2317C8000, v62, (os_log_type_t)v131, "[%s]_%s: Update/create received for concepts", (uint8_t *)v65, 0x16u);
      v73 = v133;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v73, -1, -1);
      MEMORY[0x2348E77E8](v65, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v60 + 8))(v61, v59);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v29, v135);
    *v136 = v58;
  }
  else
  {
    if (v41 == *MEMORY[0x24BE48B70])
    {
      (*(void (**)(unint64_t *, uint64_t))(v31 + 96))(v39, v30);
      swift_bridgeObjectRelease();
      sub_2318D49E0();
      v43 = v137;
      v42 = v138;
      v44 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v127, v133, v138);
      v45 = sub_2318D4A10();
      v46 = sub_2318D5A24();
      v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        v48 = swift_slowAlloc();
        v133 = swift_slowAlloc();
        v140[0] = v133;
        *(_DWORD *)v48 = 136315394;
        LODWORD(v131) = v47;
        v49 = sub_2318D63CC();
        v139 = sub_231851EBC(v49, v50, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        v51 = (void *)sub_2318D2E14();
        v52 = sub_2318D2C40();
        v54 = v53;

        v139 = sub_231851EBC(v52, v54, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v137 + 8))(v44, v42);
        _os_log_impl(&dword_2317C8000, v45, (os_log_type_t)v131, "[%s]_%s: Deletion received from concept changes provider", (uint8_t *)v48, 0x16u);
        v55 = v133;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v55, -1, -1);
        MEMORY[0x2348E77E8](v48, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v25, v135);
      goto LABEL_19;
    }
    if (v41 == *MEMORY[0x24BE48B80])
    {
      sub_2318D49E0();
      v74 = v137;
      v75 = v138;
      v76 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v123, v133, v138);
      v77 = sub_2318D4A10();
      v78 = sub_2318D5A24();
      v79 = v78;
      if (os_log_type_enabled(v77, v78))
      {
        v80 = swift_slowAlloc();
        v133 = (uint64_t)v22;
        LODWORD(v130) = v79;
        v81 = v80;
        v131 = (os_log_t)swift_slowAlloc();
        v140[0] = (uint64_t)v131;
        *(_DWORD *)v81 = 136315394;
        v82 = sub_2318D63CC();
        v139 = sub_231851EBC(v82, v83, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 12) = 2080;
        v84 = (void *)sub_2318D2E14();
        v85 = v74;
        v86 = sub_2318D2C40();
        v88 = v87;

        v139 = sub_231851EBC(v86, v88, v140);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v76, v75);
        _os_log_impl(&dword_2317C8000, v77, (os_log_type_t)v130, "[%s]_%s: Ignoring initial change", (uint8_t *)v81, 0x16u);
        v89 = v131;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v89, -1, -1);
        MEMORY[0x2348E77E8](v81, -1, -1);

        result = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
LABEL_19:
        *v136 = 0;
        return result;
      }
      goto LABEL_16;
    }
    v103 = v125;
    sub_2318D49E0();
    v104 = v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v126, v133, v138);
    v40(v37, a1, v30);
    v105 = sub_2318D4A10();
    v106 = sub_2318D5A3C();
    v107 = v106;
    if (os_log_type_enabled(v105, v106))
    {
      v108 = swift_slowAlloc();
      v130 = (uint64_t)v37;
      v109 = v108;
      v133 = swift_slowAlloc();
      v140[0] = v133;
      *(_DWORD *)v109 = 136315650;
      v131 = v105;
      v110 = sub_2318D63CC();
      v139 = sub_231851EBC(v110, v111, v140);
      v129 = v140;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2080;
      LODWORD(v132) = v107;
      v112 = (void *)sub_2318D2E14();
      v113 = sub_2318D2C40();
      v115 = v114;

      v139 = sub_231851EBC(v113, v115, v140);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v126, v138);
      *(_WORD *)(v109 + 22) = 2080;
      v116 = v130;
      v40(v34, v130, v30);
      v117 = sub_2318D5610();
      v139 = sub_231851EBC(v117, v118, v140);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      v119 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v119(v116, v30);
      v120 = v131;
      _os_log_impl(&dword_2317C8000, v131, (os_log_type_t)v132, "[%s]_%s: Unknown medication change received: %s", (uint8_t *)v109, 0x20u);
      v121 = v133;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v121, -1, -1);
      MEMORY[0x2348E77E8](v109, -1, -1);

      (*(void (**)(char *, uint64_t))(v134 + 8))(v125, v135);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v137 + 8))(v104, v138);
      v119 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v119((uint64_t)v37, v30);

      (*(void (**)(char *, uint64_t))(v134 + 8))(v103, v135);
    }
    *v136 = 0;
    return ((uint64_t (*)(unint64_t *, uint64_t))v119)(v39, v30);
  }
  return result;
}

uint64_t sub_2317D91A8@<X0>(void **a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  void (**v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void (**v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  char *v46;
  void (**v47)(char *, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  id v74;
  int v75;
  os_log_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85[2];
  uint64_t v86;

  v83 = a5;
  v79 = a4;
  v80 = a3;
  v7 = sub_2318D2E50();
  v8 = *(void (***)(char *, uint64_t))(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v73 - v12;
  v14 = sub_2318D4A1C();
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v73 - v18;
  v20 = *a1;
  objc_opt_self();
  v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    v22 = (void *)v21;
    v23 = v20;
    v24 = v84;
    v25 = sub_2317DCC44(a2, v22);
    v84 = v24;
    if (v25)
    {
      v26 = (void *)v25;
      v27 = v23;
      v78 = (uint64_t)v26;
      v28 = v26;
      sub_2318D49E0();
      v29 = v8;
      v30 = v8[2];
      v31 = v13;
      v32 = v7;
      ((void (*)(char *, uint64_t, uint64_t))v30)(v13, v80, v7);
      v33 = v27;
      v34 = v28;
      v35 = v33;
      v36 = v34;
      v37 = sub_2318D4A10();
      v38 = sub_2318D5A54();
      v39 = v38;
      if (os_log_type_enabled(v37, v38))
      {
        v40 = swift_slowAlloc();
        v74 = v35;
        v41 = v36;
        v42 = v40;
        v77 = swift_slowAlloc();
        v86 = v77;
        *(_DWORD *)v42 = 136315650;
        v76 = v37;
        v43 = sub_2318D63CC();
        v80 = v32;
        v85[0] = sub_231851EBC(v43, v44, &v86);
        v79 = v19;
        v75 = v39;
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2080;
        v73 = v42 + 14;
        v45 = (void *)sub_2318D2E14();
        v46 = v31;
        v47 = v29;
        v48 = sub_2318D2C40();
        v50 = v49;

        v85[0] = sub_231851EBC(v48, v50, &v86);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        v47[1](v46, v80);
        *(_WORD *)(v42 + 22) = 2080;
        v85[0] = (uint64_t)v41;
        v85[1] = (uint64_t)v22;
        v51 = v74;
        v52 = v41;
        v53 = sub_2318D5610();
        v85[0] = sub_231851EBC(v53, v54, &v86);
        sub_2318D5F70();

        swift_bridgeObjectRelease();
        v55 = v76;
        _os_log_impl(&dword_2317C8000, v76, (os_log_type_t)v75, "[%s]_%s: Received change for medications, created detail: %s", (uint8_t *)v42, 0x20u);
        v56 = v77;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v56, -1, -1);
        MEMORY[0x2348E77E8](v42, -1, -1);

        result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v79, v82);
      }
      else
      {

        v29[1](v31, v32);
        result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v19, v82);
      }
      v72 = v83;
      *v83 = v78;
      v72[1] = (uint64_t)v22;
      return result;
    }

  }
  v58 = v7;
  sub_2318D49E0();
  v59 = (char *)v8;
  ((void (*)(char *, uint64_t, uint64_t))v8[2])(v11, v80, v58);
  v60 = sub_2318D4A10();
  v61 = sub_2318D5A54();
  v62 = v61;
  if (os_log_type_enabled(v60, v61))
  {
    v63 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v85[0] = v78;
    *(_DWORD *)v63 = 136315394;
    LODWORD(v77) = v62;
    v64 = sub_2318D63CC();
    v79 = v59;
    v86 = sub_231851EBC(v64, v65, v85);
    v80 = v58;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2080;
    v66 = (void *)sub_2318D2E14();
    v67 = sub_2318D2C40();
    v69 = v68;

    v86 = sub_231851EBC(v67, v69, v85);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v79 + 1))(v11, v80);
    _os_log_impl(&dword_2317C8000, v60, (os_log_type_t)v77, "[%s]_%s: No relevant dose event was found for the changed medications, ignoring", (uint8_t *)v63, 0x16u);
    v70 = v78;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v70, -1, -1);
    MEMORY[0x2348E77E8](v63, -1, -1);
  }
  else
  {
    v8[1](v11, v58);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v17, v82);
  v71 = v83;
  *v83 = 0;
  v71[1] = 0;
  return result;
}

uint64_t sub_2317D977C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (**v22)(_QWORD, _QWORD);
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, void (**)(char *, uint64_t), uint64_t);
  char *v44;
  uint64_t (*v45)(void);
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (**v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  void (*v81)(uint64_t, void (**)(char *, uint64_t), uint64_t);
  unint64_t v82;
  uint64_t v83;
  void (*v84)(void (**)(char *, uint64_t), uint64_t, uint64_t);
  unint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (**v110)(char *, uint64_t);
  id v111;
  uint64_t v112;
  uint64_t v113;
  void (**v114)(_QWORD, _QWORD);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;

  v109 = a1;
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v108 = (char *)&v80 - v2;
  v100 = sub_2318D2DE4();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v96 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D5B74();
  v106 = *(_QWORD *)(v4 - 8);
  v107 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v105 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_2318D59F4();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD6AC();
  v95 = v7;
  v94 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v93 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD930(0);
  v104 = v9;
  v102 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v98 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DDA2C(0, &qword_2541899B0, v11, sub_2317DDACC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9910]);
  v103 = v12;
  v101 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v97 = (char *)&v80 - v13;
  v14 = sub_2318D2E50();
  v15 = *(_QWORD *)(v14 - 8);
  v112 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (void (**)(char *, uint64_t))((char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_2318D59E8();
  v110 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD824();
  v22 = *(void (***)(_QWORD, _QWORD))(v21 - 8);
  v113 = v21;
  v114 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD94C(0, &qword_2541897C0, v25, (void (*)(void))sub_2317DD8B4);
  v118 = v26;
  v116 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v89 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v115 = (char *)&v80 - v29;
  v30 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v31 = sub_2317DCAF8();
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v30, v31);

  sub_2318D2DFC();
  sub_2317D4B08(&v120, v121);
  v33 = (void *)sub_2318D2D84();
  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v87 = v34;
  v35 = swift_allocObject();
  v86 = xmmword_2318D8530;
  *(_OWORD *)(v35 + 16) = xmmword_2318D8530;
  *(_QWORD *)(v35 + 32) = v32;
  v119 = v35;
  sub_2318D57A8();
  v36 = (void *)objc_opt_self();
  v111 = v32;
  v37 = objc_msgSend(v36, sel_sortDescriptorsForMostRecentSamples);
  sub_2317CCC9C(0, &qword_25418B408);
  sub_2318D5790();

  sub_2318D5A00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2317D4B2C((uint64_t)&v120);
  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2317DD3E0();
  sub_2318D4F44();
  v110[1](v20, v18);
  v38 = v109;
  v84 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v15 + 16);
  v84(v17, v109, v14);
  v39 = *(unsigned __int8 *)(v15 + 80);
  v40 = (v39 + 16) & ~v39;
  v41 = (v112 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v82 = v41 + 8;
  v83 = v39 | 7;
  v42 = swift_allocObject();
  v43 = *(void (**)(uint64_t, void (**)(char *, uint64_t), uint64_t))(v15 + 32);
  v44 = v115;
  v110 = v17;
  v112 = v14;
  v81 = v43;
  v43(v42 + v40, v17, v14);
  v85 = v41;
  *(_QWORD *)(v42 + v41) = v117;
  v45 = MEMORY[0x24BDB9AE0];
  sub_2317DC058(0, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  v47 = v46;
  sub_2317DD8B4();
  v48 = sub_2317DDD1C(&qword_254189A90, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v45, MEMORY[0x24BDB9AF8]);
  v49 = v113;
  sub_2318D4F50();
  swift_release();
  ((void (**)(char *, uint64_t))v114)[1](v24, v49);
  if ((sub_2318D2E08() & 1) != 0)
  {
    sub_2318D2DFC();
    sub_2317D4B08(&v120, v121);
    v51 = (void *)sub_2318D2D84();
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = v86;
    v53 = v111;
    *(_QWORD *)(v52 + 32) = v111;
    v119 = v52;
    sub_2318D57A8();
    v54 = v53;
    v113 = v48;
    v114 = (void (**)(_QWORD, _QWORD))v54;
    v55 = v90;
    sub_2318D5A0C();

    swift_bridgeObjectRelease();
    sub_2317D4B2C((uint64_t)&v120);
    v56 = v116;
    v57 = v89;
    v58 = v118;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v89, v44, v118);
    v59 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v60 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v60 + v59, v57, v58);
    sub_2318D4D88();
    sub_2317CC4AC(&qword_254189EA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    sub_2317DD8D0();
    v61 = v93;
    v111 = v47;
    v62 = v92;
    sub_2318D4F8C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v55, v62);
    v63 = v110;
    v64 = v112;
    v84(v110, v38, v112);
    v65 = swift_allocObject();
    v81(v65 + v40, v63, v64);
    *(_QWORD *)(v65 + v85) = v117;
    sub_2317DDA10();
    v66 = v98;
    v67 = v95;
    sub_2318D4F50();
    swift_release();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v67);
    v68 = v105;
    sub_2318D5B5C();
    v69 = (void *)sub_2318D2E14();
    v70 = v96;
    sub_2317D5178(v69, v96);

    v71 = (void *)sub_2318D2E38();
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v70, v100);
    v120 = v71;
    v72 = sub_2318D5B50();
    v73 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0];
    v74 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v108, 1, 1, v72);
    sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
    sub_2317DDACC();
    sub_2317DC754();
    v75 = v97;
    v76 = v104;
    sub_2318D4FC8();
    sub_2317DD39C(v74, (unint64_t *)&qword_25418B280, v73);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v68, v107);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v66, v76);
    sub_2317DDCB4();
    v77 = v103;
    v50 = sub_2318D4F08();

    v78 = v77;
    v44 = v115;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v75, v78);
  }
  else
  {
    sub_2317DD8D0();
    v50 = sub_2318D4F08();

  }
  (*(void (**)(char *, uint64_t))(v116 + 8))(v44, v118);
  return v50;
}

uint64_t sub_2317DA244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v19[0] = a3;
  sub_2317DD2CC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v19 - v11;
  v13 = sub_2318D2718();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD340(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2317DD39C((uint64_t)v12, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v19[1] = MEMORY[0x24BEE4AF8];
    sub_2317DC15C(0, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2318D4E0C();
    sub_2317CC4AC((unint64_t *)&unk_25418A140, (uint64_t (*)(uint64_t))sub_2317DD2CC, MEMORY[0x24BDB9DF8]);
    v17 = sub_2318D4F08();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v17 = sub_2317DA44C((uint64_t)v16, a2);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  *(_QWORD *)v19[0] = v17;
  return result;
}

uint64_t sub_2317DA44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *ObjCClassFromMetadata;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84[4];

  v82 = a2;
  v2 = sub_2318D2E50();
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  v72 = *(_QWORD *)(v70 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v58 - v5;
  v61 = sub_2318D2DE4();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_2318D59E8();
  v64 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DDA2C(0, (unint64_t *)&qword_254189A88, v11, sub_2317DD3E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
  v66 = v12;
  v67 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v58 - v13;
  sub_2317DD3FC();
  v74 = v14;
  v76 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v81 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DD51C();
  v77 = v16;
  v79 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v69 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2318D294C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v23);
  v75 = sub_2318D2718();
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D2700();
  sub_2318D26DC();
  sub_2318D28EC();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  v65 = v25;
  sub_2318D26E8();
  sub_2317CCC9C(0, &qword_254189EB0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v27 = (void *)sub_2318D26D0();
  v28 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithinDateInterval_options_, v27, 0);
  v62 = v28;

  v29 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v29, v28);

  v31 = v82;
  sub_2318D2DFC();
  sub_2317D4B08(v84, (uint64_t)v84[3]);
  v32 = (void *)sub_2318D2D84();
  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2318D8530;
  *(_QWORD *)(v33 + 32) = v30;
  v83 = v33;
  sub_2318D57A8();
  v59 = v30;
  sub_2318D5A00();

  swift_bridgeObjectRelease();
  sub_2317D4B2C((uint64_t)v84);
  v34 = v31;
  v35 = (void *)sub_2318D2E14();
  sub_2317D5178(v35, (uint64_t)v8);

  v36 = (void *)sub_2318D2E38();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
  v84[0] = v36;
  v37 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  sub_2317DD3E0();
  sub_2317DC754();
  v38 = v63;
  sub_2318D4FBC();
  sub_2317DD39C((uint64_t)v6, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v38);
  v39 = v70;
  v64 = *(_QWORD *)(v70 + 16);
  v40 = v68;
  v41 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v68, v34, v71);
  v42 = *(unsigned __int8 *)(v39 + 80);
  v43 = (v42 + 16) & ~v42;
  v63 = v42 | 7;
  v44 = (v72 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  v46 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v46(v45 + v43, v40, v41);
  v47 = v78;
  *(_QWORD *)(v45 + v44) = v78;
  sub_2317DC15C(0, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317DD4B4();
  v48 = v66;
  v49 = v80;
  sub_2318D4F44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v48);
  ((void (*)(char *, uint64_t, uint64_t))v64)(v40, v82, v41);
  v50 = swift_allocObject();
  v46(v50 + v43, v40, v41);
  *(_QWORD *)(v50 + v44) = v47;
  sub_2317DC0D8();
  sub_2317CC4AC(&qword_254189768, (uint64_t (*)(uint64_t))sub_2317DD3FC, MEMORY[0x24BDB96C0]);
  sub_2317CC4AC(&qword_254189B90, (uint64_t (*)(uint64_t))sub_2317DC0D8, MEMORY[0x24BDB9AF8]);
  v51 = v69;
  v52 = v74;
  v53 = v81;
  sub_2318D4F50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v52);
  sub_2317CC4AC(&qword_2541897A8, (uint64_t (*)(uint64_t))sub_2317DD51C, MEMORY[0x24BDB9740]);
  v54 = v77;
  v55 = (void *)sub_2318D4EA8();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v54);
  v84[0] = v55;
  v56 = sub_2318D4F08();
  swift_release();

  (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v75);
  return v56;
}

uint64_t sub_2317DAC6C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  unint64_t v33;
  os_log_t v34;
  os_log_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  os_log_t v49;
  os_log_t v50;
  uint64_t result;
  uint64_t v52;
  os_log_t v53;
  int v54;
  os_log_t v55;
  unint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_t v61;

  v59 = sub_2318D2E50();
  v6 = *(_QWORD *)(v59 - 8);
  v7 = MEMORY[0x24BDAC7A8](v59);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v52 - v10;
  v12 = sub_2318D4A1C();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v52 - v16;
  v18 = *a1;
  v19 = sub_231867C78(*a1);
  if (v19)
  {
    v20 = v19;
    sub_2318D49E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v59);
    swift_bridgeObjectRetain_n();
    v21 = sub_2318D4A10();
    v22 = sub_2318D5A54();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      v54 = v22;
      v55 = v21;
      v56 = a3;
      v23 = swift_slowAlloc();
      v53 = (os_log_t)swift_slowAlloc();
      v61 = v53;
      *(_DWORD *)v23 = 136315906;
      v24 = sub_2318D63CC();
      v60 = sub_231851EBC(v24, v25, (uint64_t *)&v61);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v26 = (void *)sub_2318D2E14();
      v27 = sub_2318D2C40();
      v29 = v28;

      v60 = sub_231851EBC(v27, v29, (uint64_t *)&v61);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);
      *(_WORD *)(v23 + 22) = 2048;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        v30 = sub_2318D6174();
        swift_bridgeObjectRelease();
      }
      else
      {
        v30 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a3 = v56;
      v31 = v54;
      swift_bridgeObjectRelease();
      v60 = v30;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      v60 = v20;
      sub_2317DC15C(0, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      swift_bridgeObjectRetain();
      v32 = sub_2318D5610();
      v60 = sub_231851EBC(v32, v33, (uint64_t *)&v61);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v34 = v55;
      _os_log_impl(&dword_2317C8000, v55, v31, "[%s]_%s: Returning these %ld latest dose events: %s", (uint8_t *)v23, 0x2Au);
      v35 = v53;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v35, -1, -1);
      MEMORY[0x2348E77E8](v23, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);

      swift_bridgeObjectRelease_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v15, v58);
  }
  else
  {
    sub_2318D49E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a2, v59);
    swift_bridgeObjectRetain_n();
    v36 = sub_2318D4A10();
    v37 = sub_2318D5A3C();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v54 = v38;
      v40 = v39;
      v55 = (os_log_t)swift_slowAlloc();
      v61 = v55;
      *(_DWORD *)v40 = 136315650;
      v53 = v36;
      v41 = sub_2318D63CC();
      v60 = sub_231851EBC(v41, v42, (uint64_t *)&v61);
      v56 = a3;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      v43 = (void *)sub_2318D2E14();
      v44 = sub_2318D2C40();
      v46 = v45;

      v60 = sub_231851EBC(v44, v46, (uint64_t *)&v61);
      a3 = v56;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);
      *(_WORD *)(v40 + 22) = 2080;
      v60 = v18;
      sub_2317DC15C(0, &qword_255F25470, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      swift_bridgeObjectRetain();
      v47 = sub_2318D5610();
      v60 = sub_231851EBC(v47, v48, (uint64_t *)&v61);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v49 = v53;
      _os_log_impl(&dword_2317C8000, v53, (os_log_type_t)v54, "[%s]_%s: Unexpected type returned from sample query: %s", (uint8_t *)v40, 0x20u);
      v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v50, -1, -1);
      MEMORY[0x2348E77E8](v40, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);

      swift_bridgeObjectRelease_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v17, v58);
    v20 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v20;
  return result;
}

uint64_t sub_2317DB2BC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  _QWORD v41[2];
  os_log_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a3;
  v51 = a4;
  sub_2317DD2CC();
  v7 = v6;
  v47 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D2E50();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D4A1C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_2318D49E0();
  v48 = v11;
  v49 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v19 = v18;
  v20 = v18;
  v50 = v17;
  v21 = sub_2318D4A10();
  v22 = sub_2318D5A3C();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v45 = v15;
    v25 = v24;
    v44 = swift_slowAlloc();
    v53 = v44;
    *(_DWORD *)v25 = 136315650;
    v43 = v23;
    v26 = sub_2318D63CC();
    v52 = sub_231851EBC(v26, v27, &v53);
    v42 = v21;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v41[1] = v25 + 14;
    v28 = (void *)sub_2318D2E14();
    v29 = v7;
    v30 = sub_2318D2C40();
    v46 = v14;
    v32 = v31;

    v33 = v30;
    v7 = v29;
    v52 = sub_231851EBC(v33, v32, &v53);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);
    *(_WORD *)(v25 + 22) = 2080;
    v52 = (uint64_t)v18;
    v34 = v18;
    sub_2317D4B4C(0, (unint64_t *)&qword_25418B4A0);
    v35 = sub_2318D55EC();
    v52 = sub_231851EBC(v35, v36, &v53);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    v37 = v42;
    _os_log_impl(&dword_2317C8000, v42, (os_log_type_t)v43, "[%s]_%s: Error when fetching dose event samples: %s", (uint8_t *)v25, 0x20u);
    v38 = v44;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v38, -1, -1);
    MEMORY[0x2348E77E8](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v14);
  }
  v53 = MEMORY[0x24BEE4AF8];
  sub_2317DC15C(0, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2318D4E0C();
  sub_2317CC4AC((unint64_t *)&unk_25418A140, (uint64_t (*)(uint64_t))sub_2317DD2CC, MEMORY[0x24BDB9DF8]);
  v39 = sub_2318D4F08();
  result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v9, v7);
  *v51 = v39;
  return result;
}

uint64_t sub_2317DB6C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_2318D294C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v6 = *a1;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2318D6174();
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v14 = sub_2318D2718();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v7)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x2348E6E94](0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(v6 + 32);
LABEL_6:
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v10, sel_startDate);
    sub_2318D2928();

    v12 = objc_msgSend(v10, sel_endDate);
    sub_2318D2928();

    sub_2318D26E8();
    v13 = sub_2318D2718();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_2317DB88C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD v43[2];
  int v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  const char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v49 = a3;
  v50 = a4;
  sub_2317DC058(0, &qword_255F25478, MEMORY[0x24BDB9E10]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v43 - v11;
  v13 = sub_2318D2E50();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2318D4A1C();
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  sub_2318D49E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  v21 = v20;
  v22 = v20;
  v51 = v19;
  v23 = sub_2318D4A10();
  v24 = sub_2318D5A3C();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v45 = v23;
    v27 = v26;
    v46 = swift_slowAlloc();
    v55 = v46;
    *(_DWORD *)v27 = 136315650;
    v44 = v25;
    v28 = sub_2318D63CC();
    v49 = a5;
    v54 = sub_231851EBC(v28, v29, &v55);
    v47 = v10;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v43[1] = v27 + 14;
    v30 = (void *)sub_2318D2E14();
    v31 = sub_2318D2C40();
    v48 = v9;
    v32 = v31;
    v33 = v12;
    v35 = v34;

    v54 = sub_231851EBC(v32, v35, &v55);
    v10 = v47;
    sub_2318D5F70();
    v12 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    *(_WORD *)(v27 + 22) = 2080;
    v54 = (uint64_t)v20;
    v36 = v20;
    sub_2317D4B4C(0, (unint64_t *)&qword_25418B4A0);
    v37 = sub_2318D55EC();
    v54 = sub_231851EBC(v37, v38, &v55);
    v9 = v48;
    sub_2318D5F70();
    a5 = v49;
    swift_bridgeObjectRelease();

    v39 = v45;
    _os_log_impl(&dword_2317C8000, v45, (os_log_type_t)v44, v50, (uint8_t *)v27, 0x20u);
    v40 = v46;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v40, -1, -1);
    MEMORY[0x2348E77E8](v27, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);

  }
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2318D4E18();
  sub_2317DDD1C(&qword_255F25480, &qword_255F25478, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v41 = sub_2318D4F08();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a5 = v41;
  return result;
}

uint64_t sub_2317DBC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain;
  v2 = sub_2318D2DE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_changeProvider));
  return swift_deallocClassInstance();
}

uint64_t sub_2317DBCF8()
{
  return type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline();
}

uint64_t type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline()
{
  uint64_t result;

  result = qword_254188D20;
  if (!qword_254188D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317DBD3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D2DE4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2317DBDC4()
{
  return swift_retain();
}

uint64_t sub_2317DBDD0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain;
  v4 = sub_2318D2DE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2317DBE18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254187910)
  {
    sub_2317DCED0(255, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317D4B4C(255, (unint64_t *)&qword_2541881E0);
    sub_2317DBEB0();
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254187910);
  }
}

unint64_t sub_2317DBEB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189B60;
  if (!qword_254189B60)
  {
    sub_2317DCED0(255, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_254189B60);
  }
  return result;
}

uint64_t sub_2317DBF0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D2E50() - 8) + 80);
  return sub_2317D5BA0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t *sub_2317DBF6C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_2317DBFA8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254189680)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_2317DC058(255, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317DC0D8();
    sub_2317DDD1C(&qword_254189A90, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_2318D4CF8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254189680);
  }
}

void sub_2317DC058(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2317D4194(255, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2317DC0D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189B98)
  {
    sub_2317DC15C(255, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189B98);
  }
}

void sub_2317DC15C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2317CCC9C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2317DC1BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189670)
  {
    sub_2317DC0D8();
    sub_2317DBFA8();
    sub_2317CC4AC(&qword_254189B90, (uint64_t (*)(uint64_t))sub_2317DC0D8, MEMORY[0x24BDB9AF8]);
    sub_2317CC4AC(&qword_254189678, (uint64_t (*)(uint64_t))sub_2317DBFA8, MEMORY[0x24BDB96C0]);
    v0 = sub_2318D4CE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189670);
  }
}

void sub_2317DC284()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541896C0)
  {
    sub_2317DC0D8();
    sub_2317DCED0(255, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317CC4AC(&qword_254189B90, (uint64_t (*)(uint64_t))sub_2317DC0D8, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541896C0);
  }
}

void sub_2317DC328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189650)
  {
    sub_2317DCED0(255, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317DC284();
    sub_2317DBEB0();
    sub_2317CC4AC(&qword_2541896B8, (uint64_t (*)(uint64_t))sub_2317DC284, MEMORY[0x24BDB96C0]);
    v0 = sub_2318D4CE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189650);
  }
}

uint64_t sub_2317DC3E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2318D2E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2317DC444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D2E50() - 8) + 80);
  return sub_2317DA244(a1, v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_2317DC494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2318D2E50();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_2317DC518@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_2318D2E50() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_2317D5F48(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_2317DC590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2317CDA94(255, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2317DC600()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189560)
  {
    sub_2317DCED0(255, &qword_254189B68, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317DBEB0();
    v0 = sub_2318D4CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189560);
  }
}

unint64_t sub_2317DC67C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418A130;
  if (!qword_25418A130)
  {
    sub_2317DC590(255, &qword_254189C38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25418A130);
  }
  return result;
}

void sub_2317DC6D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418A190)
  {
    sub_2318D4980();
    v0 = sub_2318D4DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418A190);
  }
}

uint64_t sub_2317DC738()
{
  return sub_2317CC4AC(&qword_25418A228, (uint64_t (*)(uint64_t))sub_2317DC6D4, MEMORY[0x24BDB9D10]);
}

unint64_t sub_2317DC754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418B410;
  if (!qword_25418B410)
  {
    v1 = sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_25418B410);
  }
  return result;
}

void sub_2317DC7AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418A1A8)
  {
    sub_2317DDA2C(255, (unint64_t *)&qword_25418A220, (uint64_t (*)(uint64_t))sub_2317DC6D4, sub_2317DC738, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    sub_2317CDA94(255, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317DC85C();
    v0 = sub_2318D4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418A1A8);
  }
}

unint64_t sub_2317DC85C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418A218;
  if (!qword_25418A218)
  {
    sub_2317DDA2C(255, (unint64_t *)&qword_25418A220, (uint64_t (*)(uint64_t))sub_2317DC6D4, sub_2317DC738, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_25418A218);
  }
  return result;
}

void sub_2317DC8C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418A1D0)
  {
    sub_2317DC7AC();
    sub_2317CC4AC(&qword_25418A1A0, (uint64_t (*)(uint64_t))sub_2317DC7AC, MEMORY[0x24BDB94C8]);
    v0 = sub_2318D4CEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418A1D0);
  }
}

uint64_t sub_2317DC93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2318D2E50();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2317DC9BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2318D2E50() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2317D8518(a1, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_2317DCA20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_254189DA0;
  if (!qword_254189DA0)
  {
    sub_2317CDA94(255, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_2317DCA98();
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_254189DA0);
  }
  return result;
}

unint64_t sub_2317DCA98()
{
  unint64_t result;

  result = qword_254189068;
  if (!qword_254189068)
  {
    result = MEMORY[0x2348E7734](&unk_2318D8604, &type metadata for MedicationDoseEventDetails);
    atomic_store(result, (unint64_t *)&qword_254189068);
  }
  return result;
}

uint64_t sub_2317DCADC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2317D91A8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(char **)(v2 + 32), a2);
}

id sub_2317DCAF8()
{
  void *ObjCClassFromMetadata;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  sub_2317CCC9C(0, &qword_254189EB0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 4);
  v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 5);
  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2318D8520;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  sub_2318D57A8();
  sub_2317CCC9C(0, &qword_25418B3F8);
  v4 = v1;
  v5 = v2;
  v6 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v6);

  return v7;
}

uint64_t sub_2317DCC44(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v21;

  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v3 = sub_2318D6174();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = (id)MEMORY[0x2348E6E94](i - 4, a1);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_18;
        }
        else
        {
          v6 = *(id *)(a1 + 8 * i);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v21 = v6;
        v8 = objc_msgSend(v6, sel_medicationIdentifier);
        v9 = sub_2318D55BC();
        v11 = v10;

        v12 = objc_msgSend(a2, sel_semanticIdentifier);
        v13 = objc_msgSend(v12, sel_stringValue);

        v14 = sub_2318D55BC();
        v16 = v15;

        if (v9 == v14 && v11 == v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          v3 = (uint64_t)v21;
          swift_bridgeObjectRelease();
          return v3;
        }
        v18 = sub_2318D62B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_17;

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void sub_2317DCE28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189A68)
  {
    sub_2317DCED0(255, &qword_254189C78, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    sub_2317DCF50();
    sub_2317DC754();
    v0 = sub_2318D4D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189A68);
  }
}

void sub_2317DCED0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2317CDA94(255, &qword_254189D98, (uint64_t)&type metadata for MedicationDoseEventDetails, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2317DCF50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189C70;
  if (!qword_254189C70)
  {
    sub_2317DCED0(255, &qword_254189C78, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_254189C70);
  }
  return result;
}

uint64_t sub_2317DCFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2318D2E50();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2317DD028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2318D2E50() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2317D6B80(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2317DD08C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317DD0B0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_2317DD0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2318D2E50();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317DD194(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(sub_2318D2E50() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2317D73E0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), v5 + v12, *(_QWORD *)(v5 + v13), *(void (**)(uint64_t, _QWORD))(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2317DD248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2317DD258()
{
  return swift_release();
}

void sub_2317DD260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25468)
  {
    sub_2317D4B4C(255, (unint64_t *)&qword_25418B4A0);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25468);
  }
}

uint64_t sub_2317DD2C4(_QWORD **a1)
{
  uint64_t v1;

  return sub_2317D8468(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_2317DD2CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189C48)
  {
    sub_2317DC15C(255, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189C48);
  }
}

uint64_t sub_2317DD340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317DD39C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2317D4194(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2317DD3E0()
{
  return sub_2317CC4AC(&qword_254189EA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], MEMORY[0x24BE459D8]);
}

void sub_2317DD3FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189770)
  {
    sub_2317DDA2C(255, (unint64_t *)&qword_254189A88, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], sub_2317DD3E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    sub_2317DC15C(255, &qword_254189E40, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317DD4B4();
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189770);
  }
}

unint64_t sub_2317DD4B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189A80;
  if (!qword_254189A80)
  {
    sub_2317DDA2C(255, (unint64_t *)&qword_254189A88, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], sub_2317DD3E0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_254189A80);
  }
  return result;
}

void sub_2317DD51C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541897B0)
  {
    sub_2317DD3FC();
    sub_2317DC0D8();
    sub_2317CC4AC(&qword_254189768, (uint64_t (*)(uint64_t))sub_2317DD3FC, MEMORY[0x24BDB96C0]);
    sub_2317CC4AC(&qword_254189B90, (uint64_t (*)(uint64_t))sub_2317DC0D8, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541897B0);
  }
}

uint64_t sub_2317DD5E8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D2E50() - 8) + 80);
  return sub_2317DAC6C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_2317DD64C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2318D2E50() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2317DB2BC(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_2317DD6AC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254189990)
  {
    sub_2317DD774();
    sub_2318D59F4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8];
    sub_2317CC4AC(&qword_254189638, (uint64_t (*)(uint64_t))sub_2317DD774, MEMORY[0x24BDB95F8]);
    sub_2317CC4AC(&qword_254189EA8, v0, MEMORY[0x24BE459F0]);
    v1 = sub_2318D4D34();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254189990);
  }
}

void sub_2317DD774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189640)
  {
    sub_2317DD94C(255, &qword_2541897C0, (void (*)(uint64_t))sub_2317DD824, (void (*)(void))sub_2317DD8B4);
    sub_2317D4B4C(255, (unint64_t *)&qword_25418B4A0);
    sub_2317DD8D0();
    v0 = sub_2318D4CD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189640);
  }
}

void sub_2317DD824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189780)
  {
    sub_2318D59E8();
    sub_2317D4194(255, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2317DD3E0();
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189780);
  }
}

uint64_t sub_2317DD8B4()
{
  return sub_2317CC4AC(&qword_254189778, (uint64_t (*)(uint64_t))sub_2317DD824, MEMORY[0x24BDB96C0]);
}

unint64_t sub_2317DD8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541897B8;
  if (!qword_2541897B8)
  {
    sub_2317DD94C(255, &qword_2541897C0, (void (*)(uint64_t))sub_2317DD824, (void (*)(void))sub_2317DD8B4);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9740], v1);
    atomic_store(result, (unint64_t *)&qword_2541897B8);
  }
  return result;
}

void sub_2317DD930(uint64_t a1)
{
  sub_2317DD94C(a1, &qword_254189830, (void (*)(uint64_t))sub_2317DD6AC, (void (*)(void))sub_2317DDA10);
}

void sub_2317DD94C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v6)(void);
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    v6 = MEMORY[0x24BDB9AE0];
    sub_2317DC058(255, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    a4();
    sub_2317DDD1C(&qword_254189A90, &qword_254189A98, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v6, MEMORY[0x24BDB9AF8]);
    v7 = sub_2318D4D04();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2317DDA10()
{
  return sub_2317CC4AC(&qword_254189988, (uint64_t (*)(uint64_t))sub_2317DD6AC, MEMORY[0x24BDB98F0]);
}

void sub_2317DDA2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    v11[2] = a4();
    v11[3] = sub_2317DC754();
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2317DDACC()
{
  return sub_2317CC4AC(&qword_254189828, (uint64_t (*)(uint64_t))sub_2317DD930, MEMORY[0x24BDB9740]);
}

uint64_t sub_2317DDAEC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2317DDC48(a1, "[%s]_%s: Error in sample query: %s", a2);
}

uint64_t sub_2317DDAF8()
{
  uint64_t v0;
  uint64_t v1;

  sub_2317DD94C(0, &qword_2541897C0, (void (*)(uint64_t))sub_2317DD824, (void (*)(void))sub_2317DD8B4);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2317DDB70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_2317DD94C(0, &qword_2541897C0, (void (*)(uint64_t))sub_2317DD824, (void (*)(void))sub_2317DD8B4);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_2317DDBD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2318D2E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2317DDC3C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2317DDC48(a1, "[%s]_%s: Error in observer query: %s", a2);
}

uint64_t sub_2317DDC48@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_2318D2E50() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2317DB88C(a1, v3 + v8, *(uint64_t **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3);
}

unint64_t sub_2317DDCB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541899A8;
  if (!qword_2541899A8)
  {
    sub_2317DDA2C(255, &qword_2541899B0, (uint64_t (*)(uint64_t))sub_2317DD930, sub_2317DDACC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9910]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9920], v1);
    atomic_store(result, (unint64_t *)&qword_2541899A8);
  }
  return result;
}

uint64_t sub_2317DDD1C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2317DC058(255, a2, a3);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MedicationDoseEventDetails(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for MedicationDoseEventDetails(id *a1)
{

}

uint64_t assignWithCopy for MedicationDoseEventDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for MedicationDoseEventDetails(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDoseEventDetails(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationDoseEventDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationDoseEventDetails()
{
  return &type metadata for MedicationDoseEventDetails;
}

id sub_2317DDF08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineItem()
{
  return objc_opt_self();
}

uint64_t sub_2317DDFBC(uint64_t a1, uint64_t a2)
{
  return sub_2317DDFD4(a1, a2, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_reuseIdentifier);
}

uint64_t sub_2317DDFC8(uint64_t a1, uint64_t a2)
{
  return sub_2317DDFD4(a1, a2, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_uniqueIdentifier);
}

uint64_t sub_2317DDFD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(*v3 + *a3);
  swift_bridgeObjectRetain();
  return v4;
}

id sub_2317DE00C(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v2 = (objc_class *)type metadata accessor for InteractiveTimelineItem();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = (uint64_t *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_reuseIdentifier];
  type metadata accessor for InteractiveTimelineItemCell();
  sub_2317DE114();
  v5 = v3;
  *v4 = sub_2318D3438();
  v4[1] = v6;
  v7 = &v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_uniqueIdentifier];
  *(_QWORD *)v7 = 0xD000000000000017;
  *((_QWORD *)v7 + 1) = 0x80000002318D8610;
  v8 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_timelineViewControllers;
  *(_QWORD *)&v5[v8] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_dataProvider] = a1;
  swift_retain();

  v10.receiver = v5;
  v10.super_class = v2;
  return objc_msgSendSuper2(&v10, sel_init);
}

unint64_t sub_2317DE114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418AC40;
  if (!qword_25418AC40)
  {
    v1 = type metadata accessor for InteractiveTimelineItemCell();
    result = MEMORY[0x2348E7734](&unk_2318DC83C, v1);
    atomic_store(result, (unint64_t *)&qword_25418AC40);
  }
  return result;
}

uint64_t type metadata accessor for MedicationDayScheduleDataSource()
{
  uint64_t result;

  result = qword_25418ACE8;
  if (!qword_25418ACE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317DE198()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2317DE210(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67[2];

  v7 = v6;
  v63 = a3;
  v64 = a5;
  v58 = a1;
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v44 - v12;
  v59 = sub_2318D5B74();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E0190();
  v50 = v14;
  v55 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v47 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E043C(0);
  v57 = v16;
  v60 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v49 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317DDA2C(0, &qword_255F25508, v18, sub_2317E047C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
  v20 = *(_QWORD *)(v19 - 8);
  v61 = v19;
  v62 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v51 = (char *)&v44 - v21;
  v22 = sub_2318D297C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + qword_25418ACD0) = 0;
  swift_unknownObjectWeakInit();
  v26 = (_QWORD *)(v7 + qword_25418ACC8);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)(v7 + qword_25418ACD8) = a4;
  swift_unknownObjectWeakAssign();
  v54 = a6;
  *(_QWORD *)(v7 + qword_255F254A8) = a6;
  sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2318D3774();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2318D8680;
  v53 = a4;
  swift_retain();
  sub_2318D2970();
  sub_2318D2958();
  v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v25, v22);
  sub_2318D3768();
  v67[0] = 0;
  v67[1] = (id)0xE000000000000000;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v67, "MutableArray<");
  HIWORD(v67[1]) = -4864;
  sub_2318D2970();
  sub_2318D2958();
  v27(v25, v22);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v45 = sub_2318D37B0();
  v46 = a2;
  v66 = v63;
  v67[0] = a2;
  v65 = v64;
  sub_2317E0290();
  sub_2317E0374();
  sub_2317E03D8();
  v28 = MEMORY[0x24BDB9AF8];
  sub_2317CC4AC(&qword_255F254F0, (uint64_t (*)(uint64_t))sub_2317E0290, MEMORY[0x24BDB9AF8]);
  sub_2317CC4AC(&qword_25418B398, (uint64_t (*)(uint64_t))sub_2317E0374, v28);
  sub_2317CC4AC(&qword_25418AEE0, (uint64_t (*)(uint64_t))sub_2317E03D8, v28);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = v47;
  sub_2318D4C8C();
  v30 = v48;
  sub_2318D5B5C();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v67[0] = (id)sub_2318D5B80();
  v31 = sub_2318D5B50();
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32 = (uint64_t)v52;
  v44(v52, 1, 1, v31);
  sub_2317E0460();
  sub_2317DC754();
  v34 = v49;
  v33 = v50;
  sub_2318D4FC8();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0];
  sub_2317DD39C(v32, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v59);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v33);
  v67[0] = (id)sub_2318D5B80();
  v44((char *)v32, 1, 1, v31);
  sub_2317E047C();
  v36 = v51;
  v37 = v57;
  sub_2318D4FBC();
  sub_2317DD39C(v32, (unint64_t *)&qword_25418B280, v35);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v37);
  v38 = swift_allocObject();
  v39 = v45;
  swift_weakInit();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = sub_2317E04BC;
  *(_QWORD *)(v40 + 24) = v38;
  sub_2317E053C();
  v41 = v61;
  v42 = sub_2318D4FF8();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v41);
  *(_QWORD *)(v39 + qword_25418ACD0) = v42;
  swift_release();
  return v39;
}

uint64_t sub_2317DE920(uint64_t a1, char a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2317DE9B0(a1, a2 & 1);
    sub_2318D37C8();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2317DE9B0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _BYTE v37[16];

  v5 = sub_2318D2A90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) == 0)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      swift_retain();
      sub_2317E0874(a1, v2);
      swift_release();
      return;
    }
    sub_2317E0314(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_2318D8680;
    if (qword_25418B328 != -1)
      swift_once();
    v31 = sub_2318D2808();
    v33 = v32;
    v34 = type metadata accessor for MedicationsDayScheduleEmptyItem();
    v25 = (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayScheduleEmptyItem;
    v26 = swift_allocObject();
    sub_2318D2970();
    v35 = (uint64_t *)(v26 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsDayScheduleEmptyItem_reuseIdentifier);
    type metadata accessor for MedicationsDayScheduleEmptyCell();
    sub_2317CC4AC(&qword_25418AAA8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayScheduleEmptyCell, (uint64_t)&unk_2318DD740);
    *v35 = sub_2318D3438();
    v35[1] = v36;
    *(_QWORD *)(v26 + 16) = v31;
    *(_QWORD *)(v26 + 24) = v33;
    *(_QWORD *)(v10 + 56) = v34;
    v29 = (unint64_t *)&unk_25418AAB0;
    v30 = &unk_2318DD6D0;
    goto LABEL_15;
  }
  sub_2318D2A6C();
  v9 = sub_2318D29E8();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  sub_2317E0314(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2318D8680;
  if ((v9 & 1) == 0)
  {
    if (qword_25418B328 != -1)
      swift_once();
    v21 = sub_2318D2808();
    v23 = v22;
    v24 = type metadata accessor for MedicationsDayScheduleCompleteItem(0);
    v25 = type metadata accessor for MedicationsDayScheduleCompleteItem;
    v26 = swift_allocObject();
    sub_2318D2970();
    v27 = (uint64_t *)(v26
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteItem_reuseIdentifier);
    type metadata accessor for MedicationsDayScheduleCompleteCell();
    sub_2317CC4AC(&qword_25418AAC0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayScheduleCompleteCell, (uint64_t)&unk_2318D988C);
    *v27 = sub_2318D3438();
    v27[1] = v28;
    *(_QWORD *)(v26 + 16) = v21;
    *(_QWORD *)(v26 + 24) = v23;
    *(_QWORD *)(v10 + 56) = v24;
    v29 = (unint64_t *)&unk_255F25550;
    v30 = &unk_2318D981C;
LABEL_15:
    *(_QWORD *)(v10 + 64) = sub_2317CC4AC(v29, v25, (uint64_t)v30);
    *(_QWORD *)(v10 + 32) = v26;
    return;
  }
  if (qword_25418B328 != -1)
    swift_once();
  v11 = sub_2318D2808();
  v13 = v12;
  sub_2317CCC9C(0, qword_254187AA0);
  v14 = (void *)sub_2318D5E50();
  v15 = (void *)sub_2318D558C();
  v16 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v15, v14);

  if (v16)
  {
    v17 = type metadata accessor for MedicationsCurrentDayScheduleCompleteItem(0);
    v18 = (_QWORD *)swift_allocObject();
    sub_2318D2970();
    v19 = (_QWORD *)((char *)v18
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_reuseIdentifier);
    type metadata accessor for MedicationsCurrentDayScheduleCompleteCell();
    sub_2317CC4AC(&qword_25418AAC8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsCurrentDayScheduleCompleteCell, (uint64_t)&unk_2318D9984);
    *v19 = sub_2318D3438();
    v19[1] = v20;
    v18[2] = v11;
    v18[3] = v13;
    v18[4] = v16;
    *(_QWORD *)(v10 + 56) = v17;
    *(_QWORD *)(v10 + 64) = sub_2317CC4AC(&qword_255F25558, type metadata accessor for MedicationsCurrentDayScheduleCompleteItem, (uint64_t)&unk_2318D9914);
    *(_QWORD *)(v10 + 32) = v18;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2317DEEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  _QWORD v26[2];

  v7 = sub_2318D297C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2318D4BD8();
  MEMORY[0x24BDAC7A8](v11);
  if (sub_2318D55BC() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v14 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_13:
    if (qword_25418B328 != -1)
      swift_once();
    sub_2318D2808();
    sub_2318D4B90();
    v21 = sub_2318D3378();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42248];
    swift_allocObject();
    v23 = sub_2318D336C();
    a3[3] = v21;
    result = sub_2317CC4AC((unint64_t *)&qword_25418AA58, v22, MEMORY[0x24BE42230]);
    a3[4] = result;
    *a3 = v23;
    return result;
  }
  if (sub_2318D55BC() == a1 && v15 == a2)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_2318D62B8();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v19 = sub_2318D34D4();
      v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      a3[3] = v19;
      a3[4] = sub_2317CC4AC(&qword_255F25540, v20, MEMORY[0x24BE428F8]);
      sub_2317DBF6C(a3);
      return sub_2318D34C8();
    }
  }
  if (*(_QWORD *)(v3 + qword_25418ACC8 + 8))
  {
    v26[0] = 0x74497265746F6F46;
    v26[1] = 0xEB000000005F6D65;
    swift_bridgeObjectRetain();
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    v24 = sub_2318D3C60();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8];
    a3[3] = v24;
    a3[4] = sub_2317CC4AC(&qword_255F25548, v25, MEMORY[0x24BE44688]);
    sub_2317DBF6C(a3);
    return sub_2318D3C54();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_2317DF250(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;

  v5 = sub_2318D38AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v23 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  sub_2318D3864();
  if (!a1)
  {
    v15 = *(_QWORD *)(v2 + qword_25418ACC8 + 8);
    sub_2318D3858();
    if (v15)
    {
      sub_2318D384C();
      v16 = *(void (**)(char *, uint64_t))(v6 + 8);
      v16(v12, v5);
      v12 = v9;
    }
    else
    {
      v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    }
    v16(v14, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v12, v5);
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_2318D3870();
  v18 = (void *)sub_2318D38A0();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(a2, sel_traitCollection);
  v21 = sub_2318D5BB0();

  objc_msgSend(v19, sel_interItemSpacingForWidthDesignation_, v21);
  objc_msgSend(v18, sel_setInterGroupSpacing_);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  return v18;
}

uint64_t sub_2317DF410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t *v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[4];
  __int128 v103;
  uint64_t v104;
  uint64_t v105[4];

  v2 = type metadata accessor for MedicationDayScheduleItem();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v85 - v6;
  v8 = sub_2318D4A1C();
  v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v98 = (void (*)(char *, uint64_t))v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2318D4080();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v87 = (char *)&v85 - v14;
  v15 = sub_2318D2A90();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v12);
  MEMORY[0x24BDAC7A8](v19);
  v92 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v85 - v22;
  v24 = sub_2318D294C();
  v99 = *(_QWORD *)(v24 - 8);
  v100 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v86 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v85 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v94 = (char *)&v85 - v30;
  MEMORY[0x24BDAC7A8](v31);
  v93 = (char *)&v85 - v32;
  MEMORY[0x24BDAC7A8](v33);
  v95 = (char *)&v85 - v34;
  v96 = v2;
  v35 = *(int *)(v2 + 28);
  v101 = a1;
  v36 = sub_231867C84(*(_QWORD *)(a1 + v35));
  if (!v36)
  {
LABEL_6:
    sub_2318D49E0();
    sub_2317E0638(v101, (uint64_t)v7);
    v40 = sub_2318D4A10();
    v41 = sub_2318D5A3C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v105[0] = v43;
      *(_DWORD *)v42 = 136315138;
      sub_2317E0638((uint64_t)v7, (uint64_t)v4);
      v44 = sub_2318D55EC();
      *(_QWORD *)&v103 = sub_231851EBC(v44, v45, v105);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      sub_2317E067C((uint64_t)v7);
      _os_log_impl(&dword_2317C8000, v40, v41, "scheduleDoses do not exist on MedicationDayScheduleItem: %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v43, -1, -1);
      MEMORY[0x2348E77E8](v42, -1, -1);
    }
    else
    {
      sub_2317E067C((uint64_t)v7);
    }

    return (*((uint64_t (**)(char *, _QWORD))v97 + 1))(v10, v98);
  }
  v37 = v36;
  if (!*(_QWORD *)(v36 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_2317E06B8(v36 + 32, (uint64_t)v105);
  sub_2317E06FC((uint64_t)v105, (uint64_t)&v103);
  if (v104)
  {
    sub_2317D4AF0(&v103, (uint64_t)v102);
    sub_2317D4B08(v102, v102[3]);
    sub_2318D4140();
    v38 = v99;
    v39 = v100;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v23, 0, 1, v100);
    sub_2317D4B2C((uint64_t)v102);
  }
  else
  {
    v38 = v99;
    v39 = v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v23, 1, 1, v100);
  }
  sub_2317E0760((uint64_t)v105);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v47((uint64_t)v23, 1, v39) == 1)
  {
    swift_bridgeObjectRelease();
    return sub_2317DD39C((uint64_t)v23, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    v97 = v47;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
    v49 = v38;
    v50 = v95;
    v85 = v48;
    v48(v95, (uint64_t)v23, v39);
    sub_2318D2A6C();
    sub_2318D2934();
    v51 = v94;
    sub_2318D29D0();
    v52 = *(void (**)(char *, uint64_t))(v49 + 8);
    v53 = v50;
    v52(v28, v39);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    LOBYTE(v50) = sub_2318D2904();
    v98 = v52;
    v52(v51, v39);
    v54 = v93;
    if ((v50 & 1) != 0)
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 16))(v93, v53, v39);
    else
      v55 = sub_2318D2934();
    v56 = v96;
    v57 = v101;
    v58 = (uint64_t)v92;
    v105[0] = 0;
    MEMORY[0x24BDAC7A8](v55);
    v83 = (uint64_t)v54;
    v84 = v105;
    v59 = sub_231824668((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_2317E07BC, (uint64_t)(&v85 - 4), v37);
    swift_bridgeObjectRelease();
    if (v59 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    sub_2317E07D4(v57 + *(int *)(v56 + 24), v58);
    v60 = v100;
    if (v97(v58, 1, v100) == 1)
    {
      sub_2317DD39C(v58, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      v61 = v86;
      v85(v86, v58, v60);
      v62 = (void *)objc_opt_self();
      v63 = (void *)sub_2318D558C();
      swift_bridgeObjectRelease();
      v64 = (void *)sub_2318D28F8();
      v65 = objc_msgSend(v62, sel_hm_localizableTimeStringKeyWithPrefix_date_, v63, v64);

      sub_2318D55BC();
      v98(v61, v60);
    }
    v66 = sub_2318D29AC();
    v67 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v87, 1, 1, v66);
    v68 = v88;
    sub_2318D4074();
    sub_2317E0314(0, (unint64_t *)&qword_25418B480, (unint64_t *)&qword_25418B4A8, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_2318D8680;
    v70 = (uint64_t *)(v57 + *(int *)(v56 + 20));
    v72 = *v70;
    v71 = v70[1];
    *(_QWORD *)(v69 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v69 + 64) = sub_2317E0830();
    *(_QWORD *)(v69 + 32) = v72;
    *(_QWORD *)(v69 + 40) = v71;
    swift_bridgeObjectRetain();
    v83 = v69;
    sub_2318D444C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v68, v90);
    sub_2317DD39C(v67, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
    v73 = v95;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v94, v95, v60);
    sub_2318D42D8();
    swift_allocObject();
    sub_2318D42CC();
    v74 = v91;
    v75 = *(void **)(v91 + qword_25418ACD8);
    v76 = objc_allocWithZone((Class)sub_2318D3FCC());
    swift_retain();
    v77 = v75;
    v78 = (void *)sub_2318D3FC0();
    v79 = MEMORY[0x2348E78A8](v74 + qword_25418ACE0);
    if (v79)
    {
      v80 = (void *)v79;
      sub_2318D5B14();

    }
    sub_2318D4890();
    swift_release();

    v81 = v100;
    v82 = (uint64_t (*)(char *, uint64_t))v98;
    v98(v73, v100);
    return v82(v54, v81);
  }
}

uint64_t sub_2317DFE30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  sub_2317D4B08(a1, a1[3]);
  result = sub_2318D414C();
  if (__OFADD__(*a2, 1))
  {
    __break(1u);
  }
  else
  {
    ++*a2;
    *a3 = result;
  }
  return result;
}

void sub_2317DFEAC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2317DFED8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2317DFF38()
{
  uint64_t v0;

  v0 = sub_2318D37D4();
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2317DFFB8()
{
  return type metadata accessor for MedicationDayScheduleDataSource();
}

void *sub_2317DFFC0(uint64_t a1, void *a2)
{
  return sub_2317DF250(a1, a2);
}

uint64_t sub_2317DFFE0()
{
  type metadata accessor for MedicationDayScheduleCell();
  sub_2317CC4AC(&qword_25418AC10, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDayScheduleCell, (uint64_t)&unk_2318DCE64);
  sub_2318D5AC0();
  type metadata accessor for MedicationsDayScheduleEmptyCell();
  sub_2317CC4AC(&qword_25418AAA8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayScheduleEmptyCell, (uint64_t)&unk_2318DD740);
  sub_2318D5AC0();
  type metadata accessor for MedicationsDayScheduleCompleteCell();
  sub_2317CC4AC(&qword_25418AAC0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayScheduleCompleteCell, (uint64_t)&unk_2318D988C);
  sub_2318D5AC0();
  type metadata accessor for MedicationsCurrentDayScheduleCompleteCell();
  sub_2317CC4AC(&qword_25418AAC8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsCurrentDayScheduleCompleteCell, (uint64_t)&unk_2318D9984);
  sub_2318D5AC0();
  sub_2318D3C3C();
  return sub_2318D5ACC();
}

uint64_t sub_2317E00F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2317DEEF8(a1, a2, a3);
}

uint64_t sub_2317E0114()
{
  MEMORY[0x2348E7734](&unk_2318D87C0);
  return sub_2318D3EB8();
}

uint64_t sub_2317E0164()
{
  return sub_2317CC4AC(&qword_255F254C8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDayScheduleDataSource, (uint64_t)&unk_2318D8730);
}

void sub_2317E0190()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F254D0)
  {
    sub_2317E0290();
    sub_2317E0374();
    sub_2317E03D8();
    v0 = MEMORY[0x24BDB9AF8];
    sub_2317CC4AC(&qword_255F254F0, (uint64_t (*)(uint64_t))sub_2317E0290, MEMORY[0x24BDB9AF8]);
    sub_2317CC4AC(&qword_25418B398, (uint64_t (*)(uint64_t))sub_2317E0374, v0);
    sub_2317CC4AC(&qword_25418AEE0, (uint64_t (*)(uint64_t))sub_2317E03D8, v0);
    v1 = sub_2318D4C80();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F254D0);
  }
}

void sub_2317E0290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F254D8)
  {
    sub_2317E0314(255, &qword_255F254E0, &qword_255F254E8, MEMORY[0x24BE46420], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F254D8);
  }
}

void sub_2317E0314(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2317D4B4C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2317E0374()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B3A0)
  {
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B3A0);
  }
}

void sub_2317E03D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AEE8)
  {
    sub_2318D294C();
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AEE8);
  }
}

void sub_2317E043C(uint64_t a1)
{
  sub_2317DDA2C(a1, &qword_255F254F8, (uint64_t (*)(uint64_t))sub_2317E0190, sub_2317E0460, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9910]);
}

uint64_t sub_2317E0460()
{
  return sub_2317CC4AC(&qword_255F25500, (uint64_t (*)(uint64_t))sub_2317E0190, MEMORY[0x24BDB9470]);
}

uint64_t sub_2317E047C()
{
  return sub_2317CC4AC(&qword_255F25510, (uint64_t (*)(uint64_t))sub_2317E043C, MEMORY[0x24BDB9920]);
}

uint64_t sub_2317E0498()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2317E04BC(uint64_t a1, char a2)
{
  return sub_2317DE920(a1, a2);
}

uint64_t sub_2317E04C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317E04E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t, char *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v1 + 16);
  v4 = *a1;
  v5 = *((unsigned __int8 *)a1 + 8);
  sub_2317E05A4();
  return v3(v4, v5, (char *)a1 + *(int *)(v6 + 64));
}

unint64_t sub_2317E053C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25520;
  if (!qword_255F25520)
  {
    sub_2317DDA2C(255, &qword_255F25508, (uint64_t (*)(uint64_t))sub_2317E043C, sub_2317E047C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255F25520);
  }
  return result;
}

void sub_2317E05A4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F25528)
  {
    sub_2317E0314(255, &qword_255F254E0, &qword_255F254E8, MEMORY[0x24BE46420], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2318D294C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F25528);
  }
}

uint64_t sub_2317E0638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationDayScheduleItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E067C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationDayScheduleItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317E06B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2317E06FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317E0314(0, (unint64_t *)&qword_255F25530, &qword_255F25538, MEMORY[0x24BE46408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E0760(uint64_t a1)
{
  uint64_t v2;

  sub_2317E0314(0, (unint64_t *)&qword_255F25530, &qword_255F25538, MEMORY[0x24BE46408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317E07BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2317DFE30(a1, *(_QWORD **)(v2 + 24), a2);
}

uint64_t sub_2317E07D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2317E0830()
{
  unint64_t result;

  result = qword_25418B3C0;
  if (!qword_25418B3C0)
  {
    result = MEMORY[0x2348E7734](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25418B3C0);
  }
  return result;
}

uint64_t sub_2317E0874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v25 = a2;
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v22 - v5;
  v23 = type metadata accessor for MedicationDayScheduleItem();
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v22 = v2;
    v30 = MEMORY[0x24BEE4AF8];
    sub_23186E338(0, v8, 0);
    v9 = v30;
    v10 = (_QWORD *)(a1 + 32);
    v11 = (uint64_t)v24;
    do
    {
      v26 = v8;
      sub_2317D4B08(v10, v10[3]);
      v12 = sub_2318D4164();
      v14 = v13;
      sub_2317D4B08(v10, v10[3]);
      sub_2318D4158();
      sub_2317D4B08(v10, v10[3]);
      v15 = sub_2318D4170();
      v16 = v25;
      swift_unknownObjectRetain();
      sub_2318906E0(v12, v14, v11, v15, v16, (uint64_t)&off_25007D3D8, (uint64_t)v7);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23186E338(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v30;
      }
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23186E338(v18 > 1, v19 + 1, 1);
        v9 = v30;
      }
      v28 = v23;
      v29 = sub_2317CC4AC(&qword_25418AC18, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem, (uint64_t)&unk_2318DCFE8);
      v20 = sub_2317DBF6C((uint64_t *)&v27);
      sub_2317E0638((uint64_t)v7, (uint64_t)v20);
      *(_QWORD *)(v9 + 16) = v19 + 1;
      sub_2317D4AF0(&v27, v9 + 40 * v19 + 32);
      sub_2317E067C((uint64_t)v7);
      v10 += 5;
      v8 = v26 - 1;
    }
    while (v26 != 1);
  }
  return v9;
}

void sub_2317E0AF8()
{
  qword_255F25560 = 0x4058C00000000000;
}

void sub_2317E0B0C()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25418B0F0 != -1)
    swift_once();
  v0 = (id)qword_25418FC40;
  v1 = (void *)sub_2318D558C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  qword_255F28558 = (uint64_t)v2;
}

uint64_t sub_2317E0BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;

  swift_getObjectType();
  v20 = sub_2318D4A1C();
  v0 = *(_QWORD *)(v20 - 8);
  v1 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - v2;
  result = sub_2318D3D8C();
  v5 = v23;
  if (v23)
  {
    v6 = sub_2317D4B08(v22, v23);
    v7 = *(_QWORD *)(v5 - 8);
    MEMORY[0x24BDAC7A8](v6);
    v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = sub_2318D3BD0();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_2317D4B2C((uint64_t)v22);
    if (v12 >> 60 == 15)
    {
      sub_2318D4A04();
      v13 = sub_2318D4A10();
      v14 = sub_2318D5A3C();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        v22[0] = v16;
        *(_DWORD *)v15 = 136315138;
        v17 = sub_2318D63CC();
        v21 = sub_231851EBC(v17, v18, v22);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2317C8000, v13, v14, "%s Could not get user data from context; will assume HSA2 is not enabled.",
          v15,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v16, -1, -1);
        MEMORY[0x2348E77E8](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v20);
      return 0;
    }
    else
    {
      sub_2318D2688();
      swift_allocObject();
      sub_2318D267C();
      sub_2317E3338();
      sub_2318D2670();
      sub_2317E337C(v10, v12);
      swift_release();
      return LOBYTE(v22[0]);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MedicationRoomOnboardingTileViewController.baseIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationRoomOnboardingTileViewController.baseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MedicationRoomOnboardingTileViewController.baseIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double MedicationRoomOnboardingTileViewController.headerIconHeight.getter()
{
  if (qword_255F24FA0 != -1)
    swift_once();
  return *(double *)&qword_255F25560;
}

id sub_2317E1194()
{
  return sub_2317E1A40(&qword_2541880B0, (uint64_t (*)(uint64_t, uint64_t))sub_2317E11A8);
}

uint64_t sub_2317E11A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;

  sub_2317E3428();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_hk_medicationsSymbolImage);
  v6 = objc_msgSend(v5, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)(a1 + qword_2541894B0));

  if (v6)
  {
    v7 = qword_25418B328;
    v8 = v6;
    if (v7 != -1)
      swift_once();
    sub_2318D2808();
    v9 = sub_2318D3D50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = objc_allocWithZone((Class)sub_2318D3D68());
    v11 = (void *)sub_2318D3D5C();
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v12 = (void *)sub_2318D3D44();
    v13 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE220], 1024);
    objc_msgSend(v12, sel_setFont_, v13);

    return (uint64_t)v11;
  }
  else
  {
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_2318D60C0();
    v15 = sub_2318D63CC();
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = v15;
    v19 = v17;
    sub_2318D56A0();
    result = sub_2318D6150();
    __break(1u);
  }
  return result;
}

id sub_2317E1438()
{
  return sub_2317E1A40(&qword_2541880B8, (uint64_t (*)(uint64_t, uint64_t))sub_2317E144C);
}

uint64_t sub_2317E144C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  sub_2317E3428();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(a1 + qword_2541894B0);
  v6 = (void *)sub_2318D558C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v6, v5);

  if (v7
    && (v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)(a1 + qword_2541894C0)),
        v7,
        v8))
  {
    v9 = qword_25418B328;
    v10 = v8;
    if (v9 != -1)
      swift_once();
    sub_2318D2808();
    v11 = sub_2318D3D50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    v12 = objc_allocWithZone((Class)sub_2318D3D68());
    v13 = (void *)sub_2318D3D5C();
    objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = (void *)sub_2318D3D44();
    v15 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE220], 1024);
    objc_msgSend(v14, sel_setFont_, v15);

    return (uint64_t)v13;
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_2318D60C0();
    v17 = sub_2318D63CC();
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = v17;
    v21 = v19;
    sub_2318D56A0();
    result = sub_2318D6150();
    __break(1u);
  }
  return result;
}

id sub_2317E1734()
{
  return sub_2317E1A40(&qword_2541880C8, (uint64_t (*)(uint64_t, uint64_t))sub_2317E1748);
}

uint64_t sub_2317E1748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  sub_2317E3428();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(a1 + qword_2541894B0);
  v6 = (void *)sub_2318D558C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v6, v5);

  if (v7
    && (v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)(a1 + qword_2541894C0)),
        v7,
        v8))
  {
    v9 = qword_25418B328;
    v10 = v8;
    if (v9 != -1)
      swift_once();
    sub_2318D2808();
    v11 = sub_2318D3D50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    v12 = objc_allocWithZone((Class)sub_2318D3D68());
    v13 = (void *)sub_2318D3D5C();
    objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v14 = (void *)sub_2318D3D44();
    v15 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE220], 1024);
    objc_msgSend(v14, sel_setFont_, v15);

    return (uint64_t)v13;
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_2318D60C0();
    v17 = sub_2318D63CC();
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = v17;
    v21 = v19;
    sub_2318D56A0();
    result = sub_2318D6150();
    __break(1u);
  }
  return result;
}

id sub_2317E1A2C()
{
  return sub_2317E1A40(&qword_2541880C0, (uint64_t (*)(uint64_t, uint64_t))sub_2317E1AAC);
}

id sub_2317E1A40(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t ObjectType;
  void *v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v8 = (void *)a2(v2, ObjectType);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

uint64_t sub_2317E1AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  sub_2317E3428();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25418B0F0 != -1)
    swift_once();
  v5 = (id)qword_25418FC40;
  v6 = (void *)sub_2318D558C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (!v7)
    goto LABEL_12;
  v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(_QWORD *)(a1 + qword_2541894C0));

  if (!v8)
    goto LABEL_12;
  if ((sub_2317E0BCC() & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_isPasscodeSet);

      goto LABEL_8;
    }
    __break(1u);
LABEL_12:
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_2318D60C0();
    v19 = sub_2318D63CC();
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = v19;
    v23 = v21;
    sub_2318D56A0();
    result = sub_2318D6150();
    __break(1u);
    return result;
  }
LABEL_8:
  v11 = qword_25418B328;
  v12 = v8;
  if (v11 != -1)
    swift_once();
  sub_2318D2808();
  swift_bridgeObjectRelease();
  v13 = sub_2318D3D50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = objc_allocWithZone((Class)sub_2318D3D68());
  v15 = (void *)sub_2318D3D5C();
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v16 = (void *)sub_2318D3D44();
  v17 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE220], 1024);
  objc_msgSend(v16, sel_setFont_, v17);

  return (uint64_t)v15;
}

void *_s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;

  v0 = sub_2318D5EE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D5EA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D5F1C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v20 - v13;
  sub_2318D5F10();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEBD060], v4);
  sub_2318D5EB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEBD180], v0);
  sub_2318D5E98();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_systemBlueColor);
  sub_2318D5EC8();
  v17 = objc_msgSend(v15, sel_systemWhiteColor);
  sub_2318D5ED4();
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  sub_2318D5F04();
  sub_2317CCC9C(0, &qword_255F25590);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v18 = (void *)sub_2318D5F28();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v18, sel_setRole_, 1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v18;
}

UIImage_optional __swiftcall MedicationRoomOnboardingTileViewController.makeHeaderImage()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  objc_class *v3;
  UIImage_optional result;

  if (qword_255F24FA8 != -1)
    swift_once();
  v0 = qword_255F28558;
  v1 = (id)qword_255F28558;
  v3 = (objc_class *)v0;
  result.value.super.isa = v3;
  result.is_nil = v2;
  return result;
}

id MedicationRoomOnboardingTileViewController.makeBullets()()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  void *v3;
  unsigned int v4;
  uint64_t v5;

  sub_2317E2280();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2318D8520;
  *(_QWORD *)(v1 + 32) = sub_2317E1194();
  *(_QWORD *)(v1 + 40) = sub_2317E1438();
  v5 = v1;
  sub_2318D57A8();
  if (*(_BYTE *)(v0 + qword_2541894B8) == 1)
  {
    sub_2317E1734();
    MEMORY[0x2348E6528]();
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2318D57B4();
    sub_2318D57D8();
    sub_2318D57A8();
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, sel_isPasscodeSet);

    if (v4)
    {
      sub_2317E1A2C();
      MEMORY[0x2348E6528]();
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      sub_2318D57A8();
    }
    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2317E2280()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B490)
  {
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B490);
  }
}

uint64_t MedicationRoomOnboardingTileViewController.makeButtons()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  v1 = *(void **)(v0 + qword_2541894A0);
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_presentAddMedicationFlow, 64);
  objc_msgSend(v1, sel_setEnabled_, 1);
  sub_2317E2280();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2318D8530;
  *(_QWORD *)(v2 + 32) = v1;
  v5 = v2;
  sub_2318D57A8();
  v3 = v1;
  return v5;
}

Swift::Void __swiftcall MedicationRoomOnboardingTileViewController.viewDidLoad()()
{
  char *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  Swift::String_optional v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  v1 = (uint64_t *)&v0[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  swift_beginAccess();
  v3 = *v1;
  v2 = (void *)v1[1];
  swift_bridgeObjectRetain();
  v4.value._countAndFlagsBits = v3;
  v4.value._object = v2;
  MedicationRoomOnboardingTileViewController.updateAutomationIdentifiers(with:)(v4);
  swift_bridgeObjectRelease();
  v5 = (void *)sub_2318D3D80();
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  v6 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v6, 0xE000000000000000);

}

uint64_t type metadata accessor for MedicationRoomOnboardingTileViewController()
{
  uint64_t result;

  result = qword_2541894D8;
  if (!qword_2541894D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2317E24D4(void *a1)
{
  id v1;

  v1 = a1;
  MedicationRoomOnboardingTileViewController.viewDidLoad()();

}

void sub_2317E2508(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationController);
  if (v2)
  {
    v3 = v2;
    sub_2318D4758();
    swift_allocObject();
    sub_2318D474C();
    v4 = (id)sub_2318D4350();
    sub_2318D5B14();

    swift_release();
  }
  else
  {
    sub_2318D6150();
    __break(1u);
  }
}

Swift::Void __swiftcall MedicationRoomOnboardingTileViewController.updateAutomationIdentifiers(with:)(Swift::String_optional with)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;

  v2 = v1;
  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v5 = sub_2318D4A1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (object)
  {
    v9 = (void *)sub_2318D3D74();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v10 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

    v11 = (void *)sub_2318D3D80();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v12 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);

    v13 = sub_2317E1194();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v14 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14);

    v15 = sub_2317E1438();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v16 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);

    v17 = sub_2317E1734();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v18 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAccessibilityIdentifier_, v18);

    v19 = sub_2317E1A2C();
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v20 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setAccessibilityIdentifier_, v20);

    v21 = *(void **)(v2 + qword_2541894A0);
    v27 = countAndFlagsBits;
    v28 = object;
    swift_bridgeObjectRetain();
    sub_2318D56A0();
    v26 = (id)sub_2318D558C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAccessibilityIdentifier_, v26);

  }
  else
  {
    sub_2318D49E0();
    v22 = sub_2318D4A10();
    v23 = sub_2318D5A3C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_2317C8000, v22, v23, "No base identifier for UIA", v24, 2u);
      MEMORY[0x2348E77E8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id MedicationRoomOnboardingTileViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id MedicationRoomOnboardingTileViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  objc_super v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v7 = qword_2541894B0;
  sub_2317CCC9C(0, &qword_25418B0C0);
  v8 = v3;
  v9 = (void *)sub_2318D5DC0();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_configurationWithFont_, v9);

  *(_QWORD *)&v4[v7] = v11;
  v12 = qword_2541894C0;
  v13 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
  v14 = objc_msgSend(v10, sel_configurationWithHierarchicalColor_, v13);

  *(_QWORD *)&v8[v12] = v14;
  *(_QWORD *)&v8[qword_2541894C8] = 0;
  *(_QWORD *)&v8[qword_2541894D0] = 0;
  v15 = qword_2541894B8;
  v8[v15] = objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
  v16 = (uint64_t *)&v8[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  v24 = sub_2318D55BC();
  v25 = v17;
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v18 = v25;
  *v16 = v24;
  v16[1] = v18;
  *(_QWORD *)&v8[qword_2541880B0] = 0;
  *(_QWORD *)&v8[qword_2541880B8] = 0;
  *(_QWORD *)&v8[qword_2541880C8] = 0;
  *(_QWORD *)&v8[qword_2541880C0] = 0;
  v19 = qword_2541894A0;
  *(_QWORD *)&v8[v19] = _s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0();

  if (a2)
  {
    v20 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  v21 = objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, v20, a3);

  return v21;
}

id sub_2317E2CF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_2318D55BC();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return MedicationRoomOnboardingTileViewController.init(nibName:bundle:)(v5, v7, a4);
}

id MedicationRoomOnboardingTileViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationRoomOnboardingTileViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = qword_2541894B0;
  sub_2317CCC9C(0, &qword_25418B0C0);
  v5 = v1;
  v6 = (void *)sub_2318D5DC0();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_configurationWithFont_, v6);

  *(_QWORD *)&v2[v4] = v8;
  v9 = qword_2541894C0;
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
  v11 = objc_msgSend(v7, sel_configurationWithHierarchicalColor_, v10);

  *(_QWORD *)&v5[v9] = v11;
  *(_QWORD *)&v5[qword_2541894C8] = 0;
  *(_QWORD *)&v5[qword_2541894D0] = 0;
  v12 = qword_2541894B8;
  v5[v12] = objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
  v13 = (uint64_t *)&v5[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  v20 = sub_2318D55BC();
  v21 = v14;
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v15 = v21;
  *v13 = v20;
  v13[1] = v15;
  *(_QWORD *)&v5[qword_2541880B0] = 0;
  *(_QWORD *)&v5[qword_2541880B8] = 0;
  *(_QWORD *)&v5[qword_2541880C8] = 0;
  *(_QWORD *)&v5[qword_2541880C0] = 0;
  v16 = qword_2541894A0;
  *(_QWORD *)&v5[v16] = _s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0();

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  v17 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);

  return v17;
}

id sub_2317E2FD0(uint64_t a1, uint64_t a2, void *a3)
{
  return MedicationRoomOnboardingTileViewController.init(coder:)(a3);
}

void sub_2317E2FF4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

}

id MedicationRoomOnboardingTileViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2317E30D8(uint64_t a1)
{

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_2317E3194()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2317E31EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2317E324C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_2317E3298(uint64_t a1, uint64_t a2)
{
  MedicationRoomOnboardingTileViewController.updateAutomationIdentifiers(with:)(*(Swift::String_optional *)&a1);
}

uint64_t sub_2317E32B8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2317E3330()
{
  return type metadata accessor for MedicationRoomOnboardingTileViewController();
}

unint64_t sub_2317E3338()
{
  unint64_t result;

  result = qword_255F25580;
  if (!qword_255F25580)
  {
    result = MEMORY[0x2348E7734](&unk_2318DC300, &type metadata for MedicationsOnboardingUserData);
    atomic_store(result, (unint64_t *)&qword_255F25580);
  }
  return result;
}

uint64_t sub_2317E337C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2317E3390(a1, a2);
  return a1;
}

uint64_t sub_2317E3390(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_2317E33D4()
{
  unint64_t result;

  result = qword_25418B4A0;
  if (!qword_25418B4A0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B4A0);
  }
  return result;
}

void sub_2317E3428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25588)
  {
    sub_2318D3D50();
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25588);
  }
}

uint64_t sub_2317E3480(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = *v1;
  v30 = a1;
  v31 = v3;
  v4 = sub_2318D2DC0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D2DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E510C(a1, (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_context);
  v28 = sub_2318D2E14();
  sub_2317D4194(0, (unint64_t *)&qword_25418B468, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v12 = sub_2318D2C04();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2318D8680;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x24BE474E0], v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE47910], v4);
  sub_2318D2DCC();
  v16 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v29 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain, v11, v8);
  v17 = type metadata accessor for MedicationsGeneratorContext();
  v18 = v30;
  v19 = *(void **)(v30 + *(int *)(v17 + 28));
  sub_2318D4584();
  v20 = v19;
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2317E5150();
  sub_2318D5A60();
  sub_2318D4524();
  swift_allocObject();
  v21 = sub_2318D44A0();
  type metadata accessor for CHRAddAccountDataProvider();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v20;
  v22[3] = v21;
  v23 = v20;
  swift_retain();
  sub_2318D44AC();
  sub_2318D5A84();
  v24 = objc_allocWithZone((Class)sub_2318D32E8());
  v25 = sub_2318D32D0();

  swift_release();
  v22[4] = v25;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_dataProvider) = v22;
  v26 = sub_2317E3774(v18);
  sub_2317E518C(v18);
  result = v16;
  *(_QWORD *)(v16 + 16) = v26;
  return result;
}

uint64_t sub_2317E3774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v51 = a1;
  v70 = sub_2318D2E50();
  v2 = *(_QWORD *)(v70 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v70);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E51C8();
  v6 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  v55 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E524C();
  v10 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v58 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E52FC();
  v60 = v12;
  v62 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E53D8();
  v15 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  v65 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E5484();
  v66 = v17;
  v68 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E55C8();
  v67 = v19;
  v69 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v63 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_2318D5C70();
  v71 = sub_2317E5B48();
  sub_2317E0374();
  sub_2317CC4AC(&qword_25418B398, (uint64_t (*)(uint64_t))sub_2317E0374, MEMORY[0x24BDB9AF8]);
  sub_2318D4F38();
  swift_release();
  swift_release();
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v21 = v70;
  v50(v4, a1, v70);
  v22 = *(unsigned __int8 *)(v2 + 80);
  v23 = (v22 + 24) & ~v22;
  v49 = v22 | 7;
  v48 = v3 + 7;
  v24 = swift_allocObject();
  v25 = v53;
  *(_QWORD *)(v24 + 16) = v53;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v47(v24 + v23, v4, v21);
  *(_QWORD *)(v24 + ((v3 + 7 + v23) & 0xFFFFFFFFFFFFFFF8)) = v25;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_2317E56AC;
  *(_QWORD *)(v26 + 24) = v24;
  sub_2317E52E0(0);
  sub_2317CC4AC(&qword_254189520, (uint64_t (*)(uint64_t))sub_2317E51C8, MEMORY[0x24BDB9450]);
  v27 = v52;
  v28 = v54;
  sub_2318D4F74();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v28);
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  v29 = MEMORY[0x24BDB9AE0];
  sub_2317E5938(0, &qword_254189AF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2317CC4AC(&qword_254189888, (uint64_t (*)(uint64_t))sub_2317E524C, MEMORY[0x24BDB98C8]);
  sub_2317E59A8((unint64_t *)&qword_254189AF0, &qword_254189AF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v29, MEMORY[0x24BDB9AF8]);
  v31 = v56;
  v30 = v57;
  sub_2318D4F50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v30);
  v32 = v70;
  v50(v4, v51, v70);
  v33 = (v22 + 16) & ~v22;
  v34 = (v48 + v33) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  v47(v35 + v33, v4, v32);
  *(_QWORD *)(v35 + v34) = v25;
  sub_2317CDA94(0, &qword_254189D30, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v36 = MEMORY[0x24BDB9740];
  sub_2317CC4AC(&qword_2541897E8, (uint64_t (*)(uint64_t))sub_2317E52FC, MEMORY[0x24BDB9740]);
  v38 = v59;
  v37 = v60;
  sub_2318D4F74();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v37);
  *(_QWORD *)(swift_allocObject() + 16) = v25;
  sub_2317E554C();
  sub_2317CC4AC(&qword_254189898, (uint64_t (*)(uint64_t))sub_2317E53D8, MEMORY[0x24BDB98C8]);
  sub_2317CC4AC(&qword_254189B30, (uint64_t (*)(uint64_t))sub_2317E554C, MEMORY[0x24BDB9AF8]);
  v39 = v61;
  v40 = v64;
  sub_2318D4F50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v40);
  v72 = MEMORY[0x24BEE4AF8];
  sub_2317CC4AC(&qword_254189808, (uint64_t (*)(uint64_t))sub_2317E5484, v36);
  v41 = v63;
  v42 = v66;
  sub_2318D4F20();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v42);
  sub_2317CC4AC(&qword_2541895E8, (uint64_t (*)(uint64_t))sub_2317E55C8, MEMORY[0x24BDB95A8]);
  v43 = v67;
  v44 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v43);
  return v44;
}

uint64_t sub_2317E3E18(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  v9 = sub_2318D4A1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49E0();
  v13 = sub_2318D4A10();
  v14 = sub_2318D5A54();
  v15 = os_log_type_enabled(v13, v14);
  v36 = a2;
  if (v15)
  {
    v16 = swift_slowAlloc();
    v33 = v10;
    v17 = v16;
    v32 = swift_slowAlloc();
    v38 = v32;
    *(_DWORD *)v17 = 136446722;
    v34 = a4;
    v37 = sub_2317E58EC(0);
    sub_2317E5900(0, &qword_254188F88, (void (*)(uint64_t))sub_2317E58EC);
    v35 = v4;
    v18 = sub_2318D55E0();
    v31 = v9;
    v19 = a2;
    v37 = sub_231851EBC(v18, v20, &v38);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    if ((a1 & 1) != 0)
      v21 = 1702195828;
    else
      v21 = 0x65736C6166;
    if ((a1 & 1) != 0)
      v22 = 0xE400000000000000;
    else
      v22 = 0xE500000000000000;
    v37 = sub_231851EBC(v21, v22, &v38);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2082;
    if ((v19 & 1) != 0)
      v23 = 1702195828;
    else
      v23 = 0x65736C6166;
    if ((v19 & 1) != 0)
      v24 = 0xE400000000000000;
    else
      v24 = 0xE500000000000000;
    v37 = sub_231851EBC(v23, v24, &v38);
    a4 = v34;
    v5 = v35;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v13, v14, "[%{public}s] Health records medication onboarding tile state; Onboardable: %{public}s isDismissedFromCategoryRoom: %{public}s",
      (uint8_t *)v17,
      0x20u);
    v25 = v32;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v25, -1, -1);
    MEMORY[0x2348E77E8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v31);
    if ((a1 & 1) == 0)
      return MEMORY[0x24BEE4AF8];
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((a1 & 1) == 0)
      return MEMORY[0x24BEE4AF8];
  }
  sub_2317D4194(0, (unint64_t *)&qword_254189FA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D2D78() - 8) + 80);
  v28 = (v27 + 32) & ~v27;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_2318D8680;
  sub_2317E49A0(a4, v36 & 1, v26 + v28);
  if (v5)
  {
    *(_QWORD *)(v26 + 16) = 0;
    swift_release();
  }
  return v26;
}

uint64_t sub_2317E4170@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_2317D4194(0, &qword_255F25598, (uint64_t (*)(uint64_t))sub_2317E52E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - v6;
  sub_2317E5938(0, &qword_25418A068, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  v13 = sub_2318D4A1C();
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_2318D49D4();
  v17 = v16;
  v18 = v16;
  v19 = sub_2318D4A10();
  v20 = sub_2318D5A3C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v35 = v10;
    v22 = v21;
    v23 = swift_slowAlloc();
    v38 = a2;
    v24 = v23;
    v43 = v23;
    *(_DWORD *)v22 = 136446466;
    v36 = v5;
    v42 = sub_2317E58EC(0);
    sub_2317E5900(0, &qword_254188F88, (void (*)(uint64_t))sub_2317E58EC);
    v25 = sub_2318D55E0();
    v37 = v9;
    v42 = sub_231851EBC(v25, v26, &v43);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v42 = (uint64_t)v16;
    v27 = v16;
    sub_2317E33D4();
    v28 = sub_2318D5604();
    v42 = sub_231851EBC(v28, v29, &v43);
    v9 = v37;
    sub_2318D5F70();
    v5 = v36;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2317C8000, v19, v20, "[%{public}s] Unable to make feed items for commit: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    v30 = v24;
    a2 = v38;
    MEMORY[0x2348E77E8](v30, -1, -1);
    v31 = v22;
    v10 = v35;
    MEMORY[0x2348E77E8](v31, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v40);
  v43 = MEMORY[0x24BEE4AF8];
  sub_2317E52E0(0);
  sub_2318D4E0C();
  sub_2317E33D4();
  sub_2318D4DE8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v5);
  sub_2317E59A8((unint64_t *)&qword_25418A060, &qword_25418A068, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v32 = sub_2318D4F08();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v32;
  return result;
}

uint64_t sub_2317E450C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t inited;
  void *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = MEMORY[0x24BEE3598];
  sub_2317CDA94(0, &qword_254189FC8, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2318D8680;
  sub_2317CDA94(0, (unint64_t *)&qword_25418B470, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))v4);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2318D8680;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_2318D2E14();
  sub_2318D2C34();

  sub_2318D56A0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 32) = 0xD000000000000021;
  *(_QWORD *)(inited + 40) = 0x80000002318DF600;
  v8 = sub_23185272C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = sub_2318D2E14();
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = result;
  *(_QWORD *)(v5 + 56) = 0;
  *(_BYTE *)(v5 + 64) = 0x80;
  *a2 = v5;
  return result;
}

uint64_t sub_2317E4680@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  sub_2317E5880();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D4A1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  sub_2318D49D4();
  v14 = v13;
  v15 = v13;
  v16 = sub_2318D4A10();
  v17 = sub_2318D5A3C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v32 = v6;
    v19 = v18;
    v20 = swift_slowAlloc();
    v31 = v10;
    v21 = v20;
    v35 = v20;
    *(_DWORD *)v19 = 136446466;
    v30 = v9;
    v34 = sub_2317E58EC(0);
    sub_2317E5900(0, &qword_254188F88, (void (*)(uint64_t))sub_2317E58EC);
    v22 = sub_2318D55E0();
    v33 = a2;
    v34 = sub_231851EBC(v22, v23, &v35);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    v34 = (uint64_t)v13;
    v24 = v13;
    sub_2317E33D4();
    v25 = sub_2318D5604();
    v34 = sub_231851EBC(v25, v26, &v35);
    sub_2318D5F70();
    a2 = v33;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2317C8000, v16, v17, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v21, -1, -1);
    v27 = v19;
    v6 = v32;
    MEMORY[0x2348E77E8](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v35 = MEMORY[0x24BEE4AF8];
  sub_2317CDA94(0, &qword_254189D30, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2318D4E0C();
  sub_2317CC4AC(&qword_254189C20, (uint64_t (*)(uint64_t))sub_2317E5880, MEMORY[0x24BDB9DF8]);
  v28 = sub_2318D4F08();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v28;
  return result;
}

uint64_t sub_2317E49A0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  char *v14;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(unint64_t *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t *, _QWORD);
  _QWORD v28[4];
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v40 = a2;
  v41 = a3;
  v35 = sub_2318D2EF8();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_2318D2F64();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v31 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D32C4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D3324();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (unint64_t)"22CHRAddAccountGenerator";
  v30 = a1;
  v42 = 0xD000000000000021;
  v43 = 0x80000002318DF600;
  v12 = (void *)sub_2318D2E14();
  sub_2318D2C34();

  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v28[2] = v43;
  v28[3] = v42;
  if (qword_25418B458 != -1)
    swift_once();
  v37 = v11;
  v13 = (id)static NSBundle.medicationsHealthAppPlugin;
  sub_2318D32B8();
  v28[1] = v8;
  if (qword_25418B328 != -1)
    swift_once();
  v28[0] = sub_2318D2808();
  sub_2318D2808();
  sub_2318D2808();
  sub_2318D2808();
  v14 = v37;
  sub_2318D3318();
  v42 = 0xD000000000000021;
  v43 = v29 | 0x8000000000000000;
  v15 = (void *)sub_2318D2E14();
  sub_2318D2C34();

  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_2318D2E14();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_2318D6174())
    sub_2318BB27C(MEMORY[0x24BEE4AF8]);
  type metadata accessor for CHRAddAccountFeedItemViewController();
  sub_2317CC4AC(&qword_254188098, (uint64_t (*)(uint64_t))type metadata accessor for CHRAddAccountFeedItemViewController, (uint64_t)&unk_2318D8C10);
  sub_2318D2C88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v33, *MEMORY[0x24BE47C78], v35);
  v17 = v31;
  sub_2318D2F70();
  v18 = v36;
  sub_2318D2CA0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v18);
  v19 = sub_2318D2E8C();
  v21 = v20;
  v22 = (void (*)(unint64_t *, _QWORD))sub_2318D2D54();
  sub_231860650(&v44, v19, v21);
  swift_bridgeObjectRelease();
  v22(&v42, 0);
  if ((v40 & 1) != 0)
  {
    v23 = sub_2318D2EA4();
    v25 = v24;
    v26 = (void (*)(unint64_t *, _QWORD))sub_2318D2D54();
    sub_231860650(&v44, v23, v25);
    swift_bridgeObjectRelease();
    v26(&v42, 0);
  }
  sub_2318D2CAC();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v14, v39);
}

uint64_t sub_2317E4F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain;
  v2 = sub_2318D2DE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2317E518C(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_context);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2317E4FE4()
{
  return type metadata accessor for CHRAddAccountGenerator();
}

uint64_t type metadata accessor for CHRAddAccountGenerator()
{
  uint64_t result;

  result = qword_254188EB8;
  if (!qword_254188EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317E5028()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2318D2DE4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2317E50C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain;
  v4 = sub_2318D2DE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2317E510C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2317E5150()
{
  unint64_t result;

  result = qword_25418B400;
  if (!qword_25418B400)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B400);
  }
  return result;
}

uint64_t sub_2317E518C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2317E51C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189528)
  {
    sub_2317E0374();
    sub_2317CC4AC(&qword_25418B398, (uint64_t (*)(uint64_t))sub_2317E0374, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189528);
  }
}

void sub_2317E524C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189890)
  {
    sub_2317E51C8();
    sub_2317E52E0(255);
    sub_2317CC4AC(&qword_254189520, (uint64_t (*)(uint64_t))sub_2317E51C8, MEMORY[0x24BDB9450]);
    v0 = sub_2318D4D28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189890);
  }
}

void sub_2317E52E0(uint64_t a1)
{
  sub_2317D4194(a1, &qword_254189D20, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_2317E52FC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541897F0)
  {
    sub_2317E524C();
    v0 = MEMORY[0x24BDB9AE0];
    sub_2317E5938(255, &qword_254189AF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317CC4AC(&qword_254189888, (uint64_t (*)(uint64_t))sub_2317E524C, MEMORY[0x24BDB98C8]);
    sub_2317E59A8((unint64_t *)&qword_254189AF0, &qword_254189AF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_2318D4D04();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541897F0);
  }
}

void sub_2317E53D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541898A0)
  {
    sub_2317E52FC();
    sub_2317CDA94(255, &qword_254189D30, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317CC4AC(&qword_2541897E8, (uint64_t (*)(uint64_t))sub_2317E52FC, MEMORY[0x24BDB9740]);
    v0 = sub_2318D4D28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541898A0);
  }
}

void sub_2317E5484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189810)
  {
    sub_2317E53D8();
    sub_2317E554C();
    sub_2317CC4AC(&qword_254189898, (uint64_t (*)(uint64_t))sub_2317E53D8, MEMORY[0x24BDB98C8]);
    sub_2317CC4AC(&qword_254189B30, (uint64_t (*)(uint64_t))sub_2317E554C, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189810);
  }
}

void sub_2317E554C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189B38)
  {
    sub_2317CDA94(255, &qword_254189D30, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189B38);
  }
}

void sub_2317E55C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541895F0)
  {
    sub_2317E5484();
    sub_2317CC4AC(&qword_254189808, (uint64_t (*)(uint64_t))sub_2317E5484, MEMORY[0x24BDB9740]);
    v0 = sub_2318D4CBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541895F0);
  }
}

uint64_t sub_2317E5640()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2318D2E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2317E56AC(char a1, int a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D2E50() - 8) + 80);
  return sub_2317E3E18(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_2317E571C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317E5740@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_2317E5778()
{
  return swift_deallocObject();
}

uint64_t sub_2317E5788@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2317E4170(a1, a2);
}

uint64_t sub_2317E5790()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2318D2E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2317E57FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2318D2E50();
  return sub_2317E450C(a1, a2);
}

uint64_t sub_2317E5868()
{
  return swift_deallocObject();
}

uint64_t sub_2317E5878@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2317E4680(a1, a2);
}

void sub_2317E5880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189C28)
  {
    sub_2317CDA94(255, &qword_254189D30, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189C28);
  }
}

uint64_t sub_2317E58EC(uint64_t a1)
{
  return sub_2317E5900(a1, &qword_254188F80, (void (*)(uint64_t))type metadata accessor for CHRAddAccountGenerator);
}

uint64_t sub_2317E5900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2317E5938(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2317E52E0(255);
    v7 = v6;
    v8 = sub_2317E33D4();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2317E59A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2317E5938(255, a2, a3);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2317E59E8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  char v14;
  uint64_t v15;

  v4 = sub_2318D54C0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  sub_2318D546C();
  sub_2318D543C();
  v11 = sub_2318D5448();
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  if ((v11 & 1) != 0)
  {
    v12(a2, v4);
    v12(a1, v4);
    v12(v10, v4);
    return 0;
  }
  else
  {
    sub_2318D543C();
    sub_2317CE988();
    v14 = sub_2318D5550();
    v12(a2, v4);
    v12(a1, v4);
    v12(v8, v4);
    v12(v10, v4);
    if ((v14 & 1) != 0)
      return 2;
    else
      return 1;
  }
}

uint64_t sub_2317E5B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[2];

  sub_2317E5E10();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E6078();
  v6 = v5;
  v13[0] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = sub_2318D32DC();
  sub_2317E60F8(0, &qword_25418A058, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2318D8680;
  v10 = sub_2318D4518();
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v9 + 32) = v10 & 1;
  sub_2317E6014();
  sub_2317CC4AC(&qword_254189C00, (uint64_t (*)(uint64_t))sub_2317E6014, MEMORY[0x24BDB9CB0]);
  sub_2318D4FA4();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2317CC4AC(&qword_254189598, (uint64_t (*)(uint64_t))sub_2317E5E10, MEMORY[0x24BDB9530]);
  sub_2318D4F44();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_2317CC4AC(&qword_254189718, (uint64_t (*)(uint64_t))sub_2317E6078, MEMORY[0x24BDB96C0]);
  v11 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v13[0] + 8))(v8, v6);
  return v11;
}

uint64_t sub_2317E5D48@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;
  char v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_2317E6150(a1, (uint64_t)v6);
  if (!v7)
  {
    result = sub_2317E6194((uint64_t)v6);
    goto LABEL_5;
  }
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
LABEL_5:
    v4 = 0;
    goto LABEL_6;
  }
  v4 = v5;
LABEL_6:
  *a2 = v4;
  return result;
}

uint64_t sub_2317E5DBC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CHRAddAccountDataProvider()
{
  return objc_opt_self();
}

void sub_2317E5E10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541895A0)
  {
    sub_2317E5ED8();
    sub_2317E6014();
    sub_2317CC4AC(&qword_254189A20, (uint64_t (*)(uint64_t))sub_2317E5ED8, MEMORY[0x24BDB9970]);
    sub_2317CC4AC(&qword_254189C00, (uint64_t (*)(uint64_t))sub_2317E6014, MEMORY[0x24BDB9CB0]);
    v0 = sub_2318D4CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541895A0);
  }
}

void sub_2317E5ED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189A28)
  {
    sub_2317E60F8(255, &qword_254189E60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317E5FBC();
    v0 = sub_2318D4D58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189A28);
  }
}

void sub_2317E5F64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B4B0)
  {
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B4B0);
  }
}

unint64_t sub_2317E5FBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189E68;
  if (!qword_254189E68)
  {
    sub_2317E60F8(255, &qword_254189E60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254189E68);
  }
  return result;
}

void sub_2317E6014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189C08)
  {
    sub_2317E5F64();
    v0 = sub_2318D4DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189C08);
  }
}

void sub_2317E6078()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189720)
  {
    sub_2317E5E10();
    sub_2317CC4AC(&qword_254189598, (uint64_t (*)(uint64_t))sub_2317E5E10, MEMORY[0x24BDB9530]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189720);
  }
}

void sub_2317E60F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2317E5F64();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2317E6150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317E5F64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E6194(uint64_t a1)
{
  uint64_t v2;

  sub_2317E5F64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317E61D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  unsigned int v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[4];

  v50 = *v1;
  v3 = sub_2318D4A1C();
  v4 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  v52 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v49 - v8;
  v9 = sub_2318D2E50();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for MedicationsGeneratorContext();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v49 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v12, a1, v9);
  v19(v18, (uint64_t)v12, v9);
  sub_2318D2DFC();
  sub_2317D4B08(v54, v54[3]);
  v20 = (void *)sub_2318D2D84();
  *(_QWORD *)&v18[v13[5]] = v20;
  v21 = v20;
  sub_2317D4B2C((uint64_t)v54);
  *(_QWORD *)&v18[v13[6]] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C28]), sel_initWithHealthStore_, v21);
  *(_QWORD *)&v18[v13[7]] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v21);
  sub_2318D49A4();
  *(_QWORD *)&v18[v13[9]] = sub_2318D4998();
  sub_2318D4584();
  sub_2318D4578();
  v22 = sub_2318D4560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&v18[v13[8]] = v22;
  v23 = (void *)sub_2318D2E14();
  v24 = (void *)sub_2318D2C58();
  LOBYTE(a1) = sub_2318D2C4C();

  if ((a1 & 1) == 0)
    goto LABEL_10;
  sub_2318D55BC();
  v25 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v26 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

  if (v27)
  {
    v28 = (void *)sub_2318D558C();
    v29 = objc_msgSend(v27, sel_BOOLForKey_, v28);

    if (v29)
    {
      v30 = v49;
      sub_2318D49F8();
      v31 = sub_2318D4A10();
      v32 = sub_2318D5A54();
      v33 = os_log_type_enabled(v31, v32);
      v34 = v51;
      if (v33)
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v53 = v36;
        *(_DWORD *)v35 = 136315138;
        v54[0] = v50;
        swift_getMetatypeMetadata();
        v37 = sub_2318D55E0();
        v54[0] = sub_231851EBC(v37, v38, &v53);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2317C8000, v31, v32, "[%s]: Minimal medications plugin enabled, returning nil for sharable model pipeline for primary profile", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v36, -1, -1);
        MEMORY[0x2348E77E8](v35, -1, -1);

        (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v34);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v34);
      }
LABEL_10:
      v45 = MEMORY[0x24BEE4AF8];
      goto LABEL_11;
    }
  }
  sub_2318D49F8();
  v39 = sub_2318D4A10();
  v40 = sub_2318D5A54();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v53 = v42;
    *(_DWORD *)v41 = 136315138;
    v54[0] = v50;
    swift_getMetatypeMetadata();
    v43 = sub_2318D55E0();
    v54[0] = sub_231851EBC(v43, v44, &v53);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v39, v40, "[%s]: Returning medication tracking sharable model pipeline for primary profile", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v42, -1, -1);
    MEMORY[0x2348E77E8](v41, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v51);
  sub_2317E67B8();
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_2318D8680;
  sub_2317E510C((uint64_t)v18, (uint64_t)v16);
  v46 = type metadata accessor for MedicationsShareableModelPipeline();
  swift_allocObject();
  v47 = sub_2317E863C((uint64_t)v16);
  *(_QWORD *)(v45 + 56) = v46;
  *(_QWORD *)(v45 + 64) = sub_2317E6860();
  *(_QWORD *)(v45 + 32) = v47;
LABEL_11:
  sub_2317E518C((uint64_t)v18);
  return v45;
}

void sub_2317E67B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189FE0)
  {
    sub_2317E680C();
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189FE0);
  }
}

unint64_t sub_2317E680C()
{
  unint64_t result;

  result = qword_2541881C8;
  if (!qword_2541881C8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541881C8);
  }
  return result;
}

unint64_t sub_2317E6860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541889B8;
  if (!qword_2541889B8)
  {
    v1 = type metadata accessor for MedicationsShareableModelPipeline();
    result = MEMORY[0x2348E7734](&unk_2318D8AF4, v1);
    atomic_store(result, (unint64_t *)&qword_2541889B8);
  }
  return result;
}

uint64_t sub_2317E68AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2317E68F0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObserverSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2317E6DDC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObserverSet);
}

uint64_t sub_2317E6920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  _QWORD v12[2];
  _QWORD v13[4];
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;

  v4 = sub_2318D282C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(a1 + 16), sel_objectEnumerator);
  sub_2318D59C4();

  sub_2318D2820();
  if (!v16)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  while (1)
  {
    sub_2317E6D40(&v15, v14);
    sub_2317E6D50((uint64_t)v14, (uint64_t)v13);
    sub_2317E6D8C();
    if ((swift_dynamicCast() & 1) == 0)
      break;
    v9 = v12[1];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 16))(a2, &off_25007CF78, ObjectType, v9);
    swift_unknownObjectRelease();
    sub_2317D4B2C((uint64_t)v14);
    sub_2318D2820();
    if (!v16)
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_2318D6138();
  sub_2318D56A0();
  sub_2318D56A0();
  swift_release();
  result = sub_2318D6150();
  __break(1u);
  return result;
}

uint64_t sub_2317E6B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  _QWORD v12[2];
  _QWORD v13[4];
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;

  v4 = sub_2318D282C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(a1 + 16), sel_objectEnumerator);
  sub_2318D59C4();

  sub_2318D2820();
  if (!v16)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  while (1)
  {
    sub_2317E6D40(&v15, v14);
    sub_2317E6D50((uint64_t)v14, (uint64_t)v13);
    sub_2317E6D8C();
    if ((swift_dynamicCast() & 1) == 0)
      break;
    v9 = v12[1];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 8))(a2, &off_25007CF78, ObjectType, v9);
    swift_unknownObjectRelease();
    sub_2317D4B2C((uint64_t)v14);
    sub_2318D2820();
    if (!v16)
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_2318D6138();
  sub_2318D56A0();
  sub_2318D56A0();
  swift_release();
  result = sub_2318D6150();
  __break(1u);
  return result;
}

_OWORD *sub_2317E6D40(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2317E6D50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_2317E6D8C()
{
  unint64_t result;

  result = qword_25418AD90;
  if (!qword_25418AD90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25418AD90);
  }
  return result;
}

uint64_t sub_2317E6DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2348E76A4](a1, v6, a5);
}

void sub_2317E6EDC()
{
  void *v0;
  id v1;
  unint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  v1 = objc_msgSend(v0, sel_childViewControllers);
  sub_2317E8228();
  v2 = sub_2318D5790();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_2318D6174();
    swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_8;
  }
  else
  {
    v3 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348E6E94](0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v4 = *(id *)(v2 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v5, sel_title);

  if (v6)
  {
    sub_2318D55BC();

    v3 = (void *)sub_2318D558C();
    goto LABEL_8;
  }
  v3 = 0;
LABEL_10:
  objc_msgSend(v0, sel_setTitle_, v3);

  v7 = objc_msgSend(v0, sel_childViewControllers);
  v2 = sub_2318D5790();

  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v15 = sub_2318D6174();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_19;
LABEL_12:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v8 = (id)MEMORY[0x2348E6E94](0, v2);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v2 + 32);
LABEL_15:
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v0, sel_navigationItem);
    v11 = objc_msgSend(v9, sel_navigationItem);
    v12 = objc_msgSend(v11, sel_largeTitleDisplayMode);

    objc_msgSend(v10, sel_setLargeTitleDisplayMode_, v12);
    v16 = objc_msgSend(v0, sel_navigationItem);
    v13 = objc_msgSend(v9, sel_navigationItem);
    v14 = objc_msgSend(v13, sel_rightBarButtonItem);

    objc_msgSend(v16, sel_setRightBarButtonItem_, v14);
    return;
  }
  __break(1u);
}

void sub_2317E71C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[3];
  uint64_t v79;
  uint64_t v80;

  swift_getObjectType();
  v3 = sub_2318D4A1C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v67 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v67 - v10;
  sub_2317E8264(0, qword_2541883A8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - v12;
  v14 = type metadata accessor for SharedMedicationsFeedItemData(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v71 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v68 = (uint64_t)&v67 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v67 - v20;
  v74 = a1;
  sub_2317E8180(a1, (uint64_t)v78);
  v76 = v1;
  if (v79)
  {
    v67 = v9;
    v69 = v21;
    v73 = v80;
    v72 = sub_2317D4B08(v78, v79);
    sub_2318D2688();
    swift_allocObject();
    sub_2318D267C();
    sub_2317E82EC(&qword_255F25608, 255, type metadata accessor for SharedMedicationsFeedItemData, (uint64_t)&unk_2318DAF08);
    sub_2317E82EC(&qword_2541882F0, 255, type metadata accessor for SharedMedicationsFeedItemData, (uint64_t)&unk_2318DAEE0);
    sub_2318D3BDC();
    swift_release();
    sub_2317D4B2C((uint64_t)v78);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v22 = (uint64_t)v69;
      sub_2317E832C((uint64_t)v13, (uint64_t)v69);
      sub_2317E8180(v74, (uint64_t)v78);
      if (v79)
      {
        sub_2317D4B08(v78, v79);
        v23 = (void *)sub_2318D3BB8();
        v24 = *(_QWORD *)(v22 + 16);
        v25 = *(_QWORD *)(v22 + 24);
        swift_bridgeObjectRetain();
        v26 = sub_2318BF454(v24, v25);

        swift_bridgeObjectRelease();
        sub_2317D4B2C((uint64_t)v78);
        if (v26)
        {
          v27 = v70;
          sub_2318D49E0();
          v28 = v68;
          sub_2317E8370(v22, v68);
          v29 = sub_2318D4A10();
          v30 = sub_2318D5A54();
          if (os_log_type_enabled(v29, v30))
          {
            v31 = swift_slowAlloc();
            v75 = (char *)swift_slowAlloc();
            v78[0] = (uint64_t)v75;
            *(_DWORD *)v31 = 136315394;
            v32 = sub_2318D63CC();
            v77 = sub_231851EBC(v32, v33, v78);
            sub_2318D5F70();
            swift_bridgeObjectRelease();
            *(_WORD *)(v31 + 12) = 2080;
            v74 = v4;
            v34 = *(_QWORD *)(v28 + 16);
            v35 = *(_QWORD *)(v28 + 24);
            swift_bridgeObjectRetain();
            v77 = sub_231851EBC(v34, v35, v78);
            sub_2318D5F70();
            swift_bridgeObjectRelease();
            sub_2317E83B4(v28);
            _os_log_impl(&dword_2317C8000, v29, v30, "%s Creating concept detail view controller for %s", (uint8_t *)v31, 0x16u);
            v36 = v75;
            swift_arrayDestroy();
            MEMORY[0x2348E77E8](v36, -1, -1);
            MEMORY[0x2348E77E8](v31, -1, -1);

            (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v3);
          }
          else
          {
            sub_2317E83B4(v28);

            (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
          }
          v63 = *(void **)(v76
                         + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
          sub_2318D4584();
          v64 = v26;
          v65 = v63;
          sub_2318D4578();
          sub_2318D4560();
          swift_release();
          sub_2318D4578();
          sub_2318D4548();
          swift_release();
          sub_2318D453C();
          swift_allocObject();
          sub_2318D4530();
          v66 = objc_allocWithZone((Class)sub_2318D43C8());
          v62 = (void *)sub_2318D43B0();
          sub_2317E7AD8(v62);

          v22 = (uint64_t)v69;
LABEL_18:

          sub_2317E83B4(v22);
          return;
        }
      }
      else
      {
        sub_2317E82B0((uint64_t)v78, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
      }
      v48 = v67;
      sub_2318D49E0();
      v49 = v71;
      sub_2317E8370(v22, v71);
      v50 = sub_2318D4A10();
      v51 = sub_2318D5A54();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = swift_slowAlloc();
        v75 = (char *)swift_slowAlloc();
        v78[0] = (uint64_t)v75;
        *(_DWORD *)v52 = 136315394;
        v53 = sub_2318D63CC();
        v77 = sub_231851EBC(v53, v54, v78);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 12) = 2080;
        v55 = *(_QWORD *)(v49 + 16);
        v56 = *(_QWORD *)(v49 + 24);
        swift_bridgeObjectRetain();
        v57 = v55;
        v22 = (uint64_t)v69;
        v77 = sub_231851EBC(v57, v56, v78);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        sub_2317E83B4(v49);
        _os_log_impl(&dword_2317C8000, v50, v51, "%s Could not get medication concept for %s: Defaulting to category view controller", (uint8_t *)v52, 0x16u);
        v58 = v75;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v58, -1, -1);
        MEMORY[0x2348E77E8](v52, -1, -1);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v67, v3);
      }
      else
      {
        sub_2317E83B4(v49);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v48, v3);
      }
      v59 = *(void **)(v76
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
      v60 = *(_QWORD *)(v76
                      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance);
      v61 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
      v62 = MedicationCategoryViewController.init(healthStore:provenance:)(v59, v60);
      sub_2317E7AD8(v62);
      goto LABEL_18;
    }
  }
  else
  {
    sub_2317E82B0((uint64_t)v78, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_2317E82B0((uint64_t)v13, qword_2541883A8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  v37 = v75;
  sub_2318D49E0();
  v38 = sub_2318D4A10();
  v39 = sub_2318D5A54();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v78[0] = v41;
    *(_DWORD *)v40 = 136315138;
    v42 = sub_2318D63CC();
    v77 = sub_231851EBC(v42, v43, v78);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v38, v39, "%s No medications data: Defaulting to category view controller", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v41, -1, -1);
    MEMORY[0x2348E77E8](v40, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v37, v3);
  v44 = *(void **)(v76 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
  v45 = *(_QWORD *)(v76 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance);
  v46 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  v47 = MedicationCategoryViewController.init(healthStore:provenance:)(v44, v45);
  sub_2317E7AD8(v47);

}

void sub_2317E7AD8(void *a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void *v27;

  v3 = objc_msgSend(v1, sel_childViewControllers);
  sub_2317E8228();
  v4 = sub_2318D5790();

  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    objc_msgSend(v1, sel_addChildViewController_, a1);
    v10 = objc_msgSend(v1, sel_view);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(a1, sel_view);
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v11, sel_addSubview_, v12);

        v14 = objc_msgSend(a1, sel_view);
        if (v14)
        {
          v15 = v14;
          v16 = objc_msgSend(v1, sel_view);
          if (v16)
          {
            v17 = v16;
            objc_msgSend(v16, sel_bounds);
            v19 = v18;
            v21 = v20;
            v23 = v22;
            v25 = v24;

            objc_msgSend(v15, sel_setFrame_, v19, v21, v23, v25);
            v26 = objc_msgSend(a1, sel_view);
            if (v26)
            {
              v27 = v26;
              objc_msgSend(v26, sel_setAutoresizingMask_, 18);

              objc_msgSend(a1, sel_didMoveToParentViewController_, v1);
              sub_2317E6EDC();
              return;
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v9 = sub_2318D6174();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2348E6E94](0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    v5 = *(id *)(v4 + 32);
  }
  v6 = v5;
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_willMoveToParentViewController_, 0);
  v7 = objc_msgSend(v6, sel_view);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_removeFromSuperview);

    objc_msgSend(v6, sel_removeFromParentViewController);
    goto LABEL_10;
  }
LABEL_23:
  __break(1u);
}

id sub_2317E7DA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsRoutingDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsRoutingDetailViewController()
{
  return objc_opt_self();
}

uint64_t sub_2317E7E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  swift_beginAccess();
  return sub_2317E8180(v3, a1);
}

uint64_t sub_2317E7E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];

  v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  swift_beginAccess();
  sub_2317E81D4(a1, v3);
  swift_endAccess();
  sub_2317E8180(v3, (uint64_t)v5);
  sub_2317E71C4((uint64_t)v5);
  sub_2317E82B0((uint64_t)v5, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
  return sub_2317E82B0(a1, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
}

void (*sub_2317E7F3C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  v3[5] = v1;
  v3[6] = v4;
  swift_beginAccess();
  return sub_2317E7F94;
}

void sub_2317E7F94(_QWORD **a1, char a2)
{
  _QWORD *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_2317E8180(v3[5] + v3[6], (uint64_t)v3);
    sub_2317E71C4((uint64_t)v3);
    sub_2317E82B0((uint64_t)v3, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
  }
  free(v3);
}

uint64_t sub_2317E7FF4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2317E06B8(*v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_pinnedContentManager, a1);
}

uint64_t sub_2317E801C(uint64_t a1, uint64_t a2)
{
  return sub_2317E82EC(&qword_255F255E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsRoutingDetailViewController, (uint64_t)&unk_2318D8A08);
}

id sub_2317E8048(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  id v8;
  id v9;
  _OWORD v11[2];
  uint64_t v12;
  objc_super v13;

  v7 = &v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore] = a1;
  sub_2317E06B8(a2, (uint64_t)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_pinnedContentManager]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance] = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for MedicationsRoutingDetailViewController();
  v8 = a1;
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  v9 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  sub_2317E71C4((uint64_t)v11);

  sub_2317D4B2C(a2);
  sub_2317E82B0((uint64_t)v11, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
  return v9;
}

unint64_t sub_2317E812C()
{
  unint64_t result;

  result = qword_255F255F8;
  if (!qword_255F255F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F255F8);
  }
  return result;
}

uint64_t sub_2317E8180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317E8264(0, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E81D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317E8264(0, (unint64_t *)&qword_255F255F0, (void (*)(uint64_t))sub_2317E812C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_2317E8228()
{
  unint64_t result;

  result = qword_255F25600;
  if (!qword_255F25600)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255F25600);
  }
  return result;
}

void sub_2317E8264(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2318D5F64();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2317E82B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2317E8264(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2317E82EC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2317E832C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E8370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317E83B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317E83F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v17;
  uint64_t v18;
  unint64_t v19;

  v18 = a2;
  v3 = sub_2318D2DC0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType, v18);
  v8 = v7;
  v9 = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v10 = v7;
    MEMORY[0x2348E6528]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2318D57B4();
    sub_2318D57D8();
    sub_2318D57A8();
    v9 = v19;
  }

  sub_2317D4194(0, (unint64_t *)&qword_25418B468, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = sub_2318D2C04();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2318D8680;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x24BE47410], v11);
  if (v9 >> 62)
  {
    sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
    v17 = a1;
    swift_bridgeObjectRetain();
    sub_2318D6168();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = a1;
    swift_bridgeObjectRetain();
    sub_2318D62C4();
    sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47918], v3);
  return sub_2318D2DCC();
}

_QWORD *sub_2317E863C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v57 = *v1;
  v58 = type metadata accessor for MedicationsGeneratorContext();
  v3 = *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64);
  v73 = *(_QWORD *)(v58 - 8);
  v74 = v3;
  MEMORY[0x24BDAC7A8](v58);
  v71 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v55 - v6;
  v7 = sub_2318D5B74();
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317EA3B8(0, &qword_2541894F8, (uint64_t (*)(uint64_t))sub_2317E9834, sub_2317E9898, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9438]);
  v59 = v9;
  v60 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v55 - v10;
  sub_2317E98F4();
  v63 = v12;
  v65 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E99DC();
  v16 = *(_QWORD *)(v15 - 8);
  v69 = v15;
  v70 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v61 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E9A90();
  v19 = *(_QWORD *)(v18 - 8);
  v76 = v18;
  v77 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E9B34();
  v22 = *(_QWORD *)(v21 - 8);
  v78 = v21;
  v79 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v72 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2318D2DE4();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1;
  v75 = v1;
  sub_2317E510C(a1, (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_context);
  v29 = (void *)sub_2318D2E14();
  sub_2317E83F0(v29, (uint64_t)v27);

  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))((uint64_t)v28 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain, v27, v24);
  v56 = a1;
  v30 = (void *)sub_2318D2E38();
  v81 = sub_2318D4914();
  v80 = sub_2317E9D48(a1);
  sub_2317E9834();
  v31 = MEMORY[0x24BDB9AE0];
  sub_2317EA690(0, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2317E9898();
  sub_2317E98B4(&qword_254189BF0, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v31, MEMORY[0x24BDB9AF8]);
  sub_2318D4F38();
  swift_release();
  swift_release();
  sub_2318D2E2C();
  v32 = v59;
  sub_2318D4C5C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v32);
  v33 = v62;
  sub_2318D5B5C();
  v81 = (uint64_t)v30;
  v34 = sub_2318D5B50();
  v35 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v64, 1, 1, v34);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  sub_2317CC4AC(&qword_254189848, (uint64_t (*)(uint64_t))sub_2317E98F4, MEMORY[0x24BDB97E0]);
  sub_2317DC754();
  v36 = v61;
  v37 = v63;
  sub_2318D4FC8();
  sub_2317EA18C(v35);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v68);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v37);
  v38 = v56;
  v39 = v71;
  sub_2317E510C(v56, v71);
  v40 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v41 = (v74 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  sub_2317EA1E4(v39, v42 + v40);
  *(_QWORD *)(v42 + v41) = v57;
  sub_2317D4B4C(0, &qword_2541881C0);
  sub_2317CC4AC(&qword_2541899B8, (uint64_t (*)(uint64_t))sub_2317E99DC, MEMORY[0x24BDB9920]);
  v43 = v66;
  v44 = v69;
  sub_2318D4F44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v44);
  sub_2317E9C88(0, &qword_254189FD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_2318D8680;
  v46 = v38;
  sub_2317E510C(v38, v39);
  v47 = type metadata accessor for MedicationsShareableModelGenerator();
  swift_allocObject();
  v48 = sub_2318708DC(v39, 1);
  *(_QWORD *)(v45 + 56) = v47;
  *(_QWORD *)(v45 + 64) = sub_2317CC4AC(&qword_254188A98, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsShareableModelGenerator, (uint64_t)&unk_2318DBEA4);
  *(_QWORD *)(v45 + 32) = v48;
  sub_2317CC4AC(&qword_254189748, (uint64_t (*)(uint64_t))sub_2317E9A90, MEMORY[0x24BDB96C0]);
  v49 = v72;
  v50 = v76;
  sub_2318D4FA4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v43, v50);
  sub_2317CC4AC(&qword_254189578, (uint64_t (*)(uint64_t))sub_2317E9B34, MEMORY[0x24BDB9530]);
  v51 = v78;
  v52 = sub_2318D4EA8();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v51);
  v81 = v52;
  sub_2317EA288();
  sub_2317CC4AC(&qword_254189AB0, (uint64_t (*)(uint64_t))sub_2317EA288, MEMORY[0x24BDB9AF8]);
  v53 = sub_2318D4F08();
  swift_release();

  sub_2317E518C(v46);
  result = v75;
  v75[2] = v53;
  return result;
}

uint64_t sub_2317E8D90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for MedicationsGeneratorContext();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - v10;
  v12 = sub_2318D4A1C();
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49D4();
  sub_2317E510C(a1, (uint64_t)v11);
  v15 = sub_2318D4A10();
  v16 = sub_2318D5A54();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v30 = v12;
    v18 = v17;
    v29 = swift_slowAlloc();
    v33 = v29;
    v34 = a2;
    *(_DWORD *)v18 = 136446722;
    swift_getMetatypeMetadata();
    v31 = a1;
    v19 = sub_2318D55E0();
    v34 = sub_231851EBC(v19, v20, &v33);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v34 = type metadata accessor for MedicationsShareableModelGenerator();
    sub_2317EA2FC();
    v21 = sub_2318D55E0();
    v34 = sub_231851EBC(v21, v22, &v33);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2082;
    v34 = sub_2318D2E14();
    v23 = sub_2318D5610();
    v34 = sub_231851EBC(v23, v24, &v33);
    a1 = v31;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    sub_2317E518C((uint64_t)v11);
    _os_log_impl(&dword_2317C8000, v15, v16, "[%{public}s]: Emitting %{public}s, for profile: %{public}s", (uint8_t *)v18, 0x20u);
    v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v25, -1, -1);
    MEMORY[0x2348E77E8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v30);
  }
  else
  {
    sub_2317E518C((uint64_t)v11);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v12);
  }
  sub_2317E510C(a1, (uint64_t)v9);
  v26 = type metadata accessor for MedicationsShareableModelGenerator();
  swift_allocObject();
  v27 = sub_2318708DC((uint64_t)v9, 0);
  a3[3] = v26;
  result = sub_2317CC4AC(&qword_254188A98, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsShareableModelGenerator, (uint64_t)&unk_2318DBEA4);
  a3[4] = result;
  *a3 = v27;
  return result;
}

uint64_t sub_2317E90D4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a3;
  v50 = a4;
  sub_2317EA690(0, &qword_255F25610, MEMORY[0x24BDB9E10]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - v9;
  v11 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D4A1C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_2318D49E0();
  sub_2317E510C(a2, (uint64_t)v13);
  v19 = v18;
  v20 = v18;
  v49 = v17;
  v21 = sub_2318D4A10();
  v22 = sub_2318D5A3C();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v47 = v14;
    v25 = v24;
    v46 = swift_slowAlloc();
    v52 = v46;
    *(_DWORD *)v25 = 136315650;
    v45 = v21;
    v26 = sub_2318D63CC();
    LODWORD(v48) = v23;
    v51 = sub_231851EBC(v26, v27, &v52);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v43 = v25 + 14;
    v28 = (void *)sub_2318D2E14();
    v29 = sub_2318D2C40();
    v44 = v15;
    v30 = v29;
    v31 = v10;
    v32 = v8;
    v33 = v7;
    v35 = v34;

    v51 = sub_231851EBC(v30, v35, &v52);
    sub_2318D5F70();
    v7 = v33;
    v8 = v32;
    v10 = v31;
    swift_bridgeObjectRelease();
    sub_2317E518C((uint64_t)v13);
    *(_WORD *)(v25 + 22) = 2080;
    v51 = (uint64_t)v18;
    v36 = v18;
    sub_2317D4B4C(0, (unint64_t *)&qword_25418B4A0);
    v37 = sub_2318D55EC();
    v51 = sub_231851EBC(v37, v38, &v52);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    v39 = v45;
    _os_log_impl(&dword_2317C8000, v45, (os_log_type_t)v48, "[%s]_%s: Error in observer query: %s", (uint8_t *)v25, 0x20u);
    v40 = v46;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v40, -1, -1);
    MEMORY[0x2348E77E8](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v47);
  }
  else
  {
    sub_2317E518C((uint64_t)v13);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v14);
  }
  sub_2318D4E18();
  sub_2317E98B4(&qword_255F25618, &qword_255F25610, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v41 = sub_2318D4F08();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v50 = v41;
  return result;
}

id sub_2317E94BC()
{
  id result;

  result = sub_2317E94D8();
  qword_25418FAB8 = (uint64_t)result;
  return result;
}

id sub_2317E94D8()
{
  void *ObjCClassFromMetadata;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  sub_2317CCC9C(0, &qword_254189EB0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 4);
  v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 5);
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 6);
  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2318D8AB0;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v2;
  *(_QWORD *)(v4 + 48) = v3;
  sub_2318D57A8();
  sub_2317CCC9C(0, &qword_25418B3F8);
  v5 = v1;
  v6 = v2;
  v7 = v3;
  v8 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v8);

  v10 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v10, v9);

  return v11;
}

uint64_t sub_2317E96A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain;
  v2 = sub_2318D2DE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2317E518C(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_context);
  return swift_deallocClassInstance();
}

uint64_t sub_2317E9710()
{
  return type metadata accessor for MedicationsShareableModelPipeline();
}

uint64_t type metadata accessor for MedicationsShareableModelPipeline()
{
  uint64_t result;

  result = qword_2541889C0;
  if (!qword_2541889C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317E9754()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2318D2DE4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2317E97EC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain;
  v4 = sub_2318D2DE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2317E9834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B390)
  {
    sub_2318D4974();
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B390);
  }
}

uint64_t sub_2317E9898()
{
  return sub_2317CC4AC(&qword_25418B388, (uint64_t (*)(uint64_t))sub_2317E9834, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_2317E98B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2317EA690(255, a2, a3);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2317E98F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189850)
  {
    sub_2317EA3B8(255, &qword_2541894F8, (uint64_t (*)(uint64_t))sub_2317E9834, sub_2317E9898, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9438]);
    sub_2317E9974();
    v0 = sub_2318D4D10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189850);
  }
}

unint64_t sub_2317E9974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541894F0;
  if (!qword_2541894F0)
  {
    sub_2317EA3B8(255, &qword_2541894F8, (uint64_t (*)(uint64_t))sub_2317E9834, sub_2317E9898, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9438]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9450], v1);
    atomic_store(result, (unint64_t *)&qword_2541894F0);
  }
  return result;
}

void sub_2317E99DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541899C0)
  {
    sub_2317E98F4();
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    sub_2317CC4AC(&qword_254189848, (uint64_t (*)(uint64_t))sub_2317E98F4, MEMORY[0x24BDB97E0]);
    sub_2317DC754();
    v0 = sub_2318D4D40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541899C0);
  }
}

void sub_2317E9A90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189750)
  {
    sub_2317E99DC();
    sub_2317D4B4C(255, &qword_2541881C0);
    sub_2317CC4AC(&qword_2541899B8, (uint64_t (*)(uint64_t))sub_2317E99DC, MEMORY[0x24BDB9920]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189750);
  }
}

void sub_2317E9B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189580)
  {
    sub_2317E9BFC();
    sub_2317E9A90();
    sub_2317CC4AC(&qword_2541899D8, (uint64_t (*)(uint64_t))sub_2317E9BFC, MEMORY[0x24BDB9970]);
    sub_2317CC4AC(&qword_254189748, (uint64_t (*)(uint64_t))sub_2317E9A90, MEMORY[0x24BDB96C0]);
    v0 = sub_2318D4CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189580);
  }
}

void sub_2317E9BFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541899E0)
  {
    sub_2317E9C88(255, &qword_254189D38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317E9CF0();
    v0 = sub_2318D4D58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541899E0);
  }
}

void sub_2317E9C88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2317D4B4C(255, &qword_2541881C0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2317E9CF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189D40;
  if (!qword_254189D40)
  {
    sub_2317E9C88(255, &qword_254189D38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254189D40);
  }
  return result;
}

uint64_t sub_2317E9D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v2 = type metadata accessor for MedicationsGeneratorContext();
  v33 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D59F4();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317EA334();
  v40 = v7;
  v38 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317EA3B8(0, &qword_2541897D0, v9, sub_2317EA480, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730]);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - v11;
  sub_2317CDA94(0, &qword_254189C58, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - v16;
  if ((sub_2318D2E08() & 1) != 0)
  {
    sub_2318D2DFC();
    sub_2317D4B08(v42, v42[3]);
    v19 = (void *)sub_2318D2D84();
    sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_2318D8530;
    if (qword_254187930 != -1)
      swift_once();
    v21 = (void *)qword_25418FAB8;
    *(_QWORD *)(v20 + 32) = qword_25418FAB8;
    v41 = v20;
    sub_2318D57A8();
    v22 = v21;
    sub_2318D5A0C();

    swift_bridgeObjectRelease();
    sub_2317D4B2C((uint64_t)v42);
    sub_2317CC4AC(&qword_254189EA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    v23 = v34;
    sub_2318D4F44();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v4);
    v24 = v35;
    sub_2317E510C(a1, v35);
    v25 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v26 = swift_allocObject();
    sub_2317EA1E4(v24, v26 + v25);
    *(_QWORD *)(v26 + ((v3 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v39;
    v27 = MEMORY[0x24BDB9AE0];
    sub_2317EA690(0, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2317EA480();
    sub_2317E98B4(&qword_254189BF0, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v27, MEMORY[0x24BDB9AF8]);
    v28 = v40;
    sub_2318D4F50();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v28);
    sub_2317EA5C4();
    v29 = v37;
    v18 = sub_2318D4F08();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v29);
  }
  else
  {
    sub_2318D4E0C();
    sub_2317EA62C();
    v18 = sub_2318D4F08();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v18;
}

uint64_t sub_2317EA18C(uint64_t a1)
{
  uint64_t v2;

  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317EA1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317EA228@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_2317E8D90(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_2317EA288()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189AB8)
  {
    sub_2317D4B4C(255, &qword_2541881C0);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189AB8);
  }
}

unint64_t sub_2317EA2FC()
{
  unint64_t result;

  result = qword_254188B78;
  if (!qword_254188B78)
  {
    type metadata accessor for MedicationsShareableModelGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254188B78);
  }
  return result;
}

void sub_2317EA334()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541897A0)
  {
    sub_2318D59F4();
    sub_2317CC4AC(&qword_254189EA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541897A0);
  }
}

void sub_2317EA3B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  if (!*a2)
  {
    v9 = a3(255);
    v10 = MEMORY[0x24BDB9AE0];
    sub_2317EA690(255, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    v14[0] = v9;
    v14[1] = v11;
    v14[2] = a4();
    v14[3] = sub_2317E98B4(&qword_254189BF0, &qword_254189BF8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v10, MEMORY[0x24BDB9AF8]);
    v12 = a5(a1, v14);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t sub_2317EA480()
{
  return sub_2317CC4AC(&qword_254189798, (uint64_t (*)(uint64_t))sub_2317EA334, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2317EA4A0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (int *)type metadata accessor for MedicationsGeneratorContext();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317EA564@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2317E90D4(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_2317EA5C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541897C8;
  if (!qword_2541897C8)
  {
    sub_2317EA3B8(255, &qword_2541897D0, (uint64_t (*)(uint64_t))sub_2317EA334, sub_2317EA480, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB9730]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9740], v1);
    atomic_store(result, (unint64_t *)&qword_2541897C8);
  }
  return result;
}

unint64_t sub_2317EA62C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254187938;
  if (!qword_254187938)
  {
    sub_2317CDA94(255, &qword_254189C58, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_254187938);
  }
  return result;
}

void sub_2317EA690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for MedicationsArticleTileDataController()
{
  return &type metadata for MedicationsArticleTileDataController;
}

double sub_2317EA700@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  ValueMetadata *v22;
  uint64_t v23;

  v6 = sub_2318D4A1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v10 = sub_2318D61D4();
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_2318D49E0();
    swift_bridgeObjectRetain_n();
    v11 = sub_2318D4A10();
    v12 = sub_2318D5A3C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v20 = v14;
      *(_DWORD *)v13 = 136446466;
      v19[1] = v13 + 4;
      v22 = &type metadata for MedicationsArticleTileDataController;
      v23 = v14;
      sub_2317EA984();
      v21 = v6;
      v15 = sub_2318D55E0();
      v22 = (ValueMetadata *)sub_231851EBC(v15, v16, &v23);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      v22 = (ValueMetadata *)sub_231851EBC(a1, a2, &v23);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2317C8000, v11, v12, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v13, 0x16u);
      v17 = v20;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v17, -1, -1);
      MEMORY[0x2348E77E8](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    *(_QWORD *)(a3 + 24) = &type metadata for MedicationsArticleDataProvider;
    *(_QWORD *)(a3 + 32) = sub_2317EA9BC();
    *(_QWORD *)(a3 + 40) = sub_2317EAA00();
  }
  return result;
}

unint64_t sub_2317EA984()
{
  unint64_t result;

  result = qword_255F25620;
  if (!qword_255F25620)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F25620);
  }
  return result;
}

unint64_t sub_2317EA9BC()
{
  unint64_t result;

  result = qword_25418B310;
  if (!qword_25418B310)
  {
    result = MEMORY[0x2348E7734](&unk_2318D9258, &type metadata for MedicationsArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25418B310);
  }
  return result;
}

unint64_t sub_2317EAA00()
{
  unint64_t result;

  result = qword_25418B318;
  if (!qword_25418B318)
  {
    result = MEMORY[0x2348E7734](&unk_2318D91F0, &type metadata for MedicationsArticleDataProvider);
    atomic_store(result, (unint64_t *)&qword_25418B318);
  }
  return result;
}

uint64_t type metadata accessor for CHRAddAccountFeedItemViewController()
{
  uint64_t result;

  result = qword_25418B378;
  if (!qword_25418B378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317EAA80()
{
  return swift_initClassMetadata2();
}

void sub_2317EAAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v1 = sub_2318D3C00();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(v0 + qword_254189328);
  v6 = (void *)sub_2318D31B0();

  sub_2318D3D98();
  v7 = (void *)sub_2318D3BF4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setPresentingViewController_, v7);

  objc_msgSend(v6, sel_present);
  sub_2318D3108();
  v8 = (void *)sub_2318D30FC();
  sub_2318D30F0();

}

void sub_2317EABE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void (*v9)(char *, uint64_t);
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v1 = sub_2318D342C();
  v16 = *(_QWORD *)(v1 - 8);
  v17 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D3C00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D30D8();
  v8 = (void *)sub_2318D30C0();
  sub_2318D3D98();
  sub_2318D3BE8();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_2317D4B08(v18, v19);
  v10 = (void *)sub_2318D3BB8();
  v11 = (void *)sub_2318D30CC();

  sub_2317D4B2C((uint64_t)v18);
  v12 = *(id *)(v0 + qword_254189328);
  sub_2318D3D98();
  v13 = (void *)sub_2318D3BF4();
  v9(v7, v4);
  sub_2318D31A4();

  sub_2318D3108();
  v14 = (void *)sub_2318D30FC();
  sub_2318D3D98();
  sub_2318D3BE8();
  v9(v7, v4);
  sub_2317D4B08(v18, v19);
  sub_2318D3BC4();
  sub_2318D3414();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v17);
  sub_2317D4B2C((uint64_t)v18);
  sub_2318D30E4();

}

uint64_t sub_2317EAE1C(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_2318D3C00();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  v8 = qword_25418B370;
  sub_2318D2688();
  swift_allocObject();
  v9 = v7;
  *(_QWORD *)&v7[v8] = sub_2318D267C();
  v10 = qword_254189328;
  sub_2318D31C8();
  *(_QWORD *)&v9[v10] = sub_2318D31BC();
  *(_QWORD *)&v9[qword_25418B368] = 0;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = sub_2318D3DA4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v11;
}

uint64_t sub_2317EAF2C()
{
  uint64_t v0;

  swift_release();

  return swift_release();
}

id sub_2317EAF68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHRAddAccountFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2317EAF9C(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t sub_2317EAFE4()
{
  return type metadata accessor for CHRAddAccountFeedItemViewController();
}

uint64_t sub_2317EAFEC()
{
  return sub_2317CC4AC(&qword_254187F78, MEMORY[0x24BE42BF8], MEMORY[0x24BE42BE8]);
}

uint64_t sub_2317EB018()
{
  return sub_2317CC4AC(&qword_254187900, (uint64_t (*)(uint64_t))type metadata accessor for CHRAddAccountFeedItemViewController, (uint64_t)&unk_2318D8BE0);
}

void sub_2317EB04C()
{
  id v0;

  sub_2318D3108();
  v0 = (id)sub_2318D30FC();
  sub_2318D30F0();

}

uint64_t HKMedicationUserDomainConcept.makeListContentConfiguration()()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t (*v16)(_QWORD *, _QWORD);
  _QWORD v18[4];

  sub_2318D4B9C();
  v18[0] = v0;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  sub_2318D480C();
  sub_2318D4BA8();
  sub_2317EB2FC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2318D8510;
  v2 = sub_2318D5D90();
  v4 = v3;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v3;
  v6 = sub_2318D5D84();
  v7 = v5;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v5;
  if (!v4)
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v5)
      goto LABEL_12;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v8 = sub_2317EBDA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_2317EBDA4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v10 + 1;
  v11 = &v8[2 * v10];
  v11[4] = v2;
  v11[5] = v4;
  if (v7)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_2317EBDA4(0, v8[2] + 1, 1, v8);
    v13 = v8[2];
    v12 = v8[3];
    if (v13 >= v12 >> 1)
      v8 = sub_2317EBDA4((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
    v8[2] = v13 + 1;
    v14 = &v8[2 * v13];
    v14[4] = v6;
    v14[5] = v7;
  }
LABEL_12:
  swift_release();
  sub_2317CDA94(0, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317EB368();
  sub_2318D5538();
  swift_bridgeObjectRelease();
  sub_2318D4B18();
  v15 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor, v8);
  v16 = (uint64_t (*)(_QWORD *, _QWORD))sub_2318D4B60();
  sub_2318D4B30();
  return v16(v18, 0);
}

void sub_2317EB2FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25640)
  {
    sub_2317CDA94(255, &qword_254189D10, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25640);
  }
}

unint64_t sub_2317EB368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189E30;
  if (!qword_254189E30)
  {
    sub_2317CDA94(255, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254189E30);
  }
  return result;
}

void sub_2317EB3C8(uint64_t a1, uint64_t a2, char a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  BOOL v9;
  void *v10;
  char **v11;
  id v12;
  id v13;
  id v14;

  sub_2318D5EF8();
  sub_2318D5EBC();
  v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 2);
  v5 = (void *)sub_2318D558C();
  v6 = (void *)objc_opt_self();
  v14 = objc_msgSend(v6, sel_systemImageNamed_withConfiguration_, v5, v4);

  v7 = (void *)sub_2318D558C();
  v8 = objc_msgSend(v6, sel_systemImageNamed_, v7);

  v9 = (a3 & 1) == 0;
  if ((a3 & 1) != 0)
    v10 = v14;
  else
    v10 = v8;
  if (v9)
    v11 = &selRef_systemGreenColor;
  else
    v11 = &selRef_tintColor;
  v12 = v10;
  sub_2318D5EEC();
  v13 = objc_msgSend((id)objc_opt_self(), *v11);
  sub_2318D5ED4();

}

void sub_2317EB52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_2317D4194(0, &qword_25418B0F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBD1F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v18 - v2;
  v4 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel);
  if (v5)
  {
    v6 = *(void **)(v4 + 8);
    *((_QWORD *)&v19 + 1) = sub_2318D4BD8();
    v20 = MEMORY[0x24BEBC5F0];
    sub_2317DBF6C((uint64_t *)&v18);
    v7 = v5;
    v8 = v6;
    HKMedicationUserDomainConcept.makeListContentConfiguration()();
    v9 = v8;
    sub_2318D4BB4();

  }
  else
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
  }
  MEMORY[0x2348E6858](&v18);
  v10 = sub_2317EB6CC();
  if (*(_QWORD *)v4)
  {
    v11 = *(void **)(v4 + 8);
    v12 = *(_BYTE *)(v4 + 16) & 1;
    v13 = *(id *)v4;
    v14 = v11;
    sub_2317EB3C8((uint64_t)v14, v15, v12);

    v16 = sub_2318D5F1C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 0, 1, v16);
  }
  else
  {
    v17 = sub_2318D5F1C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1, v17);
  }
  sub_2318D5F34();

}

id sub_2317EB6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  sub_2317D4194(0, &qword_25418B0F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBD1F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - v3;
  v5 = sub_2318D5F1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView;
  v10 = *(void **)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView);
  if (v10)
  {
    v11 = *(id *)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView);
  }
  else
  {
    sub_2318D5EF8();
    sub_2318D5EBC();
    v12 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_2318D5F34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = v12;
    v11 = v12;

    v10 = 0;
  }
  v14 = v10;
  return v11;
}

void sub_2317EB84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void (*v10)(id);

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348E78A8](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel);
    if (v5)
    {
      v6 = *(void **)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel + 8);
      v7 = v5;
      v8 = v6;
      v9 = v7;
      sub_2317EE324(v5, v6);
      v10 = *(void (**)(id))&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
      if (v10)
      {
        swift_retain();
        v10(v9);
        sub_2317CD52C((uint64_t)v10);
      }

    }
    else
    {
      v9 = (id)v3;
    }

  }
}

void sub_2317EB9F8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = sub_2317EB6CC();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = (void *)objc_opt_self();
  sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2318D8520;
  v4 = sub_2317EB6CC();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v0, sel_leadingAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 7.0);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = sub_2317EB6CC();
  v9 = objc_msgSend(v8, sel_centerYAnchor);

  v10 = objc_msgSend(v0, sel_centerYAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v3 + 40) = v11;
  sub_2318D57A8();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B060);
  v12 = (id)sub_2318D5778();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v12);

}

id sub_2317EBCEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEditCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2317EBD70()
{
  return HKMedicationUserDomainConcept.makeListContentConfiguration()();
}

uint64_t sub_2317EBD90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418B168, type metadata accessor for MedicationDaySummaryViewModelChange);
}

_QWORD *sub_2317EBDA4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317CDA94(0, (unint64_t *)&qword_25418B470, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317ED0E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2317EBEC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25648;
  if (!qword_255F25648)
  {
    v1 = sub_2317CCC9C(255, (unint64_t *)&qword_25418B440);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255F25648);
  }
  return result;
}

uint64_t type metadata accessor for MedicationEditCell()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for MedicationEditCellViewModel(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationEditCellViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationEditCellViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationEditCellViewModel()
{
  return &type metadata for MedicationEditCellViewModel;
}

_QWORD *sub_2317EC0C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2317ECE78(a1, a2, a3, a4, (uint64_t)&unk_25418A018, (uint64_t)&type metadata for MedicationDoseEventDetails, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_2317CDA94, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_2317ED1D4);
}

_QWORD *sub_2317EC0E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2317EC6C0(a1, a2, a3, a4, &qword_254189FB0, (unint64_t *)&qword_254188180, MEMORY[0x24BE47AB0]);
}

_QWORD *sub_2317EC104(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317EE194();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2317ED530(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317EC220(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317D4194(0, &qword_255F256A0, (uint64_t (*)(uint64_t))sub_2317EDDFC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317ED658(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2317EC340(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_254189FC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40]);
}

uint64_t sub_2317EC354(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2317D4194(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2318D6144();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2317EDF14(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2317EC570(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_254189FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110]);
}

_QWORD *sub_2317EC584(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317CDA94(0, &qword_25418B180, MEMORY[0x24BEE1E08], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317ED75C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317EC6A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2317EC6C0(a1, a2, a3, a4, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798]);
}

_QWORD *sub_2317EC6C0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = a4[3];
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = a4[2];
    if (v11 <= v12)
      v13 = a4[2];
    else
      v13 = v11;
    if (v13)
    {
      sub_2317EE130(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v14 = (_QWORD *)swift_allocObject();
      v15 = j__malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v9 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4])
          memmove(v16, a4 + 4, 40 * v12);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2317ED84C(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317EC80C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317EDD94();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317ED960(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2317EC914(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418B148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB988]);
}

_QWORD *sub_2317EC928(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317D4194(0, &qword_255F256F0, (uint64_t (*)(uint64_t))sub_2317EE3C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2317EDA78(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317ECA60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317EE350();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317EDB80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2317ECB68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368]);
}

uint64_t sub_2317ECB7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_255F256C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

uint64_t sub_2317ECB90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418A028, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_2317ECBA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418B170, (uint64_t (*)(uint64_t))MEMORY[0x24BE45F88]);
}

uint64_t sub_2317ECBB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_255F256C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_2317ECBCC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317CDA94(0, &qword_25418A180, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2317ED2C8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317ECD08(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317CDA94(0, &qword_25418A010, (uint64_t)&type metadata for MedicationShareableData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4])
          memmove(v12, a4 + 4, 176 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2317EDCA4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2317ECE40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418B150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
}

_QWORD *sub_2317ECE54(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2317ECE78(a1, a2, a3, a4, (uint64_t)&unk_255F256B0, (uint64_t)sub_2317EDE88, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_2317D4194, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_2317EE02C);
}

_QWORD *sub_2317ECE78(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)), void (*a8)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v10 = (char)result;
  if ((a3 & 1) == 0)
  {
    v12 = a2;
    goto LABEL_8;
  }
  v11 = a4[3];
  v12 = v11 >> 1;
  if ((uint64_t)(v11 >> 1) >= a2)
    goto LABEL_8;
  if (v12 + 0x4000000000000000 >= 0)
  {
    v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v12 = a2;
LABEL_8:
    v13 = a4[2];
    if (v12 <= v13)
      v14 = a4[2];
    else
      v14 = v12;
    if (v14)
    {
      a7(0, a5, a6, MEMORY[0x24BEE3598]);
      v15 = (_QWORD *)swift_allocObject();
      v16 = j__malloc_size(v15);
      v17 = v16 - 32;
      if (v16 < 32)
        v17 = v16 - 17;
      v15[2] = v13;
      v15[3] = 2 * (v17 >> 4);
      v18 = v15 + 4;
      if ((v10 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v18 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v15 != a4 || v18 >= &a4[2 * v13 + 4])
          memmove(v18, a4 + 4, 16 * v13);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a8(0, v13, v18, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2317ECF9C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2317CDA94(0, &qword_25418A020, (uint64_t)&type metadata for MedicationLoggingHighlight, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2317EE208(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2317ED0BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, (unint64_t *)&qword_254189FA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
}

uint64_t sub_2317ED0D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2317EC354(a1, a2, a3, a4, &qword_25418A000, type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_2317ED0E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED1D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED2C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

id sub_2317ED3BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  objc_super v12;

  v3 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel];
  v3[16] = 0;
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView] = 0;
  if (a2)
  {
    v5 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MedicationEditCell();
  v6 = objc_msgSendSuper2(&v12, sel_initWithStyle_reuseIdentifier_, 0, v5);

  v7 = v6;
  sub_2317EB9F8();
  v8 = sub_2317EB6CC();
  sub_2317CCC9C(0, &qword_255F256D0);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (void *)sub_2318D5E8C();
  objc_msgSend(v8, sel_addAction_forControlEvents_, v10, 64, 0, 0, 0, sub_2317EE31C, v9);

  objc_msgSend(v7, sel_setSelectionStyle_, 0);
  return v7;
}

uint64_t sub_2317ED530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2317EE130(0, &qword_254188188, (unint64_t *)&qword_254188180, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED658(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2317EDE48();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED75C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED84C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_2317D4290(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317ED960(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2317D4290(0, &qword_255F25698);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317EDA78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_2317EE3C4();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317EDB80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_2317EE130(0, &qword_255F256E0, (unint64_t *)&qword_255F256E8, MEMORY[0x24BE42740], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317EDCA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 176 * a1 + 32;
    v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

void sub_2317EDD94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25690)
  {
    sub_2317D4290(255, &qword_255F25698);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25690);
  }
}

unint64_t sub_2317EDDFC()
{
  unint64_t result;

  result = qword_255F256A8;
  if (!qword_255F256A8)
  {
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_255F256A8);
  }
  return result;
}

unint64_t sub_2317EDE48()
{
  unint64_t result;

  result = qword_254187918;
  if (!qword_254187918)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_254187918);
  }
  return result;
}

void sub_2317EDE88()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F256B8)
  {
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B440);
    sub_2317CCC9C(255, &qword_25418B428);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F256B8);
  }
}

uint64_t sub_2317EDF14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317EE02C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2317EDE88();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

void sub_2317EE130(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2317D4290(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2317EE194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189FB8)
  {
    sub_2317EE130(255, &qword_254188188, (unint64_t *)&qword_254188180, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189FB8);
  }
}

uint64_t sub_2317EE208(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_2317EE2F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2317EE31C(uint64_t a1)
{
  uint64_t v1;

  sub_2317EB84C(a1, v1);
}

void sub_2317EE324(void *a1, void *a2)
{
  if (a1)
  {

  }
}

void sub_2317EE350()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F256D8)
  {
    sub_2317EE130(255, &qword_255F256E0, (unint64_t *)&qword_255F256E8, MEMORY[0x24BE42740], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F256D8);
  }
}

unint64_t sub_2317EE3C4()
{
  unint64_t result;

  result = qword_255F256F8;
  if (!qword_255F256F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, &qword_255F256F8);
  }
  return result;
}

_QWORD *sub_2317EE424(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  id v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[4];

  v57 = *v1;
  v3 = sub_2318D4A1C();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v54 - v6;
  v7 = sub_2318D2E50();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - v11;
  v13 = (int *)type metadata accessor for MedicationsGeneratorContext();
  v54 = *((_QWORD *)v13 - 1);
  v14 = *(_QWORD *)(v54 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v55 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18(v12, a1, v7);
  v62 = v18;
  v18(v17, (uint64_t)v12, v7);
  sub_2318D2DFC();
  sub_2317D4B08(v67, v67[3]);
  v19 = (void *)sub_2318D2D84();
  *(_QWORD *)&v17[v13[5]] = v19;
  v20 = v19;
  sub_2317D4B2C((uint64_t)v67);
  *(_QWORD *)&v17[v13[6]] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C28]), sel_initWithHealthStore_, v20);
  *(_QWORD *)&v17[v13[7]] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v20);
  sub_2318D49A4();
  *(_QWORD *)&v17[v13[9]] = sub_2318D4998();
  sub_2318D4584();
  sub_2318D4578();
  v21 = sub_2318D4560();
  swift_release();
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v65 = v7;
  v23 = v7;
  v24 = a1;
  v22(v12, v23);
  *(_QWORD *)&v17[v13[8]] = v21;
  v25 = sub_2318D2E20();
  v59 = v22;
  if ((v25 & 1) != 0)
  {
    sub_2317F1448((uint64_t)v17);
LABEL_8:
    v32 = v26;
LABEL_9:
    v30 = v64;
    goto LABEL_10;
  }
  if ((sub_2318D2E08() & 1) != 0)
  {
    v26 = sub_2317EF484((uint64_t)v17);
    goto LABEL_8;
  }
  v27 = (void *)sub_2318D2E14();
  if (!v27)
  {
    v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_9;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_type);
  v30 = v64;
  switch((unint64_t)v29)
  {
    case 1uLL:
      v31 = sub_2317EF680((uint64_t)v17);
      goto LABEL_20;
    case 2uLL:
      v31 = sub_2317F04E4((uint64_t)v17);
      goto LABEL_20;
    case 4uLL:
      v31 = sub_2317EFE64((uint64_t)v17);
LABEL_20:
      v32 = v31;

      break;
    default:

      v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
      break;
  }
LABEL_10:
  sub_2318D2E08();
  if ((sub_2318D2FDC() & 1) != 0)
  {
    v33 = sub_2318D582C();
    v34 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v56, 1, 1, v33);
    v35 = v55;
    sub_2317D404C((uint64_t)v17, v55, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v36 = (*(unsigned __int8 *)(v54 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = 0;
    v37[3] = 0;
    v37[4] = v58;
    sub_2317D40A8(v35, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    swift_retain();
    sub_23188BA78(v34, (uint64_t)&unk_255F25710, (uint64_t)v37);
    swift_release();
  }
  sub_2318D49E0();
  v38 = v63;
  v39 = v65;
  v62(v63, v24, v65);
  swift_bridgeObjectRetain_n();
  v40 = sub_2318D4A10();
  v41 = sub_2318D5A54();
  v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    v43 = swift_slowAlloc();
    v62 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
    v67[0] = (uint64_t)v62;
    *(_DWORD *)v43 = 136315650;
    LODWORD(v58) = v42;
    v44 = sub_2318D63CC();
    v66 = sub_231851EBC(v44, v45, v67);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2048;
    v46 = v32[2];
    swift_bridgeObjectRelease();
    v66 = v46;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 22) = 2080;
    v47 = (void *)sub_2318D2E14();
    v48 = sub_2318D2C34();
    v49 = v38;
    v51 = v50;

    v66 = sub_231851EBC(v48, v51, v67);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    v59(v49, v65);
    _os_log_impl(&dword_2317C8000, v40, (os_log_type_t)v58, "%s Returning %ld pipeline(s) for source profile %s", (uint8_t *)v43, 0x20u);
    v52 = v62;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v52, -1, -1);
    MEMORY[0x2348E77E8](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v64, v61);
  }
  else
  {

    swift_bridgeObjectRelease();
    v59(v38, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v61);
  }
  sub_2317CF774((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
  return v32;
}

uint64_t sub_2317EEA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2317F1604;
  return sub_2317EEAE0(a5);
}

uint64_t sub_2317EEAE0(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v2[26] = a1;
  v2[27] = v3;
  v2[28] = type metadata accessor for MedicationsGeneratorContext();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v4 = sub_2318D4A1C();
  v2[32] = v4;
  v2[33] = *(_QWORD *)(v4 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2317EEBA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  os_log_type_t type;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0[26];
  v2 = v0[31];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3DF0]), sel_initWithHealthStore_, *(_QWORD *)(v1 + *(int *)(v0[28] + 20)));
  v0[37] = v3;
  sub_2318D49E0();
  sub_2317D404C(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
  v4 = sub_2318D4A10();
  v5 = sub_2318D5A54();
  if (os_log_type_enabled(v4, v5))
  {
    v23 = v0[33];
    v24 = v0[32];
    v25 = v0[36];
    v20 = v0[31];
    v6 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26 = v22;
    *(_DWORD *)v6 = 136315394;
    v7 = sub_2318D63CC();
    v0[24] = sub_231851EBC(v7, v8, &v26);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    type = v5;
    v9 = (void *)sub_2318D2E14();
    v10 = sub_2318D2C34();
    v12 = v11;

    v0[25] = sub_231851EBC(v10, v12, &v26);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    sub_2317CF774(v20, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_2317C8000, v4, type, "[%s] Marking medication shards as required for first launch on profile: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v22, -1, -1);
    MEMORY[0x2348E77E8](v6, -1, -1);

    v13 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v13(v25, v24);
  }
  else
  {
    v14 = v0[36];
    v15 = v0[32];
    v16 = v0[33];
    sub_2317CF774(v0[31], (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);

    v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[38] = v13;
  v0[2] = v0;
  v0[3] = sub_2317EEE68;
  v17 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v18 = v0 + 10;
  v18[1] = 0x40000000;
  v18[2] = sub_2318A4FF0;
  v18[3] = &unk_25007D8B0;
  v18[4] = v17;
  objc_msgSend(v3, sel_markMedicationShardsAsRequiredOnFirstLaunchWithCompletion_, v18);
  return swift_continuation_await();
}

uint64_t sub_2317EEE68()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2317EEEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 208);
  sub_2318D49E0();
  sub_2317D404C(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
  v3 = sub_2318D4A10();
  v4 = sub_2318D5A54();
  if (os_log_type_enabled(v3, v4))
  {
    v21 = *(_QWORD *)(v0 + 280);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v19 = *(void **)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 240);
    v5 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v23 = v18;
    *(_DWORD *)v5 = 136315394;
    v6 = sub_2318D63CC();
    *(_QWORD *)(v0 + 176) = sub_231851EBC(v6, v7, &v23);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = (void *)sub_2318D2E14();
    v9 = sub_2318D2C34();
    v11 = v10;

    *(_QWORD *)(v0 + 184) = sub_231851EBC(v9, v11, &v23);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    sub_2317CF774(v17, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_2317C8000, v3, v4, "[%s] Marked medication shards as required for first launch on profile: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v18, -1, -1);
    MEMORY[0x2348E77E8](v5, -1, -1);

    v22(v21, v20);
  }
  else
  {
    v13 = *(void **)(v0 + 296);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v14 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 256);
    sub_2317CF774(*(_QWORD *)(v0 + 240), (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);

    v12(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2317EF138()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32[2];

  v1 = v0;
  v2 = (void *)v0[39];
  v3 = v0[29];
  v4 = v0[26];
  swift_willThrow();
  sub_2318D49E0();
  sub_2317D404C(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
  v5 = v2;
  v6 = v2;
  v7 = sub_2318D4A10();
  v8 = sub_2318D5A3C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (void *)v0[39];
    v30 = v0[34];
    v31 = (void (*)(uint64_t, uint64_t))v0[38];
    v28 = (void *)v0[37];
    v29 = v0[32];
    v26 = v0[29];
    type = v8;
    v10 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)v10 = 136315650;
    v11 = sub_2318D63CC();
    v0[19] = sub_231851EBC(v11, v12, v32);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_2318D6300();
    v0[20] = sub_231851EBC(v13, v14, v32);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    v15 = (void *)sub_2318D2E14();
    v16 = sub_2318D2C34();
    v18 = v17;

    v0[21] = sub_231851EBC(v16, v18, v32);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    sub_2317CF774(v26, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_2317C8000, v7, type, "[%s] Marking medication shards as required failed with error: %s on profile: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v27, -1, -1);
    MEMORY[0x2348E77E8](v10, -1, -1);

    v31(v30, v29);
  }
  else
  {
    v20 = (void (*)(uint64_t, uint64_t))v0[38];
    v19 = (void *)v0[39];
    v21 = v0[34];
    v22 = v1[32];
    v23 = v1[29];

    sub_2317CF774(v23, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

_QWORD *sub_2317EF484(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_2318D2E14();
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = v5;
  switch((unint64_t)objc_msgSend(v5, sel_type))
  {
    case 1uLL:
      v7 = sub_2317EF680(a1);
      sub_2317D4194(0, &qword_254189FB0, (uint64_t (*)(uint64_t))sub_2317F1128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2318D8680;
      sub_2317D404C(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
      v9 = type metadata accessor for CHRAddAccountGeneratorPipeline();
      swift_allocObject();
      v10 = sub_23188624C((uint64_t)v4);
      *(_QWORD *)(inited + 56) = v9;
      *(_QWORD *)(inited + 64) = sub_2317CC4AC(&qword_254189150, (uint64_t (*)(uint64_t))type metadata accessor for CHRAddAccountGeneratorPipeline, (uint64_t)&unk_2318DC748);
      *(_QWORD *)(inited + 32) = v10;
      v15 = v7;
      sub_231855C50(inited);

      return v15;
    case 2uLL:
      v12 = sub_2317F04E4(a1);
      goto LABEL_9;
    case 4uLL:
      v12 = sub_2317EFE64(a1);
LABEL_9:
      v13 = v12;

      result = v13;
      break;
    default:

      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2317EF680(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  unsigned int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67[2];
  _QWORD v68[5];
  uint64_t v69[39];
  uint64_t v70;

  v59 = *v1;
  v63 = sub_2318D2E50();
  v3 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D4A1C();
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D55BC();
  v12 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v13 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (v14
    && (v15 = (void *)sub_2318D558C(),
        v16 = objc_msgSend(v14, sel_BOOLForKey_, v15),
        v14,
        v15,
        v16))
  {
    sub_2318D49F8();
    v17 = sub_2318D4A10();
    v18 = sub_2318D5A54();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v67[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v68[0] = v59;
      swift_getMetatypeMetadata();
      v21 = sub_2318D55E0();
      v68[0] = sub_231851EBC(v21, v22, (uint64_t *)v67);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v17, v18, "[%s]: Minimal medications plugin enabled, returning nil for primary profile pipelines", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v20, -1, -1);
      MEMORY[0x2348E77E8](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_2317D4194(0, (unint64_t *)&qword_254189FB8, (uint64_t (*)(uint64_t))sub_2317F110C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8D90;
    sub_2317D404C(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v25 = type metadata accessor for MedicationsOnboardingGeneratorPipeline();
    swift_allocObject();
    v26 = sub_23188A0F8((uint64_t)v8);
    *(_QWORD *)(inited + 56) = v25;
    *(_QWORD *)(inited + 64) = sub_2317CC4AC(&qword_254188C48, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsOnboardingGeneratorPipeline, (uint64_t)&unk_2318DC9C8);
    *(_QWORD *)(inited + 32) = v26;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v28 = v63;
    v27(v5, a1, v63);
    v29 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
    swift_allocObject();
    v30 = sub_2318BFEA0((uint64_t)v5);
    *(_QWORD *)(inited + 96) = v29;
    *(_QWORD *)(inited + 104) = sub_2317CC4AC(&qword_254188B88, type metadata accessor for MedicationsCategoryGeneratorPipeline, (uint64_t)&unk_2318DDFBC);
    *(_QWORD *)(inited + 72) = v30;
    sub_2317D404C(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v31 = type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(0);
    swift_allocObject();
    v32 = sub_2318A3270((uint64_t)v8);
    *(_QWORD *)(inited + 136) = v31;
    *(_QWORD *)(inited + 144) = sub_2317CC4AC(&qword_254188DE0, type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline, (uint64_t)&unk_2318DD5B4);
    *(_QWORD *)(inited + 112) = v32;
    v27(v5, a1, v28);
    v33 = type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline();
    swift_allocObject();
    v34 = sub_2317D53E0((uint64_t)v5);
    *(_QWORD *)(inited + 176) = v33;
    *(_QWORD *)(inited + 184) = sub_2317CC4AC(&qword_254188D18, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline, (uint64_t)&unk_2318D858C);
    *(_QWORD *)(inited + 152) = v34;
    v27(v5, a1, v28);
    v35 = type metadata accessor for MedicationHighlightsGeneratorPipeline();
    swift_allocObject();
    v36 = sub_2318A9B3C((uint64_t)v5);
    *(_QWORD *)(inited + 216) = v35;
    *(_QWORD *)(inited + 224) = sub_2317CC4AC(&qword_2541893D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsGeneratorPipeline, (uint64_t)&unk_2318DD7D8);
    *(_QWORD *)(inited + 192) = v36;
    v70 = inited;
    v37 = sub_2317F04E4(a1);
    v38 = sub_2318553F4((uint64_t)v37);
    swift_bridgeObjectRelease();
    sub_231855AE0(v38);
    v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2317D4194(0, &qword_254189FF0, (uint64_t (*)(uint64_t))sub_2317F11F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v40 = swift_allocObject();
    v62 = xmmword_2318D8680;
    *(_OWORD *)(v40 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v40 + 56) = &type metadata for MedicationsArticleDataProvider;
    *(_QWORD *)(v40 + 64) = sub_2317EA9BC();
    *(_QWORD *)(v40 + 72) = sub_2317EAA00();
    sub_2317D4194(0, &qword_254189FB0, (uint64_t (*)(uint64_t))sub_2317F1128, v39);
    v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = v62;
    v27(v5, a1, v28);
    sub_2317F1250();
    v43 = v42;
    swift_allocObject();
    v44 = sub_2318D4458();
    *(_QWORD *)(v41 + 56) = v43;
    *(_QWORD *)(v41 + 64) = sub_2317CC4AC(&qword_254188200, (uint64_t (*)(uint64_t))sub_2317F1250, MEMORY[0x24BE3F870]);
    *(_QWORD *)(v41 + 32) = v44;
    v45 = sub_2318553F4(v41);
    swift_setDeallocating();
    sub_2317F1128();
    swift_arrayDestroy();
    sub_231855AE0(v45);
    v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v69[0] = MEMORY[0x24BEE4AF8];
    v46 = *(_QWORD *)(v70 + 16);
    if (v46)
    {
      v47 = v70 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_2317D404C(v47, (uint64_t)v68, (uint64_t (*)(_QWORD))sub_2317F110C);
        sub_2317D40A8((uint64_t)v68, (uint64_t)&v64, (uint64_t (*)(_QWORD))sub_2317F110C);
        if (v65)
        {
          sub_2317D4AF0(&v64, (uint64_t)v67);
          sub_2317D4AF0(v67, (uint64_t)&v64);
          v48 = (_QWORD *)v69[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v48 = sub_2317EC0E8(0, v48[2] + 1, 1, v48);
            v69[0] = (uint64_t)v48;
          }
          v50 = v48[2];
          v49 = v48[3];
          if (v50 >= v49 >> 1)
            v69[0] = (uint64_t)sub_2317EC0E8((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
          v51 = v65;
          v52 = v66;
          v53 = sub_2317F10E4((uint64_t)&v64, v65);
          MEMORY[0x24BDAC7A8](v53);
          v55 = (char *)&v58 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v56 + 16))(v55);
          sub_2317F117C(v50, (uint64_t)v55, v69, v51, v52);
          sub_2317D4B2C((uint64_t)&v64);
        }
        else
        {
          sub_2317CF774((uint64_t)&v64, (uint64_t (*)(_QWORD))sub_2317F110C);
        }
        v47 += 40;
        --v46;
      }
      while (v46);
      swift_bridgeObjectRelease();
      v23 = (_QWORD *)v69[0];
    }
    swift_bridgeObjectRelease();
  }
  return v23;
}

_QWORD *sub_2317EFE64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  unsigned int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52[2];
  _QWORD v53[5];
  _QWORD *v54;
  __int128 v55;
  _QWORD v56[5];
  _QWORD v57[5];

  v46 = *v1;
  v3 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D2E50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_2318D4A1C();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D55BC();
  v12 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v13 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (v14
    && (v15 = (void *)sub_2318D558C(),
        v16 = objc_msgSend(v14, sel_BOOLForKey_, v15),
        v14,
        v15,
        v16))
  {
    sub_2318D49F8();
    v17 = sub_2318D4A10();
    v18 = sub_2318D5A54();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v52[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v53[0] = v46;
      swift_getMetatypeMetadata();
      v21 = sub_2318D55E0();
      v53[0] = sub_231851EBC(v21, v22, (uint64_t *)v52);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v17, v18, "[%s]: Minimal medications plugin enabled, returning nil for deviceless profile pipelines", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v20, -1, -1);
      MEMORY[0x2348E77E8](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v48);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v55 = xmmword_2318D8510;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v24 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
    swift_allocObject();
    v25 = sub_2318BFEA0((uint64_t)v9);
    v56[3] = v24;
    v56[4] = sub_2317CC4AC(&qword_254188B88, type metadata accessor for MedicationsCategoryGeneratorPipeline, (uint64_t)&unk_2318DDFBC);
    v56[0] = v25;
    sub_2317D404C(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v26 = type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(0);
    swift_allocObject();
    v27 = sub_2318A3270((uint64_t)v5);
    v57[3] = v26;
    v57[4] = sub_2317CC4AC(&qword_254188DE0, type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline, (uint64_t)&unk_2318DD5B4);
    v57[0] = v27;
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2317D404C((uint64_t)v56, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_2317F110C);
    sub_2317D40A8((uint64_t)v53, (uint64_t)&v49, (uint64_t (*)(_QWORD))sub_2317F110C);
    if (v50)
    {
      sub_2317D4AF0(&v49, (uint64_t)v52);
      sub_2317D4AF0(v52, (uint64_t)&v49);
      v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v28 = sub_2317EC0E8(0, v28[2] + 1, 1, v28);
        v54 = v28;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v54 = sub_2317EC0E8((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v31 = v50;
      v32 = v51;
      v33 = sub_2317F10E4((uint64_t)&v49, v50);
      MEMORY[0x24BDAC7A8](v33);
      v35 = (char *)&v46 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v36 + 16))(v35);
      sub_2317F117C(v30, (uint64_t)v35, (uint64_t *)&v54, v31, v32);
      sub_2317D4B2C((uint64_t)&v49);
    }
    else
    {
      sub_2317CF774((uint64_t)&v49, (uint64_t (*)(_QWORD))sub_2317F110C);
    }
    sub_2317D404C((uint64_t)v57, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_2317F110C);
    sub_2317D40A8((uint64_t)v53, (uint64_t)&v49, (uint64_t (*)(_QWORD))sub_2317F110C);
    if (v50)
    {
      sub_2317D4AF0(&v49, (uint64_t)v52);
      sub_2317D4AF0(v52, (uint64_t)&v49);
      v37 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v37 = sub_2317EC0E8(0, v37[2] + 1, 1, v37);
        v54 = v37;
      }
      v39 = v37[2];
      v38 = v37[3];
      if (v39 >= v38 >> 1)
        v54 = sub_2317EC0E8((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
      v40 = v50;
      v41 = v51;
      v42 = sub_2317F10E4((uint64_t)&v49, v50);
      MEMORY[0x24BDAC7A8](v42);
      v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v45 + 16))(v44);
      sub_2317F117C(v39, (uint64_t)v44, (uint64_t *)&v54, v40, v41);
      sub_2317D4B2C((uint64_t)&v49);
    }
    else
    {
      sub_2317CF774((uint64_t)&v49, (uint64_t (*)(_QWORD))sub_2317F110C);
    }
    sub_2317F110C(0);
    swift_arrayDestroy();
    return v54;
  }
}

_QWORD *sub_2317F04E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[5];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v3 = *v1;
  v4 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2318D4A1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D55BC();
  v11 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v12 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

  if (v13
    && (v14 = (void *)sub_2318D558C(),
        v15 = objc_msgSend(v13, sel_BOOLForKey_, v14),
        v13,
        v14,
        v15))
  {
    sub_2318D49F8();
    v16 = sub_2318D4A10();
    v17 = sub_2318D5A54();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v38[0] = v19;
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)&v39 = v3;
      swift_getMetatypeMetadata();
      v20 = sub_2318D55E0();
      *(_QWORD *)&v39 = sub_231851EBC(v20, v21, v38);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v16, v17, "[%s]: Minimal medications plugin enabled, returning nil for shareable feed item pipelines", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v19, -1, -1);
      MEMORY[0x2348E77E8](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_2317D404C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MedicationsGeneratorContext);
    v23 = type metadata accessor for SharedMedicationsFeedItemPipeline();
    swift_allocObject();
    v24 = sub_2318C8240((uint64_t)v6);
    v40 = v23;
    v25 = sub_2317CC4AC(&qword_254188408, (uint64_t (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemPipeline, (uint64_t)&unk_2318DE8C4);
    v41 = v25;
    *(_QWORD *)&v39 = v24;
    sub_2317D4AF0(&v39, (uint64_t)v38);
    swift_retain();
    v22 = sub_2317EC0E8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v27 = v22[2];
    v26 = v22[3];
    if (v27 >= v26 >> 1)
      v22 = sub_2317EC0E8((_QWORD *)(v26 > 1), v27 + 1, 1, v22);
    v28 = sub_2317F10E4((uint64_t)v38, v38[3]);
    MEMORY[0x24BDAC7A8](v28);
    v30 = (uint64_t *)((char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v31 + 16))(v30);
    v32 = *v30;
    v36 = v23;
    v37 = v25;
    *(_QWORD *)&v35 = v32;
    v22[2] = v27 + 1;
    sub_2317D4AF0(&v35, (uint64_t)&v22[5 * v27 + 4]);
    sub_2317D4B2C((uint64_t)v38);
    swift_release();
  }
  return v22;
}

uint64_t sub_2317F08C0(const char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v1;
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D4A04();
  v8 = sub_2318D4A10();
  v9 = sub_2318D5A54();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = v3;
    v10 = swift_slowAlloc();
    v16 = a1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_2318D63CC();
    v18 = sub_231851EBC(v13, v14, &v19);
    v3 = v17;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v8, v9, v16, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v12, -1, -1);
    MEMORY[0x2348E77E8](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v3;
}

uint64_t sub_2317F0A60()
{
  sub_2317F08C0("[%{public}s] Plugin delegate is deallocated");
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsHealthPluginDelegate()
{
  return objc_opt_self();
}

uint64_t *sub_2317F0AA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2318D2E50();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v15 = a3[9];
    v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
    v17 = v10;
    v18 = v11;
    v19 = v14;
    swift_retain();
    v20 = v16;
  }
  return a1;
}

void sub_2317F0B78(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_release();
}

uint64_t sub_2317F0BEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v6 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v14 = a3[9];
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v9;
  v17 = v10;
  v18 = v13;
  swift_retain();
  v19 = v15;
  return a1;
}

uint64_t sub_2317F0C90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  v19 = a3[9];
  v20 = *(void **)(a2 + v19);
  v21 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  v22 = v20;

  return a1;
}

uint64_t sub_2317F0D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_2317F0DE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v6 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  v13 = a3[9];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  return a1;
}

uint64_t sub_2317F0E94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2317F0EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2318D2E50();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2317F0F1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2317F0F28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2318D2E50();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MedicationsGeneratorContext()
{
  uint64_t result;

  result = qword_254187920;
  if (!qword_254187920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2317F0FDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D2E50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2317F1064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for MedicationsHealthPluginDelegate();
  v2 = swift_allocObject();
  result = sub_2317F08C0("[%{public}s] Plugin delegate has been initialized");
  *a1 = v2;
  return result;
}

_QWORD *sub_2317F10A4(uint64_t a1)
{
  return sub_2317EE424(a1);
}

uint64_t sub_2317F10C4(uint64_t a1)
{
  return sub_2317E61D0(a1);
}

uint64_t sub_2317F10E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_2317F110C(uint64_t a1)
{
  sub_2317D4194(a1, &qword_254188188, (uint64_t (*)(uint64_t))sub_2317F1128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

unint64_t sub_2317F1128()
{
  unint64_t result;

  result = qword_254188180;
  if (!qword_254188180)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254188180);
  }
  return result;
}

uint64_t sub_2317F117C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_2317DBF6C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_2317D4AF0(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_2317F11F4()
{
  unint64_t result;

  result = qword_2541881F8;
  if (!qword_2541881F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541881F8);
  }
  return result;
}

void sub_2317F1250()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254188208)
  {
    sub_2317F12A8();
    v0 = sub_2318D4464();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254188208);
  }
}

unint64_t sub_2317F12A8()
{
  unint64_t result;

  result = qword_254188B80;
  if (!qword_254188B80)
  {
    result = MEMORY[0x2348E7734](&unk_2318D8B58, &type metadata for MedicationsArticleTileDataController);
    atomic_store(result, (unint64_t *)&qword_254188B80);
  }
  return result;
}

uint64_t sub_2317F12EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for MedicationsGeneratorContext();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  v4 = v0 + v3;
  v5 = sub_2318D2E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317F13B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationsGeneratorContext() - 8) + 80);
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2317D31D8;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_2317F1604;
  return sub_2317EEAE0(v3);
}

void sub_2317F1448(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  unsigned int v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_2318D2E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_features);

  if (!v8)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v9 = objc_msgSend(v8, sel_stanley);

  if (v9)
  {
    v10 = (void *)sub_2318D2E14();
    v11 = (void *)sub_2318D2C58();
    v12 = sub_2318D2C4C();

    if ((v12 & 1) != 0)
    {
      sub_2317D4194(0, &qword_254189FB0, (uint64_t (*)(uint64_t))sub_2317F1128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_2318D8680;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      v14 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
      swift_allocObject();
      v15 = sub_2318BFEA0((uint64_t)v5);
      *(_QWORD *)(v13 + 56) = v14;
      *(_QWORD *)(v13 + 64) = sub_2317CC4AC(&qword_254188B88, type metadata accessor for MedicationsCategoryGeneratorPipeline, (uint64_t)&unk_2318DDFBC);
      *(_QWORD *)(v13 + 32) = v15;
    }
  }
}

uint64_t sub_2317F16C4()
{
  swift_getObjectType();
  sub_2318D63CC();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D6138();
  return 0;
}

uint64_t sub_2317F1758(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  swift_getObjectType();
  v3 = sub_2318D4A1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v7 = v1;
  v8 = sub_2318D4A10();
  v9 = sub_2318D5A54();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v22 = v4;
    v11 = v10;
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136446722;
    v24 = 0;
    v25 = 0xE000000000000000;
    v26 = v12;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v23 = v7;
    sub_2318D6138();
    v24 = sub_231851EBC(v24, v25, &v26);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    v20 = v3;
    *(_WORD *)(v11 + 12) = 2082;
    LOBYTE(v24) = a1;
    v13 = sub_2318D55E0();
    v24 = sub_231851EBC(v13, v14, &v26);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    LOBYTE(v24) = *((_BYTE *)v7
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
    v15 = sub_2318D55E0();
    v24 = sub_231851EBC(v15, v16, &v26);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v8, v9, "[%{public}s] Changed state from %{public}s to %{public}s", (uint8_t *)v11, 0x20u);
    v17 = v21;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v17, -1, -1);
    MEMORY[0x2348E77E8](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v6, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_2317F1A40(uint64_t a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _OWORD *v26;
  char *v27;
  id v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t result;
  int *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void *v40;
  objc_class *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _OWORD *v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  id v53;
  objc_class *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  void *v71;
  __int128 v72;
  __int128 v73;
  char *v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  int *v86;
  __int128 v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _OWORD *v93;
  uint64_t v94;
  uint64_t v95;
  objc_super v96;
  objc_super v97;
  objc_super v98;

  v3 = v2;
  v93 = (_OWORD *)a1;
  *(_QWORD *)&v87 = swift_getObjectType();
  v5 = sub_2318D4A1C();
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CFFEC();
  v86 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)&v83 = (char *)&v82 - v11;
  sub_2317CE964(0);
  *(_QWORD *)&v84 = v12;
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v85 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D294C();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_2318D2A90();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_2318D54C0();
  v17 = *(_QWORD **)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v82 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v82 - v24;
  v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  v26 = &v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
  *v26 = 0u;
  v26[1] = 0u;
  v26[2] = 0u;
  v26[3] = 0u;
  v26[4] = 0u;
  v26[5] = 0u;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers] = MEMORY[0x24BEE4AF8];
  v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache] = a2;
  v27 = v3;
  v88 = a2;
  v28 = objc_msgSend(v88, sel_currentCalendar);
  sub_2318D2A3C();

  sub_2318D2940();
  sub_2318D5484();
  *(_QWORD *)&v82 = v27;
  v29 = &v27[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
  v30 = (void (*)(char *, char *, uint64_t))v17[4];
  v30(&v27[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today], v25, v16);
  sub_2318D543C();
  swift_beginAccess();
  v31 = (void (*)(char *, char *, uint64_t))v17[2];
  v31(v19, v29, v16);
  sub_2318D5460();
  v32 = (void (*)(char *, uint64_t))v17[1];
  v32(v19, v16);
  sub_2317CC4AC(&qword_254187A20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  v92 = v22;
  result = sub_2318D5568();
  if ((result & 1) != 0)
  {
    v34 = v86;
    v35 = (char *)v83;
    v36 = (char *)(v83 + v86[12]);
    v31((char *)v83, v92, v16);
    v30(v36, v25, v16);
    v37 = &v9[v34[12]];
    v31(v9, v35, v16);
    v31(v37, v36, v16);
    v38 = v85;
    v30((char *)v85, v9, v16);
    v32(v37, v16);
    v39 = &v9[v34[12]];
    v30(v9, v35, v16);
    v30(v39, v36, v16);
    v30((char *)(v38 + *(int *)(v84 + 36)), v39, v16);
    v86 = (int *)v32;
    v32(v9, v16);
    v40 = (void *)v82;
    sub_2317F9B6C(v38, v82 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_indexableDays);

    v41 = (objc_class *)type metadata accessor for InteractiveTimelineCollectionViewLayout();
    v42 = (char *)objc_allocWithZone(v41);
    v43 = &v42[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight];
    *(_QWORD *)v43 = 0;
    v43[8] = 1;
    v44 = &v42[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize];
    *(_QWORD *)v44 = 0;
    *((_QWORD *)v44 + 1) = 0;
    v44[16] = 1;
    v45 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_computedAttributes;
    v46 = v93;
    sub_2317F9C38((uint64_t)v93);
    v47 = v42;
    *(_QWORD *)&v42[v45] = sub_2317FB2C4(MEMORY[0x24BEE4AF8]);
    v48 = &v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
    v49 = v46[1];
    *(_OWORD *)v48 = *v46;
    v50 = v46[2];
    v51 = v46[3];
    v52 = v46[5];
    *((_OWORD *)v48 + 4) = v46[4];
    *((_OWORD *)v48 + 5) = v52;
    *((_OWORD *)v48 + 2) = v50;
    *((_OWORD *)v48 + 3) = v51;
    *((_OWORD *)v48 + 1) = v49;
    sub_2317F9C38((uint64_t)v46);

    v98.receiver = v47;
    v98.super_class = v41;
    v53 = objc_msgSendSuper2(&v98, sel_init);
    sub_2317F9C60((uint64_t)v46);
    v54 = (objc_class *)v87;
    v97.receiver = v40;
    v97.super_class = (Class)v87;
    v55 = objc_msgSendSuper2(&v97, sel_initWithCollectionViewLayout_, v53);

    sub_2317D4194(0, (unint64_t *)&qword_255F27D10, (uint64_t (*)(uint64_t))sub_2317F9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_2318D8510;
    v57 = sub_2318D4BE4();
    v58 = MEMORY[0x24BEBC608];
    *(_QWORD *)(v56 + 32) = v57;
    *(_QWORD *)(v56 + 40) = v58;
    v59 = sub_2318D53E8();
    v60 = sub_2317CC4AC((unint64_t *)&unk_255F257D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE49D98], MEMORY[0x24BE49D90]);
    *(_QWORD *)(v56 + 48) = v59;
    *(_QWORD *)(v56 + 56) = v60;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2317F9D40();
    v61 = v55;
    sub_2318D5B20();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_2318D8680;
    v63 = sub_2318D4C50();
    v64 = MEMORY[0x24BEBCB18];
    *(_QWORD *)(v62 + 32) = v63;
    *(_QWORD *)(v62 + 40) = v64;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v65 = (char *)v61;
    sub_2318D5B20();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v96.receiver = v65;
    v96.super_class = v54;
    v66 = objc_msgSendSuper2(&v96, sel_collectionViewLayout);
    v67 = swift_dynamicCastClassUnconditional()
        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config;
    v68 = *(_QWORD *)(v67 + 48);
    v69 = *(id *)(v67 + 56);
    v84 = *(_OWORD *)v67;
    v83 = *(_OWORD *)(v67 + 16);
    v82 = *(_OWORD *)(v67 + 32);
    v87 = *(_OWORD *)(v67 + 64);
    v85 = *(_OWORD *)(v67 + 80);

    v70 = &v65[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
    v71 = *(void **)&v65[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
    v72 = v83;
    *(_OWORD *)v70 = v84;
    *((_OWORD *)v70 + 1) = v72;
    *((_OWORD *)v70 + 2) = v82;
    *((_QWORD *)v70 + 6) = v68;
    *((_QWORD *)v70 + 7) = v69;
    v73 = v85;
    *((_OWORD *)v70 + 4) = v87;
    *((_OWORD *)v70 + 5) = v73;

    v74 = v89;
    sub_2318D49EC();
    v75 = v65;
    v76 = sub_2318D4A10();
    v77 = sub_2318D5A30();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = swift_slowAlloc();
      v95 = v79;
      *(_DWORD *)v78 = 136446210;
      v80 = sub_2317F16C4();
      v94 = sub_231851EBC(v80, v81, &v95);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v76, v77, "[%{public}s] Initialized", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v79, -1, -1);
      MEMORY[0x2348E77E8](v78, -1, -1);

      sub_2317F9C60((uint64_t)v93);
    }
    else
    {

      sub_2317F9C60((uint64_t)v93);
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v74, v91);
    ((void (*)(char *, uint64_t))v86)(v92, v16);
    return (uint64_t)v75;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2317F2368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2348E78A8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_2317F23B8();

  }
}

void sub_2317F23B8()
{
  _BYTE *v0;
  objc_class *ObjectType;
  int v2;
  _BYTE *v3;
  id v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  int64x2_t v20;
  __int128 v21;
  id v22;
  __int128 v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  objc_super v28;
  CGRect v29;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  if (v2 == 4)
  {
    sub_2317F1758(4);
  }
  else
  {
    sub_2317F1758(v2);
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext()), sel_init);
    v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateSizeClass] = 1;
    v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_bounds);
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v29.origin.x = v7;
      v29.origin.y = v9;
      v29.size.width = v11;
      v29.size.height = v13;
      *(CGFloat *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_updatedHorizontalWidth] = CGRectGetWidth(v29);
      v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateItemHeight] = 1;
      v14 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
      v15 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                        + 56];
      if (v15)
      {
        v16 = *((_QWORD *)v14 + 11);
        v17 = *((_QWORD *)v14 + 10);
        v18 = *((_OWORD *)v14 + 4);
        v19 = *((_QWORD *)v14 + 6);
        v21 = *((_OWORD *)v14 + 1);
        v20 = *((int64x2_t *)v14 + 2);
        v22 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
        v23 = *(_OWORD *)v14;
      }
      else
      {
        v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1E0]);
        v15 = 0;
        v18 = xmmword_2318D8DA0;
        v20 = vdupq_n_s64(0x4041000000000000uLL);
        v21 = xmmword_2318D8DB0;
        v23 = xmmword_2318D8DC0;
        v19 = 0;
        v16 = 27;
        v17 = 0;
      }
      v24 = &v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig];
      v25 = *(void **)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                        + 56];
      *(_OWORD *)v24 = v23;
      *((_OWORD *)v24 + 1) = v21;
      *((int64x2_t *)v24 + 2) = v20;
      *((_QWORD *)v24 + 6) = v19;
      *((_QWORD *)v24 + 7) = v22;
      *((_OWORD *)v24 + 4) = v18;
      *((_QWORD *)v24 + 10) = v17;
      *((_QWORD *)v24 + 11) = v16;
      v26 = v15;

      v28.receiver = v0;
      v28.super_class = ObjectType;
      v27 = objc_msgSendSuper2(&v28, sel_collectionViewLayout);
      type metadata accessor for InteractiveTimelineCollectionViewLayout();
      objc_msgSend((id)swift_dynamicCastClassUnconditional(), sel_invalidateLayoutWithContext_, v3);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_2317F2604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  objc_super v7;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x2348E78A8](v3);
  if (v4)
  {
    v5 = v4;
    v7.receiver = v4;
    v7.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewController();
    v6 = objc_msgSendSuper2(&v7, sel_collectionViewLayout);

    type metadata accessor for InteractiveTimelineCollectionViewLayout();
    objc_msgSend((id)swift_dynamicCastClassUnconditional(), sel_invalidateLayout);

  }
}

id sub_2317F26CC()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  objc_class *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v6 = v0;
  v7 = sub_2318D4A10();
  v8 = sub_2318D5A54();
  if (os_log_type_enabled(v7, v8))
  {
    v15 = ObjectType;
    v9 = swift_slowAlloc();
    v14 = v2;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136446210;
    v13[1] = v10 + 4;
    v17 = 0;
    v18 = 0xE000000000000000;
    v19 = v11;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v16 = v6;
    sub_2318D6138();
    v17 = sub_231851EBC(v17, v18, &v19);
    sub_2318D5F70();

    ObjectType = v15;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v7, v8, "[%{public}s] Deinit", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v11, -1, -1);
    MEMORY[0x2348E77E8](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v20.receiver = v6;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_dealloc);
}

uint64_t sub_2317F29E0()
{
  return type metadata accessor for InteractiveTimelineCollectionViewController();
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewController()
{
  uint64_t result;

  result = qword_2541877A8;
  if (!qword_2541877A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2317F2A8C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  objc_super v23;

  v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = v5;
  objc_msgSend(v5, sel_setDecelerationRate_, *MEMORY[0x24BEBE728]);

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v7;
  objc_msgSend(v7, sel_setShowsHorizontalScrollIndicator_, 0);

  v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = v9;
  objc_msgSend(v9, sel_setShowsVerticalScrollIndicator_, 0);

  v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setBouncesVertically_, 0);

  v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v14 = v13;
  if (HKUICalendarLocaleIsRightToLeft())
    v15 = 4;
  else
    v15 = 3;
  objc_msgSend(v14, sel_setSemanticContentAttribute_, v15);

  v16 = objc_msgSend(v1, sel_collectionView);
  if (!v16)
    goto LABEL_20;
  v17 = v16;
  type metadata accessor for InteractiveTimelinePastCell(0);
  sub_2317CC4AC(&qword_25418AC50, type metadata accessor for InteractiveTimelinePastCell, (uint64_t)&unk_2318DB7AC);
  sub_2318D5AC0();

  v18 = objc_msgSend(v1, sel_collectionView);
  if (!v18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v19 = v18;
  type metadata accessor for InteractiveTimelineTodayCell(0);
  sub_2317CC4AC(&qword_25418AC68, type metadata accessor for InteractiveTimelineTodayCell, (uint64_t)&unk_2318DB784);
  sub_2318D5AC0();

  v20 = objc_msgSend(v1, sel_collectionView);
  if (v20)
  {
    v21 = v20;
    type metadata accessor for InteractiveTimelineFutureCell(0);
    sub_2317CC4AC(&qword_25418ACA0, type metadata accessor for InteractiveTimelineFutureCell, (uint64_t)&unk_2318DB75C);
    sub_2318D5AC0();

    sub_2318D5AE4();
    v22 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    objc_msgSend(v22, sel_addObserver_selector_name_object_, v1, sel_didReceiveSignificantTimeChangeNotification, *MEMORY[0x24BEBDFF0], 0);

    return;
  }
LABEL_22:
  __break(1u);
}

void sub_2317F2DF8(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_interactivePopGestureRecognizer);

    if (v5)
    {
      v6 = objc_msgSend(v5, sel_delegate);

      if (v6)
      {
        if (!swift_dynamicCastClass())
        {
          *(_QWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = v6;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          v7 = objc_msgSend(v1, sel_navigationController);
          if (v7)
          {
            v8 = v7;
            v9 = objc_msgSend(v7, sel_interactivePopGestureRecognizer);

            if (v9)
            {
              objc_msgSend(v9, sel_setDelegate_, v1);

            }
          }
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_2317F2F7C(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_interactivePopGestureRecognizer);

    if (v5)
    {
      v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache];
      swift_unknownObjectRetain();
      objc_msgSend(v5, sel_setDelegate_, v6);
      swift_unknownObjectRelease();

    }
  }
}

uint64_t sub_2317F307C(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  char v14;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v1;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, sel_didMoveToParentViewController_, a1);
  sub_2318D49EC();
  v8 = v1;
  v9 = sub_2318D4A10();
  v10 = sub_2318D5A54();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v17 = v4;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136446210;
    v16 = v12 + 4;
    v19 = 0;
    v20 = 0xE000000000000000;
    v21 = v13;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v18 = v8;
    sub_2318D6138();
    v19 = sub_231851EBC(v19, v20, &v21);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v9, v10, "[%{public}s] Did move to parent view controller", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v13, -1, -1);
    MEMORY[0x2348E77E8](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((_BYTE *)v8
  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay) = 1;
  v14 = *((_BYTE *)v8 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  *((_BYTE *)v8 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 0;
  return sub_2317F1758(v14);
}

void sub_2317F333C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  void *v27;
  unsigned __int8 v28;
  id v29;
  void *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t ObjectType;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  ObjectType = swift_getObjectType();
  sub_2317D4194(0, (unint64_t *)&unk_255F257A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v37 - v2;
  v4 = sub_2318D54C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)v37 - v8;
  v9 = sub_2318D4A1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v13 = v0;
  v14 = sub_2318D4A10();
  v15 = sub_2318D5A54();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v40 = v3;
    v41 = v4;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v38 = v10;
    v39 = v9;
    *(_DWORD *)v17 = 136446210;
    v46 = v18;
    v47 = 0;
    v19 = v18;
    v37[1] = v17 + 4;
    v48 = 0xE000000000000000;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v45 = v13;
    sub_2318D6138();
    v47 = sub_231851EBC(v47, v48, &v46);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v14, v15, "[%{public}s] Parent was reconfigured", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v19, -1, -1);
    v20 = v17;
    v3 = v40;
    v4 = v41;
    MEMORY[0x2348E77E8](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v21 = v13;
  v22 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] != 2)
    return;
  v23 = objc_msgSend(v13, sel_collectionView);
  if (!v23)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_isTracking);

  if ((v25 & 1) != 0)
    return;
  v26 = objc_msgSend(v13, sel_collectionView);
  if (!v26)
    goto LABEL_20;
  v27 = v26;
  v28 = objc_msgSend(v26, sel_isDecelerating);

  if ((v28 & 1) != 0)
    return;
  v29 = objc_msgSend(v13, sel_collectionView);
  if (!v29)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, sel_isDragging);

  if ((v31 & 1) == 0)
  {
    sub_2317F3818((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_2317DD39C((uint64_t)v3, (unint64_t *)&unk_255F257A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v43, v3, v4);
      v32 = MEMORY[0x2348E78A8](&v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
      if (v32)
      {
        v33 = v32 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
        swift_beginAccess();
        v34 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v42, v33, v4);
        sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
        LOBYTE(v33) = sub_2318D5580();
        v35 = *(void (**)(char *, uint64_t))(v5 + 8);
        v35(v34, v4);
        if ((v33 & 1) != 0)
        {
          v35(v43, v4);
          swift_unknownObjectRelease();
        }
        else
        {
          v36 = v21[v22];
          v21[v22] = 0;
          sub_2317F1758(v36);
          swift_unknownObjectRelease();
          v35(v43, v4);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v43, v4);
      }
    }
  }
}

id sub_2317F3818@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  id v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_2317D4194(0, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v31 - v4;
  v6 = sub_2318D2B80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = result;
  v15 = objc_msgSend(result, sel_superview);

  if (!v15)
  {
LABEL_10:
    v30 = sub_2318D54C0();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
  }
  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
    goto LABEL_12;
  v16 = result;
  objc_msgSend(result, sel_center);
  v18 = v17;
  v20 = v19;

  v21 = objc_msgSend(v1, sel_collectionView);
  objc_msgSend(v15, sel_convertPoint_toView_, v21, v18, v20);
  v23 = v22;
  v25 = v24;

  result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend(result, sel_indexPathForItemAtPoint_, v23, v25);

    if (v27)
    {
      sub_2318D2B38();

      v28 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v28(v5, v10, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v28(v12, v5, v6);
        sub_2318D2B44();
        sub_2318D54A8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        v29 = sub_2318D54C0();
        return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_2317DD39C((uint64_t)v5, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

char *sub_2317F3B10()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *result;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  objc_super v45;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_2318D2B80();
  v40 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2318D4A1C();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D54C0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  v45.receiver = v0;
  v45.super_class = ObjectType;
  result = (char *)objc_msgSendSuper2(&v45, sel_viewDidLayoutSubviews);
  v16 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (!v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state])
  {
    result = (char *)MEMORY[0x2348E78A8](&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
    if (result)
    {
      v37 = v2;
      v0[v16] = 1;
      v17 = result;
      sub_2317F1758(0);
      v36 = v17;
      v18 = &v17[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay];
      swift_beginAccess();
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v19(v14, v18, v8);
      sub_2318D49EC();
      v19(v12, v14, v8);
      v20 = v0;
      v21 = sub_2318D4A10();
      v22 = sub_2318D5A54();
      v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        v24 = swift_slowAlloc();
        v34 = v23;
        v25 = v24;
        v26 = swift_slowAlloc();
        v35 = v26;
        *(_DWORD *)v25 = 136446466;
        v32 = v25 + 4;
        v42 = 0;
        v43 = 0xE000000000000000;
        v44 = v26;
        sub_2318D63CC();
        v33 = v21;
        sub_2318D56A0();
        swift_bridgeObjectRelease();
        sub_2318D56A0();
        v41 = v20;
        sub_2318D6138();
        v42 = sub_231851EBC(v42, v43, &v44);
        sub_2318D5F70();

        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2082;
        v32 = v25 + 14;
        sub_2317CC4AC(&qword_255F257B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
        v27 = sub_2318D6288();
        v42 = sub_231851EBC(v27, v28, &v44);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        v29 = *(void (**)(char *, uint64_t))(v9 + 8);
        v29(v12, v8);
        v30 = v33;
        _os_log_impl(&dword_2317C8000, v33, (os_log_type_t)v34, "[%{public}s] Resetting scroll position to current day: %{public}s", (uint8_t *)v25, 0x16u);
        v31 = v35;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v31, -1, -1);
        MEMORY[0x2348E77E8](v25, -1, -1);

      }
      else
      {

        v29 = *(void (**)(char *, uint64_t))(v9 + 8);
        v29(v12, v8);

      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
      sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      sub_2318D5F94();
      MEMORY[0x2348E390C](v42 & ~(v42 >> 63), 0);
      sub_2317F3F74((uint64_t)v4, 0, 0, 0);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v37);
      return (char *)((uint64_t (*)(char *, uint64_t))v29)(v14, v8);
    }
  }
  return result;
}

void sub_2317F3F74(uint64_t a1, int a2, void (*a3)(uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  double Width;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  objc_class *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  char *v68;
  uint64_t v69;
  double v70;
  unint64_t v71;
  objc_super v72;
  CGRect v73;

  v5 = v4;
  v64 = a4;
  v67 = a3;
  v62 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = sub_2318D2B80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D4A1C();
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72.receiver = v5;
  v72.super_class = ObjectType;
  v63 = ObjectType;
  v15 = objc_msgSendSuper2(&v72, sel_collectionViewLayout);
  type metadata accessor for InteractiveTimelineCollectionViewLayout();
  v16 = (char *)swift_dynamicCastClassUnconditional();
  v17 = objc_msgSend(v16, sel_collectionView);
  if (v17)
  {
    v18 = v17;
    v19 = (double *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
    v20 = *v19;
    v21 = v19[3];
    v22 = (v20 + v21) * (double)sub_2318D2B68() + v21 * 0.5;
    objc_msgSend(v18, sel_bounds);
    Width = CGRectGetWidth(v73);

    v24 = v22 - Width * 0.5;
  }
  else
  {

    v24 = 0.0;
  }
  v25 = objc_msgSend(v5, sel_collectionView);
  if (!v25)
  {
    __break(1u);
    goto LABEL_23;
  }
  v26 = v25;
  objc_msgSend(v25, sel_contentInset);
  v28 = v27;

  v29 = objc_msgSend(v5, sel_collectionView);
  if (!v29)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v30 = v29;
  objc_msgSend(v29, sel_bounds);
  v32 = v31;

  v33 = objc_msgSend(v5, sel_collectionView);
  if (!v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v34 = v33;
  objc_msgSend(v33, sel_contentSize);
  v36 = v35;

  v37 = v36 - v24;
  v38 = fabs(v28) + v32;
  sub_2318D49EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v39 = v5;
  v40 = sub_2318D4A10();
  v41 = sub_2318D5A30();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v61 = v8;
    v43 = v42;
    v44 = swift_slowAlloc();
    v60 = v9;
    v45 = v44;
    v69 = v44;
    v70 = 0.0;
    *(_DWORD *)v43 = 136446722;
    v71 = 0xE000000000000000;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v68 = v39;
    sub_2318D6138();
    v70 = COERCE_DOUBLE(sub_231851EBC(*(uint64_t *)&v70, v71, &v69));
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2048;
    v46 = sub_2318D2B68();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
    v70 = *(double *)&v46;
    sub_2318D5F70();
    *(_WORD *)(v43 + 22) = 2082;
    v70 = v24;
    v71 = 0;
    type metadata accessor for CGPoint(0);
    v47 = sub_2318D55E0();
    v70 = COERCE_DOUBLE(sub_231851EBC(v47, v48, &v69));
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v40, v41, "[%{public}s] Scrolling to item %ld at offset %{public}s", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v45, -1, -1);
    MEMORY[0x2348E77E8](v43, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v66);
  v49 = v67;
  if (v37 >= v38)
  {
    if (v67)
    {
      v50 = swift_allocObject();
      v51 = v64;
      *(_QWORD *)(v50 + 16) = v49;
      *(_QWORD *)(v50 + 24) = v51;
      v52 = &v39[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers];
      swift_beginAccess();
      v53 = *(_QWORD **)v52;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v52 = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v53 = sub_2317EC220(0, v53[2] + 1, 1, v53);
        *(_QWORD *)v52 = v53;
      }
      v56 = v53[2];
      v55 = v53[3];
      if (v56 >= v55 >> 1)
      {
        v53 = sub_2317EC220((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
        *(_QWORD *)v52 = v53;
      }
      v53[2] = v56 + 1;
      v57 = &v53[2 * v56];
      v57[4] = sub_2317F8324;
      v57[5] = v50;
      swift_endAccess();
    }
    v58 = objc_msgSend(v39, sel_collectionView);
    if (v58)
    {
      v59 = v58;
      objc_msgSend(v58, sel_setContentOffset_animated_, v62 & 1, v24, 0.0);

      return;
    }
LABEL_25:
    __break(1u);
    return;
  }
  if (v67)
  {
    swift_retain();
    v49(1);
    sub_2317CD52C((uint64_t)v49);
  }
}

uint64_t sub_2317F459C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t (*v22)(uint64_t);
  char *v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t aBlock;
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void (*v39)();
  uint64_t v40;

  swift_getObjectType();
  v1 = sub_2318D5388();
  v32 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v31 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2318D53AC();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D4A1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v10 = v0;
  v11 = sub_2318D4A10();
  v12 = sub_2318D5A54();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v28 = v1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v27 = v6;
    v16 = v15;
    *(_DWORD *)v14 = 136446210;
    v34 = v15;
    aBlock = 0;
    v25 = v14 + 4;
    v36 = 0xE000000000000000;
    sub_2318D63CC();
    v26 = v7;
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v33 = v10;
    sub_2318D6138();
    aBlock = sub_231851EBC(aBlock, v36, &v34);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v11, v12, "[%{public}s] Resetting to today and reloading after significant time change", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v16, -1, -1);
    v17 = v14;
    v1 = v28;
    MEMORY[0x2348E77E8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v18 = (void *)sub_2318D5B80();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v10;
  v39 = sub_2317F9C0C;
  v40 = v19;
  aBlock = MEMORY[0x24BDAC760];
  v36 = 1107296256;
  v37 = sub_2317D1468;
  v38 = &unk_25007DAF8;
  v20 = _Block_copy(&aBlock);
  v21 = v10;
  swift_release();
  sub_2318D53A0();
  aBlock = MEMORY[0x24BEE4AF8];
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2317CC4AC((unint64_t *)&unk_25418B3B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2317D4194(0, (unint64_t *)&unk_25418B3D0, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317D3688();
  v23 = v31;
  sub_2318D6000();
  MEMORY[0x2348E6948](0, v5, v23, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v30);
}

void sub_2317F499C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;

  v2 = sub_2318D294C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2318D2A90();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2318D54C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache], sel_currentCalendar);
  sub_2318D2A3C();

  sub_2318D2940();
  sub_2318D5484();
  v9 = &a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  swift_endAccess();
  v10 = objc_msgSend(a1, sel_collectionView);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_reloadData);

  }
  else
  {
    __break(1u);
  }
}

id sub_2317F4B64()
{
  char *v0;
  char *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id result;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  _QWORD v60[2];
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, unint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)v60 - v4;
  v68 = sub_2318D2A90();
  v77 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v76 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for TimelineDay();
  v6 = MEMORY[0x24BDAC7A8](v67);
  v66 = (uint64_t)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v75 = (uint64_t)v60 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)v60 - v10;
  v11 = sub_2318D54C0();
  v73 = *(_QWORD *)(v11 - 8);
  v74 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2318D2B80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_255F25768, v17, v2);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v60 - v19;
  v82 = v1;
  result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    v22 = result;
    v23 = objc_msgSend(result, sel_indexPathsForVisibleItems);

    v24 = sub_2318D5790();
    v25 = *(_QWORD *)(v24 + 16);
    v26 = v13;
    v60[1] = v24;
    if (v25)
    {
      v70 = &v82[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider];
      v62 = &v82[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_indexableDays];
      v61 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache;
      v27 = v24 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
      v79 = *(_QWORD *)(v14 + 72);
      v80 = v28;
      v64 = v14;
      v63 = v16;
      v28(v20, v27, v13);
      while (1)
      {
        v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v47(v20, 0, 1, v26);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v26) == 1)
          break;
        v48 = v20;
        v49 = v20;
        v50 = v26;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v49, v26);
        result = objc_msgSend(v82, sel_collectionView);
        if (!result)
        {
          __break(1u);
          goto LABEL_20;
        }
        v51 = result;
        v52 = (void *)sub_2318D2B2C();
        v53 = objc_msgSend(v51, sel_cellForItemAtIndexPath_, v52);

        v26 = v50;
        if (v53)
        {
          v46 = v53;
          type metadata accessor for InteractiveTimelineDayCell(0);
          v81 = swift_dynamicCastClass();
          if (v81)
          {
            v54 = MEMORY[0x2348E78A8](v70);
            if (v54)
            {
              v55 = v54;
              v72 = v46;
              sub_2318D2B44();
              v56 = (uint64_t)v78;
              sub_2318D54A8();
              v71 = v55;
              swift_retain();
              v57 = sub_2317F8080(v56);
              v59 = v58;
              swift_release();
              if (v57 < 3)
              {
                sub_2317D41EC(v57);
                v29 = 0;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v29 = 2 - v59;
              }
              v30 = (uint64_t)v65;
              (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v65, v78, v74);
              v31 = objc_msgSend((id)objc_opt_self(), sel_redColor);
              v32 = v67;
              *(_QWORD *)(v30 + *(int *)(v67 + 20)) = v31;
              v33 = (_QWORD *)(v30 + *(int *)(v32 + 24));
              *v33 = 77;
              v33[1] = 0xE100000000000000;
              *(_BYTE *)(v30 + *(int *)(v32 + 28)) = v29;
              v34 = objc_msgSend(*(id *)&v82[v61], sel_currentCalendar);
              v35 = v76;
              sub_2318D2A3C();

              v36 = v81 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
              swift_beginAccess();
              sub_2317D404C(v36, v75, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
              v37 = v66;
              sub_2317D404C(v30, v66, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
              swift_beginAccess();
              sub_2317F8260(v37, v36);
              swift_endAccess();
              v38 = v77;
              v39 = (uint64_t)v69;
              v40 = v35;
              v41 = v68;
              (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v69, v40, v68);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v41);
              v42 = (void *)v81;
              v43 = v81 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
              swift_beginAccess();
              sub_2317F82A4(v39, v43);
              swift_endAccess();
              v84 = 0x7865646E49796144;
              v85 = 0xE90000000000003ALL;
              v83 = sub_2318D549C();
              sub_2318D6288();
              sub_2318D56A0();
              swift_bridgeObjectRelease();
              v44 = (void *)sub_2318D558C();
              swift_bridgeObjectRelease();
              objc_msgSend(v42, sel_setAccessibilityIdentifier_, v44);

              v45 = v75;
              sub_23185CDE0(v75);
              sub_2317CF774(v45, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
              swift_unknownObjectRelease();
              (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v41);
              sub_2317CF774(v30, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
              (*(void (**)(char *, uint64_t))(v73 + 8))(v78, v74);
              v14 = v64;
              v16 = v63;
              v26 = v50;
              v46 = v72;
            }
          }

        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
        v27 += v79;
        --v25;
        v20 = v48;
        if (!v25)
          goto LABEL_17;
        v80(v48, v27, v26);
      }
    }
    else
    {
      v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
LABEL_17:
      v47(v20, 1, 1, v26);
    }
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_2317F52B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v2 = v1;
  v33 = a1;
  sub_2317D4194(0, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (uint64_t)&v30 - v6;
  v7 = sub_2318D54C0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v30 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  sub_2318D2B44();
  sub_2318D54A8();
  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v17(v14, v16, v7);
  v18 = (char *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today);
  swift_beginAccess();
  v17(v11, v18, v7);
  sub_2317E59E8(v14, v11);
  v19 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_2318D2B2C();
  v21 = objc_msgSend(v33, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v19, v20);

  type metadata accessor for InteractiveTimelineDayCell(0);
  v22 = swift_dynamicCastClassUnconditional();
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) != 2)
    goto LABEL_8;
  v23 = MEMORY[0x2348E78A8](v2+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider);
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + 24) + *(_QWORD *)(**(_QWORD **)(v23 + 24) + 168);
    swift_beginAccess();
    v25 = v32;
    sub_2317F9B14(v24, v32, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_2317CE964(0);
    v25 = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v32, 1, 1, v26);
  }
  sub_2317CE964(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v25, 1, v27))
  {
    sub_2317F5848((uint64_t)v16);
    sub_2317F5650(v25);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    return v22;
  }
  v28 = v31;
  sub_2317F9B14(v25, v31, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
  sub_2317F5650(v28);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
  sub_2317DD39C(v25, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
  return v22;
}

uint64_t sub_2317F5650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  sub_2317D4194(0, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  sub_2317CE964(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317F9B14(a1, (uint64_t)v8, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_2317DD39C(a1, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
    return sub_2317DD39C((uint64_t)v8, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
  }
  else
  {
    sub_2317F9B6C((uint64_t)v8, (uint64_t)v13);
    if (MEMORY[0x2348E78A8](v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider))
    {
      sub_2317D404C((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_2317CE964);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      sub_2317CE6CC((uint64_t)v6);
      swift_unknownObjectRelease();
    }
    sub_2317DD39C(a1, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
    return sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
  }
}

uint64_t sub_2317F5848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t result;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;

  v2 = v1;
  sub_2317CFFEC();
  v53 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v49 - v7;
  sub_2317CE964(0);
  v9 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v49 - v12;
  v14 = sub_2318D54C0();
  v15 = *(_QWORD **)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v51 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v49 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v49 - v20;
  sub_2317CC4AC(&qword_254187A20, v22, MEMORY[0x24BDD24A8]);
  v23 = sub_2318D5568();
  v24 = a1;
  v57 = (void (*)(char *, uint64_t, uint64_t))v15[2];
  v57(v21, a1, v14);
  v25 = v2;
  sub_2317D404C(v2, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
  v26 = v9;
  if ((v23 & 1) != 0)
    v27 = sub_2318D5550();
  else
    v27 = 0;
  sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
  v28 = (uint64_t (*)(char *, uint64_t))v15[1];
  result = v28(v21, v14);
  if ((v27 & 1) == 0)
  {
    v30 = v24;
    v31 = sub_2318D5544();
    v50 = v25;
    if ((v31 & 1) != 0)
    {
      v32 = v26;
      v33 = v25 + *(int *)(v26 + 36);
      v35 = v56;
      v34 = v57;
      v57(v56, v33, v14);
      sub_2317CF774(v25, (uint64_t (*)(_QWORD))sub_2317CE964);
      result = sub_2318D5568();
      if ((result & 1) != 0)
      {
        v36 = v30;
        v37 = v52;
        v38 = v53;
        v39 = &v52[*(int *)(v53 + 48)];
        v34(v52, v36, v14);
        v40 = (void (*)(char *, char *, uint64_t))v15[4];
        v40(v39, v35, v14);
        v41 = *(int *)(v38 + 48);
LABEL_10:
        v45 = v55;
        v46 = &v55[v41];
        v34(v55, (uint64_t)v37, v14);
        v34(v46, (uint64_t)v39, v14);
        v47 = (uint64_t)v54;
        v40(v54, v45, v14);
        v28(v46, v14);
        v48 = &v45[*(int *)(v38 + 48)];
        v40(v45, v37, v14);
        v40(v48, v39, v14);
        v40((char *)(v47 + *(int *)(v32 + 36)), v48, v14);
        v28(v45, v14);
        return sub_2317F9B6C(v47, v50);
      }
      __break(1u);
    }
    else
    {
      v42 = v56;
      v34 = v57;
      v57(v56, v25, v14);
      sub_2317CF774(v25, (uint64_t (*)(_QWORD))sub_2317CE964);
      v58 = 1;
      sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      v43 = v51;
      sub_2318D5F88();
      result = sub_2318D5568();
      if ((result & 1) != 0)
      {
        v38 = v53;
        v44 = v43;
        v37 = v52;
        v39 = &v52[*(int *)(v53 + 48)];
        v40 = (void (*)(char *, char *, uint64_t))v15[4];
        v40(v52, v42, v14);
        v40(v39, v44, v14);
        v41 = *(int *)(v38 + 48);
        v32 = v26;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2317F5F70()
{
  void *v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(void);
  uint64_t v64;
  uint64_t result;
  void *v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  void *v75;
  id v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  int v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (*v117)(void);
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  char *v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  uint64_t (*v142)(uint64_t);
  _QWORD v143[2];
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  void *i;
  uint64_t v173;
  char *v174;
  void (*v175)(char *, char *, uint64_t);
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  char *v180;
  unint64_t v181;
  char *v182;
  char *v183;
  unint64_t v184;
  char *v185;
  char *v186;
  void (*v187)(void);
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  uint64_t v190;

  v1 = v0;
  v143[1] = swift_getObjectType();
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v149 = (uint64_t)v143 - v4;
  v148 = sub_2318D4A1C();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v152 = (char *)v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CFFEC();
  v153 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v145 = (char *)v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v160 = (char *)v143 - v9;
  sub_2317CE964(0);
  v158 = v10;
  v146 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v144 = (char *)v143 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v154 = (uint64_t)v143 - v16;
  v159 = sub_2318D54C0();
  v151 = *(_QWORD *)(v159 - 8);
  v17 = MEMORY[0x24BDAC7A8](v159);
  v150 = (char *)v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v143 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v157 = (char *)v143 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v156 = (char *)v143 - v24;
  v25 = sub_2318D2B80();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v155 = (char *)v143 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v161 = (char *)v143 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v171 = (char *)v143 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v166 = (char *)v143 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)v143 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35);
  v165 = (char *)v143 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v176 = (char *)v143 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v180 = (char *)v143 - v42;
  sub_2317D4194(0, (unint64_t *)&qword_255F25768, v43, v2);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)v143 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45);
  v162 = (uint64_t)v143 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v170 = (uint64_t)v143 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v169 = (char *)v143 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v168 = (uint64_t)v143 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v167 = (char *)v143 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v185 = (char *)v143 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v62 = (char *)v143 - v61;
  MEMORY[0x24BDAC7A8](v60);
  v63 = *(void (**)(void))(v26 + 56);
  v178 = (uint64_t)v143 - v64;
  v63();
  v177 = v62;
  v187 = v63;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v63)(v62, 1, 1, v25);
  result = (uint64_t)objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    v66 = (void *)result;
    v67 = objc_msgSend((id)result, sel_visibleCells);

    sub_2317CCC9C(0, (unint64_t *)&qword_255F25788);
    v68 = sub_2318D5790();

    v164 = v37;
    if (v68 >> 62)
      goto LABEL_29;
    v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (i = v1; v69; i = v1)
    {
      v184 = v68 & 0xC000000000000001;
      v70 = 4;
      v186 = v21;
      v163 = v26;
      v182 = v47;
      v183 = v13;
      v181 = v68;
      while (1)
      {
        v73 = v184
            ? (void (*)(char *, uint64_t))MEMORY[0x2348E6E94](v70 - 4, v68)
            : (void (*)(char *, uint64_t))*(id *)(v68 + 8 * v70);
        v188 = v73;
        v21 = (char *)(v70 - 3);
        if (__OFADD__(v70 - 4, 1))
          break;
        v74 = v69;
        result = (uint64_t)objc_msgSend(v1, sel_collectionView);
        if (!result)
          goto LABEL_41;
        v75 = (void *)result;
        v76 = objc_msgSend((id)result, sel_indexPathForCell_, v188);

        if (v76)
        {
          v77 = v176;
          sub_2318D2B38();

          v78 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
          v71 = (uint64_t)v185;
          v78(v185, v77, v25);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v187)(v71, 0, 1, v25);
          v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
          if (v79(v71, 1, v25) != 1)
          {
            v174 = (char *)(v70 - 3);
            v80 = v180;
            v78(v180, (char *)v71, v25);
            v81 = v168;
            v82 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
            sub_2317F9B14(v178, v168, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
            v83 = v26;
            v84 = v81;
            v85 = v164;
            v179 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
            v179(v164, v80, v25);
            v86 = v79(v84, 1, v25);
            v175 = v78;
            if (v86 == 1)
            {
              v87 = v165;
              v78(v165, v85, v25);
              sub_2317DD39C(v84, (unint64_t *)&qword_255F25768, v82);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v25);
              v87 = v165;
              v78(v165, (char *)v84, v25);
            }
            v88 = v25;
            v89 = sub_2317CC4AC(&qword_255F25798, v82, MEMORY[0x24BDCF698]);
            v90 = v180;
            v173 = v89;
            if ((sub_2318D5550() & 1) != 0)
              v91 = v90;
            else
              v91 = v87;
            v92 = (uint64_t)v167;
            v93 = v179;
            v179(v167, v91, v88);
            v94 = *(void (**)(char *, uint64_t))(v83 + 8);
            v94(v87, v88);
            v95 = v178;
            sub_2317DD39C(v178, (unint64_t *)&qword_255F25768, v82);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v187)(v92, 0, 1, v88);
            sub_2317F9BB0(v92, v95);
            v96 = v170;
            sub_2317F9B14((uint64_t)v177, v170, (unint64_t *)&qword_255F25768, v82);
            v97 = v171;
            v93(v171, v90, v88);
            v25 = v88;
            if (v79(v96, 1, v88) == 1)
            {
              v98 = v166;
              v175(v166, v97, v88);
              sub_2317DD39C(v96, (unint64_t *)&qword_255F25768, v82);
            }
            else
            {
              v94(v97, v88);
              v98 = v166;
              v175(v166, (char *)v96, v88);
            }
            v99 = v180;
            if ((sub_2318D555C() & 1) != 0)
              v100 = v99;
            else
              v100 = v98;
            v101 = (uint64_t)v169;
            v179(v169, v100, v25);

            v94(v98, v25);
            v94(v99, v25);
            v102 = (uint64_t)v177;
            sub_2317DD39C((uint64_t)v177, (unint64_t *)&qword_255F25768, v82);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v187)(v101, 0, 1, v25);
            sub_2317F9BB0(v101, v102);
            v1 = i;
            v26 = v163;
            v47 = v182;
            v69 = v74;
            v21 = v174;
            goto LABEL_7;
          }
        }
        else
        {
          v71 = (uint64_t)v185;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v187)(v185, 1, 1, v25);
        }

        sub_2317DD39C(v71, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
        v47 = v182;
        v69 = v74;
LABEL_7:
        ++v70;
        v72 = v21 == (char *)v69;
        v13 = v183;
        v21 = v186;
        v68 = v181;
        if (v72)
          goto LABEL_30;
      }
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      v69 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
LABEL_30:
    swift_bridgeObjectRelease();
    v103 = v178;
    v104 = v162;
    sub_2317F9B14(v178, v162, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v105(v104, 1, v25) == 1)
    {
      sub_2317DD39C((uint64_t)v177, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
      v106 = v103;
LABEL_39:
      v142 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
      sub_2317DD39C(v106, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
      return sub_2317DD39C(v104, (unint64_t *)&qword_255F25768, v142);
    }
    v107 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    v108 = v161;
    v107(v161, v104, v25);
    v104 = (uint64_t)v47;
    v109 = (uint64_t)v177;
    sub_2317F9B14((uint64_t)v177, v104, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    if (v105(v104, 1, v25) == 1)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v108, v25);
      sub_2317DD39C(v109, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
      v106 = v178;
      goto LABEL_39;
    }
    v107(v155, v104, v25);
    sub_2318D2B44();
    sub_2318D54A8();
    sub_2318D2B44();
    sub_2318D54A8();
    v110 = v150;
    sub_2318D543C();
    sub_2318D5454();
    v111 = v151;
    v112 = *(void (**)(char *, uint64_t))(v151 + 8);
    v113 = v110;
    v114 = v159;
    v112(v113, v159);
    sub_2317CC4AC(&qword_254187A20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    result = sub_2318D5568();
    if ((result & 1) != 0)
    {
      v188 = v112;
      v186 = v21;
      v115 = v153;
      v116 = &v160[*(int *)(v153 + 48)];
      v117 = *(void (**)(void))(v111 + 16);
      v117();
      v118 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
      v187 = (void (*)(void))v116;
      v118(v116, v186, v114);
      v119 = *(int *)(v115 + 48);
      v120 = v145;
      v121 = &v145[v119];
      ((void (*)(char *, char *, uint64_t))v117)(v145, v160, v114);
      ((void (*)(char *, char *, uint64_t))v117)(v121, v116, v114);
      v122 = (uint64_t)v144;
      v118(v144, v120, v114);
      v188(v121, v114);
      v123 = &v120[*(int *)(v153 + 48)];
      v118(v120, v160, v114);
      v118(v123, (char *)v187, v114);
      v118((char *)(v122 + *(int *)(v158 + 36)), v123, v114);
      v124 = v120;
      v125 = v188;
      v188(v124, v114);
      v126 = v154;
      sub_2317F9B6C(v122, v154);
      v127 = v152;
      sub_2318D4A04();
      sub_2317D404C(v126, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
      v128 = sub_2318D4A10();
      v129 = sub_2318D5A54();
      if (os_log_type_enabled(v128, v129))
      {
        v130 = swift_slowAlloc();
        v131 = swift_slowAlloc();
        v163 = v26;
        v132 = v131;
        v190 = v131;
        *(_DWORD *)v130 = 136446466;
        v133 = sub_2318D63CC();
        v189 = sub_231851EBC(v133, v134, &v190);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v130 + 12) = 2048;
        sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
        sub_2318D5F94();
        v135 = v189;
        sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);
        v189 = v135;
        sub_2318D5F70();
        _os_log_impl(&dword_2317C8000, v128, v129, "[%{public}s] resetting active range with new duration %ld", (uint8_t *)v130, 0x16u);
        swift_arrayDestroy();
        v26 = v163;
        MEMORY[0x2348E77E8](v132, -1, -1);
        v136 = v130;
        v137 = v158;
        MEMORY[0x2348E77E8](v136, -1, -1);

        (*(void (**)(char *, uint64_t))(v147 + 8))(v152, v148);
      }
      else
      {
        sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2317CE964);

        (*(void (**)(char *, uint64_t))(v147 + 8))(v127, v148);
        v137 = v158;
      }
      v138 = v154;
      v139 = v149;
      sub_2317D404C(v154, v149, (uint64_t (*)(_QWORD))sub_2317CE964);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v146 + 56))(v139, 0, 1, v137);
      sub_2317F5650(v139);
      sub_2317CF774(v138, (uint64_t (*)(_QWORD))sub_2317CE964);
      v140 = v159;
      v125(v157, v159);
      v125(v156, v140);
      v141 = *(void (**)(char *, uint64_t))(v26 + 8);
      v141(v155, v25);
      v141(v161, v25);
      v106 = (uint64_t)v177;
      v104 = v178;
      goto LABEL_39;
    }
    __break(1u);
LABEL_41:
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_2317F7064(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint8_t *v38;
  NSObject *v39;
  int v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45[3];
  uint64_t v46;
  unint64_t v47;

  v2 = v1;
  swift_getObjectType();
  sub_2317D4194(0, (unint64_t *)&unk_255F257A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v36 - v5;
  v7 = sub_2318D54C0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)v36 - v11;
  v12 = sub_2318D4A1C();
  v13 = *(_QWORD *)(v12 - 8);
  result = (id)MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] == 2)
  {
    result = objc_msgSend(a1, sel__horizontalVelocity);
    if (fabs(v18) > 2.5)
    {
      sub_2318D49EC();
      v41 = v2;
      v19 = sub_2318D4A10();
      v20 = sub_2318D5A30();
      v40 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v39 = v19;
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v37 = v22;
        v38 = v21;
        *(_DWORD *)v21 = 136446210;
        v36[1] = v21 + 12;
        v45[0] = v22;
        v36[0] = v21 + 4;
        v46 = 0;
        v47 = 0xE000000000000000;
        sub_2318D63CC();
        sub_2318D56A0();
        swift_bridgeObjectRelease();
        sub_2318D56A0();
        v23 = v41;
        v44 = v41;
        sub_2318D6138();
        v46 = sub_231851EBC(v46, v47, v45);
        sub_2318D5F70();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2317C8000, v39, (os_log_type_t)v40, "[%{public}s] scrollViewDidScroll: Pausing data fetching due to high velocity", v38, 0xCu);
        v24 = v37;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v24, -1, -1);
        MEMORY[0x2348E77E8](v38, -1, -1);

      }
      else
      {

        v25 = v41;
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v26 = v2[v17];
      v2[v17] = 3;
      result = (id)sub_2317F1758(v26);
    }
  }
  if ((v2[v17] & 0xFE) == 2)
  {
    sub_2317F3818((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return (id)sub_2317DD39C((uint64_t)v6, (unint64_t *)&unk_255F257A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488]);
    }
    else
    {
      v27 = v43;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v43, v6, v7);
      v28 = MEMORY[0x2348E78A8](&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
      if (v28)
      {
        v29 = v28;
        v30 = v28 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
        swift_beginAccess();
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        v32 = v42;
        v31(v42, v30, v7);
        sub_2317CC4AC(&qword_255F27290, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
        v33 = sub_2318D5580();
        v34 = *(void (**)(char *, uint64_t))(v8 + 8);
        v34(v32, v7);
        if ((v33 & 1) != 0)
        {
          v34(v27, v7);
          return (id)swift_unknownObjectRelease();
        }
        else
        {
          v31(v32, (uint64_t)v27, v7);
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v8 + 24))(v30, v32, v7);
          swift_endAccess();
          v35 = *(_QWORD *)(v29 + 16);
          swift_unknownObjectRetain();
          sub_2317E6B30(v35, v29);
          swift_unknownObjectRelease();
          v34(v32, v7);
          swift_unknownObjectRelease();
          return (id)((uint64_t (*)(char *, uint64_t))v34)(v27, v7);
        }
      }
      else
      {
        return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v27, v7);
      }
    }
  }
  return result;
}

uint64_t sub_2317F7588(char a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(char *);
  char v10;

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers);
  result = swift_beginAccess();
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6)
  {
    v7 = a1 & 1;
    swift_bridgeObjectRetain();
    v8 = v5 + 40;
    do
    {
      v9 = *(void (**)(char *))(v8 - 8);
      v10 = v7;
      swift_retain();
      v9(&v10);
      swift_release();
      v8 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    *v3 = MEMORY[0x24BEE4AF8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2317F7784(void *a1, double a2, double a3)
{
  unsigned __int8 *v3;
  int v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  void *v18;
  _QWORD v19[6];
  objc_super v20;

  v20.receiver = v3;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v7 = v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  if (v7 != 4)
  {
    v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 3;
    sub_2317F1758(v7);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v3;
    v19[4] = sub_2317F9B0C;
    v19[5] = v8;
    v19[0] = MEMORY[0x24BDAC760];
    v19[1] = 1107296256;
    v19[2] = sub_2317F7A04;
    v19[3] = &unk_25007DAA8;
    v9 = _Block_copy(v19);
    v10 = v3;
    swift_release();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, 0, v9);
    _Block_release(v9);
    if (a2 <= 320.0)
    {
      v13 = 0;
      v14 = 0x403E000000000000;
      v12 = 0x4020000000000000;
      v15 = 0x4020000000000000;
      v11 = 0x4020000000000000;
    }
    else
    {
      v11 = 0x4020000000000000;
      v12 = 0x402E000000000000;
      if (a2 < 414.0 || a2 >= 744.0)
      {
        if (a2 < 744.0)
        {
          v15 = 0x4020000000000000;
        }
        else
        {
          v12 = 0x403E000000000000;
          v15 = 0x4034000000000000;
        }
        if (a2 >= 744.0)
          v14 = 0x404E800000000000;
        else
          v14 = 0x4041000000000000;
        if (a2 >= 744.0)
          v11 = 0x4028000000000000;
        v13 = (unint64_t)(a2 >= 744.0) << 62;
      }
      else
      {
        v13 = 0;
        v14 = 0x4044800000000000;
        v15 = 0x4020000000000000;
      }
    }
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1E0]);
    v17 = (uint64_t *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
    v18 = *(void **)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
    *v17 = v12;
    v17[1] = v15;
    v17[2] = 0x4034000000000000;
    v17[3] = v14;
    v17[4] = v14;
    v17[5] = v14;
    v17[6] = 0;
    v17[7] = (uint64_t)v16;
    v17[8] = v11;
    v17[9] = 0x4033000000000000;
    v17[10] = v13;
    v17[11] = 27;

  }
}

id sub_2317F79B4(uint64_t a1, uint64_t a2)
{
  id result;

  result = (id)*(unsigned __int8 *)(a2
                                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  if (((1 << (char)result) & 0x15) == 0)
  {
    *(_BYTE *)(a2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
    sub_2317F1758((char)result);
    sub_2317F5F70();
    return sub_2317F4B64();
  }
  return result;
}

uint64_t sub_2317F7A04(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2317F7B18()
{
  unint64_t v0;
  unint64_t v1;

  sub_2318D54C0();
  if (v0 <= 0x3F)
  {
    sub_2317CE964(319);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_2317F7BE8(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  char v7;
  uint64_t result;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  void *v23;
  CGPoint v24;
  CGRect v25;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_navigationController);
  v5 = objc_msgSend(v4, sel_interactivePopGestureRecognizer);

  if (!v5)
    return 1;
  sub_2317CCC9C(0, (unint64_t *)&unk_255F25770);
  v6 = a1;
  v7 = sub_2318D5E74();

  if ((v7 & 1) == 0)
    return 1;
  result = (uint64_t)objc_msgSend(v2, sel_collectionView);
  if (result)
  {
    v9 = (void *)result;
    objc_msgSend((id)result, sel_bounds);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v18 = objc_msgSend(v2, sel_collectionView);
    objc_msgSend(v6, sel_locationInView_, v18);
    v20 = v19;
    v22 = v21;

    v25.origin.x = v11;
    v25.origin.y = v13;
    v25.size.width = v15;
    v25.size.height = v17;
    v24.x = v20;
    v24.y = v22;
    if (CGRectContainsPoint(v25, v24))
      return 0;
    v23 = *(void **)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache];
    if (v23 && (objc_msgSend(v23, sel_respondsToSelector_, sel_gestureRecognizerShouldBegin_) & 1) != 0)
      return (uint64_t)objc_msgSend(v23, sel_gestureRecognizerShouldBegin_, v6);
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for InteractiveTimelineCollectionViewController.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveTimelineCollectionViewController.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2317F7FB8 + 4 * byte_2318D8DD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2317F7FEC + 4 * byte_2318D8DD0[v4]))();
}

uint64_t sub_2317F7FEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2317F7FF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2317F7FFCLL);
  return result;
}

uint64_t sub_2317F8008(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2317F8010);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2317F8014(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2317F801C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractiveTimelineCollectionViewController.State()
{
  return &type metadata for InteractiveTimelineCollectionViewController.State;
}

unint64_t sub_2317F803C()
{
  unint64_t result;

  result = qword_255F25758;
  if (!qword_255F25758)
  {
    result = MEMORY[0x2348E7734](&unk_2318D8EF8, &type metadata for InteractiveTimelineCollectionViewController.State);
    atomic_store(result, (unint64_t *)&qword_255F25758);
  }
  return result;
}

uint64_t sub_2317F8080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  int v17;
  uint64_t v19;

  v2 = v1;
  v4 = sub_2318D2AF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_2317FBF8C(a1);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 32 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v12;
    }
    swift_bridgeObjectRelease();
  }
  v13 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_beginAccess();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v7, v13, v4);
  sub_2318D549C();
  LOBYTE(v13) = sub_2318D2AB4();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  if ((v13 & 1) != 0)
    return 2;
  v16 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 120);
  swift_beginAccess();
  v14(v7, v16, v4);
  sub_2318D549C();
  v17 = sub_2318D2AB4();
  v15(v7, v4);
  return ~v17 & 1;
}

uint64_t sub_2317F8260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317F82A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317F8300()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2317F8324(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_2317F8348(void *a1, double a2, double a3, double a4, double a5)
{
  double Width;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  _QWORD v21[12];

  Width = CGRectGetWidth(*(CGRect *)&a2);
  if (Width <= 320.0)
  {
    v17 = 0.0;
    v15 = 30.0;
    v13 = 8.0;
    v14 = 8.0;
    v16 = 8.0;
  }
  else
  {
    v7 = 30.0;
    if (Width < 744.0)
      v7 = 15.0;
    v8 = 20.0;
    if (Width < 744.0)
      v8 = 8.0;
    v9 = 61.0;
    if (Width < 744.0)
      v9 = 34.0;
    v10 = 12.0;
    if (Width < 744.0)
      v10 = 8.0;
    v11 = 2.0;
    if (Width < 744.0)
      v11 = 0.0;
    v12 = Width >= 414.0 && Width < 744.0;
    if (v12)
      v13 = 15.0;
    else
      v13 = v7;
    if (v12)
      v14 = 8.0;
    else
      v14 = v8;
    if (v12)
      v15 = 41.0;
    else
      v15 = v9;
    if (v12)
      v16 = 8.0;
    else
      v16 = v10;
    if (v12)
      v17 = 0.0;
    else
      v17 = v11;
  }
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1E0]);
  *(double *)v21 = v13;
  *(double *)&v21[1] = v14;
  v21[2] = 0x4034000000000000;
  *(double *)&v21[3] = v15;
  *(double *)&v21[4] = v15;
  *(double *)&v21[5] = v15;
  v21[6] = 0;
  v21[7] = v18;
  *(double *)&v21[8] = v16;
  v21[9] = 0x4033000000000000;
  *(double *)&v21[10] = v17;
  v21[11] = 27;
  v19 = objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineCollectionViewController());
  return sub_2317F1A40((uint64_t)v21, a1);
}

void sub_2317F84B8()
{
  _BYTE *v0;
  _OWORD *v1;

  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  v1 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
  *v1 = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[5] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers] = MEMORY[0x24BEE4AF8];
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay] = 0;

  sub_2318D6150();
  __break(1u);
}

void sub_2317F8580(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  ObjectType = swift_getObjectType();
  v3 = sub_2318D2B80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2318D4A1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = v1;
  v12 = sub_2318D4A10();
  v13 = sub_2318D5A54();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v25 = v8;
    v16 = v15;
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136446466;
    v21 = v16 + 4;
    v28 = 0;
    v29 = 0xE000000000000000;
    v30 = v17;
    sub_2318D63CC();
    ObjectType = a1;
    v24 = v7;
    v22 = v14;
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v27 = v11;
    sub_2318D6138();
    v28 = sub_231851EBC(v28, v29, &v30);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    sub_2317CC4AC(&qword_255F257B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], MEMORY[0x24BDCF6B8]);
    v18 = sub_2318D6288();
    v28 = sub_231851EBC(v18, v19, &v30);
    a1 = ObjectType;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_2317C8000, v12, (os_log_type_t)v22, "[%{public}s] Scrolling in response to user selecting item at %{public}s", (uint8_t *)v16, 0x16u);
    v20 = v23;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v20, -1, -1);
    MEMORY[0x2348E77E8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_2317F3F74(a1, 1, 0, 0);
}

void sub_2317F88A0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  char v42;
  id v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = v2;
  v59 = a2;
  v5 = sub_2318D2A90();
  v58 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TimelineDay();
  MEMORY[0x24BDAC7A8](v7);
  v56 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D54C0();
  v10 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  v61 = v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v50 - v16;
  sub_2317D4194(0, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v50 - v19;
  sub_2317CE964(0);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v50 - v27;
  type metadata accessor for InteractiveTimelineDayCell(0);
  v29 = swift_dynamicCastClass();
  if (!v29)
    return;
  v54 = v29;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) == 1)
  {
    v51 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
    v53 = v5;
    v30 = MEMORY[0x2348E78A8](v3+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider);
    if (v30)
    {
      v31 = *(_QWORD *)(v30 + 24);
      v32 = *(_QWORD *)(*(_QWORD *)v31 + 168);
      v52 = a1;
      v33 = v31 + v32;
      swift_beginAccess();
      v34 = v33;
      a1 = v52;
      sub_2317F9B14(v34, (uint64_t)v20, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
      v35 = a1;
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) != 1)
      {
        sub_2317F9B6C((uint64_t)v20, (uint64_t)v28);
        sub_2318D2B44();
        sub_2318D54A8();
        v36 = sub_2317CC4AC(&qword_254187A20, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
        v37 = v60;
        v50[1] = v36;
        v38 = sub_2318D5568();
        v39 = v61;
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v15, v17, v37);
        sub_2317D404C((uint64_t)v28, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_2317CE964);
        v5 = v53;
        if ((v38 & 1) != 0)
        {
          v40 = sub_2318D5550();
          sub_2317CF774((uint64_t)v26, (uint64_t (*)(_QWORD))sub_2317CE964);
          v41 = *(void (**)(char *, uint64_t))(v39 + 8);
          v41(v15, v37);
          v41(v17, v37);
          a1 = v52;
          if ((v40 & 1) != 0)
          {
            v42 = *(_BYTE *)(v3 + v51);
            *(_BYTE *)(v3 + v51) = 2;
            sub_2317F1758(v42);
          }
        }
        else
        {
          sub_2317CF774((uint64_t)v26, (uint64_t (*)(_QWORD))sub_2317CE964);
          v45 = *(void (**)(char *, uint64_t))(v39 + 8);
          v45(v15, v37);
          v45(v17, v37);
          a1 = v52;
        }
        sub_2317CF774((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2317CE964);
        goto LABEL_13;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v20, 1, 1, v22);
      v44 = a1;
    }
    sub_2317DD39C((uint64_t)v20, &qword_255F25370, (uint64_t (*)(uint64_t))sub_2317CE964);
    v5 = v53;
    v39 = v61;
  }
  else
  {
    v43 = a1;
    v39 = v61;
  }
LABEL_13:
  if (MEMORY[0x2348E78A8](v3+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider))
  {
    sub_2318D2B44();
    v46 = (uint64_t)v55;
    sub_2318D54A8();
    v47 = v56;
    sub_2317CE9E8(v46, v56);
    v48 = objc_msgSend(*(id *)(v3+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache), sel_currentCalendar);
    v49 = (uint64_t)v57;
    sub_2318D2A3C();

    sub_23185CB94(v47, v49);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v49, v5);
    sub_2317CF774(v47, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v60);
  }

}

uint64_t sub_2317F8DB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  char v11;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  swift_getObjectType();
  v1 = sub_2318D4A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v5 = v0;
  v6 = sub_2318D4A10();
  v7 = sub_2318D5A30();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v14 = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v13 = v9 + 4;
    v16 = 0;
    v17 = 0xE000000000000000;
    v18 = v10;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v15 = v5;
    sub_2318D6138();
    v16 = sub_231851EBC(v16, v17, &v18);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v6, v7, "[%{public}s] scrollViewDidEndScrollingAnimation: resuming data fetching", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v11 = *((_BYTE *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  if (((1 << v11) & 0x15) == 0)
  {
    *((_BYTE *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
    sub_2317F1758(v11);
    sub_2317F5F70();
    sub_2317F4B64();
  }
  return sub_2317F7588(1);
}

uint64_t sub_2317F9018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *);
  char v7;

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers);
  result = swift_beginAccess();
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      v6 = *(void (**)(char *))(v5 - 8);
      v7 = 0;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    *v1 = MEMORY[0x24BEE4AF8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2317F90C8(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  unsigned __int8 *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  swift_getObjectType();
  v3 = sub_2318D4A1C();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_2318D49EC();
    v8 = v1;
    v9 = sub_2318D4A10();
    v10 = sub_2318D5A30();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136446210;
      v14 = v11 + 4;
      v17 = 0;
      v18 = 0xE000000000000000;
      v19 = v12;
      sub_2318D63CC();
      sub_2318D56A0();
      swift_bridgeObjectRelease();
      sub_2318D56A0();
      v16 = v8;
      sub_2318D6138();
      v17 = sub_231851EBC(v17, v18, &v19);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v9, v10, "[%{public}s] scrollViewDidEndDragging without deceleration: resuming data fetching", v11, 0xCu);
      v13 = v15;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v13, -1, -1);
      MEMORY[0x2348E77E8](v11, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    result = v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
    if (((1 << result) & 0x15) == 0)
    {
      v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 2;
      sub_2317F1758(result);
      sub_2317F5F70();
      return (uint64_t)sub_2317F4B64();
    }
  }
  return result;
}

id sub_2317F9320()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  id result;
  uint8_t *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  swift_getObjectType();
  v1 = sub_2318D4A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v5 = v0;
  v6 = sub_2318D4A10();
  v7 = sub_2318D5A30();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v13 = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v12 = v9 + 4;
    v15 = 0;
    v16 = 0xE000000000000000;
    v17 = v10;
    sub_2318D63CC();
    sub_2318D56A0();
    swift_bridgeObjectRelease();
    sub_2318D56A0();
    v14 = v5;
    sub_2318D6138();
    v15 = sub_231851EBC(v15, v16, &v17);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v6, v7, "[%{public}s] scrollViewDidEndDecelerating: resuming data fetching", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v13);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  result = (id)v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  if (((1 << (char)result) & 0x15) == 0)
  {
    v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 2;
    sub_2317F1758((char)result);
    sub_2317F5F70();
    return sub_2317F4B64();
  }
  return result;
}

uint64_t sub_2317F957C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  _BYTE *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _BYTE *v40;
  char *v41;
  uint64_t (*v42)(uint64_t);
  _QWORD v44[2];
  uint64_t v45;
  _BYTE *v46;
  char *v47;
  const char *ObjectType;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock[7];

  v58 = a5;
  v55 = a3;
  v56 = a4;
  v7 = v5;
  ObjectType = (const char *)swift_getObjectType();
  v9 = sub_2318D5388();
  v60 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_2318D53AC();
  v62 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2318D537C();
  v54 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_2318D53C4();
  v53 = *(_QWORD *)(v59 - 8);
  v16 = MEMORY[0x24BDAC7A8](v59);
  v51 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)v44 - v18;
  v19 = sub_2318D4A1C();
  v49 = *(_QWORD *)(v19 - 8);
  v50 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D4A04();
  v22 = sub_2318D4A10();
  v23 = sub_2318D5A54();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v46 = v7;
    v25 = v24;
    v26 = swift_slowAlloc();
    v47 = v11;
    v45 = v26;
    aBlock[0] = v26;
    *(_DWORD *)v25 = 136446466;
    v44[1] = v25 + 4;
    v27 = sub_2318D63CC();
    ObjectType = a2;
    v63 = sub_231851EBC(v27, v28, aBlock);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    v63 = a1;
    sub_2318D5F70();
    _os_log_impl(&dword_2317C8000, v22, v23, ObjectType, (uint8_t *)v25, 0x16u);
    v29 = v45;
    swift_arrayDestroy();
    v11 = v47;
    MEMORY[0x2348E77E8](v29, -1, -1);
    v30 = v25;
    v7 = v46;
    MEMORY[0x2348E77E8](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v50);
  v31 = v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 4;
  sub_2317F1758(v31);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v32 = (void *)sub_2318D5B80();
  v33 = v51;
  sub_2318D53B8();
  *v15 = 10;
  v34 = v54;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v54 + 104))(v15, *MEMORY[0x24BEE5410], v13);
  v35 = v52;
  MEMORY[0x2348E618C](v33, v15);
  (*(void (**)(_QWORD *, uint64_t))(v34 + 8))(v15, v13);
  v36 = *(void (**)(char *, uint64_t))(v53 + 8);
  v37 = v59;
  v36(v33, v59);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v7;
  aBlock[4] = v56;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2317D1468;
  aBlock[3] = v58;
  v39 = _Block_copy(aBlock);
  v40 = v7;
  swift_release();
  v41 = v61;
  sub_2318D53A0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_2317CC4AC((unint64_t *)&unk_25418B3B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_2317D4194(0, (unint64_t *)&unk_25418B3D0, v42, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317D3688();
  sub_2318D6000();
  MEMORY[0x2348E6900](v35, v41, v11, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v57);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, v37);
}

uint64_t sub_2317F9A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2317F9AAC()
{
  return swift_release();
}

uint64_t sub_2317F9AB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
  return sub_2317F1758(v2);
}

uint64_t sub_2317F9AE8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2317F9B0C(uint64_t a1)
{
  uint64_t v1;

  return sub_2317F79B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2317F9B14(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2317D4194(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2317F9B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317CE964(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2317F9BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, (unint64_t *)&qword_255F25768, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2317F9C0C()
{
  uint64_t v0;

  sub_2317F499C(*(char **)(v0 + 16));
}

uint64_t sub_2317F9C14(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_2317F9C38(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 56);
  return a1;
}

uint64_t sub_2317F9C60(uint64_t a1)
{

  return a1;
}

unint64_t sub_2317F9C88()
{
  unint64_t result;

  result = qword_255F257C0;
  if (!qword_255F257C0)
  {
    sub_2317F9CC0();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F257C0);
  }
  return result;
}

unint64_t sub_2317F9CC0()
{
  unint64_t result;

  result = qword_255F27D20;
  if (!qword_255F27D20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F27D20);
  }
  return result;
}

uint64_t sub_2317F9D14()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2317F9D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2317F2368(a1, a2, v2);
}

unint64_t sub_2317F9D40()
{
  unint64_t result;

  result = qword_255F25830;
  if (!qword_255F25830)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F25830);
  }
  return result;
}

void sub_2317F9D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2317F2604(a1, a2, v2);
}

void sub_2317F9DC0()
{
  qword_255F28560 = 0x4030000000000000;
  *(_QWORD *)algn_255F28568 = 0;
  qword_255F28570 = 0;
  unk_255F28578 = 0;
}

void sub_2317F9DD8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  _QWORD *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v9 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController] = 0;
  type metadata accessor for MedicationHighlightsView.Model();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0xE000000000000000;
  v10[4] = 0;
  v10[5] = 0xE000000000000000;
  v10[6] = 0;
  v10[7] = 0;
  v11 = v4;
  swift_bridgeObjectRelease();
  v10[8] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v11[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel] = v10;
  swift_retain();

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  v12 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v13 = objc_msgSend(v12, sel_contentView);
  v14 = sub_2317FA3DC();
  v15 = objc_msgSend(v14, sel_view);

  if (v15)
  {
    objc_msgSend(v13, sel_addSubview_, v15);

    sub_2317FA624();
    sub_2317D4194(0, (unint64_t *)&qword_255F27D10, (uint64_t (*)(uint64_t))sub_2317F9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_2318D8680;
    v17 = sub_2318D4C50();
    v18 = MEMORY[0x24BEBCB18];
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v18;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2317F9D40();
    sub_2318D5DF0();
    swift_release();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

id sub_2317FA01C(void *a1)
{
  char *v1;
  char *v3;
  _QWORD *v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController] = 0;
  type metadata accessor for MedicationHighlightsView.Model();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0xE000000000000000;
  v4[4] = 0;
  v4[5] = 0xE000000000000000;
  v4[6] = 0;
  v4[7] = 0;
  v5 = v1;
  swift_bridgeObjectRelease();
  v4[8] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel] = v4;
  swift_retain();

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  v6 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  v7 = v6;
  swift_release();
  if (v7)

  return v7;
}

void sub_2317FA12C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  objc_msgSendSuper2(&v7, sel_awakeFromNib);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_2317FA3DC();
  v3 = objc_msgSend(v2, sel_view);

  if (v3)
  {
    objc_msgSend(v1, sel_addSubview_, v3);

    sub_2317FA624();
    sub_2317D4194(0, (unint64_t *)&qword_255F27D10, (uint64_t (*)(uint64_t))sub_2317F9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_2318D8680;
    v5 = sub_2318D4C50();
    v6 = MEMORY[0x24BEBCB18];
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v6;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2317F9D40();
    sub_2318D5DF0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_2317FA2B0(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  void *v15;

  v5 = objc_msgSend(a1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  v8 = sub_2318D55BC();
  v10 = v9;
  if (v8 == sub_2318D55BC() && v10 == v11)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_2318D62B8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      v14 = MEMORY[0x2348E78A8](a3 + 16);
      if (v14)
      {
        v15 = (void *)v14;
        sub_2317FA624();

      }
    }
  }
}

id sub_2317FA3DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController);
  }
  else
  {
    v4 = sub_2317FA43C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2317FA43C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id result;
  uint64_t *v12;
  Class v13;
  id v14;
  uint64_t v15;
  _QWORD v16[2];

  v2 = (int *)type metadata accessor for MedicationHighlightsView(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - v6;
  type metadata accessor for MedicationHighlightsView.Model();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0xE000000000000000;
  v8[4] = 0;
  v8[5] = 0xE000000000000000;
  v8[6] = 0;
  v8[7] = 0;
  swift_bridgeObjectRelease();
  v8[8] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel) = v8;
  swift_retain();
  swift_release();
  v9 = sub_2318D3CE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = (void *)objc_opt_self();
  swift_retain();
  result = objc_msgSend(v10, sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(_QWORD *)&v5[v2[5]] = result;
    v12 = (uint64_t *)&v5[v2[7]];
    *v12 = swift_getKeyPath();
    sub_2317D4194(0, &qword_2541880D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v5[v2[6]] = v8;
    sub_2317FB030((uint64_t)v5, (uint64_t)v7);
    sub_2317FB074();
    v16[1] = sub_2318D5328();
    sub_2317FB0BC();
    v14 = objc_allocWithZone(v13);
    v15 = sub_2318D5178();
    swift_release();
    return (id)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2317FA624()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;

  v1 = sub_2317FA3DC();
  v2 = objc_msgSend(v1, sel_view);

  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_2317E2280();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2318D8F30;
  v4 = sub_2317FA3DC();
  v5 = objc_msgSend(v4, sel_view);

  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v0, sel_contentView);
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v3 + 32) = v9;
  v10 = sub_2317FA3DC();
  v11 = objc_msgSend(v10, sel_view);

  if (!v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = objc_msgSend(v11, sel_trailingAnchor);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(_QWORD *)(v3 + 40) = v15;
  v16 = sub_2317FA3DC();
  v17 = objc_msgSend(v16, sel_view);

  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = objc_msgSend(v0, sel_contentView);
  v20 = objc_msgSend(v19, sel_topAnchor);

  if (qword_255F24FB8 != -1)
    swift_once();
  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, *(double *)&qword_255F28560);

  *(_QWORD *)(v3 + 48) = v21;
  v22 = sub_2317FA3DC();
  v23 = objc_msgSend(v22, sel_view);

  if (v23)
  {
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v23, sel_bottomAnchor);

    v26 = objc_msgSend(v0, sel_contentView);
    v27 = objc_msgSend(v26, sel_bottomAnchor);

    v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
    *(_QWORD *)(v3 + 56) = v28;
    sub_2318D57A8();
    sub_2317FAFEC();
    v29 = (id)sub_2318D5778();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_activateConstraints_, v29);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_2317FA9E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v24[5];

  v1 = sub_2318D4A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  swift_beginAccess();
  sub_2317FAFA8(v5, (uint64_t)v24);
  if (v24[3])
  {
    sub_2317D4B4C(0, (unint64_t *)&qword_25418AA40);
    type metadata accessor for MedicationMonthHighlightItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = *(_QWORD **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel];
      v7 = v23[3];
      v9 = v23[4];
      v8 = v23[5];
      v11 = v23[6];
      v10 = v23[7];
      v12 = v23[8];
      v6[2] = v23[2];
      v6[3] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[4] = v9;
      v6[5] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[6] = v11;
      v6[7] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[8] = v12;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2317FAF6C((uint64_t)v24);
  }
  sub_2318D49E0();
  v14 = v0;
  v15 = sub_2318D4A10();
  v16 = sub_2318D5A3C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v22 = v1;
    v23 = v18;
    v19 = v18;
    *(_DWORD *)v17 = 136446210;
    sub_2317FAFA8(v5, (uint64_t)v24);
    sub_2317FAF08();
    v20 = sub_2318D55EC();
    v24[0] = sub_231851EBC(v20, v21, (uint64_t *)&v23);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v15, v16, "Incorrect view model for MedicationMonthHighlightItem: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v19, -1, -1);
    MEMORY[0x2348E77E8](v17, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_2317FACF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharedMedicationsMonthHighlightCell()
{
  return objc_opt_self();
}

uint64_t sub_2317FAD8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item;
  swift_beginAccess();
  return sub_2317FAFA8(v3, a1);
}

uint64_t sub_2317FADDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item;
  swift_beginAccess();
  sub_2317FAEC4(a1, v3);
  swift_endAccess();
  sub_2317FA9E0();
  return sub_2317FAF6C(a1);
}

uint64_t (*sub_2317FAE48(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2317FAE90;
}

uint64_t sub_2317FAE90(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_2317FA9E0();
  return result;
}

uint64_t sub_2317FAEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317FAF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_2317FAF08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AA50)
  {
    sub_2317D4B4C(255, (unint64_t *)&qword_25418AA40);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AA50);
  }
}

uint64_t sub_2317FAF6C(uint64_t a1)
{
  uint64_t v2;

  sub_2317FAF08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2317FAFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317FAF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2317FAFEC()
{
  unint64_t result;

  result = qword_25418B060;
  if (!qword_25418B060)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B060);
  }
  return result;
}

uint64_t sub_2317FB030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationHighlightsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2317FB074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254188068;
  if (!qword_254188068)
  {
    v1 = type metadata accessor for MedicationHighlightsView(255);
    result = MEMORY[0x2348E7734](&unk_2318DA28C, v1);
    atomic_store(result, (unint64_t *)&qword_254188068);
  }
  return result;
}

void sub_2317FB0BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25820)
  {
    v0 = sub_2318D5184();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25820);
  }
}

uint64_t sub_2317FB118()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2317FB13C(void *a1, void *a2)
{
  uint64_t v2;

  sub_2317FA2B0(a1, a2, v2);
}

uint64_t sub_2317FB144(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  _BYTE v6[72];

  sub_2318D6348();
  sub_23183E8A4((uint64_t)v6);
  v3 = *(void **)(v1 + *(int *)(a1 + 20));
  sub_2318D6360();
  if (v3)
  {
    v4 = v3;
    sub_2318D5E80();

  }
  return sub_2318D6384();
}

void sub_2317FB1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  sub_23183E8A4(a1);
  v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_2318D6360();
  if (v4)
  {
    v5 = v4;
    sub_2318D5E80();

  }
}

uint64_t sub_2317FB248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  _BYTE v7[72];

  sub_2318D6348();
  sub_23183E8A4((uint64_t)v7);
  v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_2318D6360();
  if (v4)
  {
    v5 = v4;
    sub_2318D5E80();

  }
  return sub_2318D6384();
}

unint64_t sub_2317FB2C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_2318013F8();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_231801474();
  v7 = sub_2318D61A4();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2317D404C(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_2318013F8);
    result = sub_2317FC024((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_2318D2B80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FB450(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2317FFF18();
  v2 = (_QWORD *)sub_2318D61A4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_2317FC0BC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FB554(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_231801044();
  v2 = sub_2318D61A4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2317D404C(v6, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_2318010AC);
    result = sub_2317FC1B8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_2317E6D40(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FB690(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23180463C();
  v2 = sub_2318D61A4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_231801200(v6, (uint64_t)&v13, (unint64_t *)&qword_255F25990, type metadata accessor for Key);
    v7 = v13;
    result = sub_2317FC1E8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_2317E6D40(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FB7C4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23180136C(0, &qword_255F258C0, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (unint64_t *)&unk_25418B090, (uint64_t)&unk_2318D8170);
  v2 = sub_2318D61A4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_231801200(v6, (uint64_t)&v13, &qword_255F258C8, type metadata accessor for OpenURLOptionsKey);
    v7 = v13;
    result = sub_2317FC2F8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_2317E6D40(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FB918(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2318016A8();
  v2 = (_QWORD *)sub_2318D61A4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2317FC0F0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2317FBA28(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23180136C(0, &qword_255F258A0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, &qword_255F252B8, (uint64_t)&unk_2318D81B4);
  v2 = sub_2318D61A4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_231801200(v6, (uint64_t)&v13, &qword_255F258A8, type metadata accessor for OpenExternalURLOptionsKey);
    v7 = v13;
    result = sub_2317FC2F8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_2317E6D40(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_2317FBB7C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x24BDD3100]);
  if (!result)
    __break(1u);
  return result;
}

void *sub_2317FBBC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 20));
  v3 = v2;
  return v2;
}

uint64_t sub_2317FBBEC()
{
  return 0;
}

unint64_t sub_2317FBC00()
{
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t sub_2317FBC8C()
{
  sub_2318D3834();
  return sub_2318D3438();
}

id sub_2317FBCC0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;

  v38 = a6;
  v39 = a7;
  v40 = a8;
  v41 = a5;
  sub_2317DC15C(0, &qword_255F25850, &qword_255F25858, 0x24BE4A5C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v35 = sub_2318D5778();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_2317CCC9C(0, &qword_25418B460);
    v36 = sub_2318D5778();
    swift_bridgeObjectRelease();
    v16 = a10[3];
    if (v16)
    {
LABEL_3:
      v17 = sub_2317D4B08(a10, v16);
      v18 = *(_QWORD *)(v16 - 8);
      MEMORY[0x24BDAC7A8](v17);
      v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      v21 = sub_2318D62AC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      sub_2317D4B2C((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    v36 = 0;
    v16 = a10[3];
    if (v16)
      goto LABEL_3;
  }
  v21 = 0;
LABEL_6:
  v22 = sub_2318D2A90();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a11, 1, v22) != 1)
  {
    v24 = (void *)sub_2318D2A18();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a11, v22);
  }
  if (a13)
  {
    sub_2317CCC9C(0, &qword_25418B460);
    sub_2317CCC9C(0, &qword_254189E98);
    sub_2317FFEC0();
    v25 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v33 = v21;
  v26 = v40;
  v27 = v39;
  v29 = (void *)v36;
  v28 = v37;
  v30 = (void *)v35;
  v37 = a9;
  v31 = v38;
  v34 = objc_msgSend(v28, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v35, a2, v36, a4, v41, v38, v39, v40, a9, v33, v24, a12, v25);

  swift_unknownObjectRelease();
  return v34;
}

unint64_t sub_2317FBF8C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_2318D54C0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
  sub_2317CC4AC(&qword_255F25840, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
  v3 = sub_2318D5514();
  return sub_2317FC384(a1, v3, v2, &qword_255F27290, MEMORY[0x24BDD24B0]);
}

unint64_t sub_2317FC024(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_2318D2B80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
  sub_2317CC4AC(&qword_25418A9E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], MEMORY[0x24BDCF690]);
  v3 = sub_2318D5514();
  return sub_2317FC384(a1, v3, v2, &qword_25418A9E8, MEMORY[0x24BDCF6A0]);
}

unint64_t sub_2317FC0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2318D5E68();
  return sub_2317FC4B4(a1, v2);
}

unint64_t sub_2317FC0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318D6348();
  sub_2318D567C();
  v4 = sub_2318D6384();
  return sub_2317FC5CC(a1, a2, v4);
}

unint64_t sub_2317FC154(uint64_t a1)
{
  uint64_t v2;

  sub_2318D6348();
  sub_2318D6354();
  v2 = sub_2318D6384();
  return sub_2317FC6AC(a1, v2);
}

unint64_t sub_2317FC1B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2318D6060();
  return sub_2317FC748(a1, v2);
}

unint64_t sub_2317FC1E8(uint64_t a1)
{
  uint64_t v2;

  sub_2318D55BC();
  sub_2318D6348();
  sub_2318D567C();
  v2 = sub_2318D6384();
  swift_bridgeObjectRelease();
  return sub_2317FC80C(a1, v2);
}

unint64_t sub_2317FC268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318D6348();
  sub_2318D6360();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
  }
  v4 = sub_2318D6384();
  return sub_2317FC980(a1, a2, v4);
}

unint64_t sub_2317FC2F8(uint64_t a1)
{
  uint64_t v2;

  sub_2318D55BC();
  sub_2318D6348();
  sub_2318D567C();
  v2 = sub_2318D6384();
  swift_bridgeObjectRelease();
  return sub_2317FC80C(a1, v2);
}

unint64_t sub_2317FC384(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_2317CC4AC(v21, v20, v22);
      v17 = sub_2318D5580();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_2317FC4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_2317CCC9C(0, &qword_25418B460);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_2318D5E74();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_2318D5E74();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_2317FC5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2318D62B8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2318D62B8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2317FC6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2317FC748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_231800FD4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2348E6E28](v9, a1);
      sub_231801010((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2317FC80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2318D55BC();
    v8 = v7;
    if (v6 == sub_2318D55BC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2318D55BC();
          v15 = v14;
          if (v13 == sub_2318D55BC() && v15 == v16)
            break;
          v18 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2317FC980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_2318D62B8() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_2317FCA48(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;
  __int128 v46;

  v3 = v2;
  v5 = sub_2318D54C0();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_23180157C();
  v44 = a2;
  v9 = sub_2318D6198();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_39;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v17++, 1))
      goto LABEL_41;
    if (v17 >= v41)
      break;
    v23 = v42;
    v24 = v42[v17];
    if (!v24)
    {
      v25 = v17 + 1;
      if (v17 + 1 >= v41)
      {
LABEL_32:
        swift_release();
        v3 = v40;
        if ((v44 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v24 = v42[v25];
      if (!v24)
      {
        while (1)
        {
          v17 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v17 >= v41)
            goto LABEL_32;
          v24 = v42[v17];
          ++v25;
          if (v24)
            goto LABEL_19;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v17;
    }
LABEL_19:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_20:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = *(_QWORD *)(v8 + 56) + 32 * v21;
      v46 = *(_OWORD *)v28;
      v29 = *(_BYTE *)(v28 + 16);
      v30 = *(_QWORD *)(v28 + 24);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = *(_QWORD *)(v8 + 56) + 32 * v21;
      v46 = *(_OWORD *)v31;
      v29 = *(_BYTE *)(v31 + 16);
      v30 = *(_QWORD *)(v31 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2317CC4AC(&qword_255F25840, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_2318D5514();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = *(_QWORD *)(v10 + 56) + 32 * v18;
    *(_OWORD *)v19 = v46;
    *(_BYTE *)(v19 + 16) = v29;
    *(_QWORD *)(v19 + 24) = v30;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_2317FCE10(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_2318D54C0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_2318015FC(0, &qword_255F258D8, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange);
  v42 = a2;
  v10 = sub_2318D6198();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_39;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_41;
    if (v18 >= v39)
      break;
    v23 = v40;
    v24 = v40[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v39)
      {
LABEL_32:
        swift_release();
        v3 = v38;
        if ((v42 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v24 = v40[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v39)
            goto LABEL_32;
          v24 = v40[v18];
          ++v25;
          if (v24)
            goto LABEL_19;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_19:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_20:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_2317CC4AC(&qword_255F25840, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_2318D5514();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_2317FD1A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  sub_231800F30();
  result = sub_2318D6198();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(void **)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        v30 = v29;
      sub_2318D6348();
      sub_2318D6354();
      result = sub_2318D6384();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2317FD46C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_2318D2F58();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_231801518();
  v43 = a2;
  v8 = sub_2318D6198();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_2318D6348();
      sub_2318D567C();
      result = sub_2318D6384();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_2317FD7D0(uint64_t a1, int a2)
{
  return sub_2317FD808(a1, a2, &qword_255F258E8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
}

uint64_t sub_2317FD7EC(uint64_t a1, int a2)
{
  return sub_2317FD808(a1, a2, &qword_255F258E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
}

uint64_t sub_2317FD808(uint64_t a1, int a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  int v48;

  v9 = v5;
  v11 = sub_2318D54C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v5;
  sub_2318015FC(0, a3, a4, a5);
  v48 = a2;
  v16 = sub_2318D6198();
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_41;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v46 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v44 = v5;
  v45 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  result = swift_retain();
  v24 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_22;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v45)
      break;
    v29 = v46;
    v30 = v46[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v45)
        goto LABEL_34;
      v30 = v46[v24];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v45)
        {
LABEL_34:
          swift_release();
          v9 = v44;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v46[v31];
        if (!v30)
        {
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v24 >= v45)
              goto LABEL_34;
            v30 = v46[v24];
            ++v31;
            if (v30)
              goto LABEL_21;
          }
        }
        v24 = v31;
      }
    }
LABEL_21:
    v21 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_22:
    v32 = *(_QWORD *)(v12 + 72);
    v33 = *(_QWORD *)(v15 + 48) + v32 * v27;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 32))(v14, v33, v11);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v33, v11);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
      swift_bridgeObjectRetain();
    }
    sub_2317CC4AC(&qword_255F25840, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    result = sub_2318D5514();
    v35 = -1 << *(_BYTE *)(v17 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v22 + 8 * (v36 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v22 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v22 + 8 * v37);
      }
      while (v41 == -1);
      v25 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v32 * v25, v14, v11);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v25) = v34;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release();
  v9 = v44;
  v29 = v46;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v15 + 32);
  if (v42 >= 64)
    bzero(v29, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v42;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v9 = v17;
  return result;
}

uint64_t sub_2317FDBB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_23180172C();
  v38 = a2;
  v6 = sub_2318D6198();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_2318D6348();
    sub_2318D567C();
    result = sub_2318D6384();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2317FDEBC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_2318D2B80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_231801474();
  v42 = a2;
  v10 = sub_2318D6198();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_2317CC4AC(&qword_25418A9E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], MEMORY[0x24BDCF690]);
    result = sub_2318D5514();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_2317FE24C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  sub_23180124C();
  v6 = sub_2318D6198();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v31 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30)
          goto LABEL_35;
        v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v30)
            goto LABEL_35;
          v18 = v31[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v31 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v13 >= v30)
                  goto LABEL_35;
                v18 = v31[v13];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v13 = v19;
          }
        }
LABEL_21:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2318D6348();
      sub_2318D6360();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_2318D567C();
        swift_bridgeObjectRelease();
      }
      result = sub_2318D6384();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v32;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v20;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2317FE568(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v7 = (_QWORD **)v6;
  v32 = a4;
  v31 = a3;
  v30 = a2;
  v11 = sub_2318D54C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_2317FBF8C(a5);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a6 & 1) != 0)
    {
LABEL_7:
      v23 = *v7;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7] + 32 * v17;
        v25 = v30;
        *(_QWORD *)v24 = a1;
        *(_QWORD *)(v24 + 8) = v25;
        *(_BYTE *)(v24 + 16) = v31;
        *(_QWORD *)(v24 + 24) = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a6 & 1) == 0)
    {
      sub_2317FED54();
      goto LABEL_7;
    }
    sub_2317FCA48(v20, a6 & 1);
    v27 = sub_2317FBF8C(a5);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v7;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
      return sub_2317FEB68(v17, (uint64_t)v14, a1, v30, v31, v32, v23);
    }
  }
  result = sub_2318D62F4();
  __break(1u);
  return result;
}

void sub_2317FE720(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2317FC154(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2317FF214();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_2317FD1A0(v13, a3 & 1);
  v18 = sub_2317FC154(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for HKTimeScope(0);
  sub_2318D62F4();
  __break(1u);
}

uint64_t sub_2317FE858(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2317FE890(a1, a2, a3, &qword_255F258E8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
}

uint64_t sub_2317FE874(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2317FE890(a1, a2, a3, &qword_255F258E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
}

uint64_t sub_2317FE890(uint64_t a1, uint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  _QWORD *v6;
  _QWORD **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;

  v29 = a5;
  v30 = a6;
  v8 = (_QWORD **)v6;
  v31 = a1;
  v11 = sub_2318D54C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_2317FBF8C(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a3 & 1) != 0)
  {
LABEL_7:
    v23 = *v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v24 + 8 * v17) = v31;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    sub_2317FF640(a4, v29, v30);
    goto LABEL_7;
  }
  sub_2317FD808(v20, a3 & 1, a4, v29, v30);
  v26 = sub_2317FBF8C(a2);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_2318D62F4();
    __break(1u);
    return result;
  }
  v17 = v26;
  v23 = *v8;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  return sub_2317FEC24(v17, (uint64_t)v14, v31, v23);
}

void sub_2317FEA0C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_2318D2B80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2317FC024(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2317FFA30();
    goto LABEL_7;
  }
  sub_2317FDEBC(v17, a3 & 1);
  v22 = sub_2317FC024(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_2318D62F4();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_2317FECBC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2317FEB68(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a7[6];
  v15 = sub_2318D54C0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = a7[7] + 32 * a1;
  *(_QWORD *)v17 = a3;
  *(_QWORD *)(v17 + 8) = a4;
  *(_BYTE *)(v17 + 16) = a5;
  *(_QWORD *)(v17 + 24) = a6;
  v18 = a7[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a7[2] = v20;
  return result;
}

uint64_t sub_2317FEC24(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2318D54C0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2317FECBC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2318D2B80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_2317FED54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;

  v1 = v0;
  v37 = sub_2318D54C0();
  v2 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23180157C();
  v4 = *v0;
  v5 = sub_2318D618C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v6;
    return result;
  }
  v33 = v1;
  result = (void *)(v5 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  v34 = v4 + 64;
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v38 = v4;
  v39 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v35 = (unint64_t)(v12 + 63) >> 6;
  v15 = v37;
  v16 = v6;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v38;
      goto LABEL_12;
    }
    v29 = __OFADD__(v10++, 1);
    v19 = v38;
    if (v29)
      goto LABEL_30;
    if (v10 >= v35)
    {
LABEL_27:
      result = (void *)swift_release();
      v1 = v33;
      v6 = v39;
      goto LABEL_28;
    }
    v30 = *(_QWORD *)(v34 + 8 * v10);
    if (!v30)
      break;
LABEL_24:
    v14 = (v30 - 1) & v30;
    v18 = __clz(__rbit64(v30)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v2 + 72) * v18;
    v21 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v36, *(_QWORD *)(v19 + 48) + v20, v15);
    v22 = 32 * v18;
    v23 = *(_QWORD *)(v19 + 56) + 32 * v18;
    v24 = *(_BYTE *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    v26 = *(_QWORD *)(v16 + 48) + v20;
    v27 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v40 = *(_OWORD *)v23;
    v27(v26, v21, v15);
    v28 = *(_QWORD *)(v16 + 56) + v22;
    *(_OWORD *)v28 = v40;
    *(_BYTE *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v10 + 1;
  if (v10 + 1 >= v35)
    goto LABEL_27;
  v30 = *(_QWORD *)(v34 + 8 * v31);
  if (v30)
  {
    ++v10;
    goto LABEL_24;
  }
  v6 = v39;
  while (1)
  {
    v10 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v10 >= v35)
    {
      result = (void *)swift_release();
      v1 = v33;
      goto LABEL_28;
    }
    v30 = *(_QWORD *)(v34 + 8 * v10);
    ++v31;
    if (v30)
      goto LABEL_24;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2317FEFDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = sub_2318D54C0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318015FC(0, &qword_255F258D8, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange);
  v6 = *v0;
  v7 = sub_2318D618C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_26:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      result = (void *)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

id sub_2317FF214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_231800F30();
  v2 = *v0;
  v3 = sub_2318D618C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2317FF3B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_2318D2F58();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231801518();
  v31 = v0;
  v4 = *v0;
  v5 = sub_2318D618C();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2317FF608()
{
  return sub_2317FF640(&qword_255F258E8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
}

void *sub_2317FF624()
{
  return sub_2317FF640(&qword_255F258E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
}

void *sub_2317FF640(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v7 = sub_2318D54C0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318015FC(0, a1, a2, a3);
  v30 = v3;
  v11 = *v3;
  v12 = sub_2318D618C();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v30 = v13;
    return result;
  }
  result = (void *)(v12 + 64);
  v15 = (unint64_t)((1 << *(_BYTE *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 64 + 8 * v15)
    result = memmove(result, (const void *)(v11 + 64), 8 * v15);
  v31 = v11 + 64;
  v17 = 0;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v11 + 16);
  v18 = 1 << *(_BYTE *)(v11 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v11 + 64);
  v32 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v17 << 6);
      goto LABEL_12;
    }
    v26 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v32)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v17;
    if (!v27)
    {
      v17 = v26 + 1;
      if (v26 + 1 >= v32)
        goto LABEL_26;
      v27 = *(_QWORD *)(v31 + 8 * v17);
      if (!v27)
        break;
    }
LABEL_25:
    v20 = (v27 - 1) & v27;
    v22 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v8 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(_QWORD *)(v11 + 48) + v23, v7);
    v24 = 8 * v22;
    v25 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v23, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + v24) = v25;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v32)
    goto LABEL_26;
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v17 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v17 >= v32)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v17);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2317FF884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_23180172C();
  v2 = *v0;
  v3 = sub_2318D618C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2317FFA30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_2318D2B80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231801474();
  v24 = v0;
  v5 = *v0;
  v6 = sub_2318D618C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2317FFC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  if ((sub_23183F62C() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for SharedMedicationsChartItem() + 20);
    v5 = *(void **)(a1 + v4);
    v6 = *(void **)(a2 + v4);
    if (v5)
    {
      if (v6)
      {
        sub_2317CCC9C(0, (unint64_t *)&unk_255F25998);
        v7 = v6;
        v8 = v5;
        v9 = sub_2318D5E74();

        if ((v9 & 1) != 0)
          return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

id sub_2317FFCF4()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  sub_2317CCC9C(0, &qword_254189EB8);
  v0 = (void *)MEMORY[0x2348E6978]();
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  objc_msgSend(v0, sel_setYAxis_, v1);
  sub_2317CCC9C(0, &qword_25418B460);
  v2 = (void *)sub_2318D5E5C();
  v3 = (void *)sub_2318D5E5C();
  v4 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v2, v3);

  sub_2317FB450(MEMORY[0x24BEE4AF8]);
  sub_2317CCC9C(0, &qword_254189E98);
  sub_2317FFEC0();
  v5 = (void *)sub_2318D54F0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v4, v5);

  objc_msgSend(v0, sel_setAxisScalingRule_, v6);
  objc_msgSend(v0, sel_setIsCriticalForAutoscale_, 1);
  v7 = v0;
  objc_msgSend(v7, sel_setInvertYAxis_, 0);

  return v7;
}

unint64_t sub_2317FFEC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254189F48;
  if (!qword_254189F48)
  {
    v1 = sub_2317CCC9C(255, &qword_25418B460);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254189F48);
  }
  return result;
}

void sub_2317FFF18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25838)
  {
    sub_2317CCC9C(255, &qword_25418B460);
    sub_2317CCC9C(255, &qword_254189E98);
    sub_2317FFEC0();
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25838);
  }
}

unint64_t sub_2317FFFB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  sub_231801114();
  v3 = (_QWORD *)sub_2318D61A4();
  v4 = *(_QWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  result = sub_2317FC154(v4);
  v7 = v16;
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 64;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = v3[7] + 24 * result;
    *(_OWORD *)v10 = v7;
    *(_QWORD *)(v10 + 16) = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 32;
    v4 = *(_QWORD *)v9;
    v17 = *(_OWORD *)(v9 + 8);
    v5 = *(_QWORD *)(v9 + 24);
    swift_unknownObjectRetain();
    result = sub_2317FC154(v4);
    v9 = v14;
    v7 = v17;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_2318000D4(void *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  objc_class *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  id v53;
  void (**v54)(_QWORD, _QWORD, _QWORD, _QWORD);
  unsigned int (*v55)(uint64_t, uint64_t, id);
  id v56;
  void (*v57)(char *, uint64_t, id);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  char *v68;
  id v69;
  char isUniquelyReferenced_nonNull_native;
  id v71;
  char v72;
  void (*v73)(char *, id);
  char *v74;
  char *v75;
  void *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  void *v79;
  char *v80;
  uint64_t v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t inited;
  id v98;
  id v99;
  id v100;
  unint64_t v101;
  id v102;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  id v109;
  char *v110;
  int *v111;
  char *v112;
  id v113;
  void (**v114)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v115;
  void (*v116)(char *, uint64_t);
  char *v117;
  id v118;
  char *v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123[4];
  objc_super v124;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v104 - v4;
  v6 = sub_2318D294C();
  v116 = *(void (**)(char *, uint64_t))(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v117 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v119 = (char *)&v104 - v9;
  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v2);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v105 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v104 - v13;
  sub_231800D60();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v106 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v112 = (char *)&v104 - v18;
  sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v115 = v19;
  v114 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))*((_QWORD *)v19 - 1);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v104 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v107 = (char *)&v104 - v22;
  v111 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x24BDAC7A8](v111);
  v24 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2318D4080();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v2);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v104 - v30;
  v118 = a1;
  v32 = objc_msgSend(a1, sel_CHRRoomApplicationItems);
  v33 = sub_2317FFCF4();
  if (v33)
  {
    v34 = v33;
    v109 = v32;
    v110 = v5;
    v121 = v6;
    v35 = sub_2318D29AC();
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v31, 1, 1, v35);
    sub_2318D4074();
    sub_2318D444C();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    sub_2317DD39C((uint64_t)v31, (unint64_t *)&qword_25418B2C0, v36);
    v37 = objc_allocWithZone((Class)sub_2318D426C());
    v38 = v34;
    v39 = objc_msgSend(v37, sel_init);
    v40 = objc_allocWithZone(MEMORY[0x24BE4A6A8]);
    v41 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    v42 = (void *)sub_2318D558C();
    v108 = objc_msgSend(v40, sel_initWithGraphSeries_displayName_unitName_valueFormatter_dataTypeCode_, v38, v41, v42, v39, 273);

    v120 = v38;
    v43 = v113;
    sub_2317D404C((uint64_t)v113, (uint64_t)v24, type metadata accessor for SharedMedicationsFeedItemData);
    v44 = (objc_class *)type metadata accessor for SharedMedicationsChartDataSouce();
    v45 = (char *)objc_allocWithZone(v44);
    *(_QWORD *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_dataBlockMap] = MEMORY[0x24BEE4B00];
    v46 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_decoder;
    sub_2318D2688();
    swift_allocObject();
    v47 = v45;
    *(_QWORD *)&v45[v46] = sub_2318D267C();
    sub_2317D404C((uint64_t)v24, (uint64_t)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_medication], type metadata accessor for SharedMedicationsFeedItemData);

    v124.receiver = v47;
    v124.super_class = v44;
    v48 = (char *)objc_msgSendSuper2(&v124, sel_init);
    sub_2317CF774((uint64_t)v24, type metadata accessor for SharedMedicationsFeedItemData);
    v49 = (uint64_t)v43 + v111[31];
    sub_231800DD4(v49, (uint64_t)v14);
    v50 = type metadata accessor for SharedMedicationsChartSeries(0);
    v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48);
    if (v51((uint64_t)v14, 1, v50) == 1)
    {
      sub_2317DD39C((uint64_t)v14, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
      v52 = (uint64_t)v112;
      ((void (**)(char *, uint64_t, uint64_t, id))v114)[7](v112, 1, 1, v115);
    }
    else
    {
      v52 = (uint64_t)v112;
      sub_2317D404C((uint64_t)v14, (uint64_t)v112, (uint64_t (*)(_QWORD))sub_231800D60);
      sub_2317CF774((uint64_t)v14, type metadata accessor for SharedMedicationsChartSeries);
      v54 = v114;
      v55 = (unsigned int (*)(uint64_t, uint64_t, id))v114[6];
      v56 = v115;
      if (v55(v52, 1, v115) != 1)
      {
        v57 = (void (*)(char *, uint64_t, id))v54[4];
        v58 = v107;
        v57(v107, v52, v56);
        v59 = v49;
        v60 = v105;
        sub_231800DD4(v59, v105);
        if (v51(v60, 1, v50) == 1)
        {
          sub_2317DD39C(v60, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
          v61 = v106;
          ((void (**)(uint64_t, uint64_t, uint64_t, id))v54)[7](v106, 1, 1, v56);
        }
        else
        {
          v62 = v60 + *(int *)(v50 + 20);
          v61 = v106;
          sub_2317D404C(v62, v106, (uint64_t (*)(_QWORD))sub_231800D60);
          sub_2317CF774(v60, type metadata accessor for SharedMedicationsChartSeries);
          if (v55(v61, 1, v56) != 1)
          {
            v63 = v104;
            v57(v104, v61, v56);
            v64 = (void *)sub_2318D53F4();
            v65 = (void *)sub_231877D4C(v64);

            v66 = (void *)sub_2318D53F4();
            v67 = (void *)sub_231877D4C(v66);

            v68 = &v48[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_dataBlockMap];
            swift_beginAccess();
            v69 = v65;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v122 = *(_QWORD *)v68;
            *(_QWORD *)v68 = 0x8000000000000000;
            sub_2317FE720((uint64_t)v69, 4, isUniquelyReferenced_nonNull_native);
            *(_QWORD *)v68 = v122;
            swift_bridgeObjectRelease();
            v71 = v67;
            v72 = swift_isUniquelyReferenced_nonNull_native();
            v122 = *(_QWORD *)v68;
            *(_QWORD *)v68 = 0x8000000000000000;
            sub_2317FE720((uint64_t)v71, 3, v72);
            *(_QWORD *)v68 = v122;
            swift_bridgeObjectRelease();
            swift_endAccess();

            v73 = (void (*)(char *, id))v54[1];
            v73(v63, v56);
            v73(v58, v56);
            goto LABEL_12;
          }
        }
        ((void (*)(char *, id))v54[1])(v58, v56);
        sub_2317CF774(v61, (uint64_t (*)(_QWORD))sub_231800D60);
LABEL_12:
        objc_msgSend(v120, sel_setDataSource_, v48);
        v74 = v119;
        sub_2318D2940();
        v75 = v117;
        sub_2318D28C8();
        v76 = (void *)sub_2318D28F8();
        v77 = (void (*)(char *, uint64_t))*((_QWORD *)v116 + 1);
        v78 = v121;
        v77(v75, v121);
        v116 = v77;
        sub_2318D28BC();
        v79 = (void *)sub_2318D28F8();
        v80 = v75;
        v81 = v78;
        v77(v80, v78);
        v82 = v76;
        v115 = v82;
        v83 = (void *)sub_2318D28F8();
        v84 = (void *)objc_opt_self();
        v117 = v48;
        v85 = objc_msgSend(v84, sel_valueRangeWithMinValue_maxValue_, v82, v83);

        v86 = v79;
        v87 = (void *)sub_2318D28F8();
        v114 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v86;
        v88 = objc_msgSend(v84, sel_valueRangeWithMinValue_maxValue_, v86, v87);

        sub_231800E30();
        v89 = swift_allocObject();
        *(_OWORD *)(v89 + 16) = xmmword_2318D8680;
        v90 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
        sub_2317CDA94(0, (unint64_t *)&qword_25418B490, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
        v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_2318D8530;
        v92 = v108;
        *(_QWORD *)(v91 + 32) = v108;
        v123[0] = v91;
        sub_2318D57A8();
        *(_QWORD *)(v89 + 32) = v123[0];
        v113 = v92;
        v118 = objc_msgSend(v118, sel_healthStore);
        v93 = v109;
        v112 = (char *)objc_msgSend(v109, sel_unitController);
        v111 = (int *)objc_msgSend(v93, sel_dateCache);
        v108 = objc_msgSend(v93, sel_chartDataCacheController);
        v107 = (char *)objc_msgSend(v93, sel_timeScopeController);
        v94 = objc_msgSend(v93, sel_sampleDateRangeController);
        v123[3] = v81;
        sub_2317DBF6C(v123);
        sub_2318D2940();
        v95 = sub_2318D2A90();
        v96 = (uint64_t)v110;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v110, 1, 1, v95);
        sub_2317D4194(0, &qword_255F25860, (uint64_t (*)(uint64_t))sub_231800EA4, v90);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2318D8510;
        *(_QWORD *)(inited + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 4);
        *(_QWORD *)(inited + 40) = v85;
        v98 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
        v99 = v85;
        *(_QWORD *)(inited + 48) = objc_msgSend(v98, sel_initWithInteger_, 3);
        *(_QWORD *)(inited + 56) = v88;
        v100 = v88;
        v101 = sub_2317FB450(inited);
        v102 = objc_allocWithZone(MEMORY[0x24BE4A6C8]);
        v53 = sub_2317FBCC0(v89, 0, 0, v118, v112, v111, v108, v107, v94, v123, v96, 0x2000, v101);

        v116(v74, v121);
        return v53;
      }
    }
    sub_2317CF774(v52, (uint64_t (*)(_QWORD))sub_231800D60);
    goto LABEL_12;
  }

  return 0;
}

void sub_231800D60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541880E8)
  {
    sub_2317DC15C(255, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541880E8);
  }
}

uint64_t sub_231800DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_231800E30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25848)
  {
    sub_2317DC15C(255, &qword_255F25850, &qword_255F25858, 0x24BE4A5C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25848);
  }
}

void sub_231800EA4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F25868)
  {
    sub_2317CCC9C(255, &qword_25418B460);
    sub_2317CCC9C(255, &qword_254189E98);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F25868);
  }
}

void sub_231800F30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25870)
  {
    type metadata accessor for HKTimeScope(255);
    sub_2317CCC9C(255, &qword_255F25878);
    sub_2317CC4AC(&qword_255F25880, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, (uint64_t)&unk_2318D7820);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25870);
  }
}

uint64_t sub_231800FD4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_231801010(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void sub_231801044()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B140)
  {
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B140);
  }
}

void sub_2318010AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25418B118)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25418B118);
  }
}

void sub_231801114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25888)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_2318011A8();
    sub_2317CC4AC(&qword_255F25898, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_2318D81F8);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25888);
  }
}

unint64_t sub_2318011A8()
{
  unint64_t result;

  result = qword_255F25890;
  if (!qword_255F25890)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F25890);
  }
  return result;
}

uint64_t sub_231801200(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2318046C0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_23180124C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F258B0)
  {
    sub_2317CDA94(255, &qword_254189D10, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2317DC15C(255, &qword_25418AFD8, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2318012FC();
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F258B0);
  }
}

unint64_t sub_2318012FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255F258B8;
  if (!qword_255F258B8)
  {
    sub_2317CDA94(255, &qword_254189D10, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255F258B8);
  }
  return result;
}

void sub_23180136C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_2317CC4AC(a4, a3, a5);
    v9 = sub_2318D61B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2318013F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25418A9F0)
  {
    sub_2318D2B80();
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B0B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25418A9F0);
  }
}

void sub_231801474()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25418B128)
  {
    sub_2318D2B80();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678];
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B0B0);
    sub_2317CC4AC(&qword_25418A9E0, v0, MEMORY[0x24BDCF690]);
    v1 = sub_2318D61B0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25418B128);
  }
}

void sub_231801518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189F60)
  {
    sub_2318D2F58();
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189F60);
  }
}

void sub_23180157C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F258D0)
  {
    sub_2318D54C0();
    sub_2317CC4AC(&qword_255F25840, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A0]);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F258D0);
  }
}

void sub_2318015FC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_2318D54C0();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
    sub_2317D4194(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317CC4AC(&qword_255F25840, v7, MEMORY[0x24BDD24A0]);
    v8 = sub_2318D61B0();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2318016A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B138)
  {
    sub_2317DC15C(255, (unint64_t *)&qword_25418B430, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B138);
  }
}

void sub_23180172C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B130)
  {
    sub_2317CCC9C(255, &qword_25418B428);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B130);
  }
}

_QWORD *sub_2318017A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  char *v80;
  int *v82;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    v12 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v12;
    v13 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v13;
    v14 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v14;
    v15 = a2[20];
    *(_QWORD *)(a1 + 152) = a2[19];
    *(_QWORD *)(a1 + 160) = v15;
    v16 = a2[22];
    *(_QWORD *)(a1 + 168) = a2[21];
    *(_QWORD *)(a1 + 176) = v16;
    v17 = a2[24];
    *(_QWORD *)(a1 + 184) = a2[23];
    *(_QWORD *)(a1 + 192) = v17;
    v18 = a2[26];
    *(_QWORD *)(a1 + 200) = a2[25];
    *(_QWORD *)(a1 + 208) = v18;
    v19 = a2[28];
    *(_QWORD *)(a1 + 216) = a2[27];
    *(_QWORD *)(a1 + 224) = v19;
    *(_QWORD *)(a1 + 232) = a2[29];
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    v20 = a2[32];
    *(_QWORD *)(a1 + 248) = a2[31];
    *(_QWORD *)(a1 + 256) = v20;
    *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
    v21 = a2[35];
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_QWORD *)(a1 + 280) = v21;
    v22 = a2[37];
    *(_QWORD *)(a1 + 288) = a2[36];
    *(_QWORD *)(a1 + 296) = v22;
    v23 = a2[38];
    *(_BYTE *)(a1 + 312) = *((_BYTE *)a2 + 312);
    *(_QWORD *)(a1 + 304) = v23;
    v24 = a2[40];
    *(_BYTE *)(a1 + 328) = *((_BYTE *)a2 + 328);
    *(_QWORD *)(a1 + 320) = v24;
    v82 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
    v25 = v82[27];
    v80 = (char *)v4 + v25;
    v79 = (char *)a2 + v25;
    sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v27 = v26;
    v28 = *(_QWORD *)(v26 - 8);
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v78(v79, 1, v27))
    {
      sub_231801E98();
      memcpy(v80, v79, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v80, v79, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v80, 0, 1, v27);
    }
    v31 = v82;
    v32 = v82[28];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v36 = v35;
    v37 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
    {
      sub_231801F0C();
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    v39 = v82[29];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v43 = v42;
    v44 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
    {
      sub_231801F80();
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v41, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
    }
    *(_QWORD *)((char *)v4 + v82[30]) = *(uint64_t *)((char *)a2 + v82[30]);
    v46 = v82[31];
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for SharedMedicationsChartSeries(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
      v54 = v53;
      v55 = *(_QWORD *)(v53 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      if (v56(v48, 1, v53))
      {
        sub_231800D60();
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v48, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v54);
      }
      v58 = *(int *)(v49 + 20);
      v59 = &v47[v58];
      v60 = &v48[v58];
      if (v56(v60, 1, v54))
      {
        sub_231800D60();
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v59, v60, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v59, 0, 1, v54);
      }
      v31 = v82;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *((_BYTE *)v4 + v31[32]) = *((_BYTE *)a2 + v31[32]);
    v62 = v31[33];
    v63 = (char *)v4 + v62;
    v64 = (char *)a2 + v62;
    v65 = sub_2318D294C();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    v68 = v31[34];
    v69 = (char *)v4 + v68;
    v70 = (char *)a2 + v68;
    v71 = sub_2318D2FC4();
    v72 = *(_QWORD *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v74 = *(int *)(a3 + 20);
    v75 = *(void **)((char *)a2 + v74);
    *(_QWORD *)((char *)v4 + v74) = v75;
    v76 = v75;
  }
  return v4;
}

void sub_231801E98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254188100)
  {
    sub_2317DC15C(255, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254188100);
  }
}

void sub_231801F0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254188118)
  {
    sub_2317DC15C(255, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254188118);
  }
}

void sub_231801F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254188130)
  {
    sub_2317DC15C(255, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254188130);
  }
}

void sub_231801FF4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  v5 = a1 + v4[27];
  sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  v9 = a1 + v4[28];
  sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  v13 = a1 + v4[29];
  sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  swift_bridgeObjectRelease();
  v17 = a1 + v4[31];
  v18 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    if (!v22(v17, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v17, v20);
    v23 = v17 + *(int *)(v18 + 20);
    if (!v22(v23, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  }
  v24 = a1 + v4[33];
  v25 = sub_2318D294C();
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  v27 = a1 + v4[34];
  v28 = sub_2318D2FC4();
  v29 = *(_QWORD *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);

}

uint64_t sub_231802330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  unsigned int (*v76)(const void *, uint64_t, uint64_t);
  const void *v77;
  void *v78;
  int *v80;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  v17 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v17;
  v18 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v18;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v19 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v19;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  v21 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v21;
  v22 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v22;
  v23 = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = v23;
  v80 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  v24 = v80[27];
  v78 = (void *)(a1 + v24);
  v77 = (const void *)(a2 + v24);
  sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v76(v77, 1, v26))
  {
    sub_231801E98();
    memcpy(v78, v77, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v78, v77, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v78, 0, 1, v26);
  }
  v29 = v80;
  v30 = v80[28];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v33))
  {
    sub_231801F0C();
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v31, v32, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
  }
  v37 = v80[29];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v41 = v40;
  v42 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v40))
  {
    sub_231801F80();
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v38, v39, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
  }
  *(_QWORD *)(a1 + v80[30]) = *(_QWORD *)(a2 + v80[30]);
  v44 = v80[31];
  v45 = (char *)(a1 + v44);
  v46 = (char *)(a2 + v44);
  v47 = type metadata accessor for SharedMedicationsChartSeries(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  if (v49(v46, 1, v47))
  {
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v52 = v51;
    v53 = *(_QWORD *)(v51 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v54(v46, 1, v51))
    {
      sub_231800D60();
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v45, v46, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v45, 0, 1, v52);
    }
    v56 = *(int *)(v47 + 20);
    v57 = &v45[v56];
    v58 = &v46[v56];
    if (v54(v58, 1, v52))
    {
      sub_231800D60();
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v57, v58, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
    }
    v29 = v80;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  *(_BYTE *)(a1 + v29[32]) = *(_BYTE *)(a2 + v29[32]);
  v60 = v29[33];
  v61 = (void *)(a1 + v60);
  v62 = (const void *)(a2 + v60);
  v63 = sub_2318D294C();
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  v66 = v29[34];
  v67 = (void *)(a1 + v66);
  v68 = (const void *)(a2 + v66);
  v69 = sub_2318D2FC4();
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  v72 = *(int *)(a3 + 20);
  v73 = *(void **)(a2 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  v74 = v73;
  return a1;
}

uint64_t sub_2318029FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  size_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v5;
  v6 = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = v6;
  v7 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  v8 = v7[27];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v9, 1, v11);
  v16 = v14(v10, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v9, v12);
LABEL_6:
    sub_231801E98();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v9, v10, v12);
LABEL_7:
  v18 = v7[28];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v19, 1, v21);
  v26 = v24(v20, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v19, v20, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v22);
LABEL_12:
    sub_231801F0C();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v19, v20, v22);
LABEL_13:
  v28 = v7[29];
  v29 = (void *)(a1 + v28);
  v30 = (void *)(a2 + v28);
  sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v29, 1, v31);
  v36 = v34(v30, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v29, v32);
LABEL_18:
    sub_231801F80();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v29, v30, v32);
LABEL_19:
  *(_QWORD *)(a1 + v7[30]) = *(_QWORD *)(a2 + v7[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v7[31];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = type metadata accessor for SharedMedicationsChartSeries(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_2317CF774((uint64_t)v39, type metadata accessor for SharedMedicationsChartSeries);
      v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_24;
    }
    sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v57 = v56;
    v58 = *(_QWORD *)(v56 - 8);
    v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
    v60 = v59(v39, 1, v56);
    v61 = v59(v40, 1, v57);
    if (v60)
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v39, v40, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v39, 0, 1, v57);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v39, v40, v57);
LABEL_57:
        v90 = *(int *)(v41 + 20);
        v91 = &v39[v90];
        v92 = &v40[v90];
        v93 = v59(v91, 1, v57);
        v94 = v59(v92, 1, v57);
        if (v93)
        {
          if (!v94)
          {
            (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v91, v92, v57);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v91, 0, 1, v57);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v94)
          {
            (*(void (**)(char *, char *, uint64_t))(v58 + 24))(v91, v92, v57);
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v58 + 8))(v91, v57);
        }
        sub_231800D60();
        v48 = *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64);
        v49 = v91;
        v50 = v92;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v57);
    }
    sub_231800D60();
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_57;
  }
  if (v45)
  {
    v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_24:
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v46);
    v48 = *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64);
    v49 = v39;
    v50 = v40;
LABEL_25:
    memcpy(v49, v50, v48);
    goto LABEL_39;
  }
  sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v52 = v51;
  v53 = *(_QWORD *)(v51 - 8);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v96 = v53;
  if (v54(v40, 1, v51))
  {
    sub_231800D60();
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v39, v40, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v39, 0, 1, v52);
  }
  v62 = *(int *)(v41 + 20);
  v63 = &v39[v62];
  v64 = &v40[v62];
  if (v54(v64, 1, v52))
  {
    sub_231800D60();
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v63, v64, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v63, 0, 1, v52);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_39:
  *(_BYTE *)(a1 + v7[32]) = *(_BYTE *)(a2 + v7[32]);
  v66 = v7[33];
  v67 = (void *)(a1 + v66);
  v68 = (void *)(a2 + v66);
  v69 = sub_2318D294C();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
  v72 = v71(v67, 1, v69);
  v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(void *, void *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v73)
  {
    (*(void (**)(void *, uint64_t))(v70 + 8))(v67, v69);
LABEL_44:
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, void *, uint64_t))(v70 + 24))(v67, v68, v69);
LABEL_45:
  v75 = v7[34];
  v76 = (void *)(a1 + v75);
  v77 = (void *)(a2 + v75);
  v78 = sub_2318D2FC4();
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(void *, void *, uint64_t))(v79 + 24))(v76, v77, v78);
      goto LABEL_51;
    }
    (*(void (**)(void *, uint64_t))(v79 + 8))(v76, v78);
    goto LABEL_50;
  }
  if (v82)
  {
LABEL_50:
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(void *, void *, uint64_t))(v79 + 16))(v76, v77, v78);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
LABEL_51:
  v84 = *(int *)(a3 + 20);
  v85 = *(void **)(a1 + v84);
  v86 = *(void **)(a2 + v84);
  *(_QWORD *)(a1 + v84) = v86;
  v87 = v86;

  return a1;
}

uint64_t sub_2318034CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v9 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  v10 = v9[27];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    sub_231801E98();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  v17 = v9[28];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_231801F0C();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  v24 = v9[29];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_231801F80();
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(_QWORD *)(a1 + v9[30]) = *(_QWORD *)(a2 + v9[30]);
  v31 = v9[31];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  v34 = type metadata accessor for SharedMedicationsChartSeries(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v60 = a3;
    sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v38 = v37;
    v39 = *(_QWORD *)(v37 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    v59 = v39;
    if (v40(v33, 1, v37))
    {
      sub_231800D60();
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
    }
    v42 = *(int *)(v34 + 20);
    v43 = &v32[v42];
    v44 = &v33[v42];
    if (v40(v44, 1, v38))
    {
      sub_231800D60();
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v43, v44, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v43, 0, 1, v38);
    }
    a3 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  *(_BYTE *)(a1 + v9[32]) = *(_BYTE *)(a2 + v9[32]);
  v46 = v9[33];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = sub_2318D294C();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v52 = v9[34];
  v53 = (void *)(a1 + v52);
  v54 = (const void *)(a2 + v52);
  v55 = sub_2318D2FC4();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v53, v54, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_231803AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  size_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v19 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  v22 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  v23 = v22[27];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  sub_2317DC15C(0, &qword_2541880F8, &qword_254189E78, 0x24BDD3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v24, 1, v26);
  v31 = v29(v25, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
LABEL_6:
    sub_231801E98();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v24, v25, v27);
LABEL_7:
  v33 = v22[28];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  sub_2317DC15C(0, &qword_254188110, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v37 = v36;
  v38 = *(_QWORD *)(v36 - 8);
  v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v34, 1, v36);
  v41 = v39(v35, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v38 + 32))(v34, v35, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v34, v37);
LABEL_12:
    sub_231801F0C();
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v38 + 40))(v34, v35, v37);
LABEL_13:
  v43 = v22[29];
  v44 = (void *)(a1 + v43);
  v45 = (void *)(a2 + v43);
  sub_2317DC15C(0, &qword_254188128, &qword_25418B438, 0x24BDD3D30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v47 = v46;
  v48 = *(_QWORD *)(v46 - 8);
  v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v44, 1, v46);
  v51 = v49(v45, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v44, v47);
LABEL_18:
    sub_231801F80();
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v44, v45, v47);
LABEL_19:
  *(_QWORD *)(a1 + v22[30]) = *(_QWORD *)(a2 + v22[30]);
  swift_bridgeObjectRelease();
  v53 = v22[31];
  v54 = (char *)(a1 + v53);
  v55 = (char *)(a2 + v53);
  v56 = type metadata accessor for SharedMedicationsChartSeries(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_2317CF774((uint64_t)v54, type metadata accessor for SharedMedicationsChartSeries);
      v61 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_24;
    }
    sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    v72 = v71;
    v73 = *(_QWORD *)(v71 - 8);
    v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v75 = v74(v54, 1, v71);
    v76 = v74(v55, 1, v72);
    if (v75)
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v54, v55, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v54, 0, 1, v72);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v54, v55, v72);
LABEL_57:
        v103 = *(int *)(v56 + 20);
        v104 = &v54[v103];
        v105 = &v55[v103];
        v106 = v74(v104, 1, v72);
        v107 = v74(v105, 1, v72);
        if (v106)
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v104, v105, v72);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v104, 0, 1, v72);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v107)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v104, v105, v72);
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v73 + 8))(v104, v72);
        }
        sub_231800D60();
        v63 = *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64);
        v64 = v104;
        v65 = v105;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v72);
    }
    sub_231800D60();
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_57;
  }
  if (v60)
  {
    v61 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_24:
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v61);
    v63 = *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64);
    v64 = v54;
    v65 = v55;
LABEL_25:
    memcpy(v64, v65, v63);
    goto LABEL_39;
  }
  sub_2317DC15C(0, &qword_2541880E0, &qword_254189E70, 0x24BE4A340, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v67 = v66;
  v68 = *(_QWORD *)(v66 - 8);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  v109 = v68;
  if (v69(v55, 1, v66))
  {
    sub_231800D60();
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v54, v55, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v54, 0, 1, v67);
  }
  v77 = *(int *)(v56 + 20);
  v78 = &v54[v77];
  v79 = &v55[v77];
  if (v69(v79, 1, v67))
  {
    sub_231800D60();
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v78, v79, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v78, 0, 1, v67);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_39:
  *(_BYTE *)(a1 + v22[32]) = *(_BYTE *)(a2 + v22[32]);
  v81 = v22[33];
  v82 = (void *)(a1 + v81);
  v83 = (void *)(a2 + v81);
  v84 = sub_2318D294C();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v85 + 32))(v82, v83, v84);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
LABEL_44:
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, void *, uint64_t))(v85 + 40))(v82, v83, v84);
LABEL_45:
  v90 = v22[34];
  v91 = (void *)(a1 + v90);
  v92 = (void *)(a2 + v90);
  v93 = sub_2318D2FC4();
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v91, 1, v93);
  v97 = v95(v92, 1, v93);
  if (!v96)
  {
    if (!v97)
    {
      (*(void (**)(void *, void *, uint64_t))(v94 + 40))(v91, v92, v93);
      goto LABEL_51;
    }
    (*(void (**)(void *, uint64_t))(v94 + 8))(v91, v93);
    goto LABEL_50;
  }
  if (v97)
  {
LABEL_50:
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(void *, void *, uint64_t))(v94 + 32))(v91, v92, v93);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
LABEL_51:
  v99 = *(int *)(a3 + 20);
  v100 = *(void **)(a1 + v99);
  *(_QWORD *)(a1 + v99) = *(_QWORD *)(a2 + v99);

  return a1;
}

uint64_t sub_23180444C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231804458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for SharedMedicationsFeedItemData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2318044E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2318044EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SharedMedicationsFeedItemData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for SharedMedicationsChartItem()
{
  uint64_t result;

  result = qword_255F25948;
  if (!qword_255F25948)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2318045A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_231804610()
{
  return sub_2317CC4AC(&qword_255F25980, (uint64_t (*)(uint64_t))type metadata accessor for SharedMedicationsChartItem, (uint64_t)&unk_2318D90C8);
}

void sub_23180463C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25988)
  {
    type metadata accessor for Key(255);
    sub_2317CC4AC(&qword_255F252E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8380);
    v0 = sub_2318D61B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25988);
  }
}

void sub_2318046C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t type metadata accessor for CHRAddAccountDataSource()
{
  uint64_t result;

  result = qword_25418ABF8;
  if (!qword_25418ABF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23180475C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231804798(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - v3;
  sub_2318D3090();
  v5 = (void *)MEMORY[0x2348E3E34]();
  v6 = (void *)sub_2318D306C();
  sub_2317D4194(0, (unint64_t *)&qword_25418B468, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = sub_2318D2C04();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2318D8680;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x24BE474E0], v7);
  v11 = sub_2318D2E8C();
  v13 = v12;
  v14 = sub_2318D2718();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_231804F78(0, &qword_25418B158);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2318D8510;
  *(_QWORD *)(v15 + 32) = sub_2318D2C58();
  *(_QWORD *)(v15 + 40) = 0;
  v16 = (void *)MEMORY[0x2348E3E04](v10, v11, v13, v4, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_231804F24((uint64_t)v4);
  sub_2318D2EA4();
  v17 = (void *)sub_2318D3060();
  swift_bridgeObjectRelease();
  sub_231804F78(0, (unint64_t *)&qword_25418B490);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2318D8AB0;
  *(_QWORD *)(v18 + 32) = v6;
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v33 = v18;
  sub_2318D57A8();
  sub_2317CCC9C(0, &qword_25418B3F8);
  v19 = v6;
  v20 = v16;
  v21 = v17;
  v22 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v22);

  objc_msgSend(v5, sel_setPredicate_, v23);
  v24 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v25 = (void *)sub_2318D558C();
  v26 = objc_msgSend(v24, sel_initWithKey_ascending_, v25, 0);

  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2318D8530;
  *(_QWORD *)(v27 + 32) = v26;
  v33 = v27;
  sub_2318D57A8();
  sub_2317CCC9C(0, &qword_25418B408);
  v28 = v26;
  v29 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v29);

  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB688]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v5, a1, 0, 0);
  v30 = sub_2318D3CF0();

  return v30;
}

void sub_231804BA8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_231804BD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHRAddAccountDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231804C08()
{
  return type metadata accessor for CHRAddAccountDataSource();
}

void sub_231804C10()
{
  sub_231804D00();
}

unint64_t sub_231804C24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v2 = sub_2318D4BD8();
  MEMORY[0x24BDAC7A8](v2);
  sub_2318D2E80();
  sub_2318D4B90();
  v3 = sub_2318D3378();
  swift_allocObject();
  v4 = sub_2318D336C();
  a1[3] = v3;
  result = sub_231804EDC();
  a1[4] = result;
  *a1 = v4;
  return result;
}

void sub_231804D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[2];

  v0 = sub_2318D3630();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D3528();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_2318D351C();
    v12 = v16[1];
    v13 = sub_2318D3510();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v15 = objc_msgSend((id)objc_opt_self(), sel_estimatedDimension_, 100.0);
      sub_2318D5CAC();

    }
  }
  else
  {
    sub_2318D3618();
    sub_2318D360C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

unint64_t sub_231804EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418AA58;
  if (!qword_25418AA58)
  {
    v1 = sub_2318D3378();
    result = MEMORY[0x2348E7734](MEMORY[0x24BE42230], v1);
    atomic_store(result, (unint64_t *)&qword_25418AA58);
  }
  return result;
}

uint64_t sub_231804F24(uint64_t a1)
{
  uint64_t v2;

  sub_2317D4194(0, (unint64_t *)&unk_25418B2E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_231804F78(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2318D6294();
    if (!v4)
      atomic_store(v3, a2);
  }
}

ValueMetadata *type metadata accessor for MedicationsArticleDataProvider()
{
  return &type metadata for MedicationsArticleDataProvider;
}

unint64_t sub_231804FD0()
{
  return 0xD000000000000024;
}

uint64_t sub_231804FEC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for MedicationsHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_2318D2808();

  return v2;
}

uint64_t sub_2318050AC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for MedicationsHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_2318D2808();

  return v2;
}

void sub_231805178()
{
  void *v0;
  void *v1;
  id v2;

  sub_231805FA4();
  v0 = (void *)sub_2318D5E50();
  v1 = (void *)sub_2318D558C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (!v2)
    __break(1u);
}

uint64_t sub_23180520C()
{
  unint64_t inited;
  uint64_t v1;

  sub_2317E2280();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2318D8530;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  sub_2318D57A8();
  v1 = sub_23186343C(inited);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2318052A4()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for MedicationsHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_2318D2808();

  return v2;
}

void sub_231805368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(_QWORD);

  sub_231805F50();
  v0 = sub_2318D3240();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2318D91C0;
  sub_231805FA4();
  v5 = (void *)sub_2318D5E50();
  v6 = (void *)sub_2318D558C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (v7)
  {
    v8 = v4 + v3;
    *(_QWORD *)v8 = v7;
    *(_BYTE *)(v8 + 8) = 0;
    v103 = *(void (**)(_QWORD))(v1 + 104);
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v4 + v3, *MEMORY[0x24BE3F908], v0);
    v9 = v0;
    v101 = v0;
    v10 = (uint64_t *)(v4 + v3 + v2);
    type metadata accessor for MedicationsHealthPluginDelegate();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v99 = (id)objc_opt_self();
    v12 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata);
    v13 = sub_2318D2808();
    v15 = v14;

    *v10 = v13;
    v10[1] = v15;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v8 + v2, *MEMORY[0x24BE3F910], v9);
    v98 = 2 * v2;
    v16 = v2;
    v102 = v2;
    v17 = v8 + 2 * v2;
    v18 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v19 = sub_2318D2808();
    v21 = v20;

    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v21;
    *(_BYTE *)(v17 + 16) = 0;
    v22 = *MEMORY[0x24BE3F930];
    v100 = *MEMORY[0x24BE3F930];
    ((void (*)(unint64_t, uint64_t, uint64_t))v103)(v17, v22, v101);
    v23 = v8 + v98 + v16;
    v24 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v25 = sub_2318D2808();
    v27 = v26;

    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v27;
    *(_BYTE *)(v23 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v103)(v23, v22, v101);
    v28 = (uint64_t *)(v8 + 4 * v102);
    v29 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v30 = sub_2318D2808();
    v32 = v31;

    *v28 = v30;
    v28[1] = v32;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v103)(v28, *MEMORY[0x24BE3F928], v101);
    v33 = v8 + 5 * v102;
    v34 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v35 = sub_2318D2808();
    v37 = v36;

    *(_QWORD *)v33 = v35;
    *(_QWORD *)(v33 + 8) = v37;
    *(_BYTE *)(v33 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v33, v100, v101);
    v38 = v8 + 6 * v102;
    v39 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v40 = sub_2318D2808();
    v42 = v41;

    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v42;
    *(_BYTE *)(v38 + 16) = 1;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v38, v100, v101);
    v43 = (uint64_t *)(v8 + 7 * v102);
    v44 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v45 = sub_2318D2808();
    v47 = v46;

    *v43 = v45;
    v43[1] = v47;
    v43[2] = 0;
    LODWORD(v98) = *MEMORY[0x24BE3F8D0];
    v103(v43);
    v48 = v8 + 8 * v102;
    v49 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v50 = sub_2318D2808();
    v52 = v51;

    *(_QWORD *)v48 = v50;
    *(_QWORD *)(v48 + 8) = v52;
    *(_BYTE *)(v48 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v48, v100, v101);
    v53 = v8 + 9 * v102;
    v54 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v55 = sub_2318D2808();
    v57 = v56;

    *(_QWORD *)v53 = v55;
    *(_QWORD *)(v53 + 8) = v57;
    *(_BYTE *)(v53 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v53, v100, v101);
    v58 = v8 + 10 * v102;
    v59 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v60 = sub_2318D2808();
    v62 = v61;

    *(_QWORD *)v58 = v60;
    *(_QWORD *)(v58 + 8) = v62;
    *(_BYTE *)(v58 + 16) = 1;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v58, v100, v101);
    v63 = (uint64_t *)(v8 + 11 * v102);
    v64 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v65 = sub_2318D2808();
    v67 = v66;

    *v63 = v65;
    v63[1] = v67;
    v63[2] = 0;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v103)(v63, v98, v101);
    v68 = v8 + 12 * v102;
    v69 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v70 = sub_2318D2808();
    v72 = v71;

    *(_QWORD *)v68 = v70;
    *(_QWORD *)(v68 + 8) = v72;
    *(_BYTE *)(v68 + 16) = 1;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v68, v100, v101);
    v73 = (uint64_t *)(v8 + 13 * v102);
    v74 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v75 = sub_2318D2808();
    v77 = v76;

    *v73 = v75;
    v73[1] = v77;
    v73[2] = 0;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v103)(v73, v98, v101);
    v78 = v8 + 14 * v102;
    v79 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v80 = sub_2318D2808();
    v82 = v81;

    *(_QWORD *)v78 = v80;
    *(_QWORD *)(v78 + 8) = v82;
    *(_BYTE *)(v78 + 16) = 1;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v78, v100, v101);
    v83 = (uint64_t *)(v8 + 15 * v102);
    v84 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v85 = sub_2318D2808();
    v87 = v86;

    *v83 = v85;
    v83[1] = v87;
    v83[2] = 0;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v103)(v83, v98, v101);
    v88 = v8 + 16 * v102;
    v89 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v90 = sub_2318D2808();
    v92 = v91;

    *(_QWORD *)v88 = v90;
    *(_QWORD *)(v88 + 8) = v92;
    *(_BYTE *)(v88 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v88, v100, v101);
    v93 = v8 + 17 * v102;
    v94 = objc_msgSend(v99, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v95 = sub_2318D2808();
    v97 = v96;

    *(_QWORD *)v93 = v95;
    *(_QWORD *)(v93 + 8) = v97;
    *(_BYTE *)(v93 + 16) = 1;
    ((void (*)(unint64_t, _QWORD, uint64_t))v103)(v93, v100, v101);
  }
  else
  {
    __break(1u);
  }
}

void sub_231805F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F259B8)
  {
    sub_2318D3240();
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F259B8);
  }
}

unint64_t sub_231805FA4()
{
  unint64_t result;

  result = qword_254187AA0[0];
  if (!qword_254187AA0[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_254187AA0);
  }
  return result;
}

uint64_t sub_231806034()
{
  void *v0;

  sub_2318D60C0();
  sub_2318D56A0();
  objc_msgSend(v0, sel_invalidateEverything);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  objc_msgSend(v0, sel_invalidateDataSourceCounts);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  return 0;
}

id sub_2318062A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext()
{
  return objc_opt_self();
}

uint64_t sub_231806308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v3 = sub_2318D2F58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318072A0();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231807344();
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317E06B8(v1 + 16, (uint64_t)v45);
  v14 = v46;
  v38 = v47;
  v37 = sub_2317D4B08(v45, v46);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v32 = v14;
    v34 = v11;
    v35 = v9;
    v36 = v8;
    v44 = MEMORY[0x24BEE4AF8];
    sub_23186E3BC(0, v15, 0);
    v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v33 = a1;
    v18 = a1 + v17;
    v19 = *(_QWORD *)(v4 + 72);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v43 = v19;
    v20 = v4;
    do
    {
      v42(v6, v18, v3);
      v21 = sub_2318D2F34();
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v16 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23186E3BC(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v44;
      }
      v25 = *(_QWORD *)(v16 + 16);
      v24 = *(_QWORD *)(v16 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23186E3BC(v24 > 1, v25 + 1, 1);
        v16 = v44;
      }
      *(_QWORD *)(v16 + 16) = v25 + 1;
      v26 = v16 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
      v18 += v43;
      --v15;
      v4 = v20;
    }
    while (v15);
    v9 = v35;
    v8 = v36;
    a1 = v33;
    v11 = v34;
  }
  sub_231863460(v16);
  swift_bridgeObjectRelease();
  v27 = sub_2318D2F94();
  swift_bridgeObjectRelease();
  v44 = v27;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_2318073F0();
  sub_2317D4194(0, &qword_254189D48, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317CC4AC((unint64_t *)&qword_254189B10, (uint64_t (*)(uint64_t))sub_2318073F0, MEMORY[0x24BDB9AF8]);
  swift_bridgeObjectRetain();
  v28 = v39;
  sub_2318D4F44();
  swift_release();
  swift_release();
  sub_2317D4B2C((uint64_t)v45);
  sub_2317E33D4();
  sub_2317CC4AC(&qword_254189688, (uint64_t (*)(uint64_t))sub_231807344, MEMORY[0x24BDB96C0]);
  v29 = v41;
  sub_2318D4FEC();
  sub_2317CC4AC(&qword_254189618, (uint64_t (*)(uint64_t))sub_2318072A0, MEMORY[0x24BDB95F8]);
  v30 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
  return v30;
}

uint64_t sub_2318066CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(unint64_t, uint64_t);
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v38;
  char v39;
  unint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  BOOL v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, unint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113[2];

  v103 = a3;
  v104 = a2;
  v4 = sub_2318D2FD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v94 - v9;
  v11 = sub_2318D4A1C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v102 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_2318D2F58();
  v14 = *(_QWORD *)(v110 - 8);
  v15 = MEMORY[0x24BDAC7A8](v110);
  v106 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v105 = (char *)&v94 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v111 = (char *)&v94 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (unint64_t)&v94 - v21;
  v23 = *a1;
  v24 = *(_QWORD *)(*a1 + 16);
  if (!v24)
  {
    sub_2317D4194(0, &qword_254189FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v65 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v66 + v65) = v104;
    (*(void (**)(void))(v5 + 104))();
    *v103 = v66;
    return swift_bridgeObjectRetain();
  }
  v96 = v12;
  v97 = v11;
  v98 = v10;
  v99 = v5;
  v100 = v4;
  v101 = v23;
  v25 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v94 = v8;
  v95 = v25;
  v26 = (_QWORD *)(v23 + v25);
  v27 = *(_QWORD *)(v14 + 72);
  v109 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v28 = MEMORY[0x24BEE4B00];
  v29 = v110;
  v107 = v27;
  v108 = v14;
  do
  {
    v34 = v109;
    v109((char *)v22, (unint64_t)v26, v29);
    v30 = (_QWORD *)sub_2318D2F34();
    v36 = v35;
    v34(v111, v22, v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v113[0] = v28;
    v38 = (_QWORD *)v28;
    v32 = sub_2317FC0F0((uint64_t)v30, v36);
    v40 = *(_QWORD *)(v28 + 16);
    v41 = (v39 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v43 = v39;
    if (*(_QWORD *)(v28 + 24) >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v38 = (_QWORD *)v113[0];
        if ((v39 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2317FF3B0();
        v38 = (_QWORD *)v113[0];
        if ((v43 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2317FD46C(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_2317FC0F0((uint64_t)v30, v36);
      if ((v43 & 1) != (v45 & 1))
      {
LABEL_58:
        result = sub_2318D62F4();
        __break(1u);
        return result;
      }
      v32 = v44;
      v38 = (_QWORD *)v113[0];
      if ((v43 & 1) != 0)
      {
LABEL_3:
        v30 = (_QWORD *)v108;
        v31 = v38[7] + v32 * v107;
        v32 = v107;
        v29 = v110;
        (*(void (**)(unint64_t, char *, uint64_t))(v108 + 40))(v31, v111, v110);
        goto LABEL_4;
      }
    }
    v38[(v32 >> 6) + 8] |= 1 << v32;
    v46 = (_QWORD *)(v38[6] + 16 * v32);
    *v46 = v30;
    v46[1] = v36;
    v30 = (_QWORD *)v108;
    v47 = v38[7] + v32 * v107;
    v32 = v107;
    v29 = v110;
    (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v47, v111, v110);
    v48 = v38[2];
    v49 = __OFADD__(v48, 1);
    v40 = v48 + 1;
    if (v49)
      goto LABEL_55;
    v38[2] = v40;
    swift_bridgeObjectRetain();
LABEL_4:
    v28 = v113[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = (void (*)(unint64_t, uint64_t))v30[1];
    v33(v22, v29);
    v26 = (_QWORD *)((char *)v26 + v32);
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  v50 = *(char **)(v104 + 16);
  if (v50)
  {
    v22 = v104 + v95;
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x24BEE4B00];
    v36 = (uint64_t)v105;
    v24 = (uint64_t)v109;
    while (1)
    {
      v111 = v50;
      ((void (*)(uint64_t, unint64_t, uint64_t))v24)(v36, v22, v29);
      v26 = (_QWORD *)sub_2318D2F34();
      v30 = v53;
      ((void (*)(char *, uint64_t, uint64_t))v24)(v106, v36, v29);
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v113[0] = v51;
      v38 = (_QWORD *)v51;
      v54 = sub_2317FC0F0((uint64_t)v26, (uint64_t)v30);
      v56 = v51;
      v32 = v54;
      v40 = *(_QWORD *)(v56 + 16);
      v57 = (v55 & 1) == 0;
      v58 = v40 + v57;
      if (__OFADD__(v40, v57))
        goto LABEL_54;
      v59 = v55;
      if (*(_QWORD *)(v56 + 24) >= v58)
      {
        if ((v36 & 1) == 0)
          sub_2317FF3B0();
      }
      else
      {
        sub_2317FD46C(v58, v36);
        v60 = sub_2317FC0F0((uint64_t)v26, (uint64_t)v30);
        if ((v59 & 1) != (v61 & 1))
          goto LABEL_58;
        v32 = v60;
      }
      v36 = (uint64_t)v105;
      v38 = (_QWORD *)v113[0];
      if ((v59 & 1) != 0)
      {
        v52 = v107;
        v29 = v110;
        (*(void (**)(unint64_t, char *, uint64_t))(v108 + 40))(*(_QWORD *)(v113[0] + 56) + v32 * v107, v106, v110);
      }
      else
      {
        *(_QWORD *)(v113[0] + 8 * (v32 >> 6) + 64) |= 1 << v32;
        v62 = (_QWORD *)(v38[6] + 16 * v32);
        *v62 = v26;
        v62[1] = v30;
        v63 = v38[7] + v32 * v107;
        v32 = v107;
        v29 = v110;
        (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v63, v106, v110);
        v64 = v38[2];
        v49 = __OFADD__(v64, 1);
        v40 = v64 + 1;
        if (v49)
          goto LABEL_56;
        v38[2] = v40;
        swift_bridgeObjectRetain();
        v52 = v32;
      }
      v51 = v113[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33(v36, v29);
      v22 += v52;
      v50 = v111 - 1;
      if (v111 == (char *)1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
  }
  v51 = MEMORY[0x24BEE4B00];
LABEL_32:
  v68 = sub_23185FFC4(v28);
  v69 = swift_bridgeObjectRetain();
  v70 = sub_23185FFC4(v69);
  swift_bridgeObjectRetain();
  v36 = sub_23189749C(v70, v68);
  v71 = v102;
  if (*(_QWORD *)(v36 + 16) <= *(_QWORD *)(v70 + 16) >> 3)
  {
    v113[0] = v70;
    swift_bridgeObjectRetain();
    sub_23180746C(v36);
    v24 = v113[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v24 = sub_231807600(v36, v70);
  }
  v111 = (char *)v51;
  if (*(_QWORD *)(v36 + 16) <= *(_QWORD *)(v68 + 16) >> 3)
  {
    v113[0] = v68;
    swift_bridgeObjectRetain();
    sub_23180746C(v36);
    v72 = v113[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v72 = sub_231807600(v36, v68);
  }
  sub_2318D49D4();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = sub_2318D4A10();
  v74 = sub_2318D5A54();
  v75 = v74;
  if (os_log_type_enabled(v73, v74))
  {
    v76 = swift_slowAlloc();
    v110 = swift_slowAlloc();
    v113[0] = v110;
    *(_DWORD *)v76 = 136316162;
    LODWORD(v109) = v75;
    swift_bridgeObjectRetain();
    v77 = sub_2318D5928();
    v79 = v78;
    swift_bridgeObjectRelease();
    v112 = sub_231851EBC(v77, v79, v113);
    sub_2318D5F70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    v80 = *(_QWORD *)(v68 + 16);
    swift_bridgeObjectRelease();
    v112 = v80;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 22) = 2080;
    swift_bridgeObjectRetain();
    v81 = sub_2318D5928();
    v83 = v82;
    swift_release();
    v112 = sub_231851EBC(v81, v83, v113);
    sub_2318D5F70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 32) = 2048;
    v84 = *(_QWORD *)(v24 + 16);
    swift_bridgeObjectRelease();
    v112 = v84;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 42) = 2048;
    v85 = *(_QWORD *)(v72 + 16);
    swift_bridgeObjectRelease();
    v112 = v85;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v73, (os_log_type_t)v109, "[SharableModelContextChangeGenerator] received %s new models, found %ld old models, %s of them intersects, %ld of them are new, %ld of them should be removed", (uint8_t *)v76, 0x34u);
    v86 = v110;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v86, -1, -1);
    MEMORY[0x2348E77E8](v76, -1, -1);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v102, v97);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v71, v97);
  }
  v30 = v103;
  v28 = v99;
  v29 = v100;
  v26 = v98;
  if (*(_QWORD *)(v72 + 16))
  {
    v87 = sub_23189D658(v72);
    swift_bridgeObjectRelease();
    *v26 = v87;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v28 + 104))(v26, *MEMORY[0x24BE48100], v29);
    v32 = sub_2317EC570(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v22 = *(_QWORD *)(v32 + 16);
    v40 = *(_QWORD *)(v32 + 24);
    v38 = (_QWORD *)(v22 + 1);
    if (v22 < v40 >> 1)
    {
LABEL_43:
      *(_QWORD *)(v32 + 16) = v38;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v28 + 32))(v32+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v22, v26, v29);
      goto LABEL_45;
    }
LABEL_57:
    v32 = sub_2317EC570(v40 > 1, (int64_t)v38, 1, v32);
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
  v32 = MEMORY[0x24BEE4AF8];
LABEL_45:
  v88 = (uint64_t)v111;
  swift_bridgeObjectRetain();
  v89 = sub_231807D5C(v36, v88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v90 = sub_231807D5C(v24, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v113[0] = v89;
  sub_231855C6C(v90);
  if (*(_QWORD *)(v113[0] + 16))
  {
    v91 = v94;
    *v94 = v113[0];
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v28 + 104))(v91, *MEMORY[0x24BE480E0], v29);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_2317EC570(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
    v93 = *(_QWORD *)(v32 + 16);
    v92 = *(_QWORD *)(v32 + 24);
    if (v93 >= v92 >> 1)
      v32 = sub_2317EC570(v92 > 1, v93 + 1, 1, v32);
    *(_QWORD *)(v32 + 16) = v93 + 1;
    result = (*(uint64_t (**)(unint64_t, _QWORD *, uint64_t))(v28 + 32))(v32+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v93, v91, v29);
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
  *v30 = v32;
  return result;
}

uint64_t sub_23180725C()
{
  uint64_t v0;

  sub_2317D4B2C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharableModelContextChangeGenerator()
{
  return objc_opt_self();
}

void sub_2318072A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189620)
  {
    sub_231807344();
    sub_2317E33D4();
    sub_2317CC4AC(&qword_254189688, (uint64_t (*)(uint64_t))sub_231807344, MEMORY[0x24BDB96C0]);
    v0 = sub_2318D4CD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189620);
  }
}

void sub_231807344()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189690)
  {
    sub_2318073F0();
    sub_2317D4194(255, &qword_254189D48, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317CC4AC((unint64_t *)&qword_254189B10, (uint64_t (*)(uint64_t))sub_2318073F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189690);
  }
}

void sub_2318073F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189B18)
  {
    sub_2317D4194(255, &qword_254189D28, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189B18);
  }
}

uint64_t sub_23180746C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23180DF20(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_231807600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_231808134();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_2318D6348();
      swift_bridgeObjectRetain();
      sub_2318D567C();
      v19 = sub_2318D6384();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_2318D62B8() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_2318D62B8() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_231807A68((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_231808134();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_231807A68((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_231808134();
      MEMORY[0x2348E77E8](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_231807A68(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_231896E34(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_2318D6348();
        swift_bridgeObjectRetain();
        sub_2318D567C();
        v22 = sub_2318D6384();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_2318D62B8() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_2318D62B8() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_231807D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t (*v39)(unint64_t, char *, uint64_t);
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;

  sub_2317D4194(0, &qword_2541881A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - v5;
  v7 = sub_2318D2F58();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v38 - v11;
  v12 = *(_QWORD *)(a1 + 56);
  v43 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v16 = (unint64_t)(v13 + 63) >> 6;
  v17 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v42 = MEMORY[0x24BEE4AF8];
  if (!v15)
    goto LABEL_9;
LABEL_7:
  v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v21 = v20 | (v19 << 6);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  while (1)
  {
    v25 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * v21);
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v28 = sub_2317FC0F0(v26, v27);
    if ((v29 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v8 + 72) * v28, v7);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v30, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
LABEL_6:
      result = sub_23180813C((uint64_t)v6);
      if (v15)
        goto LABEL_7;
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v31(v40, v6, v7);
      v39 = (uint64_t (*)(unint64_t, char *, uint64_t))v31;
      v31(v41, v40, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_2317EC340(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
      v33 = *(_QWORD *)(v42 + 16);
      v32 = *(_QWORD *)(v42 + 24);
      v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        v38 = v33 + 1;
        v37 = sub_2317EC340(v32 > 1, v33 + 1, 1, v42);
        v34 = v38;
        v42 = v37;
      }
      v35 = v41;
      v36 = v42;
      *(_QWORD *)(v42 + 16) = v34;
      result = v39(v36+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v33, v35, v7);
      if (v15)
        goto LABEL_7;
    }
LABEL_9:
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v16)
      goto LABEL_35;
    v23 = *(_QWORD *)(v43 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_35;
      v23 = *(_QWORD *)(v43 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v16)
          goto LABEL_35;
        v23 = *(_QWORD *)(v43 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v16)
            goto LABEL_35;
          v23 = *(_QWORD *)(v43 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_24:
    v15 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_5;
  }
  v24 = v22 + 4;
  if (v24 >= v16)
  {
LABEL_35:
    swift_release();
    return v42;
  }
  v23 = *(_QWORD *)(v43 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v16)
      goto LABEL_35;
    v23 = *(_QWORD *)(v43 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_231808108()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23180812C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2318066CC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_231808134()
{
  return swift_release();
}

uint64_t sub_23180813C(uint64_t a1)
{
  uint64_t v2;

  sub_2317D4194(0, &qword_2541881A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

MedicationsHealthAppPlugin::FeedItemKind_optional __swiftcall FeedItemKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  MedicationsHealthAppPlugin::FeedItemKind_optional v2;

  v1 = sub_2318D61D4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = MedicationsHealthAppPlugin_FeedItemKind_addAccount;
  else
    v2.value = MedicationsHealthAppPlugin_FeedItemKind_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

void *static FeedItemKind.allCases.getter()
{
  return &unk_25007C508;
}

uint64_t FeedItemKind.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x756F636341646461;
  else
    return 0x6E53646572616873;
}

uint64_t sub_231808234(char *a1, char *a2)
{
  return sub_23183D98C(*a1, *a2);
}

uint64_t sub_231808240()
{
  sub_2318D6348();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_2318082D0()
{
  sub_2318D567C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23180833C()
{
  sub_2318D6348();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_2318083C8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_231808424(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E53646572616873;
  if (*v1)
    v2 = 0x756F636341646461;
  v3 = 0xED00007465707069;
  if (*v1)
    v3 = 0xEA0000000000746ELL;
  *a1 = v2;
  a1[1] = v3;
}

void sub_231808474(_QWORD *a1@<X8>)
{
  *a1 = &unk_25007C530;
}

unint64_t FeedItemKind.identifierPrefix.getter()
{
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  return 0xD000000000000019;
}

MedicationsHealthAppPlugin::FeedItemKind_optional __swiftcall FeedItemKind.init(feedItemIdentifier:)(Swift::String feedItemIdentifier)
{
  MedicationsHealthAppPlugin::FeedItemKind_optional v1;
  char v2;
  char v3;

  v1.value = MedicationsHealthAppPlugin_FeedItemKind_sharedSnippet;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v2 = sub_2318D56F4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    goto LABEL_3;
  v1.value = MedicationsHealthAppPlugin_FeedItemKind_addAccount;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v3 = sub_2318D56F4();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (MedicationsHealthAppPlugin::FeedItemKind_optional)2;
  }
  return v1;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:from:)@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  _BYTE v4[40];

  sub_2317D4B08(a1, a1[3]);
  sub_2318089A0((uint64_t)v4);
  return sub_231808B78((uint64_t)v4, a2);
}

uint64_t FeedItemContext.previousFeedItems(of:)()
{
  void *v0;
  uint64_t v1;

  FeedItemKind.identifierPrefix.getter();
  v0 = (void *)sub_2318D2DB4();
  v1 = sub_2318D2DA8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:matching:from:)@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_231808830(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_231808BB4, a3);
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:excluding:from:)@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_231808830(a1, a2, sub_231808DA8, a3);
}

uint64_t sub_231808830@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_2317D4B08(a2, a2[3]);
  v7 = FeedItemContext.previousFeedItems(of:)();
  swift_bridgeObjectRetain();
  v8 = a3(v7, a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 32;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedItemContext.deleteFeedItems(of:)(MedicationsHealthAppPlugin::FeedItemKind of)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[40];

  sub_2317CDA94(0, &qword_254189FC8, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2318D8680;
  v2 = v1 + 32;
  sub_2318089A0((uint64_t)v3);
  sub_231808B78((uint64_t)v3, v2);
  sub_2318D2D9C();
  swift_bridgeObjectRelease();
}

uint64_t sub_2318089A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v2 = sub_2318D2D78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = FeedItemContext.previousFeedItems(of:)();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v21 = a1;
    v24 = MEMORY[0x24BEE4AF8];
    sub_23186E3BC(0, v7, 0);
    v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v20[1] = v6;
    v9 = v6 + v8;
    v10 = *(_QWORD *)(v3 + 72);
    v22 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v23 = v10;
    v11 = v3;
    do
    {
      v22(v5, v9, v2);
      v12 = sub_2318D2CDC();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v15 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23186E3BC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v24;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_23186E3BC(v16 > 1, v17 + 1, 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      v18 = v15 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v12;
      *(_QWORD *)(v18 + 40) = v14;
      v9 += v23;
      --v7;
      v3 = v11;
    }
    while (v7);
    result = swift_bridgeObjectRelease();
    a1 = v21;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 32;
  return result;
}

uint64_t sub_231808B78(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BE47F58] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_231808BB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    sub_2318D2D78();
    v3 = a2[2];
    swift_bridgeObjectRetain();
    v4 = 0;
    v22 = a2 + 7;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v23 = a2;
    while (1)
    {
      v6 = sub_2318D2CDC();
      v8 = v7;
      if (v3)
      {
        v9 = v6;
        v10 = a2[4] == v6 && a2[5] == v7;
        if (v10 || (result = sub_2318D62B8(), (result & 1) != 0))
        {
LABEL_11:
          swift_bridgeObjectRelease();
          v12 = sub_2318D2CDC();
          v14 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_2317EBDA4(0, v5[2] + 1, 1, v5);
          v16 = v5[2];
          v15 = v5[3];
          if (v16 >= v15 >> 1)
            v5 = sub_2317EBDA4((_QWORD *)(v15 > 1), v16 + 1, 1, v5);
          v5[2] = v16 + 1;
          v17 = &v5[2 * v16];
          v17[4] = v12;
          v17[5] = v14;
        }
        else
        {
          if (v3 != 1)
          {
            v18 = v22;
            v19 = 1;
            while (1)
            {
              v20 = v19 + 1;
              if (__OFADD__(v19, 1))
                break;
              if (*(v18 - 1) == v9 && *v18 == v8)
                goto LABEL_11;
              result = sub_2318D62B8();
              if ((result & 1) != 0)
                goto LABEL_11;
              v18 += 2;
              ++v19;
              if (v20 == v3)
                goto LABEL_26;
            }
            __break(1u);
            return result;
          }
LABEL_26:
          swift_bridgeObjectRelease();
        }
        a2 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_231808DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    sub_2318D2D78();
    v3 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v4 = 0;
    v22 = (_QWORD *)(a2 + 56);
    v23 = a2;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v6 = sub_2318D2CDC();
      v8 = v7;
      if (!v3)
        goto LABEL_20;
      v9 = v6;
      if (*(_QWORD *)(v23 + 32) != v6 || *(_QWORD *)(v23 + 40) != v7)
      {
        result = sub_2318D62B8();
        if ((result & 1) == 0)
          break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
    if (v3 != 1)
    {
      v12 = v22;
      v13 = 1;
      while (1)
      {
        v14 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        if (*(v12 - 1) == v9 && *v12 == v8)
          goto LABEL_3;
        result = sub_2318D62B8();
        if ((result & 1) != 0)
          goto LABEL_3;
        v12 += 2;
        ++v13;
        if (v14 == v3)
          goto LABEL_20;
      }
      __break(1u);
      return result;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    v16 = sub_2318D2CDC();
    v18 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_2317EBDA4(0, v5[2] + 1, 1, v5);
    v20 = v5[2];
    v19 = v5[3];
    if (v20 >= v19 >> 1)
      v5 = sub_2317EBDA4((_QWORD *)(v19 > 1), v20 + 1, 1, v5);
    v5[2] = v20 + 1;
    v21 = &v5[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
    goto LABEL_4;
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_231808F90()
{
  unint64_t result;

  result = qword_255F259E0;
  if (!qword_255F259E0)
  {
    result = MEMORY[0x2348E7734](&protocol conformance descriptor for FeedItemKind, &type metadata for FeedItemKind);
    atomic_store(result, (unint64_t *)&qword_255F259E0);
  }
  return result;
}

unint64_t sub_231808FD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F259E8;
  if (!qword_255F259E8)
  {
    sub_2317CDA94(255, &qword_255F259F0, (uint64_t)&type metadata for FeedItemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255F259E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RelativeWeekdayWithMonthAndDayFormatter.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_231809114 + 4 * byte_2318D9315[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_231809148 + 4 * asc_2318D9310[v4]))();
}

uint64_t sub_231809148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231809150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231809158);
  return result;
}

uint64_t sub_231809164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23180916CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_231809170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231809178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_231809184(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemKind()
{
  return &type metadata for FeedItemKind;
}

id sub_231809338()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsScheduleViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsScheduleViewController()
{
  return objc_opt_self();
}

uint64_t sub_231809388()
{
  sub_2318D6348();
  sub_2318D567C();
  return sub_2318D6384();
}

uint64_t sub_2318093DC()
{
  return sub_2318D567C();
}

uint64_t sub_2318093F8()
{
  sub_2318D6348();
  sub_2318D567C();
  return sub_2318D6384();
}

uint64_t sub_231809448@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_231809498(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000002318DEA60;
}

uint64_t sub_2318094BC(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_231809958(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_2318D5700();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_2318D5688();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_2318D5688();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_2318D5718();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_2317EC584(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_2317EC584((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_2318D5688();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_2318D5718();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2317EC584(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_2317EC584((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2318D6144();
  __break(1u);
LABEL_42:
  result = sub_2318D6144();
  __break(1u);
  return result;
}

uint64_t sub_231809958(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_2318D5718();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_2317EC584(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_2317EC584((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_2318D6144();
  __break(1u);
  return result;
}

uint64_t _s26MedicationsHealthAppPlugin0A24ShareableModelIdentifierO4fromACSgSS_tcfC_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[16];
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82[2];

  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v75 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v75 - v12;
  v82[0] = 10848482;
  v82[1] = 0xA300000000000000;
  v80 = v82;
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_2318094BC(0x7FFFFFFFFFFFFFFFLL, 0, sub_23180A508, (uint64_t)v79, a1, a2);
  swift_bridgeObjectRelease();
  v15 = v14[2];
  if (v15 != 4)
  {
    sub_2318D49E0();
    swift_bridgeObjectRetain_n();
    v22 = sub_2318D4A10();
    v23 = sub_2318D5A3C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v82[0] = v77;
      *(_DWORD *)v24 = 136446722;
      v81 = sub_231851EBC(0xD000000000000023, 0x80000002318D9440, v82);
      v78 = v5;
      sub_2318D5F70();
      *(_WORD *)(v24 + 12) = 2082;
      v25 = swift_bridgeObjectRetain();
      v26 = MEMORY[0x2348E6558](v25, MEMORY[0x24BEE1E08]);
      v76 = v4;
      v28 = v27;
      swift_bridgeObjectRelease();
      v81 = sub_231851EBC(v26, v28, v82);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2082;
      v81 = v15;
      v29 = sub_2318D6288();
      v81 = sub_231851EBC(v29, v30, v82);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v22, v23, "[%{public}s] Did not find 4 items in components, %{public}s, count: %{public}s", (uint8_t *)v24, 0x20u);
      v31 = v77;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v31, -1, -1);
      MEMORY[0x2348E77E8](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v76);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33 = v7;
LABEL_7:
    v32(v33, v4);
    return 0;
  }
  v16 = v14[4];
  v17 = v14[5];
  v18 = v14[6];
  v19 = v14[7];
  swift_bridgeObjectRetain();
  MEMORY[0x2348E63D8](v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  v20 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v14[2] < 2uLL)
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v35 = v14[8];
  v36 = v14[9];
  v37 = v14[10];
  v38 = v14[11];
  swift_bridgeObjectRetain();
  MEMORY[0x2348E63D8](v35, v36, v37, v38);
  swift_bridgeObjectRelease();
  v39 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  if (v39)
  {
    sub_2318D49E0();
    swift_bridgeObjectRetain();
    v40 = sub_2318D4A10();
    v41 = sub_2318D5A3C();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc();
      LODWORD(v77) = v42;
      v44 = v43;
      v76 = swift_slowAlloc();
      v82[0] = v76;
      *(_DWORD *)v44 = 136446466;
      v81 = sub_231851EBC(0xD000000000000023, 0x80000002318D9440, v82);
      v78 = v5;
      sub_2318D5F70();
      *(_WORD *)(v44 + 12) = 2082;
      v75 = v44 + 14;
      v46 = v14[8];
      v45 = v14[9];
      v48 = v14[10];
      v47 = v14[11];
      swift_bridgeObjectRetain();
      v49 = MEMORY[0x2348E63D8](v46, v45, v48, v47);
      v51 = v50;
      swift_bridgeObjectRelease();
      v81 = sub_231851EBC(v49, v51, v82);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v40, (os_log_type_t)v77, "[%{public}s] Unsupported version found when decoding version: '%{public}s'", (uint8_t *)v44, 0x16u);
      v52 = v76;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v52, -1, -1);
      MEMORY[0x2348E77E8](v44, -1, -1);

      v32 = *(void (**)(char *, uint64_t))(v78 + 8);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    }
    v33 = v10;
    goto LABEL_7;
  }
  if (v14[2] < 3uLL)
    goto LABEL_28;
  v53 = v14[12];
  v54 = v14[13];
  v55 = v14[14];
  v56 = v14[15];
  swift_bridgeObjectRetain();
  MEMORY[0x2348E63D8](v53, v54, v55, v56);
  swift_bridgeObjectRelease();
  v57 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  if (v57 != 1)
  {
    if (v57)
    {
      sub_2318D49E0();
      swift_bridgeObjectRetain();
      v62 = sub_2318D4A10();
      v63 = sub_2318D5A3C();
      v64 = v63;
      if (os_log_type_enabled(v62, v63))
      {
        v65 = swift_slowAlloc();
        LODWORD(v77) = v64;
        v66 = v65;
        v76 = swift_slowAlloc();
        v82[0] = v76;
        *(_DWORD *)v66 = 136446466;
        v81 = sub_231851EBC(0xD000000000000023, 0x80000002318D9440, v82);
        v78 = v5;
        sub_2318D5F70();
        *(_WORD *)(v66 + 12) = 2082;
        v75 = v66 + 14;
        v68 = v14[8];
        v67 = v14[9];
        v70 = v14[10];
        v69 = v14[11];
        swift_bridgeObjectRetain();
        v71 = MEMORY[0x2348E63D8](v68, v67, v70, v69);
        v73 = v72;
        swift_bridgeObjectRelease();
        v81 = sub_231851EBC(v71, v73, v82);
        sub_2318D5F70();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2317C8000, v62, (os_log_type_t)v77, "[%{public}s] Unsupported audience found when decoding version: '%{public}s'", (uint8_t *)v66, 0x16u);
        v74 = v76;
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v74, -1, -1);
        MEMORY[0x2348E77E8](v66, -1, -1);

        v32 = *(void (**)(char *, uint64_t))(v78 + 8);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      }
      v33 = v13;
      goto LABEL_7;
    }
    if (v14[2] >= 4uLL)
    {
LABEL_19:
      v58 = v14[16];
      v59 = v14[17];
      v60 = v14[18];
      v61 = v14[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34 = MEMORY[0x2348E63D8](v58, v59, v60, v61);
      swift_bridgeObjectRelease();
      return v34;
    }
    goto LABEL_29;
  }
  if (v14[2] >= 4uLL)
    goto LABEL_19;
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23180A358()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MedicationsShareableModelIdentifier()
{
  return sub_23180A370();
}

uint64_t sub_23180A370()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s26MedicationsHealthAppPlugin35MedicationsShareableModelIdentifierOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23180A358();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MedicationsShareableModelIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23180A358();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23180A370();
  return a1;
}

uint64_t assignWithTake for MedicationsShareableModelIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23180A370();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsShareableModelIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationsShareableModelIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23180A4E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23180A4EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationsShareableModelIdentifier()
{
  return &type metadata for MedicationsShareableModelIdentifier;
}

uint64_t sub_23180A508(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_2318D62B8() & 1;
}

uint64_t sub_23180A55C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23180A580()
{
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for MedicationsShareableModelIdentifier.Domain(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for MedicationsShareableModelIdentifier.Domain(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23180A624 + 4 * asc_2318D9450[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23180A644 + 4 * byte_2318D9455[v4]))();
}

_BYTE *sub_23180A624(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23180A644(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23180A64C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23180A654(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23180A65C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23180A664(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23180A670()
{
  return 0;
}

ValueMetadata *type metadata accessor for MedicationsShareableModelIdentifier.Domain()
{
  return &type metadata for MedicationsShareableModelIdentifier.Domain;
}

unint64_t sub_23180A68C()
{
  unint64_t result;

  result = qword_255F25A20;
  if (!qword_255F25A20)
  {
    result = MEMORY[0x2348E7734](&unk_2318D9504, &type metadata for MedicationsShareableModelIdentifier.Domain);
    atomic_store(result, (unint64_t *)&qword_255F25A20);
  }
  return result;
}

uint64_t type metadata accessor for CriticalMedicationsListViewController(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F25A50);
}

uint64_t sub_23180A6E4()
{
  return swift_initClassMetadata2();
}

id sub_23180A74C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;

  v3 = qword_255F25A38;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_sharedInstance);
  v6 = qword_255F25A40;
  sub_2318D2BF8();
  sub_2318D2BEC();
  v7 = sub_2318D2BE0();
  swift_release();
  *(_QWORD *)&v5[v6] = v7;
  *(_QWORD *)&v5[qword_255F25A48] = 0;
  *(_QWORD *)&v5[qword_255F25A28] = a1;
  type metadata accessor for CriticalMedicationsDataSource(0);
  swift_allocObject();
  v8 = swift_retain_n();
  v9 = sub_23180B890(v8);
  v10 = qword_255F25A30;
  *(_QWORD *)&v5[qword_255F25A30] = v9;

  sub_2317EDD94();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2318D8680;
  v12 = MEMORY[0x24BE43520];
  *(_QWORD *)(v11 + 32) = *(_QWORD *)&v5[v10];
  *(_QWORD *)(v11 + 40) = v12;
  sub_2318D3A50();
  swift_allocObject();
  swift_retain();
  sub_2318D3A68();
  v13 = (void *)sub_2318D3E64();
  v14 = qword_25418B328;
  v15 = v13;
  if (v14 != -1)
    swift_once();
  sub_2318D2808();
  v16 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setTitle_, v16, 0xE000000000000000);

  sub_23180A980();
  swift_release();
  return v15;
}

void sub_23180A95C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_23180E820();
}

uint64_t sub_23180A980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  sub_2317D4194(0, &qword_255F25B80, (uint64_t (*)(uint64_t))sub_23180CD48, MEMORY[0x24BDB9ED8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - v5;
  swift_beginAccess();
  sub_2317D4194(0, &qword_255F25AF8, (uint64_t (*)(uint64_t))sub_23180CD48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2318D4E6C();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_23180E8F8();
  v7 = sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)(v1 + qword_255F25A48) = v7;
  return swift_release();
}

void sub_23180AAD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - v5;
  v7 = *a1;
  swift_beginAccess();
  v8 = MEMORY[0x2348E78A8](a2 + 16);
  if (v8)
  {
    v9 = (char *)v8;
    if ((v7 & 0xC000000000000001) != 0)
    {
      if (sub_2318D6030())
      {
LABEL_4:
        v10 = *(void **)&v9[qword_255F25A40];
        v11 = swift_allocObject();
        *(_QWORD *)(v11 + 16) = v9;
        *(_QWORD *)(v11 + 24) = v7;
        v12 = swift_allocObject();
        *(_QWORD *)(v12 + 16) = v9;
        v13 = sub_2318D582C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
        sub_2318D5814();
        v14 = v10;
        v15 = v9;
        swift_bridgeObjectRetain();
        v16 = v15;
        v17 = v14;
        swift_retain();
        swift_retain();
        v18 = sub_2318D5808();
        v19 = (_QWORD *)swift_allocObject();
        v20 = MEMORY[0x24BEE6930];
        v19[2] = v18;
        v19[3] = v20;
        v19[4] = v17;
        v19[5] = sub_23180E984;
        v19[6] = v11;
        v19[7] = sub_23180E9B0;
        v19[8] = v12;
        sub_23188BA78((uint64_t)v6, (uint64_t)&unk_255F25B98, (uint64_t)v19);

        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    else if (*(_QWORD *)(v7 + 16))
    {
      goto LABEL_4;
    }
    v21 = *(id *)&v9[qword_255F25A38];
    v22 = swift_bridgeObjectRetain();
    sub_23189D748(v22);
    swift_bridgeObjectRelease();
    sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
    v23 = (void *)sub_2318D5778();
    swift_release();
    objc_msgSend(v21, sel_setMedications_, v23);

  }
}

void sub_23180AD58(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + qword_255F25A38);
  swift_bridgeObjectRetain();
  sub_23189D748(a2);
  swift_bridgeObjectRelease();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  v4 = (id)sub_2318D5778();
  swift_release();
  objc_msgSend(v3, sel_setMedications_, v4);

}

id sub_23180ADF4()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t aBlock;
  uint64_t v14;
  void (*v15)(uint64_t, void *);
  void *v16;
  void *v17;
  uint64_t v18;

  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  sub_2318D2808();
  v0 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1, 0xE000000000000000);

  sub_2318D2808();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v4 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v17 = sub_23180EAF0;
  v18 = v3;
  v5 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23183C9A8;
  v16 = &unk_25007E170;
  v6 = _Block_copy(&aBlock);
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_actionWithTitle_style_handler_, v4, 1, v6, 0xE000000000000000);
  _Block_release(v6);
  swift_release();

  objc_msgSend(v2, sel_addAction_, v8);
  sub_2318D2808();
  v9 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v17 = sub_23180D05C;
  v18 = 0;
  aBlock = v5;
  v14 = 1107296256;
  v15 = sub_23183C9A8;
  v16 = &unk_25007E198;
  v10 = _Block_copy(&aBlock);
  swift_release();
  v11 = objc_msgSend(v7, sel_actionWithTitle_style_handler_, v9, 0, v10, 0xE000000000000000);
  _Block_release(v10);

  objc_msgSend(v2, sel_addAction_, v11);
  return v2;
}

uint64_t sub_23180B160(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t ObjectType;
  uint64_t v29;
  __int128 v30[2];
  uint64_t v31;
  id v32;
  _QWORD v33[3];
  uint64_t v34;

  ObjectType = swift_getObjectType();
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D3828();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (unsigned __int8 *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2;
  v12 = (void *)sub_2318D2B2C();
  v27 = a1;
  v13 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v12);

  v29 = v5;
  if (!v13)
    goto LABEL_6;
  v25 = v4;
  v32 = v13;
  sub_2317CCC9C(0, (unint64_t *)&qword_255F25788);
  sub_2317D4290(0, &qword_255F25B78);
  v14 = v13;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v31 = 0;
    memset(v30, 0, sizeof(v30));

    sub_23180E7E4((uint64_t)v30, (uint64_t)&qword_255F26E60, (uint64_t)&qword_255F25B78, MEMORY[0x24BE43180], (uint64_t (*)(_QWORD))sub_23180E77C);
    v4 = v25;
    v5 = v29;
LABEL_6:
    sub_2318D49E0();
    v17 = sub_2318D4A10();
    v18 = sub_2318D5A3C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v30[0] = v20;
      *(_DWORD *)v19 = 136446210;
      v33[0] = ObjectType;
      swift_getMetatypeMetadata();
      v21 = sub_2318D55E0();
      v33[0] = sub_231851EBC(v21, v22, (uint64_t *)v30);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v17, v18, "[%{public}s] cell is not a selectable cell", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v20, -1, -1);
      MEMORY[0x2348E77E8](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  sub_2317D4AF0(v30, (uint64_t)v33);
  sub_2317D4B08(v33, v34);
  sub_2318D3708();
  sub_2317D4B08(v33, v34);
  sub_2318D3714();
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v9 + 88))(v11, v8) == *MEMORY[0x24BE435F8])
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 96))(v11, v8);
    v15 = *v11;
    v16 = (void *)sub_2318D2B2C();
    objc_msgSend(v27, sel_deselectItemAtIndexPath_animated_, v16, v15);

  }
  else
  {

    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v11, v8);
  }
  return sub_2317D4B2C((uint64_t)v33);
}

uint64_t sub_23180B528(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_2318D2B80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D2B38();
  v9 = a3;
  v10 = a1;
  sub_23180B160(v9, (uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_23180B5D8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23180B604(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23180B634()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_release();
}

id sub_23180B690()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CriticalMedicationsListViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23180B6C4(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_23180B72C()
{
  return type metadata accessor for CriticalMedicationsListViewController(0);
}

uint64_t type metadata accessor for CriticalMedicationsDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F25AC0);
}

uint64_t sub_23180B748(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23180B77C()
{
  unint64_t v0;

  sub_2317D4194(319, &qword_255F25AF8, (uint64_t (*)(uint64_t))sub_23180CD48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_23180B820()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23180B890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[2];

  v3 = sub_2318D297C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + qword_255F25AB8) = 0;
  *(_QWORD *)(v1 + qword_255F25AA0) = a1;
  sub_2318D405C();
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  *(_QWORD *)(v1 + qword_255F25AA8) = sub_2318D4050();
  v7 = ListConceptManager.criticalMedicationsSet.getter();
  swift_beginAccess();
  v10 = v7;
  sub_23180CD48();
  sub_2318D4E60();
  swift_endAccess();
  swift_release();
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "MutableArray<");
  HIWORD(v11[1]) = -4864;
  sub_2318D2970();
  sub_2318D2958();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v8 = sub_2318D37B0();
  swift_retain();
  sub_23180BF74();
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_23180BA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t *v25;
  char v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39[5];

  v38 = a3;
  v5 = sub_2318D3DBC();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D3828();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - v12;
  v14 = sub_2318D297C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2318D55BC() == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v20 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_10:
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v39[3] = sub_2318D4BD8();
    v39[4] = MEMORY[0x24BEBC5F0];
    sub_2317DBF6C(v39);
    sub_2318D4BC0();
    if (qword_25418B328 != -1)
      swift_once();
    sub_2318D2808();
    sub_2318D4BA8();
    sub_2318D4AE8();
    v22 = sub_2318D4B00();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 0, 1, v22);
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v10, *MEMORY[0x24BE43600], v35);
    (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v7, *MEMORY[0x24BE44C60], v37);
    v23 = sub_2318D3918();
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
    v25 = v38;
    v38[3] = v23;
    v25[4] = sub_2317CC4AC((unint64_t *)&qword_25418AA68, v24, MEMORY[0x24BE438A8]);
    sub_2317DBF6C(v25);
    return sub_2318D390C();
  }
  if (sub_2318D55BC() == a1 && v21 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      v31 = sub_2318D34D4();
      v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      v33 = v38;
      v38[3] = v31;
      v33[4] = sub_2317CC4AC(&qword_255F25540, v32, MEMORY[0x24BE428F8]);
      sub_2317DBF6C(v33);
      return sub_2318D34C8();
    }
  }
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  v39[0] = 0x74497265746F6F46;
  v39[1] = 0xEB000000005F6D65;
  sub_2318D2970();
  sub_2318D2958();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v28 = sub_2318D3C60();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8];
  v30 = v38;
  v38[3] = v28;
  v30[4] = sub_2317CC4AC(&qword_255F25548, v29, MEMORY[0x24BE44688]);
  sub_2317DBF6C(v30);
  return sub_2318D3C54();
}

uint64_t sub_23180BF74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v20 - v1;
  sub_23180DB28();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23180DC34();
  v9 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  v22 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2318D4914();
  v12 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
  sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
  sub_23180DBD0();
  sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v12);
  sub_2318D4F14();
  swift_release();
  sub_2318D4584();
  sub_2318D4578();
  v13 = (void *)sub_2318D456C();
  swift_release();
  sub_2317CC4AC((unint64_t *)&qword_255F25B50, (uint64_t (*)(uint64_t))sub_23180DB28, MEMORY[0x24BDB94C8]);
  v14 = sub_2318D4EFC();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = v14;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v23 = (id)sub_2318D5B80();
  v15 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v2, 1, 1, v15);
  sub_23180DD24(0, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
  sub_23180DD80(&qword_255F25B48, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_23180E7E4((uint64_t)v2, (uint64_t)&qword_25418B280, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_2317D4194);

  swift_release();
  swift_allocObject();
  v16 = v20[1];
  swift_weakInit();
  sub_2317CC4AC(&qword_255F25B58, (uint64_t (*)(uint64_t))sub_23180DC34, MEMORY[0x24BDB9A08]);
  v17 = v21;
  v18 = sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v17);
  *(_QWORD *)(v16 + qword_255F25AB8) = v18;
  return swift_release();
}

uint64_t sub_23180C308@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_2318D4968();
  v3 = sub_231867E30(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_23180C34C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_2318D297C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2318D40C8();
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  swift_beginAccess();
  v25 = a2 + 16;
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2318D6174();
    v10 = result;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v24 = v4;
  v23 = v5;
  v22 = v7;
  if (v10)
  {
    if (v10 < 1)
    {
      __break(1u);
      return result;
    }
    v30 = v9 & 0xC000000000000001;
    swift_beginAccess();
    v12 = 0;
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v26 = *MEMORY[0x24BE463A0];
    v31 = v9;
    v14 = v27;
    do
    {
      if (v30)
        v15 = (id)MEMORY[0x2348E6E94](v12, v9);
      else
        v15 = *(id *)(v9 + 8 * v12 + 32);
      v16 = v15;
      if (swift_weakLoadStrong())
      {
        v37 = sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
        v38 = sub_23180DDC0(&qword_255F25B60, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t)&protocol conformance descriptor for HKMedicationUserDomainConcept);
        *(_QWORD *)&v36 = v16;
        v17 = v16;
        sub_2318D4068();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_2318D4E84();
        swift_release();
        swift_release();
        sub_23180C8C4(v17, v32);
        swift_bridgeObjectRelease();
        swift_allocObject();
        swift_weakInit();
        (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v14, v26, v29);
        *((_QWORD *)&v34 + 1) = sub_2318D40E0();
        v35 = sub_2317CC4AC(&qword_255F25B68, (uint64_t (*)(uint64_t))MEMORY[0x24BE463B8], MEMORY[0x24BE46398]);
        sub_2317DBF6C((uint64_t *)&v33);
        swift_retain();
        sub_2318D40D4();
        swift_release();
        swift_release();
      }
      else
      {
        v35 = 0;
        v33 = 0u;
        v34 = 0u;
      }

      if (*((_QWORD *)&v34 + 1))
      {
        sub_2317D4AF0(&v33, (uint64_t)&v36);
        sub_2317D4AF0(&v36, (uint64_t)&v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_2317EC6A4(0, v13[2] + 1, 1, v13);
        v19 = v13[2];
        v18 = v13[3];
        if (v19 >= v18 >> 1)
          v13 = sub_2317EC6A4((_QWORD *)(v18 > 1), v19 + 1, 1, v13);
        v13[2] = v19 + 1;
        sub_2317D4AF0(&v33, (uint64_t)&v13[5 * v19 + 4]);
      }
      else
      {
        sub_23180E7E4((uint64_t)&v33, (uint64_t)&qword_25418AA50, (uint64_t)&qword_25418AA40, MEMORY[0x24BE41798], (uint64_t (*)(_QWORD))sub_23180E77C);
      }
      v9 = v31;
      ++v12;
    }
    while (v10 != v12);
  }
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2318D3774();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2318D8680;
    v20 = v22;
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v24);
    sub_2318D3768();
    sub_2318D37BC();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23180C8C4(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_2318D6054();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_2318D5E68(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_2318D5E74();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_2318D5E74();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

void sub_23180CA20(uint64_t a1, char a2)
{
  void *v3;
  void (*v4)(_BYTE *, _QWORD);
  void (*v5)(_BYTE *, _QWORD);
  void *v6;
  id v7;
  void *v8;
  _BYTE v9[40];

  sub_2317E06B8(a1, (uint64_t)v9);
  sub_2317D4290(0, &qword_255F25B70);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        v3 = v8;
        v4 = (void (*)(_BYTE *, _QWORD))sub_2318D4E78();
        sub_2318607FC(&v7, v3);
        v4(v9, 0);
        swift_release();

        swift_release();
        swift_release();

        return;
      }
    }
    else
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        v5 = (void (*)(_BYTE *, _QWORD))sub_2318D4E78();
        v6 = (void *)sub_23180E0AC(v8);
        v5(v9, 0);

        swift_release();
        swift_release();
        swift_release();

        return;
      }
    }

  }
}

void sub_23180CBF8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23180CC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + qword_255F25AB0;
  sub_2317D4194(0, &qword_255F25AF8, (uint64_t (*)(uint64_t))sub_23180CD48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release();
}

uint64_t sub_23180CCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2318D37D4();
  swift_release();
  swift_release();
  v1 = v0 + qword_255F25AB0;
  sub_2317D4194(0, &qword_255F25AF8, (uint64_t (*)(uint64_t))sub_23180CD48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_23180CD48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25B00)
  {
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B440);
    sub_23180DDC0((unint64_t *)&qword_255F25648, (unint64_t *)&qword_25418B440, 0x24BE45CB8, MEMORY[0x24BEE5BD8]);
    v0 = sub_2318D594C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25B00);
  }
}

uint64_t sub_23180CDE0()
{
  return type metadata accessor for CriticalMedicationsDataSource(0);
}

ValueMetadata *type metadata accessor for CriticalAlertNotificationsHelper()
{
  return &type metadata for CriticalAlertNotificationsHelper;
}

uint64_t sub_23180CDF8()
{
  sub_2318D4134();
  sub_2317CC4AC(&qword_255F25B28, (uint64_t (*)(uint64_t))MEMORY[0x24BE463F8], MEMORY[0x24BE463F0]);
  sub_2318D5AC0();
  sub_2318D3EA0();
  sub_2318D5AD8();
  sub_2318D3C3C();
  return sub_2318D5ACC();
}

uint64_t sub_23180CE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2318D38AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  sub_2318D3858();
  sub_2318D384C();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  v8 = sub_2318D38A0();
  v7(v4, v0);
  return v8;
}

uint64_t sub_23180CF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_23180BA84(a1, a2, a3);
}

uint64_t sub_23180CF54()
{
  MEMORY[0x2348E7734](&unk_2318D962C);
  return sub_2318D3EB8();
}

uint64_t sub_23180CFA0()
{
  return sub_2317CC4AC(&qword_255F25B20, type metadata accessor for CriticalMedicationsDataSource, (uint64_t)&unk_2318D95D4);
}

void sub_23180CFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x2348E78A8](v2);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_navigationController);

    if (v5)
    {
      v6 = objc_msgSend(v5, sel_popViewControllerAnimated_, 1);

    }
  }
}

uint64_t sub_23180D05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_2318D3294();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE411F0], v0);
  sub_2318D3288();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23180D0E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[20] = a1;
  v2 = sub_2318D4A1C();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23180D164()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_2318D49E0();
  v1 = sub_2318D4A10();
  v2 = sub_2318D5A54();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[25];
    v4 = v0[21];
    v5 = v0[22];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[17] = sub_231851EBC(0xD000000000000020, 0x80000002318D9590, &v14);
    sub_2318D5F70();
    _os_log_impl(&dword_2317C8000, v1, v2, "%s [TCC] requestAuthorization initiating", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v7, -1, -1);
    MEMORY[0x2348E77E8](v6, -1, -1);

    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  }
  else
  {
    v3 = v0[25];
    v4 = v0[21];
    v9 = v0[22];

    v8 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  v8(v3, v4);
  v0[26] = v8;
  v10 = (void *)v0[20];
  v0[7] = (char *)v0 + 228;
  v0[2] = v0;
  v0[3] = sub_23180D350;
  v11 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v12 = v0 + 10;
  v12[1] = 0x40000000;
  v12[2] = sub_23180D7E8;
  v12[3] = &unk_25007E130;
  v12[4] = v11;
  objc_msgSend(v10, sel_requestAuthorizationWithOptions_completionHandler_, 16, v12);
  return swift_continuation_await();
}

uint64_t sub_23180D350()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23180D3B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  v1 = *(unsigned __int8 *)(v0 + 228);
  sub_2318D49E0();
  v2 = sub_2318D4A10();
  v3 = sub_2318D5A54();
  if (os_log_type_enabled(v2, v3))
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v4 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 168);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 152) = sub_231851EBC(0xD000000000000020, 0x80000002318D9590, &v13);
    sub_2318D5F70();
    *(_WORD *)(v6 + 12) = 1024;
    *(_DWORD *)(v0 + 224) = v1;
    sub_2318D5F70();
    _os_log_impl(&dword_2317C8000, v2, v3, "%s [TCC] requestAuthorization granted: %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v7, -1, -1);
    MEMORY[0x2348E77E8](v6, -1, -1);

    v12(v4, v5);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);

    v8(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23180D580()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20[2];

  v1 = *(void **)(v0 + 216);
  swift_willThrow();
  sub_2318D49E0();
  v2 = v1;
  v3 = v1;
  v4 = sub_2318D4A10();
  v5 = sub_2318D5A3C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 168);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20[0] = v10;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 128) = sub_231851EBC(0xD000000000000020, 0x80000002318D9590, v20);
    sub_2318D5F70();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 120) = v6;
    v11 = v6;
    sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
    v12 = sub_2318D55E0();
    *(_QWORD *)(v0 + 144) = sub_231851EBC(v12, v13, v20);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2317C8000, v4, v5, "%s [TCC] requestAuthorization error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    v19(v7, v8);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v14 = *(void **)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 168);

    v15(v16, v17);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23180D7E8(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23180D878(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

uint64_t sub_23180D8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;

  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v8[21] = sub_2318D5814();
  v8[22] = sub_2318D5808();
  v10 = (_QWORD *)swift_task_alloc();
  v8[23] = v10;
  *v10 = v8;
  v10[1] = sub_23180D918;
  return sub_23180D0E8(a4);
}

uint64_t sub_23180D918()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23180D978()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[16];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23180DA0C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_23180D878;
  v3[3] = &unk_25007E118;
  v3[4] = v2;
  objc_msgSend(v1, sel_getNotificationSettingsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_23180DA0C()
{
  return swift_task_switch();
}

uint64_t sub_23180DA58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 192) = objc_msgSend(v1, sel_criticalAlertSetting);

  sub_2318D57F0();
  return swift_task_switch();
}

uint64_t sub_23180DACC()
{
  uint64_t v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  if (*(_QWORD *)(v0 + 192) == 2)
    v1 = (void (**)(uint64_t))(v0 + 136);
  else
    v1 = (void (**)(uint64_t))(v0 + 152);
  v2 = *v1;
  v3 = swift_release();
  v2(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23180DB28()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F25B30)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(255, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_23180DBD0();
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v0);
    v1 = sub_2318D4CA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F25B30);
  }
}

void sub_23180DBD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B3E8)
  {
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B440);
    v0 = sub_2318D57E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B3E8);
  }
}

void sub_23180DC34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25B38)
  {
    sub_23180DD24(255, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    sub_23180DD80(&qword_255F25B48, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
    sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    v0 = sub_2318D4D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25B38);
  }
}

void sub_23180DD24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2318D4D94();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23180DD80(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_23180DD24(255, a2, a3);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23180DDC0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_2317CCC9C(255, a2);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23180DE00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23180DE24(unint64_t *a1)
{
  uint64_t v1;

  return sub_23180C34C(a1, v1);
}

uint64_t sub_23180DE2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23180DEA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_2318D4E90();
}

uint64_t sub_23180DF20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_2318D6348();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  v6 = sub_2318D6384();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_2318D62B8() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_2318D62B8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_231862634();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23180E418(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23180E0AC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_2318D6054();

    if ((v5 & 1) != 0)
    {
      v6 = sub_23180E280();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_2318D5E68();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_2318D5E74();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_2318D5E74();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2318627E0();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_23180E5DC(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23180E280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_2318D6030();
  v3 = swift_unknownObjectRetain();
  v4 = sub_231860FC0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_2318D5E68();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_2318D5E74();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_23180E5DC(v7);
      if ((sub_2318D5E74() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_2318D5E74();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_23180E418(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2318D600C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2318D6348();
        swift_bridgeObjectRetain();
        sub_2318D567C();
        v10 = sub_2318D6384();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23180E5DC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2318D600C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_2318D5E68();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_23180E77C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2317D4290(255, a3);
    v4 = sub_2318D5F64();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23180E7DC(uint64_t a1, char a2)
{
  sub_23180CA20(a1, a2);
}

uint64_t sub_23180E7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_23180E820()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = qword_255F25A38;
  *(_QWORD *)&v1[v2] = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = qword_255F25A40;
  sub_2318D2BF8();
  sub_2318D2BEC();
  v4 = sub_2318D2BE0();
  swift_release();
  *(_QWORD *)&v1[v3] = v4;
  *(_QWORD *)&v1[qword_255F25A48] = 0;

  sub_2318D6150();
  __break(1u);
}

void sub_23180E8F0(uint64_t *a1)
{
  uint64_t v1;

  sub_23180AAD4(a1, v1);
}

unint64_t sub_23180E8F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25B88;
  if (!qword_255F25B88)
  {
    sub_2317D4194(255, &qword_255F25B80, (uint64_t (*)(uint64_t))sub_23180CD48, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9EE8], v1);
    atomic_store(result, &qword_255F25B88);
  }
  return result;
}

uint64_t sub_23180E958()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23180E984()
{
  uint64_t v0;

  sub_23180AD58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23180E98C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23180E9B0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = sub_23180ADF4();
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);

}

uint64_t sub_23180E9FC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23180EA38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2317D31D8;
  return sub_23180D8A8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23180EACC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23180EAF0(uint64_t a1)
{
  uint64_t v1;

  sub_23180CFCC(a1, v1);
}

uint64_t sub_23180EAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23180EB08()
{
  return swift_release();
}

void sub_23180EB1C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView];
  v3 = objc_msgSend(v2, sel_widthAnchor);
  v4 = objc_msgSend(v3, sel_constraintEqualToConstant_, 50.0);

  objc_msgSend(v4, sel_setActive_, 1);
  v5 = objc_msgSend(v2, sel_heightAnchor);
  v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 50.0);

  objc_msgSend(v6, sel_setActive_, 1);
  sub_231804F78(0, (unint64_t *)&qword_25418B490);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2318D8520;
  v8 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel];
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v2;
  sub_2318D57A8();
  v9 = objc_allocWithZone(MEMORY[0x24BEBD978]);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B0C8);
  v10 = v8;
  v11 = v2;
  v12 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v9, sel_initWithArrangedSubviews_, v12);

  objc_msgSend(v13, sel_setAxis_, 0);
  objc_msgSend(v13, sel_setAlignment_, 3);
  objc_msgSend(v13, sel_setDistribution_, 0);
  objc_msgSend(v13, sel_setSpacing_, 16.0);
  objc_msgSend(v1, sel_addSubview_, v13);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14 = objc_msgSend(v13, sel_leadingAnchor);
  v15 = objc_msgSend(v1, sel_leadingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  objc_msgSend(v16, sel_setActive_, 1);
  v17 = objc_msgSend(v13, sel_topAnchor);
  v18 = objc_msgSend(v1, sel_topAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  objc_msgSend(v19, sel_setActive_, 1);
  v20 = objc_msgSend(v13, sel_trailingAnchor);
  v21 = objc_msgSend(v1, sel_trailingAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  objc_msgSend(v22, sel_setActive_, 1);
  v23 = objc_msgSend(v13, sel_bottomAnchor);
  v24 = objc_msgSend(v1, sel_bottomAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  objc_msgSend(v25, sel_setActive_, 1);
}

id sub_23180EF00(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  objc_super v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v10 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel;
  v11 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v12 = v5;
  v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  v24 = sub_2318D55BC();
  v25 = v14;
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  v15 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);

  v17 = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
  objc_msgSend(v15, sel_setTextColor_, v17);

  sub_2317CCC9C(0, &qword_25418B0C0);
  v18 = (void *)sub_2318D5DC0();
  objc_msgSend(v15, sel_setFont_, v18);

  *(_QWORD *)&v5[v10] = v15;
  v19 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v20, sel_setContentMode_, 1);
  *(_QWORD *)&v12[v19] = v20;

  v23.receiver = v12;
  v23.super_class = (Class)type metadata accessor for MedicationsCurrentDayScheduleCompleteView();
  v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  sub_23180EB1C();

  return v21;
}

id sub_23180F1FC()
{
  return sub_2318102E0(type metadata accessor for MedicationsCurrentDayScheduleCompleteView);
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteView()
{
  return objc_opt_self();
}

id sub_23180F260()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer);
  }
  else
  {
    v4 = sub_23180F2BC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_23180F2BC()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  sub_231804F78(0, &qword_25418A050);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2318D96D0;
  sub_2317CCC9C(0, (unint64_t *)&unk_25418B0D0);
  v2 = (void *)sub_2318D5E20();
  v3 = objc_msgSend(v2, sel_CGColor);

  type metadata accessor for CGColor(0);
  v5 = v4;
  *(_QWORD *)(v1 + 56) = v4;
  *(_QWORD *)(v1 + 32) = v3;
  v6 = (void *)sub_2318D5E2C();
  v7 = objc_msgSend(v6, sel_CGColor);

  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 64) = v7;
  v8 = (void *)sub_2318D5E14();
  v9 = objc_msgSend(v8, sel_CGColor);

  *(_QWORD *)(v1 + 120) = v5;
  *(_QWORD *)(v1 + 96) = v9;
  v10 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setColors_, v10);

  objc_msgSend(v0, sel_setStartPoint_, 0.0, 0.5);
  objc_msgSend(v0, sel_setEndPoint_, 1.0, 0.5);
  return v0;
}

id sub_23180F44C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView);
  }
  else
  {
    type metadata accessor for MedicationsCurrentDayScheduleCompleteView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_23180F4D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  v1 = sub_2318D4A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item;
  swift_beginAccess();
  sub_2317FAFA8(v5, (uint64_t)v23);
  if (v23[3])
  {
    sub_23181082C();
    type metadata accessor for MedicationsCurrentDayScheduleCompleteItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v22;
      v7 = (char *)sub_23180F44C();
      v8 = *(void **)(v6 + 32);
      v9 = *(void **)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView];
      swift_bridgeObjectRetain();
      v10 = v8;
      objc_msgSend(v9, sel_setImage_, v10);
      v11 = *(void **)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel];
      v12 = (void *)sub_2318D558C();
      objc_msgSend(v11, sel_setText_, v12);
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    sub_2317FAF6C((uint64_t)v23);
  }
  sub_2318D49E0();
  v13 = v0;
  v14 = sub_2318D4A10();
  v15 = sub_2318D5A3C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v21 = v1;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v17 = 136315138;
    sub_2317FAFA8(v5, (uint64_t)v23);
    sub_2317FAF08();
    v19 = sub_2318D55EC();
    v23[0] = sub_231851EBC(v19, v20, &v22);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v14, v15, "Incorrect view model for MedicationsCurrentDayScheduleCompleteItem: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v18, -1, -1);
    MEMORY[0x2348E77E8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_23180F968()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layer);

  v3 = sub_23180F260();
  objc_msgSend(v2, sel_addSublayer_, v3);

  v4 = sub_23180F260();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = sub_23180F44C();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = sub_23180F44C();
  v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_hk_alignConstraintsWithView_insets_, v8, 16.0, 16.0, 16.0, 16.0);

}

id sub_23180FAB4()
{
  return sub_2318102E0(type metadata accessor for MedicationsCurrentDayScheduleCompleteCell);
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteCell()
{
  return objc_opt_self();
}

uint64_t sub_23180FB28@<X0>(uint64_t a1@<X8>)
{
  return sub_23181034C(&OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item, a1);
}

uint64_t sub_23180FB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2318103AC(a1, a2, a3, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item, (void (*)(uint64_t))sub_23180F4D0);
}

uint64_t (*sub_23180FB48(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23180FB90;
}

uint64_t sub_23180FB90(uint64_t a1, char a2)
{
  return sub_23181046C(a1, a2, (uint64_t (*)(uint64_t))sub_23180F4D0);
}

uint64_t sub_23180FB9C()
{
  return sub_2318104D0(33, 0xD00000000000001FLL);
}

uint64_t sub_23180FBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_identifier;
  v2 = sub_2318D297C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23180FC38()
{
  return type metadata accessor for MedicationsCurrentDayScheduleCompleteItem(0);
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteItem(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F25C20);
}

uint64_t sub_23180FC54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D297C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23180FCD8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_2318D6348();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v1 + 32);
  sub_2318D5E80();

  return sub_2318D6384();
}

void sub_23180FD54()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v1 + 32);
  sub_2318D5E80();

}

uint64_t sub_23180FDC8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_2318D6348();
  v1 = *v0;
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v1 + 32);
  sub_2318D5E80();

  return sub_2318D6384();
}

uint64_t sub_23180FE40()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23180FE7C()
{
  return sub_23180FB9C();
}

uint64_t sub_23180FE9C(uint64_t *a1, uint64_t *a2)
{
  return sub_231810880(*a1, *a2);
}

uint64_t sub_23180FEA8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  id v13;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D4BD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item;
  swift_beginAccess();
  sub_2317FAFA8(v10, (uint64_t)v24);
  if (v25)
  {
    sub_23181082C();
    type metadata accessor for MedicationsDayScheduleCompleteItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      MEMORY[0x2348E6A5C]();
      swift_bridgeObjectRetain();
      sub_2318D4BA8();
      v25 = v6;
      v26 = MEMORY[0x24BEBC5F0];
      v11 = sub_2317DBF6C(v24);
      (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v11, v9, v6);
      MEMORY[0x2348E69E4](v24);
      v12 = objc_msgSend(v1, sel_contentView);
      v13 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
      objc_msgSend(v12, sel_setBackgroundColor_, v13);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    sub_2317FAF6C((uint64_t)v24);
  }
  sub_2318D49E0();
  v15 = v1;
  v16 = sub_2318D4A10();
  v17 = sub_2318D5A3C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v2;
    v23 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_2317FAFA8(v10, (uint64_t)v24);
    sub_2317FAF08();
    v20 = sub_2318D55EC();
    v24[0] = sub_231851EBC(v20, v21, &v23);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v16, v17, "Incorrect view model for MedicationsDayScheduleCompleteItem: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v19, -1, -1);
    MEMORY[0x2348E77E8](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_2318102D4()
{
  return sub_2318102E0(type metadata accessor for MedicationsDayScheduleCompleteCell);
}

id sub_2318102E0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayScheduleCompleteCell()
{
  return objc_opt_self();
}

uint64_t sub_231810340@<X0>(uint64_t a1@<X8>)
{
  return sub_23181034C(&OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item, a1);
}

uint64_t sub_23181034C@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_2317FAFA8(v4, a2);
}

uint64_t sub_231810398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2318103AC(a1, a2, a3, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item, (void (*)(uint64_t))sub_23180FEA8);
}

uint64_t sub_2318103AC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = v5 + *a4;
  swift_beginAccess();
  sub_2317FAEC4(a1, v8);
  v9 = swift_endAccess();
  a5(v9);
  return sub_2317FAF6C(a1);
}

uint64_t (*sub_231810418(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_231810460;
}

uint64_t sub_231810460(uint64_t a1, char a2)
{
  return sub_23181046C(a1, a2, (uint64_t (*)(uint64_t))sub_23180FEA8);
}

uint64_t sub_23181046C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t sub_2318104A8()
{
  return sub_2318104D0(26, 0xD000000000000018);
}

uint64_t sub_2318104D0(uint64_t a1, uint64_t a2)
{
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  sub_2318D2958();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_231810550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteItem_identifier;
  v2 = sub_2318D297C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2318105BC()
{
  return type metadata accessor for MedicationsDayScheduleCompleteItem(0);
}

uint64_t type metadata accessor for MedicationsDayScheduleCompleteItem(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F25D08);
}

uint64_t sub_2318105D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D297C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_231810650()
{
  sub_2318D6348();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_2318106AC()
{
  swift_bridgeObjectRetain();
  sub_2318D567C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2318106F4()
{
  sub_2318D6348();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_23181074C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231810788()
{
  return sub_2318104A8();
}

uint64_t sub_2318107A8(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_2318D62B8();
  }
}

uint64_t sub_2318107D4()
{
  return sub_2317CC4AC(&qword_255F25DB8, type metadata accessor for MedicationsDayScheduleCompleteItem, (uint64_t)&unk_2318D97F4);
}

uint64_t sub_231810800()
{
  return sub_2317CC4AC(&qword_255F25DC0, type metadata accessor for MedicationsCurrentDayScheduleCompleteItem, (uint64_t)&unk_2318D98EC);
}

unint64_t sub_23181082C()
{
  unint64_t result;

  result = qword_25418AA40;
  if (!qword_25418AA40)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25418AA40);
  }
  return result;
}

uint64_t sub_231810880(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (!v2 && (sub_2318D62B8() & 1) == 0)
    return 0;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B2D8);
  return sub_2318D5E74() & 1;
}

void sub_2318108FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  sub_2318D55BC();
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  v6 = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  sub_2317CCC9C(0, &qword_25418B0C0);
  v7 = (void *)sub_2318D5DC0();
  objc_msgSend(v4, sel_setFont_, v7);

  *(_QWORD *)&v1[v2] = v4;
  v8 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setContentMode_, 1);
  *(_QWORD *)&v1[v8] = v9;

  sub_2318D6150();
  __break(1u);
}

uint64_t sub_231810B74()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  return swift_release();
}

uint64_t sub_231810BD8()
{
  return sub_231810C00();
}

uint64_t sub_231810BEC()
{
  return sub_231810C00();
}

uint64_t sub_231810C00()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_231810C68()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  swift_release();
  return v1;
}

char *sub_231810CD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  void *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  objc_class *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  void *v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  void *v76;
  void (*v77)(uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  objc_super v120;
  id v121;

  v6 = v5;
  v117 = a4;
  v118 = a5;
  v102 = a1;
  v103 = a3;
  v119 = a2;
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v113 = (char *)&v88 - v8;
  sub_231815484();
  v109 = v9;
  v111 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v108 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D42DC(0, &qword_25418AE88, v11, sub_23181551C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9648]);
  v112 = v12;
  v114 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v107 = (char *)&v88 - v13;
  sub_231815538();
  v15 = *(_QWORD *)(v14 - 8);
  v115 = v14;
  v116 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v110 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2318D5394();
  v105 = *(_QWORD *)(v17 - 8);
  v106 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v104 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_2318D29B8();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2318D2A90();
  MEMORY[0x24BDAC7A8](v20);
  v98 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2318D54C0();
  MEMORY[0x24BDAC7A8](v22);
  v97 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2318D47B8();
  MEMORY[0x24BDAC7A8](v24);
  v96 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318140B8();
  v95 = v26;
  v94 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v93 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0];
  sub_2317D4194(0, &qword_25418AF80, (uint64_t (*)(uint64_t))sub_2317D40EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v92 = v29;
  v91 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v90 = (char *)&v88 - v30;
  sub_2317D4194(0, &qword_25418AF78, (uint64_t (*)(uint64_t))sub_2317D4178, v28);
  v89 = v31;
  v88 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v88 - v32;
  sub_2317D4194(0, &qword_25418AF70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v28);
  v35 = v34;
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v88 - v37;
  v39 = sub_2318D294C();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v88 - v44;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hasMedicationsCancellable] = 0;
  v46 = &v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDate];
  v47 = v6;
  sub_2318D2940();
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v45, v39);
  sub_2318D4E60();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v39);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v46, v38, v35);
  v48 = &v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDayDoseEvents];
  v49 = (void *)MEMORY[0x24BEE4AF8];
  v121 = (id)MEMORY[0x24BEE4AF8];
  sub_2317D4178(0);
  sub_2318D4E60();
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v48, v33, v89);
  v50 = &v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDayScheduleItems];
  v121 = v49;
  sub_2317D40EC(0);
  v51 = v90;
  sub_2318D4E60();
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v50, v51, v92);
  v52 = &v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__onboardingCompleted];
  LOBYTE(v121) = 2;
  sub_2317CDA94(0, &qword_25418B518, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  v53 = v93;
  sub_2318D4E60();
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v52, v53, v95);
  v54 = v102;
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore] = v102;
  sub_2317E06B8(v119, (uint64_t)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager]);
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager] = v103;
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager] = v117;
  v55 = objc_allocWithZone(MEMORY[0x24BE45C90]);
  v56 = v54;
  swift_retain();
  swift_retain();
  v57 = objc_msgSend(v55, sel_initWithHealthStore_, v56);
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControl] = v57;
  sub_2318D47AC();
  v58 = objc_allocWithZone((Class)sub_2318D47DC());
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlObserver] = sub_2318D47D0();
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_incompatibilityCache] = v118;
  v59 = v100;
  v60 = v99;
  v61 = v101;
  (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v99, *MEMORY[0x24BDCEF70], v101);
  v62 = v56;
  swift_retain();
  sub_2318D29C4();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_2318D2940();
  v63 = (uint64_t)v97;
  sub_2318D5484();
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3968]), sel_init);
  type metadata accessor for MedicationsTimelineDataProvider();
  swift_allocObject();
  *(_QWORD *)&v47[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider] = sub_2317CDBAC(v62, 9, v63, v64);

  v65 = (objc_class *)type metadata accessor for MedicationCategoryDataSourceProvider();
  v120.receiver = v47;
  v120.super_class = v65;
  v66 = (char *)objc_msgSendSuper2(&v120, sel_init);
  v67 = *(_QWORD *)&v66[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider];
  v68 = v66;
  swift_retain();
  sub_23189A844(v68, v67);
  swift_release();
  v69 = *(void **)&v68[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControl];
  v70 = *(void **)&v68[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlObserver];
  sub_231815604();
  v71 = v104;
  v72 = v105;
  v73 = v106;
  (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v104, *MEMORY[0x24BEE5480], v106);
  v74 = v69;
  v75 = v70;
  v76 = (void *)sub_2318D5B98();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
  objc_msgSend(v74, sel_registerObserver_queue_, v75, v76);

  v121 = (id)sub_2318D4914();
  v77 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
  sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
  sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v77);
  v78 = v108;
  sub_2318D4F44();
  swift_release();
  sub_23181551C();
  v79 = v107;
  v80 = v109;
  sub_2318D4FD4();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v78, v80);
  v121 = (id)sub_2318D5B80();
  v81 = sub_2318D5B50();
  v82 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v113, 1, 1, v81);
  sub_231815640();
  sub_2317CC4AC((unint64_t *)&qword_25418B410, (uint64_t (*)(uint64_t))sub_231815604, MEMORY[0x24BEE5670]);
  v83 = v110;
  v84 = v112;
  sub_2318D4FBC();
  sub_2317DD39C(v82, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);

  (*(void (**)(char *, uint64_t))(v114 + 8))(v79, v84);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2317CC4AC(&qword_255F25ED8, (uint64_t (*)(uint64_t))sub_231815538, MEMORY[0x24BDB9A08]);
  v85 = v115;
  v86 = sub_2318D4FF8();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_2317D4B2C(v119);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v83, v85);
  *(_QWORD *)&v68[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hasMedicationsCancellable] = v86;
  swift_release();
  return v68;
}

uint64_t sub_231811768@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_2318D4974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D4968();
  if (v8 >> 62)
    v9 = sub_2318D6174();
  else
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v9)
  {
    v10 = 1;
  }
  else
  {
    v11 = sub_2318D4920();
    if (v11 >> 62)
      v12 = sub_2318D6174();
    else
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    v10 = v12 != 0;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v10;
  return result;
}

void sub_23181188C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _BYTE v13[8];

  sub_2317D42DC(0, &qword_255F25E60, (uint64_t (*)(uint64_t))sub_231815188, sub_2318151F4, MEMORY[0x24BE42C68]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v13[-v7];
  v9 = *a1;
  swift_beginAccess();
  v10 = MEMORY[0x2348E78A8](a2 + 16);
  if (v10)
  {
    v11 = (void *)v10;
    swift_getKeyPath();
    swift_getKeyPath();
    v13[7] = v9;
    v12 = v11;
    sub_2318D4E90();
    if (*(_QWORD *)&v12[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource])
    {
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE42C60], v5);
      swift_retain();
      sub_2318D35B8();

      swift_release();
    }
    else
    {

    }
  }
}

uint64_t sub_2318119E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t (*v40)(uint64_t);
  id v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t *v51;
  uint64_t v52;
  id v53;
  uint64_t *v54;
  id v55;
  uint64_t *v56;
  uint64_t v57;
  void *v58;
  uint64_t (*v59)(uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unsigned int *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t result;
  uint64_t v89;
  id v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  Class v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  _QWORD v105[35];
  _QWORD v106[3];
  uint64_t v107;

  v2 = v1;
  sub_2317D42DC(0, &qword_255F25E60, (uint64_t (*)(uint64_t))sub_231815188, sub_2318151F4, MEMORY[0x24BE42C68]);
  v99 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v101 = (char *)&v89 - v5;
  sub_2317D4194(0, &qword_25418AF48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDB9ED8]);
  v96 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v95 = (char *)&v89 - v7;
  sub_2318D5AF0();
  v90 = *(id *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  v8 = (void *)sub_2318D59DC();
  v9 = objc_allocWithZone((Class)type metadata accessor for MedicationRoomOnboardingDataSource());
  v10 = sub_2318A0A64();
  sub_2317D4B08(v106, v107);
  v11 = v10;
  v12 = (void *)sub_2318D2BBC();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB688]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v11, v12, 0, 0);

  v13 = (void *)sub_2318D3CF0();
  sub_2317D4B2C((uint64_t)v106);
  v102 = v2;
  v14 = sub_231813460((uint64_t)a1);
  v16 = v15;
  v91 = a1;
  sub_2318D5AF0();
  sub_2317D4B08(v106, v107);
  v17 = (void *)sub_2318D2BBC();
  v94 = (Class)type metadata accessor for CHRAddAccountDataSource();
  objc_allocWithZone(v94);
  v18 = v17;
  v19 = (void *)sub_231804798(v18);

  sub_2317D4B2C((uint64_t)v106);
  v20 = v13;
  v21 = sub_2317EC80C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v22 = v21[2];
  v23 = v21[3];
  v24 = v22 + 1;
  if (v22 >= v23 >> 1)
    v21 = sub_2317EC80C((_QWORD *)(v23 > 1), v22 + 1, 1, v21);
  v25 = sub_2317CC4AC(&qword_255F25E78, (uint64_t (*)(uint64_t))type metadata accessor for MedicationRoomOnboardingDataSource, MEMORY[0x24BE449E0]);
  v21[2] = v24;
  v26 = &v21[2 * v22];
  v26[4] = v20;
  v26[5] = v25;
  if (v14)
  {
    v27 = v21[3];
    swift_unknownObjectRetain();
    if (v24 >= v27 >> 1)
      v21 = sub_2317EC80C((_QWORD *)(v27 > 1), v22 + 2, 1, v21);
    v21[2] = v22 + 2;
    v28 = &v21[2 * v24];
    v28[4] = v14;
    v28[5] = v16;
  }
  v29 = v21[2];
  v30 = v21[3];
  v31 = v19;
  if (v29 >= v30 >> 1)
    v21 = sub_2317EC80C((_QWORD *)(v30 > 1), v29 + 1, 1, v21);
  v32 = sub_2317CC4AC(&qword_255F25E80, (uint64_t (*)(uint64_t))type metadata accessor for CHRAddAccountDataSource, MEMORY[0x24BE449E0]);
  v21[2] = v29 + 1;
  v33 = &v21[2 * v29];
  v33[4] = v31;
  v33[5] = v32;
  v92 = v32;

  swift_unknownObjectRelease();
  v93 = sub_2318D3A50();
  swift_allocObject();
  v98 = sub_2318D3A68();
  v103 = xmmword_2318D91C0;
  v34 = v102;
  type metadata accessor for InteractiveTimelineDataSource();
  swift_allocObject();
  v35 = swift_retain();
  v36 = sub_23188048C(v35);
  swift_release();
  v37 = MEMORY[0x24BE43520];
  v104 = v36;
  v105[0] = MEMORY[0x24BE43520];
  v38 = *(_QWORD *)(v34 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
  v39 = *(void **)(v34
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager);
  sub_2318D4368();
  v40 = (uint64_t (*)(uint64_t))MEMORY[0x24BE46610];
  swift_allocObject();
  swift_retain();
  v41 = v90;
  v42 = v91;
  swift_retain();
  v90 = v39;
  v43 = sub_2318D435C();
  v44 = sub_2317CC4AC(&qword_255F25E88, v40, MEMORY[0x24BE492D8]);
  v105[1] = v43;
  v105[2] = v44;
  sub_231812554(v42);
  v105[3] = v45;
  v105[4] = v46;
  sub_2318D4584();
  swift_retain();
  sub_2318D4578();
  v47 = (void *)sub_2318D456C();
  swift_release();
  type metadata accessor for LocalScheduleUnavailableDataSource();
  swift_allocObject();
  v105[5] = sub_23189AF60(v38, v47);
  v105[6] = v37;
  objc_opt_self();
  v48 = swift_dynamicCastObjCClass();
  if (v48)
  {
    v49 = (void *)v48;
    v91 = &v104;
    type metadata accessor for ExpiringScheduleDataSource();
    swift_allocObject();
    swift_retain();
    v50 = v41;
    v51 = v42;
    v105[7] = ExpiringScheduleDataSource.init(healthStore:listManager:viewController:)(v50, v38, v49);
    v52 = MEMORY[0x24BE43520];
    v105[8] = MEMORY[0x24BE43520];
    type metadata accessor for TimeZoneDataSource();
    swift_allocObject();
    v53 = v50;
    v54 = v51;
    v105[9] = TimeZoneDataSource.init(healthStore:viewController:)(v53, v49);
    v105[10] = v52;
    type metadata accessor for FollowUpNotificationTipDataSource();
    swift_allocObject();
    swift_retain();
    v55 = v53;
    v56 = v54;
    v105[11] = FollowUpNotificationTipDataSource.init(healthStore:listManager:viewController:)(v55, v38, v49);
    v105[12] = v52;
    v57 = sub_231812698();
    v58 = (void *)sub_231812A6C();
    swift_beginAccess();
    v59 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_2317D4194(0, &qword_25418AF70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
    v60 = v95;
    sub_2318D4E6C();
    swift_endAccess();
    sub_231815210(&qword_25418AF40, &qword_25418AF48, v59);
    v61 = v97;
    v62 = sub_2318D4F08();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v61);
    type metadata accessor for MedicationDayScheduleDataSource();
    swift_allocObject();
    v63 = v55;
    v64 = v56;
    v65 = (uint64_t)v90;
    swift_retain();
    v66 = v102;
    v105[13] = sub_2317DE210(v64, v58, v57, v63, v62, v65);
    v67 = MEMORY[0x24BE43520];
    v105[14] = MEMORY[0x24BE43520];
    v105[15] = sub_231814A10();
    v105[16] = v68;
    v105[17] = sub_231814BB0();
    v105[18] = v69;
    v105[19] = sub_231812FEC(v64);
    v105[20] = MEMORY[0x24BE444B0];
    sub_2318132E0();
    v105[21] = v70;
    v105[22] = v71;
    v105[23] = sub_231813460((uint64_t)v64);
    v105[24] = v72;
    sub_2318D5AF0();
    sub_2317D4B08(v106, v107);
    v73 = (void *)sub_2318D2BBC();
    objc_allocWithZone(v94);
    v74 = v73;
    v75 = sub_231804798(v74);

    sub_2317D4B2C((uint64_t)v106);
    v105[25] = v75;
    v105[26] = v92;
    v105[27] = sub_2318137F4(v64);
    v105[28] = v76;
    v105[29] = sub_231813C2C();
    v105[30] = v67;
    v105[31] = sub_231813C20();
    v105[32] = v67;
    type metadata accessor for MedicationCategoryOptionsDataSource();
    swift_allocObject();
    v77 = 0;
    v105[33] = sub_2318811E4();
    v105[34] = v67;
    v78 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v80 = v105[v77 - 1];
      if (v80)
      {
        v81 = v105[v77];
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v78 = sub_2317EC80C(0, v78[2] + 1, 1, v78);
        v83 = v78[2];
        v82 = v78[3];
        if (v83 >= v82 >> 1)
          v78 = sub_2317EC80C((_QWORD *)(v82 > 1), v83 + 1, 1, v78);
        v78[2] = v83 + 1;
        v79 = &v78[2 * v83];
        v79[4] = v80;
        v79[5] = v81;
      }
      v77 += 2;
    }
    while (v77 != 36);
    sub_23181528C(0, &qword_255F25E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    swift_allocObject();
    sub_2318D3A68();
    sub_231815188();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_retain();
    sub_2318D39C0();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2318D4E84();
    swift_release();
    swift_release();
    if (LOBYTE(v106[0]) == 2)
      v84 = (unsigned int *)MEMORY[0x24BE42C58];
    else
      v84 = (unsigned int *)MEMORY[0x24BE42C60];
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v101, *v84, v100);
    sub_2317D42DC(0, &qword_255F25E98, (uint64_t (*)(uint64_t))sub_231815188, sub_2318151F4, MEMORY[0x24BE42CA8]);
    swift_allocObject();
    swift_retain();
    v85 = sub_2318D35C4();
    *(_QWORD *)(v66
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource) = v85;
    swift_retain();
    swift_release();
    sub_23181528C(0, (unint64_t *)&qword_255F25690, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_2318D8680;
    v87 = sub_2318152F8();
    *(_QWORD *)(v86 + 32) = v85;
    *(_QWORD *)(v86 + 40) = v87;
    swift_release();
    swift_release();
    swift_release();
    return v86;
  }
  else
  {
    result = sub_2318D6150();
    __break(1u);
  }
  return result;
}

uint64_t sub_2318124A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  char v6;

  v3 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x2348E78A8](v3);
  if (result)
  {
    v5 = (void *)result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2318D4E84();

    swift_release();
    swift_release();
    return v6 != 2 && (v6 & 1) == 0;
  }
  return result;
}

void sub_231812554(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  unsigned int v6;
  void *v7;
  uint64_t (*v8)(uint64_t);
  id v9;
  id v10;

  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_features);

  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v6 = objc_msgSend(v5, sel_seahorse);

  if (v6)
  {
    v7 = *(void **)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
    sub_2318D43E0();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE46688];
    swift_allocObject();
    swift_retain();
    v9 = v7;
    v10 = a1;
    swift_retain();
    sub_2318D43D4();
    sub_2317CC4AC(&qword_255F25E58, v8, MEMORY[0x24BE492D8]);
  }
}

uint64_t sub_231812698()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9ED8];
  sub_2317D4194(0, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178, MEMORY[0x24BDB9ED8]);
  v2 = v1;
  v24 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - v3;
  sub_2317D4194(0, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC, v0);
  v6 = v5;
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - v7;
  sub_231814E64();
  v10 = v9;
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231815108();
  v21 = v13;
  v23 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0];
  sub_2317D4194(0, &qword_25418AF80, (uint64_t (*)(uint64_t))sub_2317D40EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2318D4E6C();
  swift_endAccess();
  swift_beginAccess();
  sub_2317D4194(0, &qword_25418AF78, (uint64_t (*)(uint64_t))sub_2317D4178, v16);
  sub_2318D4E6C();
  swift_endAccess();
  sub_231815210(&qword_25418AF60, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC);
  sub_231815210(&qword_25418AF50, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178);
  sub_2318D4F38();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  sub_2317CC4AC(&qword_25418AE40, (uint64_t (*)(uint64_t))sub_231814E64, MEMORY[0x24BDB9450]);
  sub_2318D4F44();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  sub_2317CC4AC(&qword_25418AEB0, (uint64_t (*)(uint64_t))sub_231815108, MEMORY[0x24BDB96C0]);
  v17 = v21;
  v18 = sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v17);
  return v18;
}

uint64_t sub_2318129BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_2318D4110();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2318D40EC();
  v6 = sub_2318D40F8();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6 & 1;
  return result;
}

uint64_t sub_231812A6C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9ED8];
  sub_2317D4194(0, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178, MEMORY[0x24BDB9ED8]);
  v3 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  v39 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - v4;
  sub_2317D4194(0, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC, v1);
  v7 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  v37 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - v8;
  sub_231814E64();
  v41 = v10;
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231814F5C();
  v42 = v12;
  v44 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v40 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_2318D447C();
  v14 = *(_QWORD *)(v35 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v35);
  v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v34 - v18;
  v20 = objc_retain(*(id *)(v0
                          + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore));
  sub_2318D4470();
  swift_beginAccess();
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0];
  sub_2317D4194(0, &qword_25418AF80, (uint64_t (*)(uint64_t))sub_2317D40EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2318D4E6C();
  swift_endAccess();
  swift_beginAccess();
  sub_2317D4194(0, &qword_25418AF78, (uint64_t (*)(uint64_t))sub_2317D4178, v21);
  sub_2318D4E6C();
  swift_endAccess();
  sub_231815210(&qword_25418AF60, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC);
  sub_231815210(&qword_25418AF50, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178);
  v22 = v34;
  v23 = v36;
  v24 = v38;
  sub_2318D4F38();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v23);
  v25 = v35;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v35);
  v26 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v27 + v26, v17, v25);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_231815068;
  *(_QWORD *)(v28 + 24) = v27;
  sub_2317D4194(0, &qword_255F25E48, MEMORY[0x24BE462D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317CC4AC(&qword_25418AE40, (uint64_t (*)(uint64_t))sub_231814E64, MEMORY[0x24BDB9450]);
  v30 = v40;
  v29 = v41;
  sub_2318D4F44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v29);
  sub_2317CC4AC(&qword_255F25E50, (uint64_t (*)(uint64_t))sub_231814F5C, MEMORY[0x24BDB96C0]);
  v31 = v42;
  v32 = sub_2318D4EE4();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v25);
  return v32;
}

uint64_t sub_231812EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2318D4110();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2318D40EC();
  sub_2318D447C();
  v4 = sub_2318D4104();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_231812F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_2317D4178(0);
  sub_2317CC4AC(&qword_255F25EC8, (uint64_t (*)(uint64_t))sub_2317D4178, MEMORY[0x24BEE12E0]);
  result = sub_2318D5964();
  *a1 = result;
  return result;
}

uint64_t sub_231812FEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
    v6 = *(void **)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
    v7 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager);
    v8 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_incompatibilityCache);
    type metadata accessor for MedicationListCompactDataSource(0);
    swift_allocObject();
    v9 = a1;
    swift_retain();
    v10 = v6;
    swift_retain();
    swift_retain();
    v11 = sub_23185B0EC(v5, (uint64_t)v10, v4, v7, v8);

    swift_release();
    swift_release();
    type metadata accessor for MedicationListRegularDataSource(0);
    swift_allocObject();
    v12 = v9;
    swift_retain();
    v13 = v10;
    swift_retain();
    swift_retain();
    v14 = sub_23185B0EC(v5, (uint64_t)v13, v4, v7, v8);

    swift_release();
    swift_release();
    sub_2317D4194(0, &qword_255F25E20, (uint64_t (*)(uint64_t))sub_231814DF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8510;
    *(_QWORD *)(inited + 32) = 1;
    v16 = MEMORY[0x24BE49278];
    v17 = sub_2317CC4AC(&qword_255F25E30, type metadata accessor for MedicationListCompactDataSource, MEMORY[0x24BE49278]);
    *(_QWORD *)(inited + 40) = v11;
    *(_QWORD *)(inited + 48) = v17;
    v18 = MEMORY[0x24BE43520];
    *(_QWORD *)(inited + 56) = MEMORY[0x24BE43520];
    *(_QWORD *)(inited + 64) = 2;
    v19 = sub_2317CC4AC(&qword_255F25E38, type metadata accessor for MedicationListRegularDataSource, v16);
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = v19;
    *(_QWORD *)(inited + 88) = v18;
    sub_2317FFFB0(inited);
    swift_setDeallocating();
    sub_231814DF8();
    swift_retain();
    swift_retain();
    swift_arrayDestroy();
    sub_2318D3C18();
    swift_allocObject();
    v20 = sub_2318D3C0C();
    swift_release();
    swift_release();

    return v20;
  }
  else
  {
    result = sub_2318D6150();
    __break(1u);
  }
  return result;
}

void sub_2318132E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  unsigned int v7;
  void *v8;
  uint64_t (*v9)(uint64_t);
  id v10;
  uint64_t v11;

  v1 = sub_2318D432C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4198]), sel_init);
  v6 = objc_msgSend(v5, sel_features);

  if (v6)
  {
    v7 = objc_msgSend(v6, sel_seahorse);

    if (v7)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE465B0], v1);
      v8 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
      sub_2318D4344();
      v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BE465C8];
      swift_allocObject();
      swift_retain();
      v10 = v8;
      swift_retain();
      sub_2318D4338();
      sub_2317CC4AC(&qword_255F25E18, v9, MEMORY[0x24BE492D8]);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_231813460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[40];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a1;
  sub_2317D4194(0, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v30 - v2;
  v4 = sub_2318D3AF8();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D3E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_2318D3AC8();
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2318D3E40();
  v14 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  v34 = sub_2318D33C0();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D33B4();
  sub_2318D3E34();
  *v9 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE44F10], v6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  sub_2318D3AA4();
  sub_2318D3ABC();
  v22 = sub_2318D2BB0();
  v23 = sub_2318D2BA4();
  v43 = v22;
  v44 = MEMORY[0x24BE47240];
  v42 = v23;
  v24 = v33;
  v25 = objc_msgSend(*(id *)(v33+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore), sel_profileIdentifier);
  v26 = sub_2318D342C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
  sub_2318D35AC();

  sub_2317DD39C((uint64_t)v3, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678]);
  sub_2317E06B8(v24 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager, (uint64_t)v41);
  sub_2318D5B08();
  v27 = v35;
  sub_2318D3AD4();
  v28 = sub_2318D3AB0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v31);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v34);
  return v28;
}

uint64_t sub_2318137F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[5];
  uint64_t v32[4];

  v2 = v1;
  swift_getObjectType();
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
    sub_2318D5AF0();
    sub_2317D4B08(v32, v32[3]);
    sub_2318D2BBC();
    sub_2317E06B8(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager, (uint64_t)v31);
    sub_2317CDA94(0, &qword_25418B158, MEMORY[0x24BE475B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v11 + 32) = objc_msgSend(v9, sel_profileIdentifier);
    if (qword_25418B328 != -1)
      swift_once();
    sub_2318D2808();
    v12 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_2318D3354();
    swift_allocObject();
    v13 = sub_2318D3348();
    sub_2317D4B2C((uint64_t)v32);
  }
  else
  {
    sub_2318D49E0();
    v14 = a1;
    v15 = sub_2318D4A10();
    v16 = sub_2318D5A54();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32[0] = v30;
      *(_DWORD *)v17 = 136315394;
      v18 = sub_2318D63CC();
      v31[0] = sub_231851EBC(v18, v19, v32);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v28[1] = v17 + 14;
      v20 = v14;
      v21 = objc_msgSend(v20, sel_description);
      v22 = sub_2318D55BC();
      v29 = v4;
      v23 = v22;
      v25 = v24;

      v31[0] = sub_231851EBC(v23, v25, v32);
      sub_2318D5F70();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v15, v16, "[%s)]: No resolved health store provided by %s", (uint8_t *)v17, 0x16u);
      v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v26, -1, -1);
      MEMORY[0x2348E77E8](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return 0;
  }
  return v13;
}

_QWORD *sub_231813C20()
{
  return sub_231813C38((void (*)(_QWORD))type metadata accessor for MedicationCategoryArchivedMedicationsDataSource);
}

_QWORD *sub_231813C2C()
{
  return sub_231813C38((void (*)(_QWORD))type metadata accessor for MedicationCategoryPDFDataSource);
}

_QWORD *sub_231813C38(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(uint64_t);

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
  a1(0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + qword_25418ADA0) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + qword_25418AD98) = v2;
  swift_retain_n();
  v4 = (_QWORD *)sub_2318D3C9C();
  v5 = *(void (**)(uint64_t))(qword_25418FC28 + *v4 + 64);
  swift_retain_n();
  v5(v2);
  sub_2318D37BC();
  swift_release();
  swift_bridgeObjectRelease();
  sub_231823F1C();
  swift_release();
  swift_release();
  return v4;
}

id sub_231813D5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationCategoryDataSourceProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231813F34()
{
  return type metadata accessor for MedicationCategoryDataSourceProvider();
}

uint64_t type metadata accessor for MedicationCategoryDataSourceProvider()
{
  uint64_t result;

  result = qword_25418AD80;
  if (!qword_25418AD80)
    return swift_getSingletonMetadata();
  return result;
}

void sub_231813F78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2317D4194(319, &qword_25418AF70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
  {
    sub_2317D4194(319, &qword_25418AF78, (uint64_t (*)(uint64_t))sub_2317D4178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
    if (v1 <= 0x3F)
    {
      sub_2317D4194(319, &qword_25418AF80, (uint64_t (*)(uint64_t))sub_2317D40EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
      if (v2 <= 0x3F)
      {
        sub_2318140B8();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_2318140B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AF88)
  {
    sub_2317CDA94(255, &qword_25418B518, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2318D4E9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AF88);
  }
}

uint64_t sub_231814124(uint64_t *a1)
{
  return sub_2318119E0(a1);
}

uint64_t sub_231814148()
{
  char *v0;

  return sub_231814488(v0);
}

uint64_t sub_231814150()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  return swift_release();
}

uint64_t sub_2318141B8(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  id v13;
  uint64_t v15;

  v4 = sub_2318D294C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v11(v8, (uint64_t)v10, v4);
  v13 = v12;
  sub_2318D4E90();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_2318142B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_231814330(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_2318D4E90();
}

uint64_t sub_2318143A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2318D4E84();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23181441C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_2318D4E90();
}

uint64_t sub_231814488(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t result;
  id v32;
  id v33;
  id v34;
  id v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;

  v35 = a1;
  v2 = sub_2318D2A90();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2318D54C0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - v9;
  v37 = sub_2318D294C();
  v11 = *(_QWORD *)(v37 - 8);
  v12 = MEMORY[0x24BDAC7A8](v37);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  v17 = *(_QWORD *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider];
  v18 = v17 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  swift_beginAccess();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v36(v10, v18, v5);
  v19 = objc_msgSend(*(id *)(v17 + 40), sel_currentCalendar);
  sub_2318D2A3C();

  sub_2318D54B4();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v10, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  v21 = v37;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v37);
  v22 = v35;
  sub_2318D4E90();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v21);
  v23 = (uint64_t)v40;
  v36(v40, v18, v5);
  swift_retain();
  v24 = sub_2317F8080(v23);
  v26 = v25;
  swift_release();
  v20((char *)v23, v5);
  if (v24 >= 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v41 = v24;
    v33 = v22;
    swift_bridgeObjectRetain();
    sub_2318D4E90();
    swift_getKeyPath();
    swift_getKeyPath();
    v41 = v26;
    v34 = v33;
    swift_bridgeObjectRetain();
    sub_2318D4E90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2317D41EC(v24);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2318D4E84();
    swift_release();
    swift_release();
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    if (v27)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v41 = v28;
      v29 = v22;
      sub_2318D4E90();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2318D4E84();
    swift_release();
    swift_release();
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    result = swift_bridgeObjectRelease();
    if (v30)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v41 = v28;
      v32 = v22;
      return sub_2318D4E90();
    }
  }
  return result;
}

uint64_t sub_231814980@<X0>(_QWORD *a1@<X8>)
{
  return sub_2318142B8(a1);
}

uint64_t sub_2318149A4(uint64_t a1, void **a2)
{
  return sub_231814330(a1, a2);
}

uint64_t sub_2318149C8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2318142B8(a1);
}

uint64_t sub_2318149EC(uint64_t a1, void **a2)
{
  return sub_231814330(a1, a2);
}

uint64_t sub_231814A10()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v10;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2317D4194(0, &qword_25418AF48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDB9ED8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  swift_beginAccess();
  sub_2317D4194(0, &qword_25418AF70, v1, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v8 = v7;
  swift_retain();
  sub_2318D4E6C();
  swift_endAccess();
  sub_231815210(&qword_25418AF40, &qword_25418AF48, v1);
  sub_2318D4F08();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2318D4014();
  swift_allocObject();
  swift_retain();
  return sub_2318D4008();
}

uint64_t sub_231814BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v15[4];

  sub_2317D4194(0, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178, MEMORY[0x24BDB9ED8]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v15 - v4;
  sub_231815360();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2317D4194(0, &qword_25418AF78, (uint64_t (*)(uint64_t))sub_2317D4178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2318D4E6C();
  swift_endAccess();
  sub_2317D4178(0);
  sub_231815210(&qword_25418AF50, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178);
  sub_2318D4F14();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2317CC4AC(&qword_25418AE50, (uint64_t (*)(uint64_t))sub_231815360, MEMORY[0x24BDB94C8]);
  v11 = sub_2318D4ED8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15[1] = v11;
  sub_23180DD24(0, &qword_255F25EA8, (void (*)(uint64_t))sub_231815410);
  sub_23180DD80(&qword_255F25EC0, &qword_255F25EA8, (void (*)(uint64_t))sub_231815410);
  sub_2318D4F08();
  swift_release();
  v12 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  sub_2318D3FFC();
  swift_allocObject();
  v13 = v12;
  return sub_2318D3FF0();
}

void sub_231814DF8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F25E28)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_2318011A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F25E28);
  }
}

void sub_231814E64()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25418AE48)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9ED8];
    sub_2317D4194(255, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC, MEMORY[0x24BDB9ED8]);
    sub_2317D4194(255, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178, v0);
    sub_231815210(&qword_25418AF60, &qword_25418AF68, (uint64_t (*)(uint64_t))sub_2317D40EC);
    sub_231815210(&qword_25418AF50, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178);
    v1 = sub_2318D4C68();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25418AE48);
  }
}

void sub_231814F5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25E40)
  {
    sub_231814E64();
    sub_2317D4194(255, &qword_255F25E48, MEMORY[0x24BE462D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317CC4AC(&qword_25418AE40, (uint64_t (*)(uint64_t))sub_231814E64, MEMORY[0x24BDB9450]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25E40);
  }
}

uint64_t sub_231815008()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2318D447C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_231815068()
{
  sub_2318D447C();
  return sub_231812EB4();
}

uint64_t sub_2318150B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2318150D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_231815108()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AEB8)
  {
    sub_231814E64();
    sub_2317CC4AC(&qword_25418AE40, (uint64_t (*)(uint64_t))sub_231814E64, MEMORY[0x24BDB9450]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AEB8);
  }
}

void sub_231815188()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25E68)
  {
    sub_2318D3A50();
    v0 = sub_2318D39CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25E68);
  }
}

uint64_t sub_2318151F4()
{
  return sub_2317CC4AC(&qword_255F25E70, (uint64_t (*)(uint64_t))sub_231815188, MEMORY[0x24BE43BF8]);
}

uint64_t sub_231815210(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2317D4194(255, a2, a3, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9EE8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231815258()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23181527C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2318124A8(a1, a2, v2);
}

void sub_23181528C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2317D4290(255, &qword_255F25698);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2318152F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25EA0;
  if (!qword_255F25EA0)
  {
    sub_2317D42DC(255, &qword_255F25E98, (uint64_t (*)(uint64_t))sub_231815188, sub_2318151F4, MEMORY[0x24BE42CA8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BE42CC8], v1);
    atomic_store(result, (unint64_t *)&qword_255F25EA0);
  }
  return result;
}

void sub_231815360()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AE58)
  {
    sub_2317D4194(255, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178, MEMORY[0x24BDB9ED8]);
    sub_2317D4178(255);
    sub_231815210(&qword_25418AF50, &qword_25418AF58, (uint64_t (*)(uint64_t))sub_2317D4178);
    v0 = sub_2318D4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AE58);
  }
}

void sub_231815410()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25EB0)
  {
    sub_2317D4290(255, &qword_255F25EB8);
    v0 = sub_2318D57E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25EB0);
  }
}

uint64_t sub_231815478()
{
  return sub_2318D4890();
}

void sub_231815484()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25418AE98)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(255, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v0);
    v1 = sub_2318D4CF8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25418AE98);
  }
}

uint64_t sub_23181551C()
{
  return sub_2317CC4AC(&qword_25418AE90, (uint64_t (*)(uint64_t))sub_231815484, MEMORY[0x24BDB96C0]);
}

void sub_231815538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25ED0)
  {
    sub_2317D42DC(255, &qword_25418AE88, (uint64_t (*)(uint64_t))sub_231815484, sub_23181551C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9648]);
    sub_231815604();
    sub_231815640();
    sub_2317CC4AC((unint64_t *)&qword_25418B410, (uint64_t (*)(uint64_t))sub_231815604, MEMORY[0x24BEE5670]);
    v0 = sub_2318D4D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25ED0);
  }
}

unint64_t sub_231815604()
{
  unint64_t result;

  result = qword_25418B420;
  if (!qword_25418B420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B420);
  }
  return result;
}

unint64_t sub_231815640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418AE80;
  if (!qword_25418AE80)
  {
    sub_2317D42DC(255, &qword_25418AE88, (uint64_t (*)(uint64_t))sub_231815484, sub_23181551C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9648]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9658], v1);
    atomic_store(result, (unint64_t *)&qword_25418AE80);
  }
  return result;
}

void sub_2318156A8(char *a1)
{
  uint64_t v1;

  sub_23181188C(a1, v1);
}

uint64_t type metadata accessor for ArchivedMedicationsListViewController()
{
  uint64_t result;

  result = qword_255F25EF0;
  if (!qword_255F25EF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2318156EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231815740(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_2318D6174())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x2348E6E94](0, a2);
LABEL_5:
      v6 = v5;
      sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
      v7 = sub_2318D5E74();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_2318D5E74();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x2348E6E94](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_2318D5E74();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_2318158C4(uint64_t a1, void *a2)
{
  char *v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v2[qword_255F25EE8] = 0;
  *(_QWORD *)&v2[qword_255F25EE0] = a1;
  v5 = objc_allocWithZone(MEMORY[0x24BEBD488]);
  swift_retain();
  v6 = objc_msgSend(v5, sel_init);
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  v7 = objc_msgSendSuper2(&v12, sel_initWithCollectionViewLayout_, v6);

  type metadata accessor for ArchivedMedicationsDataSourceProvider();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_2317CC4AC(&qword_255F25FA0, (uint64_t (*)(uint64_t))type metadata accessor for ArchivedMedicationsDataSourceProvider, (uint64_t)&unk_2318DCA38);
  swift_retain();
  v9 = v7;
  v10 = a2;
  sub_2318D3E7C();

  swift_release();
  return v9;
}

void sub_2318159E8(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_255F25EE8] = 0;
  v4 = a3;

  sub_2318D6150();
  __break(1u);
}

void sub_231815A5C(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_231815AB4();

}

uint64_t sub_231815AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  v0 = sub_2318D5B74();
  v42 = *(_QWORD *)(v0 - 8);
  v43 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v41 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318167EC();
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231816840();
  v5 = v4;
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23181694C();
  v9 = v8;
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318169C4();
  v35 = v12;
  v38 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231816A3C();
  v16 = *(_QWORD *)(v15 - 8);
  v39 = v15;
  v40 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v34 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v18 = (void *)sub_2318D4914();
  swift_release();
  v44 = v18;
  v19 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
  sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
  sub_2318168E8();
  sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v19);
  sub_2318D4F44();
  swift_release();
  sub_2317CC4AC(&qword_255F25F50, (uint64_t (*)(uint64_t))sub_231816840, MEMORY[0x24BDB96C0]);
  sub_231816B18();
  sub_2318D4FD4();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  sub_2317CC4AC(&qword_255F25F60, (uint64_t (*)(uint64_t))sub_23181694C, MEMORY[0x24BDB9658]);
  sub_2318D4F68();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v44 = (id)sub_2318D5B80();
  v20 = sub_2318D5B50();
  v21 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v37, 1, 1, v20);
  sub_2317CC4AC(&qword_255F25F70, (uint64_t (*)(uint64_t))sub_2318169C4, MEMORY[0x24BDB97F8]);
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v22 = v34;
  v23 = v35;
  sub_2318D4FBC();
  sub_2317CF774(v21, (uint64_t (*)(_QWORD))sub_2318167EC);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v23);
  swift_allocObject();
  v24 = v36;
  swift_unknownObjectWeakInit();
  swift_retain();
  v25 = v41;
  sub_2318D5B5C();
  v26 = (void *)sub_2318D5B80();
  v44 = v26;
  sub_2317CC4AC(&qword_255F25F88, (uint64_t (*)(uint64_t))sub_231816A3C, MEMORY[0x24BDB9A08]);
  v27 = v39;
  v28 = (void *)sub_2318D4ECC();

  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v27);
  swift_release();
  v44 = v28;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_23180DD24(0, &qword_255F25F90, (void (*)(uint64_t))sub_2318168E8);
  sub_23180DD80(&qword_255F25F98, &qword_255F25F90, (void (*)(uint64_t))sub_2318168E8);
  v29 = sub_2318D4FF8();
  swift_release();
  swift_release();
  *(_QWORD *)(v24 + qword_255F25EE8) = v29;
  return swift_release();
}

uint64_t sub_231816000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2318D4920();
  *a1 = result;
  return result;
}

BOOL sub_231816028(_QWORD *a1)
{
  uint64_t v1;

  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 == 0;
}

uint64_t sub_231816088(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x2348E78A8](v1);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_navigationController);

    v3 = objc_msgSend(v4, sel_topViewController);
  }
  swift_beginAccess();
  v5 = MEMORY[0x2348E78A8](v1);
  v6 = (void *)v5;
  if (v3)
  {
    if (v5)
    {
      sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
      v7 = v3;
      v8 = sub_2318D5E74();

    }
    else
    {
      v8 = 0;
      v6 = v3;
    }
  }
  else
  {
    if (!v5)
    {
      v8 = 1;
      return v8 & 1;
    }
    v8 = 0;
  }

  return v8 & 1;
}

void sub_2318161A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  void *v18;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x2348E78A8](v2);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_navigationController);
    v6 = objc_msgSend(v5, sel_topViewController);

    if (v6
      && (sub_2317CCC9C(0, (unint64_t *)&qword_255F25600),
          v7 = v4,
          v8 = v6,
          v9 = sub_2318D5E74(),
          v8,
          v8,
          v7,
          (v9 & 1) != 0))
    {
      v10 = objc_msgSend(v7, sel_navigationController);
      if (v10)
      {
        v11 = v10;

      }
    }
    else
    {
      v12 = objc_msgSend(v4, sel_navigationController);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, sel_viewControllers);

        sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
        v15 = sub_2318D5790();

        if ((sub_231815740((uint64_t)v4, v15) & 1) != 0)
        {
          v16 = objc_msgSend(v4, sel_navigationController);
          if (!v16)
          {

            swift_bridgeObjectRelease();
            return;
          }
          v17 = v16;
          v4 = v4;
          sub_231816BCC(v15);
          swift_bridgeObjectRelease();

          v18 = (void *)sub_2318D5778();
          swift_bridgeObjectRelease();
          objc_msgSend(v17, sel_setViewControllers_, v18);

        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }

    }
  }
}

void sub_2318163D4(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_2318D2B2C();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_2318D2B2C();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_2318D3E58();
    sub_2318D3A50();
    sub_2318D3600();
    swift_release();
    sub_2317E06B8((uint64_t)v11, (uint64_t)v8);
    sub_2317D4B4C(0, (unint64_t *)&qword_25418AA40);
    sub_2317D4B4C(0, &qword_255F25B78);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_2317D4AF0(v5, (uint64_t)v10);
      sub_2317D4B08(v10, v10[3]);
      sub_2318D3708();

      sub_2317D4B2C((uint64_t)v11);
      sub_2317D4B2C((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2317CF774((uint64_t)v6, (uint64_t (*)(_QWORD))sub_231816788);
    *(_QWORD *)&v6[0] = v4;
    sub_2317CCC9C(0, (unint64_t *)&qword_255F25788);
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_2317D4B2C((uint64_t)v11);
    sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_231816788);
  }
}

uint64_t sub_2318165DC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_2318D2B80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D2B38();
  v9 = a3;
  v10 = a1;
  sub_2318163D4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_23181668C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2318166B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2318166E8()
{
  swift_release();
  return swift_release();
}

id sub_231816714()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231816748()
{
  swift_release();
  return swift_release();
}

uint64_t sub_231816780()
{
  return type metadata accessor for ArchivedMedicationsListViewController();
}

void sub_231816788()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26E60)
  {
    sub_2317D4B4C(255, &qword_255F25B78);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26E60);
  }
}

void sub_2318167EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B280)
  {
    sub_2318D5B50();
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B280);
  }
}

void sub_231816840()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F25F40)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(255, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_2318168E8();
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v0);
    v1 = sub_2318D4CF8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F25F40);
  }
}

void sub_2318168E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418A160)
  {
    sub_2317CCC9C(255, &qword_25418A168);
    v0 = sub_2318D57E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418A160);
  }
}

void sub_23181694C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25F48)
  {
    sub_231816840();
    sub_2317CC4AC(&qword_255F25F50, (uint64_t (*)(uint64_t))sub_231816840, MEMORY[0x24BDB96C0]);
    v0 = sub_2318D4CEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25F48);
  }
}

void sub_2318169C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25F58)
  {
    sub_23181694C();
    sub_2317CC4AC(&qword_255F25F60, (uint64_t (*)(uint64_t))sub_23181694C, MEMORY[0x24BDB9658]);
    v0 = sub_2318D4D1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25F58);
  }
}

void sub_231816A3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F25F68)
  {
    sub_2318169C4();
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    sub_2317CC4AC(&qword_255F25F70, (uint64_t (*)(uint64_t))sub_2318169C4, MEMORY[0x24BDB97F8]);
    sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    v0 = sub_2318D4D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F25F68);
  }
}

unint64_t sub_231816B18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F25F78;
  if (!qword_255F25F78)
  {
    sub_2318168E8();
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F25F80, &qword_25418A168, 0x24BDD4068, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F25F78);
  }
  return result;
}

uint64_t sub_231816B98()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231816BBC()
{
  uint64_t v0;

  return sub_231816088(v0);
}

void sub_231816BC4(uint64_t a1)
{
  uint64_t v1;

  sub_2318161A4(a1, v1);
}

uint64_t sub_231816BCC(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x2348E6E94](v3, a1);
LABEL_9:
        v6 = v5;
        v7 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
        if ((sub_2318D5E74() & 1) != 0)
        {

        }
        else
        {
          sub_2318D60FC();
          sub_2318D6120();
          v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_2318D612C();
          sub_2318D6108();
        }
        ++v3;
        if (v7 == v2)
          return v9;
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_2318D6174();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_231816D58(char a1)
{
  void *v1;
  char v2;
  uint64_t inited;
  void *v4;

  if (a1 != 2)
  {
    v2 = a1 & 1;
    sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8680;
    if (qword_25418B0F0 != -1)
      swift_once();
    NSBundle.bundleName.getter();
    sub_2318D56A0();
    sub_2318D56A0();
    sub_2318D6078();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 72) = v2;
    sub_2317FB554(inited);
    v4 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_addUserInfoEntriesFromDictionary_, v4);

  }
}

uint64_t sub_231816EC4()
{
  return sub_231816F04();
}

uint64_t sub_231816EE0()
{
  return sub_231816F04();
}

uint64_t sub_231816F04()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = MEMORY[0x24BEE4AD8];
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_13:
    sub_23181B654((uint64_t)&v10, (uint64_t)&qword_25418B4B0, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
    return 0;
  }
  v3 = v1;
  v4 = sub_2318D54FC();

  if (qword_25418B0F0 != -1)
    swift_once();
  *(_QWORD *)&v9[0] = NSBundle.bundleName.getter();
  *((_QWORD *)&v9[0] + 1) = v5;
  sub_2318D56A0();
  sub_2318D56A0();
  v10 = v9[0];
  sub_2318D6078();
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_2317FC1B8((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_2317E6D50(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_231801010((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_13;
  if (swift_dynamicCast())
    return *(_QWORD *)&v9[0];
  else
    return 0;
}

void sub_2318170A8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t inited;
  uint64_t v7;
  void *v8;

  if (a2)
  {
    v3 = v2;
    sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8680;
    if (qword_25418B0F0 != -1)
      swift_once();
    NSBundle.bundleName.getter();
    sub_2318D56A0();
    sub_2318D56A0();
    v7 = MEMORY[0x24BEE0D00];
    sub_2318D6078();
    *(_QWORD *)(inited + 96) = v7;
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    sub_2317FB554(inited);
    v8 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_addUserInfoEntriesFromDictionary_, v8);

  }
}

uint64_t sub_23181720C()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = MEMORY[0x24BEE4AD8];
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_13:
    sub_23181B654((uint64_t)&v10, (uint64_t)&qword_25418B4B0, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
    return 0;
  }
  v3 = v1;
  v4 = sub_2318D54FC();

  if (qword_25418B0F0 != -1)
    swift_once();
  *(_QWORD *)&v9[0] = NSBundle.bundleName.getter();
  *((_QWORD *)&v9[0] + 1) = v5;
  sub_2318D56A0();
  sub_2318D56A0();
  v10 = v9[0];
  sub_2318D6078();
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_2317FC1B8((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_2317E6D50(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  sub_231801010((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_13;
  if (swift_dynamicCast())
    return *(_QWORD *)&v9[0];
  else
    return 0;
}

void sub_2318173BC(uint64_t a1, char a2)
{
  void *v2;
  uint64_t inited;
  void *v5;

  if ((a2 & 1) == 0)
  {
    sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8680;
    if (qword_25418B0F0 != -1)
      swift_once();
    NSBundle.bundleName.getter();
    sub_2318D56A0();
    sub_2318D56A0();
    sub_2318D6078();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 72) = a1;
    sub_2317FB554(inited);
    v5 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v5);

  }
}

uint64_t sub_231817528@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v3 = objc_msgSend(v1, sel_userInfo);
  v4 = MEMORY[0x24BEE4AD8];
  if (v3)
  {
    v5 = v3;
    v6 = sub_2318D54FC();

    if (qword_25418B0F0 != -1)
      swift_once();
    v14[0] = NSBundle.bundleName.getter();
    v14[1] = v7;
    sub_2318D56A0();
    sub_2318D56A0();
    sub_2318D6078();
    if (*(_QWORD *)(v6 + 16) && (v8 = sub_2317FC1B8((uint64_t)v14), (v9 & 1) != 0))
    {
      sub_2317E6D50(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v15);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    sub_231801010((uint64_t)v14);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v16 + 1))
    {
      v10 = sub_2318D294C();
      v11 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, v11 ^ 1u, 1, v10);
    }
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  sub_23181B654((uint64_t)&v15, (uint64_t)&qword_25418B4B0, v4 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
  v13 = sub_2318D294C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

uint64_t sub_231817700(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(void);
  uint64_t inited;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  _QWORD v18[3];

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - v6;
  v8 = sub_2318D294C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317F9B14(a1, (uint64_t)v7, (unint64_t *)&qword_25418B300, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v12 = MEMORY[0x24BDCE900];
    sub_23181B654(a1, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    return sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418B300, (uint64_t)v12, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8680;
    if (qword_25418B0F0 != -1)
      swift_once();
    v18[1] = NSBundle.bundleName.getter();
    v18[2] = v15;
    sub_2318D56A0();
    sub_2318D56A0();
    sub_2318D6078();
    *(_QWORD *)(inited + 96) = v8;
    v16 = sub_2317DBF6C((uint64_t *)(inited + 72));
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v16, v11, v8);
    sub_2317FB554(inited);
    v17 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v17);

    sub_23181B654(a1, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2318179C0()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = MEMORY[0x24BEE4AD8];
  if (!v1)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_14:
    sub_23181B654((uint64_t)&v11, (uint64_t)&qword_25418B4B0, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
    return 3;
  }
  v3 = v1;
  v4 = sub_2318D54FC();

  if (qword_25418B0F0 != -1)
    swift_once();
  v10[0] = NSBundle.bundleName.getter();
  v10[1] = v5;
  sub_2318D56A0();
  sub_2318D56A0();
  sub_2318D6078();
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_2317FC1B8((uint64_t)v10), (v7 & 1) != 0))
  {
    sub_2317E6D50(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  sub_231801010((uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_14;
  if ((swift_dynamicCast() & 1) == 0)
    return 3;
  v8 = sub_2318D61D4();
  swift_bridgeObjectRelease();
  if (v8 >= 3)
    return 3;
  else
    return v8;
}

void sub_231817B78(char a1)
{
  void *v1;
  void *v2;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;

  if (a1 != 3)
  {
    v2 = v1;
    sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2318D8680;
    if (qword_25418B0F0 != -1)
      swift_once();
    NSBundle.bundleName.getter();
    sub_2318D56A0();
    sub_2318D56A0();
    v5 = MEMORY[0x24BEE0D00];
    sub_2318D6078();
    if (a1)
    {
      if (a1 == 1)
      {
        v6 = 0xE700000000000000;
        v7 = 0x65736F44676F6CLL;
      }
      else
      {
        v6 = 0xEE006D6F6F526E6FLL;
        v7 = 0x697461636964656DLL;
      }
    }
    else
    {
      v6 = 0xEC0000006D6F6F52;
      v7 = 0x79726F6765746163;
    }
    *(_QWORD *)(inited + 96) = v5;
    *(_QWORD *)(inited + 72) = v7;
    *(_QWORD *)(inited + 80) = v6;
    sub_2317FB554(inited);
    v8 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v8);

  }
}

void sub_231817D40(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, char a9)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v25 = a7;
  v26 = a8;
  v21 = a5;
  v22 = a6;
  v19 = a3;
  v20 = a4;
  v18 = a2;
  v17 = a1;
  v24 = a9 & 1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_25418A9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v9);
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_2318D2868();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2318D27A8();
  MEMORY[0x24BDAC7A8](v23);
  if (qword_25418B0F0 != -1)
    swift_once();
  v16 = objc_msgSend((id)qword_25418FC40, sel_bundleURL, v17);
  sub_2318D2850();

  sub_2318D2838();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2318D333C();
  swift_bridgeObjectRelease();
  v27 = 47;
  v28 = 0xE100000000000000;
  __asm { BR              X10 }
}

uint64_t sub_231818158(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, char *, unint64_t);
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  const char *v35;
  unint64_t v36;

  v30 = a1;
  v32 = sub_2318D2754();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v27 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v10 = sub_2318D2760();
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v12 = v10;
    v36 = MEMORY[0x24BEE4AF8];
    v13 = *(char **)(v10 + 16);
    if (v13)
    {
      v28 = v4;
      v29 = v1;
      v14 = 0;
      v35 = "scheduleItemIdentifier";
      v34 = 0x80000002318E1090;
      v11 = v32;
      v31 = v13;
      while (1)
      {
        if (v14 >= *(_QWORD *)(v12 + 16))
        {
          __break(1u);
LABEL_25:
          v11 = sub_2317EC914(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
LABEL_20:
          v25 = *(_QWORD *)(v11 + 16);
          v24 = *(_QWORD *)(v11 + 24);
          if (v25 >= v24 >> 1)
            v11 = sub_2317EC914(v24 > 1, v25 + 1, 1, v11);
          *(_QWORD *)(v11 + 16) = v25 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v25, v13, v32);
          return sub_2318D276C();
        }
        v15 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        v16 = *(_QWORD *)(v2 + 72);
        (*(void (**)(char *, unint64_t, unint64_t))(v2 + 16))(v9, v12 + v15 + v16 * v14, v11);
        if (sub_2318D273C() == 0xD000000000000014 && v17 == v34)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v19 = *(void (**)(char *, char *, unint64_t))(v2 + 32);
            v19(v33, v9, v11);
            v20 = v36;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23186E3D8(0, *(_QWORD *)(v20 + 16) + 1, 1);
              v20 = v36;
            }
            v22 = *(_QWORD *)(v20 + 16);
            v21 = *(_QWORD *)(v20 + 24);
            if (v22 >= v21 >> 1)
            {
              sub_23186E3D8(v21 > 1, v22 + 1, 1);
              v20 = v36;
            }
            *(_QWORD *)(v20 + 16) = v22 + 1;
            v23 = v20 + v15 + v22 * v16;
            v11 = v32;
            v19((char *)v23, v33, v32);
            v36 = v20;
            v13 = v31;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, unint64_t))(v2 + 8))(v9, v11);
LABEL_6:
        if (v13 == (char *)++v14)
        {
          v11 = v36;
          v4 = v28;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (v30 != 2)
  {
    sub_2318D2730();
    swift_bridgeObjectRelease();
    v13 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return sub_2318D276C();
}

uint64_t sub_231818490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;

  v6 = sub_2318D2754();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)&v29 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - v12;
  v32 = v2;
  v14 = sub_2318D2760();
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v16 = v14;
    v37 = *(_QWORD *)(v14 + 16);
    v38 = MEMORY[0x24BEE4AF8];
    if (v37)
    {
      v29 = a1;
      v30 = a2;
      v17 = 0;
      v36 = "stViewController.swift";
      v35 = 0x80000002318E1070;
      v33 = v6;
      while (1)
      {
        if (v17 >= *(_QWORD *)(v16 + 16))
        {
          __break(1u);
LABEL_25:
          v15 = sub_2317EC914(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
LABEL_20:
          v27 = *(_QWORD *)(v15 + 16);
          v26 = *(_QWORD *)(v15 + 24);
          if (v27 >= v26 >> 1)
            v15 = sub_2317EC914(v26 > 1, v27 + 1, 1, v15);
          *(_QWORD *)(v15 + 16) = v27 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v27, v3, v6);
          return sub_2318D276C();
        }
        v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v3 = *(char **)(v7 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, v16 + v18 + (_QWORD)v3 * v17, v6);
        v19 = sub_2318D273C();
        v15 = v20;
        if (v19 == 0xD000000000000016 && v20 == v35)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {
            v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
            v22(v34, v13, v6);
            v15 = v38;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23186E3D8(0, *(_QWORD *)(v15 + 16) + 1, 1);
              v15 = v38;
            }
            v24 = *(_QWORD *)(v15 + 16);
            v23 = *(_QWORD *)(v15 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_23186E3D8(v23 > 1, v24 + 1, 1);
              v15 = v38;
            }
            *(_QWORD *)(v15 + 16) = v24 + 1;
            v25 = v15 + v18 + v24 * (_QWORD)v3;
            v6 = v33;
            v22((char *)v25, v34, v33);
            v38 = v15;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
        if (v37 == ++v17)
        {
          v15 = v38;
          a2 = v30;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v3 = v31;
  if (a2)
  {
    sub_2318D2730();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return sub_2318D276C();
}

uint64_t sub_2318187C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;

  v28[1] = a1;
  v5 = sub_2318D2754();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)v28 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v28 - v11;
  v30 = v2;
  v13 = sub_2318D2760();
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v15 = v13;
    v33 = *(_QWORD *)(v13 + 16);
    v34 = MEMORY[0x24BEE4AF8];
    if (v33)
    {
      v28[0] = a2;
      v16 = 0;
      v31 = v5;
      while (1)
      {
        if (v16 >= *(_QWORD *)(v15 + 16))
        {
          __break(1u);
LABEL_25:
          v14 = sub_2317EC914(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
LABEL_20:
          v26 = *(_QWORD *)(v14 + 16);
          v25 = *(_QWORD *)(v14 + 24);
          if (v26 >= v25 >> 1)
            v14 = sub_2317EC914(v25 > 1, v26 + 1, 1, v14);
          *(_QWORD *)(v14 + 16) = v26 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26, v3, v5);
          return sub_2318D276C();
        }
        v3 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        v17 = *(_QWORD *)(v6 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v12, v15 + v3 + v17 * v16, v5);
        v18 = sub_2318D273C();
        v14 = v19;
        if (v18 == 0x697461636964656DLL && v19 == 0xEE00656D614E6E6FLL)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v20 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v21(v32, v12, v5);
            v14 = v34;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23186E3D8(0, *(_QWORD *)(v14 + 16) + 1, 1);
              v14 = v34;
            }
            v23 = *(_QWORD *)(v14 + 16);
            v22 = *(_QWORD *)(v14 + 24);
            if (v23 >= v22 >> 1)
            {
              sub_23186E3D8(v22 > 1, v23 + 1, 1);
              v14 = v34;
            }
            *(_QWORD *)(v14 + 16) = v23 + 1;
            v24 = v14 + v3 + v23 * v17;
            v5 = v31;
            v21((char *)v24, v32, v31);
            v34 = v14;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
LABEL_6:
        if (v33 == ++v16)
        {
          v14 = v34;
          a2 = v28[0];
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v3 = (unint64_t)v29;
  if (a2)
  {
    sub_2318D2730();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return sub_2318D276C();
}

uint64_t sub_231818B24(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;

  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v39 = (uint64_t)&v37 - v4;
  v5 = sub_2318D294C();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2318D2754();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v37 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - v13;
  v42 = v1;
  v15 = sub_2318D2760();
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v17 = v15;
    v48 = MEMORY[0x24BEE4AF8];
    v18 = *(_QWORD *)(v15 + 16);
    if (v18)
    {
      v38 = a1;
      a1 = 0;
      v45 = v18;
      v46 = v7;
      while (1)
      {
        if (a1 >= *(_QWORD *)(v17 + 16))
        {
          __break(1u);
LABEL_26:
          v16 = sub_2317EC914(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
LABEL_21:
          v34 = *(_QWORD *)(v16 + 16);
          v33 = *(_QWORD *)(v16 + 24);
          v35 = v44;
          if (v34 >= v33 >> 1)
            v16 = sub_2317EC914(v33 > 1, v34 + 1, 1, v16);
          *(_QWORD *)(v16 + 16) = v34 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v34, v40, v7);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v35);
          goto LABEL_24;
        }
        v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v20 = *(_QWORD *)(v8 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v14, v17 + v19 + v20 * a1, v7);
        if (sub_2318D273C() == 0x446C6C6966657270 && v21 == 0xEB00000000657461)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v16 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0)
          {
            v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
            v22(v47, v14, v7);
            v23 = v48;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23186E3D8(0, *(_QWORD *)(v23 + 16) + 1, 1);
              v23 = v48;
            }
            v25 = *(_QWORD *)(v23 + 16);
            v24 = *(_QWORD *)(v23 + 24);
            v16 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              sub_23186E3D8(v24 > 1, v25 + 1, 1);
              v23 = v48;
            }
            *(_QWORD *)(v23 + 16) = v16;
            v26 = v23 + v19 + v25 * v20;
            v7 = v46;
            v22((char *)v26, v47, v46);
            v48 = v23;
            v18 = v45;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
LABEL_6:
        if (v18 == ++a1)
        {
          v16 = v48;
          a1 = v38;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v28 = v43;
  v27 = v44;
  v29 = v39;
  sub_2317F9B14(a1, v39, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v41, v29, v27);
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    v31 = (void *)sub_2318D28F8();
    v32 = objc_msgSend(v30, sel_stringFromDate_, v31);

    sub_2318D55BC();
    sub_2318D2730();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_26;
    goto LABEL_21;
  }
  sub_23181B654(v29, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
LABEL_24:
  sub_2318D276C();
  return sub_23181B654(a1, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
}

uint64_t sub_231818FF0(unint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;

  v29 = a2;
  v28 = a1;
  v4 = sub_2318D2754();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v27 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_2318D2760();
  v13 = MEMORY[0x24BEE4AF8];
  v32 = v4;
  if (v12)
  {
    v14 = v12;
    v34 = MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(v12 + 16);
    if (v15)
    {
      v27 = v2;
      v16 = 0;
      v31 = v15;
      while (1)
      {
        if (v16 >= *(_QWORD *)(v14 + 16))
        {
          __break(1u);
LABEL_25:
          v13 = sub_2317EC914(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
LABEL_20:
          v25 = *(_QWORD *)(v13 + 16);
          v24 = *(_QWORD *)(v13 + 24);
          if (v25 >= v24 >> 1)
            v13 = sub_2317EC914(v24 > 1, v25 + 1, 1, v13);
          *(_QWORD *)(v13 + 16) = v25 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v25, v3, v32);
          return sub_2318D276C();
        }
        v3 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        v17 = *(_QWORD *)(v5 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v11, v14 + v3 + v17 * v16, v4);
        if (sub_2318D273C() == 0x446C6C6966657270 && v18 == 0xED0000656761736FLL)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v13 = sub_2318D62B8();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            v19 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v19(v33, v11, v4);
            v20 = v34;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23186E3D8(0, *(_QWORD *)(v20 + 16) + 1, 1);
              v20 = v34;
            }
            v22 = *(_QWORD *)(v20 + 16);
            v21 = *(_QWORD *)(v20 + 24);
            v13 = v22 + 1;
            if (v22 >= v21 >> 1)
            {
              sub_23186E3D8(v21 > 1, v22 + 1, 1);
              v20 = v34;
            }
            *(_QWORD *)(v20 + 16) = v13;
            v23 = v20 + v3 + v22 * v17;
            v4 = v32;
            v19((char *)v23, v33, v32);
            v34 = v20;
            v15 = v31;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
LABEL_6:
        if (v15 == ++v16)
        {
          v13 = v34;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  v3 = (unint64_t)v30;
  if ((v29 & 1) == 0)
  {
    v34 = v28;
    sub_2318D6288();
    sub_2318D2730();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return sub_2318D276C();
}

uint64_t sub_231819370()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_2318D2790();
  v0 = sub_23181B69C();
  v1 = (_QWORD *)MEMORY[0x2348E6D8C](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v0);
  swift_bridgeObjectRelease();
  if (v1[2])
  {
    v2 = v1[4];
    v3 = v1[5];
    v4 = v1[6];
    v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2348E63D8](v2, v3, v4, v5);
    swift_bridgeObjectRelease();
    v6 = sub_2318D61D4();
    swift_bridgeObjectRelease();
    if (v6 >= 3)
      return 3;
    else
      return v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 3;
  }
}

uint64_t sub_231819460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v21[2];
  char *v22;
  unint64_t v23;

  v0 = sub_2318D2754();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418A9A8, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v21 - v6;
  v8 = sub_2318D2760();
  if (!v8)
    return 2;
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v21[1] = v8;
    v22 = v7;
    v10 = v8 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v11 = *(_QWORD *)(v1 + 72);
    v12 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain();
    v23 = 0x80000002318E1090;
    while (1)
    {
      v12(v3, v10, v0);
      if (sub_2318D273C() == 0xD000000000000014 && v13 == v23)
        break;
      v14 = sub_2318D62B8();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v10 += v11;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        v15 = 1;
        v7 = v22;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v7 = v22;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v22, v3, v0);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v7, v15, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418A9A8, (uint64_t)MEMORY[0x24BDCB988], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  }
  else
  {
    v16 = sub_2318D2748();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    if (v18)
    {
      if (v16 == 48 && v18 == 0xE100000000000000 || (sub_2318D62B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v16 == 49 && v18 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = sub_2318D62B8();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
          return 2;
      }
      return 1;
    }
  }
  return 2;
}

uint64_t sub_231819758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD v18[2];
  char *v19;
  unint64_t v20;

  v0 = sub_2318D2754();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418A9A8, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - v6;
  v8 = sub_2318D2760();
  v9 = v8;
  if (v8)
  {
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v18[1] = v8;
      v19 = v7;
      v11 = v8 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v12 = *(_QWORD *)(v1 + 72);
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
      swift_bridgeObjectRetain();
      v20 = 0x80000002318E1070;
      while (1)
      {
        v13(v3, v11, v0);
        if (sub_2318D273C() == 0xD000000000000016 && v14 == v20)
          break;
        v15 = sub_2318D62B8();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          goto LABEL_12;
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        v11 += v12;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          v16 = 1;
          v7 = v19;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      v7 = v19;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v19, v3, v0);
      v16 = 0;
    }
    else
    {
      v16 = 1;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v7, v16, 1, v0);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
    {
      sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418A9A8, (uint64_t)MEMORY[0x24BDCB988], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
      return 0;
    }
    else
    {
      v9 = sub_2318D2748();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    }
  }
  return v9;
}

uint64_t sub_2318199D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;

  v0 = sub_2318D2754();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418A9A8, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - v6;
  v8 = sub_2318D2760();
  v9 = v8;
  if (v8)
  {
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v18 = v8;
      v19 = v7;
      v11 = v8 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v12 = *(_QWORD *)(v1 + 72);
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v13(v3, v11, v0);
        if (sub_2318D273C() == 0x697461636964656DLL && v14 == 0xEE00656D614E6E6FLL)
          break;
        v15 = sub_2318D62B8();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          goto LABEL_12;
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        v11 += v12;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          v16 = 1;
          v7 = v19;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      v7 = v19;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v19, v3, v0);
      v16 = 0;
    }
    else
    {
      v16 = 1;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v7, v16, 1, v0);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
    {
      sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418A9A8, (uint64_t)MEMORY[0x24BDCB988], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
      return 0;
    }
    else
    {
      v9 = sub_2318D2748();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    }
  }
  return v9;
}

uint64_t sub_231819C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  char *v23;
  uint64_t v24;

  v2 = sub_2318D2754();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418A9A8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - v8;
  v10 = sub_2318D2760();
  if (!v10)
    goto LABEL_16;
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v23 = v9;
    v24 = a1;
    v12 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v22[1] = v10;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14(v5, v12, v2);
      if (sub_2318D273C() == 0x446C6C6966657270 && v15 == 0xEB00000000657461)
        break;
      v16 = sub_2318D62B8();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v17 = 1;
        v9 = v23;
        a1 = v24;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v9 = v23;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v23, v5, v2);
    v17 = 0;
    a1 = v24;
  }
  else
  {
    v17 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, v17, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_23181B654((uint64_t)v9, (uint64_t)&qword_25418A9A8, (uint64_t)MEMORY[0x24BDCB988], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
LABEL_16:
    sub_2318D2934();
    goto LABEL_17;
  }
  sub_2318D2748();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  if (!v19)
    goto LABEL_16;
  sub_23181AB00(a1);
  swift_bridgeObjectRelease();
LABEL_17:
  v20 = sub_2318D294C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_231819F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[3];

  v0 = sub_2318D2754();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418A9A8, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - v6;
  v8 = sub_2318D2760();
  if (!v8)
    return 1;
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v40 = v8;
    v41 = v7;
    v10 = v8 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v11 = *(_QWORD *)(v1 + 72);
    v12 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v12(v3, v10, v0);
      if (sub_2318D273C() == 0x446C6C6966657270 && v13 == 0xED0000656761736FLL)
        break;
      v14 = sub_2318D62B8();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_11;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v10 += v11;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        v15 = 1;
        v7 = v41;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    v7 = v41;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v41, v3, v0);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v7, v15, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418A9A8, (uint64_t)MEMORY[0x24BDCB988], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    return 1;
  }
  v16 = sub_2318D2748();
  v18 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  if (!v18)
    return 1;
  v20 = HIBYTE(v18) & 0xF;
  v21 = v16 & 0xFFFFFFFFFFFFLL;
  if ((v18 & 0x2000000000000000) != 0)
    v22 = HIBYTE(v18) & 0xF;
  else
    v22 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v18 & 0x1000000000000000) == 0)
  {
    if ((v18 & 0x2000000000000000) == 0)
    {
      if ((v16 & 0x1000000000000000) != 0)
        v23 = (unsigned __int8 *)((v18 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v23 = (unsigned __int8 *)sub_2318D60F0();
      v24 = (uint64_t)sub_23181AF1C(v23, v21, 10);
      v26 = v25 & 1;
      goto LABEL_59;
    }
    v42[0] = v16;
    v42[1] = v18 & 0xFFFFFFFFFFFFFFLL;
    if (v16 == 43)
    {
      if (!v20)
        goto LABEL_72;
      if (v20 == 1 || (BYTE1(v16) - 48) > 9u)
        goto LABEL_46;
      v24 = (BYTE1(v16) - 48);
      if (v20 != 2)
      {
        if ((BYTE2(v16) - 48) > 9u)
          goto LABEL_46;
        v24 = 10 * (BYTE1(v16) - 48) + (BYTE2(v16) - 48);
        v27 = v20 - 3;
        if (v27)
        {
          v28 = (unsigned __int8 *)v42 + 3;
          while (1)
          {
            v29 = *v28 - 48;
            if (v29 > 9)
              goto LABEL_46;
            v30 = 10 * v24;
            if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
              goto LABEL_46;
            v24 = v30 + v29;
            if (__OFADD__(v30, v29))
              goto LABEL_46;
            v26 = 0;
            ++v28;
            if (!--v27)
              goto LABEL_59;
          }
        }
      }
    }
    else
    {
      if (v16 == 45)
      {
        if (v20)
        {
          if (v20 != 1 && (BYTE1(v16) - 48) <= 9u)
          {
            if (v20 == 2)
            {
              v26 = 0;
              v24 = -(uint64_t)(BYTE1(v16) - 48);
              goto LABEL_59;
            }
            if ((BYTE2(v16) - 48) <= 9u)
            {
              v24 = -10 * (BYTE1(v16) - 48) - (BYTE2(v16) - 48);
              v35 = v20 - 3;
              if (!v35)
                goto LABEL_58;
              v36 = (unsigned __int8 *)v42 + 3;
              while (1)
              {
                v37 = *v36 - 48;
                if (v37 > 9)
                  break;
                v38 = 10 * v24;
                if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
                  break;
                v24 = v38 - v37;
                if (__OFSUB__(v38, v37))
                  break;
                v26 = 0;
                ++v36;
                if (!--v35)
                  goto LABEL_59;
              }
            }
          }
LABEL_46:
          v24 = 0;
          v26 = 1;
          goto LABEL_59;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return result;
      }
      if (!v20 || (v16 - 48) > 9u)
        goto LABEL_46;
      v24 = (v16 - 48);
      if (v20 != 1)
      {
        if ((BYTE1(v16) - 48) > 9u)
          goto LABEL_46;
        v24 = 10 * (v16 - 48) + (BYTE1(v16) - 48);
        v31 = v20 - 2;
        if (v31)
        {
          v32 = (unsigned __int8 *)v42 + 2;
          while (1)
          {
            v33 = *v32 - 48;
            if (v33 > 9)
              goto LABEL_46;
            v34 = 10 * v24;
            if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
              goto LABEL_46;
            v24 = v34 + v33;
            if (__OFADD__(v34, v33))
              goto LABEL_46;
            v26 = 0;
            ++v32;
            if (!--v31)
              goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    v26 = 0;
    goto LABEL_59;
  }
  v24 = (uint64_t)sub_23181AE38(v16, v18, 10);
  v26 = v39;
LABEL_59:
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    return 0;
  else
    return v24;
}

void *sub_23181A44C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t inited;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v48 = (uint64_t)&v47 - v2;
  sub_2317D4194(0, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], v0);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v47 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v47 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v47 - v20;
  sub_2318D2778();
  if (qword_25418B0F0 != -1)
    swift_once();
  NSBundle.bundleName.getter();
  v22 = (void *)sub_2318D3330();
  swift_bridgeObjectRelease();
  sub_2317D4194(0, qword_25418B188, (uint64_t (*)(uint64_t))sub_2318010AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2318D8680;
  v50 = NSBundle.bundleName.getter();
  v51 = v24;
  sub_2318D56A0();
  sub_2318D56A0();
  sub_2318D6078();
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 72) = 1;
  sub_2317FB554(inited);
  v25 = (void *)sub_2318D54F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_addUserInfoEntriesFromDictionary_, v25);

  sub_2317F9B14((uint64_t)v21, (uint64_t)v18, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  v26 = sub_2318D27A8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v18, 1, v26) == 1)
  {
    sub_23181B654((uint64_t)v18, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v29 = 3;
  }
  else
  {
    v29 = sub_231819370();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
  }
  sub_231817B78(v29);
  sub_2317F9B14((uint64_t)v21, (uint64_t)v15, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  if (v28(v15, 1, v26) == 1)
  {
    sub_23181B654((uint64_t)v15, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v30 = 2;
  }
  else
  {
    v30 = sub_231819460();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v26);
  }
  sub_231816D58(v30);
  sub_2317F9B14((uint64_t)v21, (uint64_t)v12, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  if (v28(v12, 1, v26) == 1)
  {
    sub_23181B654((uint64_t)v12, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v31 = sub_231819758();
    v32 = v33;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
  }
  sub_2318170A8(v31, v32);
  sub_2317F9B14((uint64_t)v21, (uint64_t)v9, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  v34 = v28(v9, 1, v26);
  v35 = (uint64_t)v47;
  if (v34 == 1)
  {
    sub_23181B654((uint64_t)v9, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v36 = sub_2318199D0();
    v37 = v38;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
  }
  sub_2318170A8(v36, v37);
  sub_2317F9B14((uint64_t)v21, v35, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  v39 = v28((char *)v35, 1, v26);
  v40 = (uint64_t)v49;
  if (v39 == 1)
  {
    sub_23181B654(v35, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v41 = sub_2318D294C();
    v42 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v48, 1, 1, v41);
  }
  else
  {
    v42 = v48;
    sub_231819C5C(v48);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v35, v26);
  }
  sub_231817700(v42);
  sub_2317F9B14((uint64_t)v21, v40, &qword_25418A9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78]);
  if (v28((char *)v40, 1, v26) == 1)
  {
    sub_23181B654(v40, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v43 = 0;
    v44 = 1;
  }
  else
  {
    v43 = sub_231819F20();
    v44 = v45 & 1;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v40, v26);
  }
  sub_2318173BC(v43, v44);
  sub_23181B654((uint64_t)v21, (uint64_t)&qword_25418A9B0, (uint64_t)MEMORY[0x24BDCBB78], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  return v22;
}

uint64_t sub_23181AB00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - v9;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  v12 = (void *)sub_2318D558C();
  v13 = objc_msgSend(v11, sel_dateFromString_, v12);

  if (v13)
  {
    sub_2318D2928();

    v14 = sub_2318D294C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  }
  else
  {
    v14 = sub_2318D294C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  sub_23181B6E0((uint64_t)v7, (uint64_t)v10);
  sub_2317F9B14((uint64_t)v10, (uint64_t)v4, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2318D294C();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) == 1)
  {
    v16 = MEMORY[0x24BDCE900];
    sub_23181B654((uint64_t)v4, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    sub_2318D2934();

    return sub_23181B654((uint64_t)v10, (uint64_t)&qword_25418B300, (uint64_t)v16, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  }
  else
  {
    sub_23181B654((uint64_t)v10, (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v4, v14);
  }
}

_QWORD *sub_23181AD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_2317CDA94(0, &qword_25418A048, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23181ADC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_2318D56E8();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2348E6480](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_23181AE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2318D570C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23181B198();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2318D60F0();
  }
LABEL_7:
  v11 = sub_23181AF1C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23181AF1C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23181B198()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2318D5718();
  v4 = sub_23181B214(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23181B214(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23181B358(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23181AD48(v9, 0);
      v12 = sub_23181B444((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2348E63FC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2348E63FCLL);
LABEL_9:
      sub_2318D60F0();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2348E63FC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23181B358(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23181ADC0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23181ADC0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2318D56D0();
  }
  __break(1u);
  return result;
}

unint64_t sub_23181B444(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23181ADC0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2318D56DC();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2318D60F0();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23181ADC0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_2318D56B8();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23181B654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_23181B69C()
{
  unint64_t result;

  result = qword_255F25FA8;
  if (!qword_255F25FA8)
  {
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255F25FA8);
  }
  return result;
}

uint64_t sub_23181B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23181B73C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F25FB0;
  if (!qword_255F25FB0)
  {
    v1 = sub_2318D27A8();
    result = MEMORY[0x2348E7734](MEMORY[0x24BDCBB98], v1);
    atomic_store(result, (unint64_t *)&qword_255F25FB0);
  }
  return result;
}

uint64_t sub_23181B784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  double v13;
  void *v14;
  double v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t inited;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t i;
  id v51;
  void *v52;
  _QWORD *v53;
  id v54;
  unint64_t v55;
  unint64_t v56;

  v4 = type metadata accessor for MedicationPDFTextRow(0);
  v5 = (char *)a2 + *(int *)(v4 + 20);
  v6 = *MEMORY[0x24BE42A98];
  v7 = sub_2318D3564();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v53 = a2;
  v8 = (char *)a2 + *(int *)(v4 + 24);
  v9 = *MEMORY[0x24BE454E8];
  v10 = sub_2318D5BD4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_init);
  v56 = MEMORY[0x24BEE4AF8];
  v55 = *(_QWORD *)(a1 + 16);
  sub_23181D33C(v55, 0);
  sub_2318D57A8();
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = (void *)*MEMORY[0x24BEBB360];
    v13 = *MEMORY[0x24BEBB610];
    v14 = (void *)*MEMORY[0x24BEBB368];
    v15 = *MEMORY[0x24BEBB608];
    swift_bridgeObjectRetain();
    v16 = 0;
    v17 = a1 + 40;
    while (v16 <= 1)
    {
      if (v55 < 2 || v16 != 1)
      {
        sub_2317D4194(0, &qword_255F26068, (uint64_t (*)(uint64_t))sub_23181D4EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2318D8510;
        *(_QWORD *)(inited + 32) = v12;
        v40 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v41 = v12;
        v42 = objc_msgSend(v40, sel_systemFontOfSize_weight_, 12.0, v13);
        v43 = sub_2317CCC9C(0, &qword_25418B0C0);
        *(_QWORD *)(inited + 40) = v42;
        *(_QWORD *)(inited + 64) = v43;
        *(_QWORD *)(inited + 72) = v14;
        v44 = (void *)objc_opt_self();
        v45 = v14;
        v46 = objc_msgSend(v44, sel_darkTextColor);
        *(_QWORD *)(inited + 104) = sub_2317CCC9C(0, (unint64_t *)&unk_25418B0D0);
        *(_QWORD *)(inited + 80) = v46;
        sub_2317FB690(inited);
        v26 = objc_allocWithZone(MEMORY[0x24BDD1458]);
        v27 = (void *)sub_2318D558C();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_2317CC4AC(&qword_255F252E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8380);
        goto LABEL_9;
      }
      swift_bridgeObjectRetain_n();
      sub_2318D56A0();
      swift_bridgeObjectRelease();
      sub_2317D4194(0, &qword_255F26068, (uint64_t (*)(uint64_t))sub_23181D4EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_2318D8510;
      *(_QWORD *)(v28 + 32) = v12;
      v29 = (void *)objc_opt_self();
      v30 = v12;
      v31 = objc_msgSend(v29, sel_systemFontOfSize_weight_, 12.0, v13);
      v32 = sub_2317CCC9C(0, &qword_25418B0C0);
      *(_QWORD *)(v28 + 40) = v31;
      *(_QWORD *)(v28 + 64) = v32;
      *(_QWORD *)(v28 + 72) = v14;
      v33 = (void *)objc_opt_self();
      v34 = v14;
      v35 = objc_msgSend(v33, sel_darkTextColor);
      *(_QWORD *)(v28 + 104) = sub_2317CCC9C(0, (unint64_t *)&unk_25418B0D0);
      *(_QWORD *)(v28 + 80) = v35;
      sub_2317FB690(v28);
      v36 = objc_allocWithZone(MEMORY[0x24BDD1458]);
      v37 = (void *)sub_2318D558C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_2317CC4AC(&qword_255F252E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8380);
      v38 = (void *)sub_2318D54F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v36, sel_initWithString_attributes_, v37, v38);

LABEL_10:
      MEMORY[0x2348E6528]();
      if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      ++v16;
      v17 += 16;
      sub_2318D57A8();
      if (v11 == v16)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
    }
    sub_2317D4194(0, &qword_255F26068, (uint64_t (*)(uint64_t))sub_23181D4EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_2318D8510;
    *(_QWORD *)(v18 + 32) = v12;
    v19 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v20 = v12;
    v21 = objc_msgSend(v19, sel_systemFontOfSize_weight_, 12.0, v15);
    v22 = sub_2317CCC9C(0, &qword_25418B0C0);
    *(_QWORD *)(v18 + 40) = v21;
    *(_QWORD *)(v18 + 64) = v22;
    *(_QWORD *)(v18 + 72) = v14;
    v23 = (void *)objc_opt_self();
    v24 = v14;
    v25 = objc_msgSend(v23, sel_darkTextColor);
    *(_QWORD *)(v18 + 104) = sub_2317CCC9C(0, (unint64_t *)&unk_25418B0D0);
    *(_QWORD *)(v18 + 80) = v25;
    sub_2317FB690(v18);
    v26 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v27 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_2317CC4AC(&qword_255F252E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2318D8380);
LABEL_9:
    v47 = (void *)sub_2318D54F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_initWithString_attributes_, v27, v47);

    goto LABEL_10;
  }
  result = swift_bridgeObjectRelease();
LABEL_15:
  if (!(v56 >> 62))
  {
    v49 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v49)
      goto LABEL_17;
LABEL_24:
    result = swift_bridgeObjectRelease();
    *v53 = v54;
    return result;
  }
  swift_bridgeObjectRetain();
  v49 = sub_2318D6174();
  result = swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_24;
LABEL_17:
  if (v49 >= 1)
  {
    for (i = 0; i != v49; ++i)
    {
      if ((v56 & 0xC000000000000001) != 0)
        v51 = (id)MEMORY[0x2348E6E94](i, v56);
      else
        v51 = *(id *)(v56 + 8 * i + 32);
      v52 = v51;
      objc_msgSend(v54, sel_appendAttributedString_, v51);

    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id sub_23181BEDC()
{
  id *v0;

  return *v0;
}

uint64_t sub_23181BEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2318D3564();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23181BF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_2318D5BD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23181BF64()
{
  sub_2317CC4AC(&qword_255F26058, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9D50);
  return sub_2318D3498();
}

uint64_t sub_23181BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23181BFE4(a1, a2, a3, MEMORY[0x24BE42760]);
}

uint64_t sub_23181BFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23181BFE4(a1, a2, a3, MEMORY[0x24BE42768]);
}

uint64_t sub_23181BFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = sub_2317CC4AC(&qword_255F26058, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9D50);
  return a4(a1, a2, v7, a3);
}

uint64_t sub_23181C04C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2317CC4AC(&qword_255F26060, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9D10);
  *v1 = v0;
  v1[1] = sub_23181DB30;
  return sub_2318D375C();
}

_QWORD *sub_23181C0C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void (*v12)(_QWORD);
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, _QWORD, uint64_t);
  unsigned int v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  _QWORD *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v75 = type metadata accessor for MedicationPDFTextRow(0);
  v1 = MEMORY[0x24BDAC7A8](v75);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (uint64_t *)((char *)&v59 - v4);
  v74 = sub_2318D26C4();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2318D3564();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)v0 + *(int *)(type metadata accessor for MedicationsPDFProvider(0) + 20);
  v12 = *(void (**)(_QWORD))(v8 + 104);
  v68 = *MEMORY[0x24BE42AA0];
  v67 = (void (*)(char *, _QWORD, uint64_t))v12;
  v12(v10);
  v69 = v11;
  LOBYTE(v11) = sub_2318D3558();
  v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v70 = v10;
  v71 = v7;
  v66 = v13;
  v13(v10, v7);
  v14 = 8236;
  if ((v11 & 1) != 0)
    v14 = 11296;
  v65 = v14;
  v15 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_5;
LABEL_31:
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  swift_bridgeObjectRetain();
  v16 = sub_2318D6174();
  if (!v16)
    goto LABEL_31;
LABEL_5:
  result = (_QWORD *)objc_opt_self();
  v64 = result;
  if (v16 >= 1)
  {
    v18 = 0;
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v63 = v15 & 0xC000000000000001;
    v62 = xmmword_2318D8510;
    v61 = xmmword_2318D96D0;
    v60 = v15;
    v59 = v16;
    do
    {
      v80 = v18;
      if (v63)
        v20 = (id)MEMORY[0x2348E6E94](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      v21 = v20;
      v79 = v19;
      *(_QWORD *)&v81 = sub_2318D5D54();
      *((_QWORD *)&v81 + 1) = v22;
      v23 = v72;
      sub_2318D26B8();
      sub_23181B69C();
      v77 = sub_2318D5FAC();
      v76 = v24;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v74);
      swift_bridgeObjectRelease();
      sub_2317EB2FC();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v62;
      v26 = sub_2318D5D3C();
      v28 = v27;
      *(_QWORD *)(inited + 32) = v26;
      *(_QWORD *)(inited + 40) = v27;
      v78 = v21;
      v29 = sub_2318D5D84();
      v31 = v30;
      *(_QWORD *)(inited + 48) = v29;
      *(_QWORD *)(inited + 56) = v30;
      if (v28)
      {
        v32 = v5;
        v33 = v3;
        swift_bridgeObjectRetain();
        v34 = sub_2317EBDA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v36 = v34[2];
        v35 = v34[3];
        if (v36 >= v35 >> 1)
          v34 = sub_2317EBDA4((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
        v34[2] = v36 + 1;
        v37 = &v34[2 * v36];
        v37[4] = v26;
        v37[5] = v28;
        v3 = v33;
        v5 = v32;
      }
      else
      {
        v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      v38 = v80;
      if (v31)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2317EBDA4(0, v34[2] + 1, 1, v34);
        v40 = v34[2];
        v39 = v34[3];
        if (v40 >= v39 >> 1)
          v34 = sub_2317EBDA4((_QWORD *)(v39 > 1), v40 + 1, 1, v34);
        v34[2] = v40 + 1;
        v41 = &v34[2 * v40];
        v41[4] = v29;
        v41[5] = v31;
      }
      v18 = v38 + 1;
      swift_release();
      *(_QWORD *)&v81 = v34;
      sub_23181D40C(0, (unint64_t *)&qword_254189E20, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
      sub_2317EB368();
      v42 = sub_2318D5538();
      v44 = v43;
      swift_bridgeObjectRelease();
      v45 = (void *)sub_2318D5958();
      v46 = objc_msgSend(v64, sel_localizedStringFromNumber_numberStyle_, v45, 0);

      v47 = sub_2318D55BC();
      v49 = v48;

      v50 = v70;
      v51 = v71;
      v67(v70, v68, v71);
      LOBYTE(v46) = sub_2318D3558();
      v66(v50, v51);
      if ((v46 & 1) != 0)
      {
        *(_QWORD *)&v81 = 9404642;
        *((_QWORD *)&v81 + 1) = 0xA300000000000000;
        sub_2318D56A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        *(_QWORD *)&v81 = v47;
        *((_QWORD *)&v81 + 1) = v49;
      }
      sub_2318D56A0();
      v52 = v81;
      sub_23181D40C(0, (unint64_t *)&qword_25418B470, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
      v53 = swift_initStackObject();
      *(_OWORD *)(v53 + 16) = v61;
      *(_OWORD *)(v53 + 32) = v52;
      v54 = v76;
      *(_QWORD *)(v53 + 48) = v77;
      *(_QWORD *)(v53 + 56) = v54;
      *(_QWORD *)(v53 + 64) = v42;
      *(_QWORD *)(v53 + 72) = v44;
      sub_23181B784(v53, v5);
      sub_23181D454((uint64_t)v5, (uint64_t)v3);
      v19 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_2317EC928(0, v19[2] + 1, 1, v19);
      v15 = v60;
      v55 = v59;
      v57 = v19[2];
      v56 = v19[3];
      if (v57 >= v56 >> 1)
        v19 = sub_2317EC928((_QWORD *)(v56 > 1), v57 + 1, 1, v19);
      v82 = v75;
      v83 = sub_2317CC4AC(&qword_255F26058, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9D50);
      v84 = sub_2317CC4AC(&qword_255F26060, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9D10);
      v58 = sub_2317DBF6C((uint64_t *)&v81);
      sub_23181D454((uint64_t)v3, (uint64_t)v58);
      v19[2] = v57 + 1;
      sub_23181D498(&v81, &v19[6 * v57 + 4]);
      sub_23181D4B0((uint64_t)v3);

      sub_23181D4B0((uint64_t)v5);
    }
    while (v55 != v18);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_23181C81C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32[3];
  uint64_t v33;
  uint64_t v34;

  v2 = sub_2318D3564();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_2318D3588();
  v34 = MEMORY[0x24BE42BA0];
  sub_2317DBF6C(v32);
  sub_2318D3594();
  v6 = sub_2318D36F0();
  sub_2317D4B2C((uint64_t)v32);
  if (qword_25418B328 != -1)
    swift_once();
  v7 = sub_2318D2808();
  v9 = v8;
  v10 = sub_2318D33F0();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE42A98], v2);
  v33 = sub_2318D3F00();
  v34 = MEMORY[0x24BE45310];
  sub_2317DBF6C(v32);
  MEMORY[0x2348E4CC8](v7, v9, v5, v10);
  v11 = sub_2318D36F0();
  sub_2317D4B2C((uint64_t)v32);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v29 = v11;
    v30 = v6;
    swift_bridgeObjectRetain();
    v13 = (uint64_t *)(a1 + 72);
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    v31 = xmmword_2318D8680;
    do
    {
      v16 = *(v13 - 2);
      v17 = *v13;
      v18 = sub_2317D4B08(v13 - 5, v16);
      v33 = v16;
      v34 = v17;
      v19 = sub_2317DBF6C(v32);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v19, v18, v16);
      v20 = sub_2318D36F0();
      sub_2317D4B2C((uint64_t)v32);
      sub_2317D4194(0, (unint64_t *)&qword_255F256D8, (uint64_t (*)(uint64_t))sub_23181CE78, v15);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v31;
      *(_QWORD *)(v21 + 32) = v20;
      v22 = MEMORY[0x2348E44A0]();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_2317ECA60(0, v14[2] + 1, 1, v14);
      v24 = v14[2];
      v23 = v14[3];
      if (v24 >= v23 >> 1)
        v14 = sub_2317ECA60((_QWORD *)(v23 > 1), v24 + 1, 1, v14);
      v14[2] = v24 + 1;
      v14[v24 + 4] = v22;
      v13 += 6;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v11 = v29;
    v6 = v30;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v25 = MEMORY[0x2348E4494](v14);
  swift_bridgeObjectRelease();
  sub_2317D4194(0, (unint64_t *)&qword_255F256D8, (uint64_t (*)(uint64_t))sub_23181CE78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_2318D96D0;
  *(_QWORD *)(v26 + 32) = v6;
  *(_QWORD *)(v26 + 40) = v11;
  *(_QWORD *)(v26 + 48) = v25;
  v27 = MEMORY[0x2348E44A0]();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_23181CB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v5[16];
  _QWORD *v6;

  v0 = sub_2318D3F54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23181C0C8();
  sub_2318D33E4();
  sub_2318D3F48();
  swift_bridgeObjectRelease();
  sub_2318D348C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23181CC4C()
{
  return sub_2318D3384();
}

uint64_t sub_23181CC6C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2317CC4AC(qword_255F26070, type metadata accessor for MedicationsPDFProvider, (uint64_t)&unk_2318D9C90);
  *v1 = v0;
  v1[1] = sub_23181CCE8;
  return sub_2318D375C();
}

uint64_t sub_23181CCE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23181CD3C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_2318D33D8();
  v0 = (void *)sub_2318D33CC();
  v1 = objc_msgSend(v0, sel_CGColor);

  v8 = sub_2318D3810();
  v9 = MEMORY[0x24BE435A0];
  sub_2317DBF6C(v7);
  sub_2318D3804();
  v2 = sub_2318D36F0();
  sub_2317D4B2C((uint64_t)v7);
  v8 = sub_2318D3588();
  v9 = MEMORY[0x24BE42BA0];
  sub_2317DBF6C(v7);
  sub_2318D3594();
  v3 = sub_2318D36F0();
  sub_2317D4B2C((uint64_t)v7);
  sub_2317D4194(0, (unint64_t *)&qword_255F256D8, (uint64_t (*)(uint64_t))sub_23181CE78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2318D8510;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  v5 = MEMORY[0x2348E44A0]();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_23181CE78(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F256E0, (uint64_t (*)(uint64_t))sub_23181CE94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

unint64_t sub_23181CE94()
{
  unint64_t result;

  result = qword_255F256E8;
  if (!qword_255F256E8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F256E8);
  }
  return result;
}

uint64_t *sub_23181CEE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2318D3564();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_23181CF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2318D3564();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23181CFC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2318D3564();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_23181D038(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_23181D0AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23181D108(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_23181D174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23181D180(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2318D3564();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_23181D1FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23181D208(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2318D3564();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsPDFProvider(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26010);
}

uint64_t sub_23181D290()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D3564();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23181D308()
{
  return sub_2317CC4AC(&qword_255F26050, type metadata accessor for MedicationsPDFProvider, (uint64_t)&unk_2318D9C68);
}

uint64_t sub_23181D334()
{
  uint64_t v0;

  return sub_23181C81C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23181D33C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x2348E6EA0](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t type metadata accessor for MedicationPDFTextRow(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F260D0);
}

void sub_23181D40C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23181D454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationPDFTextRow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_23181D498(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_23181D4B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MedicationPDFTextRow(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23181D4EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F25990)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F25990);
  }
}

void **sub_23181D554(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2318D3564();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_2318D5BD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t sub_23181D624(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_2318D3564();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  v7 = sub_2318D5BD4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

void **sub_23181D698(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2318D3564();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2318D5BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **sub_23181D740(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2318D5BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_QWORD *sub_23181D7E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2318D5BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **sub_23181D87C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2318D3564();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2318D5BD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_23181D91C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23181D928(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2318D3564();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_2318D5BD4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_23181D9C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23181D9D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_2318D3564();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2318D5BD4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_23181DA70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2318D3564();
  if (v1 <= 0x3F)
  {
    result = sub_2318D5BD4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23181DB04()
{
  return sub_2317CC4AC(&qword_255F26118, type metadata accessor for MedicationPDFTextRow, (uint64_t)&unk_2318D9CE8);
}

uint64_t type metadata accessor for MedicationsNotificationSettingsViewController(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26128);
}

uint64_t sub_23181DB48()
{
  return swift_initClassMetadata2();
}

id sub_23181DB94()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id result;
  void *v10;
  id v11;

  sub_2318D2BF8();
  v1 = v0;
  v2 = sub_2318D2BEC();
  sub_2318D4584();
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B400);
  sub_2318D5A60();
  sub_2318D4524();
  swift_allocObject();
  v3 = sub_2318D44A0();
  type metadata accessor for MedicationsNotificationSettingsDataSource(0);
  v4 = swift_allocObject();
  *(_QWORD *)&v1[qword_255F26120] = sub_231821FDC(v3, v2, v4);

  swift_retain();
  v5 = (void *)sub_2318D3E64();
  v6 = qword_25418B328;
  v7 = v5;
  if (v6 != -1)
    swift_once();
  sub_2318D2808();
  v8 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v8, 0xE000000000000000);

  result = objc_msgSend(v7, sel_collectionView);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23181DDA8()
{
  sub_2318D6150();
  __break(1u);
}

void sub_23181DE00()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23181DE2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23181DE5C()
{
  return swift_release();
}

id sub_23181DE6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsNotificationSettingsViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23181DEA0()
{
  return swift_release();
}

uint64_t sub_23181DEB0()
{
  return type metadata accessor for MedicationsNotificationSettingsViewController(0);
}

uint64_t type metadata accessor for MedicationsNotificationSettingsDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F261A8);
}

uint64_t sub_23181DECC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23181DF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v1 = sub_2318D297C();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + qword_255F26180);
  v7 = *(unsigned __int8 *)(v0 + qword_255F26190);
  v8 = *(unsigned __int8 *)(v6 + qword_255F261F8);
  *(_BYTE *)(v6 + qword_255F261F8) = v7;
  if (v7 != v8)
  {
    v9 = type metadata accessor for MedicationsDoseRemindersItem();
    swift_allocObject();
    v10 = swift_retain();
    v11 = sub_23183D15C(v10, v7);
    swift_release();
    v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v13 = *(unsigned __int8 *)(*(_QWORD *)(sub_2318D3774() - 8) + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject();
    v17 = xmmword_2318D8680;
    *(_OWORD *)(v15 + 16) = xmmword_2318D8680;
    v18 = v15 + v14;
    sub_2317EE130(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], v12);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v17;
    *(_QWORD *)(v16 + 56) = v9;
    *(_QWORD *)(v16 + 64) = sub_2317CC4AC(&qword_255F264B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDoseRemindersItem, MEMORY[0x24BE43A08]);
    *(_QWORD *)(v16 + 32) = v11;
    swift_retain();
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    sub_2318D3768();
    sub_2318D37BC();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23181E16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  sub_2318167EC();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182386C(0, &qword_255F264D0, (void (*)(uint64_t))sub_231823C70, (void (*)(void))sub_231823CE4);
  v6 = v5;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - v7;
  sub_2317E06B8(v0 + qword_255F26198, (uint64_t)v17);
  v9 = v18;
  v10 = v19;
  sub_2317D4B08(v17, v18);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v15 = (id)sub_2318D5B80();
  v11 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_231823C70();
  sub_231823CE4();
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_2317CF774((uint64_t)v4, (uint64_t (*)(_QWORD))sub_2318167EC);

  swift_release();
  sub_2317D4B2C((uint64_t)v17);
  swift_allocObject();
  swift_weakInit();
  sub_231823D08();
  v12 = sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  *(_QWORD *)(v1 + qword_255F261A0) = v12;
  return swift_release();
}

uint64_t sub_23181E3B8(void **a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(v1, sel_authorizationStatus) == (id)1;
    *(_BYTE *)(v3 + qword_255F26190) = v4;
    sub_23181DF38();
    return swift_release();
  }
  return result;
}

uint64_t sub_23181E434()
{
  swift_retain();
  sub_23181E16C();
  return swift_release();
}

void sub_23181E45C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23181E488()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_2317D4B2C(v0 + qword_255F26198);
  return swift_release();
}

uint64_t sub_23181E4E4()
{
  uint64_t v0;

  v0 = sub_2318D3A5C();
  swift_release();
  swift_release();
  swift_release();
  sub_2317D4B2C(v0 + qword_255F26198);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23181E560()
{
  return type metadata accessor for MedicationsNotificationSettingsDataSource(0);
}

uint64_t type metadata accessor for MedicationsDoseRemindersDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26208);
}

uint64_t sub_23181E57C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23181E5D0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[2];

  v5 = sub_2318D297C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v2;
  *(_QWORD *)(v2 + qword_255F26200) = a1;
  *(_BYTE *)(v2 + qword_255F261F8) = a2;
  v9 = type metadata accessor for MedicationsDoseRemindersItem();
  swift_allocObject();
  v10 = swift_retain();
  v11 = sub_23183D15C(v10, a2);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2318D3774();
  v13 = swift_allocObject();
  v18 = xmmword_2318D8680;
  *(_OWORD *)(v13 + 16) = xmmword_2318D8680;
  sub_2317EE130(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], v12);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v18;
  *(_QWORD *)(v14 + 56) = v9;
  *(_QWORD *)(v14 + 64) = sub_2317CC4AC(&qword_255F264B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDoseRemindersItem, MEMORY[0x24BE43A08]);
  *(_QWORD *)(v14 + 32) = v11;
  swift_retain();
  sub_2318D2970();
  sub_2318D2958();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v8, v5);
  sub_2318D3768();
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v20, "MutableArray<");
  HIWORD(v20[1]) = -4864;
  sub_2318D2970();
  sub_2318D2958();
  v15(v8, v5);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v16 = sub_2318D37B0();
  swift_release();
  swift_release();
  return v16;
}

void sub_23181E86C()
{
  sub_231821B88();
}

uint64_t sub_23181E884()
{
  return swift_release();
}

uint64_t sub_23181E894()
{
  sub_2318D37D4();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23181E8D0()
{
  return type metadata accessor for MedicationsDoseRemindersDataSource(0);
}

uint64_t type metadata accessor for MedicationsFollowUpNotificationDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26290);
}

void sub_23181E8EC()
{
  unint64_t v0;

  sub_231821534(319);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_23181E9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_231821C44(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x24BE436A8]);
}

uint64_t sub_23181E9C8()
{
  MEMORY[0x2348E7734](&unk_2318DA070);
  return sub_2318D3EB8();
}

uint64_t sub_23181EA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v6 = sub_2318D297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D3C60();
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_255F263A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43880], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  if (sub_2318D55BC() == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v30 = v10;
  v18 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
LABEL_13:
    if (qword_25418B328 != -1)
      swift_once();
    sub_2318D2808();
    v26 = sub_2318D38E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 1, 1, v26);
    v27 = sub_2318D3900();
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43890];
    a3[3] = v27;
    a3[4] = sub_2317CC4AC(&qword_255F263B0, v28, MEMORY[0x24BE43878]);
    sub_2317DBF6C(a3);
    return sub_2318D38F4();
  }
  if (sub_2318D55BC() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease();
    v22 = v30;
  }
  else
  {
    v21 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    v22 = v30;
    if ((v21 & 1) == 0)
    {
      v23 = sub_2318D34D4();
      v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      a3[3] = v23;
      a3[4] = sub_2317CC4AC(&qword_255F25540, v24, MEMORY[0x24BE428F8]);
      sub_2317DBF6C(a3);
      return sub_2318D34C8();
    }
  }
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  *(_QWORD *)&v32 = 0x74497265746F6F46;
  *((_QWORD *)&v32 + 1) = 0xEB000000005F6D65;
  sub_2318D2970();
  sub_2318D2958();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D3C54();
  a3[3] = v22;
  a3[4] = sub_2317CC4AC(&qword_255F25548, (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8], MEMORY[0x24BE44688]);
  sub_2317DBF6C(a3);
  v29 = v31;
  (*(void (**)(void))(v31 + 16))();
  v32 = xmmword_2318D9D90;
  v33 = xmmword_2318D9DA0;
  v34 = 0;
  sub_2318D3C48();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v22);
}

uint64_t sub_23181EE58()
{
  void (*v0)(_BYTE *, _QWORD);
  _QWORD *v1;
  uint64_t (*v2)(_BYTE *, _QWORD);
  uint64_t v3;
  _BYTE v5[32];

  sub_2318D4BC0();
  v0 = (void (*)(_BYTE *, _QWORD))sub_2318D4B6C();
  *v1 = 0x4024000000000000;
  v0(v5, 0);
  v2 = (uint64_t (*)(_BYTE *, _QWORD))sub_2318D4B6C();
  *(_QWORD *)(v3 + 16) = 0x4020000000000000;
  return v2(v5, 0);
}

uint64_t sub_23181EEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_23181EA14(a1, a2, a3);
}

void sub_23181EED4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23181EEE4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_2317E6150(a1, (uint64_t)v4);
  if (!v4[3])
  {
    result = sub_2317E6194((uint64_t)v4);
    goto LABEL_5;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_5:
    *a2 = 2;
  return result;
}

unint64_t sub_23181EF54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  unint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD v55[2];
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v56 = a1;
  v8 = sub_2318D3774();
  v9 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  v63 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)v55 - v12;
  sub_231823AD4(0);
  v60 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v61 = (uint64_t)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v57 = (uint64_t)v55 - v17;
  v18 = sub_2318D297C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2318D44D0();
  v24 = a7[3];
  v23 = a7[4];
  sub_2317D4B08(a7, v24);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23);
  if ((v22 & 1) != 0 && (v25 & 1) != 0)
  {
    v26 = type metadata accessor for MedicationsFollowUpNotificationsItem();
    swift_allocObject();
    v27 = swift_retain();
    v28 = sub_23188CFAC(v27);
    swift_release();
    v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2317D4194(0, &qword_255F264A0, (uint64_t (*)(uint64_t))sub_231823AD4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v30 = *(_QWORD *)(v14 + 72);
    v31 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_2318D8510;
    v55[0] = v32;
    v33 = v32 + v31;
    sub_2317EE130(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], v29);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v34 + 56) = v26;
    *(_QWORD *)(v34 + 64) = sub_2317CC4AC(&qword_255F264A8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsFollowUpNotificationsItem, MEMORY[0x24BE43A08]);
    *(_QWORD *)(v34 + 32) = v28;
    v55[1] = v28;
    swift_retain();
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    sub_2318D3768();
    v35 = v62;
    v36 = v63;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v33, 0, 1, v62);
    v37 = v33 + v30;
    sub_2318D4584();
    sub_2318D4578();
    v38 = sub_2318D4560();
    swift_release();
    sub_23181F54C(v38, a7, v56, v33 + v30);
    swift_release();
    v39 = v57;
    sub_231823AF0(v33, v57);
    v40 = v61;
    sub_231823B34(v39, v61);
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    if (v41(v40, 1, v35) == 1)
    {
      sub_2317CF774(v40, (uint64_t (*)(_QWORD))sub_231823AD4);
      v42 = MEMORY[0x24BEE4AF8];
      v43 = v59;
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
      v45 = v58;
      v44(v58, v40, v35);
      v43 = v59;
      v44(v59, (uint64_t)v45, v35);
      v42 = MEMORY[0x24BEE4AF8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_2317ECB68(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
      v47 = *(_QWORD *)(v42 + 16);
      v46 = *(_QWORD *)(v42 + 24);
      if (v47 >= v46 >> 1)
        v42 = sub_2317ECB68(v46 > 1, v47 + 1, 1, v42);
      *(_QWORD *)(v42 + 16) = v47 + 1;
      v48 = v42
          + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
          + *(_QWORD *)(v36 + 72) * v47;
      v35 = v62;
      v44((char *)v48, (uint64_t)v43, v62);
      v40 = v61;
    }
    sub_231823AF0(v37, v39);
    sub_231823B34(v39, v40);
    if (v41(v40, 1, v35) == 1)
    {
      sub_2317CF774(v40, (uint64_t (*)(_QWORD))sub_231823AD4);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
      v50 = v40;
      v51 = v58;
      v49(v58, v50, v35);
      v49(v43, (uint64_t)v51, v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_2317ECB68(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
      v53 = *(_QWORD *)(v42 + 16);
      v52 = *(_QWORD *)(v42 + 24);
      if (v53 >= v52 >> 1)
        v42 = sub_2317ECB68(v52 > 1, v53 + 1, 1, v42);
      *(_QWORD *)(v42 + 16) = v53 + 1;
      v49((char *)(v42+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v53), (uint64_t)v43, v35);
    }
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  else
  {
    sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_2318D8680;
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    sub_2318D3768();
  }
  return v42;
}

uint64_t sub_23181F54C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v22 = a2;
  v23 = a4;
  v6 = sub_2318D297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D3918();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v20 < 1)
      goto LABEL_6;
  }
  else if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_6;
  }
  sub_2318D4584();
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B400);
  sub_2318D5A60();
  sub_2318D4524();
  swift_allocObject();
  sub_2318D44A0();
  v14 = sub_2318D44F4();
  swift_release();
  if ((v14 & 1) != 0)
  {
    sub_231820514(a1, v22, a3, (uint64_t)v13);
    sub_2317EE130(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v15 + 56) = v10;
    *(_QWORD *)(v15 + 64) = sub_2317CC4AC((unint64_t *)&qword_25418AA68, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], MEMORY[0x24BE438A8]);
    v16 = sub_2317DBF6C((uint64_t *)(v15 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
    sub_2318D2970();
    sub_2318D2958();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = v23;
    sub_2318D3768();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v18 = sub_2318D3774();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
LABEL_6:
  v21 = sub_2318D3774();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v23, 1, 1, v21);
}

uint64_t sub_23181F830()
{
  sub_2318D38DC();
  sub_2318D5AD8();
  sub_2318D396C();
  sub_2318D5AC0();
  sub_2318D3C90();
  sub_2318D5AC0();
  sub_2318D3C3C();
  sub_2318D5ACC();
  sub_2318D3360();
  return sub_2318D5ACC();
}

uint64_t sub_23181F8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t *v32;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v46 = a4;
  v7 = sub_2318D3DBC();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_255F26488, (uint64_t (*)(uint64_t))MEMORY[0x24BE426D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v39 - v10;
  v11 = sub_2318D297C();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D3C60();
  v45 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2318D55BC() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    if (sub_2318D2B74())
      goto LABEL_7;
LABEL_11:
    if (qword_25418B328 == -1)
      goto LABEL_22;
    goto LABEL_23;
  }
  v19 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0 && !sub_2318D2B74())
    goto LABEL_11;
LABEL_7:
  if (sub_2318D55BC() == a1 && v20 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
LABEL_20:
      v34 = sub_2318D34D4();
      v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      v36 = v46;
      v46[3] = v34;
      v36[4] = sub_2317CC4AC(&qword_255F25540, v35, MEMORY[0x24BE428F8]);
      sub_2317DBF6C(v36);
      return sub_2318D34C8();
    }
  }
  if (sub_2318D2B74() != 1)
    goto LABEL_20;
  v22 = a3[3];
  v23 = a3[4];
  sub_2317D4B08(a3, v22);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) & 1) != 0
    || (sub_2317CCC9C(0, (unint64_t *)&qword_25418B400),
        v24 = (void *)sub_2318D5A60(),
        v25 = objc_msgSend(v24, sel_hk_keyExists_, *MEMORY[0x24BE45C18]),
        v24,
        (v25 & 1) == 0))
  {
    if (qword_25418B328 == -1)
    {
LABEL_22:
      sub_2318D2808();
      *(_QWORD *)&v47 = 0x74497265746F6F46;
      *((_QWORD *)&v47 + 1) = 0xEB000000005F6D65;
      sub_2318D2970();
      sub_2318D2958();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v44);
      sub_2318D56A0();
      swift_bridgeObjectRelease();
      sub_2318D3C54();
      v37 = v46;
      v46[3] = v14;
      v37[4] = sub_2317CC4AC(&qword_255F25548, (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8], MEMORY[0x24BE44688]);
      sub_2317DBF6C(v37);
      v38 = v45;
      (*(void (**)(void))(v45 + 16))();
      v47 = xmmword_2318D9D90;
      v48 = xmmword_2318D9DA0;
      v49 = 0;
      sub_2318D3C48();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v14);
    }
LABEL_23:
    swift_once();
    goto LABEL_22;
  }
  if (qword_25418B328 != -1)
    swift_once();
  v26 = sub_2318D2808();
  v28 = v27;
  sub_2318D2808();
  *(_QWORD *)&v47 = v26;
  *((_QWORD *)&v47 + 1) = v28;
  sub_2318D56A0();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D5634();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v29 = sub_2318D3474();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v41, 1, 1, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v42, *MEMORY[0x24BE44C60], v40);
  v30 = sub_2318D3480();
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BE426E0];
  v32 = v46;
  v46[3] = v30;
  v32[4] = sub_2317CC4AC(&qword_255F26490, v31, MEMORY[0x24BE426C0]);
  sub_2317DBF6C(v32);
  return sub_2318D3468();
}

uint64_t sub_23181FF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  _QWORD v11[2];

  v0 = sub_2318D38AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v11 - v5;
  v7 = sub_2318D3A20();
  sub_2318D3864();
  if (v7 < 1)
  {
    sub_2318D3A14();
    v9 = sub_2318D38A0();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  else
  {
    sub_2318D384C();
    v8 = *(void (**)(char *, uint64_t))(v1 + 8);
    v8(v6, v0);
    sub_2318D3A14();
    v9 = sub_2318D38A0();
    swift_unknownObjectRelease();
    v8(v4, v0);
  }
  return v9;
}

void sub_231820034()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v1 = *v0;
  v2 = *(void (**)(uint64_t))((char *)v0 + qword_255F28610);
  if (v2)
  {
    v3 = swift_retain();
    v2(v3);
    sub_2317CD52C((uint64_t)v2);
  }
  sub_2318D4584();
  sub_2318D4578();
  v4 = (void *)sub_2318D456C();
  swift_release();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v7[4] = sub_231823C50;
  v7[5] = v5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2318204B4;
  v7[3] = &unk_25007E500;
  v6 = _Block_copy(v7);
  swift_release();
  objc_msgSend(v4, sel_rescheduleMedicationsWithCompletion_, v6);
  _Block_release(v6);

}

uint64_t sub_231820138(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_2318D4A1C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  if ((a1 & 1) != 0)
  {
    sub_2318D49E0();
    v13 = sub_2318D4A10();
    v14 = sub_2318D5A24();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v31 = v16;
      v32 = a3;
      *(_DWORD *)v15 = 136446210;
      swift_getMetatypeMetadata();
      v17 = sub_2318D55E0();
      v32 = sub_231851EBC(v17, v18, &v31);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v13, v14, "[%{public}s] Notification Setting changed, rescheduling medications ", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v16, -1, -1);
      MEMORY[0x2348E77E8](v15, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_2318D49E0();
    v20 = a2;
    v21 = a2;
    v22 = sub_2318D4A10();
    v23 = sub_2318D5A3C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v31 = v25;
      v32 = a3;
      *(_DWORD *)v24 = 136446466;
      swift_getMetatypeMetadata();
      v26 = sub_2318D55E0();
      v32 = sub_231851EBC(v26, v27, &v31);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      v32 = (uint64_t)a2;
      v28 = a2;
      sub_2317EE130(0, (unint64_t *)&qword_255F25468, (unint64_t *)&qword_25418B4A0, MEMORY[0x24BEE3EE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v29 = sub_2318D55E0();
      v32 = sub_231851EBC(v29, v30, &v31);
      sub_2318D5F70();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2317C8000, v22, v23, "[%{public}s] Failed to reschedule medications after notification setting change with error: %{public}s)", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v25, -1, -1);
      MEMORY[0x2348E77E8](v24, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_2318204B4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_231820514@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  void *v31;
  id v32;
  void (*v33)(uint64_t *, _QWORD);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _BYTE *v49;
  id v51;
  void (*v52)(uint64_t *, _QWORD);
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88[3];
  uint64_t v89;
  uint64_t v90;

  v75 = a1;
  v87 = a4;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_25418AE10, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v61 - v8;
  v9 = sub_2318D4A64();
  v73 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_2318D4A34();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_2318D4080();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317CD49C();
  MEMORY[0x24BDAC7A8](v13);
  v63 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_2318D3DBC();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v85 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], v6);
  MEMORY[0x24BDAC7A8](v16);
  v86 = (char *)&v61 - v17;
  v18 = sub_2318D3828();
  v76 = *(_QWORD *)(v18 - 8);
  v77 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v84 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2318D4B00();
  v78 = *(_QWORD *)(v20 - 8);
  v79 = v20;
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)&v67 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_2318D4BD8();
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = Array<A>.markedCritical.getter(a3);
  v25 = sub_2318634F4(v24);
  swift_bridgeObjectRelease();
  if ((v25 & 0xC000000000000001) != 0)
    v26 = sub_2318D6030();
  else
    v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease();
  v27 = a2[3];
  v28 = a2[4];
  sub_2317D4B08(a2, v27);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  v62 = v26;
  v30 = (v26 < 1) | v29;
  sub_2318D4BCC();
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  sub_2318D4BA8();
  v31 = (void *)objc_opt_self();
  v32 = objc_msgSend(v31, sel_secondaryLabelColor);
  v33 = (void (*)(uint64_t *, _QWORD))sub_2318D4B60();
  sub_2318D4B30();
  v33(v88, 0);
  if ((v30 & 1) != 0)
  {
    v34 = sub_2318D29AC();
    v35 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v63, 1, 1, v34);
    v36 = v64;
    sub_2318D4074();
    sub_2318D444C();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v66);
    sub_2317CF774(v35, (uint64_t (*)(_QWORD))sub_2317CD49C);
    v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2317EE130(0, (unint64_t *)&qword_25418B480, (unint64_t *)&qword_25418B4A8, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v38 = swift_allocObject();
    v67 = xmmword_2318D8680;
    v39 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v38 + 16) = xmmword_2318D8680;
    v40 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v38 + 56) = v39;
    *(_QWORD *)(v38 + 64) = v40;
    *(_QWORD *)(v38 + 32) = v62;
    sub_2318D55D4();
    swift_bridgeObjectRelease();
    sub_2318D4B18();
    v41 = v83;
    v89 = v83;
    v90 = MEMORY[0x24BEBC5F0];
    v42 = sub_2317DBF6C(v88);
    v43 = v81;
    (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v42, v23, v41);
    sub_2317D4194(0, &qword_25418B178, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], v37);
    sub_2318D4A70();
    *(_OWORD *)(swift_allocObject() + 16) = v67;
    v44 = v69;
    v45 = v68;
    v46 = v70;
    (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, *MEMORY[0x24BEBC058], v70);
    v47 = sub_2318D4A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v72, 1, 1, v47);
    v48 = v71;
    sub_2318D4A58();
    sub_2318D4A4C();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v74);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    v49 = v84;
    *v84 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v76 + 104))(v49, *MEMORY[0x24BE435F8], v77);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v86, 1, 1, v79);
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v85, *MEMORY[0x24BE44C60], v82);
    swift_retain();
    sub_2318D390C();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v23, v41);
  }
  else
  {
    sub_2318D2808();
    sub_2318D4B18();
    v51 = objc_msgSend(v31, sel_secondaryLabelColor);
    v52 = (void (*)(uint64_t *, _QWORD))sub_2318D4B54();
    sub_2318D4B30();
    v52(v88, 0);
    v53 = v67;
    sub_2318D4AF4();
    v54 = objc_msgSend(v31, sel_quaternarySystemFillColor);
    sub_2318D4AC4();
    v55 = v83;
    v89 = v83;
    v90 = MEMORY[0x24BEBC5F0];
    v56 = sub_2317DBF6C(v88);
    v57 = v81;
    (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v56, v23, v55);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v76 + 104))(v84, *MEMORY[0x24BE43600], v77);
    v59 = v78;
    v58 = v79;
    v60 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v86, v53, v79);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v85, *MEMORY[0x24BE44C60], v82);
    sub_2318D390C();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v53, v58);
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v23, v55);
  }
}

uint64_t sub_231820EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  id v14;
  uint64_t v15;
  _QWORD v17[6];
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;

  sub_2318167EC();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182386C(0, &qword_255F264C0, (void (*)(uint64_t))sub_2317E6014, (void (*)(void))sub_23182342C);
  v5 = v4;
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - v6;
  v8 = *(id *)(v0 + qword_255F26258);
  v9 = sub_2318D32DC();

  v20 = v9;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v21 = (id)sub_2318D5B80();
  v10 = sub_2318D5B50();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v19(v3, 1, 1, v10);
  sub_2317E6014();
  v17[5] = v11;
  v17[4] = sub_23182342C();
  v17[3] = sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_2317CF774((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2318167EC);

  swift_release();
  swift_allocObject();
  v12 = v17[1];
  swift_weakInit();
  v17[2] = sub_231823BD8();
  sub_2318D4FF8();
  swift_release();
  v13 = *(void (**)(char *, uint64_t))(v18 + 8);
  v13(v7, v5);
  swift_beginAccess();
  sub_2318D4DA0();
  swift_endAccess();
  swift_release();
  v14 = *(id *)(v12 + qword_255F26268);
  v15 = sub_2318D32DC();

  v20 = v15;
  v21 = (id)sub_2318D5B80();
  v19(v3, 1, 1, v10);
  sub_2318D4FBC();
  sub_2317CF774((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2318167EC);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2318D4FF8();
  swift_release();
  v13(v7, v5);
  swift_beginAccess();
  sub_2318D4DA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_231821234(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    sub_2317E6150(a1, (uint64_t)v5);
    if (v6)
    {
      if ((swift_dynamicCast() & 1) != 0 && v4 != *(_BYTE *)(v3 + qword_255F26280))
      {
        *(_BYTE *)(v3 + qword_255F26280) = v4;
        sub_231820034();
      }
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_2317E6194((uint64_t)v5);
    }
  }
  return result;
}

uint64_t sub_2318212F8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_231820034();
    return swift_release();
  }
  return result;
}

void sub_23182134C()
{
  sub_231821358();
}

void sub_231821358()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231821384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_2317D4B2C(v0 + qword_255F26278);
  v1 = v0 + qword_255F28600;
  sub_231821534(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2317CD52C(*(_QWORD *)(v0 + qword_255F28610));
}

uint64_t sub_231821444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2318D36C0();

  swift_release();
  sub_2317D4B2C(v0 + qword_255F26278);
  v1 = v0 + qword_255F28600;
  sub_231821534(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2317CD52C(*(_QWORD *)(v0 + qword_255F28610));
  return v0;
}

uint64_t sub_231821514()
{
  sub_231821444();
  return swift_deallocClassInstance();
}

void sub_231821534(uint64_t a1)
{
  sub_2318233B4(a1, qword_255F262C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], sub_231821558, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x24BDB96B0]);
}

uint64_t sub_231821558()
{
  return sub_2317CC4AC(&qword_25418B068, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
}

uint64_t sub_231821574()
{
  return type metadata accessor for MedicationsFollowUpNotificationDataSource(0);
}

uint64_t type metadata accessor for MedicationsTimeZoneDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F262E8);
}

uint64_t sub_231821590()
{
  return swift_initClassMetadata2();
}

void sub_2318215CC(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_allocWithZone((Class)type metadata accessor for CriticalMedicationsListViewController(0));
  v3 = swift_retain();
  v6 = sub_23180A74C(v3);
  v4 = objc_msgSend(a1, sel_navigationController);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);

  }
}

uint64_t sub_231821658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  v15 = a1;
  v2 = sub_2318D297C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MedicationsTimeZoneItem();
  swift_allocObject();
  v7 = sub_2317D4CC4(a1);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2318D3774();
  v9 = swift_allocObject();
  v14 = xmmword_2318D8680;
  *(_OWORD *)(v9 + 16) = xmmword_2318D8680;
  sub_2317EE130(0, (unint64_t *)&qword_25418B160, (unint64_t *)&qword_25418AA40, MEMORY[0x24BE41798], v8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v14;
  *(_QWORD *)(v10 + 56) = v6;
  *(_QWORD *)(v10 + 64) = sub_2317CC4AC(&qword_255F263C0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsTimeZoneItem, MEMORY[0x24BE43A08]);
  *(_QWORD *)(v10 + 32) = v7;
  swift_retain();
  sub_2318D2970();
  sub_2318D2958();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  sub_2318D3768();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_2318D2970();
  sub_2318D2958();
  v11(v5, v2);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v12 = sub_2318D37B0();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_2318218D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v6 = sub_2318D297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D3C60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2318D55BC() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_2318D34D4();
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      a3[3] = v17;
      a3[4] = sub_2317CC4AC(&qword_255F25540, v18, MEMORY[0x24BE428F8]);
      sub_2317DBF6C(a3);
      return sub_2318D34C8();
    }
  }
  v22 = v11;
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  *(_QWORD *)&v23 = 0x74497265746F6F46;
  *((_QWORD *)&v23 + 1) = 0xEB000000005F6D65;
  sub_2318D2970();
  sub_2318D2958();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D3C54();
  a3[3] = v10;
  a3[4] = sub_2317CC4AC(&qword_255F25548, (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8], MEMORY[0x24BE44688]);
  sub_2317DBF6C(a3);
  v20 = v22;
  (*(void (**)(void))(v22 + 16))();
  v23 = xmmword_2318D9D90;
  v24 = xmmword_2318D9DA0;
  v25 = 0;
  sub_2318D3C48();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v10);
}

void sub_231821B70()
{
  sub_231821B88();
}

void sub_231821B88()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231821BB0()
{
  sub_2318D37D4();
  return swift_deallocClassInstance();
}

uint64_t sub_231821BCC()
{
  return type metadata accessor for MedicationsTimeZoneDataSource(0);
}

uint64_t sub_231821BD4()
{
  sub_2318D38DC();
  sub_2318D5AD8();
  sub_2318D396C();
  sub_2318D5AC0();
  sub_2318D3C3C();
  return sub_2318D5ACC();
}

uint64_t sub_231821C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_231821C44(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x24BE436B8]);
}

uint64_t sub_231821C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v6 = sub_2318D38AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v17 - v12;
  a5(v11);
  sub_2318D384C();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v13, v6);
  v15 = sub_2318D38A0();
  v14(v10, v6);
  return v15;
}

uint64_t sub_231821D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2318218D0(a1, a2, a3);
}

uint64_t sub_231821D20()
{
  MEMORY[0x2348E7734](&unk_2318D9FC0);
  return sub_2318D3EB8();
}

void sub_231821D6C()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2317CCC9C(0, &qword_255F264B8);
  sub_2317CCC9C(0, &qword_255F256D0);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2318D5E8C();
  v3 = (id)sub_2318D5A90();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_231823BA4, v2);

}

void sub_231821E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x2348E78A8](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void sub_231821EF8(void *a1)
{
  id v1;

  v1 = a1;
  sub_231821D6C();

}

void sub_231821F2C(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

}

uint64_t sub_231821F84()
{
  return sub_2317CC4AC(&qword_255F26398, type metadata accessor for MedicationsTimeZoneDataSource, (uint64_t)&unk_2318D9F68);
}

uint64_t sub_231821FB0()
{
  return sub_2317CC4AC(&qword_255F263A0, type metadata accessor for MedicationsDoseRemindersDataSource, (uint64_t)&unk_2318DA040);
}

uint64_t sub_231821FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v20[5];

  v20[3] = sub_2318D2BF8();
  v20[4] = &protocol witness table for HealthAppNotificationManager;
  *(_BYTE *)(a3 + qword_255F26190) = 0;
  v20[0] = a2;
  *(_QWORD *)(a3 + qword_255F261A0) = 0;
  *(_QWORD *)(a3 + qword_255F26178) = a1;
  sub_2317E06B8((uint64_t)v20, a3 + qword_255F26198);
  type metadata accessor for MedicationsDoseRemindersDataSource(0);
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  v6 = sub_23181E5D0(a1, 0);
  v7 = qword_255F26180;
  *(_QWORD *)(a3 + qword_255F26180) = v6;
  type metadata accessor for MedicationsFollowUpNotificationDataSource(0);
  v8 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  v9 = sub_23182222C(a1, a2, v8);
  v10 = qword_255F26188;
  *(_QWORD *)(a3 + qword_255F26188) = v9;
  swift_release();
  type metadata accessor for MedicationsTimeZoneDataSource(0);
  swift_allocObject();
  v11 = swift_retain();
  v12 = sub_231821658(v11);
  sub_2317EDD94();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2318D96D0;
  v14 = MEMORY[0x24BE43520];
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(a3 + v7);
  *(_QWORD *)(v13 + 40) = v14;
  v15 = *(_QWORD *)(a3 + v10);
  v16 = sub_2317CC4AC(&qword_255F263B8, type metadata accessor for MedicationsFollowUpNotificationDataSource, MEMORY[0x24BE43020]);
  *(_QWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 56) = v16;
  *(_QWORD *)(v13 + 64) = v12;
  *(_QWORD *)(v13 + 72) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  v17 = sub_2318D3A68();
  swift_retain();
  sub_23181E16C();
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v18, sel_addObserver_selector_name_object_, v17, sel_fetchNotificationAuthorizationStatus, *MEMORY[0x24BEBE008], 0);
  swift_release();
  swift_release();

  swift_release();
  sub_2317D4B2C((uint64_t)v20);
  return v17;
}

uint64_t sub_23182222C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  objc_class *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  _QWORD v100[4];
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  __int128 v138;
  _QWORD v139[5];

  v132 = *a3;
  sub_2318167EC();
  MEMORY[0x24BDAC7A8](v6);
  v134 = (char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318231B8(0);
  MEMORY[0x24BDAC7A8](v8);
  v122 = (char *)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_2318D5F58();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v119 = (char *)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318232E4(0, &qword_255F263C8, sub_231821534, (void (*)(void))sub_2318232C8);
  v115 = v11;
  v116 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v109 = (char *)v100 - v12;
  sub_2318232E4(0, &qword_255F263F8, sub_231823390, (void (*)(void))sub_231823448);
  v111 = v13;
  v113 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v107 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v105 = (char *)v100 - v16;
  sub_23180DB28();
  v103 = v17;
  v104 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231823464();
  v112 = v19;
  v114 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v108 = (char *)v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231823628();
  v118 = v21;
  v120 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v110 = (char *)v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318236E4();
  v123 = v23;
  v124 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v117 = (char *)v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318237C0();
  v128 = v25;
  v131 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v121 = (char *)v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182386C(0, &qword_255F26460, v27, (void (*)(void))sub_231823930);
  v29 = *(_QWORD *)(v28 - 8);
  v129 = v28;
  v130 = v29;
  MEMORY[0x24BDAC7A8](v28);
  v125 = (char *)v100 - v30;
  sub_231823390(0);
  v135 = v31;
  v133 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v137 = (char *)v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v136 = (char *)v100 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v100 - v36;
  v38 = sub_2318D5C10();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v100 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139[3] = sub_2318D2BF8();
  v139[4] = &protocol witness table for HealthAppNotificationManager;
  v139[0] = a2;
  v100[2] = (char *)a3 + qword_255F28600;
  v42 = (void *)objc_opt_self();
  swift_retain();
  v43 = objc_msgSend(v42, sel_defaultCenter);
  sub_2318D5C1C();

  sub_231821558();
  sub_2318D4F44();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  v44 = qword_255F28608;
  v100[0] = qword_255F28608;
  v100[1] = sub_2318D4584();
  sub_2318D4578();
  v45 = sub_2318D4560();
  swift_release();
  *(_QWORD *)((char *)a3 + v44) = v45;
  *(_QWORD *)((char *)a3 + qword_255F26288) = MEMORY[0x24BEE4B08];
  v46 = (_QWORD *)((char *)a3 + qword_255F28610);
  *v46 = 0;
  v46[1] = 0;
  v106 = a1;
  *(_QWORD *)((char *)a3 + qword_255F26270) = a1;
  swift_retain();
  *((_BYTE *)a3 + qword_255F26280) = sub_2318D44F4() & 1;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B400);
  sub_2318D5A60();
  sub_2318D5A6C();
  v47 = (objc_class *)sub_2318D32E8();
  v48 = objc_allocWithZone(v47);
  v49 = sub_2318D32D0();
  v50 = qword_255F26260;
  *(_QWORD *)((char *)a3 + qword_255F26260) = v49;
  sub_2318D5A60();
  sub_2318D5A78();
  v51 = objc_allocWithZone(v47);
  v52 = sub_2318D32D0();
  v53 = qword_255F26258;
  *(_QWORD *)((char *)a3 + qword_255F26258) = v52;
  sub_2318D5A60();
  sub_2318D55BC();
  v54 = objc_allocWithZone(v47);
  v55 = sub_2318D32D0();
  v56 = qword_255F26268;
  *(_QWORD *)((char *)a3 + qword_255F26268) = v55;
  sub_2317E06B8((uint64_t)v139, (uint64_t)a3 + qword_255F26278);
  v57 = *(id *)((char *)a3 + v50);
  v58 = sub_2318D32DC();

  *(_QWORD *)&v138 = v58;
  sub_2317E6014();
  sub_23182342C();
  v102 = v37;
  sub_2318D4F14();
  swift_release();
  v59 = *(id *)((char *)a3 + v53);
  v60 = sub_2318D32DC();

  *(_QWORD *)&v138 = v60;
  sub_2318D4F14();
  swift_release();
  v61 = *(id *)((char *)a3 + v56);
  v62 = sub_2318D32DC();

  *(_QWORD *)&v138 = v62;
  sub_2318D4F14();
  swift_release();
  v100[3] = a3;
  *(_QWORD *)&v138 = sub_2318D4914();
  v63 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
  sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
  sub_23180DBD0();
  sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v63);
  v64 = v101;
  sub_2318D4F14();
  swift_release();
  sub_2318D4578();
  v65 = (void *)sub_2318D456C();
  swift_release();
  sub_2317CC4AC((unint64_t *)&qword_255F25B50, (uint64_t (*)(uint64_t))sub_23180DB28, MEMORY[0x24BDB94C8]);
  v66 = v103;
  v67 = sub_2318D4EFC();

  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v66);
  *(_QWORD *)&v138 = v67;
  sub_231823448();
  v68 = v105;
  sub_2318D4FA4();
  v69 = v107;
  sub_2318D4FA4();
  sub_231821534(0);
  sub_2318232C8();
  v70 = v109;
  sub_2318D4FA4();
  swift_release();
  sub_23180DD24(0, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
  sub_23180DD80(&qword_255F25B48, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
  sub_231823568();
  sub_2318235C8();
  v71 = v108;
  v72 = v68;
  v73 = v69;
  v74 = v111;
  v75 = v115;
  sub_2318D4F2C();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v70, v75);
  v76 = *(void (**)(char *, uint64_t))(v113 + 8);
  v76(v73, v74);
  v76(v72, v74);
  swift_release();
  v77 = v72;
  v78 = v135;
  v79 = v137;
  sub_2318D4FA4();
  sub_2317CC4AC(&qword_255F26430, (uint64_t (*)(uint64_t))sub_231823464, MEMORY[0x24BDB9490]);
  v80 = v110;
  v81 = v112;
  sub_2318D4F38();
  v76(v77, v74);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v81);
  v82 = v119;
  sub_2318D5F4C();
  *(_QWORD *)&v138 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v83 = sub_2318D5F40();
  v84 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v122, 1, 1, v83);
  sub_2317CCC9C(0, &qword_25418B110);
  sub_2317CC4AC(&qword_255F26440, (uint64_t (*)(uint64_t))sub_231823628, MEMORY[0x24BDB9450]);
  sub_23180DDC0(&qword_25418B108, &qword_25418B110, 0x24BDBCF18, MEMORY[0x24BDD0408]);
  v85 = v117;
  v86 = v118;
  sub_2318D4FC8();
  sub_2317CF774(v84, (uint64_t (*)(_QWORD))sub_2318231B8);

  (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v127);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v80, v86);
  sub_2317E06B8((uint64_t)v139, (uint64_t)&v138);
  v87 = swift_allocObject();
  *(_QWORD *)(v87 + 16) = v106;
  sub_2317D4AF0(&v138, v87 + 24);
  *(_QWORD *)(v87 + 64) = v132;
  v88 = swift_allocObject();
  *(_QWORD *)(v88 + 16) = sub_231823978;
  *(_QWORD *)(v88 + 24) = v87;
  sub_2317D4194(0, &qword_255F26450, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2317CC4AC(&qword_255F26458, (uint64_t (*)(uint64_t))sub_2318236E4, MEMORY[0x24BDB9920]);
  swift_retain();
  v89 = v121;
  v90 = v123;
  sub_2318D4F14();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v85, v90);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  *(_QWORD *)&v138 = sub_2318D5B80();
  v91 = sub_2318D5B50();
  v92 = (uint64_t)v134;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v134, 1, 1, v91);
  sub_231823930();
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v93 = v125;
  v94 = v128;
  sub_2318D4FBC();
  sub_2317CF774(v92, (uint64_t (*)(_QWORD))sub_2318167EC);

  (*(void (**)(char *, uint64_t))(v131 + 8))(v89, v94);
  sub_2318239EC();
  v95 = v129;
  sub_2318D4EC0();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v93, v95);
  sub_2318D3B40();
  sub_2318D35E8();
  swift_release();
  sub_2317E06B8((uint64_t)v139, (uint64_t)&v138);
  v96 = swift_allocObject();
  sub_2317D4AF0(&v138, v96 + 16);
  sub_231823A78();
  sub_2317CC4AC(&qword_255F26480, (uint64_t (*)(uint64_t))sub_231823A78, MEMORY[0x24BE428C8]);
  sub_2318D35F4();
  swift_release();
  swift_release();
  swift_retain();
  v97 = sub_2318D36B4();
  swift_retain();
  sub_231820EBC();
  swift_release();
  swift_release();
  swift_release();
  sub_2317D4B2C((uint64_t)v139);
  v98 = *(void (**)(char *, uint64_t))(v133 + 8);
  v98(v79, v78);
  v98(v136, v78);
  v98(v102, v78);
  return v97;
}

void sub_2318231B8(uint64_t a1)
{
  sub_2317D4194(a1, &qword_25418B100, (uint64_t (*)(uint64_t))MEMORY[0x24BDD03C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2318231D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F263D0)
  {
    sub_2317CDA94(255, &qword_255F263D8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231823268();
    v0 = sub_2318D4D58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F263D0);
  }
}

unint64_t sub_231823268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F263E0;
  if (!qword_255F263E0)
  {
    sub_2317CDA94(255, &qword_255F263D8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255F263E0);
  }
  return result;
}

uint64_t sub_2318232C8()
{
  return sub_2317CC4AC(&qword_255F263F0, (uint64_t (*)(uint64_t))sub_231821534, MEMORY[0x24BDB96C0]);
}

void sub_2318232E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2318231D4();
    a3(255);
    sub_2317CC4AC(&qword_255F263E8, (uint64_t (*)(uint64_t))sub_2318231D4, MEMORY[0x24BDB9970]);
    a4();
    v7 = sub_2318D4CB0();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_231823390(uint64_t a1)
{
  sub_2318233B4(a1, &qword_255F26400, (uint64_t (*)(uint64_t))sub_2317E6014, sub_23182342C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x24BDB94B8]);
}

void sub_2318233B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, MEMORY[0x24BEE1328], v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_23182342C()
{
  return sub_2317CC4AC(&qword_254189C00, (uint64_t (*)(uint64_t))sub_2317E6014, MEMORY[0x24BDB9CB0]);
}

uint64_t sub_231823448()
{
  return sub_2317CC4AC(&qword_255F26408, (uint64_t (*)(uint64_t))sub_231823390, MEMORY[0x24BDB94C8]);
}

void sub_231823464()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26410)
  {
    sub_23180DD24(255, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
    sub_2318232E4(255, &qword_255F263F8, sub_231823390, (void (*)(void))sub_231823448);
    sub_2318232E4(255, &qword_255F263C8, sub_231821534, (void (*)(void))sub_2318232C8);
    sub_23180DD80(&qword_255F25B48, &qword_255F25B40, (void (*)(uint64_t))sub_23180DBD0);
    sub_231823568();
    sub_2318235C8();
    v0 = sub_2318D4C98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26410);
  }
}

unint64_t sub_231823568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26418;
  if (!qword_255F26418)
  {
    sub_2318232E4(255, &qword_255F263F8, sub_231823390, (void (*)(void))sub_231823448);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9530], v1);
    atomic_store(result, (unint64_t *)&qword_255F26418);
  }
  return result;
}

unint64_t sub_2318235C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26420;
  if (!qword_255F26420)
  {
    sub_2318232E4(255, &qword_255F263C8, sub_231821534, (void (*)(void))sub_2318232C8);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9530], v1);
    atomic_store(result, (unint64_t *)&qword_255F26420);
  }
  return result;
}

void sub_231823628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26428)
  {
    sub_231823464();
    sub_2318232E4(255, &qword_255F263F8, sub_231823390, (void (*)(void))sub_231823448);
    sub_2317CC4AC(&qword_255F26430, (uint64_t (*)(uint64_t))sub_231823464, MEMORY[0x24BDB9490]);
    sub_231823568();
    v0 = sub_2318D4C68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26428);
  }
}

void sub_2318236E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26438)
  {
    sub_231823628();
    sub_2317CCC9C(255, &qword_25418B110);
    sub_2317CC4AC(&qword_255F26440, (uint64_t (*)(uint64_t))sub_231823628, MEMORY[0x24BDB9450]);
    sub_23180DDC0(&qword_25418B108, &qword_25418B110, 0x24BDBCF18, MEMORY[0x24BDD0408]);
    v0 = sub_2318D4D40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26438);
  }
}

void sub_2318237C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26448)
  {
    sub_2318236E4();
    sub_2317D4194(255, &qword_255F26450, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317CC4AC(&qword_255F26458, (uint64_t (*)(uint64_t))sub_2318236E4, MEMORY[0x24BDB9920]);
    v0 = sub_2318D4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26448);
  }
}

void sub_23182386C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    a4();
    sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    v6 = sub_2318D4D7C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_231823930()
{
  return sub_2317CC4AC(&qword_255F26468, (uint64_t (*)(uint64_t))sub_2318237C0, MEMORY[0x24BDB94C8]);
}

uint64_t sub_23182394C()
{
  uint64_t v0;

  swift_release();
  sub_2317D4B2C(v0 + 24);
  return swift_deallocObject();
}

unint64_t sub_231823978(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23181EF54(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), (_QWORD *)(v5 + 24));
}

uint64_t sub_231823988()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2318239AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned __int8 *)(a1 + 9), *(unsigned __int8 *)(a1 + 10), *(unsigned __int8 *)(a1 + 11));
  *a2 = result;
  return result;
}

unint64_t sub_2318239EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26470;
  if (!qword_255F26470)
  {
    sub_23182386C(255, &qword_255F26460, (void (*)(uint64_t))sub_2318237C0, (void (*)(void))sub_231823930);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255F26470);
  }
  return result;
}

uint64_t sub_231823A4C()
{
  uint64_t v0;

  sub_2317D4B2C(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_231823A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23181F8C4(a1, a2, (_QWORD *)(v3 + 16), a3);
}

void sub_231823A78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26478)
  {
    sub_2318D3B40();
    v0 = sub_2318D34BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26478);
  }
}

void sub_231823AD4(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F26498, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_231823AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231823AD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231823B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231823AD4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_231823B78(void *a1)
{
  sub_2318215CC(a1);
}

uint64_t sub_231823B80()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_231823BA4(uint64_t a1)
{
  uint64_t v1;

  sub_231821E98(a1, v1);
}

uint64_t sub_231823BAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231823BD0(uint64_t a1)
{
  return sub_231821234(a1);
}

unint64_t sub_231823BD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F264C8;
  if (!qword_255F264C8)
  {
    sub_23182386C(255, &qword_255F264C0, (void (*)(uint64_t))sub_2317E6014, (void (*)(void))sub_23182342C);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255F264C8);
  }
  return result;
}

uint64_t sub_231823C38()
{
  return sub_2318212F8();
}

uint64_t sub_231823C40()
{
  return swift_deallocObject();
}

uint64_t sub_231823C50(char a1, void *a2)
{
  uint64_t v2;

  return sub_231820138(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_231823C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231823C68()
{
  return swift_release();
}

void sub_231823C70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F264D8)
  {
    sub_2317CCC9C(255, &qword_255F264E0);
    v0 = sub_2318D4E24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F264D8);
  }
}

uint64_t sub_231823CE4()
{
  return sub_2317CC4AC(&qword_255F264E8, (uint64_t (*)(uint64_t))sub_231823C70, MEMORY[0x24BDB9E58]);
}

uint64_t sub_231823D00(void **a1)
{
  return sub_23181E3B8(a1);
}

unint64_t sub_231823D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F264F0;
  if (!qword_255F264F0)
  {
    sub_23182386C(255, &qword_255F264D0, (void (*)(uint64_t))sub_231823C70, (void (*)(void))sub_231823CE4);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255F264F0);
  }
  return result;
}

uint64_t type metadata accessor for MedicationCategoryListElementObserverDataSource()
{
  uint64_t result;

  result = qword_25418ADA8;
  if (!qword_25418ADA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231823DA8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231823E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  void (*v8)(_BYTE *, _QWORD);
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t);
  _BYTE v13[32];

  v0 = sub_2318D38AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v13[-v5];
  sub_2318D3864();
  v7 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  sub_2318D3870();
  v8 = (void (*)(_BYTE *, _QWORD))sub_2318D3894();
  *v9 = 0xC024000000000000;
  v8(v13, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v10 = sub_2318D38A0();
  v11 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v10;
}

uint64_t sub_231823F1C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  id v11;

  sub_2318167EC();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318243AC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = sub_2318D4914();
  sub_231815604();
  v11 = (id)sub_2318D5B80();
  v8 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_2317E9834();
  sub_2317CC4AC(&qword_25418B388, (uint64_t (*)(uint64_t))sub_2317E9834, MEMORY[0x24BDB9AF8]);
  sub_2317CC4AC((unint64_t *)&qword_25418B410, (uint64_t (*)(uint64_t))sub_231815604, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_2317EA18C((uint64_t)v2);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2317CC4AC((unint64_t *)&qword_25418AED0, (uint64_t (*)(uint64_t))sub_2318243AC, MEMORY[0x24BDB9A08]);
  sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_2318D4DA0();
  swift_endAccess();
  return swift_release();
}

_QWORD *sub_231824154()
{
  _QWORD *result;
  void (*v1)(uint64_t);
  uint64_t v2;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v1 = *(void (**)(uint64_t))(qword_25418FC28 + *result + 64);
    v2 = swift_retain();
    v1(v2);
    swift_release();
    sub_2318D37BC();
    swift_release();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2318241F8()
{
  sub_2318D60C0();
  sub_2318D56A0();
  sub_2318D56A0();
  sub_2318D6150();
  __break(1u);
}

void sub_2318242A0()
{
  sub_2318242D0();
}

void sub_2318242B8()
{
  sub_2318242D0();
}

void sub_2318242D0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2318242F8()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_231824324()
{
  sub_2318D3CB4();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231824370()
{
  return type metadata accessor for MedicationCategoryListElementObserverDataSource();
}

uint64_t sub_231824378()
{
  sub_2318D3EA0();
  return sub_2318D5AC0();
}

void sub_2318243AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AED8)
  {
    sub_2317E9834();
    sub_231815604();
    sub_2317CC4AC(&qword_25418B388, (uint64_t (*)(uint64_t))sub_2317E9834, MEMORY[0x24BDB9AF8]);
    sub_2317CC4AC((unint64_t *)&qword_25418B410, (uint64_t (*)(uint64_t))sub_231815604, MEMORY[0x24BEE5670]);
    v0 = sub_2318D4D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AED8);
  }
}

uint64_t sub_231824474()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_231824498()
{
  return sub_231824154();
}

_QWORD *sub_2318244A0(void (*a1)(__int128 *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _QWORD *v14;
  __int128 v17;
  __int128 v18;
  id v19;

  if (a3 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_2318D6174())
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    for (i = 4; ; ++i)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348E6E94](i - 4, a3) : *(id *)(a3 + 8 * i);
      v9 = v8;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v19 = v8;
      a1(&v18, &v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      if ((_QWORD)v18)
      {
        v17 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_2317EC0C4(0, v6[2] + 1, 1, v6);
        v12 = v6[2];
        v11 = v6[3];
        v13 = v17;
        if (v12 >= v11 >> 1)
        {
          v14 = sub_2317EC0C4((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
          v13 = v17;
          v6 = v14;
        }
        v6[2] = v12 + 1;
        *(_OWORD *)&v6[2 * v12 + 4] = v13;
      }
      if (v10 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_231824668(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x24BEE4AF8];
  v10 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      v8 = a1(&v9, v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x2348E6528](v8);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2318D57B4();
        sub_2318D57D8();
        sub_2318D57A8();
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

unint64_t sub_231824780(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v34[2];
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23182850C(0, &qword_255F266E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v34 - v8;
  v43 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v46 = *(_QWORD *)(v43 - 8);
  v10 = MEMORY[0x24BDAC7A8](v43);
  v42 = (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)v34 - v12;
  v45 = sub_2318D294C();
  v13 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182850C(0, (unint64_t *)&qword_25418B300, 255, v16, v6);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v34 - v18;
  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v41 = v9;
    v21 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v39 = *(_QWORD *)(v13 + 72);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v34[1] = a3;
    swift_bridgeObjectRetain();
    v47 = MEMORY[0x24BEE4AF8];
    v35 = a1;
    v36 = a2;
    v22 = v45;
    v40 = v15;
    while (1)
    {
      v44(v19, v21, v22);
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v38(v19, 0, 1, v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 1, v22) == 1)
        break;
      v48 = v21;
      v24 = v19;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v19, v22);
      v25 = (uint64_t)v41;
      v26 = v49;
      a1(v15);
      if (v26)
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v47;
      }
      v49 = 0;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v25, 1, v43) == 1)
      {
        sub_23182FEC8(v25, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
        v19 = v24;
        v22 = v45;
        v23 = v48;
      }
      else
      {
        v27 = v37;
        sub_2317D40A8(v25, v37, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        sub_2317D40A8(v27, v42, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v47 = sub_2317ECB90(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
        v19 = v24;
        v23 = v48;
        v29 = *(_QWORD *)(v47 + 16);
        v28 = *(_QWORD *)(v47 + 24);
        if (v29 >= v28 >> 1)
          v47 = sub_2317ECB90(v28 > 1, v29 + 1, 1, v47);
        v22 = v45;
        v30 = v46;
        v31 = v47;
        *(_QWORD *)(v47 + 16) = v29 + 1;
        sub_2317D40A8(v42, v31+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        a1 = v35;
      }
      v15 = v40;
      v21 = v23 + v39;
      if (!--v20)
      {
        v38(v19, 1, 1, v22);
        break;
      }
    }
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    swift_bridgeObjectRetain();
    v47 = MEMORY[0x24BEE4AF8];
    v32(v19, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  return v47;
}

unint64_t sub_231824BBC(void (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(__int128 *);
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;

  v28 = a1;
  sub_23182850C(0, &qword_254188178, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - v6;
  v8 = sub_2318D2D78();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v27 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v25 = (char *)&v24 - v13;
  v26 = *(_QWORD *)(a3 + 16);
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  v29 = v12;
  swift_bridgeObjectRetain();
  v14 = 0;
  v32 = MEMORY[0x24BEE4AF8];
  v24 = a3;
  do
  {
    v15 = v9;
    v30 = *(_OWORD *)(a3 + 16 * v14 + 32);
    v31 = v30;
    v16 = (id)v30;
    swift_bridgeObjectRetain();
    v28(&v31);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v32;
    }
    swift_bridgeObjectRelease();

    v17 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v29) == 1)
    {
      sub_23182FEC8((uint64_t)v7, (uint64_t)&qword_254188178, 255, (uint64_t)MEMORY[0x24BE477D0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    }
    else
    {
      v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19 = v25;
      v18(v25, v7, v17);
      v18(v27, v19, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_2317ED0BC(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
      v21 = *(_QWORD *)(v32 + 16);
      v20 = *(_QWORD *)(v32 + 24);
      if (v21 >= v20 >> 1)
        v32 = sub_2317ED0BC(v20 > 1, v21 + 1, 1, v32);
      v22 = v32;
      *(_QWORD *)(v32 + 16) = v21 + 1;
      v9 = v15;
      v18((char *)(v22+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v21), v27, v29);
      a3 = v24;
    }
    ++v14;
  }
  while (v26 != v14);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_231824E8C(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  void (*v37)(uint64_t *__return_ptr, char *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a1;
  v5 = sub_2318D2F58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  v12 = *(_QWORD *)(a3 + 56);
  v35 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v36 = (unint64_t)(v13 + 63) >> 6;
  v40 = a3;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v36)
      goto LABEL_31;
    v21 = *(_QWORD *)(v35 + 8 * v17);
    if (!v21)
      break;
LABEL_18:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v40 + 48) + *(_QWORD *)(v6 + 72) * v19, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    v37(&v38, v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v29 = v34;
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return (uint64_t)v29;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v23 = v39;
    if (v39)
    {
      v33 = v38;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_2317EBDA4(0, v34[2] + 1, 1, v34);
        v34 = (_QWORD *)result;
      }
      v25 = v34[2];
      v24 = v34[3];
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v31 = v34[2];
        v32 = v25 + 1;
        result = (uint64_t)sub_2317EBDA4((_QWORD *)(v24 > 1), v25 + 1, 1, v34);
        v25 = v31;
        v26 = v32;
        v34 = (_QWORD *)result;
      }
      v27 = v34;
      v34[2] = v26;
      v28 = &v27[2 * v25];
      v28[4] = v33;
      v28[5] = v23;
    }
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v36)
    goto LABEL_31;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 2;
  if (v17 + 2 >= v36)
    goto LABEL_31;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 3;
  if (v17 + 3 >= v36)
    goto LABEL_31;
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 4;
  if (v17 + 4 >= v36)
  {
LABEL_31:
    v29 = v34;
    goto LABEL_32;
  }
  v21 = *(_QWORD *)(v35 + 8 * v22);
  if (v21)
  {
LABEL_17:
    v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v36)
      goto LABEL_31;
    v21 = *(_QWORD *)(v35 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23182519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69[5];
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[3];
  uint64_t v81;
  uint64_t v82[7];
  _OWORD v83[3];
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89[4];
  uint64_t v90;

  v77 = a4;
  v73 = a2;
  v71 = a1;
  v76 = *v4;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23182850C(0, &qword_254187F70, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v74 = (uint64_t)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)v69 - v10;
  v11 = sub_2318D4A1C();
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v90 = (uint64_t)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v70 = (char *)v69 - v14;
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44980];
  sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], v6);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v69 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v69 - v23;
  sub_231831E30(a3, (uint64_t)v69 - v23, &qword_254187F80, v15, v6);
  v25 = sub_2318D3CE4();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25) == 1)
  {
    sub_23182FEC8((uint64_t)v24, (uint64_t)&qword_254187F80, 255, (uint64_t)MEMORY[0x24BE44980], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  }
  else
  {
    v28 = sub_2318D3CCC();
    v29 = v24;
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    if (v31 >> 60 != 15)
    {
      sub_2318BE3E4((uint64_t)v82);
      v69[2] = v82[1];
      v69[3] = v82[3];
      v69[4] = v82[5];
      v69[1] = v82[6];
      sub_23182FC7C((uint64_t)v82, (uint64_t)v83, &qword_25418A158, (uint64_t)&type metadata for MedicationHighlightsContent);
      if (*((_QWORD *)&v83[0] + 1))
      {
        v69[0] = v31;
        v90 = v28;
        v85 = v83[0];
        v86 = v83[1];
        v87 = v83[2];
        v88 = v84;
        v32 = v70;
        sub_2318D49E0();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v33 = sub_2318D4A10();
        v34 = sub_2318D5A24();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = swift_slowAlloc();
          v36 = swift_slowAlloc();
          v89[0] = v36;
          *(_DWORD *)v35 = 136315394;
          v37 = sub_2318D63CC();
          *(_QWORD *)&v80[0] = sub_231851EBC(v37, v38, v89);
          sub_2318D5F70();
          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 12) = 2080;
          v80[0] = v85;
          v80[1] = v86;
          v80[2] = v87;
          v81 = v88;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v39 = sub_2318D55E0();
          *(_QWORD *)&v80[0] = sub_231851EBC(v39, v40, v89);
          sub_2318D5F70();
          swift_bridgeObjectRelease();
          sub_23182FCD4(v82);
          sub_23182FCD4(v82);
          _os_log_impl(&dword_2317C8000, v33, v34, "[%s]: Received updated user data: %s", (uint8_t *)v35, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348E77E8](v36, -1, -1);
          MEMORY[0x2348E77E8](v35, -1, -1);
        }
        else
        {
          sub_23182FCD4(v82);
          sub_23182FCD4(v82);
        }

        (*(void (**)(char *, uint64_t))(v78 + 8))(v32, v79);
        v57 = v77;
        sub_23182850C(0, &qword_255F26598, v58, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, MEMORY[0x24BE42880]);
        sub_2318D34B0();
        v59 = *(_QWORD **)&v80[0];
        v60 = *((_QWORD *)&v85 + 1);
        *(_QWORD *)(*(_QWORD *)&v80[0] + 16) = v85;
        v59[3] = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v61 = *((_QWORD *)&v86 + 1);
        v59[4] = v86;
        v59[5] = v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v62 = MEMORY[0x24BEE0D00];
        sub_23182FC7C((uint64_t)&v87, (uint64_t)v89, &qword_254189D10, MEMORY[0x24BEE0D00]);
        sub_23182FC7C((uint64_t)v89, (uint64_t)(v59 + 6), &qword_254189D10, v62);
        sub_23182FD58((uint64_t)v89);
        swift_bridgeObjectRelease();
        v59[8] = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_23182FCD4(v82);
        v63 = (uint64_t)v72;
        sub_2318D366C();
        v64 = sub_2318D342C();
        v65 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 0, 1, v64);
        v66 = v74;
        sub_23182FD80(v63, v74, &qword_254187F70, v65);
        v67 = (char *)v75
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
        swift_beginAccess();
        sub_23182FDD4(v66, (uint64_t)v67, &qword_254187F70, v65);
        swift_endAccess();
        sub_23182FE30();
        v57[3] = v68;
        v57[4] = sub_2317E82EC(qword_255F26718, 255, (uint64_t (*)(uint64_t))sub_23182FE30, MEMORY[0x24BDEFEA0]);
        sub_2317DBF6C(v57);
        type metadata accessor for MedicationHighlightsView(0);
        sub_2317E82EC((unint64_t *)&qword_254188068, 255, type metadata accessor for MedicationHighlightsView, (uint64_t)&unk_2318DA28C);
        sub_2318D51B4();
        swift_release();
        return sub_2317E337C(v90, v69[0]);
      }
      sub_2317E337C(v28, v31);
    }
  }
  v41 = v90;
  sub_2318D49E0();
  sub_231831E30(a3, (uint64_t)v22, &qword_254187F80, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v42 = sub_2318D4A10();
  v43 = sub_2318D5A3C();
  if (os_log_type_enabled(v42, (os_log_type_t)v43))
  {
    LODWORD(v74) = v43;
    v75 = v42;
    v44 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    *(_QWORD *)&v80[0] = v73;
    *(_DWORD *)v44 = 136315394;
    v45 = sub_2318D63CC();
    *(_QWORD *)&v85 = sub_231851EBC(v45, v46, (uint64_t *)v80);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    sub_231831E30((uint64_t)v22, (uint64_t)v19, &qword_254187F80, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v27(v19, 1, v25) == 1)
    {
      sub_23182FEC8((uint64_t)v19, (uint64_t)&qword_254187F80, 255, (uint64_t)MEMORY[0x24BE44980], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v47 = 0;
      v48 = 0xF000000000000000;
    }
    else
    {
      v47 = sub_2318D3CCC();
      v48 = v50;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v25);
    }
    v49 = v77;
    *(_QWORD *)&v85 = v47;
    *((_QWORD *)&v85 + 1) = v48;
    sub_2317CDA94(0, &qword_254188160, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v51 = sub_2318D55E0();
    *(_QWORD *)&v85 = sub_231851EBC(v51, v52, (uint64_t *)v80);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    sub_23182FEC8((uint64_t)v22, (uint64_t)&qword_254187F80, 255, (uint64_t)MEMORY[0x24BE44980], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    v53 = v75;
    _os_log_impl(&dword_2317C8000, v75, (os_log_type_t)v74, "[%s]: Could not read user data from context: %s", (uint8_t *)v44, 0x16u);
    v54 = v73;
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v54, -1, -1);
    MEMORY[0x2348E77E8](v44, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v90, v79);
  }
  else
  {
    sub_23182FEC8((uint64_t)v22, (uint64_t)&qword_254187F80, 255, (uint64_t)MEMORY[0x24BE44980], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);

    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v41, v79);
    v49 = v77;
  }
  sub_23182FC18();
  v49[3] = v55;
  v49[4] = sub_2317E82EC(&qword_255F26708, 255, (uint64_t (*)(uint64_t))sub_23182FC18, MEMORY[0x24BDEFEA0]);
  sub_2317DBF6C(v49);
  return sub_2318D51B4();
}

id sub_231825B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id result;
  uint64_t *v13;
  uint64_t v14;

  v4 = (int *)type metadata accessor for MedicationHighlightsView(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  v10 = sub_2318D3CE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = (void *)objc_opt_self();
  swift_retain();
  result = objc_msgSend(v11, sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(_QWORD *)&v7[v4[5]] = result;
    v13 = (uint64_t *)&v7[v4[7]];
    *v13 = swift_getKeyPath();
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v7[v4[6]] = a1;
    sub_2317D40A8((uint64_t)v7, (uint64_t)v9, type metadata accessor for MedicationHighlightsView);
    return (id)sub_2317D40A8((uint64_t)v9, a2, type metadata accessor for MedicationHighlightsView);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231825CD4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23182FEC8(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  return swift_deallocClassInstance();
}

uint64_t sub_231825D28()
{
  return type metadata accessor for MedicationHighlightsConfigurationProvider(0);
}

uint64_t type metadata accessor for MedicationHighlightsConfigurationProvider(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_2541880A0);
}

void sub_231825D44()
{
  unint64_t v0;

  sub_23182850C(319, &qword_254187F70, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for MedicationHighlightsTileHeader(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26510);
}

uint64_t sub_231825DEC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231825E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for MedicationHighlightsConfigurationProvider(0);
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
  v2 = sub_2318D342C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_231825E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_23182519C(a1, a2, a3, a4);
}

uint64_t sub_231825EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_2318D4B00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_231825EE0()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_231825EEC()
{
  type metadata accessor for MedicationHighlightsConfigurationProvider(0);
  return sub_2318D3B34();
}

uint64_t sub_231825F28()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_231825F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_231825FB8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_231825FF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v8[3];
  uint64_t v9;

  sub_2318D3798();
  v0 = v9;
  if (v9)
  {
    v1 = sub_2317D4B08(v8, v9);
    v2 = *(_QWORD *)(v0 - 8);
    MEMORY[0x24BDAC7A8](v1);
    v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v2 + 16))(v4);
    sub_23182FEC8((uint64_t)v8, (uint64_t)&unk_255F266F0, (uint64_t)&unk_255F266F8, MEMORY[0x24BE430E8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_2317E0314);
    v5 = sub_2318D36FC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  }
  else
  {
    sub_23182FEC8((uint64_t)v8, (uint64_t)&unk_255F266F0, (uint64_t)&unk_255F266F8, MEMORY[0x24BE430E8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_2317E0314);
    return 0;
  }
  return v5;
}

id sub_231826118(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_231826188(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2318261D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231826204()
{
  return type metadata accessor for MedicationHighlightsTileHeader(0);
}

uint64_t type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_254188000);
}

uint64_t sub_231826220()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231826268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  _QWORD *v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t (*v38)(void);
  _QWORD *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  _QWORD *v51;

  v1 = sub_2318D342C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
  v3 = *(_QWORD **)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v45 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182AE38();
  v6 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - v9;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23182850C(0, &qword_254187F70, 255, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v44 = (uint64_t)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)&v43 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v43 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v43 - v20;
  v22 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
  swift_beginAccess();
  v23 = *MEMORY[0x24BE42650];
  v46 = (void (*)(char *, uint64_t, uint64_t))v3[13];
  v46(v21, v23, v1);
  v47 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v3[7];
  v47(v21, 0, 1, v1);
  v48 = v6;
  v24 = (uint64_t)&v10[*(int *)(v6 + 48)];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
  sub_231831E30(v22, (uint64_t)v10, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], v11);
  sub_231831E30((uint64_t)v21, v24, &qword_254187F70, v25, v11);
  v51 = v3;
  v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  if (v26((uint64_t)v10, 1, v1) == 1)
  {
    sub_23182FEC8((uint64_t)v21, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    if (v26(v24, 1, v1) == 1)
      goto LABEL_9;
    goto LABEL_6;
  }
  sub_231831E30((uint64_t)v10, (uint64_t)v19, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v26(v24, 1, v1) == 1)
  {
    sub_23182FEC8((uint64_t)v21, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    ((void (*)(char *, uint64_t))v51[1])(v19, v1);
LABEL_6:
    sub_2317CF774((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23182AE38);
    goto LABEL_7;
  }
  v33 = v51;
  v34 = v45;
  ((void (*)(char *, uint64_t, uint64_t))v51[4])(v45, v24, v1);
  sub_2317E82EC(&qword_255F26590, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], MEMORY[0x24BE42688]);
  v35 = sub_2318D5580();
  v36 = (void (*)(char *, uint64_t))v33[1];
  v36(v34, v1);
  v37 = (uint64_t)v21;
  v38 = MEMORY[0x24BE42678];
  sub_23182FEC8(v37, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  v36(v19, v1);
  sub_23182FEC8((uint64_t)v10, (uint64_t)&qword_254187F70, 255, (uint64_t)v38, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  if ((v35 & 1) != 0)
    goto LABEL_14;
LABEL_7:
  v27 = (uint64_t)v49;
  v46(v49, *MEMORY[0x24BE42648], v1);
  v47((char *)v27, 0, 1, v1);
  v10 = v50;
  v28 = (uint64_t)&v50[*(int *)(v48 + 48)];
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
  v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_231831E30(v22, (uint64_t)v50, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_231831E30(v27, v28, &qword_254187F70, v29, v30);
  if (v26((uint64_t)v10, 1, v1) == 1)
  {
    sub_23182FEC8(v27, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    if (v26(v28, 1, v1) == 1)
    {
LABEL_9:
      sub_23182FEC8((uint64_t)v10, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
LABEL_14:
      v32 = 1;
      return v32 & 1;
    }
  }
  else
  {
    v31 = v44;
    sub_231831E30((uint64_t)v10, v44, &qword_254187F70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v26(v28, 1, v1) != 1)
    {
      v39 = v51;
      v40 = v45;
      ((void (*)(char *, uint64_t, uint64_t))v51[4])(v45, v28, v1);
      sub_2317E82EC(&qword_255F26590, 255, v29, MEMORY[0x24BE42688]);
      v32 = sub_2318D5580();
      v41 = (void (*)(char *, uint64_t))v39[1];
      v41(v40, v1);
      sub_23182FEC8(v27, (uint64_t)&qword_254187F70, 255, (uint64_t)v29, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v41((char *)v31, v1);
      sub_23182FEC8((uint64_t)v10, (uint64_t)&qword_254187F70, 255, (uint64_t)v29, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      return v32 & 1;
    }
    sub_23182FEC8(v27, (uint64_t)&qword_254187F70, 255, (uint64_t)MEMORY[0x24BE42678], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    ((void (*)(uint64_t, uint64_t))v51[1])(v31, v1);
  }
  sub_2317CF774((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23182AE38);
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_231826890()
{
  return sub_231826268() & 1;
}

uint64_t sub_2318268B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_2318D3CE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(swift_allocObject() + qword_25418A198) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_2318D3B94();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_231826970()
{
  sub_2318D3BA0();
  return swift_deallocClassInstance();
}

uint64_t sub_23182698C()
{
  return type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler(0);
}

uint64_t sub_23182699C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _BYTE v18[16];

  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v18[-v1];
  v3 = sub_2318D29B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_2318D2A90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (char *)swift_bridgeObjectRetain();
  v12 = sub_23182E7D4(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCEF70], v3);
  sub_2318D29C4();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  sub_2318D2994();
  v13 = sub_2318D29AC();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 0, 1, v13);
  sub_2318D2A60();
  v14 = sub_2318D2A24();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  v15 = *(_QWORD *)(v14 + 16);
  result = swift_bridgeObjectRelease();
  if (v15)
  {
    v17 = sub_23182F830(0, *(_QWORD *)(v12 + 16), v15, v12, v15);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_231826B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = sub_2318D4080();
  v60 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v58 - v5;
  v66 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v64 = *(_QWORD *)(v66 - 8);
  v7 = MEMORY[0x24BDAC7A8](v66);
  v65 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v58 - v9;
  v63 = v0;
  v11 = sub_23182699C();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  v61 = v6;
  v62 = v3;
  if (v12)
  {
    v14 = v1;
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    do
    {
      v17 = *(_QWORD *)(v11 + 8 * v15++ + 32);
      v67 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_231855C80(v17);
      swift_bridgeObjectRelease();
      v16 = v67;
    }
    while (v12 != v15);
    swift_bridgeObjectRelease();
    v1 = v14;
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  v67 = v13;
  v19 = *(_QWORD *)(v16 + 16);
  if (v19)
  {
    v59 = v1;
    v20 = 0;
    while (v20 < *(_QWORD *)(v16 + 16))
    {
      v21 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      v22 = *(_QWORD *)(v64 + 72);
      sub_2317D404C(v16 + v21 + v22 * v20, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      if ((v10[*(int *)(v66 + 24)] & 1) != 0)
      {
        result = sub_2317CF774((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      }
      else
      {
        sub_2317D40A8((uint64_t)v10, v65, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        v23 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23186E420(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v67;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_23186E420(v24 > 1, v25 + 1, 1);
          v23 = v67;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        result = sub_2317D40A8(v65, v23 + v21 + v25 * v22, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      }
      if (v19 == ++v20)
      {
        v26 = v67;
        v1 = v59;
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    v26 = v13;
LABEL_19:
    v27 = v60;
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v26 + 16);
    swift_release();
    v29 = sub_2318D29AC();
    v30 = MEMORY[0x24BDCEEA8];
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
    v32 = (uint64_t)v61;
    v31(v61, 1, 1, v29);
    v33 = v62;
    sub_2318D4074();
    sub_2318D444C();
    v34 = *(void (**)(char *, uint64_t))(v27 + 8);
    v34(v33, v1);
    sub_23182FEC8(v32, (uint64_t)&qword_25418B2C0, 255, (uint64_t)v30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    sub_2317E0314(0, (unint64_t *)&qword_25418B480, (unint64_t *)&qword_25418B4A8, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v66 = v35;
    v36 = swift_allocObject();
    v37 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v36 + 16) = xmmword_2318D8680;
    v38 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v36 + 56) = v37;
    *(_QWORD *)(v36 + 64) = v38;
    *(_QWORD *)(v36 + 32) = v28;
    v39 = sub_2318D5598();
    v41 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = v63;
    v43 = *(_QWORD *)(v63 + 56);
    if (v43)
    {
      v65 = v39;
      v44 = *(_QWORD *)(v63 + 48);
      v31((char *)v32, 1, 1, v29);
      swift_bridgeObjectRetain();
      sub_2318D4074();
      sub_2318D444C();
      v34(v33, v1);
      sub_23182FEC8(v32, (uint64_t)&qword_25418B2C0, 255, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v45 = v41;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_2318D96D0;
      v47 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v46 + 56) = MEMORY[0x24BEE0D00];
      v48 = sub_2317E0830();
      *(_QWORD *)(v46 + 32) = v44;
      *(_QWORD *)(v46 + 40) = v43;
      v50 = *(_QWORD *)(v42 + 16);
      v49 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v46 + 96) = v47;
      *(_QWORD *)(v46 + 104) = v48;
      *(_QWORD *)(v46 + 64) = v48;
      *(_QWORD *)(v46 + 72) = v50;
      *(_QWORD *)(v46 + 80) = v49;
      *(_QWORD *)(v46 + 136) = v47;
      *(_QWORD *)(v46 + 144) = v48;
      *(_QWORD *)(v46 + 112) = v65;
      *(_QWORD *)(v46 + 120) = v45;
    }
    else
    {
      v31((char *)v32, 1, 1, v29);
      sub_2318D4074();
      sub_2318D444C();
      v34(v33, v1);
      sub_23182FEC8(v32, (uint64_t)&qword_25418B2C0, 255, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v51 = v39;
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_2318D8510;
      v54 = *(_QWORD *)(v42 + 16);
      v53 = *(_QWORD *)(v42 + 24);
      v55 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v52 + 56) = MEMORY[0x24BEE0D00];
      v56 = sub_2317E0830();
      *(_QWORD *)(v52 + 32) = v54;
      *(_QWORD *)(v52 + 40) = v53;
      *(_QWORD *)(v52 + 96) = v55;
      *(_QWORD *)(v52 + 104) = v56;
      *(_QWORD *)(v52 + 64) = v56;
      *(_QWORD *)(v52 + 72) = v51;
      *(_QWORD *)(v52 + 80) = v41;
    }
    swift_bridgeObjectRetain();
    v57 = sub_2318D55D4();
    swift_bridgeObjectRelease();
    return v57;
  }
  return result;
}

uint64_t sub_2318271F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  void (*v26)(char *, char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v38 = a1;
  v2 = sub_2318D2A78();
  v3 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  v37 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_23182850C(0, (unint64_t *)&qword_25418B300, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_2318D294C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v30 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v30 - v20;
  sub_23182850C(0, &qword_255F256C0, 255, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v31 = *(_QWORD *)(v11 + 72);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2318D8680;
  v30 = v22;
  sub_2318D2700();
  v33 = v1;
  sub_2318D2700();
  sub_2318D29D0();
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v19, v10);
  v35 = *MEMORY[0x24BDCF220];
  v34 = *(void (**)(char *, _QWORD, uint64_t))(v37 + 104);
  while (1)
  {
    v24 = v36;
    v34(v5, v35, v36);
    sub_2318D2A48();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v24);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if ((_DWORD)result == 1)
      break;
    v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v26(v16, v9, v10);
    if ((sub_2318D270C() & 1) == 0)
    {
      v29 = v32;
      v32(v16, v10);
      v29(v21, v10);
      return v23;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v39, v16, v10);
    v28 = *(_QWORD *)(v23 + 16);
    v27 = *(_QWORD *)(v23 + 24);
    if (v28 >= v27 >> 1)
      v23 = sub_2317ECB7C(v27 > 1, v28 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v28 + 1;
    v26((char *)(v23 + v30 + v28 * v31), v39, v10);
    v32(v21, v10);
    v26(v21, v16, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_23182752C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  char **v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  char **v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char v68;
  char *v69;
  char *v70;
  char v71;
  char *v72;
  char v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  BOOL v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char v97;
  char v98;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char **v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char **v122;
  void (*v123)(char *, uint64_t, uint64_t, uint64_t);
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;

  v103 = a6;
  v118 = a4;
  v119 = a5;
  v127 = a3;
  v128 = a1;
  v120 = a7;
  v102 = sub_2318D27D8();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_2318D2A90();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v105 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_2318D2718();
  v115 = *(_QWORD *)(v121 - 8);
  v10 = MEMORY[0x24BDAC7A8](v121);
  v111 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v114 = (char *)&v100 - v12;
  v13 = sub_2318D294C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v104 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v110 = (char *)&v100 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v113 = (char *)&v100 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v100 - v21;
  v23 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v112 = (char **)((char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v100 - v27;
  sub_23182850C(0, &qword_255F266E0, 255, v29, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v117 = (uint64_t)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v122 = (char **)((char *)&v100 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v126 = (char *)&v100 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v100 - v37;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v39((char *)&v100 - v37, 1, 1, v23);
  v40 = a2;
  v41 = *(_QWORD *)(a2 + 16);
  v116 = v14;
  v124 = v38;
  v125 = v23;
  v123 = v39;
  if (v41)
  {
    v42 = v40 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v108 = v24;
    v109 = v40;
    v43 = *(_QWORD *)(v24 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2317D404C(v42, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      sub_2318D29D0();
      v44 = sub_2318D291C();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      if ((v44 & 1) != 0)
        break;
      sub_2317CF774((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      v42 += v43;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        v38 = v124;
        v23 = v125;
        v39 = v123;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v124;
    sub_23182FEC8((uint64_t)v124, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    v38 = (char *)v45;
    sub_2317D40A8((uint64_t)v28, v45, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    v23 = v125;
    v39 = v123;
    v123((char *)v45, 0, 1, v125);
LABEL_7:
    v24 = v108;
  }
  v46 = (uint64_t)v126;
  v39(v126, 1, 1, v23);
  v47 = (uint64_t)v38;
  v48 = (void (*)(_QWORD, _QWORD, _QWORD))v122;
  sub_231831E30(v47, (uint64_t)v122, &qword_255F266E0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v49 = *(char ***)(v24 + 48);
  if (((unsigned int (*)(_QWORD, uint64_t, uint64_t))v49)(v48, 1, v23) != 1)
  {
    v64 = (uint64_t)v112;
    sub_2317D40A8((uint64_t)v48, (uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    sub_23182FEC8(v46, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    sub_2317D40A8(v64, v46, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    v63 = v125;
    goto LABEL_19;
  }
  v112 = v49;
  sub_23182FEC8((uint64_t)v48, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  v50 = v128;
  v51 = sub_2318D270C();
  v52 = v114;
  v53 = v115;
  v54 = *(char ***)(v115 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v54)(v114, v119, v121);
  v55 = v116;
  v56 = v113;
  v57 = v50;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
  v58(v113, v57, v13);
  v122 = v54;
  if ((v51 & 1) == 0)
  {
    v113 = *(char **)(v55 + 8);
    ((void (*)(char *, uint64_t))v113)(v56, v13);
    v61 = *(void (**)(char *, uint64_t))(v53 + 8);
    v65 = v121;
    v61(v52, v121);
    goto LABEL_15;
  }
  v59 = sub_2318D270C();
  v60 = *(void (**)(char *, uint64_t))(v55 + 8);
  v60(v56, v13);
  v61 = *(void (**)(char *, uint64_t))(v53 + 8);
  v62 = v121;
  v61(v52, v121);
  if ((v59 & 1) == 0)
  {
    v113 = (char *)v60;
    v65 = v62;
LABEL_15:
    v66 = v58;
    v67 = v128;
    v68 = sub_2318D270C();
    v69 = v111;
    ((void (*)(char *, uint64_t, uint64_t))v122)(v111, v119, v65);
    v70 = v110;
    v66(v110, v67, v13);
    if ((v68 & 1) != 0)
    {
      v71 = sub_2318D270C();
      v72 = v70;
      v73 = v71;
      ((void (*)(char *, uint64_t))v113)(v72, v13);
      v61(v69, v65);
      v46 = (uint64_t)v126;
      if ((v73 & 1) == 0)
      {
        sub_23182FEC8((uint64_t)v126, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
        v66((char *)v46, v128, v13);
        v63 = v125;
        *(_BYTE *)(v46 + *(int *)(v125 + 20)) = 0;
        *(_BYTE *)(v46 + *(int *)(v63 + 24)) = 1;
        goto LABEL_18;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t))v113)(v70, v13);
      v61(v69, v65);
      v46 = (uint64_t)v126;
    }
    sub_23182FEC8((uint64_t)v124, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    v123((char *)v120, 1, 1, v125);
    return sub_23182FEC8(v46, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  }
  v46 = (uint64_t)v126;
  sub_23182FEC8((uint64_t)v126, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  v58((char *)v46, v128, v13);
  v63 = v125;
  *(_BYTE *)(v46 + *(int *)(v125 + 20)) = 0;
  *(_BYTE *)(v46 + *(int *)(v63 + 24)) = 0;
LABEL_18:
  *(_BYTE *)(v46 + *(int *)(v63 + 28)) = 0;
  v39 = v123;
  v49 = v112;
LABEL_19:
  v39((char *)v46, 0, 1, v63);
  v74 = v117;
  sub_231831E30(v46, v117, &qword_255F266E0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v75 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v49)(v74, 1, v63);
  sub_23182FEC8(v74, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  if (v75 == 1 || ((unsigned int (*)(uint64_t, uint64_t, uint64_t))v49)(v46, 1, v63))
  {
    sub_23182FEC8((uint64_t)v124, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    v76 = v120;
  }
  else
  {
    v78 = v128;
    v79 = sub_2318D291C();
    v80 = v106;
    v81 = v105;
    v82 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v105, v127, v107);
    v83 = v14;
    v84 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v85 = v104;
    v84(v104, v78, v13);
    if ((v79 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v13);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
      sub_23182FEC8((uint64_t)v124, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v86 = 1;
    }
    else
    {
      sub_23182850C(0, &qword_255F266E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v87 = v81;
      v88 = v85;
      v89 = v63;
      v90 = sub_2318D2A78();
      v91 = *(_QWORD *)(v90 - 8);
      v92 = *(unsigned __int8 *)(v91 + 80);
      v128 = v13;
      v93 = (v92 + 32) & ~v92;
      v94 = swift_allocObject();
      *(_OWORD *)(v94 + 16) = xmmword_2318D8680;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v94 + v93, *MEMORY[0x24BDCF220], v90);
      sub_231852A6C(v94);
      swift_setDeallocating();
      v63 = v89;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v95 = v100;
      sub_2318D29F4();
      swift_bridgeObjectRelease();
      v96 = sub_2318D27C0();
      v98 = v97;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v95, v102);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v88, v128);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v87, v107);
      sub_23182FEC8((uint64_t)v124, (uint64_t)&qword_255F266E0, 255, (uint64_t)type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v86 = (v98 & 1) == 0 && v96 == 1;
    }
    v76 = v120;
    v46 = (uint64_t)v126;
    v126[*(int *)(v63 + 28)] = v86;
  }
  return sub_23182FD80(v46, v76, &qword_255F266E0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_231827FCC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_231828008 + 4 * byte_2318DA160[*v0]))(0x697461636964656DLL, 0xEE00656D614E6E6FLL);
}

unint64_t sub_231828008()
{
  return 0xD000000000000014;
}

unint64_t sub_231828028()
{
  return 0xD000000000000012;
}

uint64_t sub_231828044()
{
  return 1937334628;
}

uint64_t sub_231828054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_231831218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_231828078()
{
  return 0;
}

void sub_231828084(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_231828090()
{
  sub_23182AEB4();
  return sub_2318D63B4();
}

uint64_t sub_2318280B8()
{
  sub_23182AEB4();
  return sub_2318D63C0();
}

uint64_t sub_2318280E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationHighlightsView.Model()
{
  return objc_opt_self();
}

uint64_t sub_23182813C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  sub_231831E7C(0, &qword_254188158, (uint64_t (*)(void))sub_23182AEB4, (uint64_t)&type metadata for MedicationHighlightsView.Model.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v11 - v8;
  sub_2317D4B08(a1, a1[3]);
  sub_23182AEB4();
  sub_2318D63A8();
  v15 = 0;
  swift_bridgeObjectRetain();
  sub_2318D624C();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = 1;
    swift_bridgeObjectRetain();
    sub_2318D624C();
    swift_bridgeObjectRelease();
    v13 = 2;
    swift_bridgeObjectRetain();
    sub_2318D6228();
    swift_bridgeObjectRelease();
    v11[1] = *(_QWORD *)(v3 + 64);
    v12 = 3;
    sub_23182AEF8(0);
    sub_23182E750(&qword_254189DC0, &qword_2541890A8, (uint64_t)&unk_2318DDBC0, MEMORY[0x24BEE12A0]);
    sub_2318D6264();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t *sub_231828364(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2318D3CE4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    v17 = v13;
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_2318D5154();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23182850C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_231828564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_2318D3CE4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

  swift_release();
  v6 = a1 + *(int *)(a2 + 28);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2318D5154();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *sub_231828648(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;

  v6 = sub_2318D3CE4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v11;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  v15 = v11;
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_2318D5154();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_2318287BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_2318D3CE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = *(void **)&a2[v12];
  v14 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  v15 = v13;

  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_2318289A0((uint64_t)&a1[v16]);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2318D5154();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2318289A0(uint64_t a1)
{
  uint64_t v2;

  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_2318289F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_2318D3CE4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  v14 = v13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2318D5154();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

char *sub_231828B64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_2318D3CE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    sub_2318289A0((uint64_t)&a1[v14]);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2318D5154();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v15, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_231828D40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231828D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v8 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_231828E2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_231828E38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23182850C(0, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MedicationHighlightsView(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_254188070);
}

void sub_231828F28()
{
  unint64_t v0;
  unint64_t v1;

  sub_23182850C(319, &qword_254187F80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_23182850C(319, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_231829000()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_231829010(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  sub_231831E7C(0, &qword_254188140, (uint64_t (*)(void))sub_23182AEB4, (uint64_t)&type metadata for MedicationHighlightsView.Model.CodingKeys, MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - v8;
  v1[6] = 0;
  v1[7] = 0;
  v10 = a1[3];
  v17[0] = a1;
  sub_2317D4B08(a1, v10);
  sub_23182AEB4();
  sub_2318D639C();
  if (v2)
  {
    v11 = v17[0];
    swift_bridgeObjectRelease();
    type metadata accessor for MedicationHighlightsView.Model();
    swift_deallocPartialClassInstance();
    v15 = v11;
  }
  else
  {
    v21 = 0;
    v1[2] = sub_2318D6204();
    v1[3] = v12;
    v20 = 1;
    v1[4] = sub_2318D6204();
    v1[5] = v13;
    v19 = 2;
    v1[6] = sub_2318D61E0();
    v1[7] = v14;
    swift_bridgeObjectRelease();
    sub_23182AEF8(0);
    v18 = 3;
    sub_23182E750(&qword_254188138, (unint64_t *)&unk_254188080, (uint64_t)&unk_2318DDBE8, MEMORY[0x24BEE12D0]);
    sub_2318D621C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v15 = v17[0];
    v1[8] = v17[1];
  }
  sub_2317D4B2C(v15);
  return v3;
}

uint64_t sub_231829298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348E7734](&unk_2318DA414, a3);
  return sub_2318D378C();
}

uint64_t sub_231829300(uint64_t a1)
{
  MEMORY[0x2348E7734](&unk_2318DA414, a1);
  return sub_2318D3780();
}

_QWORD *sub_231829340@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for MedicationHighlightsView.Model();
  v5 = swift_allocObject();
  result = sub_231829010(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_231829394(_QWORD *a1)
{
  return sub_23182813C(a1);
}

uint64_t sub_2318293B4()
{
  return sub_2318D50AC();
}

uint64_t sub_2318293D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_2318D5154();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2318D50B8();
}

uint64_t sub_231829450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  _QWORD v23[6];

  v23[2] = a2;
  v23[3] = a1;
  v23[4] = a3;
  v4 = sub_2318D3A08();
  MEMORY[0x24BDAC7A8](v4);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23182850C(0, &qword_255F266A8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE41368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v23 - v7;
  sub_23182850C(0, &qword_255F266B0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], v5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v23 - v10;
  v12 = *(void **)(v3 + *(int *)(type metadata accessor for MedicationHighlightsView(0) + 20));
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(v12, sel_displayCategory);
  v14 = objc_msgSend(v13, sel_systemImageName);

  v23[1] = sub_2318D55BC();
  v15 = sub_2318D36A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  v16 = objc_msgSend(v12, sel_objectType);
  sub_2318D32F4();
  v17 = *MEMORY[0x24BE41348];
  v18 = sub_2318D32A0();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v8, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43CC8];
  sub_23182850C(0, &qword_255F266B8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE43CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2318D8510;
  sub_2318D39F0();
  sub_2318D39FC();
  v23[5] = v21;
  sub_2317E82EC(&qword_255F266C0, 255, v20, MEMORY[0x24BE43CD0]);
  sub_23182E730(0);
  sub_2317E82EC(&qword_255F266D0, 255, (uint64_t (*)(uint64_t))sub_23182E730, MEMORY[0x24BEE12C8]);
  sub_2318D6000();
  sub_2318D393C();
  swift_allocObject();
  sub_2318D3930();
  return sub_2318D3948();
}

uint64_t sub_231829770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[7];

  sub_23182AF3C(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182B4EC(0);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182B508(0);
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_2318D516C();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  sub_2318323F4(0, &qword_255F26670, sub_23182AF58);
  sub_2318299B4(v1, &v5[*(int *)(v14 + 44)]);
  sub_2318D5370();
  sub_2318D5094();
  sub_2317D404C((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_23182AF3C);
  v15 = &v9[*(int *)(v7 + 36)];
  v16 = v24[5];
  *((_OWORD *)v15 + 4) = v24[4];
  *((_OWORD *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = v24[6];
  v17 = v24[1];
  *(_OWORD *)v15 = v24[0];
  *((_OWORD *)v15 + 1) = v17;
  v18 = v24[3];
  *((_OWORD *)v15 + 2) = v24[2];
  *((_OWORD *)v15 + 3) = v18;
  sub_2317CF774((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23182AF3C);
  sub_2317D404C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23182B4EC);
  *(_WORD *)&v13[*(int *)(v11 + 36)] = 256;
  sub_2317CF774((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23182B4EC);
  v19 = sub_2318D52E0();
  v20 = sub_2318D51F0();
  sub_2317D404C((uint64_t)v13, a1, (uint64_t (*)(_QWORD))sub_23182B508);
  sub_23182B524(0);
  v22 = a1 + *(int *)(v21 + 36);
  *(_QWORD *)v22 = v19;
  *(_BYTE *)(v22 + 8) = v20;
  return sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23182B508);
}

uint64_t sub_2318299B4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  id v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  int *v82;
  int *v83;
  char *v84;
  char v85;
  char *v86;
  char *v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t KeyPath;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;

  v118 = a2;
  sub_23182B220();
  v117 = v3;
  v128 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v127 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v124 = (char *)&v99 - v6;
  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v99 - v8;
  v103 = sub_2318D29B8();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v101 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_2318D2A90();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v100 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  MEMORY[0x24BDAC7A8](v105);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182B1F0(0);
  MEMORY[0x24BDAC7A8](v13);
  v112 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182B178(0);
  v116 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v129 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v120 = (uint64_t)&v99 - v18;
  v123 = sub_2318D3954();
  v126 = *(_QWORD *)(v123 - 8);
  v19 = MEMORY[0x24BDAC7A8](v123);
  v122 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v99 - v21;
  v125 = (char *)&v99 - v21;
  v113 = *(int *)(type metadata accessor for MedicationHighlightsView(0) + 24);
  v108 = a1;
  v23 = *(_QWORD *)(a1 + v113);
  v25 = *(_QWORD *)(v23 + 16);
  v24 = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain();
  sub_231829450(v25, v24, (uint64_t)v22);
  swift_bridgeObjectRelease();
  v134 = sub_231826B80();
  v135 = v26;
  sub_23181B69C();
  v27 = sub_2318D5298();
  v29 = v28;
  LOBYTE(v25) = v30 & 1;
  sub_2318D5220();
  sub_2318D5238();
  sub_2318D5250();
  swift_release();
  v31 = sub_2318D5280();
  v33 = v32;
  v35 = v34;
  swift_release();
  LOBYTE(v22) = v35 & 1;
  sub_23182B538(v27, v29, v25);
  swift_bridgeObjectRelease();
  v36 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  MEMORY[0x2348E60CC](v36);
  v110 = sub_2318D5274();
  v109 = v37;
  v39 = v38;
  v111 = v40;
  swift_release();
  v121 = v39 & 1;
  sub_23182B538(v31, v33, (char)v22);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v119 = swift_getKeyPath();
  v104 = sub_2318D5208();
  sub_2318D501C();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v102;
  v50 = v101;
  v51 = v103;
  (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v101, *MEMORY[0x24BDCEF70], v103);
  v52 = v100;
  sub_2318D29C4();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  v53 = v107;
  sub_2318D2994();
  v54 = sub_2318D29AC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 0, 1, v54);
  sub_2318D2A60();
  v55 = swift_getKeyPath();
  v56 = v105;
  *(_QWORD *)&v12[*(int *)(v105 + 24)] = v55;
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v12, v52, v115);
  v57 = *(int *)(v56 + 20);
  HKUIOnePixel();
  *(_QWORD *)&v12[v57] = v58;
  v59 = sub_2318D5364();
  v60 = v112;
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v112, 0.0, 1, 0.0, 1, v59, v61, (void (*)(uint64_t, uint64_t))sub_23182E724, (uint64_t (*)(_QWORD))sub_23182B1F0);
  sub_2317CF774((uint64_t)v12, type metadata accessor for MedicationHighlightDaysOfWeekRow);
  LOBYTE(v57) = sub_2318D5208();
  sub_2318D501C();
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = v129;
  sub_2317D404C(v60, v129, (uint64_t (*)(_QWORD))sub_23182B1F0);
  v71 = v70 + *(int *)(v116 + 36);
  *(_BYTE *)v71 = v57;
  *(_QWORD *)(v71 + 8) = v63;
  *(_QWORD *)(v71 + 16) = v65;
  *(_QWORD *)(v71 + 24) = v67;
  *(_QWORD *)(v71 + 32) = v69;
  *(_BYTE *)(v71 + 40) = 0;
  sub_2317CF774(v60, (uint64_t (*)(_QWORD))sub_23182B1F0);
  v72 = v70;
  v73 = v120;
  sub_2317D40A8(v72, v120, (uint64_t (*)(_QWORD))sub_23182B178);
  v134 = sub_23182699C();
  swift_getKeyPath();
  sub_23182B300(0);
  sub_23182B320(0);
  sub_2317E82EC(&qword_255F26648, 255, (uint64_t (*)(uint64_t))sub_23182B300, MEMORY[0x24BEE12D8]);
  sub_23182E750(&qword_255F26650, &qword_255F26630, (uint64_t)&unk_2318DDB58, MEMORY[0x24BEE12A8]);
  sub_231832648(&qword_255F26688, (uint64_t (*)(uint64_t))sub_23182B320, (uint64_t (*)(void))sub_23182E684, MEMORY[0x24BDEDBB8]);
  v74 = v124;
  sub_2318D534C();
  v75 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
  v76 = v122;
  v77 = v123;
  v75(v122, v125, v123);
  LOBYTE(v134) = 1;
  v133 = v121;
  v132 = 1;
  v131 = 0;
  v78 = v129;
  sub_2317D404C(v73, v129, (uint64_t (*)(_QWORD))sub_23182B178);
  v116 = *(_QWORD *)(v128 + 16);
  v79 = v127;
  v80 = v117;
  ((void (*)(char *, char *, uint64_t))v116)(v127, v74, v117);
  v130 = 1;
  v81 = v118;
  v75(v118, v76, v77);
  sub_23182AF78();
  v83 = v82;
  v84 = &v81[v82[12]];
  v85 = v134;
  *(_QWORD *)v84 = 0;
  v84[8] = v85;
  v86 = &v81[v82[16]];
  v87 = v81;
  LOBYTE(v81) = v133;
  v88 = v132;
  v89 = v131;
  v90 = v110;
  v91 = v109;
  *(_QWORD *)v86 = v110;
  *((_QWORD *)v86 + 1) = v91;
  v86[16] = (char)v81;
  v92 = KeyPath;
  *((_QWORD *)v86 + 3) = v111;
  *((_QWORD *)v86 + 4) = v92;
  v86[40] = 0;
  *((_QWORD *)v86 + 6) = v119;
  *((_QWORD *)v86 + 7) = 0;
  v86[64] = v88;
  v86[72] = v104;
  *((_QWORD *)v86 + 10) = v42;
  *((_QWORD *)v86 + 11) = v44;
  *((_QWORD *)v86 + 12) = v46;
  *((_QWORD *)v86 + 13) = v48;
  v86[112] = v89;
  sub_2317D404C(v78, (uint64_t)&v87[v82[20]], (uint64_t (*)(_QWORD))sub_23182B178);
  ((void (*)(char *, char *, uint64_t))v116)(&v87[v83[24]], v79, v80);
  v93 = &v87[v83[28]];
  v94 = v130;
  *(_QWORD *)v93 = 0;
  v93[8] = v94;
  sub_23182E708(v90, v91, (char)v81);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  LOBYTE(v77) = v121;
  sub_23182E708(v90, v91, v121);
  v95 = *(void (**)(char *, uint64_t))(v128 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v95(v124, v80);
  sub_2317CF774(v120, (uint64_t (*)(_QWORD))sub_23182B178);
  sub_23182B538(v90, v91, v77);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v96 = *(void (**)(char *, uint64_t))(v126 + 8);
  v97 = v123;
  v96(v125, v123);
  v95(v127, v80);
  sub_2317CF774(v129, (uint64_t (*)(_QWORD))sub_23182B178);
  sub_23182B538(v90, v91, v133);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v96)(v122, v97);
}

__n128 sub_23182A428@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(_QWORD))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v20)(_QWORD);
  void *v29;
  _OWORD *v30;
  __n128 result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v18 = v17;
  v20 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2318D5A48();
    v29 = (void *)sub_2318D51E4();
    sub_2318D49B0();

    v20 = a17;
  }
  sub_2318D5094();
  a16(v18, a9);
  v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *v30 = v32;
  v30[1] = v33;
  result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_23182A5F0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2318D5A48();
    v23 = (void *)sub_2318D51E4();
    sub_2318D49B0();

  }
  sub_2318D5094();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;
  return sub_23183258C((uint64_t)v13);
}

uint64_t sub_23182A7A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  sub_23182B358(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182B33C(0);
  v24 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  *(_QWORD *)v5 = sub_2318D5124();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  sub_2318323F4(0, &qword_255F266A0, (void (*)(uint64_t))sub_23182B37C);
  v26 = v9;
  swift_getKeyPath();
  sub_23182AEF8(0);
  type metadata accessor for MedicationHighlightsDayView(0);
  sub_2317E82EC(&qword_255F26628, 255, (uint64_t (*)(uint64_t))sub_23182AEF8, MEMORY[0x24BEE12D8]);
  sub_2317E82EC(&qword_255F26630, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t)&unk_2318DDB58);
  sub_2317E82EC(&qword_255F26640, 255, type metadata accessor for MedicationHighlightsDayView, (uint64_t)&unk_2318DA76C);
  swift_bridgeObjectRetain();
  sub_2318D534C();
  v10 = sub_2318D51FC();
  sub_2318D501C();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_2317D404C((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_23182B358);
  v19 = &v8[*(int *)(v24 + 36)];
  *v19 = v10;
  *((_QWORD *)v19 + 1) = v12;
  *((_QWORD *)v19 + 2) = v14;
  *((_QWORD *)v19 + 3) = v16;
  *((_QWORD *)v19 + 4) = v18;
  v19[40] = 0;
  sub_2317CF774((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23182B358);
  v20 = sub_2318D5364();
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1, v20, v21, (void (*)(uint64_t, uint64_t))sub_23182E718, (uint64_t (*)(_QWORD))sub_23182B320);
  return sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_23182B33C);
}

uint64_t sub_23182AA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v9;

  v4 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D404C(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for MedicationHighlightsDayView(0) + 20)) = KeyPath;
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  return sub_2317D40A8((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

id sub_23182AB40@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2318D3CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  result = objc_msgSend((id)objc_opt_self(), sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(_QWORD *)(a3 + a2[5]) = result;
    v8 = (uint64_t *)(a3 + a2[7]);
    *v8 = swift_getKeyPath();
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    sub_23182850C(0, &qword_255F26598, v9, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, MEMORY[0x24BE42880]);
    v11 = v10;
    sub_2318D34B0();
    result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
    *(_QWORD *)(a3 + a2[6]) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23182AC64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_231831E30(v1, a1, &qword_254187F80, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23182AC98(uint64_t a1)
{
  uint64_t v1;

  return sub_23182FDD4(a1, v1, &qword_254187F80, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980]);
}

uint64_t (*sub_23182ACC0())()
{
  return nullsub_1;
}

uint64_t sub_23182ACD8()
{
  return sub_2318D52BC();
}

uint64_t sub_23182ACF4()
{
  return sub_2317E82EC((unint64_t *)&qword_254188068, 255, type metadata accessor for MedicationHighlightsView, (uint64_t)&unk_2318DA28C);
}

uint64_t sub_23182AD24()
{
  return sub_2317E82EC((unint64_t *)&unk_254188058, 255, type metadata accessor for MedicationHighlightsView, (uint64_t)&unk_2318DA2DC);
}

uint64_t sub_23182AD54()
{
  return sub_2317E82EC(&qword_254188048, 255, type metadata accessor for MedicationHighlightsView, (uint64_t)&unk_2318DA314);
}

uint64_t sub_23182AD84()
{
  return sub_2317E82EC(&qword_255F26580, 255, type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler, (uint64_t)&unk_2318DA44C);
}

uint64_t sub_23182ADB4(uint64_t a1, uint64_t a2)
{
  return sub_2317E82EC(&qword_254188030, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, (uint64_t)&unk_2318DA3E4);
}

uint64_t sub_23182ADE0(uint64_t a1, uint64_t a2)
{
  return sub_2317E82EC(&qword_254188040, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, (uint64_t)&unk_2318DA3BC);
}

uint64_t sub_23182AE0C(uint64_t a1, uint64_t a2)
{
  return sub_2317E82EC(&qword_254188038, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, (uint64_t)&unk_2318DA394);
}

void sub_23182AE38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26588)
  {
    sub_23182850C(255, &qword_254187F70, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26588);
  }
}

unint64_t sub_23182AEB4()
{
  unint64_t result;

  result = qword_254188010;
  if (!qword_254188010)
  {
    result = MEMORY[0x2348E7734](&unk_2318DA7BC, &type metadata for MedicationHighlightsView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188010);
  }
  return result;
}

void sub_23182AEF8(uint64_t a1)
{
  sub_23182850C(a1, &qword_254189DB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_23182AF18()
{
  return sub_2318D50AC();
}

void sub_23182AF3C(uint64_t a1)
{
  sub_231832780(a1, &qword_255F265A0, (uint64_t (*)(uint64_t))sub_23182AF58, &qword_255F26658);
}

void sub_23182AF58(uint64_t a1)
{
  sub_23182850C(a1, &qword_255F265A8, 255, (uint64_t (*)(uint64_t))sub_23182AF78, MEMORY[0x24BDF53F0]);
}

void sub_23182AF78()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255F265B0)
  {
    sub_2318D3954();
    sub_23182B194(255, &qword_255F265B8, (void (*)(uint64_t))sub_23182B028);
    sub_23182B178(255);
    sub_23182B220();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255F265B0);
  }
}

void sub_23182B028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F265C0)
  {
    sub_23182B0A4();
    sub_23182B118(255, (unint64_t *)&qword_255F265D8, &qword_255F265E0, MEMORY[0x24BEE1768]);
    v0 = sub_2318D5070();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F265C0);
  }
}

void sub_23182B0A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F265C8)
  {
    sub_2317CDA94(255, &qword_255F265D0, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_2318D5070();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F265C8);
  }
}

void sub_23182B118(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2317CDA94(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v5 = sub_2318D51CC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_23182B178(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F265E8, sub_23182B1F0);
}

void sub_23182B194(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2318D5070();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23182B1F0(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F265F0, (void (*)(uint64_t))type metadata accessor for MedicationHighlightDaysOfWeekRow);
}

uint64_t type metadata accessor for MedicationHighlightDaysOfWeekRow(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26808);
}

void sub_23182B220()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F265F8)
  {
    sub_23182B300(255);
    sub_23182AEF8(255);
    sub_23182B320(255);
    sub_2317E82EC(&qword_255F26648, 255, (uint64_t (*)(uint64_t))sub_23182B300, MEMORY[0x24BEE12D8]);
    sub_23182E750(&qword_255F26650, &qword_255F26630, (uint64_t)&unk_2318DDB58, MEMORY[0x24BEE12A8]);
    v0 = sub_2318D5358();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F265F8);
  }
}

void sub_23182B300(uint64_t a1)
{
  sub_23182850C(a1, &qword_255F26600, 255, (uint64_t (*)(uint64_t))sub_23182AEF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_23182B320(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26608, sub_23182B33C);
}

void sub_23182B33C(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26610, sub_23182B358);
}

void sub_23182B358(uint64_t a1)
{
  sub_2317D42DC(a1, &qword_255F26618, (uint64_t (*)(uint64_t))sub_23182B37C, (uint64_t (*)(void))sub_23182B470, MEMORY[0x24BDF4480]);
}

void sub_23182B37C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26620)
  {
    sub_23182AEF8(255);
    type metadata accessor for MedicationHighlightsContent.HighlightDay();
    type metadata accessor for MedicationHighlightsDayView(255);
    sub_2317E82EC(&qword_255F26628, 255, (uint64_t (*)(uint64_t))sub_23182AEF8, MEMORY[0x24BEE12D8]);
    sub_2317E82EC(&qword_255F26630, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t)&unk_2318DDB58);
    v0 = sub_2318D5358();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26620);
  }
}

uint64_t type metadata accessor for MedicationHighlightsDayView(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26778);
}

unint64_t sub_23182B470()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26638;
  if (!qword_255F26638)
  {
    sub_23182B37C();
    v2 = v1;
    v3 = sub_2317E82EC(&qword_255F26640, 255, type metadata accessor for MedicationHighlightsDayView, (uint64_t)&unk_2318DA76C);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26638);
  }
  return result;
}

void sub_23182B4EC(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26660, sub_23182AF3C);
}

void sub_23182B508(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26668, sub_23182B4EC);
}

void sub_23182B524(uint64_t a1)
{
  sub_231831898(a1, &qword_255F26678, sub_23182B508);
}

uint64_t sub_23182B538(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_23182B548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_2318D5154();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  sub_23182E2D4((uint64_t)v5);
  v6 = sub_2318D5148();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
    v7 = sub_2318D2A30();
  else
    v7 = sub_2318D2A24();
  v8 = v7;
  v9 = sub_2318D29DC();
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  v3 = *(_QWORD *)(v8 + 16);
  if (v3 < v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v10 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    v13 = sub_23189D850(v8, v1, v10, (2 * v3) | 1);
    goto LABEL_12;
  }
  v1 = v8 + 32;
  sub_2318D62D0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  if (v12 != v3 - v10)
    goto LABEL_21;
  v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BEE4AF8];
  }
LABEL_12:
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain_n();
  v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
  }
  v15 = *(_QWORD *)(v14 + 16);
  swift_release();
  if (v15 == v10)
  {
    v16 = swift_dynamicCastClass();
    if (!v16)
    {
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = sub_23189D850(v8, v1, 0, (2 * v10) | 1);
  }
  swift_bridgeObjectRelease();
  v19 = v13;
  sub_231855C94(v16);
  return v19;
}

uint64_t sub_23182B780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v97 = a2;
  v98 = a1;
  v92 = (char *)type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  v80 = *((_QWORD *)v92 - 1);
  MEMORY[0x24BDAC7A8](v92);
  v81 = v2;
  v82 = (uint64_t)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318320E4(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318320C8(0);
  MEMORY[0x24BDAC7A8](v6);
  v86 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318320AC(0);
  v89 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v96 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v88 = (uint64_t)&v79 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v95 = (uint64_t)&v79 - v13;
  v14 = sub_2318D5340();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231832030();
  v19 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231832014(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v93 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v94 = (uint64_t)&v79 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v79 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v79 - v30;
  sub_2318D5334();
  if (qword_255F24FC0 != -1)
    swift_once();
  v32 = qword_255F28638;
  KeyPath = swift_getKeyPath();
  v84 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v84(v21, v17, v14);
  v87 = v19;
  v34 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v34 = KeyPath;
  v34[1] = v32;
  v35 = *(void (**)(char *, uint64_t))(v15 + 8);
  swift_retain();
  v90 = v14;
  v85 = v35;
  v35(v17, v14);
  v83 = *((int *)v92 + 5);
  v36 = v98;
  v37 = *(double *)(v98 + v83);
  v38 = sub_2318D5364();
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, v37, 0, (uint64_t)v29, 0.0, 1, v37, 0, v38, v39, (void (*)(uint64_t, uint64_t))sub_2318325E4, (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774((uint64_t)v21, (uint64_t (*)(_QWORD))sub_231832030);
  v91 = v29;
  v92 = v31;
  sub_2317D40A8((uint64_t)v29, (uint64_t)v31, (uint64_t (*)(_QWORD))sub_231832014);
  *(_QWORD *)v5 = sub_2318D5124();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  sub_2318323F4(0, &qword_255F26A28, (void (*)(uint64_t))sub_231832108);
  v99 = sub_23182B548();
  swift_getKeyPath();
  v40 = v82;
  sub_23182E724(v36, v82);
  v41 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v42 = swift_allocObject();
  sub_2317D40A8(v40, v42 + v41, type metadata accessor for MedicationHighlightDaysOfWeekRow);
  sub_2317CDA94(0, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_23182B194(0, &qword_255F269F8, (void (*)(uint64_t))sub_2318321C8);
  sub_231832248();
  sub_231832308();
  sub_2318D534C();
  v43 = sub_2318D5364();
  v44 = v86;
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v86, 0.0, 1, 0.0, 1, v43, v45, (void (*)(uint64_t, uint64_t))sub_231832580, (uint64_t (*)(_QWORD))sub_2318320C8);
  sub_2317CF774((uint64_t)v5, (uint64_t (*)(_QWORD))sub_2318320E4);
  v46 = sub_2318D51FC();
  v47 = sub_2318D5208();
  v48 = sub_2318D5214();
  sub_2318D5214();
  if (sub_2318D5214() != v46)
    v48 = sub_2318D5214();
  sub_2318D5214();
  if (sub_2318D5214() != v47)
    v48 = sub_2318D5214();
  v49 = v98;
  v50 = v90;
  v51 = (uint64_t)v91;
  v52 = v87;
  sub_2318D501C();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v61 = v88;
  sub_2317D404C(v44, v88, (uint64_t (*)(_QWORD))sub_2318320C8);
  v62 = v61 + *(int *)(v89 + 36);
  *(_BYTE *)v62 = v48;
  *(_QWORD *)(v62 + 8) = v54;
  *(_QWORD *)(v62 + 16) = v56;
  *(_QWORD *)(v62 + 24) = v58;
  *(_QWORD *)(v62 + 32) = v60;
  *(_BYTE *)(v62 + 40) = 0;
  sub_2317CF774(v44, (uint64_t (*)(_QWORD))sub_2318320C8);
  v63 = v61;
  v64 = v95;
  sub_2317D40A8(v63, v95, (uint64_t (*)(_QWORD))sub_2318320AC);
  sub_2318D5334();
  v65 = qword_255F28638;
  v66 = swift_getKeyPath();
  v84(v21, v17, v50);
  v67 = (uint64_t *)&v21[*(int *)(v52 + 36)];
  *v67 = v66;
  v67[1] = v65;
  swift_retain();
  v85(v17, v50);
  v68 = *(double *)(v49 + v83);
  v69 = sub_2318D5364();
  v70 = v94;
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, v68, 0, v94, 0.0, 1, v68, 0, v69, v71, (void (*)(uint64_t, uint64_t))sub_2318325E4, (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774((uint64_t)v21, (uint64_t (*)(_QWORD))sub_231832030);
  sub_2317D40A8(v70, v51, (uint64_t (*)(_QWORD))sub_231832014);
  v72 = (uint64_t)v92;
  sub_2317D404C((uint64_t)v92, v70, (uint64_t (*)(_QWORD))sub_231832014);
  v73 = v96;
  sub_2317D404C(v64, v96, (uint64_t (*)(_QWORD))sub_2318320AC);
  v74 = v93;
  sub_2317D404C(v51, v93, (uint64_t (*)(_QWORD))sub_231832014);
  v75 = v97;
  sub_2317D404C(v70, v97, (uint64_t (*)(_QWORD))sub_231832014);
  sub_231831FA4();
  v77 = v76;
  sub_2317D404C(v73, v75 + *(int *)(v76 + 48), (uint64_t (*)(_QWORD))sub_2318320AC);
  sub_2317D404C(v74, v75 + *(int *)(v77 + 64), (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774(v51, (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774(v64, (uint64_t (*)(_QWORD))sub_2318320AC);
  sub_2317CF774(v72, (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774(v74, (uint64_t (*)(_QWORD))sub_231832014);
  sub_2317CF774(v73, (uint64_t (*)(_QWORD))sub_2318320AC);
  return sub_2317CF774(v70, (uint64_t (*)(_QWORD))sub_231832014);
}

__n128 sub_23182BF8C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __n128 result;
  uint64_t v32;
  _OWORD v33[13];
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t KeyPath;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = *a1;
  v4 = a1[1];
  v32 = sub_2318D5160();
  *(_QWORD *)&v33[0] = v3;
  *((_QWORD *)&v33[0] + 1) = v4;
  sub_23181B69C();
  swift_bridgeObjectRetain();
  v5 = sub_2318D5298();
  v7 = v6;
  v9 = v8 & 1;
  v10 = (void *)objc_opt_self();
  sub_2318D55BC();
  v11 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v11, 32770, *MEMORY[0x24BEBE090]);

  sub_2318D5268();
  v13 = sub_2318D5280();
  v15 = v14;
  v17 = v16;
  swift_release();
  sub_23182B538(v5, v7, v9);
  swift_bridgeObjectRelease();
  if (qword_255F24FC8 != -1)
    swift_once();
  v18 = v17 & 1;
  swift_retain();
  v19 = sub_2318D5274();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release();
  sub_23182B538(v13, v15, v18);
  swift_bridgeObjectRelease();
  v34 = v32;
  v35 = 0;
  v36 = 1;
  v37 = v19;
  v38 = v21;
  v39 = v23 & 1;
  v40 = v25;
  KeyPath = swift_getKeyPath();
  v42 = 1;
  v43 = swift_getKeyPath();
  v44 = 1;
  v45 = 0;
  sub_2318D5364();
  sub_23182A5F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1);
  sub_23182B538(v19, v21, v23 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v26 = v33[11];
  *(_OWORD *)(a2 + 160) = v33[10];
  *(_OWORD *)(a2 + 176) = v26;
  *(_OWORD *)(a2 + 192) = v33[12];
  v27 = v33[7];
  *(_OWORD *)(a2 + 96) = v33[6];
  *(_OWORD *)(a2 + 112) = v27;
  v28 = v33[9];
  *(_OWORD *)(a2 + 128) = v33[8];
  *(_OWORD *)(a2 + 144) = v28;
  v29 = v33[3];
  *(_OWORD *)(a2 + 32) = v33[2];
  *(_OWORD *)(a2 + 48) = v29;
  v30 = v33[5];
  *(_OWORD *)(a2 + 64) = v33[4];
  *(_OWORD *)(a2 + 80) = v30;
  result = (__n128)v33[1];
  *(_OWORD *)a2 = v33[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_23182C258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2318D5160();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_2318323F4(0, &qword_255F269A0, sub_231831F84);
  return sub_23182B780(v1, a1 + *(int *)(v3 + 44));
}

id sub_23182C2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;

  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v20 - v4;
  v6 = sub_2318D29B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2318D2A90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDCEF70], v6);
  sub_2318D29C4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2318D2994();
  v15 = sub_2318D29AC();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
  sub_2318D2A60();
  sub_2318D2A54();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v3, 1, v15) != 1)
  {
    v17 = (void *)sub_2318D2988();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v15);
  }
  objc_msgSend(v14, sel_setLocale_, v17);

  v18 = (void *)sub_2318D558C();
  objc_msgSend(v14, sel_setLocalizedDateFormatFromTemplate_, v18);

  return v14;
}

uint64_t sub_23182C4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(v2 + 28)) != 1)
    return 32;
  v5 = sub_23182C2B8();
  sub_2317D404C(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  v6 = (void *)sub_2318D28F8();
  v7 = sub_2318D294C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  v8 = objc_msgSend(v5, sel_stringFromDate_, v6);

  v9 = sub_2318D55BC();
  v11 = v10;

  v14[0] = v9;
  v14[1] = v11;
  sub_23181B69C();
  v12 = sub_2318D5FA0();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23182C624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_231831E7C(0, &qword_255F26990, (uint64_t (*)(void))sub_231831ED8, MEMORY[0x24BEE1768], MEMORY[0x24BDCC908]);
  v29 = *(_QWORD *)(v0 - 8);
  v30 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v28 = (char *)&v25 - v1;
  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = sub_2318D29B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D2A90();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2318D29AC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v26 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v27 = (char *)&v25 - v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCEF70], v8);
  sub_2318D29C4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2318D2994();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
  sub_2318D2A60();
  sub_2318D2A54();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    sub_23182FEC8((uint64_t)v5, (uint64_t)&qword_25418B2C0, 255, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    return 0;
  }
  else
  {
    v22 = v27;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v27, v5, v16);
    v31 = sub_23182C970();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v22, v16);
    sub_231831ED8();
    v23 = v28;
    sub_2318D2814();
    sub_231831F1C();
    v24 = v30;
    sub_2318D5FDC();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    return v32;
  }
}

uint64_t sub_23182C970()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v0 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = sub_2318D2A78();
  v3 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x24BDAC7A8](v22[0]);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - v7;
  v9 = sub_2318D29B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2318D2A90();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDCEF70], v9);
  sub_2318D29C4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_2318D2994();
  v17 = sub_2318D29AC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 0, 1, v17);
  sub_2318D2A60();
  v18 = v22[0];
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x24BDCF220], v22[0]);
  sub_2317D404C(v22[1], (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  v19 = sub_2318D2A84();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = sub_2318D294C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v2, v20);
  return v19;
}

uint64_t sub_23182CBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v26;

  v2 = v1;
  sub_2318313D8(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231831AEC(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231831B08(0);
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231831B24(0);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_2318D5160();
  *((_QWORD *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  sub_2318323F4(0, &qword_255F26958, sub_2318313F4);
  sub_23182CE44(v2, (uint64_t *)&v6[*(int *)(v18 + 44)]);
  v19 = sub_2318D5364();
  sub_23182A428(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v19, v20, (void (*)(uint64_t, uint64_t))sub_231831B38, (uint64_t (*)(_QWORD))sub_231831AEC);
  sub_2317CF774((uint64_t)v6, (uint64_t (*)(_QWORD))sub_2318313D8);
  if (*(_BYTE *)(v2 + *(int *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() + 24)))
    v21 = 0.0;
  else
    v21 = 1.0;
  sub_2317D404C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_231831AEC);
  *(double *)&v13[*(int *)(v11 + 36)] = v21;
  sub_2317CF774((uint64_t)v9, (uint64_t (*)(_QWORD))sub_231831AEC);
  v22 = sub_2318D52E0();
  v23 = sub_2318D51F0();
  sub_2317D404C((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_231831B08);
  v24 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v24 = v22;
  v24[8] = v23;
  sub_2317CF774((uint64_t)v13, (uint64_t (*)(_QWORD))sub_231831B08);
  return sub_2317D40A8((uint64_t)v17, a1, (uint64_t (*)(_QWORD))sub_231831B24);
}

uint64_t sub_23182CE44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  char v76;
  double v77;
  double *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t);
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  _OWORD *v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  double v124;
  double *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(void);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  int v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  void (*v152)(char *, _QWORD, uint64_t);
  uint64_t v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  id v158;
  uint64_t v159;
  int v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  double *v186;
  uint64_t *v187;
  uint64_t v188;
  double *v189;
  void (*v190)(uint64_t, uint64_t);
  uint64_t v191;
  uint64_t KeyPath;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unsigned __int8 v198;
  uint64_t v199;
  unsigned __int8 v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;

  v143 = a1;
  v187 = a2;
  sub_231831844(0);
  v182 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v185 = (uint64_t)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_2318D2A90();
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x24BDAC7A8](v159);
  v163 = (uint64_t)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_2318D5088();
  v6 = MEMORY[0x24BDAC7A8](v195);
  v186 = (double *)((char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v189 = (double *)((char *)&v143 - v8);
  sub_23183191C();
  v162 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v169 = (uint64_t)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231831884(0);
  v168 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v174 = (uint64_t)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231831868(0);
  v173 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v178 = (uint64_t)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_2318D5154();
  v190 = *(void (**)(uint64_t, uint64_t))(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v188 = (uint64_t)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318317A4(0);
  v172 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v181 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318317C0(0, &qword_255F268D0, v18, (void (*)(uint64_t))sub_231831A70);
  v179 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v184 = (uint64_t)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v180 = (char *)&v143 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v183 = (uint64_t)&v143 - v24;
  sub_2318D5130();
  v25 = sub_2318D528C();
  v27 = v26;
  v29 = v28 & 1;
  v30 = objc_opt_self();
  sub_2318D55BC();
  v31 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v32 = *MEMORY[0x24BEBE090];
  v158 = (id)v30;
  v33 = objc_msgSend((id)v30, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v31, 32770, v32);

  sub_2318D5268();
  v176 = sub_2318D5280();
  v175 = v34;
  v161 = v35;
  v177 = v36;
  swift_release();
  sub_23182B538(v25, v27, v29);
  swift_bridgeObjectRelease();
  v171 = sub_2318D5364();
  v170 = v37;
  *(_QWORD *)&v206 = sub_23182C4F8();
  *((_QWORD *)&v206 + 1) = v38;
  v157 = sub_23181B69C();
  v39 = sub_2318D5298();
  v41 = v40;
  v43 = v42 & 1;
  sub_2318D55BC();
  v44 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend((id)v30, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v44, 32770, v32);

  sub_2318D5268();
  v46 = sub_2318D5280();
  v48 = v47;
  LOBYTE(v30) = v49;
  swift_release();
  sub_23182B538(v39, v41, v43);
  swift_bridgeObjectRelease();
  v145 = (id)objc_opt_self();
  MEMORY[0x2348E60CC](objc_msgSend(v145, sel_secondaryLabelColor));
  v193 = sub_2318D5274();
  v167 = v50;
  v160 = v51;
  v194 = v52;
  swift_release();
  sub_23182B538(v46, v48, v30 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v191 = swift_getKeyPath();
  v53 = v143;
  *(_QWORD *)&v206 = sub_23182C624();
  *((_QWORD *)&v206 + 1) = v54;
  v55 = sub_2318D5298();
  v57 = v56;
  LOBYTE(v39) = v58 & 1;
  sub_2318D55BC();
  v59 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v60 = objc_msgSend(v158, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v59, 32770, v32);

  sub_2318D5268();
  v61 = sub_2318D5280();
  v63 = v62;
  v65 = v64;
  swift_release();
  v66 = v55;
  v67 = v53;
  sub_23182B538(v66, v57, v39);
  swift_bridgeObjectRelease();
  v68 = *(int *)(v159 + 20);
  if (*(_BYTE *)(v53 + v68) != 1)
  {
    if (qword_255F24FD8 == -1)
      goto LABEL_5;
    goto LABEL_19;
  }
  if (qword_255F24FD0 != -1)
LABEL_19:
    swift_once();
LABEL_5:
  swift_retain();
  v158 = (id)sub_2318D5274();
  v157 = v69;
  v144 = v70;
  v159 = v71;
  swift_release();
  sub_23182B538(v61, v63, v65 & 1);
  swift_bridgeObjectRelease();
  v156 = swift_getKeyPath();
  v155 = swift_getKeyPath();
  v72 = v53 + *(int *)(type metadata accessor for MedicationHighlightsDayView(0) + 20);
  v73 = v188;
  sub_23182E2D4(v188);
  sub_2318D5148();
  v74 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v190 + 1);
  v75 = v196;
  v74(v73, v196);
  sub_23182E2D4(v73);
  sub_2318D5148();
  v74(v73, v75);
  sub_2318D5364();
  sub_2318D504C();
  v151 = v197;
  v150 = v198;
  v149 = v199;
  v148 = v200;
  v147 = v201;
  v146 = v202;
  sub_23182E2D4(v73);
  v76 = sub_2318D5148();
  v190 = v74;
  v74(v73, v75);
  if ((v76 & 1) != 0)
    v77 = 8.0;
  else
    v77 = 16.0;
  v78 = v189;
  v79 = (char *)v189 + *(int *)(v195 + 20);
  v80 = *MEMORY[0x24BDEEB68];
  v81 = sub_2318D513C();
  v82 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104);
  v154 = v80;
  v153 = v81;
  v152 = v82;
  ((void (*)(char *, uint64_t))v82)(v79, v80);
  *v78 = v77;
  v78[1] = v77;
  v83 = objc_msgSend(v145, sel_labelColor);
  v84 = objc_msgSend(v83, sel_colorWithAlphaComponent_, 0.4);

  v85 = MEMORY[0x2348E60CC](v84);
  v86 = v163;
  sub_2317D404C(v67, v163, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  v87 = v164;
  sub_2318D2A6C();
  sub_2318D29E8();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v87, v166);
  v88 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(v86, v88);
  sub_2318D5034();
  v89 = MEMORY[0x24BDED998];
  v90 = v169;
  sub_2317D404C((uint64_t)v78, v169, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v91 = *(double *)&v203 * 0.5;
  v92 = v90 + *(int *)(v162 + 68);
  sub_2317D404C((uint64_t)v78, v92, (uint64_t (*)(_QWORD))v89);
  *(double *)(v92 + *(int *)(sub_2318D507C() + 20)) = v91;
  sub_231831B44();
  v94 = v92 + *(int *)(v93 + 36);
  v95 = v204;
  *(_OWORD *)v94 = v203;
  *(_OWORD *)(v94 + 16) = v95;
  *(_QWORD *)(v94 + 32) = v205;
  sub_231831BC0();
  *(_QWORD *)(v92 + *(int *)(v96 + 52)) = v85;
  *(_WORD *)(v92 + *(int *)(v96 + 56)) = 256;
  v97 = sub_2318D5364();
  v99 = v98;
  sub_231831C58();
  v101 = (uint64_t *)(v92 + *(int *)(v100 + 36));
  *v101 = v97;
  v101[1] = v99;
  sub_2317CF774((uint64_t)v78, (uint64_t (*)(_QWORD))v89);
  if (*(_BYTE *)(v67 + v68) == 1)
  {
    if (qword_255F24FE0 != -1)
      swift_once();
    v102 = &qword_255F28658;
  }
  else
  {
    if (qword_255F24FE8 != -1)
      swift_once();
    v102 = &qword_255F28660;
  }
  v103 = *v102;
  swift_retain();
  v104 = v144 & 1;
  LODWORD(v166) = v160 & 1;
  LODWORD(v189) = v161 & 1;
  v105 = sub_2318D51F0();
  v106 = v174;
  sub_2317D404C(v90, v174, (uint64_t (*)(_QWORD))sub_23183191C);
  v107 = v106 + *(int *)(v168 + 36);
  *(_QWORD *)v107 = v103;
  *(_BYTE *)(v107 + 8) = v105;
  sub_2317CF774(v90, (uint64_t (*)(_QWORD))sub_23183191C);
  v108 = v188;
  sub_23182E2D4(v188);
  sub_2318D5148();
  v109 = v196;
  v110 = v190;
  v190(v108, v196);
  sub_23182E2D4(v108);
  sub_2318D5148();
  v110(v108, v109);
  sub_2318D5364();
  sub_2318D504C();
  v111 = v178;
  sub_2317D404C(v106, v178, (uint64_t (*)(_QWORD))sub_231831884);
  v112 = (_OWORD *)(v111 + *(int *)(v173 + 36));
  v113 = v207;
  *v112 = v206;
  v112[1] = v113;
  v112[2] = v208;
  sub_2317CF774(v106, (uint64_t (*)(_QWORD))sub_231831884);
  v114 = sub_2318D5364();
  v116 = v115;
  v117 = v185;
  sub_2317D404C(v111, v185, (uint64_t (*)(_QWORD))sub_231831868);
  v118 = (uint64_t *)(v117 + *(int *)(v182 + 36));
  *v118 = v114;
  v118[1] = v116;
  v119 = (uint64_t)v181;
  sub_2317D404C(v117, (uint64_t)&v181[*(int *)(v172 + 36)], (uint64_t (*)(_QWORD))sub_231831844);
  v182 = v72;
  v120 = (uint64_t)v158;
  v121 = v157;
  *(_QWORD *)v119 = v158;
  *(_QWORD *)(v119 + 8) = v121;
  LOBYTE(v114) = v104;
  *(_BYTE *)(v119 + 16) = v104;
  v122 = v156;
  *(_QWORD *)(v119 + 24) = v159;
  *(_QWORD *)(v119 + 32) = v122;
  *(_BYTE *)(v119 + 40) = 1;
  *(_QWORD *)(v119 + 48) = v155;
  *(_QWORD *)(v119 + 56) = 1;
  *(_BYTE *)(v119 + 64) = 0;
  *(_QWORD *)(v119 + 72) = v151;
  *(_BYTE *)(v119 + 80) = v150;
  *(_QWORD *)(v119 + 88) = v149;
  *(_BYTE *)(v119 + 96) = v148;
  v123 = v146;
  *(_QWORD *)(v119 + 104) = v147;
  *(_QWORD *)(v119 + 112) = v123;
  sub_23182E708(v120, v121, v114);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2317CF774(v117, (uint64_t (*)(_QWORD))sub_231831844);
  sub_2317CF774(v111, (uint64_t (*)(_QWORD))sub_231831868);
  sub_23182B538(v120, v121, v114);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23182E2D4(v108);
  LOBYTE(v121) = sub_2318D5148();
  v190(v108, v196);
  if ((v121 & 1) != 0)
    v124 = 8.0;
  else
    v124 = 16.0;
  v125 = v186;
  v152((char *)v186 + *(int *)(v195 + 20), v154, v153);
  *v125 = v124;
  v125[1] = v124;
  v126 = (uint64_t)v180;
  v127 = (uint64_t)&v180[*(int *)(v179 + 36)];
  v128 = MEMORY[0x24BDED998];
  sub_2317D404C((uint64_t)v125, v127, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  sub_231831A70();
  *(_WORD *)(v127 + *(int *)(v129 + 36)) = 256;
  sub_2317D404C(v119, v126, (uint64_t (*)(_QWORD))sub_2318317A4);
  sub_2317CF774((uint64_t)v125, (uint64_t (*)(_QWORD))v128);
  sub_2317CF774(v119, (uint64_t (*)(_QWORD))sub_2318317A4);
  v130 = v183;
  sub_231831D24(v126, v183);
  v131 = v184;
  sub_231831D80(v130, v184);
  v132 = v187;
  v133 = v176;
  v134 = v175;
  *v187 = v176;
  v132[1] = v134;
  v135 = (char)v189;
  *((_BYTE *)v132 + 16) = (_BYTE)v189;
  v136 = v193;
  v132[3] = v177;
  v132[4] = v136;
  v137 = v167;
  v132[5] = v167;
  v138 = v166;
  *((_BYTE *)v132 + 48) = v166;
  v139 = KeyPath;
  v132[7] = v194;
  v132[8] = v139;
  *((_BYTE *)v132 + 72) = 1;
  v132[10] = v191;
  v132[11] = 1;
  *((_BYTE *)v132 + 96) = 0;
  *(_WORD *)((char *)v132 + 97) = 257;
  v140 = v170;
  v132[13] = v171;
  v132[14] = v140;
  sub_231831414();
  sub_231831D80(v131, (uint64_t)v132 + *(int *)(v141 + 48));
  sub_23182E708(v133, v134, v135);
  swift_bridgeObjectRetain();
  sub_23182E708(v136, v137, v138);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_231831DDC(v130);
  sub_231831DDC(v131);
  sub_23182B538(v133, v134, (char)v189);
  swift_bridgeObjectRelease();
  sub_23182B538(v193, v137, v138);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23182DFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;

  v0 = sub_2318D4A1C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v5 = objc_msgSend(v4, sel_displayTypeController);

  if (!v5)
  {
    __break(1u);
    return;
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
  v7 = objc_msgSend(v5, sel_displayTypeForObjectType_, v6);

  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, objc_msgSend(v7, sel_categoryIdentifier));
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, sel_color);
      if (!v10)
        v10 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
      MEMORY[0x2348E60CC](v10);

      return;
    }

  }
  sub_2318D49E0();
  v11 = sub_2318D4A10();
  v12 = sub_2318D5A48();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_2317C8000, v11, v12, "Unable to resolve hkType and/or display category. As such, we can't access the correct medication category color", v13, 2u);
    MEMORY[0x2348E77E8](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
  MEMORY[0x2348E60CC](v14);
}

uint64_t sub_23182E1D0()
{
  uint64_t result;

  result = MEMORY[0x2348E60CC](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.9, 0.9, 0.92, 1.0));
  qword_255F28638 = result;
  return result;
}

uint64_t sub_23182E21C(uint64_t a1)
{
  return sub_23182E290(a1, (SEL *)&selRef_secondaryLabelColor, &qword_255F28640);
}

uint64_t sub_23182E230()
{
  uint64_t result;

  result = sub_2318D52EC();
  qword_255F28648 = result;
  return result;
}

uint64_t sub_23182E24C(uint64_t a1)
{
  return sub_23182E290(a1, (SEL *)&selRef_secondaryLabelColor, &qword_255F28650);
}

void sub_23182E260()
{
  uint64_t v0;

  sub_23182DFA0();
  qword_255F28658 = v0;
}

uint64_t sub_23182E27C(uint64_t a1)
{
  return sub_23182E290(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_255F28660);
}

uint64_t sub_23182E290(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), *a2);
  result = MEMORY[0x2348E60CC](v4);
  *a3 = result;
  return result;
}

uint64_t sub_23182E2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_2318D5118();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0];
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - v11;
  sub_231831E30(v2, (uint64_t)v20 - v11, &qword_2541880D0, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2318D5154();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    v15 = sub_2318D5A48();
    v16 = sub_2318D51E4();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v18 = 136315138;
      v20[2] = sub_231851EBC(0xD000000000000013, 0x80000002318E1CD0, &v21);
      sub_2318D5F70();
      _os_log_impl(&dword_2317C8000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v19, -1, -1);
      MEMORY[0x2348E77E8](v18, -1, -1);
    }

    sub_2318D510C();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_23182E534@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2318D50DC();
  *a1 = result;
  return result;
}

uint64_t sub_23182E55C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2318D50DC();
  *a1 = result;
  return result;
}

uint64_t sub_23182E584()
{
  return sub_2318D50E8();
}

uint64_t sub_23182E5A8()
{
  return sub_2318D50E8();
}

uint64_t sub_23182E5CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2318D50F4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23182E5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_2318D50F4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23182E62C()
{
  return sub_2318D5100();
}

uint64_t sub_23182E658()
{
  return sub_2318D5100();
}

unint64_t sub_23182E684()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F26690;
  if (!qword_255F26690)
  {
    sub_23182B33C(255);
    v2 = v1;
    v3[0] = sub_2317E82EC(&qword_255F26698, 255, (uint64_t (*)(uint64_t))sub_23182B358, MEMORY[0x24BDF4498]);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F26690);
  }
  return result;
}

uint64_t sub_23182E708(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_23182E718(uint64_t a1, uint64_t a2)
{
  return sub_2317D404C(a1, a2, (uint64_t (*)(_QWORD))sub_23182B33C);
}

uint64_t sub_23182E724(uint64_t a1, uint64_t a2)
{
  return sub_2317D404C(a1, a2, type metadata accessor for MedicationHighlightDaysOfWeekRow);
}

void sub_23182E730(uint64_t a1)
{
  sub_23182850C(a1, &qword_255F266C8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE43CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_23182E750(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_23182AEF8(255);
    v10 = v9;
    v11 = sub_2317E82EC(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, a3);
    result = MEMORY[0x2348E7734](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23182E7D4(char *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint8_t *v52;
  void *v53;
  void *v54;
  id v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  void *v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  id v98;
  char *v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  NSObject *v116;
  os_log_type_t v117;
  char *v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  unint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  char *v133;
  void (*v134)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(void);
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  char *v151;
  uint8_t *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v149 = a1;
  v143 = sub_2318D2A78();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v140 = (char *)&v133 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23182850C(0, (unint64_t *)&qword_25418B300, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v141 = (char *)&v133 - v4;
  v167 = sub_2318D4A1C();
  v139 = *(_QWORD *)(v167 - 8);
  v5 = MEMORY[0x24BDAC7A8](v167);
  v151 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v153 = (char *)&v133 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v136 = (char *)&v133 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v155 = (char *)&v133 - v11;
  v163 = sub_2318D2718();
  v154 = *(_QWORD *)(v163 - 8);
  v12 = MEMORY[0x24BDAC7A8](v163);
  v148 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v162 = (char *)&v133 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v138 = (char *)&v133 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v161 = (char *)&v133 - v18;
  v19 = sub_2318D294C();
  v152 = *(uint8_t **)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v133 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v160 = (char *)&v133 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v168 = (char *)&v133 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v164 = (char *)&v133 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v133 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v133 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v133 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v133 - v37;
  sub_23182850C(0, (unint64_t *)&qword_25418B2C0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v2);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v133 - v40;
  v42 = sub_2318D29B8();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v133 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_2318D2A90();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v47 = (char *)&v133 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v45, *MEMORY[0x24BDCEF70], v42);
  sub_2318D29C4();
  v48 = v42;
  v49 = v163;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v48);
  sub_2318D2994();
  v50 = sub_2318D29AC();
  v51 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v135 = v50;
  v134 = v51;
  ((void (*)(char *, _QWORD, uint64_t))v51)(v41, 0, 1);
  v137 = v41;
  v52 = v152;
  sub_2318D2A60();
  sub_2318D2940();
  sub_2318D29D0();
  v150 = (void (*)(char *, uint64_t))*((_QWORD *)v52 + 1);
  v150(v36, v19);
  v166 = v47;
  v53 = (void *)sub_2318D2A18();
  v54 = (void *)sub_2318D28F8();
  v55 = objc_msgSend(v53, sel_hk_startOfDateBySubtractingDays_fromDate_, 27, v54);

  sub_2318D2928();
  v56 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v52 + 2);
  v56(v36, v33, v19);
  v159 = v38;
  v157 = v19;
  v156 = v56;
  v56(v30, v38, v19);
  v158 = v36;
  v145 = v30;
  sub_2318D26E8();
  sub_2318D49E0();
  v57 = v138;
  v144 = *(void (**)(void))(v154 + 16);
  v144();
  v58 = sub_2318D4A10();
  v59 = sub_2318D5A24();
  v60 = os_log_type_enabled(v58, v59);
  v165 = v33;
  if (v60)
  {
    v61 = (uint8_t *)swift_slowAlloc();
    v62 = swift_slowAlloc();
    v172 = v62;
    *(_DWORD *)v61 = 136315138;
    sub_2317E82EC(&qword_255F266D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
    v63 = sub_2318D6288();
    v171 = sub_231851EBC(v63, v64, &v172);
    v65 = v167;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    v154 = *(_QWORD *)(v154 + 8);
    ((void (*)(char *, uint64_t))v154)(v57, v49);
    _os_log_impl(&dword_2317C8000, v58, v59, "InnerInterval = %s", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v62, -1, -1);
    v66 = v61;
    v52 = v152;
    v33 = v165;
    MEMORY[0x2348E77E8](v66, -1, -1);

    v67 = *(void (**)(char *, uint64_t))(v139 + 8);
    v67(v155, v65);
  }
  else
  {
    v154 = *(_QWORD *)(v154 + 8);
    ((void (*)(char *, uint64_t))v154)(v57, v49);

    v67 = *(void (**)(char *, uint64_t))(v139 + 8);
    v67(v155, v167);
  }
  v68 = v164;
  v69 = v33;
  v70 = v157;
  v71 = v156;
  v156(v164, v69, v157);
  v71(v168, v159, v70);
  v72 = (void *)sub_2318D2A18();
  v73 = sub_2318D29DC();
  v74 = (void *)sub_2318D28F8();
  v75 = objc_msgSend(v72, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v73, v74, 1);

  sub_2318D2928();
  v76 = v142;
  v77 = v140;
  v78 = v143;
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v140, *MEMORY[0x24BDCF220], v143);
  v79 = (uint64_t)v141;
  sub_2318D2A48();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  v80 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v52 + 6))(v79, 1, v70);
  v81 = v153;
  v82 = v68;
  v155 = (char *)v67;
  if (v80 == 1)
  {
    sub_23182FEC8(v79, (uint64_t)&qword_25418B300, 255, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
  }
  else
  {
    v83 = v133;
    (*((void (**)(char *, uint64_t, uint64_t))v52 + 4))(v133, v79, v70);
    (*((void (**)(char *, char *, uint64_t))v52 + 3))(v168, v83, v70);
    v84 = v136;
    sub_2318D49E0();
    v85 = sub_2318D4A10();
    v86 = sub_2318D5A24();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc();
      v88 = swift_slowAlloc();
      v172 = v88;
      *(_DWORD *)v87 = 136315138;
      swift_beginAccess();
      v89 = (uint64_t)v137;
      sub_2318D29A0();
      v134(v89, 0, 1, v135);
      v90 = sub_2318D28A4();
      v92 = v91;
      sub_23182FEC8(v89, (uint64_t)&qword_25418B2C0, 255, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
      v171 = sub_231851EBC(v90, v92, &v172);
      v82 = v164;
      v67 = (void (*)(char *, uint64_t))v155;
      sub_2318D5F70();
      v81 = v153;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v85, v86, "OuterEnd changed to %s", v87, 0xCu);
      swift_arrayDestroy();
      v93 = v88;
      v52 = v152;
      MEMORY[0x2348E77E8](v93, -1, -1);
      MEMORY[0x2348E77E8](v87, -1, -1);

      v67(v136, v167);
      v94 = v133;
    }
    else
    {

      v67(v84, v167);
      v94 = v83;
    }
    v150(v94, v70);
  }
  v95 = (void *)sub_2318D2A18();
  v96 = sub_2318D29DC();
  v97 = (void *)sub_2318D28F8();
  v98 = objc_msgSend(v95, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v96, v97, 0);

  v99 = v158;
  sub_2318D2928();

  (*((void (**)(char *, char *, uint64_t))v52 + 5))(v82, v99, v70);
  sub_2318D49E0();
  v100 = sub_2318D4A10();
  v101 = sub_2318D5A24();
  if (os_log_type_enabled(v100, v101))
  {
    v102 = (uint8_t *)swift_slowAlloc();
    v103 = swift_slowAlloc();
    v172 = v103;
    *(_DWORD *)v102 = 136315138;
    v152 = v102 + 4;
    swift_beginAccess();
    v104 = (uint64_t)v137;
    sub_2318D29A0();
    v134(v104, 0, 1, v135);
    v105 = sub_2318D28A4();
    v107 = v106;
    sub_23182FEC8(v104, (uint64_t)&qword_25418B2C0, 255, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_23182850C);
    v171 = sub_231851EBC(v105, v107, &v172);
    v67 = (void (*)(char *, uint64_t))v155;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v100, v101, "OuterStart changed to %s", v102, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v103, -1, -1);
    MEMORY[0x2348E77E8](v102, -1, -1);

    v108 = v153;
  }
  else
  {

    v108 = v81;
  }
  v67(v108, v167);
  v109 = v163;
  v110 = v151;
  v111 = v148;
  swift_beginAccess();
  v112 = v82;
  v113 = v156;
  v156(v158, v112, v70);
  v114 = v168;
  swift_beginAccess();
  v113(v145, v114, v70);
  v115 = v162;
  sub_2318D26E8();
  sub_2318D49E0();
  ((void (*)(char *, char *, uint64_t))v144)(v111, v115, v109);
  v116 = sub_2318D4A10();
  v117 = sub_2318D5A24();
  if (os_log_type_enabled(v116, v117))
  {
    v118 = v111;
    v119 = (uint8_t *)swift_slowAlloc();
    v120 = swift_slowAlloc();
    v170 = v120;
    *(_DWORD *)v119 = 136315138;
    sub_2317E82EC(&qword_255F266D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
    v121 = sub_2318D6288();
    v169 = sub_231851EBC(v121, v122, &v170);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    v123 = (void (*)(char *, uint64_t))v154;
    ((void (*)(char *, uint64_t))v154)(v118, v109);
    _os_log_impl(&dword_2317C8000, v116, v117, "OuterInterval = %s", v119, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v120, -1, -1);
    MEMORY[0x2348E77E8](v119, -1, -1);

    ((void (*)(char *, uint64_t))v155)(v151, v167);
  }
  else
  {
    v123 = (void (*)(char *, uint64_t))v154;
    ((void (*)(char *, uint64_t))v154)(v111, v109);

    v67(v110, v167);
  }
  v124 = (uint64_t)v166;
  v125 = v162;
  v126 = sub_2318271F8((uint64_t)v166);
  MEMORY[0x24BDAC7A8](v126);
  *(&v133 - 6) = v149;
  *(&v133 - 5) = (char *)v124;
  v127 = v161;
  *(&v133 - 4) = v125;
  *(&v133 - 3) = v127;
  v128 = v165;
  *(&v133 - 2) = v165;
  v129 = sub_231824780((void (*)(_QWORD))sub_23182FBF8, (uint64_t)(&v133 - 8), v126);
  v130 = v157;
  v131 = v150;
  v150(v160, v157);
  v131(v159, v130);
  v123(v125, v109);
  v123(v127, v109);
  v131(v128, v130);
  (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v124, v147);
  swift_bridgeObjectRelease();
  v131(v168, v130);
  v131(v164, v130);
  return v129;
}

uint64_t sub_23182F830(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  _BOOL4 v11;
  BOOL v12;
  uint64_t result;
  BOOL v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;

  v6 = a3;
  v7 = a2;
  v8 = a1;
  v9 = 0;
  v10 = a1;
  while (1)
  {
    v11 = v10 <= a2;
    if (a3 > 0)
      v11 = v10 >= a2;
    if (v11)
      break;
    v12 = __OFADD__(v10, a3);
    v10 += a3;
    if (v12)
      v10 = (v10 >> 63) ^ 0x8000000000000000;
    v12 = __OFADD__(v9++, 1);
    if (v12)
    {
      __break(1u);
      break;
    }
  }
  v38 = MEMORY[0x24BEE4AF8];
  result = sub_23186E404(0, v9, 0);
  v36 = v7;
  if (v9)
  {
    v34 = v6;
    v35 = *(_QWORD *)(a4 + 16);
    while (1)
    {
      v14 = v8 <= v7;
      if (v6 > 0)
        v14 = v8 >= v7;
      if (v14)
        break;
      if (__OFADD__(v8, v6))
        v15 = ((v8 + v6) >> 63) ^ 0x8000000000000000;
      else
        v15 = v8 + v6;
      if (__OFADD__(v8, a5))
        goto LABEL_61;
      if (v35 >= v8 + a5)
        v16 = v8 + a5;
      else
        v16 = v35;
      if (v16 < v8)
        goto LABEL_62;
      if (v8 < 0)
        goto LABEL_63;
      sub_2318D62D0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v17 = swift_dynamicCastClass();
      if (!v17)
      {
        swift_bridgeObjectRelease();
        v17 = MEMORY[0x24BEE4AF8];
      }
      v18 = *(_QWORD *)(v17 + 16);
      swift_release();
      if (v18 == v16 - v8)
      {
        v19 = swift_dynamicCastClass();
        v6 = v34;
        v7 = v36;
        if (!v19)
        {
          swift_bridgeObjectRelease();
          v19 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8)
                                 + 80);
        v19 = sub_23189D9CC(a4, a4 + ((v22 + 32) & ~v22), v8, (2 * v16) | 1);
        v6 = v34;
        v7 = v36;
      }
      result = swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v38 + 16);
      v20 = *(_QWORD *)(v38 + 24);
      if (v21 >= v20 >> 1)
        result = sub_23186E404(v20 > 1, v21 + 1, 1);
      *(_QWORD *)(v38 + 16) = v21 + 1;
      *(_QWORD *)(v38 + 8 * v21 + 32) = v19;
      v8 = v15;
      if (!--v9)
        goto LABEL_35;
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
    v15 = v8;
LABEL_35:
    v23 = v15 <= v7;
    if (v6 > 0)
      v23 = v15 >= v7;
    if (v23)
      return v38;
    while (1)
    {
      v24 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5))
        break;
      if (*(_QWORD *)(a4 + 16) >= v15 + a5)
        v25 = v15 + a5;
      else
        v25 = *(_QWORD *)(a4 + 16);
      if (v25 < v15)
        goto LABEL_65;
      if (v15 < 0)
        goto LABEL_66;
      sub_2318D62D0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        v26 = MEMORY[0x24BEE4AF8];
      }
      v27 = *(_QWORD *)(v26 + 16);
      swift_release();
      if (v27 == v25 - v15)
      {
        v28 = swift_dynamicCastClass();
        v29 = v36;
        if (!v28)
        {
          swift_bridgeObjectRelease();
          v28 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v33 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8)
                                 + 80);
        v28 = sub_23189D9CC(a4, a4 + ((v33 + 32) & ~v33), v15, (2 * v25) | 1);
        v29 = v36;
      }
      result = swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v38 + 16);
      v30 = *(_QWORD *)(v38 + 24);
      if (v31 >= v30 >> 1)
        result = sub_23186E404(v30 > 1, v31 + 1, 1);
      *(_QWORD *)(v38 + 16) = v31 + 1;
      *(_QWORD *)(v38 + 8 * v31 + 32) = v28;
      v32 = v24 <= v29;
      if (v6 > 0)
        v32 = v24 >= v29;
      v15 = v24;
      if (v32)
        return v38;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_23182FBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_23182752C(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

void sub_23182FC18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26700)
  {
    v0 = sub_2318D51C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26700);
  }
}

uint64_t sub_23182FC7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_2317CDA94(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_23182FCD4(uint64_t *a1)
{
  sub_23182FD08(*a1, a1[1]);
  return a1;
}

uint64_t sub_23182FD08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23182FD58(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23182FD80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23182850C(0, a3, 255, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_23182FDD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23182850C(0, a3, 255, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

id sub_23182FE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_231825B68(v1, a1);
}

void sub_23182FE30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26710)
  {
    type metadata accessor for MedicationHighlightsView(255);
    sub_2317E82EC((unint64_t *)&qword_254188068, 255, type metadata accessor for MedicationHighlightsView, (uint64_t)&unk_2318DA28C);
    v0 = sub_2318D51C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26710);
  }
}

uint64_t sub_23182FEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;

  v6 = a5(0, a2, a3, a4, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationHighlightsView.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationHighlightsView.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23182FFEC + 4 * byte_2318DA169[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_231830020 + 4 * byte_2318DA164[v4]))();
}

uint64_t sub_231830020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231830028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231830030);
  return result;
}

uint64_t sub_23183003C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231830044);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_231830048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231830050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationHighlightsView.Model.CodingKeys()
{
  return &type metadata for MedicationHighlightsView.Model.CodingKeys;
}

_QWORD *sub_23183006C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2318D294C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
    *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
    *((_BYTE *)a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2318D5154();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2318301A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_2318D5154();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23183024C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2318D5154();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_231830354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_2318289A0(a1 + v8);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2318D5154();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23183046C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v8 = *(int *)(a3 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  v12 = v11;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_2318D5154();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_231830578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2318D294C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(_BYTE *)(a1 + v7[5]) = *(_BYTE *)(a2 + v7[5]);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_2318289A0(a1 + v8);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2318D5154();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_231830694()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2318306A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_231830730()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23183073C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2318307D4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for MedicationHighlightsContent.HighlightDay();
  if (v0 <= 0x3F)
  {
    sub_23182850C(319, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_231830874(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2318D2A90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2318D5154();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23183098C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_2318D5154();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_231830A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2318D5154();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_231830B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_2318289A0(a1 + v7);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_2318D5154();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_231830C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2318D5154();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_231830CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_2318289A0(a1 + v7);
    sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2318D5154();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_231830DF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231830DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2318D2A90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_231830E8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231830E98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_2318D2A90();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_23182850C(0, &qword_255F26578, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB580]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_231830F30()
{
  unint64_t v0;
  unint64_t v1;

  sub_2318D2A90();
  if (v0 <= 0x3F)
  {
    sub_23182850C(319, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_231830FDC()
{
  return sub_23183160C(&qword_255F26848, (uint64_t (*)(uint64_t))sub_23182B524, sub_231831010, (uint64_t (*)(void))sub_2318310B8);
}

uint64_t sub_231831010()
{
  return sub_231832648(&qword_255F26850, (uint64_t (*)(uint64_t))sub_23182B508, (uint64_t (*)(void))sub_231831034, MEMORY[0x24BDEDB80]);
}

unint64_t sub_231831034()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F26858;
  if (!qword_255F26858)
  {
    sub_23182B4EC(255);
    v2 = v1;
    v3[0] = sub_2317E82EC(&qword_255F26860, 255, (uint64_t (*)(uint64_t))sub_23182AF3C, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F26858);
  }
  return result;
}

unint64_t sub_2318310B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26868;
  if (!qword_255F26868)
  {
    sub_231831CDC(255, &qword_255F26680, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDF06D0], v1);
    atomic_store(result, (unint64_t *)&qword_255F26868);
  }
  return result;
}

uint64_t sub_231831120()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_231831134()
{
  unint64_t result;

  result = qword_255F26870;
  if (!qword_255F26870)
  {
    result = MEMORY[0x2348E7734](&unk_2318DA744, &type metadata for MedicationHighlightsView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F26870);
  }
  return result;
}

uint64_t sub_231831178()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23183118C()
{
  unint64_t result;

  result = qword_254188020;
  if (!qword_254188020)
  {
    result = MEMORY[0x2348E7734](&unk_2318DA6B4, &type metadata for MedicationHighlightsView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188020);
  }
  return result;
}

unint64_t sub_2318311D4()
{
  unint64_t result;

  result = qword_254188018;
  if (!qword_254188018)
  {
    result = MEMORY[0x2348E7734](&unk_2318DA6DC, &type metadata for MedicationHighlightsView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188018);
  }
  return result;
}

uint64_t sub_231831218(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697461636964656DLL && a2 == 0xEE00656D614E6E6FLL;
  if (v2 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002318E1C10 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002318E1C30 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_2318313D8(uint64_t a1)
{
  sub_231832780(a1, &qword_255F26878, (uint64_t (*)(uint64_t))sub_2318313F4, &qword_255F26938);
}

void sub_2318313F4(uint64_t a1)
{
  sub_23182850C(a1, &qword_255F26880, 255, (uint64_t (*)(uint64_t))sub_231831414, MEMORY[0x24BDF53F0]);
}

void sub_231831414()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26888)
  {
    sub_231831498();
    sub_2318317C0(255, &qword_255F268D0, sub_2318317A4, (void (*)(uint64_t))sub_231831A70);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26888);
  }
}

void sub_231831498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26890)
  {
    sub_2318314F4();
    v0 = sub_2318D5070();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26890);
  }
}

void sub_2318314F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26898)
  {
    sub_23182B194(255, &qword_255F268A0, (void (*)(uint64_t))sub_23182B028);
    sub_23183156C();
    v0 = sub_2318D50A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26898);
  }
}

unint64_t sub_23183156C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F268A8;
  if (!qword_255F268A8)
  {
    sub_23182B194(255, &qword_255F268A0, (void (*)(uint64_t))sub_23182B028);
    v2 = v1;
    v3[0] = sub_23183160C((unint64_t *)&qword_255F268B0, (uint64_t (*)(uint64_t))sub_23182B028, (uint64_t (*)(void))sub_23183167C, (uint64_t (*)(void))sub_231831744);
    v3[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F268A8);
  }
  return result;
}

uint64_t sub_23183160C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23183167C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_255F268B8;
  if (!qword_255F268B8)
  {
    sub_23182B0A4();
    v2 = v1;
    v3 = sub_2318316E4();
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255F268B8);
  }
  return result;
}

unint64_t sub_2318316E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F268C0;
  if (!qword_255F268C0)
  {
    sub_2317CDA94(255, &qword_255F265D0, MEMORY[0x24BDEC3D0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255F268C0);
  }
  return result;
}

unint64_t sub_231831744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F268C8;
  if (!qword_255F268C8)
  {
    sub_23182B118(255, (unint64_t *)&qword_255F265D8, &qword_255F265E0, MEMORY[0x24BEE1768]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255F268C8);
  }
  return result;
}

void sub_2318317A4(uint64_t a1)
{
  sub_2318317C0(a1, &qword_255F268D8, sub_231831828, sub_231831844);
}

void sub_2318317C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    v6 = sub_2318D5070();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_231831828(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F268E0, (void (*)(uint64_t))sub_23182B028);
}

void sub_231831844(uint64_t a1)
{
  sub_2317D42DC(a1, &qword_255F268E8, (uint64_t (*)(uint64_t))sub_231831868, (uint64_t (*)(void))sub_2318319C8, MEMORY[0x24BDEF358]);
}

void sub_231831868(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F268F0, sub_231831884);
}

void sub_231831884(uint64_t a1)
{
  sub_231831898(a1, &qword_255F268F8, (void (*)(uint64_t))sub_23183191C);
}

void sub_231831898(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_231831CDC(255, &qword_255F26680, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06B8]);
    v4 = sub_2318D5070();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23183191C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26900)
  {
    sub_2318D5088();
    sub_2317E82EC(&qword_255F26908, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED980]);
    v0 = sub_2318D519C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26900);
  }
}

unint64_t sub_2318319C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F26910;
  if (!qword_255F26910)
  {
    sub_231831868(255);
    v2 = v1;
    v3[0] = sub_23183160C(&qword_255F26918, (uint64_t (*)(uint64_t))sub_231831884, sub_231831A50, (uint64_t (*)(void))sub_2318310B8);
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F26910);
  }
  return result;
}

uint64_t sub_231831A50()
{
  return sub_2317E82EC(&qword_255F26920, 255, (uint64_t (*)(uint64_t))sub_23183191C, MEMORY[0x24BDEFA70]);
}

void sub_231831A70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26928)
  {
    sub_2318D5088();
    sub_2317E82EC(&qword_255F26930, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    v0 = sub_2318D5040();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26928);
  }
}

void sub_231831AEC(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26940, sub_2318313D8);
}

void sub_231831B08(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F26948, sub_231831AEC);
}

void sub_231831B24(uint64_t a1)
{
  sub_231831898(a1, &qword_255F26950, sub_231831B08);
}

uint64_t sub_231831B38(uint64_t a1, uint64_t a2)
{
  return sub_2317D404C(a1, a2, (uint64_t (*)(_QWORD))sub_2318313D8);
}

void sub_231831B44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26960)
  {
    sub_2318D507C();
    sub_2317E82EC(&qword_255F26968, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDED970], MEMORY[0x24BDED968]);
    v0 = sub_2318D5058();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26960);
  }
}

void sub_231831BC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26970)
  {
    sub_231831B44();
    sub_2317E82EC(&qword_255F26978, 255, (uint64_t (*)(uint64_t))sub_231831B44, MEMORY[0x24BDEC4B8]);
    v0 = sub_2318D5028();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26970);
  }
}

void sub_231831C58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26980)
  {
    sub_231831BC0();
    sub_231831CDC(255, &qword_255F26988, MEMORY[0x24BDF5158], MEMORY[0x24BDF5138], MEMORY[0x24BDEF358]);
    v0 = sub_2318D5070();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26980);
  }
}

void sub_231831CDC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_231831D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318317C0(0, &qword_255F268D0, sub_2318317A4, (void (*)(uint64_t))sub_231831A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231831D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318317C0(0, &qword_255F268D0, sub_2318317A4, (void (*)(uint64_t))sub_231831A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231831DDC(uint64_t a1)
{
  uint64_t v2;

  sub_2318317C0(0, &qword_255F268D0, sub_2318317A4, (void (*)(uint64_t))sub_231831A70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231831E30(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_23182850C(0, a3, 255, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_231831E7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_231831ED8()
{
  unint64_t result;

  result = qword_25418B510;
  if (!qword_25418B510)
  {
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25418B510);
  }
  return result;
}

unint64_t sub_231831F1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26998;
  if (!qword_255F26998)
  {
    sub_231831E7C(255, &qword_255F26990, (uint64_t (*)(void))sub_231831ED8, MEMORY[0x24BEE1768], MEMORY[0x24BDCC908]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDCC928], v1);
    atomic_store(result, (unint64_t *)&qword_255F26998);
  }
  return result;
}

void sub_231831F84(uint64_t a1)
{
  sub_23182850C(a1, &qword_255F269A8, 255, (uint64_t (*)(uint64_t))sub_231831FA4, MEMORY[0x24BDF53F0]);
}

void sub_231831FA4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F269B0)
  {
    sub_231832014(255);
    sub_2318320AC(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F269B0);
  }
}

void sub_231832014(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F269B8, (void (*)(uint64_t))sub_231832030);
}

void sub_231832030()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F269C0)
  {
    sub_2318D5340();
    sub_23182B118(255, &qword_255F269C8, &qword_255F269D0, MEMORY[0x24BDF3E48]);
    v0 = sub_2318D5070();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F269C0);
  }
}

void sub_2318320AC(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F269D8, sub_2318320C8);
}

void sub_2318320C8(uint64_t a1)
{
  sub_23182B194(a1, &qword_255F269E0, sub_2318320E4);
}

void sub_2318320E4(uint64_t a1)
{
  sub_2317D42DC(a1, &qword_255F269E8, (uint64_t (*)(uint64_t))sub_231832108, (uint64_t (*)(void))sub_2318322A8, MEMORY[0x24BDF4480]);
}

void sub_231832108()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F269F0)
  {
    sub_2317CDA94(255, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_23182B194(255, &qword_255F269F8, (void (*)(uint64_t))sub_2318321C8);
    sub_231832248();
    v0 = sub_2318D5358();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F269F0);
  }
}

void sub_2318321C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F26A00)
  {
    sub_23182B028();
    sub_23183160C((unint64_t *)&qword_255F268B0, (uint64_t (*)(uint64_t))sub_23182B028, (uint64_t (*)(void))sub_23183167C, (uint64_t (*)(void))sub_231831744);
    v0 = sub_2318D531C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F26A00);
  }
}

unint64_t sub_231832248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26A08;
  if (!qword_255F26A08)
  {
    sub_2317CDA94(255, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_255F26A08);
  }
  return result;
}

unint64_t sub_2318322A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_255F26A10;
  if (!qword_255F26A10)
  {
    sub_231832108();
    v2 = v1;
    v3 = sub_231832308();
    result = MEMORY[0x2348E7734](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26A10);
  }
  return result;
}

unint64_t sub_231832308()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F26A18;
  if (!qword_255F26A18)
  {
    sub_23182B194(255, &qword_255F269F8, (void (*)(uint64_t))sub_2318321C8);
    v2 = v1;
    v3[0] = sub_2317E82EC(&qword_255F26A20, 255, (uint64_t (*)(uint64_t))sub_2318321C8, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F26A18);
  }
  return result;
}

uint64_t sub_2318323A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2318D50C4();
  *a1 = result;
  return result;
}

uint64_t sub_2318323CC()
{
  swift_retain();
  return sub_2318D50D0();
}

void sub_2318323F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2318D5064();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231832458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 24);
  sub_23182850C(0, &qword_2541880D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEEA0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2318D5154();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

double sub_231832534@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  *(_QWORD *)&result = sub_23182BF8C(a1, a2).n128_u64[0];
  return result;
}

uint64_t sub_231832580(uint64_t a1, uint64_t a2)
{
  return sub_2317D404C(a1, a2, (uint64_t (*)(_QWORD))sub_2318320E4);
}

uint64_t sub_23183258C(uint64_t a1)
{
  sub_23182E708(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2318325E4(uint64_t a1, uint64_t a2)
{
  return sub_2317D404C(a1, a2, (uint64_t (*)(_QWORD))sub_231832030);
}

uint64_t sub_2318325F0()
{
  return sub_23183160C(&qword_255F26A30, (uint64_t (*)(uint64_t))sub_231831B24, sub_231832624, (uint64_t (*)(void))sub_2318310B8);
}

uint64_t sub_231832624()
{
  return sub_231832648(&qword_255F26A38, (uint64_t (*)(uint64_t))sub_231831B08, (uint64_t (*)(void))sub_2318326B0, MEMORY[0x24BDECC38]);
}

uint64_t sub_231832648(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2318326B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F26A40;
  if (!qword_255F26A40)
  {
    sub_231831AEC(255);
    v2 = v1;
    v3[0] = sub_2317E82EC(&qword_255F26A48, 255, (uint64_t (*)(uint64_t))sub_2318313D8, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348E7734](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F26A40);
  }
  return result;
}

uint64_t sub_231832734()
{
  return sub_2317E82EC(&qword_255F26A50, 255, (uint64_t (*)(uint64_t))sub_231832764, MEMORY[0x24BDF4700]);
}

void sub_231832764(uint64_t a1)
{
  sub_231832780(a1, &qword_255F26A58, (uint64_t (*)(uint64_t))sub_231831F84, &qword_255F26A60);
}

void sub_231832780(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_2317E82EC(a4, 255, a3, MEMORY[0x24BDF5428]);
    v7 = sub_2318D531C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23183280C()
{
  uint64_t v0;

  v0 = sub_2318D54C0();
  sub_23183B85C(v0, qword_255F28678);
  sub_2317D4090(v0, (uint64_t)qword_255F28678);
  sub_2318D2664();
  return sub_2318D5490();
}

void sub_23183285C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_2318D297C();
  MEMORY[0x24BDAC7A8](v5);
  v1 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23183A8C8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)&loc_231832910 + *((int *)qword_231832DE8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_231832920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
  v6 = *(_QWORD *)(v3 + *(int *)(v5 + 48));
  *(_QWORD *)(v4 - 96) = 0;
  *(_QWORD *)(v4 - 88) = 0xE000000000000000;
  sub_2318D60C0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 96) = 60;
  *(_QWORD *)(v4 - 88) = 0xE100000000000000;
  *(_QWORD *)(v4 - 104) = v2;
  sub_23183A90C();
  sub_2318D55E0();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_13;
LABEL_3:
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 104) = MEMORY[0x24BEE4AF8];
  sub_23186E30C(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
    JUMPOUT(0x231832DE8);
  }
  v8 = 0;
  v9 = *(_QWORD *)(v4 - 104);
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
      MEMORY[0x2348E6E94](v8, v6);
    else
      swift_retain();
    v10 = (void *)sub_2318D45E4();
    v11 = objc_msgSend(v10, sel_UUID);

    sub_2318D2964();
    swift_release();

    *(_QWORD *)(v4 - 104) = v9;
    v13 = *(_QWORD *)(v9 + 16);
    v12 = *(_QWORD *)(v9 + 24);
    if (v13 >= v12 >> 1)
    {
      sub_23186E30C(v12 > 1, v13 + 1, 1);
      v9 = *(_QWORD *)(v4 - 104);
    }
    ++v8;
    *(_QWORD *)(v9 + 16) = v13 + 1;
    (*(void (**)(unint64_t, uint64_t, _QWORD))(v0 + 32))(v9+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v13, v1, *(_QWORD *)(v4 - 112));
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v4 - 120);
LABEL_14:
  MEMORY[0x2348E6558](v9, *(_QWORD *)(v4 - 112));
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v14 = *(_QWORD *)(v4 - 96);
  v15 = sub_2318D54C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v3, v15);
  return v14;
}

uint64_t sub_231832E00(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  result = sub_2318D6174();
  v2 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x2348E6E94](v4, a1);
      else
        swift_retain();
      v6 = (void *)sub_2318D45E4();
      v7 = objc_msgSend(v6, sel_medicationIdentifier);

      v8 = sub_2318D55BC();
      v10 = v9;
      swift_release();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_2317EBDA4(0, v5[2] + 1, 1, v5);
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
        v5 = sub_2317EBDA4((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      ++v4;
      v5[2] = v12 + 1;
      v13 = &v5[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
    }
    while (v2 != v4);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_231832F90(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = sub_2318D4710();
  v3 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  v38 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_2318D6174();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = 0;
      v32 = a1 & 0xC000000000000001;
      v29 = a1 + 32;
      v8 = MEMORY[0x24BEE4AF8];
      v30 = v6;
      v31 = a1;
      while (1)
      {
        if (v32)
        {
          v9 = MEMORY[0x2348E6E94](v7, a1);
          v10 = __OFADD__(v7++, 1);
          if (v10)
            goto LABEL_20;
        }
        else
        {
          v9 = *(_QWORD *)(v29 + 8 * v7);
          swift_retain();
          v10 = __OFADD__(v7++, 1);
          if (v10)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v11 = sub_2318D4680();
        v12 = *(_QWORD *)(v11 + 16);
        if (v12)
        {
          v34 = v9;
          v35 = v8;
          v36 = v7;
          v13 = v38;
          v14 = v11 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
          v33 = v11;
          swift_bridgeObjectRetain();
          v15 = *(_QWORD *)(v13 + 72);
          v16 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
          v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
          do
          {
            v18 = v37;
            v16(v5, v14, v37);
            v19 = (void *)sub_2318D46F8();
            v20 = objc_msgSend(v19, sel_medicationIdentifier);

            v21 = sub_2318D55BC();
            v23 = v22;

            (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v18);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_2317EBDA4(0, v17[2] + 1, 1, v17);
            v25 = v17[2];
            v24 = v17[3];
            if (v25 >= v24 >> 1)
              v17 = sub_2317EBDA4((_QWORD *)(v24 > 1), v25 + 1, 1, v17);
            v17[2] = v25 + 1;
            v26 = &v17[2 * v25];
            v26[4] = v21;
            v26[5] = v23;
            v14 += v15;
            --v12;
          }
          while (v12);
          swift_bridgeObjectRelease_n();
          v6 = v30;
          a1 = v31;
          v8 = v35;
          v7 = v36;
        }
        else
        {
          swift_bridgeObjectRelease();
          v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        v39 = v8;
        swift_bridgeObjectRetain();
        sub_231855C94((uint64_t)v17);
        swift_bridgeObjectRelease();
        swift_release();
        v8 = v39;
        if (v7 == v6)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23183324C()
{
  sub_23183A9D0();
  sub_2318D55E0();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  return 60;
}

uint64_t sub_2318332B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v3 = v2;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask) = 0;
  v6 = v3
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  v7 = sub_2318D2A90();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  sub_2318D4284();
  v9 = a1;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventDataSource) = sub_2318D4278();
  sub_2318D4620();
  v10 = v9;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource) = sub_2318D4614();
  v11 = objc_allocWithZone((Class)sub_2318D4248());
  v12 = sub_2318D423C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver) = v12;
  return v3;
}

uint64_t sub_2318333D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
  }
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
  }
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
  }
  v1 = v0
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  v2 = sub_2318D2A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_231833540()
{
  sub_2318333D4();
  return swift_deallocClassInstance();
}

uint64_t sub_231833564()
{
  return type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(0);
}

uint64_t type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_25418ADE8);
}

uint64_t sub_231833580()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2318D2A90();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_231833618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t i;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  _QWORD v38[2];
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2318D297C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v38 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v38 - v12;
  v13 = *(_QWORD *)(a2 + 16);
  if (!v13)
    return 1;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return 1;
  if (v13 >= v14)
    v15 = a1;
  else
    v15 = a2;
  if (v13 >= v14)
    a1 = a2;
  v16 = *(_QWORD *)(v15 + 56);
  v40 = v15 + 56;
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v38[1] = ~v17;
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v39 = (unint64_t)(63 - v17) >> 6;
  v47 = a1 + 56;
  v43 = v15;
  swift_bridgeObjectRetain();
  v48 = a1;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v46)
  {
    v41 = v19;
    v42 = i;
    if (!v19)
      break;
    v45 = (v19 - 1) & v19;
    v46 = i;
    v22 = __clz(__rbit64(v19)) | (i << 6);
LABEL_29:
    v27 = v44;
    v28 = *(_QWORD *)(v5 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v29(v44, *(_QWORD *)(v43 + 48) + v28 * v22, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v27, v4);
    if (*(_QWORD *)(v48 + 16))
    {
      v30 = v48;
      sub_2317CC4AC(&qword_25418A9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v31 = sub_2318D5514();
      v32 = -1 << *(_BYTE *)(v30 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(v47 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
      {
        v34 = ~v32;
        while (1)
        {
          v29(v8, *(_QWORD *)(v48 + 48) + v33 * v28, v4);
          sub_2317CC4AC(&qword_255F26AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v35 = sub_2318D5580();
          v36 = *(void (**)(char *, uint64_t))(v5 + 8);
          v36(v8, v4);
          if ((v35 & 1) != 0)
            break;
          v33 = (v33 + 1) & v34;
          if (((*(_QWORD *)(v47 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
            goto LABEL_12;
        }
        swift_bridgeObjectRelease();
        v36(v11, v4);
        v37 = 0;
        goto LABEL_37;
      }
    }
LABEL_12:
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    v19 = v45;
  }
  v23 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v23 >= v39)
    goto LABEL_39;
  v24 = *(_QWORD *)(v40 + 8 * v23);
  v25 = i + 1;
  if (v24)
    goto LABEL_28;
  v25 = i + 2;
  if (i + 2 >= v39)
    goto LABEL_39;
  v24 = *(_QWORD *)(v40 + 8 * v25);
  if (v24)
    goto LABEL_28;
  v25 = i + 3;
  if (i + 3 >= v39)
    goto LABEL_39;
  v24 = *(_QWORD *)(v40 + 8 * v25);
  if (v24)
  {
LABEL_28:
    v45 = (v24 - 1) & v24;
    v46 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
    goto LABEL_29;
  }
  v26 = i + 4;
  if (i + 4 >= v39)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    v37 = 1;
LABEL_37:
    sub_231808134();
    return v37;
  }
  v24 = *(_QWORD *)(v40 + 8 * v26);
  if (v24)
  {
    v25 = i + 4;
    goto LABEL_28;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v39)
      goto LABEL_39;
    v24 = *(_QWORD *)(v40 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_28;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2318339D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_23183BC74(0, &qword_25418B010, MEMORY[0x24BEE6CA8]);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_2318D294C();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v5 = sub_2318D2718();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231833A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 32);
  sub_2318D54B4();
  sub_2317CE964(0);
  sub_2318D54B4();
  sub_2318D26E8();
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v2
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
    v2 = *(_QWORD *)(v0 + 32);
  }
  if (*(_QWORD *)(v2
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
  {
    sub_2317E33D4();
    swift_retain();
    sub_2318D5868();
    swift_release();
  }
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v4;
  sub_2317D4194(0, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BEE6CA0], v7);
  sub_2318D58BC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231833D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v63 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v52 - v8;
  v57 = sub_2318D2718();
  v59 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = v9;
  v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v52 - v11;
  swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v61 = a1;
  sub_2318D5880();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v62 = v12;
  v56 = v7;
  if (Strong)
  {
    v14 = Strong;
    v15 = sub_2318D582C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    v53 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v16 = v59;
    v17 = v58;
    v18 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, a3, v57);
    v19 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v60, v61, v6);
    v20 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v21 = *(unsigned __int8 *)(v7 + 80);
    v54 = v6;
    v22 = a3;
    v23 = v19;
    v24 = (v55 + v20 + v21) & ~v21;
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = 0;
    *((_QWORD *)v25 + 3) = 0;
    *((_QWORD *)v25 + 4) = v53;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v25[v20], v17, v18);
    v26 = &v25[v24];
    v27 = v23;
    a3 = v22;
    v6 = v54;
    v7 = v56;
    v12 = v62;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v26, v27, v54);
    *(_QWORD *)(v14
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask) = sub_2317CEB00((uint64_t)v12, (uint64_t)&unk_255F26B10, (uint64_t)v25);
    swift_release();
    swift_release();
  }
  v28 = v58;
  v54 = a3;
  v29 = v59;
  swift_beginAccess();
  v30 = swift_weakLoadStrong();
  if (v30)
  {
    v31 = v30;
    v32 = sub_2318D582C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
    v53 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v33 = v28;
    v34 = v28;
    v35 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v34, v54, v57);
    v36 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v60, v61, v6);
    v37 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v38 = v6;
    v39 = v36;
    v40 = (v55 + v37 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v41 = (char *)swift_allocObject();
    *((_QWORD *)v41 + 2) = 0;
    *((_QWORD *)v41 + 3) = 0;
    *((_QWORD *)v41 + 4) = v53;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v41[v37], v33, v35);
    v42 = &v41[v40];
    v43 = v39;
    v6 = v38;
    v7 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v42, v43, v38);
    *(_QWORD *)(v31
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask) = sub_2317CEB00((uint64_t)v62, (uint64_t)&unk_255F26B20, (uint64_t)v41);
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v45 = result;
    v46 = sub_2318D582C();
    v47 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v62, 1, 1, v46);
    v48 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v49 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v60, v61, v6);
    v50 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v51 = (char *)swift_allocObject();
    *((_QWORD *)v51 + 2) = 0;
    *((_QWORD *)v51 + 3) = 0;
    *((_QWORD *)v51 + 4) = v48;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v51[v50], v49, v6);
    *(_QWORD *)(v45
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask) = sub_2317CEB00(v47, (uint64_t)&unk_255F26B30, (uint64_t)v51);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_231834388()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (*(_QWORD *)(Strong
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
    {
      swift_retain();
      swift_release();
      sub_2317E33D4();
      sub_2318D5868();
    }
    swift_release();
  }
  swift_beginAccess();
  v1 = swift_weakLoadStrong();
  if (v1)
  {
    if (*(_QWORD *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
    {
      swift_retain();
      swift_release();
      sub_2317E33D4();
      sub_2318D5868();
    }
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
    {
      swift_retain();
      swift_release();
      sub_2317E33D4();
      sub_2318D5868();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23183451C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  sub_23183BC74(0, &qword_25418B008, MEMORY[0x24BEE6C80]);
  v6[18] = v7;
  v6[19] = *(_QWORD *)(v7 - 8);
  v6[20] = swift_task_alloc();
  v8 = sub_2318D297C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6[21] = v8;
  v6[22] = *(_QWORD *)(v8 - 8);
  v6[23] = swift_task_alloc();
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  sub_2317D4194(0, (unint64_t *)&qword_25418A9D0, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  sub_2317DC15C(0, &qword_25418AF90, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, MEMORY[0x24BDD2278]);
  v6[29] = v10;
  v6[30] = *(_QWORD *)(v10 - 8);
  v6[31] = swift_task_alloc();
  sub_23183BF5C();
  v6[32] = swift_task_alloc();
  sub_2317DC15C(0, &qword_25418AFA8, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, MEMORY[0x24BDD2298]);
  v6[33] = v11;
  v6[34] = *(_QWORD *)(v11 - 8);
  v6[35] = swift_task_alloc();
  sub_2317DC15C(0, &qword_25418AFA0, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, MEMORY[0x24BDD2288]);
  v6[36] = v12;
  v6[37] = *(_QWORD *)(v12 - 8);
  v6[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231834750()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if ((sub_2318D5874() & 1) != 0 || (swift_beginAccess(), (Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(Strong
                                      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventDataSource);
    swift_retain();
    swift_release();
    v2 = MEMORY[0x24BE46510];
    v3 = (int)*MEMORY[0x24BE46510];
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v4;
    *v4 = v0;
    v4[1] = sub_231834900;
    return ((uint64_t (*)(_QWORD, _QWORD))(v3 + v2))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_231834900()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2318349A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[34];
  v1 = v0[35];
  v3 = v0[33];
  sub_2318D5430();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[42] = sub_23183BFD0();
  v4 = (_QWORD *)swift_task_alloc();
  v0[43] = v4;
  *v4 = v0;
  v4[1] = sub_231834A90;
  return sub_2318D57FC();
}

uint64_t sub_231834A90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 352) = v0;
  return swift_task_switch();
}

uint64_t sub_231834B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, unint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 248), v1, v2);
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 360) = Strong;
  if (!Strong)
  {
LABEL_6:
    v5 = *(_QWORD *)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 288);
    v7 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 232);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    goto LABEL_7;
  }
  if ((sub_2318D5874() & 1) != 0)
  {
    swift_release();
    goto LABEL_6;
  }
  v12 = sub_2318D5424();
  v13 = v12;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2318D6174();
    if (v14)
      goto LABEL_10;
LABEL_24:
    v16 = MEMORY[0x24BEE4AF8];
    goto LABEL_25;
  }
  v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
    goto LABEL_24;
LABEL_10:
  if (v14 < 1)
    __break(1u);
  v15 = 0;
  v71 = v13 & 0xC000000000000001;
  v16 = MEMORY[0x24BEE4AF8];
  v73 = v14;
  v76 = v13;
  do
  {
    v18 = v16;
    if (v71)
      v19 = (id)MEMORY[0x2348E6E94](v15, v13);
    else
      v19 = *(id *)(v13 + 8 * v15 + 32);
    v20 = v19;
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 200);
    v24 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);
    v25 = objc_msgSend(v19, sel_UUID);
    sub_2318D2964();

    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
    v26(v21, v22, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v24);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v24) == 1)
    {
      sub_23183C038(*(_QWORD *)(v0 + 216));
      v16 = v18;
      v17 = v73;
      v13 = v76;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 208);
      v28 = *(_QWORD *)(v0 + 192);
      v29 = *(_QWORD *)(v0 + 168);
      v26(v27, *(_QWORD *)(v0 + 216), v29);
      v26(v28, v27, v29);
      v16 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_2317ECBB8(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
      v17 = v73;
      v13 = v76;
      v31 = *(_QWORD *)(v16 + 16);
      v30 = *(_QWORD *)(v16 + 24);
      if (v31 >= v30 >> 1)
        v16 = sub_2317ECBB8(v30 > 1, v31 + 1, 1, v16);
      v32 = *(_QWORD *)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 168);
      v34 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v16 + 16) = v31 + 1;
      v26(v16+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v31, v32, v33);
    }
    ++v15;
  }
  while (v17 != v15);
LABEL_25:
  swift_bridgeObjectRelease_n();
  sub_2317CC4AC(&qword_25418A9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v35 = sub_2318D5934();
  v36 = *(_QWORD *)(v0 + 176);
  v69 = *(_QWORD *)(v16 + 16);
  if (v69)
  {
    v37 = 0;
    v67 = v16 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    v77 = *(_QWORD *)(v36 + 72);
    v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v36 + 16);
    while (1)
    {
      v45 = *(_QWORD *)(v0 + 224);
      v46 = *(_QWORD *)(v0 + 168);
      v47 = *(_QWORD *)(v0 + 176);
      v38(v45, v67 + v37 * v77, v46);
      v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
      v65(v45, 0, 1, v46);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) == 1)
        break;
      v74 = v37;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 32))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 168));
      swift_bridgeObjectRetain();
      v48 = sub_2318D5514();
      v49 = -1 << *(_BYTE *)(v35 + 32);
      v50 = v48 & ~v49;
      if (((*(_QWORD *)(v35 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) != 0)
      {
        v51 = ~v49;
        while (1)
        {
          v52 = *(_QWORD *)(v0 + 200);
          v53 = *(_QWORD *)(v0 + 176);
          v54 = *(_QWORD *)(v0 + 168);
          v38(v52, *(_QWORD *)(v35 + 48) + v50 * v77, v54);
          sub_2317CC4AC(&qword_255F26AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v55 = sub_2318D5580();
          v44 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
          v44(v52, v54);
          if ((v55 & 1) != 0)
            break;
          v50 = (v50 + 1) & v51;
          if (((*(_QWORD *)(v35 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
            goto LABEL_27;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_27:
        v39 = *(_QWORD *)(v0 + 200);
        v41 = *(_QWORD *)(v0 + 176);
        v40 = *(_QWORD *)(v0 + 184);
        v42 = *(_QWORD *)(v0 + 168);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38(v39, v40, v42);
        sub_231861D54(v39, v50, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        v44 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      }
      v37 = v74 + 1;
      v44(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
      if (v74 + 1 == v69)
      {
        v65(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 168));
        break;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v36 + 56))(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 168));
  }
  *(_QWORD *)(v0 + 368) = v35;
  swift_bridgeObjectRelease();
  v56 = sub_2318D5418();
  v57 = sub_231867C78(v56);
  *(_QWORD *)(v0 + 376) = v57;
  swift_bridgeObjectRelease();
  if (!v57)
  {
    v75 = *(_QWORD *)(v0 + 288);
    v78 = *(_QWORD *)(v0 + 304);
    v70 = *(_QWORD *)(v0 + 248);
    v72 = *(_QWORD *)(v0 + 296);
    v66 = *(_QWORD *)(v0 + 240);
    v68 = *(_QWORD *)(v0 + 232);
    v59 = *(_QWORD *)(v0 + 152);
    v60 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 144);
    sub_2317D4194(0, &qword_25418B168, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v61 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationDaySummaryViewModelChange(0) - 8)
                             + 80);
    v62 = (v61 + 32) & ~v61;
    v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v63 + v62) = v35;
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v0 + 104) = v63;
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D588C();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v64);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v70, v68);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v78, v75);
    goto LABEL_7;
  }
  v58 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v58;
  *v58 = v0;
  v58[1] = sub_23183552C;
  return sub_231835BA8(v57, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8]);
}

uint64_t sub_231835328()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 352);
  sub_2317E33D4();
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_2318353B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(void **)(v0 + 352);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    *(_QWORD *)(v0 + 88) = v4;
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D5898();
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23183552C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 392) = a1;
  *(_QWORD *)(v3 + 400) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_231835600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = v0[46];
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v0[49];
    sub_2317D4194(0, &qword_25418B168, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MedicationDaySummaryViewModelChange(0) - 8) + 80);
    v4 = (v3 + 32) & ~v3;
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_2318D8680;
    *(_QWORD *)(v5 + v4) = v1;
    swift_storeEnumTagMultiPayload();
    sub_23185596C(v5);
    v6 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = v0[49];
  }
  v8 = v0[30];
  v7 = v0[31];
  v9 = v0[29];
  if (*(_QWORD *)(v6 + 16))
  {
    v11 = v0[19];
    v10 = v0[20];
    v14 = v0[18];
    v0[14] = v6;
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D588C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v14);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v8 + 8))(v0[31], v0[29]);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v12 = (_QWORD *)swift_task_alloc();
  v0[51] = v12;
  *v12 = v0;
  v12[1] = sub_2318357F0;
  return sub_2318D57FC();
}

uint64_t sub_2318357F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 352) = v0;
  return swift_task_switch();
}

uint64_t sub_2318358A0()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;

  swift_release();
  v1 = *(void **)(v0 + 328);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    *(_QWORD *)(v0 + 88) = v1;
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D5898();
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231835A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 232);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(void **)(v0 + 400);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    *(_QWORD *)(v0 + 88) = v7;
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D5898();
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231835BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *v3;
  v5 = sub_2318D4A1C();
  v4[26] = v5;
  v4[27] = *(_QWORD *)(v5 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  sub_23183BD74(0);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v6 = sub_2318D4710();
  v4[32] = v6;
  v4[33] = *(_QWORD *)(v6 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v7 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  v4[36] = v7;
  v4[37] = *(_QWORD *)(v7 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  sub_23183BDAC(0);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v8 = sub_2318D2A90();
  v4[44] = v8;
  v4[45] = *(_QWORD *)(v8 - 8);
  v4[46] = swift_task_alloc();
  sub_2318D294C();
  v4[47] = swift_task_alloc();
  v9 = sub_2318D54C0();
  v4[48] = v9;
  v4[49] = *(_QWORD *)(v9 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231835DB0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t);
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v67;
  void (*v68)(_QWORD *);
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  int64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  unint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  _BOOL4 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  int64_t v148;
  _QWORD *v149;
  uint64_t v150;
  int64_t v151;
  int64_t v152;
  uint64_t (*v153)(uint64_t, uint64_t);
  int64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(v0 + 168);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_2318D6174();
    *(_QWORD *)(v0 + 440) = v13;
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 440) = v2;
    if (v2)
    {
LABEL_3:
      v3 = *(_QWORD *)(v0 + 192);
      v4 = *(_QWORD *)(v0 + 168);
      v5 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
      *(_QWORD *)(v0 + 448) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
      *(_QWORD *)(v0 + 456) = *(_QWORD *)(v3 + v5);
      if ((v4 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x2348E6E94](0);
      else
        v6 = *(id *)(v4 + 32);
      *(_QWORD *)(v0 + 464) = v6;
      *(_QWORD *)(v0 + 472) = 1;
      v7 = objc_msgSend(v6, sel_medicationIdentifier);
      v8 = sub_2318D55BC();
      v10 = v9;

      *(_QWORD *)(v0 + 480) = v10;
      v153 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 488) = v11;
      *v11 = v0;
      v11[1] = sub_23183703C;
      return v153(v8, v10);
    }
  }
  v149 = (_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 296);
  v16 = -1;
  v17 = -1 << *(_BYTE *)(MEMORY[0x24BEE4B00] + 32);
  if (-v17 < 64)
    v16 = ~(-1 << -(char)v17);
  v18 = v16 & *(_QWORD *)(MEMORY[0x24BEE4B00] + 64);
  v151 = (unint64_t)(63 - v17) >> 6;
  v148 = v151 - 1;
  result = swift_bridgeObjectRetain();
  v154 = 0;
  if (!v18)
    goto LABEL_14;
LABEL_12:
  v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v20 = v19 | (v154 << 6);
LABEL_13:
  v21 = *(_QWORD *)(v0 + 336);
  v22 = MEMORY[0x24BEE4B00];
  (*(void (**)(uint64_t, unint64_t, _QWORD))(v14 + 16))(v21, *(_QWORD *)(MEMORY[0x24BEE4B00] + 48) + *(_QWORD *)(v14 + 72) * v20, *(_QWORD *)(v0 + 384));
  v23 = *(_QWORD *)(v22 + 56);
  sub_23183BDC8(0);
  v25 = v24;
  *(_QWORD *)(v21 + *(int *)(v24 + 48)) = *(_QWORD *)(v23 + 8 * v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 0, 1, v24);
  swift_bridgeObjectRetain();
  while (1)
  {
    v31 = *(_QWORD *)(v0 + 344);
    sub_2317D40A8(*(_QWORD *)(v0 + 336), v31, (uint64_t (*)(_QWORD))sub_23183BDAC);
    sub_23183BDC8(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v31, 1, v25) == 1)
      break;
    v32 = *(_QWORD *)(v0 + 384);
    v33 = *(_QWORD *)(v0 + 344);
    v34 = *(_QWORD *)(v0 + 328);
    v35 = *(_QWORD *)(v33 + *(int *)(v25 + 48));
    sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
    v37 = *(int *)(v36 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v34, v33, v32);
    *(_QWORD *)(v34 + v37) = v35;
    swift_storeEnumTagMultiPayload();
    v38 = *(_QWORD *)(v0 + 120);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_2317EBD90(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
    v40 = *(_QWORD *)(v38 + 16);
    v39 = *(_QWORD *)(v38 + 24);
    if (v40 >= v39 >> 1)
      v38 = sub_2317EBD90(v39 > 1, v40 + 1, 1, v38);
    v41 = *(_QWORD *)(v0 + 328);
    *(_QWORD *)(v38 + 16) = v40 + 1;
    result = sub_2317D40A8(v41, v38+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v40, type metadata accessor for MedicationDaySummaryViewModelChange);
    *(_QWORD *)(v0 + 120) = v38;
    if (v18)
      goto LABEL_12;
LABEL_14:
    v26 = v154 + 1;
    if (__OFADD__(v154, 1))
    {
      __break(1u);
      goto LABEL_118;
    }
    if (v26 < v151)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 8 * v26 + 64);
      if (v27)
        goto LABEL_17;
      v28 = v154 + 2;
      ++v154;
      if (v26 + 1 < v151)
      {
        v27 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 8 * v28 + 64);
        if (v27)
          goto LABEL_20;
        v154 = v26 + 1;
        if (v26 + 2 < v151)
        {
          v27 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 8 * (v26 + 2) + 64);
          if (v27)
          {
            v26 += 2;
            goto LABEL_17;
          }
          v28 = v26 + 3;
          v154 = v26 + 2;
          if (v26 + 3 < v151)
          {
            v27 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 8 * v28 + 64);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  break;
                if (v26 >= v151)
                {
                  v154 = v151 - 1;
                  goto LABEL_31;
                }
                v27 = *(_QWORD *)(MEMORY[0x24BEE4B00] + 8 * v26 + 64);
                ++v28;
                if (v27)
                  goto LABEL_17;
              }
              __break(1u);
              goto LABEL_129;
            }
LABEL_20:
            v26 = v28;
LABEL_17:
            v18 = (v27 - 1) & v27;
            v20 = __clz(__rbit64(v27)) + (v26 << 6);
            v154 = v26;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_31:
    v29 = *(_QWORD *)(v0 + 336);
    sub_23183BDC8(0);
    v25 = v30;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    v18 = 0;
  }
  v42 = *(_QWORD *)(v0 + 176);
  v43 = MEMORY[0x24BEE4B00];
  swift_release();
  *(_QWORD *)(v0 + 104) = v43;
  if (v42 >> 62)
    goto LABEL_121;
  v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_41:
  v45 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 512) = v44;
  if (!v44)
  {
    swift_bridgeObjectRelease();
    v78 = MEMORY[0x24BEE4B00];
    if (*(_QWORD *)(MEMORY[0x24BEE4B00] + 16))
      goto LABEL_74;
LABEL_105:
    v114 = *(_QWORD *)(v0 + 184);
    if (v114 >> 62)
    {
      swift_bridgeObjectRetain();
      v136 = sub_2318D6174();
      swift_bridgeObjectRelease();
      if (v136)
        goto LABEL_107;
    }
    else if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_107:
      sub_2318D4A04();
      swift_bridgeObjectRetain_n();
      v115 = sub_2318D4A10();
      v116 = sub_2318D5A54();
      v117 = os_log_type_enabled(v115, v116);
      v118 = *(_QWORD *)(v0 + 232);
      v120 = *(_QWORD *)(v0 + 208);
      v119 = *(_QWORD *)(v0 + 216);
      if (v117)
      {
        v121 = *(_QWORD *)(v0 + 184);
        v156 = *(_QWORD *)(v0 + 208);
        v122 = swift_slowAlloc();
        v123 = swift_slowAlloc();
        v158 = v123;
        *(_DWORD *)v122 = 136315394;
        v124 = sub_2318D63CC();
        *(_QWORD *)(v0 + 136) = sub_231851EBC(v124, v125, &v158);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v122 + 12) = 2080;
        *(_QWORD *)(v0 + 144) = v121;
        sub_2317DC15C(0, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        swift_bridgeObjectRetain();
        v126 = sub_2318D5610();
        *(_QWORD *)(v0 + 152) = sub_231851EBC(v126, v127, &v158);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2317C8000, v115, v116, "[%s] Create model with updated medications: %s", (uint8_t *)v122, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v123, -1, -1);
        MEMORY[0x2348E77E8](v122, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v156);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v120);
      }
      **(_QWORD **)(v0 + 304) = *(_QWORD *)(v0 + 184);
      swift_storeEnumTagMultiPayload();
      v128 = *(_QWORD *)(v0 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v128 = sub_2317EBD90(0, *(_QWORD *)(v128 + 16) + 1, 1, v128);
      v130 = *(_QWORD *)(v128 + 16);
      v129 = *(_QWORD *)(v128 + 24);
      if (v130 >= v129 >> 1)
        v128 = sub_2317EBD90(v129 > 1, v130 + 1, 1, v128);
      v132 = *(_QWORD *)(v0 + 296);
      v131 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)(v128 + 16) = v130 + 1;
      sub_2317D40A8(v131, v128+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * v130, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v0 + 120) = v128;
      goto LABEL_124;
    }
    v128 = *(_QWORD *)(v0 + 120);
LABEL_124:
    sub_2318D4A04();
    swift_bridgeObjectRetain_n();
    v137 = sub_2318D4A10();
    v138 = sub_2318D5A54();
    v139 = os_log_type_enabled(v137, v138);
    v140 = *(_QWORD *)(v0 + 216);
    v141 = *(_QWORD *)(v0 + 224);
    v142 = *(_QWORD *)(v0 + 208);
    if (v139)
    {
      v157 = *(_QWORD *)(v0 + 224);
      v143 = swift_slowAlloc();
      v144 = swift_slowAlloc();
      v158 = v144;
      *(_DWORD *)v143 = 136315394;
      v145 = sub_2318D63CC();
      *(_QWORD *)(v0 + 160) = sub_231851EBC(v145, v146, &v158);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v143 + 12) = 2048;
      v147 = *(_QWORD *)(v128 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 128) = v147;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v137, v138, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v143, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v144, -1, -1);
      MEMORY[0x2348E77E8](v143, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v157, v142);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v141, v142);
    }
    swift_beginAccess();
    v150 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v150);
  }
  v46 = 0;
  *(_QWORD *)(v0 + 520) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
  *(_QWORD *)(v0 + 528) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  do
  {
    v47 = *(_QWORD *)(v0 + 176);
    if ((v47 & 0xC000000000000001) != 0)
    {
      v48 = (id)MEMORY[0x2348E6E94](v46);
    }
    else
    {
      if (v46 >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_120;
      v48 = *(id *)(v47 + 8 * v46 + 32);
    }
    *(_QWORD *)(v0 + 536) = v48;
    *(_QWORD *)(v0 + 544) = v46 + 1;
    if (__OFADD__(v46, 1))
    {
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      swift_bridgeObjectRetain();
      v44 = sub_2318D6174();
      goto LABEL_41;
    }
    v49 = objc_msgSend(v48, sel_doses);
    sub_2317CCC9C(0, (unint64_t *)&unk_25418B080);
    v50 = sub_2318D5790();
    *(_QWORD *)(v0 + 552) = v50;

    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      v77 = sub_2318D6174();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 560) = v77;
      if (v77)
      {
LABEL_67:
        *(_QWORD *)(v0 + 568) = *(_QWORD *)(*(_QWORD *)(v0 + 192) + *(_QWORD *)(v0 + 520));
        *(_QWORD *)(v0 + 576) = v45;
        v79 = *(_QWORD *)(v0 + 552);
        if ((v79 & 0xC000000000000001) != 0)
          v80 = (id)MEMORY[0x2348E6E94](0);
        else
          v80 = *(id *)(v79 + 32);
        *(_QWORD *)(v0 + 584) = v80;
        *(_QWORD *)(v0 + 592) = 1;
        v133 = objc_msgSend(v80, sel_medicationIdentifier, v148);
        v8 = sub_2318D55BC();
        v10 = v134;

        *(_QWORD *)(v0 + 600) = v10;
        v153 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
        v135 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 608) = v135;
        *v135 = v0;
        v135[1] = sub_2318384EC;
        return v153(v8, v10);
      }
    }
    else
    {
      v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v0 + 560) = v51;
      if (v51)
        goto LABEL_67;
    }
    swift_bridgeObjectRelease();
    v52 = *(void **)(v0 + 536);
    if (!*(_QWORD *)(v45 + 16))
    {
      swift_bridgeObjectRelease();

      goto LABEL_44;
    }
    v53 = *(_QWORD *)(v0 + 368);
    v55 = *(_QWORD *)(v0 + 352);
    v54 = *(_QWORD *)(v0 + 360);
    v56 = *(_QWORD *)(v0 + 192) + *(_QWORD *)(v0 + 528);
    v57 = objc_msgSend(*(id *)(v0 + 536), sel_scheduledDateTime);
    sub_2318D2928();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v56, v55);
    sub_2318D5484();
    sub_2318D468C();
    swift_allocObject();
    v58 = v52;
    sub_2318D4698();
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 104) + 16))
    {
      v62 = *(_QWORD *)(v0 + 392);
      v60 = *(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 16);
      goto LABEL_57;
    }
    v59 = *(_QWORD *)(v0 + 392);
    sub_2317FBF8C(*(_QWORD *)(v0 + 408));
    v60 = *(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 16);
    if ((v61 & 1) == 0)
    {
      v62 = *(_QWORD *)(v0 + 392);
LABEL_57:
      v63 = *(_QWORD *)(v0 + 424);
      v64 = *(_QWORD *)(v0 + 384);
      v60(v63, *(_QWORD *)(v0 + 408), v64);
      v65 = *(_QWORD *)(v0 + 104);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v158 = v65;
      sub_2317FE858(MEMORY[0x24BEE4AF8], v63, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v0 + 104) = v65;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
    }
    v60(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384));
    v68 = sub_2317CED50(v149);
    if (*v67)
    {
      v69 = v67;
      v70 = swift_retain();
      MEMORY[0x2348E6528](v70);
      if (*(_QWORD *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      sub_2318D57A8();
    }
    ((void (*)(_QWORD *, _QWORD))v68)(v149, 0);
    v71 = *(void **)(v0 + 536);
    v73 = *(_QWORD *)(v0 + 400);
    v72 = *(_QWORD *)(v0 + 408);
    v74 = *(_QWORD *)(v0 + 384);
    v75 = *(_QWORD *)(v0 + 392);
    swift_release();

    v76 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v76(v73, v74);
    v76(v72, v74);
    v45 = MEMORY[0x24BEE4AF8];
LABEL_44:
    v46 = *(_QWORD *)(v0 + 544);
  }
  while (v46 != *(_QWORD *)(v0 + 512));
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  v81 = *(_QWORD *)(v0 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v81 = sub_2317EBD90(0, *(_QWORD *)(v81 + 16) + 1, 1, v81);
  v83 = *(_QWORD *)(v81 + 16);
  v82 = *(_QWORD *)(v81 + 24);
  if (v83 >= v82 >> 1)
    v81 = sub_2317EBD90(v82 > 1, v83 + 1, 1, v81);
  v84 = *(_QWORD *)(v0 + 320);
  v85 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v81 + 16) = v83 + 1;
  sub_2317D40A8(v84, v81+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v83, type metadata accessor for MedicationDaySummaryViewModelChange);
  *(_QWORD *)(v0 + 120) = v81;
  v78 = *(_QWORD *)(v0 + 104);
  if (!*(_QWORD *)(v78 + 16))
    goto LABEL_105;
LABEL_74:
  v149 = (_QWORD *)(v78 + 64);
  v86 = -1;
  v87 = -1 << *(_BYTE *)(v78 + 32);
  if (-v87 < 64)
    v86 = ~(-1 << -(char)v87);
  v88 = v86 & *(_QWORD *)(v78 + 64);
  v152 = (unint64_t)(63 - v87) >> 6;
  v155 = v78;
  result = swift_bridgeObjectRetain();
  v89 = 0;
  if (v88)
  {
LABEL_77:
    v90 = __clz(__rbit64(v88));
    v88 &= v88 - 1;
    v91 = v90 | (v89 << 6);
LABEL_78:
    v92 = *(_QWORD *)(v0 + 240);
    (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 16))(v92, *(_QWORD *)(v155 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 392) + 72) * v91, *(_QWORD *)(v0 + 384));
    v93 = *(_QWORD *)(v155 + 56);
    sub_23183BD90(0);
    v95 = v94;
    *(_QWORD *)(v92 + *(int *)(v94 + 48)) = *(_QWORD *)(v93 + 8 * v91);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v92, 0, 1, v94);
    swift_bridgeObjectRetain();
    goto LABEL_97;
  }
  while (2)
  {
    v96 = v89 + 1;
    if (__OFADD__(v89, 1))
      goto LABEL_119;
    if (v96 >= v152)
      goto LABEL_96;
    v97 = v149[v96];
    if (v97)
      goto LABEL_82;
    v98 = v89 + 2;
    ++v89;
    if (v96 + 1 >= v152)
      goto LABEL_96;
    v97 = v149[v98];
    if (v97)
      goto LABEL_85;
    v89 = v96 + 1;
    if (v96 + 2 >= v152)
      goto LABEL_96;
    v97 = v149[v96 + 2];
    if (v97)
    {
      v96 += 2;
      goto LABEL_82;
    }
    v98 = v96 + 3;
    v89 = v96 + 2;
    if (v96 + 3 >= v152)
    {
LABEL_96:
      v99 = *(_QWORD *)(v0 + 240);
      sub_23183BD90(0);
      v95 = v100;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v99, 1, 1, v100);
      v88 = 0;
LABEL_97:
      v101 = *(_QWORD *)(v0 + 248);
      sub_2317D40A8(*(_QWORD *)(v0 + 240), v101, (uint64_t (*)(_QWORD))sub_23183BD74);
      sub_23183BD90(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v101, 1, v95) == 1)
      {
        swift_release();
        goto LABEL_105;
      }
      v103 = *(_QWORD *)(v0 + 384);
      v102 = *(_QWORD *)(v0 + 392);
      v104 = *(_QWORD *)(v0 + 312);
      v105 = *(_QWORD *)(v0 + 248);
      v106 = *(_QWORD *)(v105 + *(int *)(v95 + 48));
      sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
      v108 = *(int *)(v107 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v104, v105, v103);
      *(_QWORD *)(v104 + v108) = v106;
      swift_storeEnumTagMultiPayload();
      v109 = *(_QWORD *)(v0 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v109 = sub_2317EBD90(0, *(_QWORD *)(v109 + 16) + 1, 1, v109);
      v111 = *(_QWORD *)(v109 + 16);
      v110 = *(_QWORD *)(v109 + 24);
      if (v111 >= v110 >> 1)
        v109 = sub_2317EBD90(v110 > 1, v111 + 1, 1, v109);
      v112 = *(_QWORD *)(v0 + 312);
      v113 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v109 + 16) = v111 + 1;
      result = sub_2317D40A8(v112, v109+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v111, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v0 + 120) = v109;
      if (v88)
        goto LABEL_77;
      continue;
    }
    break;
  }
  v97 = v149[v98];
  if (v97)
  {
LABEL_85:
    v96 = v98;
LABEL_82:
    v88 = (v97 - 1) & v97;
    v91 = __clz(__rbit64(v97)) + (v96 << 6);
    v89 = v96;
    goto LABEL_78;
  }
  while (1)
  {
    v96 = v98 + 1;
    if (__OFADD__(v98, 1))
      break;
    if (v96 >= v152)
    {
      v89 = v152 - 1;
      goto LABEL_96;
    }
    v97 = v149[v96];
    ++v98;
    if (v97)
      goto LABEL_82;
  }
LABEL_129:
  __break(1u);
  return result;
}

uint64_t sub_23183703C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 496) = a1;
  *(_QWORD *)(v3 + 504) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2318370CC()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t result;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD, uint64_t);
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD *v81;
  void (*v82)(_QWORD *);
  _QWORD *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  id v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int64_t v114;
  unint64_t v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  _BOOL4 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  _BOOL4 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  int64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  int64_t v166;
  int64_t v167;
  uint64_t (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v3 = *(_QWORD *)(v1 + 496);
  v4 = *(void **)(v1 + 464);
  if (!v3)
  {

    goto LABEL_10;
  }
  v5 = *(_QWORD *)(v1 + 368);
  v6 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v8 = *(_QWORD *)(v1 + 192) + *(_QWORD *)(v1 + 448);
  v9 = objc_msgSend(v4, sel_startDate);
  sub_2318D2928();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v6);
  sub_2318D5484();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 112) + 16) || (sub_2317FBF8C(*(_QWORD *)(v1 + 432)), (v10 & 1) == 0))
  {
    v11 = *(_QWORD *)(v1 + 424);
    v12 = *(_QWORD *)(v1 + 384);
    v13 = *(_QWORD *)(v1 + 392);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v1 + 432), v12);
    v14 = *(_QWORD *)(v1 + 112);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v172 = v14;
    sub_2317FE874(MEMORY[0x24BEE4AF8], v11, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v1 + 112) = v14;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v16 = *(void **)(v1 + 464);
  v17 = *(_QWORD *)(v1 + 432);
  v18 = *(_QWORD *)(v1 + 416);
  v20 = *(_QWORD *)(v1 + 384);
  v19 = *(_QWORD *)(v1 + 392);
  sub_2318D45FC();
  swift_allocObject();
  v21 = v16;
  v2 = (unint64_t)(id)v3;
  sub_2318D4608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v20);
  v0 = v1 + 16;
  v3 = (unint64_t)sub_2317CECC0((_QWORD *)(v1 + 16));
  if (!*v22)
    goto LABEL_8;
  v23 = v22;
  v24 = swift_retain();
  MEMORY[0x2348E6528](v24);
  if (*(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_130;
  while (1)
  {
    sub_2318D57D8();
    sub_2318D57A8();
LABEL_8:
    ((void (*)(unint64_t, _QWORD))v3)(v0, 0);
    v25 = *(void **)(v1 + 464);
    v26 = *(_QWORD *)(v1 + 432);
    v0 = *(_QWORD *)(v1 + 416);
    v3 = *(_QWORD *)(v1 + 384);
    v27 = *(_QWORD *)(v1 + 392);
    swift_release();

    v2 = *(_QWORD *)(v27 + 8);
    ((void (*)(unint64_t, unint64_t))v2)(v0, v3);
    ((void (*)(uint64_t, unint64_t))v2)(v26, v3);
LABEL_10:
    v28 = *(_QWORD *)(v1 + 168);
    v29 = *(_QWORD *)(v1 + 472);
    if (v29 == *(_QWORD *)(v1 + 440))
      break;
    if ((v28 & 0xC000000000000001) != 0)
      v57 = (id)MEMORY[0x2348E6E94](*(_QWORD *)(v1 + 472));
    else
      v57 = *(id *)(v28 + 8 * v29 + 32);
    *(_QWORD *)(v1 + 464) = v57;
    *(_QWORD *)(v1 + 472) = v29 + 1;
    if (!__OFADD__(v29, 1))
    {
      v88 = objc_msgSend(v57, sel_medicationIdentifier);
      v89 = sub_2318D55BC();
      v91 = v90;

      *(_QWORD *)(v1 + 480) = v91;
      v168 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
      v92 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 488) = v92;
      *v92 = v1;
      v92[1] = sub_23183703C;
      return v168(v89, v91);
    }
LABEL_129:
    __break(1u);
LABEL_130:
    sub_2318D57B4();
  }
  v161 = (_QWORD *)(v1 + 48);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v1 + 392);
  v0 = *(_QWORD *)(v1 + 296);
  v31 = *(_QWORD *)(v1 + 112);
  v32 = *(_QWORD *)(v31 + 64);
  v160 = v31 + 64;
  v33 = -1;
  v34 = -1 << *(_BYTE *)(v31 + 32);
  if (-v34 < 64)
    v33 = ~(-1 << -(char)v34);
  v35 = v33 & v32;
  v162 = (unint64_t)(63 - v34) >> 6;
  v165 = *(_QWORD **)(v1 + 112);
  result = swift_bridgeObjectRetain();
  v167 = 0;
  if (v35)
  {
LABEL_14:
    v37 = __clz(__rbit64(v35));
    v35 &= v35 - 1;
    v38 = v37 | (v167 << 6);
LABEL_15:
    v39 = *(_QWORD *)(v1 + 336);
    v2 = (unint64_t)v165;
    (*(void (**)(uint64_t, unint64_t, _QWORD))(v30 + 16))(v39, v165[6] + *(_QWORD *)(v30 + 72) * v38, *(_QWORD *)(v1 + 384));
    v40 = v165[7];
    sub_23183BDC8(0);
    v42 = v41;
    *(_QWORD *)(v39 + *(int *)(v41 + 48)) = *(_QWORD *)(v40 + 8 * v38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v39, 0, 1, v41);
    swift_bridgeObjectRetain();
    goto LABEL_34;
  }
  while (1)
  {
    v43 = v167 + 1;
    if (__OFADD__(v167, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    if (v43 < v162)
    {
      v44 = *(_QWORD *)(v160 + 8 * v43);
      if (v44)
        goto LABEL_19;
      v45 = v167 + 2;
      ++v167;
      if (v43 + 1 < v162)
      {
        v44 = *(_QWORD *)(v160 + 8 * v45);
        if (v44)
          goto LABEL_22;
        v167 = v43 + 1;
        if (v43 + 2 < v162)
        {
          v44 = *(_QWORD *)(v160 + 8 * (v43 + 2));
          if (v44)
          {
            v43 += 2;
LABEL_19:
            v35 = (v44 - 1) & v44;
            v38 = __clz(__rbit64(v44)) + (v43 << 6);
            v167 = v43;
            goto LABEL_15;
          }
          v45 = v43 + 3;
          v167 = v43 + 2;
          if (v43 + 3 < v162)
          {
            v44 = *(_QWORD *)(v160 + 8 * v45);
            if (!v44)
            {
              while (1)
              {
                v43 = v45 + 1;
                if (__OFADD__(v45, 1))
                  break;
                if (v43 >= v162)
                {
                  v167 = v162 - 1;
                  goto LABEL_33;
                }
                v44 = *(_QWORD *)(v160 + 8 * v43);
                ++v45;
                if (v44)
                  goto LABEL_19;
              }
              __break(1u);
              goto LABEL_138;
            }
LABEL_22:
            v43 = v45;
            goto LABEL_19;
          }
        }
      }
    }
LABEL_33:
    v46 = *(_QWORD *)(v1 + 336);
    sub_23183BDC8(0);
    v42 = v47;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
    v35 = 0;
LABEL_34:
    v3 = *(_QWORD *)(v1 + 344);
    sub_2317D40A8(*(_QWORD *)(v1 + 336), v3, (uint64_t (*)(_QWORD))sub_23183BDAC);
    sub_23183BDC8(0);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v3, 1, v42) == 1)break;
    v48 = *(_QWORD *)(v1 + 384);
    v49 = *(_QWORD *)(v1 + 344);
    v50 = *(_QWORD *)(v1 + 328);
    v51 = *(_QWORD *)(v49 + *(int *)(v42 + 48));
    sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
    v2 = *(int *)(v52 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v50, v49, v48);
    *(_QWORD *)(v50 + v2) = v51;
    swift_storeEnumTagMultiPayload();
    v53 = *(_QWORD *)(v1 + 120);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v53 = sub_2317EBD90(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
    v55 = *(_QWORD *)(v53 + 16);
    v54 = *(_QWORD *)(v53 + 24);
    v3 = v55 + 1;
    if (v55 >= v54 >> 1)
      v53 = sub_2317EBD90(v54 > 1, v55 + 1, 1, v53);
    v56 = *(_QWORD *)(v1 + 328);
    *(_QWORD *)(v53 + 16) = v3;
    result = sub_2317D40A8(v56, v53+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v55, type metadata accessor for MedicationDaySummaryViewModelChange);
    *(_QWORD *)(v1 + 120) = v53;
    if (v35)
      goto LABEL_14;
  }
  v58 = *(_QWORD *)(v1 + 176);
  swift_release();
  *(_QWORD *)(v1 + 104) = MEMORY[0x24BEE4B00];
  if (!(v58 >> 62))
  {
    v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 512) = v59;
    if (v59)
      goto LABEL_45;
LABEL_86:
    swift_bridgeObjectRelease();
    v99 = MEMORY[0x24BEE4B00];
    if (!*(_QWORD *)(MEMORY[0x24BEE4B00] + 16))
      goto LABEL_118;
    goto LABEL_87;
  }
LABEL_85:
  swift_bridgeObjectRetain();
  v103 = sub_2318D6174();
  *(_QWORD *)(v1 + 512) = v103;
  if (!v103)
    goto LABEL_86;
LABEL_45:
  v60 = 0;
  *(_QWORD *)(v1 + 520) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
  *(_QWORD *)(v1 + 528) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  v61 = MEMORY[0x24BEE4AF8];
  while (2)
  {
    v62 = *(_QWORD *)(v1 + 176);
    if ((v62 & 0xC000000000000001) != 0)
    {
      v63 = (id)MEMORY[0x2348E6E94](v60);
    }
    else
    {
      if (v60 >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_84;
      v63 = *(id *)(v62 + 8 * v60 + 32);
    }
    *(_QWORD *)(v1 + 536) = v63;
    *(_QWORD *)(v1 + 544) = v60 + 1;
    if (__OFADD__(v60, 1))
      goto LABEL_83;
    v64 = objc_msgSend(v63, sel_doses);
    sub_2317CCC9C(0, (unint64_t *)&unk_25418B080);
    v65 = sub_2318D5790();
    *(_QWORD *)(v1 + 552) = v65;

    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      v0 = sub_2318D6174();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 560) = v0;
      if (v0)
      {
LABEL_71:
        *(_QWORD *)(v1 + 568) = *(_QWORD *)(*(_QWORD *)(v1 + 192) + *(_QWORD *)(v1 + 520));
        *(_QWORD *)(v1 + 576) = v61;
        v93 = *(_QWORD *)(v1 + 552);
        if ((v93 & 0xC000000000000001) != 0)
          v94 = (id)MEMORY[0x2348E6E94](0);
        else
          v94 = *(id *)(v93 + 32);
        *(_QWORD *)(v1 + 584) = v94;
        *(_QWORD *)(v1 + 592) = 1;
        v100 = objc_msgSend(v94, sel_medicationIdentifier, v162 - 1);
        v89 = sub_2318D55BC();
        v91 = v101;

        *(_QWORD *)(v1 + 600) = v91;
        v168 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
        v102 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 608) = v102;
        *v102 = v1;
        v102[1] = sub_2318384EC;
        return v168(v89, v91);
      }
    }
    else
    {
      v0 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v1 + 560) = v0;
      if (v0)
        goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    v66 = *(void **)(v1 + 536);
    if (*(_QWORD *)(v61 + 16))
    {
      v67 = *(_QWORD *)(v1 + 368);
      v69 = *(_QWORD *)(v1 + 352);
      v68 = *(_QWORD *)(v1 + 360);
      v70 = *(_QWORD *)(v1 + 192) + *(_QWORD *)(v1 + 528);
      v71 = objc_msgSend(*(id *)(v1 + 536), sel_scheduledDateTime);
      sub_2318D2928();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v67, v70, v69);
      sub_2318D5484();
      sub_2318D468C();
      swift_allocObject();
      v72 = v66;
      sub_2318D4698();
      if (*(_QWORD *)(*(_QWORD *)(v1 + 104) + 16))
      {
        v73 = *(_QWORD *)(v1 + 392);
        sub_2317FBF8C(*(_QWORD *)(v1 + 408));
        v74 = *(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 16);
        if ((v75 & 1) == 0)
        {
          v76 = *(_QWORD *)(v1 + 392);
          goto LABEL_60;
        }
      }
      else
      {
        v76 = *(_QWORD *)(v1 + 392);
        v74 = *(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 16);
LABEL_60:
        v77 = *(_QWORD *)(v1 + 424);
        v78 = *(_QWORD *)(v1 + 384);
        v74(v77, *(_QWORD *)(v1 + 408), v78);
        v79 = *(_QWORD *)(v1 + 104);
        v80 = swift_isUniquelyReferenced_nonNull_native();
        v172 = v79;
        sub_2317FE858(v61, v77, v80);
        *(_QWORD *)(v1 + 104) = v79;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v78);
      }
      v74(*(_QWORD *)(v1 + 400), *(_QWORD *)(v1 + 408), *(_QWORD *)(v1 + 384));
      v82 = sub_2317CED50(v161);
      if (*v81)
      {
        v83 = v81;
        v84 = swift_retain();
        MEMORY[0x2348E6528](v84);
        if (*(_QWORD *)((*v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2318D57B4();
        sub_2318D57D8();
        sub_2318D57A8();
      }
      ((void (*)(_QWORD *, _QWORD))v82)(v161, 0);
      v85 = *(void **)(v1 + 536);
      v3 = *(_QWORD *)(v1 + 400);
      v86 = *(_QWORD *)(v1 + 408);
      v2 = *(_QWORD *)(v1 + 384);
      v87 = *(_QWORD *)(v1 + 392);
      swift_release();

      v0 = *(_QWORD *)(v87 + 8);
      ((void (*)(unint64_t, unint64_t))v0)(v3, v2);
      ((void (*)(uint64_t, unint64_t))v0)(v86, v2);
    }
    else
    {
      swift_bridgeObjectRelease();

    }
    v60 = *(_QWORD *)(v1 + 544);
    if (v60 != *(_QWORD *)(v1 + 512))
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  v95 = *(_QWORD *)(v1 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v95 = sub_2317EBD90(0, *(_QWORD *)(v95 + 16) + 1, 1, v95);
  v3 = *(_QWORD *)(v95 + 16);
  v96 = *(_QWORD *)(v95 + 24);
  v0 = v3 + 1;
  if (v3 >= v96 >> 1)
    v95 = sub_2317EBD90(v96 > 1, v3 + 1, 1, v95);
  v97 = *(_QWORD *)(v1 + 320);
  v98 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v95 + 16) = v0;
  sub_2317D40A8(v97, v95+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(_QWORD *)(v98 + 72) * v3, type metadata accessor for MedicationDaySummaryViewModelChange);
  *(_QWORD *)(v1 + 120) = v95;
  v99 = *(_QWORD *)(v1 + 104);
  if (!*(_QWORD *)(v99 + 16))
  {
LABEL_118:
    v129 = *(_QWORD *)(v1 + 184);
    if (v129 >> 62)
    {
      swift_bridgeObjectRetain();
      v148 = sub_2318D6174();
      swift_bridgeObjectRelease();
      if (!v148)
        goto LABEL_132;
LABEL_120:
      sub_2318D4A04();
      swift_bridgeObjectRetain_n();
      v130 = sub_2318D4A10();
      v131 = sub_2318D5A54();
      v132 = os_log_type_enabled(v130, v131);
      v133 = *(_QWORD *)(v1 + 232);
      v135 = *(_QWORD *)(v1 + 208);
      v134 = *(_QWORD *)(v1 + 216);
      if (v132)
      {
        v170 = *(_QWORD *)(v1 + 208);
        v136 = *(_QWORD *)(v1 + 184);
        v137 = swift_slowAlloc();
        v138 = swift_slowAlloc();
        v172 = v138;
        *(_DWORD *)v137 = 136315394;
        v139 = sub_2318D63CC();
        *(_QWORD *)(v1 + 136) = sub_231851EBC(v139, v140, &v172);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v137 + 12) = 2080;
        *(_QWORD *)(v1 + 144) = v136;
        sub_2317DC15C(0, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        swift_bridgeObjectRetain();
        v141 = sub_2318D5610();
        *(_QWORD *)(v1 + 152) = sub_231851EBC(v141, v142, &v172);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2317C8000, v130, v131, "[%s] Create model with updated medications: %s", (uint8_t *)v137, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v138, -1, -1);
        MEMORY[0x2348E77E8](v137, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v170);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
      }
      **(_QWORD **)(v1 + 304) = *(_QWORD *)(v1 + 184);
      swift_storeEnumTagMultiPayload();
      v143 = *(_QWORD *)(v1 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v143 = sub_2317EBD90(0, *(_QWORD *)(v143 + 16) + 1, 1, v143);
      v145 = *(_QWORD *)(v143 + 16);
      v144 = *(_QWORD *)(v143 + 24);
      if (v145 >= v144 >> 1)
        v143 = sub_2317EBD90(v144 > 1, v145 + 1, 1, v143);
      v147 = *(_QWORD *)(v1 + 296);
      v146 = *(_QWORD *)(v1 + 304);
      *(_QWORD *)(v143 + 16) = v145 + 1;
      sub_2317D40A8(v146, v143+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ *(_QWORD *)(v147 + 72) * v145, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v1 + 120) = v143;
    }
    else
    {
      if (*(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_120;
LABEL_132:
      v143 = *(_QWORD *)(v1 + 120);
    }
    sub_2318D4A04();
    swift_bridgeObjectRetain_n();
    v149 = sub_2318D4A10();
    v150 = sub_2318D5A54();
    v151 = os_log_type_enabled(v149, v150);
    v152 = *(_QWORD *)(v1 + 216);
    v153 = *(_QWORD *)(v1 + 224);
    v154 = *(_QWORD *)(v1 + 208);
    if (v151)
    {
      v171 = *(_QWORD *)(v1 + 224);
      v155 = swift_slowAlloc();
      v156 = swift_slowAlloc();
      v172 = v156;
      *(_DWORD *)v155 = 136315394;
      v157 = sub_2318D63CC();
      *(_QWORD *)(v1 + 160) = sub_231851EBC(v157, v158, &v172);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v155 + 12) = 2048;
      v159 = *(_QWORD *)(v143 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 128) = v159;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v149, v150, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v155, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v156, -1, -1);
      MEMORY[0x2348E77E8](v155, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v171, v154);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v153, v154);
    }
    swift_beginAccess();
    v164 = *(_QWORD *)(v1 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v164);
  }
LABEL_87:
  v163 = v99 + 64;
  v104 = -1;
  v105 = -1 << *(_BYTE *)(v99 + 32);
  if (-v105 < 64)
    v104 = ~(-1 << -(char)v105);
  v106 = v104 & *(_QWORD *)(v99 + 64);
  v166 = (unint64_t)(63 - v105) >> 6;
  v169 = v99;
  result = swift_bridgeObjectRetain();
  v107 = 0;
  if (v106)
  {
LABEL_90:
    v108 = __clz(__rbit64(v106));
    v106 &= v106 - 1;
    v109 = v108 | (v107 << 6);
LABEL_91:
    v110 = *(_QWORD *)(v1 + 240);
    (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v1 + 392) + 16))(v110, *(_QWORD *)(v169 + 48) + *(_QWORD *)(*(_QWORD *)(v1 + 392) + 72) * v109, *(_QWORD *)(v1 + 384));
    v111 = *(_QWORD *)(v169 + 56);
    sub_23183BD90(0);
    v113 = v112;
    *(_QWORD *)(v110 + *(int *)(v112 + 48)) = *(_QWORD *)(v111 + 8 * v109);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v110, 0, 1, v112);
    swift_bridgeObjectRetain();
    goto LABEL_110;
  }
  while (2)
  {
    v114 = v107 + 1;
    if (__OFADD__(v107, 1))
    {
      __break(1u);
      goto LABEL_129;
    }
    if (v114 >= v166)
      goto LABEL_109;
    v115 = *(_QWORD *)(v163 + 8 * v114);
    if (v115)
      goto LABEL_95;
    v116 = v107 + 2;
    ++v107;
    if (v114 + 1 >= v166)
      goto LABEL_109;
    v115 = *(_QWORD *)(v163 + 8 * v116);
    if (v115)
      goto LABEL_98;
    v107 = v114 + 1;
    if (v114 + 2 >= v166)
      goto LABEL_109;
    v115 = *(_QWORD *)(v163 + 8 * (v114 + 2));
    if (v115)
    {
      v114 += 2;
      goto LABEL_95;
    }
    v116 = v114 + 3;
    v107 = v114 + 2;
    if (v114 + 3 >= v166)
    {
LABEL_109:
      v117 = *(_QWORD *)(v1 + 240);
      sub_23183BD90(0);
      v113 = v118;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 1, 1, v118);
      v106 = 0;
LABEL_110:
      v119 = *(_QWORD *)(v1 + 248);
      sub_2317D40A8(*(_QWORD *)(v1 + 240), v119, (uint64_t (*)(_QWORD))sub_23183BD74);
      sub_23183BD90(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v119, 1, v113) == 1)
      {
        swift_release();
        goto LABEL_118;
      }
      v120 = *(_QWORD *)(v1 + 384);
      v3 = *(_QWORD *)(v1 + 392);
      v121 = *(_QWORD *)(v1 + 312);
      v122 = *(_QWORD *)(v1 + 248);
      v123 = *(_QWORD *)(v122 + *(int *)(v113 + 48));
      sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
      v125 = *(int *)(v124 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v121, v122, v120);
      *(_QWORD *)(v121 + v125) = v123;
      swift_storeEnumTagMultiPayload();
      v0 = *(_QWORD *)(v1 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v0 = sub_2317EBD90(0, *(_QWORD *)(v0 + 16) + 1, 1, v0);
      v2 = *(_QWORD *)(v0 + 16);
      v126 = *(_QWORD *)(v0 + 24);
      if (v2 >= v126 >> 1)
        v0 = sub_2317EBD90(v126 > 1, v2 + 1, 1, v0);
      v127 = *(_QWORD *)(v1 + 312);
      v128 = *(_QWORD *)(v1 + 296);
      *(_QWORD *)(v0 + 16) = v2 + 1;
      result = sub_2317D40A8(v127, v0+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v2, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v1 + 120) = v0;
      if (v106)
        goto LABEL_90;
      continue;
    }
    break;
  }
  v115 = *(_QWORD *)(v163 + 8 * v116);
  if (v115)
  {
LABEL_98:
    v114 = v116;
LABEL_95:
    v106 = (v115 - 1) & v115;
    v109 = __clz(__rbit64(v115)) + (v114 << 6);
    v107 = v114;
    goto LABEL_91;
  }
  while (1)
  {
    v114 = v116 + 1;
    if (__OFADD__(v116, 1))
      break;
    if (v114 >= v166)
    {
      v107 = v166 - 1;
      goto LABEL_109;
    }
    v115 = *(_QWORD *)(v163 + 8 * v114);
    ++v116;
    if (v115)
      goto LABEL_95;
  }
LABEL_138:
  __break(1u);
  return result;
}

uint64_t sub_2318384EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 616) = a1;
  *(_QWORD *)(v3 + 624) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2318385A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD, uint64_t);
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  void (*v38)(_QWORD *);
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(unint64_t, uint64_t);
  uint64_t v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t result;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  unint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v1 = *(void **)(v0 + 616);
  v2 = *(void **)(v0 + 584);
  if (v1)
  {
    v3 = *(void **)(v0 + 536);
    v5 = *(_QWORD *)(v0 + 272);
    v4 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 264);
    v8 = v2;
    v9 = objc_msgSend(v3, sel_identifier);
    sub_2318D55BC();

    v10 = v1;
    sub_2318D471C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *(_QWORD *)(v0 + 576);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
    goto LABEL_87;
  }

  v12 = *(_QWORD *)(v0 + 576);
  while (1)
  {
    v10 = *(_QWORD *)(v0 + 592);
    if (v10 == *(_QWORD *)(v0 + 560))
      break;
LABEL_67:
    *(_QWORD *)(v0 + 576) = v12;
    v82 = *(_QWORD *)(v0 + 552);
    if ((v82 & 0xC000000000000001) != 0)
      v83 = (id)MEMORY[0x2348E6E94](v10);
    else
      v83 = *(id *)(v82 + 8 * v10 + 32);
    *(_QWORD *)(v0 + 584) = v83;
    *(_QWORD *)(v0 + 592) = v10 + 1;
    if (!__OFADD__(v10, 1))
    {
      v84 = objc_msgSend(v83, sel_medicationIdentifier);
      v85 = sub_2318D55BC();
      v87 = v86;

      *(_QWORD *)(v0 + 600) = v87;
      v124 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
      v88 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 608) = v88;
      *v88 = v0;
      v88[1] = sub_2318384EC;
      return v124(v85, v87);
    }
LABEL_86:
    __break(1u);
LABEL_87:
    v12 = sub_2317ECBA4(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
LABEL_3:
    v14 = *(_QWORD *)(v12 + 16);
    v13 = *(_QWORD *)(v12 + 24);
    if (v14 >= v13 >> 1)
      v12 = sub_2317ECBA4(v13 > 1, v14 + 1, 1, v12);
    v15 = *(void **)(v0 + 584);
    v16 = *(_QWORD *)(v0 + 272);
    v17 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 256);
    v19 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v12 + 16) = v14 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v12+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v14, v16, v18);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    swift_bridgeObjectRelease();
    v21 = *(void **)(v0 + 536);
    if (!*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRelease();

      goto LABEL_21;
    }
    v22 = *(_QWORD *)(v0 + 368);
    v23 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 192) + *(_QWORD *)(v0 + 528);
    v26 = objc_msgSend(*(id *)(v0 + 536), sel_scheduledDateTime);
    sub_2318D2928();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v25, v23);
    sub_2318D5484();
    sub_2318D468C();
    swift_allocObject();
    v27 = v21;
    sub_2318D4698();
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 104) + 16))
    {
      v32 = *(_QWORD *)(v0 + 392);
      v29 = *(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 16);
      v30 = (_QWORD *)(v0 + 48);
      v20 = MEMORY[0x24BEE4AF8];
      goto LABEL_15;
    }
    v28 = *(_QWORD *)(v0 + 392);
    sub_2317FBF8C(*(_QWORD *)(v0 + 408));
    v29 = *(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 16);
    v30 = (_QWORD *)(v0 + 48);
    v20 = MEMORY[0x24BEE4AF8];
    if ((v31 & 1) == 0)
    {
      v32 = *(_QWORD *)(v0 + 392);
LABEL_15:
      v33 = *(_QWORD *)(v0 + 424);
      v34 = *(_QWORD *)(v0 + 384);
      v29(v33, *(_QWORD *)(v0 + 408), v34);
      v35 = *(_QWORD *)(v0 + 104);
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v127 = v35;
      sub_2317FE858(v20, v33, v36);
      *(_QWORD *)(v0 + 104) = v35;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    }
    v29(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384));
    v38 = sub_2317CED50(v30);
    if (*v37)
    {
      v39 = v37;
      v40 = swift_retain();
      MEMORY[0x2348E6528](v40);
      if (*(_QWORD *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      sub_2318D57A8();
    }
    ((void (*)(_QWORD *, _QWORD))v38)(v30, 0);
    v41 = *(void **)(v0 + 536);
    v10 = *(_QWORD *)(v0 + 400);
    v42 = *(_QWORD *)(v0 + 408);
    v43 = *(_QWORD *)(v0 + 384);
    v44 = *(_QWORD *)(v0 + 392);
    swift_release();

    v45 = *(void (**)(unint64_t, uint64_t))(v44 + 8);
    v45(v10, v43);
    v45(v42, v43);
LABEL_21:
    v12 = *(_QWORD *)(v0 + 544);
    if (v12 == *(_QWORD *)(v0 + 512))
      break;
    v46 = *(_QWORD *)(v0 + 176);
    if ((v46 & 0xC000000000000001) != 0)
    {
      v47 = (id)MEMORY[0x2348E6E94](*(_QWORD *)(v0 + 544));
    }
    else
    {
      if (v12 >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_84;
      v47 = *(id *)(v46 + 8 * v12 + 32);
    }
    *(_QWORD *)(v0 + 536) = v47;
    *(_QWORD *)(v0 + 544) = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    v48 = objc_msgSend(v47, sel_doses);
    sub_2317CCC9C(0, (unint64_t *)&unk_25418B080);
    v49 = sub_2318D5790();
    *(_QWORD *)(v0 + 552) = v49;

    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v0 + 560) = v10;
    v12 = v20;
    if (v10)
    {
      v10 = 0;
      *(_QWORD *)(v0 + 568) = *(_QWORD *)(*(_QWORD *)(v0 + 192) + *(_QWORD *)(v0 + 520));
      v12 = MEMORY[0x24BEE4AF8];
      goto LABEL_67;
    }
  }
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v0 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_2317EBD90(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
  v51 = *(_QWORD *)(v12 + 16);
  v50 = *(_QWORD *)(v12 + 24);
  v10 = v51 + 1;
  if (v51 >= v50 >> 1)
    v12 = sub_2317EBD90(v50 > 1, v51 + 1, 1, v12);
  v52 = *(_QWORD *)(v0 + 320);
  v53 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v12 + 16) = v10;
  sub_2317D40A8(v52, v12+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v51, type metadata accessor for MedicationDaySummaryViewModelChange);
  *(_QWORD *)(v0 + 120) = v12;
  v54 = *(_QWORD *)(v0 + 104);
  if (!*(_QWORD *)(v54 + 16))
  {
LABEL_73:
    v89 = *(_QWORD *)(v0 + 184);
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      v108 = sub_2318D6174();
      swift_bridgeObjectRelease();
      if (v108)
        goto LABEL_75;
    }
    else if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_75:
      sub_2318D4A04();
      swift_bridgeObjectRetain_n();
      v90 = sub_2318D4A10();
      v91 = sub_2318D5A54();
      v92 = os_log_type_enabled(v90, v91);
      v93 = *(_QWORD *)(v0 + 232);
      v95 = *(_QWORD *)(v0 + 208);
      v94 = *(_QWORD *)(v0 + 216);
      if (v92)
      {
        v125 = *(_QWORD *)(v0 + 232);
        v96 = *(_QWORD *)(v0 + 184);
        v97 = swift_slowAlloc();
        v98 = swift_slowAlloc();
        v127 = v98;
        *(_DWORD *)v97 = 136315394;
        v99 = sub_2318D63CC();
        *(_QWORD *)(v0 + 136) = sub_231851EBC(v99, v100, &v127);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        *(_WORD *)(v97 + 12) = 2080;
        *(_QWORD *)(v0 + 144) = v96;
        sub_2317DC15C(0, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        swift_bridgeObjectRetain();
        v101 = sub_2318D5610();
        *(_QWORD *)(v0 + 152) = sub_231851EBC(v101, v102, &v127);
        sub_2318D5F70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2317C8000, v90, v91, "[%s] Create model with updated medications: %s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v98, -1, -1);
        MEMORY[0x2348E77E8](v97, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v125, v95);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
      }
      **(_QWORD **)(v0 + 304) = *(_QWORD *)(v0 + 184);
      swift_storeEnumTagMultiPayload();
      v103 = *(_QWORD *)(v0 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v103 = sub_2317EBD90(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
      v105 = *(_QWORD *)(v103 + 16);
      v104 = *(_QWORD *)(v103 + 24);
      if (v105 >= v104 >> 1)
        v103 = sub_2317EBD90(v104 > 1, v105 + 1, 1, v103);
      v107 = *(_QWORD *)(v0 + 296);
      v106 = *(_QWORD *)(v0 + 304);
      *(_QWORD *)(v103 + 16) = v105 + 1;
      sub_2317D40A8(v106, v103+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(_QWORD *)(v107 + 72) * v105, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v0 + 120) = v103;
      goto LABEL_90;
    }
    v103 = *(_QWORD *)(v0 + 120);
LABEL_90:
    sub_2318D4A04();
    swift_bridgeObjectRetain_n();
    v109 = sub_2318D4A10();
    v110 = sub_2318D5A54();
    v111 = os_log_type_enabled(v109, v110);
    v113 = *(_QWORD *)(v0 + 216);
    v112 = *(_QWORD *)(v0 + 224);
    v114 = *(_QWORD *)(v0 + 208);
    if (v111)
    {
      v126 = *(_QWORD *)(v0 + 224);
      v115 = swift_slowAlloc();
      v116 = swift_slowAlloc();
      v127 = v116;
      *(_DWORD *)v115 = 136315394;
      v117 = sub_2318D63CC();
      *(_QWORD *)(v0 + 160) = sub_231851EBC(v117, v118, &v127);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      *(_WORD *)(v115 + 12) = 2048;
      v119 = *(_QWORD *)(v103 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 128) = v119;
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v109, v110, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v115, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v116, -1, -1);
      MEMORY[0x2348E77E8](v115, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v126, v114);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
    }
    swift_beginAccess();
    v121 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v121);
  }
  v120 = v54 + 64;
  v55 = -1;
  v56 = -1 << *(_BYTE *)(v54 + 32);
  if (-v56 < 64)
    v55 = ~(-1 << -(char)v56);
  v57 = v55 & *(_QWORD *)(v54 + 64);
  v122 = (unint64_t)(63 - v56) >> 6;
  v123 = *(_QWORD *)(v0 + 104);
  result = swift_bridgeObjectRetain();
  v59 = 0;
  if (v57)
  {
LABEL_40:
    v60 = __clz(__rbit64(v57));
    v57 &= v57 - 1;
    v61 = v60 | (v59 << 6);
LABEL_41:
    v62 = *(_QWORD *)(v0 + 240);
    (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 16))(v62, *(_QWORD *)(v123 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 392) + 72) * v61, *(_QWORD *)(v0 + 384));
    v63 = *(_QWORD *)(v123 + 56);
    sub_23183BD90(0);
    v65 = v64;
    *(_QWORD *)(v62 + *(int *)(v64 + 48)) = *(_QWORD *)(v63 + 8 * v61);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v62, 0, 1, v64);
    swift_bridgeObjectRetain();
    goto LABEL_60;
  }
  while (2)
  {
    v66 = v59 + 1;
    if (__OFADD__(v59, 1))
      goto LABEL_85;
    if (v66 >= v122)
      goto LABEL_59;
    v67 = *(_QWORD *)(v120 + 8 * v66);
    if (v67)
      goto LABEL_45;
    v68 = v59 + 2;
    ++v59;
    if (v66 + 1 >= v122)
      goto LABEL_59;
    v67 = *(_QWORD *)(v120 + 8 * v68);
    if (v67)
      goto LABEL_48;
    v59 = v66 + 1;
    if (v66 + 2 >= v122)
      goto LABEL_59;
    v67 = *(_QWORD *)(v120 + 8 * (v66 + 2));
    if (v67)
    {
      v66 += 2;
      goto LABEL_45;
    }
    v68 = v66 + 3;
    v59 = v66 + 2;
    if (v66 + 3 >= v122)
    {
LABEL_59:
      v69 = *(_QWORD *)(v0 + 240);
      sub_23183BD90(0);
      v65 = v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
      v57 = 0;
LABEL_60:
      v71 = *(_QWORD *)(v0 + 248);
      sub_2317D40A8(*(_QWORD *)(v0 + 240), v71, (uint64_t (*)(_QWORD))sub_23183BD74);
      sub_23183BD90(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v71, 1, v65) == 1)
      {
        swift_release();
        goto LABEL_73;
      }
      v72 = *(_QWORD *)(v0 + 384);
      v73 = *(_QWORD *)(v0 + 392);
      v74 = *(_QWORD *)(v0 + 312);
      v75 = *(_QWORD *)(v0 + 248);
      v76 = *(_QWORD *)(v75 + *(int *)(v65 + 48));
      sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
      v12 = *(int *)(v77 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v74, v75, v72);
      *(_QWORD *)(v74 + v12) = v76;
      swift_storeEnumTagMultiPayload();
      v10 = *(_QWORD *)(v0 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_2317EBD90(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
      v79 = *(_QWORD *)(v10 + 16);
      v78 = *(_QWORD *)(v10 + 24);
      if (v79 >= v78 >> 1)
        v10 = sub_2317EBD90(v78 > 1, v79 + 1, 1, v10);
      v80 = *(_QWORD *)(v0 + 312);
      v81 = *(_QWORD *)(v0 + 296);
      *(_QWORD *)(v10 + 16) = v79 + 1;
      result = sub_2317D40A8(v80, v10+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v79, type metadata accessor for MedicationDaySummaryViewModelChange);
      *(_QWORD *)(v0 + 120) = v10;
      if (v57)
        goto LABEL_40;
      continue;
    }
    break;
  }
  v67 = *(_QWORD *)(v120 + 8 * v68);
  if (v67)
  {
LABEL_48:
    v66 = v68;
LABEL_45:
    v57 = (v67 - 1) & v67;
    v61 = __clz(__rbit64(v67)) + (v66 << 6);
    v59 = v66;
    goto LABEL_41;
  }
  while (1)
  {
    v66 = v68 + 1;
    if (__OFADD__(v68, 1))
      break;
    if (v66 >= v122)
    {
      v59 = v122 - 1;
      goto LABEL_59;
    }
    v67 = *(_QWORD *)(v120 + 8 * v66);
    ++v68;
    if (v67)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_2318394A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2318395F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 584);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231839750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  sub_23183BC74(0, &qword_25418B008, MEMORY[0x24BEE6C80]);
  v6[14] = v7;
  v6[15] = *(_QWORD *)(v7 - 8);
  v6[16] = swift_task_alloc();
  sub_23183BE74();
  v6[17] = v8;
  v6[18] = *(_QWORD *)(v8 - 8);
  v6[19] = swift_task_alloc();
  sub_23183BEE8();
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231839814()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD);

  if ((sub_2318D5874() & 1) != 0 || (swift_beginAccess(), (Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(void **)(Strong
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver);
    *(_QWORD *)(v0 + 184) = v2;
    v2;
    swift_release();
    v5 = (uint64_t (*)(_QWORD, _QWORD))((int)*MEMORY[0x24BE464E0] + MEMORY[0x24BE464E0]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v3;
    *v3 = v0;
    v3[1] = sub_231839910;
    return v5(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_231839910()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_231839974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  sub_2318D5838();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_231839A2C;
  return sub_2318D5844();
}

uint64_t sub_231839A2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_231839A80()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 216) = v1;
  if (!v1)
  {
    v4 = *(void **)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));

LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 224) = Strong;
  if (!Strong)
  {
    v3 = *(void **)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    goto LABEL_7;
  }
  if ((sub_2318D5874() & 1) != 0)
  {
    v3 = *(void **)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_release();
LABEL_7:

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_11;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v6;
    *v6 = v0;
    v6[1] = sub_231839D24;
    return sub_231835BA8(MEMORY[0x24BEE4AF8], v1, MEMORY[0x24BEE4AF8]);
  }
  v9 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  sub_2317D4194(0, &qword_25418B168, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  type metadata accessor for MedicationDaySummaryViewModelChange(0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2318D8680;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v0 + 80) = v11;
  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  sub_2318D588C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v12;
  *v12 = v0;
  v12[1] = sub_231839A2C;
  return sub_2318D5844();
}

uint64_t sub_231839D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 240) = a1;
  *(_QWORD *)(v3 + 248) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_231839D98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[30];
  if (*(_QWORD *)(v1 + 16))
  {
    v0[9] = v1;
    v3 = v0[15];
    v2 = v0[16];
    v4 = v0[14];
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D588C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  v5 = (_QWORD *)swift_task_alloc();
  v0[26] = v5;
  *v5 = v0;
  v5[1] = sub_231839A2C;
  return sub_2318D5844();
}

uint64_t sub_231839E80()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231839EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231839F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[10] = a4;
  v5[11] = a5;
  sub_23183BC74(0, &qword_25418B008, MEMORY[0x24BEE6C80]);
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  sub_23183BCFC(0, &qword_25418B000, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A98]);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = swift_task_alloc();
  sub_23183BCFC(0, &qword_25418AFF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE6A78]);
  v5[18] = v8;
  v5[19] = *(_QWORD *)(v8 - 8);
  v5[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23183A038()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  if ((sub_2318D5874() & 1) != 0 || (swift_beginAccess(), (Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(Strong
                                      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource);
    swift_retain();
    swift_release();
    v4 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE45E98] + MEMORY[0x24BE45E98]);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    *v2 = v0;
    v2[1] = sub_23183A130;
    return v4(*(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_23183A130()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23183A194()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  sub_2318D5838();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v4 = (_QWORD *)swift_task_alloc();
  v0[24] = v4;
  *v4 = v0;
  v4[1] = sub_23183A24C;
  return sub_2318D5844();
}

uint64_t sub_23183A24C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23183A2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 200) = v1;
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 208) = Strong;
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    goto LABEL_7;
  }
  if ((sub_2318D5874() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_release();
LABEL_7:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v4;
  *v4 = v0;
  v4[1] = sub_23183A3C4;
  return sub_231835BA8(MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v1);
}

uint64_t sub_23183A3C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23183A438()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[28];
  if (*(_QWORD *)(v1 + 16))
  {
    v0[9] = v1;
    v3 = v0[13];
    v2 = v0[14];
    v4 = v0[12];
    sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
    sub_2318D588C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  v5 = (_QWORD *)swift_task_alloc();
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_23183A24C;
  return sub_2318D5844();
}

uint64_t sub_23183A520()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23183A57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23183A5F8()
{
  sub_2318D63CC();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D6138();
  return 0;
}

uint64_t sub_23183A688()
{
  return sub_23183A5F8();
}

unint64_t sub_23183A6AC()
{
  unint64_t result;

  result = qword_255F26A78;
  if (!qword_255F26A78)
  {
    result = MEMORY[0x2348E7734](&unk_2318DD91C, &type metadata for MedicationDaySummaryViewModel);
    atomic_store(result, (unint64_t *)&qword_255F26A78);
  }
  return result;
}

_UNKNOWN **sub_23183A6F0()
{
  return &off_25007E960;
}

uint64_t sub_23183A6FC()
{
  return sub_2317CC4AC(qword_255F26A80, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t)&unk_2318DA92C);
}

uint64_t type metadata accessor for MedicationDaySummaryViewModelChange(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F26BD8);
}

uint64_t sub_23183A73C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  unint64_t j;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v22;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v22 = a1 + 32;
  v4 = a2 + 56;
  swift_bridgeObjectRetain();
  for (i = 0; i != v2; ++i)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = (uint64_t *)(v22 + 16 * i);
      v8 = *v6;
      v7 = v6[1];
      sub_2318D6348();
      swift_bridgeObjectRetain();
      sub_2318D567C();
      v9 = sub_2318D6384();
      v10 = -1 << *(_BYTE *)(a2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_2318D62B8() & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          v20 = 0;
          goto LABEL_23;
        }
        v15 = ~v10;
        for (j = v11 + 1; ; j = v17 + 1)
        {
          v17 = j & v15;
          if (((*(_QWORD *)(v4 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0)
            break;
          v18 = (_QWORD *)(v12 + 16 * v17);
          v19 = *v18 == v8 && v18[1] == v7;
          if (v19 || (sub_2318D62B8() & 1) != 0)
            goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  v20 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23183A8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23183A90C()
{
  unint64_t result;

  result = qword_255F26AE0;
  if (!qword_255F26AE0)
  {
    type metadata accessor for MedicationDaySummaryViewModelChange(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F26AE0);
  }
  return result;
}

void sub_23183A944(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    sub_2318D54C0();
    sub_2317D4194(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_23183A9D0()
{
  unint64_t result;

  result = qword_255F26AE8;
  if (!qword_255F26AE8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F26AE8);
  }
  return result;
}

void sub_23183AA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[4];

  v4 = sub_2318D54C0();
  v16[1] = *(_QWORD *)(v4 - 8);
  v16[2] = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v16[0] = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  sub_23183AEB0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23183A8C8(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23183A8C8(a2, (uint64_t)v14);
  v15 = (char *)sub_23183AB90 + 4 * byte_2318DA860[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23183AB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  sub_23183A8C8(v0, v3);
  sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
  v6 = *(int *)(v5 + 48);
  v7 = *(_QWORD *)(v3 + v6);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 104) + 8))(v3, *(_QWORD *)(v4 - 96));
    LOBYTE(v8) = 0;
    v9 = (uint64_t (*)(_QWORD))sub_23183AEB0;
  }
  else
  {
    v10 = *(_QWORD *)(v2 + v6);
    v12 = *(_QWORD *)(v4 - 104);
    v11 = *(_QWORD *)(v4 - 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v1, v2, v11);
    sub_2317CC4AC((unint64_t *)&qword_255F25790, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_2318D5F94();
    v13 = *(_QWORD *)(v4 - 88);
    v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v3, v11);
    if (v13)
    {
      v14(v1, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v8) = 0;
    }
    else
    {
      v8 = sub_2318B5C60(v7, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14(v1, v11);
    }
    v9 = type metadata accessor for MedicationDaySummaryViewModelChange;
  }
  sub_2317CF774(v0, v9);
  return v8 & 1;
}

void sub_23183AEB0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26AF0)
  {
    type metadata accessor for MedicationDaySummaryViewModelChange(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26AF0);
  }
}

uint64_t sub_23183AF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  _QWORD v30[5];
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v32 = a3;
  v7 = sub_2318D297C();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BEE4B08];
  v13 = *(_QWORD *)(a4 + 16);
  v31 = (unint64_t)a1 >> 62;
  v43 = a1;
  if (v13)
  {
    v37 = a4 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v36 = *(_QWORD *)(v10 + 72);
    v14 = a2 & 0xFFFFFFFFFFFFFF8;
    v30[4] = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v14 = a2;
    v30[1] = v14;
    v44 = a2 & 0xC000000000000001;
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
    v30[3] = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v15 = a1;
    v30[0] = v15;
    v42 = a1 & 0xC000000000000001;
    v30[2] = a4;
    swift_bridgeObjectRetain();
    v34 = v12;
    v35 = v9;
    v33 = v13;
    v41 = 1;
    sub_23183A8C8(v37, (uint64_t)v12);
    v16 = (char *)&loc_23183B0D0 + *((int *)qword_23183B848 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  v17 = v43;
  if (v31)
  {
    swift_bridgeObjectRetain();
    v18 = sub_2318D6174();
    if (v18)
      goto LABEL_9;
LABEL_19:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v18 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
    goto LABEL_19;
LABEL_9:
  v45 = MEMORY[0x24BEE4AF8];
  sub_23186E30C(0, v18 & ~(v18 >> 63), 0);
  if (v18 < 0)
  {
    __break(1u);
    JUMPOUT(0x23183B848);
  }
  v19 = 0;
  v20 = v45;
  v21 = v17 & 0xC000000000000001;
  v22 = v38;
  do
  {
    if (v21)
      MEMORY[0x2348E6E94](v19, v17);
    else
      swift_retain();
    v23 = (void *)sub_2318D45E4();
    v24 = objc_msgSend(v23, sel_UUID);

    sub_2318D2964();
    swift_release();

    v45 = v20;
    v26 = *(_QWORD *)(v20 + 16);
    v25 = *(_QWORD *)(v20 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_23186E30C(v25 > 1, v26 + 1, 1);
      v20 = v45;
    }
    ++v19;
    *(_QWORD *)(v20 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v20+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v26, v22, v40);
    v17 = v43;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
LABEL_20:
  v27 = sub_231863518(v20);
  swift_bridgeObjectRelease();
  v28 = sub_231833618(v46, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v28 ^ 1) & 1;
}

uint64_t *sub_23183B85C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23183B89C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23183B8C0(uint64_t a1)
{
  uint64_t v1;

  return sub_231833D00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23183B8C8()
{
  return sub_231834388();
}

uint64_t sub_23183B8D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_2318D2718() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v6 + v8) & ~v8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + v9;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_2317F1604;
  return sub_23183451C(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_23183B9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = sub_2318D2718();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (v4 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_23183BA78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_2318D2718() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v6 + v8) & ~v8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + v9;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_2317D31D8;
  return sub_231839750(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_23183BB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_23183BBD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_23183BC74(0, &qword_25418B018, MEMORY[0x24BEE6CD0]);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + ((v5 + 40) & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2317F1604;
  return sub_231839F58(a1, v6, v7, v8, v9);
}

void sub_23183BC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2317D4194(255, &qword_25418AFC0, type metadata accessor for MedicationDaySummaryViewModelChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = v6;
    v8 = sub_2317E33D4();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_23183BCFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2317DC15C(255, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_23183BD74(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F26B40, (uint64_t (*)(uint64_t))sub_23183BD90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23183BD90(uint64_t a1)
{
  sub_23183BDE4(a1, &qword_255F26B48, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
}

void sub_23183BDAC(uint64_t a1)
{
  sub_2317D4194(a1, &qword_255F26B50, (uint64_t (*)(uint64_t))sub_23183BDC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23183BDC8(uint64_t a1)
{
  sub_23183BDE4(a1, &qword_255F26B58, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
}

void sub_23183BDE4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    sub_2318D54C0();
    sub_2317D4194(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_23183BE74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AFF8)
  {
    sub_2317DC15C(255, &qword_25418AFE0, &qword_25418B078, 0x24BE45CA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D585C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AFF8);
  }
}

void sub_23183BEE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AFE8)
  {
    sub_2317DC15C(255, &qword_25418AFE0, &qword_25418B078, 0x24BE45CA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D5850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AFE8);
  }
}

void sub_23183BF5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AF98)
  {
    sub_2317DC15C(255, &qword_25418AF90, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, MEMORY[0x24BDD2278]);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AF98);
  }
}

unint64_t sub_23183BFD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26B60;
  if (!qword_255F26B60)
  {
    sub_2317DC15C(255, &qword_25418AFA0, (unint64_t *)&unk_25418B448, 0x24BDD3ED8, MEMORY[0x24BDD2288]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2290], v1);
    atomic_store(result, (unint64_t *)&qword_255F26B60);
  }
  return result;
}

uint64_t sub_23183C038(uint64_t a1)
{
  uint64_t v2;

  sub_2317D4194(0, (unint64_t *)&qword_25418A9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_23183C08C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_2318D54C0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
        *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v11 = sub_2318D54C0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23183C230(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_2318D54C0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = &qword_255F253E0;
      v5 = &qword_25418AFC8;
      v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68];
      goto LABEL_4;
    case 1:
    case 3:
      goto LABEL_5;
    case 2:
      v7 = sub_2318D54C0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      v4 = &qword_255F253D8;
      v5 = &qword_25418AFD0;
      v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0];
LABEL_4:
      sub_23183A944(0, v4, v5, v6);
LABEL_5:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_23183C300(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_2318D54C0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1u:
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
      v8 = sub_2318D54C0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
      *(_QWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_23183C470(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_2317CF774((uint64_t)a1, type metadata accessor for MedicationDaySummaryViewModelChange);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_2318D54C0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
        *(_QWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 2u:
        v8 = sub_2318D54C0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
        *(_QWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 48));
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_23183C5F8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = sub_2318D54C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
    *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_2318D54C0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
    *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_23183C714(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2317CF774((uint64_t)a1, type metadata accessor for MedicationDaySummaryViewModelChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = sub_2318D54C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      sub_23183A944(0, &qword_255F253D8, &qword_25418AFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45EF0]);
      *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_2318D54C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      sub_23183A944(0, &qword_255F253E0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68]);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23183C848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23183C854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23183C864()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23183C874()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  result = sub_2318D54C0();
  if (v1 <= 0x3F)
  {
    v2 = MEMORY[0x24BEE0158] + 64;
    swift_getTupleTypeLayout2();
    v5 = &v4;
    v6 = v2;
    swift_getTupleTypeLayout2();
    v7 = &v3;
    v8 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDoseRemindersItem()
{
  uint64_t result;

  result = qword_255F26C20;
  if (!qword_255F26C20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23183C954()
{
  return swift_initClassMetadata2();
}

void sub_23183C9A8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23183C9F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD v18[2];
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v2 + qword_255F26C18);
  if (v8 == 1)
  {
    sub_2318D49EC();
    v9 = sub_2318D4A10();
    v10 = sub_2318D5A54();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v20 = a1;
      v12 = (uint8_t *)v11;
      v19 = swift_slowAlloc();
      v22 = v19;
      *(_DWORD *)v12 = 136315138;
      v18[1] = v12 + 4;
      v13 = sub_2318D63CC();
      v21 = sub_231851EBC(v13, v14, &v22);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v9, v10, "[%s]: Showing notifications disabled alert", v12, 0xCu);
      v15 = v19;
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v15, -1, -1);
      v16 = v12;
      a1 = v20;
      MEMORY[0x2348E77E8](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_23183CBC0(a1);
  }
  return v8 ^ 1u;
}

void sub_23183CBC0(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t aBlock[6];

  v26 = a1;
  v22 = *v1;
  v2 = sub_2318D4A1C();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  sub_2318D2808();
  v4 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1, v22);

  sub_2318D2808();
  v7 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v7, 1, 0);

  objc_msgSend(v6, sel_addAction_, v9);
  sub_2318D2808();
  v10 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  aBlock[4] = (uint64_t)sub_23180D05C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23183C9A8;
  aBlock[3] = (uint64_t)&unk_25007EA40;
  v11 = _Block_copy(aBlock);
  swift_release();
  v12 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v10, 0, v11);
  _Block_release(v11);

  objc_msgSend(v6, sel_addAction_, v12);
  objc_msgSend(v6, sel_setPreferredAction_, v12);
  v13 = objc_msgSend(v26, sel_viewController);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v6, 1, 0);

  }
  else
  {
    v15 = v25;
    sub_2318D49EC();
    v16 = sub_2318D4A10();
    v17 = sub_2318D5A3C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_2318D63CC();
      v27 = sub_231851EBC(v20, v21, aBlock);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v16, v17, "[%s]: Could not present alert: No view controller available", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v19, -1, -1);
      MEMORY[0x2348E77E8](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v24);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v24);
    }
  }
}

void sub_23183D084()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23183D0B0()
{
  return swift_release();
}

uint64_t sub_23183D0C0()
{
  sub_2318D3984();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23183D0FC()
{
  return type metadata accessor for MedicationsDoseRemindersItem();
}

uint64_t sub_23183D104()
{
  uint64_t v0;
  char v1;

  if ((sub_2318D44D0() & 1) != 0)
    v1 = *(_BYTE *)(v0 + qword_255F26C18) ^ 1;
  else
    v1 = 0;
  return v1 & 1;
}

uint64_t sub_23183D15C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + qword_255F26C10) = a1;
  *(_BYTE *)(v2 + qword_255F26C18) = a2;
  v3 = qword_25418B328;
  swift_retain();
  if (v3 != -1)
    swift_once();
  sub_2318D2808();
  return sub_2318D3978();
}

void sub_23183D220(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t inited;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49C8();
  v6 = sub_2318D4A10();
  v7 = sub_2318D5A54();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v21 = v3;
    v9 = v8;
    v10 = swift_slowAlloc();
    v23 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_2318D63CC();
    v22 = sub_231851EBC(v11, v12, &v23);
    v20 = v2;
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if ((a1 & 1) != 0)
      v13 = 28271;
    else
      v13 = 6710895;
    if ((a1 & 1) != 0)
      v14 = 0xE200000000000000;
    else
      v14 = 0xE300000000000000;
    v22 = sub_231851EBC(v13, v14, &v23);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v6, v7, "[%s]: Notification setting switch toggled to %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_2318D44DC();
  v15 = (void *)*MEMORY[0x24BE45C50];
  sub_23183D4F8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2318D8680;
  *(_QWORD *)(inited + 32) = sub_2318D55BC();
  *(_QWORD *)(inited + 40) = v17;
  v18 = v15;
  sub_231863460(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v19 = (void *)sub_2318D591C();
  swift_bridgeObjectRelease();
  HKSynchronizeNanoPreferencesUserDefaults();

}

void sub_23183D4F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B470)
  {
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B470);
  }
}

uint64_t sub_23183D54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23183D55C()
{
  return swift_release();
}

uint64_t SharedMedicationsChartCellDataSource.layout(for:environment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2318D3630();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D3624();
  v4 = sub_2318D360C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void SharedMedicationsChartCellDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SharedMedicationsChartCellDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23183D648()
{
  uint64_t v0;

  return sub_2317E83B4(v0 + qword_255F286A0);
}

uint64_t SharedMedicationsChartCellDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_2318D3198();
  sub_2317E83B4(v0 + qword_255F286A0);
  return v0;
}

uint64_t SharedMedicationsChartCellDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = sub_2318D3198();
  sub_2317E83B4(v0 + qword_255F286A0);
  return swift_deallocClassInstance();
}

uint64_t sub_23183D6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2318D3630();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D3624();
  v4 = sub_2318D360C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_23183D758()
{
  MEMORY[0x2348E7734](&protocol conformance descriptor for SharedMedicationsChartCellDataSource);
  return sub_2318D3EB8();
}

Swift::Void __swiftcall SharedMedicationsChartCellDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_2318D3834();
  sub_2318D5AC0();
}

unint64_t sub_23183D7DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26C70;
  if (!qword_255F26C70)
  {
    v1 = type metadata accessor for SharedMedicationsChartCellDataSource();
    result = MEMORY[0x2348E7734](&protocol conformance descriptor for SharedMedicationsChartCellDataSource, v1);
    atomic_store(result, (unint64_t *)&qword_255F26C70);
  }
  return result;
}

uint64_t type metadata accessor for SharedMedicationsChartCellDataSource()
{
  uint64_t result;

  result = qword_255F26C78;
  if (!qword_255F26C78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23183D860()
{
  sub_2318D3834();
  return sub_2318D5AC0();
}

uint64_t sub_23183D894()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23183D908()
{
  return type metadata accessor for SharedMedicationsChartCellDataSource();
}

uint64_t sub_23183D910(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x676E6972616873;
  else
    v2 = 0x7972616D697270;
  if ((a2 & 1) != 0)
    v3 = 0x676E6972616873;
  else
    v3 = 0x7972616D697270;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_2318D62B8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_23183D98C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x756F636341646461;
  else
    v3 = 0x6E53646572616873;
  if (v2)
    v4 = 0xED00007465707069;
  else
    v4 = 0xEA0000000000746ELL;
  if ((a2 & 1) != 0)
    v5 = 0x756F636341646461;
  else
    v5 = 0x6E53646572616873;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000746ELL;
  else
    v6 = 0xED00007465707069;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2318D62B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23183DA40()
{
  sub_2317CC4AC(&qword_255F26E38, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&unk_2318D75FC);
  return sub_2318D5760();
}

uint64_t sub_23183DAB4()
{
  sub_2317CC4AC(&qword_255F26E38, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&unk_2318D75FC);
  return sub_2318D5748();
}

uint64_t sub_23183DB18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_231831E7C(0, &qword_254189F68, (uint64_t (*)(void))sub_23184AF38, (uint64_t)&type metadata for SharedMedicationsChartSeries.CodingKeys, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2317D4B08(a1, a1[3]);
  sub_23184AF38();
  sub_2318D63A8();
  v11 = 0;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  sub_23184AFDC();
  sub_2318D6240();
  if (!v1)
  {
    type metadata accessor for SharedMedicationsChartSeries(0);
    v10 = 1;
    sub_2318D6240();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23183DC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v15 - v4;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  sub_2318D6348();
  sub_231845F7C(v0, (uint64_t)v11, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v12(v11, 1, v2) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = type metadata accessor for SharedMedicationsChartSeries(0);
  sub_231845F7C(v0 + *(int *)(v13 + 20), (uint64_t)v9, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v12(v9, 1, v2) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_2318D6384();
}

uint64_t sub_23183DEE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  char v25;

  v19 = a2;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - v6;
  sub_231831E7C(0, &qword_255F26E18, (uint64_t (*)(void))sub_23184AF38, (uint64_t)&type metadata for SharedMedicationsChartSeries.CodingKeys, MEMORY[0x24BEE33E0]);
  v22 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SharedMedicationsChartSeries(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4B08(a1, a1[3]);
  sub_23184AF38();
  v14 = (uint64_t)v23;
  sub_2318D639C();
  if (v14)
    return sub_2317D4B2C((uint64_t)a1);
  v23 = a1;
  v18 = v11;
  v15 = (uint64_t)v20;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v25 = 0;
  sub_23184AF7C();
  v16 = (uint64_t)v21;
  sub_2318D61F8();
  sub_231846118(v16, (uint64_t)v13, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v24 = 1;
  sub_2318D61F8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  sub_231846118(v15, (uint64_t)&v13[*(int *)(v18 + 20)], (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_2317D404C((uint64_t)v13, v19, type metadata accessor for SharedMedicationsChartSeries);
  sub_2317D4B2C((uint64_t)v23);
  return sub_2317CF774((uint64_t)v13, type metadata accessor for SharedMedicationsChartSeries);
}

uint64_t sub_23183E218()
{
  sub_2317CC4AC(&qword_255F26E30, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextLoggingUnitCode, (uint64_t)&unk_2318D769C);
  return sub_2318D5760();
}

uint64_t sub_23183E28C()
{
  sub_2317CC4AC(&qword_255F26E30, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextLoggingUnitCode, (uint64_t)&unk_2318D769C);
  return sub_2318D5748();
}

BOOL sub_23183E2F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23183E308()
{
  _BYTE *v0;

  if (*v0)
    return 0x68746E6F4D786973;
  else
    return 0x74614468746E6F6DLL;
}

uint64_t sub_23183E354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23184B6AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23183E378(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23183E384()
{
  sub_23184AF38();
  return sub_2318D63B4();
}

uint64_t sub_23183E3AC()
{
  sub_23184AF38();
  return sub_2318D63C0();
}

uint64_t sub_23183E3D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23183DEE0(a1, a2);
}

uint64_t sub_23183E3E8(_QWORD *a1)
{
  return sub_23183DB18(a1);
}

uint64_t sub_23183E400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v17 = a2;
  v3 = v2;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  v18 = v3;
  sub_231845F7C(v3, (uint64_t)&v17 - v13, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_231845F7C(v18 + *(int *)(v17 + 20), (uint64_t)v12, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v15(v12, 1, v5) == 1)
    return sub_2318D6360();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  sub_2318D6360();
  sub_231848450();
  sub_2318D5520();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23183E648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v16 = a2;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - v6;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  sub_2318D6348();
  sub_231845F7C(v2, (uint64_t)v13, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v14(v13, 1, v4) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_231845F7C(v2 + *(int *)(v16 + 20), (uint64_t)v11, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v14(v11, 1, v4) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_2318D6384();
}

uint64_t sub_23183E8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  v72 = sub_2318D2FC4();
  v67 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v58 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_2541881B8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)&v54 - v8;
  v9 = sub_2318D294C();
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, v11, v5);
  MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v54 - v13;
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v63 = v14;
  v69 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v54 - v15;
  sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  MEMORY[0x24BDAC7A8](v16);
  v62 = (uint64_t)&v54 - v17;
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v61 = v18;
  v71 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v54 = (char *)&v54 - v19;
  sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  MEMORY[0x24BDAC7A8](v20);
  v59 = (uint64_t)&v54 - v21;
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v23 = v22;
  v68 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v55 = (char *)&v54 - v24;
  sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  MEMORY[0x24BDAC7A8](v25);
  v60 = (char *)&v54 - v26;
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 48))
  {
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2318D6360();
  }
  v27 = v71;
  if (*(_QWORD *)(v2 + 64))
  {
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 80))
      goto LABEL_6;
  }
  else
  {
    sub_2318D6360();
    if (*(_QWORD *)(v2 + 80))
    {
LABEL_6:
      sub_2318D6360();
      swift_bridgeObjectRetain();
      sub_2318D567C();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v2 + 96))
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 96))
  {
LABEL_7:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 112))
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 112))
  {
LABEL_8:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 128))
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 128))
  {
LABEL_9:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 144))
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 144))
  {
LABEL_10:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 160))
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 160))
  {
LABEL_11:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 176))
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 176))
  {
LABEL_12:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v2 + 184);
    if (v28)
      goto LABEL_13;
LABEL_29:
    sub_2318D6360();
    if (*(_QWORD *)(v2 + 200))
      goto LABEL_18;
    goto LABEL_30;
  }
LABEL_28:
  sub_2318D6360();
  v28 = *(_QWORD *)(v2 + 184);
  if (!v28)
    goto LABEL_29;
LABEL_13:
  sub_2318D6360();
  sub_2318D6354();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    v30 = v28 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2318D567C();
      swift_bridgeObjectRelease();
      v30 += 16;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    v27 = v71;
  }
  if (*(_QWORD *)(v2 + 200))
  {
LABEL_18:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 216))
      goto LABEL_19;
LABEL_31:
    sub_2318D6360();
    if (*(_QWORD *)(v2 + 232))
      goto LABEL_20;
    goto LABEL_32;
  }
LABEL_30:
  sub_2318D6360();
  if (!*(_QWORD *)(v2 + 216))
    goto LABEL_31;
LABEL_19:
  sub_2318D6360();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 232))
  {
LABEL_20:
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_32:
  sub_2318D6360();
LABEL_33:
  if (*(_BYTE *)(v2 + 240) != 2)
    sub_2318D6360();
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 256))
  {
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2318D6360();
  }
  if (*(_BYTE *)(v2 + 264) != 2)
    sub_2318D6360();
  sub_2318D6360();
  if (*(_QWORD *)(v2 + 280))
  {
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2318D6360();
  }
  if (*(_QWORD *)(v2 + 296))
  {
    sub_2318D6360();
    swift_bridgeObjectRetain();
    sub_2318D567C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2318D6360();
  }
  v32 = v68;
  v31 = v69;
  if (*(_BYTE *)(v2 + 312) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    sub_2318D6360();
    sub_2318D6378();
  }
  if (*(_BYTE *)(v2 + 328) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    sub_2318D6360();
    sub_2318D6378();
  }
  v33 = v63;
  v34 = (uint64_t)v60;
  v35 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_231845F7C(v2 + v35[27], v34, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v23) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v36 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v55, v34, v23);
    sub_2318D6360();
    sub_231847EE8();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v23);
  }
  v37 = v67;
  v38 = v61;
  v39 = v59;
  sub_231845F7C(v2 + v35[28], v59, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  v40 = v27;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v39, 1, v38) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
    v42 = v54;
    v41(v54, v39, v38);
    sub_2318D6360();
    sub_231847F88();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v38);
  }
  v43 = v62;
  sub_231845F7C(v2 + v35[29], v62, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v43, 1, v33) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v44 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v56, v43, v33);
    sub_2318D6360();
    sub_231848028();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v44, v33);
  }
  v46 = v64;
  v45 = v65;
  v47 = *(_QWORD *)(v2 + v35[30]);
  sub_2318D6360();
  if (v47)
  {
    swift_bridgeObjectRetain();
    sub_2318BE01C(a1, v47);
    swift_bridgeObjectRelease();
  }
  sub_2318480C8(a1);
  sub_2318D6360();
  v48 = v70;
  sub_2317F9B14(v2 + v35[33], v70, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v48, 1, v45) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v49 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v57, v48, v45);
    sub_2318D6360();
    sub_2317CC4AC(&qword_255F26D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
  }
  v50 = v66;
  sub_2317F9B14(v2 + v35[34], v66, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v50, 1, v72) == 1)
    return sub_2318D6360();
  v52 = v58;
  v53 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v58, v50, v72);
  sub_2318D6360();
  sub_2317CC4AC(&qword_255F26D78, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E88]);
  sub_2318D5520();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v52, v53);
}

uint64_t sub_23183F630(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23183F668 + 4 * byte_2318DAB40[a1]))(0xD000000000000010, 0x80000002318E21B0);
}

uint64_t sub_23183F668(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23183F824()
{
  return 0x656C756465686373;
}

uint64_t sub_23183F83C()
{
  return 0x6563655274736F6DLL;
}

uint64_t sub_23183F860()
{
  return 0x7265537472616863;
}

uint64_t sub_23183F880()
{
  return 0x6465766968637261;
}

uint64_t sub_23183F898()
{
  return 0x746E6176656C6572;
}

uint64_t sub_23183F8B8()
{
  return 0x6E6F6973726576;
}

uint64_t sub_23183F8D0()
{
  return 0x67694868746E6F6DLL;
}

uint64_t sub_23183F8F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  sub_231831E7C(0, &qword_254189F70, (uint64_t (*)(void))sub_231845FD0, (uint64_t)&type metadata for SharedMedicationsFeedItemData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  sub_2317D4B08(a1, a1[3]);
  sub_231845FD0();
  sub_2318D63A8();
  LOBYTE(v14) = 0;
  sub_2318D624C();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_2318D624C();
    LOBYTE(v14) = *(_BYTE *)(v3 + 32);
    v16 = 2;
    sub_231846268();
    sub_2318D6264();
    LOBYTE(v14) = 3;
    sub_2318D6228();
    LOBYTE(v14) = 4;
    sub_2318D6228();
    LOBYTE(v14) = 5;
    sub_2318D6228();
    LOBYTE(v14) = 6;
    sub_2318D6228();
    LOBYTE(v14) = 7;
    sub_2318D6228();
    LOBYTE(v14) = 8;
    sub_2318D6228();
    LOBYTE(v14) = 9;
    sub_2318D6228();
    LOBYTE(v14) = 10;
    sub_2318D6228();
    LOBYTE(v14) = 11;
    sub_2318D6228();
    v14 = *(_QWORD *)(v3 + 184);
    v16 = 12;
    sub_2317CDA94(0, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2318462AC(&qword_254189E28, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2318D6240();
    LOBYTE(v14) = 13;
    sub_2318D6228();
    LOBYTE(v14) = 14;
    sub_2318D6228();
    LOBYTE(v14) = 15;
    sub_2318D6228();
    LOBYTE(v14) = 16;
    sub_2318D6234();
    LOBYTE(v14) = 17;
    sub_2318D6228();
    LOBYTE(v14) = 18;
    sub_2318D6234();
    LOBYTE(v14) = 19;
    sub_2318D6228();
    LOBYTE(v14) = 20;
    sub_2318D6228();
    v10 = *(_BYTE *)(v3 + 312);
    v14 = *(_QWORD *)(v3 + 304);
    v15 = v10;
    v16 = 21;
    type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
    sub_2317CC4AC(&qword_254189F10, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&protocol conformance descriptor for HKMedicationFreeTextFormTypeCode);
    sub_2318D6240();
    v11 = *(_BYTE *)(v3 + 328);
    v14 = *(_QWORD *)(v3 + 320);
    v15 = v11;
    v16 = 22;
    type metadata accessor for HKMedicationFreeTextLoggingUnitCode(0);
    sub_2317CC4AC(&qword_254189F38, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextLoggingUnitCode, (uint64_t)&protocol conformance descriptor for HKMedicationFreeTextLoggingUnitCode);
    sub_2318D6240();
    v12 = type metadata accessor for SharedMedicationsFeedItemData(0);
    LOBYTE(v14) = 23;
    sub_231842750(0, &qword_2541880F8, &qword_254189E78);
    sub_231846320();
    sub_2318D6240();
    LOBYTE(v14) = 24;
    sub_231842750(0, &qword_254188110, &qword_25418B428);
    sub_231846380();
    sub_2318D6240();
    LOBYTE(v14) = 25;
    sub_231842750(0, &qword_254188128, &qword_25418B438);
    sub_2318463E0();
    sub_2318D6240();
    v14 = *(_QWORD *)(v3 + *(int *)(v12 + 120));
    v16 = 26;
    sub_2317CDA94(0, &qword_254189DC8, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231846440(&qword_254189DD0, (uint64_t (*)(void))sub_2318464BC, MEMORY[0x24BEE12A0]);
    sub_2318D6240();
    LOBYTE(v14) = 27;
    type metadata accessor for SharedMedicationsChartSeries(0);
    sub_2317CC4AC(&qword_254188228, type metadata accessor for SharedMedicationsChartSeries, (uint64_t)&unk_2318DAE28);
    sub_2318D6240();
    LOBYTE(v14) = 28;
    sub_2318D6258();
    LOBYTE(v14) = 29;
    sub_2318D294C();
    sub_2317CC4AC(&qword_254188168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_2318D6240();
    LOBYTE(v14) = 30;
    sub_2318D2FC4();
    sub_2317CC4AC(&qword_2541881B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E80]);
    sub_2318D6240();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_231840150@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t result;
  int *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char v115;
  _BOOL4 v116;
  char v117;

  v106 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v105 = (uint64_t)&v97 - v5;
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v3);
  MEMORY[0x24BDAC7A8](v6);
  v104 = (uint64_t)&v97 - v7;
  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v3);
  MEMORY[0x24BDAC7A8](v8);
  v107 = (char *)&v97 - v9;
  sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v97 - v11;
  sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v97 - v14;
  sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v97 - v17;
  sub_231831E7C(0, &qword_255F26CE0, (uint64_t (*)(void))sub_231845FD0, (uint64_t)&type metadata for SharedMedicationsFeedItemData.CodingKeys, MEMORY[0x24BEE33E0]);
  v110 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v97 - v21;
  v111 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x24BDAC7A8](v111);
  v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v24 + 5) = 0;
  *((_QWORD *)v24 + 6) = 0;
  v113 = v24;
  v25 = a1[3];
  v108 = (uint64_t)a1;
  sub_2317D4B08(a1, v25);
  sub_231845FD0();
  v109 = v22;
  v26 = v112;
  sub_2318D639C();
  if (v26)
  {
    v112 = v26;
    LODWORD(v110) = 0;
    v30 = 8;
  }
  else
  {
    v27 = (uint64_t)v15;
    v28 = (uint64_t)v107;
    LOBYTE(v114) = 0;
    v29 = sub_2318D6204();
    v41 = v113;
    *(_QWORD *)v113 = v29;
    *((_QWORD *)v41 + 1) = v42;
    LOBYTE(v114) = 1;
    *((_QWORD *)v41 + 2) = sub_2318D6204();
    *((_QWORD *)v41 + 3) = v43;
    v117 = 2;
    sub_231846014();
    sub_2318D621C();
    v41[32] = v114;
    LOBYTE(v114) = 3;
    *((_QWORD *)v41 + 5) = sub_2318D61E0();
    *((_QWORD *)v41 + 6) = v44;
    LOBYTE(v114) = 4;
    *((_QWORD *)v41 + 7) = sub_2318D61E0();
    *((_QWORD *)v41 + 8) = v45;
    LOBYTE(v114) = 5;
    *((_QWORD *)v41 + 9) = sub_2318D61E0();
    *((_QWORD *)v41 + 10) = v46;
    LOBYTE(v114) = 6;
    *((_QWORD *)v41 + 11) = sub_2318D61E0();
    *((_QWORD *)v41 + 12) = v47;
    LOBYTE(v114) = 7;
    *((_QWORD *)v41 + 13) = sub_2318D61E0();
    *((_QWORD *)v41 + 14) = v48;
    LOBYTE(v114) = 8;
    *((_QWORD *)v41 + 15) = sub_2318D61E0();
    *((_QWORD *)v41 + 16) = v49;
    LOBYTE(v114) = 9;
    v50 = sub_2318D61E0();
    v112 = 0;
    v51 = v113;
    *((_QWORD *)v113 + 17) = v50;
    *((_QWORD *)v51 + 18) = v52;
    LOBYTE(v114) = 10;
    v53 = sub_2318D61E0();
    v112 = 0;
    v54 = v113;
    *((_QWORD *)v113 + 19) = v53;
    *((_QWORD *)v54 + 20) = v55;
    LOBYTE(v114) = 11;
    v56 = sub_2318D61E0();
    v112 = 0;
    v58 = v113;
    *((_QWORD *)v113 + 21) = v56;
    *((_QWORD *)v58 + 22) = v57;
    sub_2317CDA94(0, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v117 = 12;
    sub_2318462AC(&qword_255F26CF0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v59 = v112;
    sub_2318D61F8();
    v112 = v59;
    if (v59)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
      LODWORD(v110) = 0;
      v30 = 4091;
    }
    else
    {
      *((_QWORD *)v113 + 23) = v114;
      LOBYTE(v114) = 13;
      v60 = v112;
      v61 = sub_2318D61E0();
      v112 = v60;
      if (v60)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
        LODWORD(v110) = 0;
        v30 = 8187;
      }
      else
      {
        v63 = v113;
        *((_QWORD *)v113 + 24) = v61;
        *((_QWORD *)v63 + 25) = v62;
        LOBYTE(v114) = 14;
        v64 = sub_2318D61E0();
        v112 = 0;
        v65 = v113;
        *((_QWORD *)v113 + 26) = v64;
        *((_QWORD *)v65 + 27) = v66;
        LOBYTE(v114) = 15;
        v67 = sub_2318D61E0();
        v112 = 0;
        v68 = v113;
        *((_QWORD *)v113 + 28) = v67;
        *((_QWORD *)v68 + 29) = v69;
        LOBYTE(v114) = 16;
        v70 = sub_2318D61EC();
        v112 = 0;
        v113[240] = v70;
        LOBYTE(v114) = 17;
        v71 = sub_2318D61E0();
        v112 = 0;
        v72 = v113;
        *((_QWORD *)v113 + 31) = v71;
        *((_QWORD *)v72 + 32) = v73;
        LOBYTE(v114) = 18;
        v74 = sub_2318D61EC();
        v112 = 0;
        v113[264] = v74;
        LOBYTE(v114) = 19;
        v75 = sub_2318D61E0();
        v112 = 0;
        v76 = v113;
        *((_QWORD *)v113 + 34) = v75;
        *((_QWORD *)v76 + 35) = v77;
        LOBYTE(v114) = 20;
        v78 = sub_2318D61E0();
        v112 = 0;
        v79 = v113;
        *((_QWORD *)v113 + 36) = v78;
        *((_QWORD *)v79 + 37) = v80;
        type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
        v117 = 21;
        sub_2317CC4AC(&qword_255F26CF8, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, (uint64_t)&protocol conformance descriptor for HKMedicationFreeTextFormTypeCode);
        v81 = v112;
        sub_2318D61F8();
        v112 = v81;
        if (v81)
          goto LABEL_60;
        v82 = v113;
        v83 = v113 + 312;
        v84 = v115;
        *((_QWORD *)v113 + 38) = v114;
        v82[312] = v84;
        type metadata accessor for HKMedicationFreeTextLoggingUnitCode(0);
        v117 = 22;
        sub_2317CC4AC(&qword_255F26D00, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextLoggingUnitCode, (uint64_t)&protocol conformance descriptor for HKMedicationFreeTextLoggingUnitCode);
        v85 = v112;
        sub_2318D61F8();
        v112 = v85;
        if (v85)
          goto LABEL_60;
        v86 = v115;
        *((_QWORD *)v113 + 40) = v114;
        v83[16] = v86;
        sub_231842750(0, &qword_2541880F8, &qword_254189E78);
        LOBYTE(v114) = 23;
        sub_231846058();
        v87 = v112;
        sub_2318D61F8();
        v112 = v87;
        if (v87)
        {
LABEL_60:
          v30 = 1769467;
          (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
          LODWORD(v110) = 0;
        }
        else
        {
          sub_231846118((uint64_t)v18, (uint64_t)&v113[v111[27]], (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
          sub_231842750(0, &qword_254188110, &qword_25418B428);
          LOBYTE(v114) = 24;
          sub_2318460B8();
          v88 = v112;
          sub_2318D61F8();
          v112 = v88;
          if (v88)
          {
            (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
            LODWORD(v110) = 0;
            v30 = 10158075;
          }
          else
          {
            sub_231846118(v27, (uint64_t)&v113[v111[28]], (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            sub_231842750(0, &qword_254188128, &qword_25418B438);
            LOBYTE(v114) = 25;
            sub_23184616C();
            v89 = v112;
            sub_2318D61F8();
            v112 = v89;
            if (v89)
            {
              (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
              LODWORD(v110) = 0;
              v30 = 26935291;
            }
            else
            {
              sub_231846118((uint64_t)v12, (uint64_t)&v113[v111[29]], (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
              sub_2317CDA94(0, &qword_254189DC8, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
              v117 = 26;
              sub_231846440(&qword_255F26D20, (uint64_t (*)(void))sub_2318461CC, MEMORY[0x24BEE12D0]);
              v90 = v112;
              sub_2318D61F8();
              v112 = v90;
              if (!v90)
              {
                *(_QWORD *)&v113[v111[30]] = v114;
                type metadata accessor for SharedMedicationsChartSeries(0);
                LOBYTE(v114) = 27;
                sub_2317CC4AC(&qword_255F26D30, type metadata accessor for SharedMedicationsChartSeries, (uint64_t)&unk_2318DAE50);
                v91 = v112;
                sub_2318D61F8();
                v116 = v91 == 0;
                v112 = v91;
                if (v91)
                  goto LABEL_70;
                sub_231846210(v28, (uint64_t)&v113[v111[31]], (uint64_t)qword_254188268, (uint64_t)type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
                LOBYTE(v114) = 28;
                v92 = v112;
                v93 = sub_2318D6210();
                v112 = v92;
                if (v92
                  || (v113[v111[32]] = v93 & 1,
                      sub_2318D294C(),
                      LOBYTE(v114) = 29,
                      sub_2317CC4AC(&qword_254187F68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]), v94 = v112, sub_2318D61F8(), (v112 = v94) != 0))
                {
LABEL_70:
                  (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
                  LODWORD(v109) = 0;
                }
                else
                {
                  sub_231846210(v104, (uint64_t)&v113[v111[33]], (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
                  sub_2318D2FC4();
                  LOBYTE(v114) = 30;
                  sub_2317CC4AC(&qword_255F26D38, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E98]);
                  v95 = v112;
                  sub_2318D61F8();
                  v112 = v95;
                  if (!v95)
                  {
                    (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
                    v96 = (uint64_t)v113;
                    sub_231846210(v105, (uint64_t)&v113[v111[34]], (uint64_t)&qword_2541881B8, (uint64_t)MEMORY[0x24BE47E70], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
                    sub_2317D404C(v96, v106, type metadata accessor for SharedMedicationsFeedItemData);
                    sub_2317D4B2C(v108);
                    return sub_2317CF774(v96, type metadata accessor for SharedMedicationsFeedItemData);
                  }
                  (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
                  LODWORD(v109) = 1;
                }
                sub_2317D4B2C(v108);
                v31 = v113;
                swift_bridgeObjectRelease();
                LODWORD(v108) = 1;
                LODWORD(v110) = 1;
                LODWORD(v107) = 1;
                LODWORD(v106) = 1;
                LODWORD(v105) = 1;
                v103 = 1;
                LODWORD(v104) = 1;
                v101 = 1;
                v102 = 1;
                v99 = 1;
                v100 = 1;
                v98 = 1;
                v38 = 1;
                v37 = 1;
                v36 = 1;
                v35 = 1;
                v34 = 1;
                v33 = 1;
                LOBYTE(v32) = 1;
LABEL_7:
                swift_bridgeObjectRelease();
                result = swift_bridgeObjectRelease();
                if ((v32 & 1) != 0)
                  goto LABEL_8;
                goto LABEL_31;
              }
              (*(void (**)(char *, uint64_t))(v20 + 8))(v109, v110);
              v30 = 60489723;
              LODWORD(v110) = 1;
            }
          }
        }
      }
    }
  }
  v31 = v113;
  sub_2317D4B2C(v108);
  v32 = (v30 >> 4) & 1;
  v33 = (v30 >> 5) & 1;
  v34 = (v30 >> 6) & 1;
  v35 = (v30 >> 7) & 1;
  v36 = (v30 >> 8) & 1;
  v37 = (v30 >> 9) & 1;
  v38 = (v30 >> 10) & 1;
  LODWORD(v107) = HIBYTE(v30) & 1;
  LODWORD(v106) = (v30 >> 23) & 1;
  LODWORD(v105) = (v30 >> 20) & 1;
  v103 = (v30 >> 17) & 1;
  LODWORD(v104) = (v30 >> 19) & 1;
  v101 = (v30 >> 14) & 1;
  v102 = (v30 >> 15) & 1;
  v99 = (v30 >> 12) & 1;
  v100 = (v30 >> 13) & 1;
  v98 = (v30 >> 11) & 1;
  if ((v30 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if ((v30 & 2) != 0)
      goto LABEL_6;
  }
  else if ((v30 & 2) != 0)
  {
LABEL_6:
    LODWORD(v109) = 0;
    v116 = 0;
    LODWORD(v108) = 0;
    goto LABEL_7;
  }
  result = swift_bridgeObjectRelease();
  LODWORD(v108) = 0;
  v116 = 0;
  LODWORD(v109) = 0;
  if ((v30 & 0x10) != 0)
  {
LABEL_8:
    result = swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
      goto LABEL_9;
    goto LABEL_32;
  }
LABEL_31:
  if (!v33)
  {
LABEL_9:
    if (v34)
      goto LABEL_10;
    goto LABEL_33;
  }
LABEL_32:
  result = swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
  {
LABEL_10:
    result = swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
      goto LABEL_11;
    goto LABEL_34;
  }
LABEL_33:
  if (!v35)
  {
LABEL_11:
    if (v36)
      goto LABEL_12;
    goto LABEL_35;
  }
LABEL_34:
  result = swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
  {
LABEL_12:
    result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
      goto LABEL_13;
    goto LABEL_36;
  }
LABEL_35:
  if (!v37)
  {
LABEL_13:
    v40 = v111;
    if (v38)
      goto LABEL_14;
    goto LABEL_37;
  }
LABEL_36:
  result = swift_bridgeObjectRelease();
  v40 = v111;
  if ((v38 & 1) != 0)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    if ((v98 & 1) == 0)
      goto LABEL_15;
    goto LABEL_38;
  }
LABEL_37:
  if (!v98)
  {
LABEL_15:
    if (v99)
      goto LABEL_16;
    goto LABEL_39;
  }
LABEL_38:
  result = swift_bridgeObjectRelease();
  if ((v99 & 1) != 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    if ((v100 & 1) == 0)
      goto LABEL_17;
    goto LABEL_40;
  }
LABEL_39:
  if (!v100)
  {
LABEL_17:
    if (v101)
      goto LABEL_18;
    goto LABEL_41;
  }
LABEL_40:
  result = swift_bridgeObjectRelease();
  if ((v101 & 1) != 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    if ((v102 & 1) == 0)
      goto LABEL_19;
    goto LABEL_42;
  }
LABEL_41:
  if (!v102)
  {
LABEL_19:
    if (v103)
      goto LABEL_20;
    goto LABEL_43;
  }
LABEL_42:
  result = swift_bridgeObjectRelease();
  if ((v103 & 1) != 0)
  {
LABEL_20:
    result = swift_bridgeObjectRelease();
    if ((v104 & 1) == 0)
      goto LABEL_21;
    goto LABEL_44;
  }
LABEL_43:
  if (!(_DWORD)v104)
  {
LABEL_21:
    if ((_DWORD)v105)
      goto LABEL_22;
    goto LABEL_45;
  }
LABEL_44:
  result = swift_bridgeObjectRelease();
  if ((v105 & 1) != 0)
  {
LABEL_22:
    result = swift_bridgeObjectRelease();
    if ((v106 & 1) == 0)
      goto LABEL_23;
    goto LABEL_46;
  }
LABEL_45:
  if (!(_DWORD)v106)
  {
LABEL_23:
    if ((_DWORD)v107)
      goto LABEL_24;
    goto LABEL_47;
  }
LABEL_46:
  result = sub_231845F40((uint64_t)&v31[v40[27]], (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  if ((v107 & 1) != 0)
  {
LABEL_24:
    result = sub_231845F40((uint64_t)&v31[v40[28]], (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    if ((v110 & 1) == 0)
      goto LABEL_25;
    goto LABEL_48;
  }
LABEL_47:
  if (!(_DWORD)v110)
  {
LABEL_25:
    if ((_DWORD)v108)
      goto LABEL_26;
    goto LABEL_49;
  }
LABEL_48:
  result = sub_231845F40((uint64_t)&v31[v40[29]], (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  if ((v108 & 1) != 0)
  {
LABEL_26:
    result = swift_bridgeObjectRelease();
    if (!v116)
      goto LABEL_27;
LABEL_50:
    result = sub_2317DD39C((uint64_t)&v31[v40[31]], qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
    if ((v109 & 1) == 0)
      return result;
    return sub_2317DD39C((uint64_t)&v31[v40[33]], (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
LABEL_49:
  if (v116)
    goto LABEL_50;
LABEL_27:
  if (!(_DWORD)v109)
    return result;
  return sub_2317DD39C((uint64_t)&v31[v40[33]], (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

uint64_t sub_2318412AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,__int128 a26,__int128 a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39)
{
  int *v40;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5 & 1;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(_OWORD *)(a9 + 192) = a18;
  *(_OWORD *)(a9 + 208) = a19;
  *(_QWORD *)(a9 + 224) = a20;
  *(_QWORD *)(a9 + 232) = a21;
  *(_BYTE *)(a9 + 240) = a22;
  *(_QWORD *)(a9 + 248) = a23;
  *(_QWORD *)(a9 + 256) = a24;
  *(_BYTE *)(a9 + 264) = a25;
  *(_OWORD *)(a9 + 272) = a26;
  *(_OWORD *)(a9 + 288) = a27;
  *(_QWORD *)(a9 + 304) = a28;
  *(_BYTE *)(a9 + 312) = a29 & 1;
  *(_QWORD *)(a9 + 320) = a30;
  *(_BYTE *)(a9 + 328) = a31 & 1;
  v40 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_231846118(a32, a9 + v40[27], (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  sub_231846118(a33, a9 + v40[28], (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  sub_231846118(a34, a9 + v40[29], (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  *(_QWORD *)(a9 + v40[30]) = a35;
  sub_231846210(a36, a9 + v40[31], (uint64_t)&unk_254188268, (uint64_t)type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  *(_BYTE *)(a9 + v40[32]) = a37;
  sub_231846210(a38, a9 + v40[33], (uint64_t)&qword_25418B300, (uint64_t)MEMORY[0x24BDCE900], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  return sub_231846210(a39, a9 + v40[34], (uint64_t)&unk_2541881B8, (uint64_t)MEMORY[0x24BE47E70], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
}

uint64_t sub_2318414B4()
{
  unsigned __int8 *v0;

  return sub_23183F630(*v0);
}

uint64_t sub_2318414BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23184B7CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2318414E0(_BYTE *a1@<X8>)
{
  *a1 = 31;
}

uint64_t sub_2318414EC()
{
  sub_231845FD0();
  return sub_2318D63B4();
}

uint64_t sub_231841514()
{
  sub_231845FD0();
  return sub_2318D63C0();
}

uint64_t sub_23184153C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231840150(a1, a2);
}

uint64_t sub_231841550(_QWORD *a1)
{
  return sub_23183F8F4(a1);
}

uint64_t sub_231841564()
{
  _BYTE v1[72];

  sub_2318D6348();
  sub_23183E8A4((uint64_t)v1);
  return sub_2318D6384();
}

uint64_t sub_2318415A4()
{
  _BYTE v1[72];

  sub_2318D6348();
  sub_23183E8A4((uint64_t)v1);
  return sub_2318D6384();
}

uint64_t sub_2318415DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;

  v1 = v0;
  v2 = sub_2318D45D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  v12 = type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_231845F7C(v1 + *(int *)(v12 + 116), (uint64_t)v11, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v13) == 1)
  {
    sub_231845F40((uint64_t)v11, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    return 0;
  }
  else
  {
    v17 = (void *)sub_2318D53F4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
    v18 = objc_msgSend(v17, sel_doseQuantity);

    if (v18)
    {
      sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
      sub_2318D58C8();
      v19 = sub_2318D5D78();
      v21 = v20;
      v22 = sub_2318D29AC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
      sub_2318D45CC();
      sub_2317D4194(0, (unint64_t *)&qword_25418B480, (uint64_t (*)(uint64_t))sub_23184B03C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_2318D8510;
      *(_QWORD *)(v23 + 56) = sub_2317CCC9C(0, &qword_25418B460);
      *(_QWORD *)(v23 + 64) = sub_23180DDC0(&qword_255F26E28, &qword_25418B460, 0x24BDD16E0, MEMORY[0x24BEE5BE8]);
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 96) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v23 + 104) = sub_2317E0830();
      *(_QWORD *)(v23 + 72) = v19;
      *(_QWORD *)(v23 + 80) = v21;
      v24 = v18;
      v16 = sub_2318D48B4();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_2317DD39C((uint64_t)v8, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
    }
    else
    {
      return 0;
    }
  }
  return v16;
}

uint64_t sub_231841978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  sub_231845F7C(v1 + *(int *)(a1 + 112), (uint64_t)&v11 - v4, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_231845F40((uint64_t)v5, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    return 0;
  }
  else
  {
    v9 = sub_2318D53F4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

uint64_t sub_231841AC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841AEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841B18()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 304);
}

uint64_t sub_231841B28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 320);
}

uint64_t sub_231841B44()
{
  return sub_2318D4638();
}

uint64_t sub_231841B74()
{
  return 0;
}

uint64_t sub_231841B80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841BAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841BD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841C04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841C30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841C5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841C88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231841CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  sub_231845F7C(v1 + *(int *)(a1 + 108), (uint64_t)&v11 - v4, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_231845F40((uint64_t)v5, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    return 0;
  }
  else
  {
    v9 = sub_2318D53F4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

id sub_231841DF8()
{
  void *v0;

  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_231841E18(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_231841E2C(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_231841E6C;
}

id sub_231841E6C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_231841E84()
{
  void *v0;

  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_231841E94(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_231841EA8(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_231841EE8;
}

id sub_231841EE8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(_QWORD *)a1);
}

id sub_231841EFC()
{
  void *v0;

  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_231841F1C(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_231841F30(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_231841F70;
}

id sub_231841F70(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_231841F88()
{
  void *v0;

  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_231841F98(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_231841FAC(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_231841FEC;
}

id sub_231841FEC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(_QWORD *)a1);
}

_QWORD *sub_231842000(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  void *v78;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    v12 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v12;
    v13 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v13;
    v14 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v14;
    v15 = a2[20];
    *(_QWORD *)(a1 + 152) = a2[19];
    *(_QWORD *)(a1 + 160) = v15;
    v16 = a2[22];
    *(_QWORD *)(a1 + 168) = a2[21];
    *(_QWORD *)(a1 + 176) = v16;
    v17 = a2[24];
    *(_QWORD *)(a1 + 184) = a2[23];
    *(_QWORD *)(a1 + 192) = v17;
    v18 = a2[26];
    *(_QWORD *)(a1 + 200) = a2[25];
    *(_QWORD *)(a1 + 208) = v18;
    v19 = a2[28];
    *(_QWORD *)(a1 + 216) = a2[27];
    *(_QWORD *)(a1 + 224) = v19;
    *(_QWORD *)(a1 + 232) = a2[29];
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    v20 = a2[32];
    *(_QWORD *)(a1 + 248) = a2[31];
    *(_QWORD *)(a1 + 256) = v20;
    *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
    v21 = a2[35];
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_QWORD *)(a1 + 280) = v21;
    v22 = a2[36];
    v23 = a2[37];
    v24 = a2[38];
    *(_BYTE *)(a1 + 312) = *((_BYTE *)a2 + 312);
    *(_QWORD *)(a1 + 296) = v23;
    *(_QWORD *)(a1 + 304) = v24;
    v25 = a2[40];
    *(_BYTE *)(a1 + 328) = *((_BYTE *)a2 + 328);
    *(_QWORD *)(a1 + 320) = v25;
    v26 = a3[27];
    v78 = (void *)(a1 + v26);
    v77 = (char *)a2 + v26;
    *(_QWORD *)(a1 + 288) = v22;
    sub_231842750(0, &qword_2541880F8, &qword_254189E78);
    v28 = v27;
    v75 = *(_QWORD *)(v27 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76(v77, 1, v28))
    {
      sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
      memcpy(v78, v77, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v75 + 16))(v78, v77, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v78, 0, 1, v28);
    }
    v31 = a3;
    v32 = a3[28];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    sub_231842750(0, &qword_254188110, &qword_25418B428);
    v36 = v35;
    v37 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
    {
      sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    v39 = a3[29];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    sub_231842750(0, &qword_254188128, &qword_25418B438);
    v43 = v42;
    v44 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
    {
      sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v41, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
    }
    v46 = a3[31];
    *(_QWORD *)((char *)v4 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for SharedMedicationsChartSeries(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      sub_231842750(0, &qword_2541880E0, &qword_254189E70);
      v54 = v53;
      v55 = *(_QWORD *)(v53 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      if (v56(v48, 1, v53))
      {
        sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v48, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v54);
      }
      v58 = *(int *)(v49 + 20);
      v59 = &v47[v58];
      v60 = &v48[v58];
      if (v56(v60, 1, v54))
      {
        sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v59, v60, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v59, 0, 1, v54);
      }
      v31 = a3;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v62 = v31[33];
    *((_BYTE *)v4 + v31[32]) = *((_BYTE *)a2 + v31[32]);
    v63 = (char *)v4 + v62;
    v64 = (char *)a2 + v62;
    v65 = sub_2318D294C();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    v68 = v31[34];
    v69 = (char *)v4 + v68;
    v70 = (char *)a2 + v68;
    v71 = sub_2318D2FC4();
    v72 = *(_QWORD *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
  }
  return v4;
}

void sub_231842750(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2317CCC9C(255, a3);
    v4 = sub_2318D5400();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for SharedMedicationsChartSeries(uint64_t a1)
{
  return sub_23180B748(a1, qword_254188230);
}

void sub_2318427B8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_231842750(255, a3, a4);
    v5 = sub_2318D5F64();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_231842810(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[27];
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v8 = a1 + a2[28];
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
  v12 = a1 + a2[29];
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  v16 = a1 + a2[31];
  v17 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    if (!v21(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v16, v19);
    v22 = v16 + *(int *)(v17 + 20);
    if (!v21(v22, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
  }
  v23 = a1 + a2[33];
  v24 = sub_2318D294C();
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v26 = a1 + a2[34];
  v27 = sub_2318D2FC4();
  v28 = *(_QWORD *)(v27 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  return result;
}

uint64_t sub_231842B2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  unsigned int (*v74)(const void *, uint64_t, uint64_t);
  const void *v75;
  void *v76;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  v17 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v17;
  v18 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v18;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v19 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v19;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  v21 = *(_QWORD *)(a2 + 288);
  v22 = *(_QWORD *)(a2 + 296);
  v23 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 296) = v22;
  *(_QWORD *)(a1 + 304) = v23;
  v24 = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = v24;
  v25 = a3[27];
  v76 = (void *)(a1 + v25);
  v75 = (const void *)(a2 + v25);
  *(_QWORD *)(a1 + 288) = v21;
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v27 = v26;
  v73 = *(_QWORD *)(v26 - 8);
  v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74(v75, 1, v27))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    memcpy(v76, v75, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v76, v75, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v76, 0, 1, v27);
  }
  v29 = a3;
  v30 = a3[28];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v33))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v31, v32, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
  }
  v37 = a3[29];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v41 = v40;
  v42 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v40))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v38, v39, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
  }
  v44 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  v45 = (char *)(a1 + v44);
  v46 = (char *)(a2 + v44);
  v47 = type metadata accessor for SharedMedicationsChartSeries(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  if (v49(v46, 1, v47))
  {
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v52 = v51;
    v53 = *(_QWORD *)(v51 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v54(v46, 1, v51))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v45, v46, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v45, 0, 1, v52);
    }
    v56 = *(int *)(v47 + 20);
    v57 = &v45[v56];
    v58 = &v46[v56];
    if (v54(v58, 1, v52))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v57, v58, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
    }
    v29 = a3;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v60 = v29[33];
  *(_BYTE *)(a1 + v29[32]) = *(_BYTE *)(a2 + v29[32]);
  v61 = (void *)(a1 + v60);
  v62 = (const void *)(a2 + v60);
  v63 = sub_2318D294C();
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  v66 = v29[34];
  v67 = (void *)(a1 + v66);
  v68 = (const void *)(a2 + v66);
  v69 = sub_2318D2FC4();
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  return a1;
}

uint64_t sub_231843250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  size_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  int v91;
  uint64_t v92;
  int *v93;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v6;
  v7 = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = v7;
  v8 = a3[27];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v9, 1, v11);
  v16 = v14(v10, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v9, v12);
LABEL_6:
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v9, v10, v12);
LABEL_7:
  v18 = a3[28];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v19, 1, v21);
  v26 = v24(v20, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v19, v20, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v22);
LABEL_12:
    sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v19, v20, v22);
LABEL_13:
  v28 = a3[29];
  v29 = (void *)(a1 + v28);
  v30 = (void *)(a2 + v28);
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v29, 1, v31);
  v36 = v34(v30, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v29, v32);
LABEL_18:
    sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v29, v30, v32);
LABEL_19:
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[31];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = type metadata accessor for SharedMedicationsChartSeries(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_2317CF774((uint64_t)v39, type metadata accessor for SharedMedicationsChartSeries);
      v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_24;
    }
    v56 = a3;
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v58 = v57;
    v59 = *(_QWORD *)(v57 - 8);
    v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
    v61 = v60(v39, 1, v57);
    v62 = v60(v40, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v39, v40, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v39, 0, 1, v58);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v62)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v39, v40, v58);
LABEL_57:
        v87 = *(int *)(v41 + 20);
        v88 = &v39[v87];
        v89 = &v40[v87];
        v90 = v60(v88, 1, v58);
        v91 = v60(v89, 1, v58);
        a3 = v56;
        if (v90)
        {
          if (!v91)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v88, v89, v58);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v88, 0, 1, v58);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v91)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v88, v89, v58);
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v59 + 8))(v88, v58);
        }
        sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
        v48 = *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64);
        v49 = v88;
        v50 = v89;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v58);
    }
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_57;
  }
  if (v45)
  {
    v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_24:
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v46);
    v48 = *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64);
    v49 = v39;
    v50 = v40;
LABEL_25:
    memcpy(v49, v50, v48);
    goto LABEL_39;
  }
  v93 = a3;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v52 = v51;
  v53 = *(_QWORD *)(v51 - 8);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  if (v54(v40, 1, v51))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v39, v40, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v39, 0, 1, v52);
  }
  v63 = *(int *)(v41 + 20);
  v64 = &v39[v63];
  v65 = &v40[v63];
  if (v54(v65, 1, v52))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v64, v65, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v64, 0, 1, v52);
  }
  a3 = v93;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_39:
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v67 = a3[33];
  v68 = (void *)(a1 + v67);
  v69 = (void *)(a2 + v67);
  v70 = sub_2318D294C();
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(void *, void *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v74)
  {
    (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
LABEL_44:
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, void *, uint64_t))(v71 + 24))(v68, v69, v70);
LABEL_45:
  v76 = a3[34];
  v77 = (void *)(a1 + v76);
  v78 = (void *)(a2 + v76);
  v79 = sub_2318D2FC4();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(void *, void *, uint64_t))(v80 + 24))(v77, v78, v79);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_50;
  }
  if (v83)
  {
LABEL_50:
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v80 + 16))(v77, v78, v79);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

uint64_t sub_231843DB8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v58)(char *, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v8 = *(_OWORD *)(a2 + 272);
  v9 = *(_OWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v10 = a3[27];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 272) = v8;
  *(_OWORD *)(a1 + 288) = v9;
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  v17 = a3[28];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  v24 = a3[29];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  v31 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  v34 = type metadata accessor for SharedMedicationsChartSeries(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v38 = v37;
    v39 = *(_QWORD *)(v37 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    if (v58(v33, 1, v37))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
    }
    v41 = *(int *)(v34 + 20);
    v42 = &v32[v41];
    v43 = &v33[v41];
    if (v58(v43, 1, v38))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v42, v43, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v42, 0, 1, v38);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v45 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v46 = (void *)(a1 + v45);
  v47 = (const void *)(a2 + v45);
  v48 = sub_2318D294C();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = a3[34];
  v52 = (void *)(a1 + v51);
  v53 = (const void *)(a2 + v51);
  v54 = sub_2318D2FC4();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  return a1;
}

uint64_t sub_2318443E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  size_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void *, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void *, uint64_t, uint64_t);
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v20 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v21 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  v23 = a3[27];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v24, 1, v26);
  v31 = v29(v25, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
LABEL_6:
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v24, v25, v27);
LABEL_7:
  v33 = a3[28];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v37 = v36;
  v38 = *(_QWORD *)(v36 - 8);
  v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v34, 1, v36);
  v41 = v39(v35, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v38 + 32))(v34, v35, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v34, v37);
LABEL_12:
    sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v38 + 40))(v34, v35, v37);
LABEL_13:
  v43 = a3[29];
  v44 = (void *)(a1 + v43);
  v45 = (void *)(a2 + v43);
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v47 = v46;
  v48 = *(_QWORD *)(v46 - 8);
  v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v44, 1, v46);
  v51 = v49(v45, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v44, v47);
LABEL_18:
    sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v44, v45, v47);
LABEL_19:
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  v53 = a3[31];
  v54 = (char *)(a1 + v53);
  v55 = (char *)(a2 + v53);
  v56 = type metadata accessor for SharedMedicationsChartSeries(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_2317CF774((uint64_t)v54, type metadata accessor for SharedMedicationsChartSeries);
      v61 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_24;
    }
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v72 = v71;
    v73 = *(_QWORD *)(v71 - 8);
    v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v75 = v74(v54, 1, v71);
    v76 = v74(v55, 1, v72);
    if (v75)
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v54, v55, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v54, 0, 1, v72);
        goto LABEL_57;
      }
    }
    else
    {
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v54, v55, v72);
LABEL_57:
        v101 = *(int *)(v56 + 20);
        v102 = &v54[v101];
        v103 = &v55[v101];
        v104 = v74(v102, 1, v72);
        v105 = v74(v103, 1, v72);
        if (v104)
        {
          if (!v105)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v102, v103, v72);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v102, 0, 1, v72);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v105)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v102, v103, v72);
            goto LABEL_39;
          }
          (*(void (**)(char *, uint64_t))(v73 + 8))(v102, v72);
        }
        sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
        v63 = *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64);
        v64 = v102;
        v65 = v103;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v72);
    }
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_57;
  }
  if (v60)
  {
    v61 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_24:
    sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v61);
    v63 = *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64);
    v64 = v54;
    v65 = v55;
LABEL_25:
    memcpy(v64, v65, v63);
    goto LABEL_39;
  }
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v67 = v66;
  v68 = *(_QWORD *)(v66 - 8);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  v107 = v68;
  if (v69(v55, 1, v66))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v54, v55, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v54, 0, 1, v67);
  }
  v77 = *(int *)(v56 + 20);
  v78 = &v54[v77];
  v79 = &v55[v77];
  if (v69(v79, 1, v67))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v78, v79, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v78, 0, 1, v67);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_39:
  v81 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v82 = (void *)(a1 + v81);
  v83 = (void *)(a2 + v81);
  v84 = sub_2318D294C();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  v87 = v86(v82, 1, v84);
  v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, void *, uint64_t))(v85 + 32))(v82, v83, v84);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v82, v84);
LABEL_44:
    sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, void *, uint64_t))(v85 + 40))(v82, v83, v84);
LABEL_45:
  v90 = a3[34];
  v91 = (void *)(a1 + v90);
  v92 = (void *)(a2 + v90);
  v93 = sub_2318D2FC4();
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v94 + 48);
  v96 = v95(v91, 1, v93);
  v97 = v95(v92, 1, v93);
  if (!v96)
  {
    if (!v97)
    {
      (*(void (**)(void *, void *, uint64_t))(v94 + 40))(v91, v92, v93);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v94 + 8))(v91, v93);
    goto LABEL_50;
  }
  if (v97)
  {
LABEL_50:
    sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v94 + 32))(v91, v92, v93);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
  return a1;
}

uint64_t sub_231844E20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231844E2C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[27];
    }
    else
    {
      sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[28];
      }
      else
      {
        sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[29];
        }
        else
        {
          sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[31];
          }
          else
          {
            sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[33];
            }
            else
            {
              sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
              v10 = v16;
              v9 = *(_QWORD *)(v16 - 8);
              v11 = a3[34];
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_231845004()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231845010(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[27];
    }
    else
    {
      sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[28];
      }
      else
      {
        sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[29];
        }
        else
        {
          sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[31];
          }
          else
          {
            sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[33];
            }
            else
            {
              sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
              v10 = v16;
              v9 = *(_QWORD *)(v16 - 8);
              v11 = a4[34];
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SharedMedicationsFeedItemData(uint64_t a1)
{
  return sub_23180B748(a1, qword_2541882F8);
}

void sub_2318451F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_2318427B8(319, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  if (v0 <= 0x3F)
  {
    sub_2318427B8(319, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    if (v1 <= 0x3F)
    {
      sub_2318427B8(319, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
      if (v2 <= 0x3F)
      {
        sub_2317D4194(319, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
        {
          sub_2317D4194(319, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          if (v4 <= 0x3F)
          {
            sub_2317D4194(319, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *sub_2318453FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_231842750(0, &qword_2541880E0, &qword_254189E70);
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v7))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if (v10((uint64_t *)v15, 1, v8))
    {
      sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v15, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_231845598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  v8 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

char *sub_231845654(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(a2, 1, v6))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (v9(v13, 1, v7))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v13, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

char *sub_2318457C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(a1, v7);
LABEL_6:
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 24))(a1, a2, v7);
LABEL_7:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = v9(&a1[v13], 1, v7);
  v17 = v9(v15, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v14, v15, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v15, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
  return a1;
}

char *sub_2318459C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(a2, 1, v6))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (v9(v13, 1, v7))
  {
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v13, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

char *sub_231845B34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;

  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(a1, v7);
LABEL_6:
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(a1, a2, v7);
LABEL_7:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = v9(&a1[v13], 1, v7);
  v17 = v9(v15, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v14, v15, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v15, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
  return a1;
}

uint64_t sub_231845D34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231845D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_231845D9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231845DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_231845E08()
{
  unint64_t v0;

  sub_2318427B8(319, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_231845E90()
{
  return sub_2317CC4AC(&qword_255F26CC8, type metadata accessor for SharedMedicationsChartSeries, (uint64_t)&unk_2318DADC0);
}

uint64_t sub_231845EBC()
{
  return sub_2317CC4AC(&qword_255F26CD0, type metadata accessor for SharedMedicationsFeedItemData, (uint64_t)&unk_2318DAE78);
}

uint64_t sub_231845EE8()
{
  return sub_2317CC4AC((unint64_t *)&unk_255F275F0, type metadata accessor for SharedMedicationsFeedItemData, (uint64_t)&unk_2318DC0D0);
}

uint64_t sub_231845F14()
{
  return sub_2317CC4AC(&qword_255F26CD8, type metadata accessor for SharedMedicationsFeedItemData, (uint64_t)&unk_2318DAFE0);
}

uint64_t sub_231845F40(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v5;

  sub_2318427B8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_231845F7C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  uint64_t v7;

  sub_2318427B8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

unint64_t sub_231845FD0()
{
  unint64_t result;

  result = qword_2541882C8;
  if (!qword_2541882C8)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB26C, &type metadata for SharedMedicationsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541882C8);
  }
  return result;
}

unint64_t sub_231846014()
{
  unint64_t result;

  result = qword_255F26CE8;
  if (!qword_255F26CE8)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB4F4, &type metadata for MedicationShareableData.Audience);
    atomic_store(result, (unint64_t *)&qword_255F26CE8);
  }
  return result;
}

unint64_t sub_231846058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26D08;
  if (!qword_255F26D08)
  {
    sub_231842750(255, &qword_2541880F8, &qword_254189E78);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2078], v1);
    atomic_store(result, (unint64_t *)&qword_255F26D08);
  }
  return result;
}

unint64_t sub_2318460B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26D10;
  if (!qword_255F26D10)
  {
    sub_231842750(255, &qword_254188110, &qword_25418B428);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2078], v1);
    atomic_store(result, (unint64_t *)&qword_255F26D10);
  }
  return result;
}

uint64_t sub_231846118(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  uint64_t v7;

  sub_2318427B8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

unint64_t sub_23184616C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26D18;
  if (!qword_255F26D18)
  {
    sub_231842750(255, &qword_254188128, &qword_25418B438);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2078], v1);
    atomic_store(result, (unint64_t *)&qword_255F26D18);
  }
  return result;
}

unint64_t sub_2318461CC()
{
  unint64_t result;

  result = qword_255F26D28;
  if (!qword_255F26D28)
  {
    result = MEMORY[0x2348E7734](&unk_2318DDCA0, &type metadata for MedicationHighlightsContent);
    atomic_store(result, (unint64_t *)&qword_255F26D28);
  }
  return result;
}

uint64_t sub_231846210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

unint64_t sub_231846268()
{
  unint64_t result;

  result = qword_254188F90;
  if (!qword_254188F90)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB4CC, &type metadata for MedicationShareableData.Audience);
    atomic_store(result, (unint64_t *)&qword_254188F90);
  }
  return result;
}

uint64_t sub_2318462AC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_2317CDA94(255, (unint64_t *)&qword_254189E20, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v8 = a2;
    result = MEMORY[0x2348E7734](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_231846320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541880F0;
  if (!qword_2541880F0)
  {
    sub_231842750(255, &qword_2541880F8, &qword_254189E78);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2060], v1);
    atomic_store(result, (unint64_t *)&qword_2541880F0);
  }
  return result;
}

unint64_t sub_231846380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254188108;
  if (!qword_254188108)
  {
    sub_231842750(255, &qword_254188110, &qword_25418B428);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2060], v1);
    atomic_store(result, (unint64_t *)&qword_254188108);
  }
  return result;
}

unint64_t sub_2318463E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254188120;
  if (!qword_254188120)
  {
    sub_231842750(255, &qword_254188128, &qword_25418B438);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2060], v1);
    atomic_store(result, (unint64_t *)&qword_254188120);
  }
  return result;
}

uint64_t sub_231846440(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_2317CDA94(255, &qword_254189DC8, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x2348E7734](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2318464BC()
{
  unint64_t result;

  result = qword_254189148;
  if (!qword_254189148)
  {
    result = MEMORY[0x2348E7734](&unk_2318DDC78, &type metadata for MedicationHighlightsContent);
    atomic_store(result, (unint64_t *)&qword_254189148);
  }
  return result;
}

id sub_231846500@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  id result;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v83;
  void *v84;
  void *v85;
  void *v86;
  id v87;
  double v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void *v101;
  unint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v107;
  void *v108;
  id v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  id v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  void *v131;
  void *v132;
  id v133;
  void *v134;
  uint64_t v135;
  id v136;
  void *v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  id v142;
  void *v143;
  uint64_t v144;
  id v145;
  void *v146;
  uint64_t v147;
  id v148;
  void *v149;
  uint64_t v150;
  id v151;
  void *v152;
  uint64_t v153;
  id v154;
  void *v155;
  uint64_t v156;
  id v157;
  void *v158;
  uint64_t v159;
  id v160;
  void *v161;
  uint64_t v162;
  id v163;
  void *v164;
  uint64_t v165;
  unsigned int v166;
  id v167;
  void *v168;
  uint64_t v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  id v173;
  void *v174;
  uint64_t v175;
  id v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  id v228;
  void (*v229)(char *, _QWORD, uint64_t, uint64_t);
  id v230;
  id v231;
  _QWORD *v232;
  uint64_t v233;
  id v234;
  id v235;
  uint64_t v236;
  void (*v237)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v238;
  unint64_t v239;
  uint64_t v240;
  id v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void *v257;
  unint64_t v258;

  v257 = (void *)a6;
  v247 = a5;
  v244 = a3;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v243 = (char *)&v199 - v13;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v242 = (uint64_t)&v199 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v199 - v17;
  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v11);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v245 = (uint64_t)&v199 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v250 = (uint64_t)&v199 - v22;
  sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v249 = (uint64_t)&v199 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v199 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v254 = (uint64_t)&v199 - v29;
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v11);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v246 = (uint64_t)&v199 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v253 = (char *)&v199 - v33;
  sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v251 = (uint64_t)&v199 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v252 = (uint64_t)&v199 - v37;
  sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v248 = (uint64_t)&v199 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v199 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v255 = (uint64_t)&v199 - v44;
  v45 = objc_allocWithZone(MEMORY[0x24BE7AEF8]);
  sub_23184B090(a1, a2);
  v46 = (void *)sub_2318D2874();
  sub_2317E3390(a1, a2);
  v47 = objc_msgSend(v45, sel_initWithData_, v46);

  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE45CE8]), sel_init);
  if (!v48)
  {
    sub_2317E3390(a1, a2);

    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    v54 = type metadata accessor for SharedMedicationsFeedItemData(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(a7, 1, 1, v54);
  }
  v49 = v48;
  v256 = a4;
  objc_msgSend(v48, sel_readFrom_, v47);
  if ((objc_msgSend(v49, sel_hasConceptIdentifier) & 1) == 0)
  {
LABEL_10:
    sub_2317E3390(a1, a2);

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v241 = v47;
  if (!objc_msgSend(v49, sel_hasArchived) || !objc_msgSend(v49, sel_hasAudienceRawValue))
  {
    sub_2317E3390(a1, a2);

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v240 = a7;
  v50 = objc_msgSend(v49, sel_audienceRawValue);
  if (!v50)
  {
    __break(1u);
LABEL_98:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_99:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_100;
  }
  v51 = v50;
  sub_2318D55BC();

  v52 = sub_2318D61D4();
  swift_bridgeObjectRelease();
  if (v52)
  {
    a7 = v240;
    v47 = v241;
    if (v52 == 1)
    {
      v53 = 1;
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  v53 = 0;
LABEL_14:
  v56 = objc_msgSend(v49, sel_ingredientComponentStrings);
  v238 = v53;
  if (v56)
  {
    v57 = v56;
    v258 = 0;
    sub_2318D5784();

    v239 = v258;
  }
  else
  {
    v239 = 0;
  }
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v59 = v58;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
  v60(v255, 1, 1, v58);
  if (objc_msgSend(v49, sel_hasSchedule))
  {
    v237 = v60;
    v61 = objc_msgSend(v49, sel_schedule);
    if (!v61)
    {
LABEL_100:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_101;
    }
    v62 = v61;
    v63 = objc_msgSend((id)objc_opt_self(), sel_hd_medicationScheduleFromCodable_, v61);

    sub_2317CCC9C(0, &qword_25418B428);
    sub_2318D540C();
    v64 = v255;
    sub_231845F40(v255, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    v237((uint64_t)v43, 0, 1, v59);
    sub_231846118((uint64_t)v43, v64, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  }
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v66 = v65;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
  v67(v252, 1, 1, v65);
  v68 = (_QWORD *)sub_2318D294C();
  v237 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(v68 - 1) + 56);
  v237((uint64_t)v253, 1, 1, (uint64_t)v68);
  if (objc_msgSend(v49, sel_hasMostRecentDose))
  {
    v69 = objc_msgSend(v49, sel_mostRecentDose);
    if (!v69)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_102;
    }
    v70 = v69;
    v236 = sub_2317CCC9C(0, &qword_25418B438);
    v71 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_createWithCodable_, v70);

    if (v71)
    {
      v72 = v71;
      v235 = v68;
      v73 = v251;
      v74 = v72;
      sub_2318D540C();
      v75 = v252;
      sub_231845F40(v252, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
      v67(v73, 0, 1, v66);
      sub_231846118(v73, v75, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
      v76 = objc_msgSend(v74, sel_startDate);
      v77 = v246;
      sub_2318D2928();

      v78 = MEMORY[0x24BDCE900];
      v79 = (uint64_t)v253;
      sub_2317DD39C((uint64_t)v253, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      v237(v77, 0, 1, (uint64_t)v235);
      sub_231846210(v77, v79, (uint64_t)&qword_25418B300, (uint64_t)v78, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    }
  }
  LODWORD(v237) = objc_msgSend(v49, sel_hasFreeTextMedicationForm);
  if ((_DWORD)v237)
    v235 = objc_msgSend(v49, sel_freeTextMedicationForm);
  else
    v235 = 0;
  LODWORD(v236) = objc_msgSend(v49, sel_hasFreeTextMedicationLoggingUnit);
  if ((_DWORD)v236)
    v234 = objc_msgSend(v49, sel_freeTextMedicationLoggingUnit);
  else
    v234 = 0;
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v81 = v80;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
  v82(v254, 1, 1, v80);
  if (objc_msgSend(v49, sel_hasFreeTextMedicationStrengthQuantity))
  {
    v83 = objc_msgSend(v49, sel_freeTextMedicationStrengthQuantity);
    if (!v83)
    {
LABEL_102:
      result = (id)swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_103;
    }
    v84 = v83;
    v232 = v82;
    v233 = v81;
    result = objc_msgSend(v83, sel_unitString);
    if (!result)
    {
LABEL_103:
      __break(1u);
      return result;
    }
    v85 = result;
    sub_2318D55BC();

    v86 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
    v87 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v86);

    objc_msgSend(v84, sel_value);
    v89 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v87, v88);

    sub_2317CCC9C(0, &qword_254189E78);
    sub_2318D540C();
    v90 = v254;
    sub_231845F40(v254, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v232)(v28, 0, 1, v233);
    sub_231846118((uint64_t)v28, v90, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  }
  v258 = (unint64_t)v49;
  v91 = sub_2317CCC9C(0, &qword_254189F30);
  sub_23180DDC0(&qword_254189F28, &qword_254189F30, 0x24BE45CE8, (uint64_t)&protocol conformance descriptor for HDCodableMedicationShareableModel);
  v233 = v91;
  v92 = sub_2318D47F4();
  v94 = v93;
  v95 = objc_msgSend(v49, sel_conceptIdentifier);
  if (!v95)
    goto LABEL_98;
  v96 = v95;
  v97 = sub_2318D55BC();
  v99 = v98;

  v100 = objc_msgSend(v49, sel_monthHighlights);
  if (v100
    && (v101 = v100,
        v258 = 0,
        sub_2317CCC9C(0, &qword_25418A178),
        sub_2318D5784(),
        v101,
        (v102 = v258) != 0))
  {
    v103 = v92;
    v104 = v257;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v232 = sub_23184B0D4(v102, v103, v94, v97, v99, v247, v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v232 = 0;
  }
  v105 = type metadata accessor for SharedMedicationsChartSeries(0);
  v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56);
  v106(v250, 1, 1, v105);
  if (objc_msgSend(v49, sel_hasChartSeries))
  {
    v107 = objc_msgSend(v49, sel_chartSeries);
    if (v107)
    {
      v108 = v107;
      if (objc_msgSend(v107, sel_hasMonthData) && objc_msgSend(v108, sel_hasSixMonthsData))
      {
        v109 = objc_msgSend(v108, sel_monthData);
        if (v109)
        {
          v110 = sub_2318D2880();
          v112 = v111;

          v109 = (id)sub_2318D2874();
          sub_2317E3390(v110, v112);
        }
        v231 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7AEF8]), sel_initWithData_, v109);

        v113 = objc_msgSend(v108, sel_sixMonthsData);
        if (v113)
        {
          v114 = sub_2318D2880();
          v116 = v115;

          v113 = (id)sub_2318D2874();
          sub_2317E3390(v114, v116);
        }
        v117 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7AEF8]), sel_initWithData_, v113);

        v118 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A340]), sel_init);
        if (v118)
        {
          v119 = v118;
          v230 = v117;
          v120 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A340]), sel_init);
          if (v120)
          {
            v121 = v120;
            v228 = v120;
            objc_msgSend(v119, sel_readFrom_, v231);
            objc_msgSend(v121, sel_readFrom_, v230);
            sub_2317CCC9C(0, &qword_254189E70);
            v227 = v119;
            sub_2318D540C();
            sub_231842750(0, &qword_2541880E0, &qword_254189E70);
            v123 = v122;
            v229 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56);
            v229(v18, 0, 1, v122);
            v124 = v242;
            sub_2318D540C();

            v125 = v250;
            sub_2317DD39C(v250, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
            v229((char *)v124, 0, 1, v123);
            v126 = (uint64_t)v18;
            v127 = v245;
            sub_231846118(v126, v245, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
            sub_231846118(v124, v127 + *(int *)(v105 + 20), (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
            v106(v127, 0, 1, v105);
            sub_231846210(v127, v125, (uint64_t)qword_254188268, (uint64_t)type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
          }
          else
          {

          }
        }
        else
        {

        }
      }
      else
      {

      }
    }
  }
  v128 = objc_msgSend(v49, sel_conceptIdentifier);
  if (!v128)
    goto LABEL_99;
  v129 = v128;
  v130 = sub_2318D55BC();
  v132 = v131;

  v133 = objc_msgSend(v49, sel_preferredName);
  if (v133)
  {
    v134 = v133;
    v227 = (id)sub_2318D55BC();
    v226 = v135;

  }
  else
  {
    v227 = 0;
    v226 = 0;
  }
  v136 = objc_msgSend(v49, sel_brandName);
  if (v136)
  {
    v137 = v136;
    v225 = sub_2318D55BC();
    v224 = v138;

  }
  else
  {
    v225 = 0;
    v224 = 0;
  }
  v139 = objc_msgSend(v49, sel_genericName);
  if (v139)
  {
    v140 = v139;
    v223 = sub_2318D55BC();
    v222 = v141;

  }
  else
  {
    v223 = 0;
    v222 = 0;
  }
  v142 = objc_msgSend(v49, sel_manufacturedDoseForm);
  if (v142)
  {
    v143 = v142;
    v221 = sub_2318D55BC();
    v220 = v144;

  }
  else
  {
    v221 = 0;
    v220 = 0;
  }
  v145 = objc_msgSend(v49, sel_basicDoseForm);
  if (v145)
  {
    v146 = v145;
    v219 = sub_2318D55BC();
    v218 = v147;

  }
  else
  {
    v219 = 0;
    v218 = 0;
  }
  v148 = objc_msgSend(v49, sel_baseUnitStrength);
  if (v148)
  {
    v149 = v148;
    v217 = sub_2318D55BC();
    v216 = v150;

  }
  else
  {
    v217 = 0;
    v216 = 0;
  }
  v151 = objc_msgSend(v49, sel_ontologyLoggingUnitSingular);
  if (v151)
  {
    v152 = v151;
    v215 = sub_2318D55BC();
    v214 = v153;

  }
  else
  {
    v215 = 0;
    v214 = 0;
  }
  v154 = objc_msgSend(v49, sel_ontologyLoggingUnitPlural);
  if (v154)
  {
    v155 = v154;
    v213 = sub_2318D55BC();
    v212 = v156;

  }
  else
  {
    v213 = 0;
    v212 = 0;
  }
  v157 = objc_msgSend(v49, sel_eduContentString);
  if (v157)
  {
    v158 = v157;
    v211 = sub_2318D55BC();
    v210 = v159;

  }
  else
  {
    v211 = 0;
    v210 = 0;
  }
  v160 = objc_msgSend(v49, sel_sideEffectsContentString);
  if (v160)
  {
    v161 = v160;
    v209 = sub_2318D55BC();
    v208 = v162;

  }
  else
  {
    v209 = 0;
    v208 = 0;
  }
  v163 = objc_msgSend(v49, sel_pregnancyDescriptionContentString);
  if (v163)
  {
    v164 = v163;
    v207 = sub_2318D55BC();
    v206 = v165;

  }
  else
  {
    v207 = 0;
    v206 = 0;
  }
  v166 = objc_msgSend(v49, sel_isPregnancyDescriptionCritical);
  v167 = objc_msgSend(v49, sel_lactationDescriptionContentString);
  if (v167)
  {
    v168 = v167;
    v205 = sub_2318D55BC();
    v204 = v169;

  }
  else
  {
    v205 = 0;
    v204 = 0;
  }
  v170 = v237 ^ 1;
  v171 = v236 ^ 1;
  v172 = objc_msgSend(v49, sel_isLactationDescriptionCritical);
  v173 = objc_msgSend(v49, sel_medicationVisualizationConfigJSONString);
  if (v173)
  {
    v174 = v173;
    v203 = sub_2318D55BC();
    v202 = v175;

  }
  else
  {
    v203 = 0;
    v202 = 0;
  }
  v176 = objc_msgSend(v49, sel_freeTextMedicationName);
  v242 = v130;
  v231 = v132;
  LODWORD(v230) = v166;
  LODWORD(v237) = v170;
  LODWORD(v236) = v171;
  LODWORD(v229) = v172;
  if (v176)
  {
    v177 = v176;
    v201 = sub_2318D55BC();
    v200 = v178;

  }
  else
  {
    v201 = 0;
    v200 = 0;
  }
  sub_231845F7C(v254, v249, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  sub_231845F7C(v255, v248, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  v179 = v252;
  sub_231845F7C(v252, v251, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  v180 = v250;
  v181 = v245;
  sub_2317F9B14(v250, v245, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
  LODWORD(v228) = objc_msgSend(v49, sel_archived);
  v182 = (uint64_t)v253;
  v183 = v246;
  sub_2317F9B14((uint64_t)v253, v246, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_23180DDC0(&qword_254189F20, &qword_254189F30, 0x24BE45CE8, (uint64_t)&protocol conformance descriptor for HDCodableMedicationShareableModel);
  v184 = (uint64_t)v243;
  sub_2318D39D8();

  sub_2317E3390(a1, a2);
  sub_2317DD39C(v180, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
  sub_231845F40(v254, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  sub_2317DD39C(v182, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_231845F40(v179, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  sub_231845F40(v255, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  *((_QWORD *)&v198 + 1) = v200;
  *(_QWORD *)&v198 = v201;
  *((_QWORD *)&v197 + 1) = v202;
  *(_QWORD *)&v197 = v203;
  *((_QWORD *)&v196 + 1) = v208;
  *(_QWORD *)&v196 = v209;
  *((_QWORD *)&v195 + 1) = v210;
  *(_QWORD *)&v195 = v211;
  *((_QWORD *)&v194 + 1) = v239;
  *(_QWORD *)&v194 = v212;
  *((_QWORD *)&v193 + 1) = v213;
  *(_QWORD *)&v193 = v214;
  *((_QWORD *)&v192 + 1) = v215;
  *(_QWORD *)&v192 = v216;
  *((_QWORD *)&v191 + 1) = v217;
  *(_QWORD *)&v191 = v218;
  *((_QWORD *)&v190 + 1) = v219;
  *(_QWORD *)&v190 = v220;
  *((_QWORD *)&v189 + 1) = v221;
  *(_QWORD *)&v189 = v222;
  *((_QWORD *)&v188 + 1) = v223;
  *(_QWORD *)&v188 = v224;
  *((_QWORD *)&v187 + 1) = v225;
  *(_QWORD *)&v187 = v226;
  v185 = v240;
  sub_2318412AC(v244, v256, v242, (uint64_t)v231, v238, v247, (uint64_t)v257, (uint64_t)v227, v240, v187, v188, v189, v190, v191, v192, v193, v194, v195, v196,
    v207,
    v206,
    (char)v230,
    v205,
    v204,
    (char)v229,
    v197,
    v198,
    (uint64_t)v235,
    (char)v237,
    (uint64_t)v234,
    v236,
    v249,
    v248,
    v251,
    (uint64_t)v232,
    v181,
    (char)v228,
    v183,
    v184);
  v186 = type metadata accessor for SharedMedicationsFeedItemData(0);
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 56))(v185, 0, 1, v186);
}

unint64_t sub_231847EE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26D40;
  if (!qword_255F26D40)
  {
    sub_231842750(255, &qword_2541880F8, &qword_254189E78);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26D48, &qword_254189E78, 0x24BDD3E50, MEMORY[0x24BEE5BD8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2068], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26D40);
  }
  return result;
}

unint64_t sub_231847F88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26D50;
  if (!qword_255F26D50)
  {
    sub_231842750(255, &qword_254188110, &qword_25418B428);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26D58, &qword_25418B428, 0x24BE45C88, MEMORY[0x24BEE5BD8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2068], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26D50);
  }
  return result;
}

unint64_t sub_231848028()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26D60;
  if (!qword_255F26D60)
  {
    sub_231842750(255, &qword_254188128, &qword_25418B438);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26D68, &qword_25418B438, 0x24BDD3D30, MEMORY[0x24BEE5BD8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2068], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26D60);
  }
  return result;
}

uint64_t sub_2318480C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v26 = a1;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v24 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v23 - v4;
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for SharedMedicationsChartSeries(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - v16;
  sub_2317F9B14(v1, (uint64_t)&v23 - v16, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
    return sub_2318D6360();
  sub_23184840C((uint64_t)v17, (uint64_t)v14);
  sub_2318D6360();
  sub_231845F7C((uint64_t)v14, (uint64_t)v10, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v20 = v24;
  if (v19(v10, 1, v24) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v21 = v25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v25, v10, v20);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v20);
  }
  sub_231845F7C((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v8, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v19(v8, 1, v20) == 1)
  {
    sub_2318D6360();
  }
  else
  {
    v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v25, v8, v20);
    sub_2318D6360();
    sub_231848450();
    sub_2318D5520();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v22, v20);
  }
  return sub_2317CF774((uint64_t)v14, type metadata accessor for SharedMedicationsChartSeries);
}

uint64_t sub_23184840C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedMedicationsChartSeries(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_231848450()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26D80;
  if (!qword_255F26D80)
  {
    sub_231842750(255, &qword_2541880E0, &qword_254189E70);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26D88, &qword_254189E70, 0x24BE4A340, MEMORY[0x24BEE5BD8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2068], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26D80);
  }
  return result;
}

BOOL sub_2318484F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char v73;
  _BOOL8 result;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  int v117;
  int v118;
  _BOOL4 v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  int v123;
  int v124;
  _BOOL4 v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int (*v138)(uint64_t, uint64_t, uint64_t);
  void (*v139)();
  uint64_t *v140;
  void (*v141)(char *, uint64_t);
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  void (*v153)(char *, uint64_t);
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  void (*v165)(char *, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  int *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int (*v175)(uint64_t, uint64_t, uint64_t);
  unint64_t *v176;
  unint64_t *v177;
  uint64_t (*v178)(uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  int *v183;
  uint64_t (*v184)(uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned int (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v190)(uint64_t);
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t);
  uint64_t v195;
  char v196;
  void (*v197)(char *, uint64_t);
  int *v198;
  uint64_t (*v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unsigned int (*v204)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v205)(uint64_t);
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t (*v209)(uint64_t);
  uint64_t v210;
  char v211;
  void (*v212)(char *, uint64_t);
  int *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;

  v4 = sub_2318D2FC4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
  v255 = v4;
  v253 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v252 = (char *)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23184A2B4(0, &qword_255F26D90, &qword_2541881B8, v5);
  v248 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v254 = (uint64_t)&v213 - v8;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_2541881B8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v251 = (uint64_t)&v213 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v249 = (uint64_t)&v213 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v250 = (uint64_t)&v213 - v15;
  v16 = sub_2318D294C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v247 = v16;
  v245 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v244 = (char *)&v213 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23184A2B4(0, &qword_255F26D98, (unint64_t *)&qword_25418B300, v17);
  v240 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v246 = (uint64_t)&v213 - v20;
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, v17, v9);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v243 = (uint64_t)&v213 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v241 = (uint64_t)&v213 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v242 = (uint64_t)&v213 - v26;
  v238 = type metadata accessor for SharedMedicationsChartSeries(0);
  v233 = *(_QWORD *)(v238 - 8);
  MEMORY[0x24BDAC7A8](v238);
  v237 = (uint64_t)&v213 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23184A2B4(0, &qword_255F26DA0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
  v232 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v239 = (uint64_t)&v213 - v29;
  sub_2317D4194(0, qword_254188268, type metadata accessor for SharedMedicationsChartSeries, v9);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v236 = (uint64_t)&v213 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v234 = (uint64_t)&v213 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v235 = (uint64_t)&v213 - v35;
  sub_231842750(0, &qword_254188128, &qword_25418B438);
  v231 = v36;
  v229 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v227 = (char *)&v213 - v37;
  sub_23184A320();
  v224 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v230 = (uint64_t)&v213 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318427B8(0, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v228 = (uint64_t)&v213 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v225 = (uint64_t)&v213 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v226 = (uint64_t)&v213 - v45;
  sub_231842750(0, &qword_254188110, &qword_25418B428);
  v223 = v46;
  v221 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v219 = (char *)&v213 - v47;
  sub_23184A3A0();
  v216 = v48;
  MEMORY[0x24BDAC7A8](v48);
  v222 = (uint64_t)&v213 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318427B8(0, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v220 = (uint64_t)&v213 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v217 = (uint64_t)&v213 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v218 = (uint64_t)&v213 - v55;
  sub_231842750(0, &qword_2541880F8, &qword_254189E78);
  v57 = v56;
  v58 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v60 = (char *)&v213 - v59;
  sub_23184A420();
  v62 = v61;
  MEMORY[0x24BDAC7A8](v61);
  v215 = (uint64_t)&v213 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318427B8(0, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
  v65 = MEMORY[0x24BDAC7A8](v64);
  v67 = (char *)&v213 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v65);
  v70 = (char *)&v213 - v69;
  MEMORY[0x24BDAC7A8](v68);
  v72 = (char *)&v213 - v71;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v73 = sub_2318D62B8(), result = 0, (v73 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v75 = sub_2318D62B8(), result = 0, (v75 & 1) != 0))
    {
      if (*(_BYTE *)(a1 + 32))
        v76 = 0x676E6972616873;
      else
        v76 = 0x7972616D697270;
      if (*(_BYTE *)(a2 + 32))
        v77 = 0x676E6972616873;
      else
        v77 = 0x7972616D697270;
      if (v76 == v77)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v78 = sub_2318D62B8();
        swift_bridgeObjectRelease_n();
        result = 0;
        if ((v78 & 1) == 0)
          return result;
      }
      v79 = *(_QWORD *)(a1 + 48);
      v80 = *(_QWORD *)(a2 + 48);
      if (v79)
      {
        if (!v80)
          return 0;
        if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v79 != v80)
        {
          v81 = sub_2318D62B8();
          result = 0;
          if ((v81 & 1) == 0)
            return result;
        }
      }
      else if (v80)
      {
        return 0;
      }
      v82 = *(_QWORD *)(a1 + 64);
      v83 = *(_QWORD *)(a2 + 64);
      if (v82)
      {
        if (!v83)
          return 0;
        if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56) || v82 != v83)
        {
          v84 = sub_2318D62B8();
          result = 0;
          if ((v84 & 1) == 0)
            return result;
        }
      }
      else if (v83)
      {
        return 0;
      }
      v85 = *(_QWORD *)(a1 + 80);
      v86 = *(_QWORD *)(a2 + 80);
      if (v85)
      {
        if (!v86)
          return 0;
        if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72) || v85 != v86)
        {
          v87 = sub_2318D62B8();
          result = 0;
          if ((v87 & 1) == 0)
            return result;
        }
      }
      else if (v86)
      {
        return 0;
      }
      v88 = *(_QWORD *)(a1 + 96);
      v89 = *(_QWORD *)(a2 + 96);
      if (v88)
      {
        if (!v89)
          return 0;
        if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88) || v88 != v89)
        {
          v90 = sub_2318D62B8();
          result = 0;
          if ((v90 & 1) == 0)
            return result;
        }
      }
      else if (v89)
      {
        return 0;
      }
      v91 = *(_QWORD *)(a1 + 112);
      v92 = *(_QWORD *)(a2 + 112);
      if (v91)
      {
        if (!v92)
          return 0;
        if (*(_QWORD *)(a1 + 104) != *(_QWORD *)(a2 + 104) || v91 != v92)
        {
          v93 = sub_2318D62B8();
          result = 0;
          if ((v93 & 1) == 0)
            return result;
        }
      }
      else if (v92)
      {
        return 0;
      }
      v94 = *(_QWORD *)(a1 + 128);
      v95 = *(_QWORD *)(a2 + 128);
      if (v94)
      {
        if (!v95)
          return 0;
        if (*(_QWORD *)(a1 + 120) != *(_QWORD *)(a2 + 120) || v94 != v95)
        {
          v96 = sub_2318D62B8();
          result = 0;
          if ((v96 & 1) == 0)
            return result;
        }
      }
      else if (v95)
      {
        return 0;
      }
      v97 = *(_QWORD *)(a1 + 144);
      v98 = *(_QWORD *)(a2 + 144);
      if (v97)
      {
        if (!v98)
          return 0;
        if (*(_QWORD *)(a1 + 136) != *(_QWORD *)(a2 + 136) || v97 != v98)
        {
          v99 = sub_2318D62B8();
          result = 0;
          if ((v99 & 1) == 0)
            return result;
        }
      }
      else if (v98)
      {
        return 0;
      }
      v100 = *(_QWORD *)(a1 + 160);
      v101 = *(_QWORD *)(a2 + 160);
      if (v100)
      {
        if (!v101)
          return 0;
        if (*(_QWORD *)(a1 + 152) != *(_QWORD *)(a2 + 152) || v100 != v101)
        {
          v102 = sub_2318D62B8();
          result = 0;
          if ((v102 & 1) == 0)
            return result;
        }
      }
      else if (v101)
      {
        return 0;
      }
      v103 = *(_QWORD *)(a1 + 176);
      v104 = *(_QWORD *)(a2 + 176);
      if (v103)
      {
        if (!v104)
          return 0;
        if (*(_QWORD *)(a1 + 168) != *(_QWORD *)(a2 + 168) || v103 != v104)
        {
          v105 = sub_2318D62B8();
          result = 0;
          if ((v105 & 1) == 0)
            return result;
        }
      }
      else if (v104)
      {
        return 0;
      }
      v106 = *(_QWORD **)(a1 + 184);
      v107 = *(_QWORD **)(a2 + 184);
      if (v106)
      {
        if (!v107 || (sub_2318B64B0(v106, v107) & 1) == 0)
          return 0;
      }
      else if (v107)
      {
        return 0;
      }
      v108 = *(_QWORD *)(a1 + 200);
      v109 = *(_QWORD *)(a2 + 200);
      if (v108)
      {
        if (!v109)
          return 0;
        if (*(_QWORD *)(a1 + 192) != *(_QWORD *)(a2 + 192) || v108 != v109)
        {
          v110 = sub_2318D62B8();
          result = 0;
          if ((v110 & 1) == 0)
            return result;
        }
      }
      else if (v109)
      {
        return 0;
      }
      v111 = *(_QWORD *)(a1 + 216);
      v112 = *(_QWORD *)(a2 + 216);
      if (v111)
      {
        if (!v112)
          return 0;
        if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208) || v111 != v112)
        {
          v113 = sub_2318D62B8();
          result = 0;
          if ((v113 & 1) == 0)
            return result;
        }
      }
      else if (v112)
      {
        return 0;
      }
      v114 = *(_QWORD *)(a1 + 232);
      v115 = *(_QWORD *)(a2 + 232);
      if (v114)
      {
        if (!v115)
          return 0;
        if (*(_QWORD *)(a1 + 224) != *(_QWORD *)(a2 + 224) || v114 != v115)
        {
          v116 = sub_2318D62B8();
          result = 0;
          if ((v116 & 1) == 0)
            return result;
        }
      }
      else if (v115)
      {
        return 0;
      }
      v117 = *(unsigned __int8 *)(a1 + 240);
      v118 = *(unsigned __int8 *)(a2 + 240);
      if (v117 == 2)
      {
        if (v118 != 2)
          return 0;
      }
      else
      {
        result = 0;
        v119 = (v117 & 1) == 0;
        if (v118 == 2 || ((v119 ^ v118) & 1) == 0)
          return result;
      }
      v120 = *(_QWORD *)(a1 + 256);
      v121 = *(_QWORD *)(a2 + 256);
      if (v120)
      {
        if (!v121)
          return 0;
        if (*(_QWORD *)(a1 + 248) != *(_QWORD *)(a2 + 248) || v120 != v121)
        {
          v122 = sub_2318D62B8();
          result = 0;
          if ((v122 & 1) == 0)
            return result;
        }
      }
      else if (v121)
      {
        return 0;
      }
      v123 = *(unsigned __int8 *)(a1 + 264);
      v124 = *(unsigned __int8 *)(a2 + 264);
      if (v123 == 2)
      {
        if (v124 != 2)
          return 0;
      }
      else
      {
        result = 0;
        v125 = (v123 & 1) == 0;
        if (v124 == 2 || ((v125 ^ v124) & 1) == 0)
          return result;
      }
      v126 = *(_QWORD *)(a1 + 280);
      v127 = *(_QWORD *)(a2 + 280);
      if (v126)
      {
        if (!v127)
          return 0;
        if (*(_QWORD *)(a1 + 272) != *(_QWORD *)(a2 + 272) || v126 != v127)
        {
          v128 = sub_2318D62B8();
          result = 0;
          if ((v128 & 1) == 0)
            return result;
        }
      }
      else if (v127)
      {
        return 0;
      }
      v129 = *(_QWORD *)(a1 + 296);
      v130 = *(_QWORD *)(a2 + 296);
      if (v129)
      {
        if (!v130)
          return 0;
        if (*(_QWORD *)(a1 + 288) != *(_QWORD *)(a2 + 288) || v129 != v130)
        {
          v131 = sub_2318D62B8();
          result = 0;
          if ((v131 & 1) == 0)
            return result;
        }
      }
      else if (v130)
      {
        return 0;
      }
      v132 = *(_BYTE *)(a2 + 312);
      if ((*(_BYTE *)(a1 + 312) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 312))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 304) != *(_QWORD *)(a2 + 304))
          v132 = 1;
        if ((v132 & 1) != 0)
          return 0;
      }
      v133 = *(_BYTE *)(a2 + 328);
      if ((*(_BYTE *)(a1 + 328) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 328))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 320) != *(_QWORD *)(a2 + 320))
          v133 = 1;
        if ((v133 & 1) != 0)
          return 0;
      }
      v134 = type metadata accessor for SharedMedicationsFeedItemData(0);
      sub_231845F7C(a1 + *(int *)(v134 + 108), (uint64_t)v72, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
      v213 = (int *)v134;
      sub_231845F7C(a2 + *(int *)(v134 + 108), (uint64_t)v70, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
      v135 = *(int *)(v62 + 48);
      v136 = v215;
      v137 = v215 + v135;
      sub_231845F7C((uint64_t)v72, v215, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
      v214 = v137;
      sub_231845F7C((uint64_t)v70, v137, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
      v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      if (v138(v136, 1, v57) == 1)
      {
        sub_231845F40((uint64_t)v70, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
        sub_231845F40((uint64_t)v72, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
        if (v138(v214, 1, v57) == 1)
        {
          sub_231845F40(v215, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
          goto LABEL_155;
        }
      }
      else
      {
        sub_231845F7C(v215, (uint64_t)v67, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
        if (v138(v214, 1, v57) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v60, v214, v57);
          sub_23184A61C();
          LODWORD(v214) = sub_2318D5580();
          v141 = *(void (**)(char *, uint64_t))(v58 + 8);
          v141(v60, v57);
          sub_231845F40((uint64_t)v70, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
          sub_231845F40((uint64_t)v72, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
          v141(v67, v57);
          sub_231845F40(v215, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
          if ((v214 & 1) == 0)
            return 0;
LABEL_155:
          v142 = v213;
          v143 = v218;
          sub_231845F7C(a1 + v213[28], v218, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
          v144 = v217;
          sub_231845F7C(a2 + v142[28], v217, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
          v145 = v222;
          v146 = v222 + *(int *)(v216 + 48);
          sub_231845F7C(v143, v222, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
          sub_231845F7C(v144, v146, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
          v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48);
          if (v147(v145, 1, v223) == 1)
          {
            sub_231845F40(v217, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            sub_231845F40(v218, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            if (v147(v146, 1, v223) == 1)
            {
              sub_231845F40(v222, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
LABEL_162:
              v154 = v213;
              v155 = v226;
              sub_231845F7C(a1 + v213[29], v226, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
              v156 = v225;
              sub_231845F7C(a2 + v154[29], v225, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
              v157 = v230;
              v158 = v230 + *(int *)(v224 + 48);
              sub_231845F7C(v155, v230, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
              sub_231845F7C(v156, v158, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
              v159 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48);
              if (v159(v157, 1, v231) == 1)
              {
                sub_231845F40(v225, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                sub_231845F40(v226, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                if (v159(v158, 1, v231) == 1)
                {
                  sub_231845F40(v230, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                  goto LABEL_172;
                }
              }
              else
              {
                sub_231845F7C(v230, v228, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                if (v159(v158, 1, v231) != 1)
                {
                  v160 = v229;
                  v161 = v227;
                  v162 = v231;
                  (*(void (**)(char *, uint64_t, uint64_t))(v229 + 32))(v227, v158, v231);
                  sub_23184A4DC();
                  v163 = v228;
                  v164 = sub_2318D5580();
                  v165 = *(void (**)(char *, uint64_t))(v160 + 8);
                  v165(v161, v162);
                  sub_231845F40(v225, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                  sub_231845F40(v226, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                  v165((char *)v163, v162);
                  sub_231845F40(v230, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                  if ((v164 & 1) == 0)
                    return 0;
LABEL_172:
                  v166 = v213[30];
                  v167 = *(_QWORD *)(a2 + v166);
                  if (*(_QWORD *)(a1 + v166))
                  {
                    if (!v167)
                      return 0;
                    swift_bridgeObjectRetain();
                    v168 = swift_bridgeObjectRetain();
                    v169 = sub_2318B6574(v168, v167);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v169 & 1) == 0)
                      return 0;
                  }
                  else if (v167)
                  {
                    return 0;
                  }
                  v170 = v213;
                  v171 = v235;
                  sub_2317F9B14(a1 + v213[31], v235, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                  v172 = v234;
                  sub_2317F9B14(a2 + v170[31], v234, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                  v173 = v239;
                  v174 = v239 + *(int *)(v232 + 48);
                  sub_2317F9B14(v171, v239, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                  sub_2317F9B14(v172, v174, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                  v175 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
                  if (v175(v173, 1, v238) == 1)
                  {
                    sub_2317DD39C(v234, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2317DD39C(v235, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                    if (v175(v174, 1, v238) == 1)
                    {
                      sub_2317DD39C(v239, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
LABEL_185:
                      if (*(unsigned __int8 *)(a1 + v213[32]) != *(unsigned __int8 *)(a2 + v213[32]))
                        return 0;
                      v183 = v213;
                      v184 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
                      v185 = v242;
                      sub_2317F9B14(a1 + v213[33], v242, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
                      v186 = v241;
                      sub_2317F9B14(a2 + v183[33], v241, (unint64_t *)&qword_25418B300, v184);
                      v187 = v246;
                      v188 = v246 + *(int *)(v240 + 48);
                      sub_2317F9B14(v185, v246, (unint64_t *)&qword_25418B300, v184);
                      sub_2317F9B14(v186, v188, (unint64_t *)&qword_25418B300, v184);
                      v189 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48);
                      if (v189(v187, 1, v247) == 1)
                      {
                        sub_2317DD39C(v241, (unint64_t *)&qword_25418B300, v184);
                        sub_2317DD39C(v242, (unint64_t *)&qword_25418B300, v184);
                        if (v189(v188, 1, v247) == 1)
                        {
                          sub_2317DD39C(v246, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_193:
                          v198 = v213;
                          v199 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
                          v200 = v250;
                          sub_2317F9B14(a1 + v213[34], v250, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
                          v201 = v249;
                          sub_2317F9B14(a2 + v198[34], v249, &qword_2541881B8, v199);
                          v202 = v254;
                          v203 = v254 + *(int *)(v248 + 48);
                          sub_2317F9B14(v200, v254, &qword_2541881B8, v199);
                          sub_2317F9B14(v201, v203, &qword_2541881B8, v199);
                          v204 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v253 + 48);
                          if (v204(v202, 1, v255) == 1)
                          {
                            sub_2317DD39C(v249, &qword_2541881B8, v199);
                            sub_2317DD39C(v250, &qword_2541881B8, v199);
                            if (v204(v203, 1, v255) == 1)
                            {
                              sub_2317DD39C(v254, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
                              return 1;
                            }
                            goto LABEL_198;
                          }
                          sub_2317F9B14(v254, v251, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
                          if (v204(v203, 1, v255) == 1)
                          {
                            v205 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
                            sub_2317DD39C(v249, &qword_2541881B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
                            sub_2317DD39C(v250, &qword_2541881B8, v205);
                            (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v251, v255);
LABEL_198:
                            v176 = &qword_255F26D90;
                            v177 = &qword_2541881B8;
                            v178 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
                            v179 = v254;
                            goto LABEL_183;
                          }
                          v207 = v252;
                          v206 = v253;
                          v208 = v255;
                          (*(void (**)(char *, uint64_t, uint64_t))(v253 + 32))(v252, v203, v255);
                          v209 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
                          sub_2317CC4AC(&qword_255F26DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E90]);
                          v210 = v251;
                          v211 = sub_2318D5580();
                          v212 = *(void (**)(char *, uint64_t))(v206 + 8);
                          v212(v207, v208);
                          sub_2317DD39C(v249, &qword_2541881B8, v209);
                          sub_2317DD39C(v250, &qword_2541881B8, v209);
                          v212((char *)v210, v208);
                          sub_2317DD39C(v254, &qword_2541881B8, v209);
                          return (v211 & 1) != 0;
                        }
                      }
                      else
                      {
                        sub_2317F9B14(v246, v243, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
                        if (v189(v188, 1, v247) != 1)
                        {
                          v192 = v244;
                          v191 = v245;
                          v193 = v247;
                          (*(void (**)(char *, uint64_t, uint64_t))(v245 + 32))(v244, v188, v247);
                          v194 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
                          sub_2317CC4AC(&qword_255F26DC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                          v195 = v243;
                          v196 = sub_2318D5580();
                          v197 = *(void (**)(char *, uint64_t))(v191 + 8);
                          v197(v192, v193);
                          sub_2317DD39C(v241, (unint64_t *)&qword_25418B300, v194);
                          sub_2317DD39C(v242, (unint64_t *)&qword_25418B300, v194);
                          v197((char *)v195, v193);
                          sub_2317DD39C(v246, (unint64_t *)&qword_25418B300, v194);
                          if ((v196 & 1) == 0)
                            return 0;
                          goto LABEL_193;
                        }
                        v190 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
                        sub_2317DD39C(v241, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
                        sub_2317DD39C(v242, (unint64_t *)&qword_25418B300, v190);
                        (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v243, v247);
                      }
                      v176 = &qword_255F26D98;
                      v177 = (unint64_t *)&qword_25418B300;
                      v178 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
                      v179 = v246;
LABEL_183:
                      sub_23184A4A0(v179, v176, v177, v178);
                      return 0;
                    }
                  }
                  else
                  {
                    sub_2317F9B14(v239, v236, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                    if (v175(v174, 1, v238) != 1)
                    {
                      v180 = v237;
                      sub_23184840C(v174, v237);
                      v181 = v236;
                      v182 = sub_23184A6BC(v236, v180);
                      sub_2317CF774(v180, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2317DD39C(v234, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2317DD39C(v235, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2317CF774(v181, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2317DD39C(v239, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                      if (!v182)
                        return 0;
                      goto LABEL_185;
                    }
                    sub_2317DD39C(v234, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2317DD39C(v235, qword_254188268, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2317CF774(v236, type metadata accessor for SharedMedicationsChartSeries);
                  }
                  v176 = &qword_255F26DA0;
                  v177 = qword_254188268;
                  v178 = type metadata accessor for SharedMedicationsChartSeries;
                  v179 = v239;
                  goto LABEL_183;
                }
                sub_231845F40(v225, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                sub_231845F40(v226, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
                (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v228, v231);
              }
              v139 = sub_23184A320;
              v140 = &v256;
LABEL_168:
              sub_2317CF774(*(v140 - 32), (uint64_t (*)(_QWORD))v139);
              return 0;
            }
          }
          else
          {
            sub_231845F7C(v222, v220, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            if (v147(v146, 1, v223) != 1)
            {
              v148 = v221;
              v149 = v219;
              v150 = v223;
              (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v219, v146, v223);
              sub_23184A57C();
              v151 = v220;
              v152 = sub_2318D5580();
              v153 = *(void (**)(char *, uint64_t))(v148 + 8);
              v153(v149, v150);
              sub_231845F40(v217, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
              sub_231845F40(v218, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
              v153((char *)v151, v150);
              sub_231845F40(v222, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
              if ((v152 & 1) == 0)
                return 0;
              goto LABEL_162;
            }
            sub_231845F40(v217, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            sub_231845F40(v218, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
            (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v220, v223);
          }
          v139 = sub_23184A3A0;
          v140 = &v254;
          goto LABEL_168;
        }
        sub_231845F40((uint64_t)v70, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
        sub_231845F40((uint64_t)v72, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v57);
      }
      v139 = sub_23184A420;
      v140 = &v247;
      goto LABEL_168;
    }
  }
  return result;
}

void sub_23184A2B4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2317D4194(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_23184A320()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26DA8)
  {
    sub_2318427B8(255, (unint64_t *)&qword_254188130, &qword_254188128, &qword_25418B438);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26DA8);
  }
}

void sub_23184A3A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26DB0)
  {
    sub_2318427B8(255, (unint64_t *)&qword_254188118, &qword_254188110, &qword_25418B428);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26DB0);
  }
}

void sub_23184A420()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26DB8)
  {
    sub_2318427B8(255, (unint64_t *)&qword_254188100, &qword_2541880F8, &qword_254189E78);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26DB8);
  }
}

uint64_t sub_23184A4A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  sub_23184A2B4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_23184A4DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26DD0;
  if (!qword_255F26DD0)
  {
    sub_231842750(255, &qword_254188128, &qword_25418B438);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26DD8, &qword_25418B438, 0x24BDD3D30, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2070], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26DD0);
  }
  return result;
}

unint64_t sub_23184A57C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26DE0;
  if (!qword_255F26DE0)
  {
    sub_231842750(255, &qword_254188110, &qword_25418B428);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26DE8, &qword_25418B428, 0x24BE45C88, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2070], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26DE0);
  }
  return result;
}

unint64_t sub_23184A61C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26DF0;
  if (!qword_255F26DF0)
  {
    sub_231842750(255, &qword_2541880F8, &qword_254189E78);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26DF8, &qword_254189E78, 0x24BDD3E50, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2070], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26DF0);
  }
  return result;
}

BOOL sub_23184A6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v41;
  _BYTE *v42;
  char v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE v46[4];
  int v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a2;
  sub_231842750(0, &qword_2541880E0, &qword_254189E70);
  v57 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v49 = &v46[-v5];
  sub_23184AE18();
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v53 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v46[-v10];
  sub_2318427B8(0, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v48 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v54 = &v46[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = &v46[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v56 = &v46[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = &v46[-v22];
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v46[-v24];
  v51 = a1;
  sub_231845F7C(a1, (uint64_t)&v46[-v24], (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_231845F7C(v58, (uint64_t)v23, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v50 = v7;
  v26 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_231845F7C((uint64_t)v25, (uint64_t)v11, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_231845F7C((uint64_t)v23, v26, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v55 = v4;
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v28 = v57;
  if (v27((uint64_t)v11, 1, v57) != 1)
  {
    sub_231845F7C((uint64_t)v11, (uint64_t)v56, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    if (v27(v26, 1, v28) != 1)
    {
      v30 = v55;
      v31 = v49;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v55 + 32))(v49, v26, v28);
      sub_23184AE98();
      v32 = v56;
      v47 = sub_2318D5580();
      v33 = *(void (**)(_BYTE *, uint64_t))(v30 + 8);
      v33(v31, v28);
      sub_231845F40((uint64_t)v23, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      sub_231845F40((uint64_t)v25, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      v33(v32, v28);
      sub_231845F40((uint64_t)v11, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      if ((v47 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    sub_231845F40((uint64_t)v23, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    sub_231845F40((uint64_t)v25, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v56, v28);
LABEL_6:
    v29 = (uint64_t)v11;
LABEL_14:
    sub_2317CF774(v29, (uint64_t (*)(_QWORD))sub_23184AE18);
    return 0;
  }
  sub_231845F40((uint64_t)v23, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_231845F40((uint64_t)v25, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v27(v26, 1, v28) != 1)
    goto LABEL_6;
  sub_231845F40((uint64_t)v11, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
LABEL_8:
  v34 = type metadata accessor for SharedMedicationsChartSeries(0);
  v35 = v52;
  sub_231845F7C(v51 + *(int *)(v34 + 20), (uint64_t)v52, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v36 = v54;
  sub_231845F7C(v58 + *(int *)(v34 + 20), (uint64_t)v54, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v37 = v53;
  v38 = (uint64_t)&v53[*(int *)(v50 + 48)];
  sub_231845F7C((uint64_t)v35, (uint64_t)v53, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_231845F7C((uint64_t)v36, v38, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v27((uint64_t)v37, 1, v28) == 1)
  {
    sub_231845F40((uint64_t)v36, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    sub_231845F40((uint64_t)v35, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    if (v27(v38, 1, v28) == 1)
    {
      sub_231845F40((uint64_t)v37, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
      return 1;
    }
    goto LABEL_13;
  }
  v39 = v48;
  sub_231845F7C((uint64_t)v37, (uint64_t)v48, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  if (v27(v38, 1, v28) == 1)
  {
    sub_231845F40((uint64_t)v54, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    sub_231845F40((uint64_t)v35, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v39, v28);
LABEL_13:
    v29 = (uint64_t)v37;
    goto LABEL_14;
  }
  v41 = v55;
  v42 = v49;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v55 + 32))(v49, v38, v28);
  sub_23184AE98();
  v43 = sub_2318D5580();
  v44 = (uint64_t)v35;
  v45 = *(void (**)(_BYTE *, uint64_t))(v41 + 8);
  v45(v42, v28);
  sub_231845F40((uint64_t)v54, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  sub_231845F40(v44, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  v45(v39, v28);
  sub_231845F40((uint64_t)v37, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
  return (v43 & 1) != 0;
}

void sub_23184AE18()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F26E00)
  {
    sub_2318427B8(255, (unint64_t *)&qword_2541880E8, &qword_2541880E0, &qword_254189E70);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F26E00);
  }
}

unint64_t sub_23184AE98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F26E08;
  if (!qword_255F26E08)
  {
    sub_231842750(255, &qword_2541880E0, &qword_254189E70);
    v2 = v1;
    v3 = sub_23180DDC0(&qword_255F26E10, &qword_254189E70, 0x24BE4A340, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2070], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F26E08);
  }
  return result;
}

unint64_t sub_23184AF38()
{
  unint64_t result;

  result = qword_254188210;
  if (!qword_254188210)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB21C, &type metadata for SharedMedicationsChartSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188210);
  }
  return result;
}

unint64_t sub_23184AF7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F26E20;
  if (!qword_255F26E20)
  {
    sub_231842750(255, &qword_2541880E0, &qword_254189E70);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2078], v1);
    atomic_store(result, (unint64_t *)&qword_255F26E20);
  }
  return result;
}

unint64_t sub_23184AFDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541880D8;
  if (!qword_2541880D8)
  {
    sub_231842750(255, &qword_2541880E0, &qword_254189E70);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDD2060], v1);
    atomic_store(result, (unint64_t *)&qword_2541880D8);
  }
  return result;
}

unint64_t sub_23184B03C()
{
  unint64_t result;

  result = qword_25418B4A8;
  if (!qword_25418B4A8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25418B4A8);
  }
  return result;
}

uint64_t sub_23184B090(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

_QWORD *sub_23184B0D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[7];
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;

  if (a1 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_2318D6174())
  {
    v8 = a1;
    v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v10 = 4;
    v23 = v7;
    while (1)
    {
      v12 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348E6E94](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      v13 = v12;
      v14 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      sub_2318C7AE0(a2, a3, a4, a5, a6, a7, v32);
      v15 = v32[0];
      v16 = v32[1];
      v17 = v32[3];
      v35 = v32[2];
      v18 = v32[4];
      v30 = v32[6];
      v31 = v32[5];

      sub_231846210((uint64_t)v32, (uint64_t)v33, (uint64_t)&unk_25418A158, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
      if (v34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_2317ECBCC(0, v9[2] + 1, 1, v9);
        v20 = v9[2];
        v19 = v9[3];
        if (v20 >= v19 >> 1)
          v9 = sub_2317ECBCC((_QWORD *)(v19 > 1), v20 + 1, 1, v9);
        v9[2] = v20 + 1;
        v11 = &v9[7 * v20];
        v11[4] = v15;
        v11[5] = v16;
        v11[6] = v35;
        v11[7] = v17;
        v11[8] = v18;
        v11[9] = v31;
        v11[10] = v30;
        v8 = a1;
      }
      ++v10;
      if (v14 == v23)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t storeEnumTagSinglePayload for SharedMedicationsChartSeries.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23184B320 + 4 * byte_2318DAB64[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23184B354 + 4 * byte_2318DAB5F[v4]))();
}

uint64_t sub_23184B354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23184B35C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23184B364);
  return result;
}

uint64_t sub_23184B370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23184B378);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23184B37C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23184B384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedMedicationsChartSeries.CodingKeys()
{
  return &type metadata for SharedMedicationsChartSeries.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SharedMedicationsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE2)
    goto LABEL_17;
  if (a2 + 30 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 30) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 30;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 30;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 30;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v8 = v6 - 31;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedMedicationsFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_23184B47C + 4 * byte_2318DAB6E[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_23184B4B0 + 4 * byte_2318DAB69[v4]))();
}

uint64_t sub_23184B4B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23184B4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23184B4C0);
  return result;
}

uint64_t sub_23184B4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23184B4D4);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_23184B4D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23184B4E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedMedicationsFeedItemData.CodingKeys()
{
  return &type metadata for SharedMedicationsFeedItemData.CodingKeys;
}

unint64_t sub_23184B500()
{
  unint64_t result;

  result = qword_255F26E40;
  if (!qword_255F26E40)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB13C, &type metadata for SharedMedicationsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F26E40);
  }
  return result;
}

unint64_t sub_23184B548()
{
  unint64_t result;

  result = qword_255F26E48;
  if (!qword_255F26E48)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB1F4, &type metadata for SharedMedicationsChartSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F26E48);
  }
  return result;
}

unint64_t sub_23184B590()
{
  unint64_t result;

  result = qword_254188220;
  if (!qword_254188220)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB164, &type metadata for SharedMedicationsChartSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188220);
  }
  return result;
}

unint64_t sub_23184B5D8()
{
  unint64_t result;

  result = qword_254188218;
  if (!qword_254188218)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB18C, &type metadata for SharedMedicationsChartSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254188218);
  }
  return result;
}

unint64_t sub_23184B620()
{
  unint64_t result;

  result = qword_2541882D8;
  if (!qword_2541882D8)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB0AC, &type metadata for SharedMedicationsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541882D8);
  }
  return result;
}

unint64_t sub_23184B668()
{
  unint64_t result;

  result = qword_2541882D0;
  if (!qword_2541882D0)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB0D4, &type metadata for SharedMedicationsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541882D0);
  }
  return result;
}

uint64_t sub_23184B6AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74614468746E6F6DLL && a2 == 0xE900000000000061;
  if (v2 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68746E6F4D786973 && a2 == 0xED00006174614473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23184B7CC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002318E21B0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002318E21D0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6569647561 && a2 == 0xE800000000000000 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002318E1C30 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572726566657270 && a2 == 0xED0000656D614E64 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D614E646E617262 && a2 == 0xE900000000000065 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E636972656E6567 && a2 == 0xEB00000000656D61 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002318E21F0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736F446369736162 && a2 == 0xED00006D726F4665 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002318E2210 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002318E2230 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002318E2250 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002318E2270 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002318E2290 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002318E22B0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002318E22D0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002318E22F0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002318E2310 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002318E2330 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002318E2350 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002318E2370 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002318E2390 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002318E23B0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002318E23D0 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xE800000000000000 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x6563655274736F6DLL && a2 == 0xEE0065736F44746ELL || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x67694868746E6F6DLL && a2 == 0xEF73746867696C68 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x7265537472616863 && a2 == 0xEB00000000736569 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xE800000000000000 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x746E6176656C6572 && a2 == 0xEC00000065746144 || (sub_2318D62B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else
  {
    v5 = sub_2318D62B8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 30;
    else
      return 31;
  }
}

id MedicationCategoryViewController.__allocating_init(healthStore:provenance:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MedicationCategoryViewController.init(healthStore:provenance:)(a1, a2);
}

uint64_t MedicationCategoryViewController.providedPresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42608];
  v3 = sub_2318D342C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id sub_23184C468(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  v4 = objc_msgSend(v2, sel_categoryWithID_, 31);
  if (v4)
  {
    v5 = v4;
    sub_2318D5B2C();

    v6 = (void *)sub_2318D558C();
    swift_bridgeObjectRelease();
  }
  else
  {

    v6 = 0;
  }
  return v6;
}

uint64_t MedicationCategoryViewController.sidebarSelectionIdentifier.getter()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 31);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_2318D5B2C();

  return v2;
}

id MedicationCategoryViewController.init(healthStore:provenance:)(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;

  v5 = sub_2318D3B64();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2318D4080();
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - v11;
  *(_QWORD *)&v2[qword_254189298] = MEMORY[0x24BEE4B08];
  v13 = qword_254188090;
  sub_2318D4584();
  v14 = v2;
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2318D453C();
  swift_allocObject();
  *(_QWORD *)&v2[v13] = sub_2318D4530();
  *(_QWORD *)&v14[qword_25418B348] = a1;
  v15 = a1;
  *(_QWORD *)&v14[qword_25418B350] = sub_2318D4578();
  *(_QWORD *)&v14[qword_25418B338] = a2;
  sub_2318D48A8();
  swift_allocObject();
  *(_QWORD *)&v14[qword_2541892A0] = sub_2318D489C();

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD488]), sel_init);
  v17 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v37.receiver = v14;
  v37.super_class = v17;
  v18 = objc_msgSendSuper2(&v37, sel_initWithCollectionViewLayout_, v16);

  v19 = sub_2318D29AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = v18;
  sub_2318D4074();
  sub_2318D444C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
  sub_23181B654((uint64_t)v12, (uint64_t)&qword_25418B2C0, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  v21 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setTitle_, v21);

  v22 = objc_msgSend(v20, sel_navigationItem);
  objc_msgSend(v22, sel_setLargeTitleDisplayMode_, 2);

  v23 = v34;
  sub_2318D3B58();
  LOBYTE(v22) = sub_2318D3B4C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  if ((v22 & 1) != 0)
  {
    v24 = objc_msgSend(v20, sel_navigationItem);
    v25 = (void *)sub_2318D558C();
    v26 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v25);

    v27 = objc_allocWithZone(MEMORY[0x24BEBD410]);
    v28 = v20;
    v29 = objc_msgSend(v27, sel_initWithImage_style_target_action_, v26, 0, v28, sel_tapToRadarButtonTappedWithSender_);

    objc_msgSend(v24, sel_setRightBarButtonItem_, v29);
    v15 = v29;
  }
  else
  {
    v24 = v20;
  }

  return v20;
}

uint64_t type metadata accessor for MedicationCategoryViewController()
{
  uint64_t result;

  result = qword_25418B358;
  if (!qword_25418B358)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23184C9F8(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;

  *(_QWORD *)&a1[qword_254189298] = MEMORY[0x24BEE4B08];
  v5 = qword_254188090;
  sub_2318D4584();
  v6 = a3;
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2318D453C();
  swift_allocObject();
  *(_QWORD *)&a1[v5] = sub_2318D4530();

  sub_2318D6150();
  __break(1u);
}

Swift::Void __swiftcall MedicationCategoryViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;
  _QWORD v13[5];

  v1 = v0;
  v2 = *(id *)&v0[qword_25418B348];
  sub_2318D5AFC();
  v3 = sub_2318D4560();
  v4 = *(_QWORD *)&v1[qword_2541892A0];
  v5 = *(_QWORD *)&v1[qword_254188090];
  v6 = (objc_class *)type metadata accessor for MedicationCategoryDataSourceProvider();
  objc_allocWithZone(v6);
  swift_retain();
  swift_retain();
  v7 = sub_231810CD8(v2, (uint64_t)v13, v3, v4, v5);
  v13[3] = v6;
  v13[4] = sub_2317CC4AC(&qword_25418AD78, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCategoryDataSourceProvider, (uint64_t)&unk_2318D9A88);
  v13[0] = v7;
  sub_2318D3E7C();
  v8 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v12.receiver = v1;
  v12.super_class = v8;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  sub_23184E178();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_timeZoneChanged, *MEMORY[0x24BDBCBC0], 0);

  sub_2318D4890();
  v13[0] = v1;
  v10 = *MEMORY[0x24BE49FF8];
  v11 = sub_2317CC4AC(&qword_255F26E50, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCategoryViewController, (uint64_t)&protocol conformance descriptor for MedicationCategoryViewController);
  MEMORY[0x2348E4C68](0xD000000000000017, 0x80000002318E2400, v10, v2, v8, v11);
}

void sub_23184CCB4(void *a1)
{
  id v1;

  v1 = a1;
  MedicationCategoryViewController.viewDidLoad()();

}

uint64_t sub_23184CCE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char **v13;
  _QWORD v15[2];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19[3];
  uint64_t v20;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49E0();
  v6 = sub_2318D4A10();
  v7 = sub_2318D5A54();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v15[1] = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_2318D63CC();
    *(_QWORD *)&v16 = sub_231851EBC(v11, v12, v19);
    sub_2318D5F70();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v6, v7, "[%s] observed time zone change notification", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v10, -1, -1);
    MEMORY[0x2348E77E8](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2318D3E70();
  if (v20)
  {
    sub_2317D4290(0, &qword_255F26FB8);
    sub_2317D4290(0, &qword_255F26FC8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*((_QWORD *)&v17 + 1))
      {
        sub_2317D4AF0(&v16, (uint64_t)v19);
        v13 = (char **)sub_2317D4B08(v19, v20);
        sub_231814488(*v13);
        return sub_2317D4B2C((uint64_t)v19);
      }
    }
    else
    {
      v18 = 0;
      v16 = 0u;
      v17 = 0u;
    }
  }
  else
  {
    sub_231852D98((uint64_t)v19, &qword_255F26FB0, &qword_255F26FB8, MEMORY[0x24BE44B08]);
    v16 = 0u;
    v17 = 0u;
    v18 = 0;
  }
  return sub_231852D98((uint64_t)&v16, &qword_255F26FC0, &qword_255F26FC8, (uint64_t)&protocol descriptor for MedicationTimeZoneChangeHandler);
}

void sub_23184CF84(void *a1)
{
  id v1;

  v1 = a1;
  sub_23184CCE8();

}

Swift::Void __swiftcall MedicationCategoryViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  uint64_t v7;
  objc_super v8;

  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - v4;
  v6 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v8.receiver = v1;
  v8.super_class = v6;
  objc_msgSendSuper2(&v8, sel_viewDidAppear_, a1);
  sub_23184D7FC();
  sub_23184D14C();
  sub_23184EE70();
  sub_2318D4584();
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B400);
  sub_2318D5A60();
  sub_2318D4524();
  swift_allocObject();
  sub_2318D44A0();
  sub_2318D2940();
  v7 = sub_2318D294C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  sub_2318D450C();
  swift_release();
}

void sub_23184D10C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  MedicationCategoryViewController.viewDidAppear(_:)(a3);

}

uint64_t sub_23184D14C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  id v18;

  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - v1;
  v3 = sub_2318D5C10();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231853560(0, (unint64_t *)&unk_255F27038, v7, sub_231821558, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
  v9 = v8;
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v13 = (void *)sub_2318D5BEC();
  sub_2318D5C1C();

  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v18 = (id)sub_2318D5B80();
  v14 = sub_2318D5B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
  sub_231821558();
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_23181B654((uint64_t)v2, (uint64_t)&qword_25418B280, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231853418();
  sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v9);
  swift_beginAccess();
  sub_2318D4DA0();
  swift_endAccess();
  return swift_release();
}

void sub_23184D418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348E78A8](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = sub_23184D48C();
    objc_msgSend(v4, sel_presentViewController_animated_completion_, v5, 1, 0);

  }
}

id sub_23184D48C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t aBlock;
  uint64_t v14;
  void (*v15)(uint64_t, void *);
  void *v16;
  void *v17;
  uint64_t v18;

  if (qword_25418B328 != -1)
    swift_once();
  sub_2318D2808();
  sub_2318D2808();
  v0 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1, 0xE000000000000000);

  sub_2318D2808();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v4 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v17 = sub_231823BA4;
  v18 = v3;
  v5 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23183C9A8;
  v16 = &unk_25007EEE8;
  v6 = _Block_copy(&aBlock);
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_actionWithTitle_style_handler_, v4, 1, v6, 0xE000000000000000);
  _Block_release(v6);

  swift_release();
  objc_msgSend(v2, sel_addAction_, v8);

  sub_2318D2808();
  v9 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v17 = sub_23180D05C;
  v18 = 0;
  aBlock = v5;
  v14 = 1107296256;
  v15 = sub_23183C9A8;
  v16 = &unk_25007EF10;
  v10 = _Block_copy(&aBlock);
  swift_release();
  v11 = objc_msgSend(v7, sel_actionWithTitle_style_handler_, v9, 0, v10, 0xE000000000000000);
  _Block_release(v10);

  objc_msgSend(v2, sel_addAction_, v11);
  return v2;
}

uint64_t sub_23184D7FC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_255F27050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5728], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)&v39 - v2;
  v3 = sub_2318D5B74();
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B280, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], v0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - v6;
  v8 = sub_2318D5C10();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231853498();
  v13 = v12;
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231853520(0);
  v42 = v16;
  v46 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v39 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231853560(0, &qword_255F27068, v18, sub_231853628, MEMORY[0x24BDB9748]);
  v45 = v19;
  v47 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)&v39 - v20;
  sub_231853644();
  v22 = *(_QWORD *)(v21 - 8);
  v51 = v21;
  v52 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v43 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v25 = (void *)sub_2318D5BE0();
  sub_2318D5C1C();

  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  sub_231821558();
  sub_2318D4F14();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  v53 = (id)sub_2318D5B80();
  v26 = sub_2318D5B50();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v7, 1, 1, v26);
  sub_231853544();
  sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  sub_2318D4FBC();
  sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418B280, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
  v28 = v44;
  sub_2318D5B5C();
  v29 = v48;
  v30 = v49;
  v31 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v50, 1, 1, v49);
  v53 = (id)sub_2318D5B80();
  v27(v7, 1, 1, v26);
  sub_231853628();
  v32 = v40;
  v33 = v42;
  v34 = v39;
  sub_2318D4F5C();
  sub_23181B654((uint64_t)v7, (uint64_t)&qword_25418B280, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);

  sub_23181B654(v31, (uint64_t)&qword_255F27050, (uint64_t)MEMORY[0x24BEE5728], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v33);
  sub_2318536C4();
  sub_23180DDC0(&qword_255F27088, (unint64_t *)&qword_25418B440, 0x24BE45CB8, MEMORY[0x24BEE5BE0]);
  v35 = v43;
  v36 = v45;
  sub_2318D4FD4();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v36);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2317CC4AC(&qword_255F27090, (uint64_t (*)(uint64_t))sub_231853644, MEMORY[0x24BDB9658]);
  v37 = v51;
  sub_2318D4FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v37);
  swift_beginAccess();
  sub_2318D4DA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_23184DDE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  _QWORD v3[4];

  sub_2318D2724();
  if (!v3[3])
  {
    result = sub_23181B654((uint64_t)v3, (uint64_t)&qword_25418B4B0, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317CDA94);
    goto LABEL_5;
  }
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_5:
    *a1 = 0;
  return result;
}

void sub_23184DE84(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2348E78A8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + qword_25418B348);
    v7 = v2;
    v8 = v6;
    sub_2318D4560();
    objc_allocWithZone((Class)sub_2318D43C8());
    swift_retain();
    v9 = (void *)sub_2318D43B0();
    v10 = objc_msgSend(v5, sel_navigationController);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_pushViewController_animated_, v9, 1);

    }
  }
}

Swift::Void __swiftcall MedicationCategoryViewController.registerReusableCollectionViewTypes()()
{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  __int128 v7[2];
  uint64_t v8;
  __int128 v9;
  _QWORD v10[4];

  sub_2318D3E88();
  v1 = (void (*)(void))sub_2318D3E94();
  v1();
  sub_2318D3E58();
  v2 = sub_2318D3A44();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  sub_2317D4290(0, &qword_255F25698);
  sub_2317D4290(0, &qword_25418AA70);
  v4 = 0;
  while (1)
  {
    v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
    swift_unknownObjectRetain_n();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_unknownObjectRelease();
    sub_231852D98((uint64_t)v7, &qword_255F26E58, &qword_25418AA70, MEMORY[0x24BE44380]);
LABEL_4:
    if (v3 == ++v4)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_2317D4AF0(v7, (uint64_t)v10);
  sub_2317D4B08(v10, v10[3]);
  v5 = objc_msgSend(v0, sel_collectionView);
  if (v5)
  {
    v6 = v5;
    sub_2318D3BAC();

    swift_unknownObjectRelease();
    sub_2317D4B2C((uint64_t)v10);
    goto LABEL_4;
  }
  __break(1u);
}

uint64_t sub_23184E178()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_2317D4194(0, &qword_25418B3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v25 - v2;
  v4 = sub_2318D4A1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D4584();
  sub_2318D4578();
  sub_2318D4548();
  swift_release();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B400);
  sub_2318D5A60();
  sub_2318D4524();
  swift_allocObject();
  sub_2318D44A0();
  v8 = sub_2318D44E8();
  swift_release();
  if ((v8 & 1) != 0)
  {
    sub_2318D49E0();
    v9 = v0;
    v10 = sub_2318D4A10();
    v11 = sub_2318D5A54();
    if (os_log_type_enabled(v10, v11))
    {
      v27 = v4;
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v29 = v13;
      v26 = v5;
      *(_DWORD *)v12 = 136446210;
      v25[1] = v12 + 4;
      v14 = v9;
      v15 = objc_msgSend(v14, sel_description);
      v16 = sub_2318D55BC();
      v18 = v17;

      v28 = sub_231851EBC(v16, v18, &v29);
      sub_2318D5F70();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2317C8000, v10, v11, "[%{public}s] Shard check override enabled. Not marking medication shards as required.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v13, -1, -1);
      MEMORY[0x2348E77E8](v12, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    v20 = sub_2318D582C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_2318D5814();
    v21 = v0;
    v22 = sub_2318D5808();
    v23 = (_QWORD *)swift_allocObject();
    v24 = MEMORY[0x24BEE6930];
    v23[2] = v22;
    v23[3] = v24;
    v23[4] = v21;
    sub_23188BA78((uint64_t)v3, (uint64_t)&unk_255F270A0, (uint64_t)v23);
    return swift_release();
  }
}

uint64_t sub_23184E4C4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_2318D5814();
  v0[3] = sub_2318D5808();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23184E528;
  return sub_23184E5C8();
}

uint64_t sub_23184E528()
{
  swift_task_dealloc();
  sub_2318D57F0();
  return swift_task_switch();
}

uint64_t sub_23184E598()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23184E5C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[23] = v0;
  v2 = sub_2318D4A1C();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  sub_2318D5814();
  v1[29] = sub_2318D5808();
  v1[30] = sub_2318D57F0();
  v1[31] = v3;
  return swift_task_switch();
}

uint64_t sub_23184E678()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (void *)v0[23];
  sub_2318D49E0();
  v2 = v1;
  v3 = sub_2318D4A10();
  v4 = sub_2318D5A54();
  if (os_log_type_enabled(v3, v4))
  {
    v26 = v0[25];
    v5 = (void *)v0[23];
    v27 = v0[24];
    v28 = v0[28];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v29 = v7;
    v0[21] = v5;
    type metadata accessor for MedicationCategoryViewController();
    v8 = v5;
    v9 = sub_2318D55EC();
    v0[22] = sub_231851EBC(v9, v10, &v29);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v3, v4, "[%{public}s] Marking 'coreMeds' and 'medScanning' shards as required.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v7, -1, -1);
    MEMORY[0x2348E77E8](v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v11(v28, v27);
  }
  else
  {
    v12 = v0[28];
    v13 = v0[24];
    v14 = v0[25];
    v15 = (void *)v0[23];

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[32] = v11;
  v16 = (void *)sub_2318D4554();
  v0[33] = v16;
  sub_2317D4194(0, (unint64_t *)&unk_255F26FA0, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2318D8510;
  v18 = (void *)*MEMORY[0x24BDD32A0];
  v19 = (void *)*MEMORY[0x24BDD32A8];
  *(_QWORD *)(v17 + 32) = *MEMORY[0x24BDD32A0];
  *(_QWORD *)(v17 + 40) = v19;
  type metadata accessor for HKOntologyShardIdentifier(0);
  v20 = v18;
  v21 = v19;
  v22 = sub_2318D5778();
  v0[34] = v22;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_23184E958;
  v23 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v24 = v0 + 10;
  v24[1] = 0x40000000;
  v24[2] = sub_2318A4FF0;
  v24[3] = &unk_25007EEA8;
  v24[4] = v23;
  objc_msgSend(v16, sel_markShardsWithIdentifiers_options_completion_, v22, 5, v24);
  return swift_continuation_await();
}

uint64_t sub_23184E958()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 280) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23184E9B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;

  v1 = *(void **)(v0 + 264);
  v2 = *(void **)(v0 + 184);

  swift_release();
  sub_2318D49E0();
  v3 = v2;
  v4 = sub_2318D4A10();
  v5 = sub_2318D5A54();
  if (os_log_type_enabled(v4, v5))
  {
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v6 = *(void **)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 192);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v20 = v8;
    *(_QWORD *)(v0 + 152) = v6;
    type metadata accessor for MedicationCategoryViewController();
    v9 = v6;
    v10 = sub_2318D55EC();
    *(_QWORD *)(v0 + 160) = sub_231851EBC(v10, v11, &v20);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v4, v5, "[%{public}s] Marked 'coreMeds' and '.medsScanning' shards as required (userInitiated) successfully", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v8, -1, -1);
    MEMORY[0x2348E77E8](v7, -1, -1);

    v19(v18, v17);
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v13 = *(_QWORD *)(v0 + 216);
    v15 = *(void **)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 192);

    v12(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23184EBB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30[2];

  v2 = *(void **)(v0 + 272);
  v1 = *(void **)(v0 + 280);
  v3 = *(void **)(v0 + 264);
  v4 = *(void **)(v0 + 184);
  swift_release();
  swift_willThrow();

  sub_2318D49E0();
  v5 = v4;
  v6 = v1;
  v7 = v5;
  v8 = v1;
  v9 = sub_2318D4A10();
  v10 = sub_2318D5A3C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 208);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v12 = *(void **)(v0 + 184);
    v27 = *(_QWORD *)(v0 + 192);
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v30[0] = v14;
    *(_DWORD *)v13 = 136446466;
    *(_QWORD *)(v0 + 120) = v12;
    type metadata accessor for MedicationCategoryViewController();
    v15 = v12;
    v16 = sub_2318D55EC();
    *(_QWORD *)(v0 + 128) = sub_231851EBC(v16, v17, v30);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 136) = v11;
    v18 = v11;
    sub_2317D4290(0, (unint64_t *)&qword_25418B4A0);
    v19 = sub_2318D55E0();
    *(_QWORD *)(v0 + 144) = sub_231851EBC(v19, v20, v30);
    sub_2318D5F70();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2317C8000, v9, v10, "[%{public}s] Failed to mark 'coreMeds' and '.medsScanning' as required, error: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v14, -1, -1);
    MEMORY[0x2348E77E8](v13, -1, -1);

    v29(v28, v27);
  }
  else
  {
    v21 = *(void **)(v0 + 280);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v23 = *(_QWORD *)(v0 + 208);
    v25 = *(void **)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 192);

    v22(v23, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23184EE70()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v1 = sub_2318D4A1C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_hkmd_supportsMedicationsWidget);

    if (v7)
    {
      sub_2318D49E0();
      v8 = v0;
      v9 = sub_2318D4A10();
      v10 = sub_2318D5A54();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v17 = (uint64_t)v8;
        v18 = v12;
        *(_DWORD *)v11 = 136446210;
        v16[1] = v11 + 4;
        type metadata accessor for MedicationCategoryViewController();
        v13 = v8;
        v14 = sub_2318D55EC();
        v17 = sub_231851EBC(v14, v15, &v18);
        sub_2318D5F70();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2317C8000, v9, v10, "[%{public}s] Requesting medications widget reload", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348E77E8](v12, -1, -1);
        MEMORY[0x2348E77E8](v11, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      sub_2318D54E4();
      sub_2318D54D8();
      sub_2318D55BC();
      sub_2318D54CC();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void MedicationCategoryViewController.collectionView(_:didSelectItemAt:)(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_2318D2B2C();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_2318D2B2C();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_2318D3E58();
    sub_2318D3A50();
    sub_2318D3600();
    swift_release();
    sub_2317E06B8((uint64_t)v11, (uint64_t)v8);
    sub_2317D4290(0, (unint64_t *)&qword_25418AA40);
    sub_2317D4290(0, &qword_255F25B78);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_2317D4AF0(v5, (uint64_t)v10);
      sub_2317D4B08(v10, v10[3]);
      sub_2318D3708();

      sub_2317D4B2C((uint64_t)v11);
      sub_2317D4B2C((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_231852D98((uint64_t)v6, (unint64_t *)&qword_255F26E60, &qword_255F25B78, MEMORY[0x24BE43180]);
    *(_QWORD *)&v6[0] = v4;
    sub_2317CCC9C(0, (unint64_t *)&qword_255F25788);
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_2317D4B2C((uint64_t)v11);
    sub_231852D98((uint64_t)v8, (unint64_t *)&qword_255F26E60, &qword_255F25B78, MEMORY[0x24BE43180]);
  }
}

uint64_t sub_23184F2E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_2318D2B80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D2B38();
  v9 = a3;
  v10 = a1;
  MedicationCategoryViewController.collectionView(_:didSelectItemAt:)(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MedicationCategoryViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationCategoryViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationCategoryViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationCategoryViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23184F458(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23184F488()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

id MedicationCategoryViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationCategoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23184F518(uint64_t a1)
{

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23184F580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42608];
  v3 = sub_2318D342C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

Swift::Void __swiftcall MedicationCategoryViewController.onInternalSettingsGesture()()
{
  void *v0;
  id v1;

  type metadata accessor for MedicationsInternalSettingsViewController();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_showViewController_sender_, v1, v0);

}

void sub_23184F618(void *a1)
{
  id v2;
  id v3;
  id v4;

  type metadata accessor for MedicationsInternalSettingsViewController();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = a1;
  v4 = objc_msgSend(v2, sel_init);
  objc_msgSend(v3, sel_showViewController_sender_, v4, v3);

}

void MedicationCategoryViewController.beginAddMedicationFlow(analyticsContext:)()
{
  id v0;

  v0 = (id)sub_2318D4350();
  sub_2318D5B14();

}

Swift::Void __swiftcall MedicationCategoryViewController.showArchivedMedications()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  v2 = sub_2318D4560();
  v3 = *(void **)&v1[qword_25418B348];
  objc_allocWithZone((Class)type metadata accessor for ArchivedMedicationsListViewController());
  v6 = sub_2318158C4(v2, v3);
  v4 = objc_msgSend(v1, sel_navigationController);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);

  }
}

uint64_t MedicationCategoryViewController.createPDFForMedications()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[7] = v0;
  v2 = sub_2318D381C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = sub_2318D3654();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v4 = sub_2318D3534();
  v1[14] = v4;
  v1[15] = *(_QWORD *)(v4 - 8);
  v1[16] = swift_task_alloc();
  v5 = sub_2318D354C();
  v1[17] = v5;
  v1[18] = *(_QWORD *)(v5 - 8);
  v1[19] = swift_task_alloc();
  v6 = sub_2318D29B8();
  v1[20] = v6;
  v1[21] = *(_QWORD *)(v6 - 8);
  v1[22] = swift_task_alloc();
  sub_2318D2A90();
  v1[23] = swift_task_alloc();
  v7 = sub_2318D4080();
  v1[24] = v7;
  v1[25] = *(_QWORD *)(v7 - 8);
  v1[26] = swift_task_alloc();
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v1[27] = swift_task_alloc();
  v8 = sub_2318D3B28();
  v1[28] = v8;
  v1[29] = *(_QWORD *)(v8 - 8);
  v1[30] = swift_task_alloc();
  sub_2318D5814();
  v1[31] = sub_2318D5808();
  v1[32] = sub_2318D57F0();
  v1[33] = v9;
  return swift_task_switch();
}

uint64_t sub_23184F960()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _QWORD, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_2318D4560();
  v1 = sub_2318D48F0();
  swift_release();
  v29 = MEMORY[0x24BEE4AF8];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
LABEL_17:
    v0[34] = v7;
    v9 = v0[26];
    v8 = v0[27];
    v11 = v0[24];
    v10 = v0[25];
    v12 = v0[22];
    v27 = v0[21];
    v28 = v0[20];
    v13 = v0[7];
    swift_bridgeObjectRelease();
    v14 = *(void **)(v13 + qword_25418B348);
    sub_2318D39B4();
    v15 = v14;
    v0[35] = sub_2318D39A8();
    swift_retain();
    sub_2318D3B10();
    v0[36] = sub_2318D3648();
    v16 = sub_2318D29AC();
    v17 = MEMORY[0x24BDCEEA8];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    swift_retain();
    sub_2318D4074();
    sub_2318D444C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_23181B654(v8, (uint64_t)&qword_25418B2C0, (uint64_t)v17, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
    v18 = MEMORY[0x24BE43080];
    sub_2317D4194(0, &qword_255F26E78, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v19 = sub_2318D36CC();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(_QWORD *)(v20 + 72);
    v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2318D8510;
    v24 = v23 + v22;
    v25 = *(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104);
    v25(v24, *MEMORY[0x24BE43070], v19);
    v25(v24 + v21, *MEMORY[0x24BE43078], v19);
    sub_231852A90(v23, (uint64_t (*)(_QWORD))v18, sub_231853334, (void (*)(uint64_t))sub_2318533B4, (void (*)(uint64_t))sub_2318533D0);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v12, *MEMORY[0x24BDCEF70], v28);
    sub_2318D29C4();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v12, v28);
    v0[37] = sub_2318D363C();
    v26 = (_QWORD *)swift_task_alloc();
    v0[38] = v26;
    *v26 = v0;
    v26[1] = sub_23184FDC4;
    return sub_2318D3B1C();
  }
  swift_bridgeObjectRetain();
  result = sub_2318D6174();
  v2 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x2348E6E94](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2348E6528]();
        if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2318D57B4();
        sub_2318D57D8();
        sub_2318D57A8();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v7 = v29;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_23184FDC4(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (a1)
      v5 = a1;
  }
  *(_QWORD *)(v4 + 312) = v5;
  return swift_task_switch();
}

uint64_t sub_23184FE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2317EE130(0, (unint64_t *)&unk_255F26E80, (unint64_t *)&qword_255F256E8, MEMORY[0x24BE42740], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 320) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_2318D8680;
  v2 = sub_2318D3F54();
  v3 = MEMORY[0x24BE453D0];
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  sub_2317DBF6C((uint64_t *)(v1 + 32));
  sub_2318D3F48();
  return swift_task_switch();
}

uint64_t sub_23184FF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 312);
  v26 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(uint64_t **)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 64);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE42A48], v4);
  *v3 = sub_2318D3E1C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v3, *MEMORY[0x24BE42EE8], v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, *MEMORY[0x24BE435B8], v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v25;
  v10[3] = v24;
  v10[4] = v26;
  sub_2318D3540();
  if (qword_25418B328 != -1)
    swift_once();
  v21 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 136);
  v14 = *(void **)(v0 + 56);
  sub_2318D2808();
  v15 = MEMORY[0x24BE42A68];
  *(_QWORD *)(v0 + 40) = v13;
  *(_QWORD *)(v0 + 48) = v15;
  v16 = sub_2317DBF6C((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v16, v12, v13);
  v17 = objc_allocWithZone((Class)sub_2318D37F8());
  swift_retain();
  v18 = (void *)sub_2318D37EC();
  sub_2317CC4AC(&qword_255F26E90, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCategoryViewController, (uint64_t)&protocol conformance descriptor for MedicationCategoryViewController);
  swift_unknownObjectRetain();
  sub_2318D37E0();
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v18, 0xE000000000000000);
  objc_msgSend(v14, sel_presentViewController_animated_completion_, v19, 1, 0);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231850240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  id v17;
  id v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];

  v27 = a3;
  v26 = sub_2318D3564();
  v4 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MedicationsPDFProvider(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&unk_255F26FF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE422B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - v11;
  v13 = sub_2318D3390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_2317EE130(0, (unint64_t *)&unk_255F26E80, (unint64_t *)&qword_255F256E8, MEMORY[0x24BE42740], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v14 = swift_allocObject();
  v25 = xmmword_2318D8680;
  *(_OWORD *)(v14 + 16) = xmmword_2318D8680;
  *(_QWORD *)(v14 + 56) = v7;
  *(_QWORD *)(v14 + 64) = sub_2317CC4AC(qword_255F26070, type metadata accessor for MedicationsPDFProvider, (uint64_t)&unk_2318D9C90);
  v15 = sub_2317DBF6C((uint64_t *)(v14 + 32));
  *(_QWORD *)v9 = a2;
  v16 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = objc_msgSend(v16, sel_sharedApplication);
  v18 = objc_msgSend(v17, sel_userInterfaceLayoutDirection);

  v19 = (unsigned int *)MEMORY[0x24BE42AA0];
  if (v18 != (id)1)
    v19 = (unsigned int *)MEMORY[0x24BE42A98];
  v20 = v26;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v19, v26);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v9[*(int *)(v7 + 20)], v6, v20);
  sub_23185327C((uint64_t)v9, (uint64_t)v15);
  v28[3] = sub_2318D33A8();
  v28[4] = MEMORY[0x24BE42308];
  sub_2317DBF6C(v28);
  swift_bridgeObjectRetain();
  sub_2318D339C();
  v21 = sub_2318D399C();
  sub_2317D4B2C((uint64_t)v28);
  sub_2318532C0();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v25;
  *(_QWORD *)(v22 + 32) = v21;
  v23 = MEMORY[0x2348E474C]();
  swift_bridgeObjectRelease();
  return v23;
}

void sub_231850528()
{
  id v0;

  v0 = (id)sub_2318D4350();
  sub_2318D5B14();

}

void sub_23185057C()
{
  void **v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = (char *)*v0;
  v2 = sub_2318D4560();
  v3 = *(void **)&v1[qword_25418B348];
  objc_allocWithZone((Class)type metadata accessor for ArchivedMedicationsListViewController());
  v6 = sub_2318158C4(v2, v3);
  v4 = objc_msgSend(v1, sel_navigationController);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);

  }
}

uint64_t sub_23185062C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2317F1604;
  return MedicationCategoryViewController.createPDFForMedications()();
}

uint64_t MedicationCategoryViewController.pdfViewControllerDidLoad(_:)()
{
  return sub_2318D4890();
}

uint64_t MedicationCategoryViewController.pdfViewControllerDidTapShare(_:)()
{
  return sub_2318D4890();
}

uint64_t sub_2318506D4()
{
  return sub_2318D4890();
}

uint64_t sub_231850704()
{
  return sub_2318D4890();
}

uint64_t MedicationCategoryViewController.logDoseViewControllerFor(scheduleItemIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2318D4A1C();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v5 = sub_2318D4080();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3[15] = swift_task_alloc();
  v6 = sub_2318D2A90();
  v3[16] = v6;
  v3[17] = *(_QWORD *)(v6 - 8);
  v3[18] = swift_task_alloc();
  v7 = sub_2318D294C();
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  sub_2318D5814();
  v3[25] = sub_2318D5808();
  v3[26] = sub_2318D57F0();
  v3[27] = v8;
  return swift_task_switch();
}

uint64_t sub_2318508B4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0[7] + qword_25418B348);
  v0[28] = v1;
  sub_2318D477C();
  swift_allocObject();
  v2 = v1;
  v0[29] = sub_2318D4770();
  sub_2318D4620();
  v3 = v2;
  v0[30] = sub_2318D4614();
  v4 = (_QWORD *)swift_task_alloc();
  v0[31] = v4;
  *v4 = v0;
  v4[1] = sub_231850968;
  return sub_2318D4764();
}

uint64_t sub_231850968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 256) = a1;
  *(_QWORD *)(v3 + 264) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2318509D0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 256);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_2318D6174();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = v18;
    if (v18)
      goto LABEL_3;
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2318D49E0();
    swift_bridgeObjectRetain_n();
    v19 = sub_2318D4A10();
    v20 = sub_2318D5A3C();
    v21 = os_log_type_enabled(v19, v20);
    v23 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 48);
    if (v21)
    {
      v31 = *(_QWORD *)(v0 + 64);
      v26 = *(_QWORD *)(v0 + 40);
      v27 = (uint8_t *)swift_slowAlloc();
      v30 = v23;
      v28 = swift_slowAlloc();
      v33 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_231851EBC(v26, v25, &v33);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2317C8000, v19, v20, "Could not find unlogged scheduleItems for identifier: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v28, -1, -1);
      MEMORY[0x2348E77E8](v27, -1, -1);
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v22, v31);
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(_QWORD))(v0 + 8))(0);
    return;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 272) = v2;
  if (!v2)
    goto LABEL_14;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v29 = *(_QWORD *)(v0 + 256);
    swift_bridgeObjectRetain();
    MEMORY[0x2348E6E94](0, v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_retain();
  }
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 128);
  sub_2318D459C();
  swift_release();
  sub_2318D2A6C();
  sub_2318D2940();
  sub_2318D29D0();
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 280) = v10;
  v10(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v11 = sub_2318D2904();
  v10(v3, v5);
  if ((v11 & 1) != 0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 152));
  else
    sub_2318D2940();
  v12 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 288) = 0;
  if ((v12 & 0xC000000000000001) != 0)
    v13 = MEMORY[0x2348E6E94](0);
  else
    v13 = swift_retain();
  *(_QWORD *)(v0 + 296) = v13;
  *(_QWORD *)(v0 + 304) = 1;
  v14 = sub_2318D4590();
  v16 = v15;
  *(_QWORD *)(v0 + 312) = v15;
  v32 = (void (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v17;
  *v17 = v0;
  v17[1] = sub_231850E0C;
  v32(v14, v16);
}

uint64_t sub_231850E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 328) = a1;
  *(_QWORD *)(v3 + 336) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_231850E9C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v1 = *(void **)(v0 + 328);
  v2 = *(id *)(v0 + 296);
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
    sub_2318D3FB4();
    swift_allocObject();
    v3 = v1;
    swift_retain();
    sub_2318D3FA8();
    MEMORY[0x2348E6528]();
    if (*(_QWORD *)((*(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_2318D57B4();
    v2 = *(id *)(v0 + 296);
    sub_2318D57D8();
    sub_2318D57A8();

  }
  swift_release();
  v4 = *(_QWORD *)(v0 + 304);
  if (v4 != *(_QWORD *)(v0 + 272))
  {
    *(_QWORD *)(v0 + 288) = v4;
    if ((*(_QWORD *)(v0 + 256) & 0xC000000000000001) != 0)
      v21 = MEMORY[0x2348E6E94](v4);
    else
      v21 = swift_retain();
    *(_QWORD *)(v0 + 296) = v21;
    *(_QWORD *)(v0 + 304) = v4 + 1;
    if (!__OFADD__(v4, 1))
    {
      v22 = sub_2318D4590();
      v24 = v23;
      *(_QWORD *)(v0 + 312) = v23;
      v54 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x24BE45E88] + MEMORY[0x24BE45E88]);
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 320) = v25;
      *v25 = v0;
      v25[1] = sub_231850E0C;
      return v54(v22, v24);
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v5 = *(_QWORD *)(v0 + 16);
  if (!(v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_16:
    swift_bridgeObjectRelease();
    sub_2318D49E0();
    swift_bridgeObjectRetain_n();
    v28 = sub_2318D4A10();
    v29 = sub_2318D5A3C();
    v30 = os_log_type_enabled(v28, v29);
    v31 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v33 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 192);
    v34 = *(_QWORD *)(v0 + 152);
    v35 = *(_QWORD *)(v0 + 88);
    v36 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 48);
    if (v30)
    {
      v51 = *(_QWORD *)(v0 + 184);
      v38 = *(_QWORD *)(v0 + 40);
      v50 = *(_QWORD *)(v0 + 64);
      v39 = (uint8_t *)swift_slowAlloc();
      v47 = v35;
      v40 = swift_slowAlloc();
      v56 = v40;
      *(_DWORD *)v39 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 24) = sub_231851EBC(v38, v37, &v56);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2317C8000, v28, v29, "Could not find unlogged scheduleItems with active medications for identifier: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v40, -1, -1);
      MEMORY[0x2348E77E8](v39, -1, -1);
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v47, v50);
      v31(v51, v34);
    }
    else
    {
      swift_release();
      swift_release();

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v35, v36);
      v31(v33, v34);
    }
    v31(v32, v34);
    v20 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v27 = sub_2318D6174();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_16;
LABEL_8:
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v2, sel_setTimeStyle_, 1);
  objc_msgSend(v2, sel_setDateStyle_, 0);
  v6 = (void *)sub_2318D28F8();
  v7 = objc_msgSend(v2, sel_stringFromDate_, v6);

  v8 = sub_2318D55BC();
  v46 = v9;
  v48 = v8;

  if (v5 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  v53 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v49 = *(void **)(v0 + 224);
  v52 = *(_QWORD *)(v0 + 184);
  v45 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 152);
  v43 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  v41 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 96);
  v13 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_2318D28F8();
  v15 = objc_msgSend(v2, sel_hm_localizableTimeStringKeyWithPrefix_date_, v13, v14);

  sub_2318D55BC();
  v16 = sub_2318D29AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  sub_2318D4074();
  sub_2317EE130(0, (unint64_t *)&qword_25418B480, (unint64_t *)&qword_25418B4A8, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2318D8680;
  *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v17 + 64) = sub_2317E0830();
  *(_QWORD *)(v17 + 32) = v48;
  *(_QWORD *)(v17 + 40) = v46;
  sub_2318D444C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v11, v42);
  sub_23181B654(v12, (uint64_t)&qword_25418B2C0, (uint64_t)MEMORY[0x24BDCEEA8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_2317D4194);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v45, v43, v10);
  sub_2318D42D8();
  swift_allocObject();
  sub_2318D42CC();
  v18 = objc_allocWithZone((Class)sub_2318D3FCC());
  v19 = v49;
  swift_retain();
  v20 = sub_2318D3FC0();

  swift_release();
  swift_release();
  swift_release();
  v53(v52, v10);
  v53(v43, v10);
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

uint64_t sub_231851670()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231851730()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MedicationCategoryViewController.medicationRoomViewControllerFor(medicationName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = sub_2318D4A1C();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  sub_2318D5814();
  v3[11] = sub_2318D5808();
  sub_2318D57F0();
  return swift_task_switch();
}

unint64_t sub_2318518C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t result;
  uint64_t *i;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  swift_release();
  sub_2318D4584();
  sub_2318D4578();
  v2 = sub_2318D4560();
  swift_release();
  v3 = v2;
  v4 = sub_2318D48F0();
  v5 = v4;
  v37 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v3 = v4;
    else
      v3 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    result = sub_2318D6174();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_19;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != (uint64_t *)v6; i = (uint64_t *)((char *)i + 1))
  {
    if ((v5 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x2348E6E94](i, v5);
    else
      v9 = *(id *)(v5 + 8 * (_QWORD)i + 32);
    v10 = v9;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x2348E6528]();
      if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      sub_2318D57A8();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v11 = v37;
LABEL_20:
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);
  v6 = v0 + 32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v3 = sub_2318528C8(v11, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    v1 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v1;
    if (v1)
      goto LABEL_22;
LABEL_31:
    swift_bridgeObjectRelease();
    if (v1 == 1)
    {
LABEL_32:
      sub_2318D49E0();
      v20 = sub_2318D4A10();
      v21 = sub_2318D5A54();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_2317C8000, v20, v21, "Couldn't create deep link because matching medication concept was nil.", v22, 2u);
        MEMORY[0x2348E77E8](v22, -1, -1);
      }
      v24 = *(_QWORD *)(v0 + 64);
      v23 = *(_QWORD *)(v0 + 72);
      v25 = *(_QWORD *)(v0 + 56);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      goto LABEL_40;
    }
    v16 = 0;
LABEL_36:
    sub_2318D49E0();
    swift_bridgeObjectRetain_n();
    v26 = sub_2318D4A10();
    v27 = sub_2318D5A54();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 56);
    v36 = *(_QWORD *)(v0 + 64);
    v31 = *(_QWORD *)(v0 + 40);
    if (v28)
    {
      v34 = *(_QWORD *)v6;
      v32 = swift_slowAlloc();
      v35 = v29;
      v33 = swift_slowAlloc();
      v37 = v33;
      *(_DWORD *)v32 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_231851EBC(v34, v31, (uint64_t *)&v37);
      sub_2318D5F70();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2048;
      *(_QWORD *)(v0 + 24) = v1;
      sub_2318D5F70();
      _os_log_impl(&dword_2317C8000, v26, v27, "Deep link couldn't be created for medication name: %s, because match count != 1. match count: %ld.", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v33, -1, -1);
      MEMORY[0x2348E77E8](v32, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v30);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v29, v30);
    }
LABEL_40:
    v19 = 0;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v1 = sub_2318D6174();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14 = sub_2318D6174();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_31;
LABEL_22:
  result = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_44:
    v15 = (id)MEMORY[0x2348E6E94](result, v3);
LABEL_27:
    v16 = v15;
    swift_bridgeObjectRelease();
    if (v1 == 1)
    {
      if (v16)
      {
        v17 = *(void **)(*(_QWORD *)(v0 + 48) + qword_25418B348);
        objc_allocWithZone((Class)sub_2318D43C8());
        v18 = v17;
        swift_retain();
        v19 = sub_2318D43B0();
LABEL_41:
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
      }
      goto LABEL_32;
    }
    goto LABEL_36;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v3 + 8 * result + 32);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_231851E44(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2318D5FE8();
  swift_unknownObjectRelease();
  sub_2318D3F78();
  MEMORY[0x2348E4D28](v2);

  return sub_2317D4B2C((uint64_t)&v4);
}

uint64_t sub_231851EBC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_231851F8C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2317E6D50((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2317E6D50((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_2317D4B2C((uint64_t)v12);
  return v7;
}

uint64_t sub_231851F8C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2318D5F7C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_231852144(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2318D60F0();
  if (!v8)
  {
    sub_2318D6144();
    __break(1u);
LABEL_17:
    result = sub_2318D61BC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_231852144(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2318521D8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23185234C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23185234C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2318521D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23181AD48(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2318D60CC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2318D6144();
      __break(1u);
LABEL_10:
      v2 = sub_2318D56AC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2318D61BC();
    __break(1u);
LABEL_14:
    result = sub_2318D6144();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23185234C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_2317CDA94(0, &qword_25418A048, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t (*sub_2318524AC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2318525D8(v6, a2, a3);
  return sub_231852500;
}

uint64_t (*sub_231852504(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23185264C(v6, a2, a3);
  return sub_231852500;
}

uint64_t (*sub_231852558(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2318526C0(v6, a2, a3);
  return sub_231852500;
}

void sub_2318525AC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_2318525D8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2348E6E94](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_231852644;
  }
  __break(1u);
  return result;
}

uint64_t sub_231852644()
{
  return swift_release();
}

void (*sub_23185264C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348E6E94](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2318526B8;
  }
  __break(1u);
  return result;
}

void sub_2318526B8(id *a1)
{

}

uint64_t (*sub_2318526C0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348E6E94](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2318537D4;
  }
  __break(1u);
  return result;
}

uint64_t sub_23185272C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_231852E30();
    v3 = sub_2318D60A8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_2318D6348();
      swift_bridgeObjectRetain();
      sub_2318D567C();
      result = sub_2318D6384();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_2318D62B8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_2318D62B8();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2318528C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_19;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (id)MEMORY[0x2348E6E94](v7, a1);
LABEL_9:
        v9 = v8;
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_18;
        if (sub_2318D5CF4() == a2 && v11 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          sub_2318D60FC();
          sub_2318D6120();
          sub_2318D612C();
          sub_2318D6108();
          goto LABEL_5;
        }
        v12 = sub_2318D62B8();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
          goto LABEL_14;

LABEL_5:
        ++v7;
        if (v10 == v6)
          return v14;
      }
      if (v7 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v6 = sub_2318D6174();
      if (!v6)
        return MEMORY[0x24BEE4AF8];
    }
    v8 = *(id *)(a1 + 8 * v7 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_231852A6C(uint64_t a1)
{
  return sub_231852A90(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCF290], sub_231852DDC, (void (*)(uint64_t))sub_231852DF8, (void (*)(uint64_t))sub_231852E14);
}

uint64_t sub_231852A90(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD), void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t result;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;

  v39 = a5;
  v37 = a4;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    a3(0);
    v15 = sub_2318D60A8();
    v16 = 0;
    v17 = *(unsigned __int8 *)(v8 + 80);
    v35 = v14;
    v36 = a1 + ((v17 + 32) & ~v17);
    v18 = *(_QWORD *)(v8 + 72);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v41 = v15 + 56;
    while (1)
    {
      v38 = v16;
      v19 = v40(v13, v36 + v18 * v16, v7);
      v37(v19);
      v20 = sub_2318D5514();
      v21 = ~(-1 << *(_BYTE *)(v15 + 32));
      v22 = v20 & v21;
      v23 = (v20 & (unint64_t)v21) >> 6;
      v24 = *(_QWORD *)(v41 + 8 * v23);
      v25 = 1 << (v20 & v21);
      if ((v25 & v24) != 0)
      {
        do
        {
          v26 = v40(v11, *(_QWORD *)(v15 + 48) + v22 * v18, v7);
          v39(v26);
          v27 = sub_2318D5580();
          v28 = v8;
          v29 = *(void (**)(char *, uint64_t))(v8 + 8);
          v29(v11, v7);
          if ((v27 & 1) != 0)
          {
            v29(v13, v7);
            v8 = v28;
            v14 = v35;
            goto LABEL_4;
          }
          v22 = (v22 + 1) & v21;
          v23 = v22 >> 6;
          v24 = *(_QWORD *)(v41 + 8 * (v22 >> 6));
          v25 = 1 << v22;
          v8 = v28;
        }
        while ((v24 & (1 << v22)) != 0);
        v14 = v35;
      }
      *(_QWORD *)(v41 + 8 * v23) = v25 | v24;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v15 + 48) + v22 * v18, v13, v7);
      v31 = *(_QWORD *)(v15 + 16);
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        break;
      *(_QWORD *)(v15 + 16) = v33;
LABEL_4:
      v16 = v38 + 1;
      if (v38 + 1 == v14)
        return v15;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_231852CD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_231852D0C()
{
  uint64_t *v0;

  return sub_231850240(v0[2], v0[3], v0[4]);
}

uint64_t sub_231852D18()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231852D90()
{
  return type metadata accessor for MedicationCategoryViewController();
}

uint64_t sub_231852D98(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_2317EE130(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_231852DDC(uint64_t a1)
{
  sub_231853350(a1, &qword_255F26FD0, (void (*)(uint64_t))MEMORY[0x24BDCF290], (void (*)(void))sub_231852DF8);
}

uint64_t sub_231852DF8()
{
  return sub_2317CC4AC(&qword_255F26FD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
}

uint64_t sub_231852E14()
{
  return sub_2317CC4AC((unint64_t *)&unk_255F26FE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
}

void sub_231852E30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189F58)
  {
    v0 = sub_2318D60B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189F58);
  }
}

void sub_231852E8C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_2318531E4();
      v3 = sub_2318D60A8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2318D6174();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x2348E6E94](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_2318D5E68();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_2318D5E74();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_2318D5E74();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_2318D5E68();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_2317CCC9C(0, (unint64_t *)&qword_254189E80);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_2318D5E74();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_2318D5E74();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_2318531E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418A150)
  {
    sub_2317CCC9C(255, (unint64_t *)&qword_254189E80);
    sub_23180DDC0(&qword_254189E90, (unint64_t *)&qword_254189E80, 0x24BDD3DC0, MEMORY[0x24BEE5BD8]);
    v0 = sub_2318D60B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418A150);
  }
}

uint64_t sub_23185327C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsPDFProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2318532C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F27000)
  {
    sub_2317EE130(255, &qword_255F27008, &qword_255F27010, MEMORY[0x24BE42CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D6294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F27000);
  }
}

void sub_231853334(uint64_t a1)
{
  sub_231853350(a1, &qword_255F27018, (void (*)(uint64_t))MEMORY[0x24BE43080], (void (*)(void))sub_2318533B4);
}

void sub_231853350(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_2318D60B4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2318533B4()
{
  return sub_2317CC4AC(&qword_255F27020, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], MEMORY[0x24BE43088]);
}

uint64_t sub_2318533D0()
{
  return sub_2317CC4AC((unint64_t *)&unk_255F27028, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], MEMORY[0x24BE43090]);
}

uint64_t sub_2318533EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_231853410(uint64_t a1)
{
  uint64_t v1;

  sub_23184D418(a1, v1);
}

unint64_t sub_231853418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F27048;
  if (!qword_255F27048)
  {
    sub_231853560(255, (unint64_t *)&unk_255F27038, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], sub_231821558, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9A08], v1);
    atomic_store(result, (unint64_t *)&qword_255F27048);
  }
  return result;
}

uint64_t sub_231853480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231853490()
{
  return swift_release();
}

void sub_231853498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AE68)
  {
    sub_2318D5C10();
    sub_2317CCC9C(255, (unint64_t *)&qword_25418B440);
    sub_231821558();
    v0 = sub_2318D4CA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AE68);
  }
}

void sub_231853520(uint64_t a1)
{
  sub_231853560(a1, (unint64_t *)&unk_255F27058, (uint64_t (*)(uint64_t))sub_231853498, sub_231853544, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BDB99F8]);
}

uint64_t sub_231853544()
{
  return sub_2317CC4AC(&qword_25418AE60, (uint64_t (*)(uint64_t))sub_231853498, MEMORY[0x24BDB94C8]);
}

void sub_231853560(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_2317CCC9C(255, (unint64_t *)&qword_25418B420);
    v11[2] = a4();
    v11[3] = sub_23180DDC0((unint64_t *)&qword_25418B410, (unint64_t *)&qword_25418B420, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_231853628()
{
  return sub_2317CC4AC(&qword_255F27070, (uint64_t (*)(uint64_t))sub_231853520, MEMORY[0x24BDB9A08]);
}

void sub_231853644()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F27078)
  {
    sub_231853560(255, &qword_255F27068, (uint64_t (*)(uint64_t))sub_231853520, sub_231853628, MEMORY[0x24BDB9748]);
    sub_2318536C4();
    v0 = sub_2318D4CEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F27078);
  }
}

unint64_t sub_2318536C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F27080;
  if (!qword_255F27080)
  {
    sub_231853560(255, &qword_255F27068, (uint64_t (*)(uint64_t))sub_231853520, sub_231853628, MEMORY[0x24BDB9748]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9758], v1);
    atomic_store(result, (unint64_t *)&qword_255F27080);
  }
  return result;
}

void sub_23185372C(void **a1)
{
  uint64_t v1;

  sub_23184DE84(a1, v1);
}

uint64_t sub_231853734()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_231853760()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2317D31D8;
  return sub_23184E4C4();
}

uint64_t sub_2318537D8()
{
  sub_2318D6348();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_23185384C()
{
  sub_2318D567C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231853894()
{
  sub_2318D6348();
  sub_2318D567C();
  swift_bridgeObjectRelease();
  return sub_2318D6384();
}

uint64_t sub_231853904@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2318D61D4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_231853960(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x7972616D697270;
  if (*v1)
    v2 = 0x676E6972616873;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_231853998()
{
  sub_2318553B0();
  return sub_2318D5754();
}

uint64_t sub_2318539F4()
{
  sub_2318553B0();
  return sub_2318D573C();
}

uint64_t sub_231853A40(char *a1, char *a2)
{
  return sub_23183D910(*a1, *a2);
}

uint64_t sub_231853A4C()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E6972616873;
  else
    return 0x7972616D697270;
}

uint64_t sub_231853A80@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t result;
  char v44;
  id v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[2];
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  char v98;
  __int128 v99;
  char v100;
  uint64_t v101;
  id v102;
  unsigned __int128 v103;
  __int128 v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  char v114;
  __int128 v115;
  char v116;
  uint64_t v117;
  id v118;
  unsigned __int128 v119;
  __int128 v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  char v125[8];
  void *v126;

  v2 = v1;
  v75 = a1;
  v3 = sub_2318D2A90();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231854848();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v52 - v8;
  v81 = sub_2318D294C();
  v79 = *(_QWORD *)(v81 - 8);
  v9 = MEMORY[0x24BDAC7A8](v81);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v52 - v11;
  v12 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = *(_QWORD *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 48);
  v19 = *(_QWORD *)(v1 + 56);
  v20 = *(unsigned __int8 *)(v1 + 64);
  v22 = *(_QWORD *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 80);
  v23 = *(unsigned __int8 *)(v1 + 88);
  v24 = *(_QWORD *)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 112);
  v78 = *(_QWORD *)(v1 + 120);
  v26 = *(_QWORD *)(v1 + 136);
  v82 = *(_QWORD *)(v1 + 128);
  v27 = *(_QWORD *)(v1 + 144);
  v28 = *(unsigned __int8 *)(v2 + 152);
  v29 = *(_QWORD *)(v2 + 160);
  v70 = v13;
  v71 = v12;
  v109 = v12;
  *(_QWORD *)&v110 = v13;
  v68 = v15;
  v69 = v14;
  *((_QWORD *)&v110 + 1) = v14;
  *(_QWORD *)&v111 = v15;
  v66 = v17;
  v67 = v16;
  *((_QWORD *)&v111 + 1) = v16;
  *(_QWORD *)&v112 = v17;
  v64 = v19;
  v65 = v18;
  *((_QWORD *)&v112 + 1) = v18;
  v113 = v19;
  v63 = v20;
  v114 = v20;
  v61 = v21;
  v62 = v22;
  *(_QWORD *)&v115 = v22;
  *((_QWORD *)&v115 + 1) = v21;
  v60 = v23;
  v116 = v23;
  v59 = v24;
  v117 = v24;
  sub_231854B28(v2 + 104, (uint64_t)v125, (uint64_t)&qword_254189ED8, (uint64_t)&qword_25418B438, 0x24BDD3D30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  sub_231854B28((uint64_t)v125, (uint64_t)&v118, (uint64_t)&qword_254189ED8, (uint64_t)&qword_25418B438, 0x24BDD3D30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  v76 = v26;
  v77 = v25;
  v119 = __PAIR128__(v78, v25);
  v30 = v78;
  *(_QWORD *)&v120 = v82;
  *((_QWORD *)&v120 + 1) = v26;
  v73 = v29;
  v74 = v27;
  v121 = v27;
  v72 = v28;
  v122 = v28;
  v123 = v29;
  v124 = 1;
  sub_231854B28((uint64_t)v125, (uint64_t)&v126, (uint64_t)&qword_254189ED8, (uint64_t)&qword_25418B438, 0x24BDD3D30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  v31 = v126;
  if (!v126)
  {
    v34 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v80, 1, 1, v81);
    sub_2318548F0(v2);
    goto LABEL_7;
  }
  sub_2318548F0(v2);
  v32 = objc_msgSend(v31, sel_startDate);
  v33 = v58;
  sub_2318D2928();

  v35 = v79;
  v34 = (uint64_t)v80;
  v36 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v37 = v81;
  v36(v80, v33, v81);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v34, 0, 1, v37);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v38(v34, 1, v37) == 1)
  {
LABEL_7:
    sub_2318549C8(v34);
    v45 = v118;
LABEL_8:
    v46 = v75;
    *(_QWORD *)&v83 = v71;
    *((_QWORD *)&v83 + 1) = v70;
    *(_QWORD *)&v84 = v69;
    *((_QWORD *)&v84 + 1) = v68;
    *(_QWORD *)&v85 = v67;
    *((_QWORD *)&v85 + 1) = v66;
    *(_QWORD *)&v86 = v65;
    *((_QWORD *)&v86 + 1) = v64;
    LOBYTE(v87) = v63;
    *((_QWORD *)&v87 + 1) = v62;
    *(_QWORD *)&v88 = v61;
    BYTE8(v88) = v60;
    *(_QWORD *)&v89 = v59;
    *((_QWORD *)&v89 + 1) = v45;
    *(_QWORD *)&v90 = v77;
    *((_QWORD *)&v90 + 1) = v30;
    *(_QWORD *)&v91 = v82;
    *((_QWORD *)&v91 + 1) = v76;
    *(_QWORD *)&v92[0] = v74;
    BYTE8(v92[0]) = v72;
    *(_QWORD *)&v92[1] = v73;
    BYTE8(v92[1]) = 1;
    v94 = v110;
    v95 = v111;
    v96 = v112;
    v93 = v109;
    v97 = v113;
    v98 = v114;
    v99 = v115;
    v100 = v116;
    v101 = v117;
    v102 = v45;
    v103 = v119;
    v104 = v120;
    v105 = v121;
    v106 = v122;
    v107 = v123;
    v108 = v124;
    sub_2318548F0((uint64_t)&v83);
    result = sub_231854A04((uint64_t)&v93);
    v47 = v92[0];
    v46[8] = v91;
    v46[9] = v47;
    *(_OWORD *)((char *)v46 + 153) = *(_OWORD *)((char *)v92 + 9);
    v48 = v88;
    v46[4] = v87;
    v46[5] = v48;
    v49 = v90;
    v46[6] = v89;
    v46[7] = v49;
    v50 = v84;
    *v46 = v83;
    v46[1] = v50;
    v51 = v86;
    v46[2] = v85;
    v46[3] = v51;
    return result;
  }
  v39 = v53;
  v36(v53, (char *)v34, v37);
  sub_2318D2940();
  v40 = v54;
  sub_2318D2A6C();
  v41 = v57;
  sub_2318D28D4();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v56);
  v42 = *(void (**)(char *, uint64_t))(v35 + 8);
  v42(v33, v37);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v41, 1, v37);
  if ((_DWORD)result != 1)
  {
    v44 = sub_2318D2904();
    v42(v39, v37);
    v42(v41, v37);
    v45 = v118;
    if ((v44 & 1) != 0)
    {

      v45 = 0;
      v118 = 0;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_231853FF4()
{
  id *v0;
  id *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[8];
  _BYTE v9[8];
  _BYTE v10[15];
  char v11;
  _BYTE v12[23];
  char v13;
  _BYTE v14[16];
  _BYTE v15[16];
  _BYTE v16[16];
  _BYTE v17[8];
  uint64_t v18;
  _BYTE v19[8];
  _BYTE v20[8];
  _BYTE v21[8];
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_2318D60C0();
  sub_2318D56A0();
  v2 = objc_msgSend(*v0, sel_semanticIdentifier);
  v3 = objc_msgSend(v2, sel_stringValue);

  sub_2318D55BC();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
  v23 = sub_2318D480C();
  v24 = v4;
  v5 = MEMORY[0x24BEE0D00];
  sub_2318D5604();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_231854B28((uint64_t)(v1 + 1), (uint64_t)v17, (uint64_t)&unk_254189E38, (uint64_t)&qword_254189E20, v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231854AC8);
  sub_231854B28((uint64_t)v17, (uint64_t)&v18, (uint64_t)&unk_254189E38, (uint64_t)&qword_254189E20, v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231854AC8);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_23182FC7C((uint64_t)(v1 + 2), (uint64_t)v16, &qword_254189D10, v5);
  sub_23182FC7C((uint64_t)v16, (uint64_t)v19, &qword_254189D10, v5);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_23182FC7C((uint64_t)(v1 + 4), (uint64_t)v15, &qword_254189D10, v5);
  sub_23182FC7C((uint64_t)v15, (uint64_t)v20, &qword_254189D10, v5);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_23182FC7C((uint64_t)(v1 + 6), (uint64_t)v14, &qword_254189D10, v5);
  sub_23182FC7C((uint64_t)v14, (uint64_t)v21, &qword_254189D10, v5);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  v6 = MEMORY[0x24BEE1328];
  sub_23182FC7C((uint64_t)(v1 + 8), (uint64_t)&v13, &qword_25418B518, MEMORY[0x24BEE1328]);
  sub_23182FC7C((uint64_t)&v13, (uint64_t)&v22, &qword_25418B518, v6);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_23182FC7C((uint64_t)(v1 + 9), (uint64_t)v12, &qword_254189D10, v5);
  sub_23182FC7C((uint64_t)v12, (uint64_t)&v23, &qword_254189D10, v5);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_23182FC7C((uint64_t)(v1 + 11), (uint64_t)&v11, &qword_25418B518, v6);
  sub_23182FC7C((uint64_t)&v11, (uint64_t)&v25, &qword_25418B518, v6);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_231854B28((uint64_t)(v1 + 12), (uint64_t)v10, (uint64_t)&qword_25418B430, (uint64_t)&qword_25418B428, 0x24BE45C88, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  sub_231854B28((uint64_t)v10, (uint64_t)&v26, (uint64_t)&qword_25418B430, (uint64_t)&qword_25418B428, 0x24BE45C88, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_231854B28((uint64_t)(v1 + 13), (uint64_t)v9, (uint64_t)&qword_254189ED8, (uint64_t)&qword_25418B438, 0x24BDD3D30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  sub_231854B28((uint64_t)v9, (uint64_t)&v27, (uint64_t)&qword_254189ED8, (uint64_t)&qword_25418B438, 0x24BDD3D30, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_23185489C);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_231854B28((uint64_t)(v1 + 14), (uint64_t)v8, (uint64_t)&unk_254189DD8, (uint64_t)&qword_254189DC8, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231854AC8);
  sub_231854B28((uint64_t)v8, (uint64_t)&v28, (uint64_t)&unk_254189DD8, (uint64_t)&qword_254189DC8, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231854AC8);
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D6288();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  sub_2318D56A0();
  sub_2318D56A0();
  return 0;
}

uint64_t sub_2318547F0()
{
  return sub_231853FF4();
}

void sub_231854848()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418B300)
  {
    sub_2318D294C();
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418B300);
  }
}

void sub_23185489C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2317CCC9C(255, a3);
    v4 = sub_2318D5F64();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2318548F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = *(void **)a1;
  v4 = *(void **)(a1 + 96);
  v3 = *(void **)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 144);
  swift_bridgeObjectRetain();
  v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = v3;
  sub_2318549B4(v10, v5);
  sub_2318549B4(v12, v11);
  return a1;
}

uint64_t sub_2318549B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23184B090(a1, a2);
  return a1;
}

uint64_t sub_2318549C8(uint64_t a1)
{
  uint64_t v2;

  sub_231854848();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231854A04(uint64_t a1)
{
  void *v2;
  void *v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(void **)(a1 + 96);
  v2 = *(void **)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 144);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_2317E337C(v6, v4);
  sub_2317E337C(v8, v7);
  return a1;
}

void sub_231854AC8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2317CDA94(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v5 = sub_2318D5F64();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_231854B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for InteractiveTimelineConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for MedicationShareableData(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 128);
  if (v3 >> 60 != 15)
    result = sub_2317E3390(*(_QWORD *)(a1 + 120), v3);
  v4 = *(_QWORD *)(a1 + 144);
  if (v4 >> 60 != 15)
    return sub_2317E3390(*(_QWORD *)(a1 + 136), v4);
  return result;
}

uint64_t initializeWithCopy for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t *v21;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(void **)(a2 + 96);
  v10 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = (uint64_t *)(a2 + 120);
  v12 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v11;
  v14 = v10;
  swift_bridgeObjectRetain();
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v21;
  }
  else
  {
    v15 = *v21;
    sub_23184B090(*v21, v20);
    *(_QWORD *)(a1 + 120) = v15;
    *(_QWORD *)(a1 + 128) = v20;
  }
  v16 = (uint64_t *)(a2 + 136);
  v17 = *(_QWORD *)(a2 + 144);
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v16;
  }
  else
  {
    v18 = *v16;
    sub_23184B090(*v16, *(_QWORD *)(a2 + 144));
    *(_QWORD *)(a1 + 136) = v18;
    *(_QWORD *)(a1 + 144) = v17;
  }
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t assignWithCopy for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(void **)(a1 + 96);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 104);
  v11 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v11;
  v12 = v11;

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      v15 = *v13;
      sub_23184B090(*v13, *(_QWORD *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v15;
      *(_QWORD *)(a1 + 128) = v14;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
    sub_231854FEC(a1 + 120);
LABEL_6:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v13;
    goto LABEL_8;
  }
  v16 = *v13;
  sub_23184B090(*v13, *(_QWORD *)(a2 + 128));
  v17 = *(_QWORD *)(a1 + 120);
  v18 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = v14;
  sub_2317E3390(v17, v18);
LABEL_8:
  v19 = (uint64_t *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144) >> 60 != 15)
  {
    if (v20 >> 60 != 15)
    {
      v22 = *v19;
      sub_23184B090(*v19, *(_QWORD *)(a2 + 144));
      v23 = *(_QWORD *)(a1 + 136);
      v24 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 136) = v22;
      *(_QWORD *)(a1 + 144) = v20;
      sub_2317E3390(v23, v24);
      goto LABEL_15;
    }
    sub_231854FEC(a1 + 136);
    goto LABEL_13;
  }
  if (v20 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v19;
    goto LABEL_15;
  }
  v21 = *v19;
  sub_23184B090(*v19, *(_QWORD *)(a2 + 144));
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v20;
LABEL_15:
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t sub_231854FEC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 initializeWithTake for MedicationShareableData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(__int128 *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v10 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v11 = (_OWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a1 + 128);
  if (v12 >> 60 == 15)
    goto LABEL_4;
  v13 = *(_QWORD *)(a2 + 128);
  if (v13 >> 60 == 15)
  {
    sub_231854FEC(a1 + 120);
LABEL_4:
    *(_OWORD *)(a1 + 120) = *v11;
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)v11;
  *(_QWORD *)(a1 + 128) = v13;
  sub_2317E3390(v14, v12);
LABEL_6:
  v15 = (_QWORD *)(a2 + 136);
  v16 = *(_QWORD *)(a1 + 144);
  if (v16 >> 60 != 15)
  {
    v17 = *(_QWORD *)(a2 + 144);
    if (v17 >> 60 != 15)
    {
      v18 = *(_QWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = *v15;
      *(_QWORD *)(a1 + 144) = v17;
      sub_2317E3390(v18, v16);
      goto LABEL_11;
    }
    sub_231854FEC(a1 + 136);
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)v15;
LABEL_11:
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationShareableData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 169))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationShareableData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 169) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationShareableData()
{
  return &type metadata for MedicationShareableData;
}

uint64_t storeEnumTagSinglePayload for MedicationShareableData.Audience(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2318552E8 + 4 * byte_2318DB3A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23185531C + 4 * asc_2318DB3A0[v4]))();
}

uint64_t sub_23185531C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231855324(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23185532CLL);
  return result;
}

uint64_t sub_231855338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231855340);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_231855344(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23185534C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationShareableData.Audience()
{
  return &type metadata for MedicationShareableData.Audience;
}

unint64_t sub_23185536C()
{
  unint64_t result;

  result = qword_255F270B0;
  if (!qword_255F270B0)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB42C, &type metadata for MedicationShareableData.Audience);
    atomic_store(result, (unint64_t *)&qword_255F270B0);
  }
  return result;
}

unint64_t sub_2318553B0()
{
  unint64_t result;

  result = qword_254188F98;
  if (!qword_254188F98)
  {
    result = MEMORY[0x2348E7734](&unk_2318DB454, &type metadata for MedicationShareableData.Audience);
    atomic_store(result, (unint64_t *)&qword_254188F98);
  }
  return result;
}

uint64_t sub_2318553F4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  _BYTE v9[40];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_23186E3A0(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      sub_2317E06B8(v4, (uint64_t)v8);
      sub_2317D4B4C(0, (unint64_t *)&qword_254188180);
      sub_2317F110C(0);
      swift_dynamicCast();
      v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23186E3A0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23186E3A0(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2317D40A8((uint64_t)v9, v2 + 40 * v6 + 32, (uint64_t (*)(_QWORD))sub_2317F110C);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_231855548(unint64_t a1)
{
  return sub_231855570(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE46368], sub_23185B970);
}

uint64_t sub_23185555C(unint64_t a1)
{
  return sub_231855570(a1, (uint64_t (*)(_QWORD))type metadata accessor for MedicationMonthHighlightItem, sub_23185B750);
}

uint64_t sub_231855570(unint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v20 = MEMORY[0x24BEE4AF8];
  result = sub_23186E338(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v7 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      do
      {
        v10 = MEMORY[0x2348E6E94](v9, a1);
        v20 = v7;
        v12 = *(_QWORD *)(v7 + 16);
        v11 = *(_QWORD *)(v7 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_23186E338(v11 > 1, v12 + 1, 1);
          v7 = v20;
        }
        ++v9;
        v18 = a2(0);
        v19 = a3();
        *(_QWORD *)&v17 = v10;
        *(_QWORD *)(v7 + 16) = v12 + 1;
        sub_2317D4AF0(&v17, v7 + 40 * v12 + 32);
      }
      while (v6 != v9);
    }
    else
    {
      v13 = (uint64_t *)(a1 + 32);
      do
      {
        v14 = *v13;
        v20 = v7;
        v15 = *(_QWORD *)(v7 + 16);
        v16 = *(_QWORD *)(v7 + 24);
        swift_retain();
        if (v15 >= v16 >> 1)
        {
          sub_23186E338(v16 > 1, v15 + 1, 1);
          v7 = v20;
        }
        v18 = a2(0);
        v19 = a3();
        *(_QWORD *)&v17 = v14;
        *(_QWORD *)(v7 + 16) = v15 + 1;
        sub_2317D4AF0(&v17, v7 + 40 * v15 + 32);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_231855740(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23186E4B0(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23186E4B0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23186E4B0(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2317E6D40(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t MedicationListCompactDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:incompatibilityCache:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  swift_allocObject();
  v10 = sub_23185B0EC(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v10;
}

uint64_t sub_2318558E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  swift_allocObject();
  v10 = sub_23185B0EC(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v10;
}

uint64_t sub_23185596C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_2317EBD90(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231855AE0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2317EC104(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_2317F110C(0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231855C50(uint64_t a1)
{
  return sub_231855F7C(a1, (uint64_t (*)(void))sub_2317EC0E8, (unint64_t *)&qword_254188180);
}

uint64_t sub_231855C6C(uint64_t a1)
{
  return sub_231855DF8(a1, (uint64_t (*)(void))sub_2317EC340, (uint64_t (*)(_QWORD))MEMORY[0x24BE47D40]);
}

uint64_t sub_231855C80(uint64_t a1)
{
  return sub_231855DF8(a1, (uint64_t (*)(void))sub_2317ECB90, (uint64_t (*)(_QWORD))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_231855C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2317EBDA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231855DE4(uint64_t a1)
{
  return sub_231855DF8(a1, (uint64_t (*)(void))sub_2317ECBA4, (uint64_t (*)(_QWORD))MEMORY[0x24BE45F88]);
}

uint64_t sub_231855DF8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231855F70(unint64_t a1)
{
  return sub_23185626C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23185AA38);
}

uint64_t sub_231855F7C(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4)
    goto LABEL_21;
  sub_2317D4B4C(0, a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v13 = *(_QWORD *)(v5 + 16);
  v14 = __OFADD__(v13, v4);
  v15 = v13 + v4;
  if (!v14)
  {
    *(_QWORD *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231856104(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2317ECD08(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[22 * v9 + 4];
  if (a1 + 32 < v10 + 176 * v8 && v10 < a1 + 32 + 176 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_231856260(unint64_t a1)
{
  return sub_23185626C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23185AC64);
}

uint64_t sub_23185626C(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x2348E6EA0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2318D57A8();
  }
  __break(1u);
  return result;
}

uint64_t _s26MedicationsHealthAppPlugin31MedicationListCompactDataSourceC13makePublisher7Combine03AnyK0VySay0bA2UI0eF4ItemCG_AKts5NeverOGyF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = qword_255F270E8;
  if (*(_QWORD *)(v0 + qword_255F270E8))
  {
    v2 = *(_QWORD *)(v0 + qword_255F270E8);
  }
  else
  {
    v2 = sub_23185648C(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_23185648C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23185B98C();
  v3 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  v30 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23185BAC8();
  v33 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23185BC28();
  v34 = v9;
  v36 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2318D47C4();
  v12 = *(void **)(a1 + qword_255F270B8);
  v13 = (void *)sub_2318D3138();
  v32 = v11;
  v38 = v11;
  swift_retain();
  sub_2318D3144();
  v14 = sub_2318D4914();
  swift_release();
  v37 = v14;
  sub_23185BA60();
  v15 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
  sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
  sub_2317CC4AC(&qword_25418AF20, (uint64_t (*)(uint64_t))sub_23185BA60, MEMORY[0x24BDB9D10]);
  sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v15);
  sub_2318D4C74();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = v13;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_23185BD60;
  *(_QWORD *)(v17 + 24) = v16;
  v18 = v12;
  v28 = v13;
  sub_2318D4D88();
  sub_23180DD24(0, &qword_25418AEF8, (void (*)(uint64_t))sub_23185BB9C);
  sub_2317CC4AC(&qword_25418AE30, (uint64_t (*)(uint64_t))sub_23185B98C, MEMORY[0x24BDB9450]);
  sub_23180DD80(&qword_25418AEF0, &qword_25418AEF8, (void (*)(uint64_t))sub_23185BB9C);
  v19 = v29;
  sub_2318D5010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v19);
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_23185BDB4;
  *(_QWORD *)(v21 + 24) = v20;
  sub_23185BCBC();
  sub_2317CC4AC(&qword_25418AEC0, (uint64_t (*)(uint64_t))sub_23185BAC8, MEMORY[0x24BDB98F0]);
  v22 = v31;
  v23 = v33;
  sub_2318D4F44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v23);
  sub_2317CC4AC(&qword_25418AEA0, (uint64_t (*)(uint64_t))sub_23185BC28, MEMORY[0x24BDB96C0]);
  v24 = v34;
  v25 = sub_2318D4F08();
  swift_release();

  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v24);
  return v25;
}

unint64_t sub_231856870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v46 = a3;
  v47 = a2;
  sub_23185BE04();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_2318D4974();
  v49 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v50 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, &qword_25418AF38, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v42 - v12;
  sub_23185BF5C();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v43 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  result = sub_2318D4968();
  v16 = result;
  if (result >> 62)
  {
    result = sub_2318D6174();
    v17 = result;
  }
  else
  {
    v17 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v56 = v6;
  v57 = v5;
  v55 = v8;
  if (!v17)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v30 = sub_2318D5CB8();
    swift_bridgeObjectRelease();
    v59 = v30;
    v58 = MEMORY[0x24BEE4AF8];
    sub_23185BFD4();
    v31 = MEMORY[0x24BDB9AF8];
    sub_2317CC4AC(&qword_25418AF00, (uint64_t (*)(uint64_t))sub_23185BFD4, MEMORY[0x24BDB9AF8]);
    v32 = v43;
    sub_2318D4F20();
    swift_release();
    sub_2317CC4AC(&qword_25418AE70, (uint64_t (*)(uint64_t))sub_23185BF5C, MEMORY[0x24BDB95A8]);
    v33 = v45;
    v34 = sub_2318D4F08();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v50, v54, v53);
    v35 = v48;
    sub_2318D4E0C();
    sub_23185C070();
    v36 = v52;
    v37 = sub_2318D4F08();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v36);
    v58 = v34;
    v59 = v37;
    v38 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(0, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_23185BED8();
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v38);
    sub_2317CC4AC(&qword_25418AF10, (uint64_t (*)(uint64_t))sub_23185BED8, v31);
    v39 = v55;
    sub_2318D4F38();
    sub_2317CC4AC(&qword_25418AE20, (uint64_t (*)(uint64_t))sub_23185BE04, MEMORY[0x24BDB9450]);
    v40 = v57;
    v41 = sub_2318D4F08();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v40);
    return v41;
  }
  if (v17 >= 1)
  {
    v18 = 0;
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x2348E6E94](v18, v16);
      else
        v20 = *(id *)(v16 + 8 * v18 + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, sel_semanticIdentifier);
      v23 = objc_msgSend(v22, sel_stringValue);

      v24 = sub_2318D55BC();
      v26 = v25;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_2317EBDA4(0, v19[2] + 1, 1, v19);
      v28 = v19[2];
      v27 = v19[3];
      if (v28 >= v27 >> 1)
        v19 = sub_2317EBDA4((_QWORD *)(v27 > 1), v28 + 1, 1, v19);
      ++v18;
      v19[2] = v28 + 1;
      v29 = &v19[2 * v28];
      v29[4] = v24;
      v29[5] = v26;

    }
    while (v17 != v18);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_231856D18(_QWORD *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return MEMORY[0x24BEE4AF8];
  if (a2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    v4 = sub_2318D6174();
    v33 = (uint64_t)a1;
    if (v4)
      goto LABEL_4;
    goto LABEL_29;
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v33 = (uint64_t)a1;
  if (!v4)
  {
LABEL_29:
    a1 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_30:
    swift_bridgeObjectRelease();
    sub_231857028((uint64_t)a1);
    v31 = v30;
    swift_bridgeObjectRelease();
    swift_retain();
    v29 = sub_231857330(v33, v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v29;
  }
LABEL_4:
  v35 = a2 & 0xC000000000000001;
  a1 = (_QWORD *)MEMORY[0x24BEE4B00];
  v5 = 4;
  v34 = a2;
  while (1)
  {
    if (v35)
      v6 = (id)MEMORY[0x2348E6E94](v5 - 4, a2);
    else
      v6 = *(id *)(a2 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9 = objc_msgSend(v6, sel_medicationIdentifier);
    if (v9)
      break;

LABEL_6:
    ++v5;
    if (v8 == v4)
      goto LABEL_30;
  }
  v10 = v9;
  a2 = v4;
  v11 = sub_2318D55BC();
  v13 = v12;

  v14 = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = sub_2317FC0F0(v11, v13);
  v18 = a1[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
    goto LABEL_26;
  v21 = v16;
  if (a1[3] >= v20)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v16 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      sub_2317FF884();
      if ((v21 & 1) != 0)
        goto LABEL_19;
    }
LABEL_21:
    a1[(v17 >> 6) + 8] |= 1 << v17;
    v25 = (uint64_t *)(a1[6] + 16 * v17);
    *v25 = v11;
    v25[1] = v13;
    *(_QWORD *)(a1[7] + 8 * v17) = v14;
    v26 = a1[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_27;
    a1[2] = v28;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  sub_2317FDBB4(v20, isUniquelyReferenced_nonNull_native);
  v22 = sub_2317FC0F0(v11, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    if ((v21 & 1) == 0)
      goto LABEL_21;
LABEL_19:
    v24 = a1[7];

    *(_QWORD *)(v24 + 8 * v17) = v14;
LABEL_23:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a2;
    a2 = v34;
    goto LABEL_6;
  }
  result = sub_2318D62F4();
  __break(1u);
  return result;
}

void sub_231857028(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_2318016A8();
    v2 = (_QWORD *)sub_2318D61A4();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v28)
    goto LABEL_32;
  v13 = *(_QWORD *)(v29 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v28)
      goto LABEL_32;
    v13 = *(_QWORD *)(v29 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v28)
        goto LABEL_32;
      v13 = *(_QWORD *)(v29 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v28)
          goto LABEL_32;
        v13 = *(_QWORD *)(v29 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v28)
          {
            v13 = *(_QWORD *)(v29 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v28)
                break;
              v13 = *(_QWORD *)(v29 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_231808134();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    sub_2317CCC9C(0, &qword_25418B428);
    sub_2317DC15C(0, (unint64_t *)&qword_25418B430, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_bridgeObjectRetain();
    v20 = v19;
    swift_dynamicCast();
    v21 = sub_2317FC0F0(v18, v17);
    v22 = v21;
    if ((v23 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v21);
      swift_bridgeObjectRelease();
      *v7 = v18;
      v7[1] = v17;
      v8 = v2[7];
      v9 = 8 * v22;

      *(_QWORD *)(v8 + v9) = v30;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v21;
    v24 = (uint64_t *)(v2[6] + 16 * v21);
    *v24 = v18;
    v24[1] = v17;
    *(_QWORD *)(v2[7] + 8 * v21) = v30;
    v25 = v2[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_34;
    v2[2] = v27;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_231857330(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v66 = a2;
  v3 = sub_2318D4194();
  v64 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v63 = (char *)&v58 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v58 - v8;
  v68 = MEMORY[0x24BEE4AF8];
  v58 = a1;
  result = sub_2318D4968();
  v11 = result;
  if (result >> 62)
  {
    result = sub_2318D6174();
    v12 = result;
    v65 = v3;
    if (!result)
      goto LABEL_19;
  }
  else
  {
    v12 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v65 = v3;
    if (!v12)
      goto LABEL_19;
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_41;
  }
  v13 = 0;
  v62 = v11 & 0xC000000000000001;
  v59 = v12;
  v60 = v11;
  v14 = v64;
  do
  {
    if (v62)
      v15 = (id)MEMORY[0x2348E6E94](v13, v11);
    else
      v15 = *(id *)(v11 + 8 * v13 + 32);
    v16 = v15;
    objc_opt_self();
    v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      v18 = (void *)v17;
      v19 = v16;
      v20 = objc_msgSend(v18, sel_semanticIdentifier);
      v21 = objc_msgSend(v20, sel_stringValue);

      v22 = sub_2318D55BC();
      v24 = v23;

      v25 = v66;
      if (*(_QWORD *)(v66 + 16) && (v26 = sub_2317FC0F0(v22, v24), (v27 & 1) != 0))
      {
        v28 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v26);
        v29 = v28;
      }
      else
      {
        v28 = 0;
      }
      swift_bridgeObjectRelease();
      v30 = v28;
      v31 = v19;
      swift_retain();
      sub_2318D4188();
      v32 = v65;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v9, v65);
      swift_retain();
      sub_2318D3138();
      sub_2318D4098();
      swift_allocObject();
      sub_2318D408C();
      v33 = swift_retain();
      MEMORY[0x2348E6528](v33);
      if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2318D57B4();
      sub_2318D57D8();
      sub_2318D57A8();

      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v32);
      v12 = v59;
      v11 = v60;
    }
    else
    {

    }
    ++v13;
  }
  while (v12 != v13);
LABEL_19:
  swift_bridgeObjectRelease();
  v67 = MEMORY[0x24BEE4AF8];
  result = sub_2318D4920();
  v34 = result;
  if (!(result >> 62))
  {
    v35 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v35)
      goto LABEL_21;
LABEL_39:
    swift_bridgeObjectRelease();
    return v68;
  }
  result = sub_2318D6174();
  v35 = result;
  if (!result)
    goto LABEL_39;
LABEL_21:
  if (v35 >= 1)
  {
    v36 = 0;
    v62 = v34 & 0xC000000000000001;
    v59 = v35;
    v60 = v34;
    do
    {
      if (v62)
        v37 = (id)MEMORY[0x2348E6E94](v36, v34);
      else
        v37 = *(id *)(v34 + 8 * v36 + 32);
      v38 = v37;
      objc_opt_self();
      v39 = swift_dynamicCastObjCClass();
      if (v39)
      {
        v40 = (void *)v39;
        v41 = v38;
        v42 = objc_msgSend(v40, sel_semanticIdentifier);
        v43 = objc_msgSend(v42, sel_stringValue);

        v44 = sub_2318D55BC();
        v46 = v45;

        v47 = v66;
        if (*(_QWORD *)(v66 + 16))
        {
          v48 = sub_2317FC0F0(v44, v46);
          v49 = v64;
          v50 = v61;
          if ((v51 & 1) != 0)
          {
            v52 = *(void **)(*(_QWORD *)(v47 + 56) + 8 * v48);
            v53 = v52;
          }
          else
          {
            v52 = 0;
          }
        }
        else
        {
          v52 = 0;
          v49 = v64;
          v50 = v61;
        }
        swift_bridgeObjectRelease();
        v54 = v52;
        swift_retain();
        v55 = v41;
        sub_2318D4188();
        v56 = v65;
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v63, v50, v65);
        swift_retain();
        sub_2318D3138();
        sub_2318D4098();
        swift_allocObject();
        sub_2318D408C();
        v57 = swift_retain();
        MEMORY[0x2348E6528](v57);
        if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2318D57B4();
        sub_2318D57D8();
        sub_2318D57A8();

        swift_release();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v56);
        v35 = v59;
        v34 = v60;
      }
      else
      {

      }
      ++v36;
    }
    while (v35 != v36);
    goto LABEL_39;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t MedicationListCompactDataSource.init(listManager:healthStore:viewController:analyticsManager:incompatibilityCache:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = sub_23185B0EC(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_231857948()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t MedicationListCompactDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  objc_msgSend(*(id *)(v0 + qword_255F270B8), sel_unregisterObserver_, *(_QWORD *)(v0 + qword_255F270C0));
  v1 = sub_2318D3180();

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return v1;
}

uint64_t MedicationListCompactDataSource.__deallocating_deinit()
{
  MedicationListCompactDataSource.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall MedicationListCompactDataSource.registerCells(for:)(UICollectionView *a1)
{
  void (*v2)(UICollectionView *);

  sub_23185B33C();
  v2 = (void (*)(UICollectionView *))sub_2318D3174();
  v2(a1);
  sub_2318D417C();
  sub_2317CC4AC(&qword_25418AA90, (uint64_t (*)(uint64_t))MEMORY[0x24BE46448], MEMORY[0x24BE46440]);
  sub_2318D5AC0();
  sub_2318D3EA0();
  sub_2318D5AC0();
  sub_2318D35A0();
  sub_2318D5AC0();
  sub_2318D402C();
  sub_2317CC4AC(&qword_25418AA78, (uint64_t (*)(uint64_t))MEMORY[0x24BE462F8], MEMORY[0x24BE462F0]);
  sub_2318D5AC0();
  sub_2318D3D38();
  sub_2318D5ACC();
}

void MedicationListCompactDataSource.layoutType(for:with:)(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, void *);
  _BYTE v20[32];

  v6 = sub_2318D38AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 == 1)
  {
    sub_2318D3864();
    sub_2318D3888();
    v10 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_2318D3870();
    v11 = (void (*)(_BYTE *, _QWORD))sub_2318D3894();
    *(_QWORD *)(v12 + 16) = 0x4034000000000000;
    v11(v20, 0);
    sub_23185B3B4();
    v14 = *(int *)(v13 + 48);
    (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 16))(a3, v9, v6);
    v15 = sub_2318D315C();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)&a3[v14] = v15;
    v16 = *MEMORY[0x24BE43688];
    v17 = sub_2318D3840();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(a3, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else if (a1)
  {
    sub_23185B33C();
    v19 = (void (*)(uint64_t, void *))sub_2318D3174();
    v19(a1, a2);
  }
  else
  {
    sub_231857D6C(0, a2, a3);
  }
}

void sub_231857D6C(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD);
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  _QWORD *v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  char v51[32];

  v42[1] = a1;
  v50 = a3;
  v47 = sub_2318D38AC();
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2318D3A38();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D3528();
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (void (*)(char *, uint64_t, uint64_t))((char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_2318D3840();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a2, sel_traitCollection);
  v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  v48 = v14;
  if (v16 != (id)2)
    goto LABEL_8;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4198]), sel_init);
  v18 = objc_msgSend(v17, sel_features);

  if (!v18)
    goto LABEL_12;
  v19 = objc_msgSend(v18, sel_stanley);

  if (!v19)
  {
LABEL_8:
    sub_2318D3858();
    sub_2318D3888();
    v26 = (void (*)(char *, _QWORD))sub_2318D3894();
    *(_QWORD *)(v27 + 16) = 0x4024000000000000;
    v26(v51, 0);
    sub_2318D387C();
    v28 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_2318D3870();
    sub_23185B3B4();
    v30 = v29;
    v31 = *(int *)(v29 + 48);
    v32 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v33 = v47;
    v32(v14, v5, v47);
    *(_QWORD *)&v14[v31] = sub_2318D315C();
    v34 = *MEMORY[0x24BE43688];
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
    v46(v14, v34, v11);
    v35 = v50;
    v36 = *(int *)(v30 + 48);
    v32(v50, v5, v33);
    v37 = sub_2318D315C();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v33);
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v48, v11);
    *(_QWORD *)&v35[v36] = v37;
    v46(v35, v34, v11);
    goto LABEL_9;
  }
  v20 = v12;
  v21 = objc_msgSend(a2, sel_traitCollection);
  v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);

  sub_2318D5C64();
  v23 = (char *)v46;
  sub_23185A334();
  swift_unknownObjectRetain();
  sub_2318D3144();
  v24 = sub_2318D48F0();
  swift_release();
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!__OFADD__(v25, 1))
  {
    sub_2318D3A2C();
    v38 = (void *)sub_2318D3510();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
    v39 = objc_msgSend((id)objc_opt_self(), sel_estimatedDimension_, 100.0);
    v40 = (void *)sub_2318D5CAC();

    objc_msgSend(v40, sel__setPreBoundaryPadding_, 30.0);
    objc_msgSend(v40, sel_contentInsets);
    objc_msgSend(v40, sel_setContentInsets_);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v9);
    v41 = v48;
    *v48 = v40;
    v12 = v20;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v41, *MEMORY[0x24BE43690], v11);
    (*(void (**)(char *, _QWORD *, uint64_t))(v20 + 32))(v50, v41, v11);
LABEL_9:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v50, 0, 1, v11);
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t MedicationListCompactDataSource.sectionsForItems(listItems:nonListItems:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _BYTE v28[40];
  __int128 v29;
  uint64_t v30;
  __int128 v31[2];
  _QWORD v32[5];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v2 = sub_2318D4080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - v8;
  sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v26 = *(_QWORD *)(*(_QWORD *)(sub_2318D3774() - 8) + 72);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2318D8510;
  v11 = sub_2318D29AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_2318D4074();
  v12 = sub_2318D444C();
  v24 = v13;
  v25 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2317DD39C((uint64_t)v9, (unint64_t *)&qword_25418B2C0, v6);
  v23 = xmmword_2318D8680;
  v33 = xmmword_2318D8680;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2318D6174();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14)
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  else
  {
    swift_allocObject();
    swift_weakInit();
    *((_QWORD *)&v35 + 1) = sub_2318D4044();
    v36 = sub_2317CC4AC(&qword_255F270F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE46310], MEMORY[0x24BE46300]);
    sub_2317DBF6C((uint64_t *)&v34);
    sub_2318D4038();
  }
  sub_2317FAFA8((uint64_t)&v34, (uint64_t)v32);
  sub_2317D40A8((uint64_t)v32, (uint64_t)&v29, (uint64_t (*)(_QWORD))sub_2317FAF08);
  if (v30)
  {
    sub_2317D4AF0(&v29, (uint64_t)v31);
    sub_2317D4AF0(v31, (uint64_t)&v29);
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_2317EC6A4(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_2317EC6A4((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    sub_2317D4AF0(&v29, (uint64_t)&v15[5 * v17 + 4]);
  }
  else
  {
    sub_2317CF774((uint64_t)&v29, (uint64_t (*)(_QWORD))sub_2317FAF08);
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_2317FAF08();
  swift_arrayDestroy();
  v18 = sub_231855570(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE46368], sub_23185B970);
  v32[0] = v15;
  sub_231855F7C(v18, (uint64_t (*)(void))sub_2317EC6A4, (unint64_t *)&qword_25418AA40);
  sub_2318D3768();
  v27 = v23;
  sub_231858E04(v14 == 0, (void *)1, (uint64_t)v28);
  sub_2317FAFA8((uint64_t)v28, (uint64_t)v32);
  sub_2317D40A8((uint64_t)v32, (uint64_t)&v29, (uint64_t (*)(_QWORD))sub_2317FAF08);
  if (v30)
  {
    sub_2317D4AF0(&v29, (uint64_t)v31);
    sub_2317D4AF0(v31, (uint64_t)&v29);
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_2317EC6A4(0, v19[2] + 1, 1, v19);
    v21 = v19[2];
    v20 = v19[3];
    if (v21 >= v20 >> 1)
      v19 = sub_2317EC6A4((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
    v19[2] = v21 + 1;
    sub_2317D4AF0(&v29, (uint64_t)&v19[5 * v21 + 4]);
  }
  else
  {
    sub_2317CF774((uint64_t)&v29, (uint64_t (*)(_QWORD))sub_2317FAF08);
  }
  swift_arrayDestroy();
  sub_2318D3768();
  return v10;
}

Swift::String_optional __swiftcall MedicationListCompactDataSource.buttonText(for:)(Swift::Int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::String_optional result;
  uint64_t v17;

  v2 = sub_2318D4080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - v7;
  v9 = 0;
  v10 = 0;
  if (!a1)
  {
    v11 = sub_2318D29AC();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    sub_2318D4074();
    v9 = sub_2318D444C();
    v10 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_2317DD39C((uint64_t)v8, (unint64_t *)&qword_25418B2C0, v12);
  }
  v14 = v9;
  v15 = v10;
  result.value._object = v15;
  result.value._countAndFlagsBits = v14;
  return result;
}

uint64_t (*MedicationListCompactDataSource.buttonTappedCallback(for:)(uint64_t a1))()
{
  if (a1)
    return nullsub_1;
  swift_allocObject();
  swift_weakInit();
  return sub_23185B46C;
}

uint64_t sub_2318589A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v0 = sub_2318D5388();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2318D53AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
    v15 = sub_2318D5B80();
    aBlock[4] = sub_23185B818;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2317D1468;
    aBlock[3] = &unk_25007F1D0;
    v10 = _Block_copy(aBlock);
    v16 = v5;
    v11 = v10;
    swift_retain();
    swift_release();
    sub_2318D53A0();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_2317CC4AC((unint64_t *)&unk_25418B3B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_2317D4194(0, (unint64_t *)&unk_25418B3D0, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v14 = v4;
    sub_23185B838((unint64_t *)&qword_25418B3E0, (unint64_t *)&unk_25418B3D0, v12, MEMORY[0x24BEE12C8]);
    sub_2318D6000();
    v13 = (void *)v15;
    MEMORY[0x2348E6948](0, v7, v3, v11);
    _Block_release(v11);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v14);
  }
  return result;
}

void sub_231858BEC()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;

  v0 = (void *)sub_2318D3138();
  v1 = sub_2318D3144();
  v2 = objc_allocWithZone((Class)type metadata accessor for MedicationsListEditViewController());
  v6 = sub_23189889C(v0, v1);

  swift_release();
  v3 = (void *)sub_2318D315C();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_viewController);

    if (v5)
    {
      sub_2318D5B14();

    }
  }

}

double MedicationListCompactDataSource.makeAddMedicationHeroTile(isEmpty:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  double result;

  if ((a1 & 1) != 0)
  {
    swift_allocObject();
    swift_weakInit();
    v3 = sub_2318D4044();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE46310];
    *(_QWORD *)(a2 + 24) = v3;
    *(_QWORD *)(a2 + 32) = sub_2317CC4AC(&qword_255F270F0, v4, MEMORY[0x24BE46300]);
    sub_2317DBF6C((uint64_t *)a2);
    sub_2318D4038();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_231858D58()
{
  uint64_t result;
  void *v1;
  void *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = (void *)MEMORY[0x2348E78A8](result + qword_255F270D8);
    if (v1)
    {
      v2 = v1;
      sub_231859AB0(v1);
      swift_retain();
      sub_2318D4890();
      swift_release();

    }
    return swift_release();
  }
  return result;
}

uint64_t sub_231858E04@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  void (*v51)(uint64_t *, _QWORD);
  void *v52;
  id v53;
  void (*v54)(uint64_t *, _QWORD);
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  unsigned int v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unsigned int v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  uint64_t v72;
  char *v73;
  id v74;
  uint64_t v75;
  void (*v76)(uint64_t *, _QWORD);
  uint64_t v77;
  uint64_t *v78;
  void (*v79)(uint64_t *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117[5];

  v103 = a2;
  LODWORD(v114) = a1;
  v113 = a3;
  v111 = *v3;
  v4 = sub_2318D3DBC();
  v106 = *(_QWORD *)(v4 - 8);
  v107 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v108 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_2318D3828();
  v105 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v112 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_2318D4B24();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v102 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2318D43F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D4080();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v89 - v18;
  sub_2317D4194(0, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], v16);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v89 - v24;
  v25 = sub_2318D4BD8();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v26);
  v32 = (char *)&v89 - v31;
  if ((v114 & 1) != 0)
  {
    v33 = (_OWORD *)v113;
    *(_QWORD *)(v113 + 32) = 0;
    *v33 = 0u;
    v33[1] = 0u;
  }
  else
  {
    v93 = v19;
    v94 = v15;
    v89 = v11;
    v95 = v13;
    v90 = v9;
    v97 = v12;
    v91 = v8;
    v99 = v23;
    v34 = result;
    v35 = v30;
    v36 = sub_2318D4B00();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = (uint64_t)v104;
    v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v96(v104, 1, 1, v36);
    sub_2318D4BCC();
    v114 = v35;
    v39 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v98 = v34;
    v39(v32, v28, v34);
    if (v103 == (id)2)
    {
      v103 = (id)sub_2317CCC9C(0, &qword_255F271D8);
      v40 = sub_2318D29AC();
      v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
      v42 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v93, 1, 1, v40);
      v43 = v94;
      sub_2318D4074();
      v44 = sub_2318D444C();
      v46 = v45;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v43, v97);
      sub_2317DD39C(v42, (unint64_t *)&qword_25418B2C0, v41);
      v47 = v90;
      v48 = v89;
      v49 = v91;
      (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v89, *MEMORY[0x24BE46690], v91);
      v50 = (void *)sub_2318D43EC();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
      MEMORY[0x2348E6984](v44, v46, 0, v50, 0, 0);

      swift_bridgeObjectRelease();
      sub_2318D4B48();
      (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v102, *MEMORY[0x24BEBC488], v101);
      v51 = (void (*)(uint64_t *, _QWORD))sub_2318D4B54();
      sub_2318D4B3C();
      v51(v117, 0);
      v52 = (void *)objc_opt_self();
      v53 = objc_msgSend(v52, sel_linkColor);
      v54 = (void (*)(uint64_t *, _QWORD))sub_2318D4B54();
      sub_2318D4B30();
      v54(v117, 0);
      sub_2318D4B78();
      sub_2318D5C94();
      sub_2318D4B84();
      v55 = (uint64_t)v99;
      sub_2318D4AD0();
      v96((char *)v55, 0, 1, v36);
      sub_23185B914(v55, v38);
      v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
      if (!v56(v38, 1, v36))
      {
        sub_2318D2B8C();
        sub_2318D4AB8();
      }
      v57 = v56(v38, 1, v36);
      v58 = v111;
      v59 = v109;
      if (!v57)
      {
        v60 = objc_msgSend(v52, sel_separatorColor);
        sub_2318D4AA0();
      }
      v103 = v52;
      v61 = v38;
      v62 = v56(v38, 1, v36);
      v63 = v112;
      v64 = v110;
      v65 = v36;
      if (!v62)
        sub_2318D4AAC();
      v66 = v32;
      v67 = v56(v61, 1, v65);
      v68 = v58;
      if (!v67)
      {
        v69 = objc_msgSend(v103, sel_clearColor);
        sub_2318D4AC4();
      }
    }
    else
    {
      v70 = sub_2318D29AC();
      v71 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
      v72 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v93, 1, 1, v70);
      v73 = v94;
      sub_2318D4074();
      sub_2318D444C();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v97);
      sub_2317DD39C(v72, (unint64_t *)&qword_25418B2C0, v71);
      sub_2318D4BA8();
      v74 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
      v75 = v36;
      v66 = v32;
      v76 = (void (*)(uint64_t *, _QWORD))sub_2318D4B54();
      sub_2318D4B30();
      v76(v117, 0);
      sub_2317DD39C(v38, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408]);
      v61 = v38;
      v96((char *)v38, 1, 1, v75);
      v68 = v111;
      v63 = v112;
      v59 = v109;
      v64 = v110;
    }
    v77 = v98;
    v117[3] = v98;
    v117[4] = MEMORY[0x24BEBC5F0];
    v78 = sub_2317DBF6C(v117);
    v79 = *(void (**)(uint64_t *, char *, uint64_t))(v114 + 16);
    v92 = v66;
    v79(v78, v66, v77);
    v80 = *(_QWORD *)(v59 + qword_255F270C8);
    v81 = sub_2318D3144();
    v82 = (_QWORD *)swift_allocObject();
    v82[2] = v81;
    v82[3] = v80;
    v82[4] = v68;
    *v63 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v105 + 104))(v63, *MEMORY[0x24BE435F8], v64);
    sub_23185B8B8(v61, (uint64_t)v99);
    v115 = 0;
    v116 = 0xE000000000000000;
    swift_retain();
    swift_retain();
    sub_2318D60C0();
    v83 = sub_2318D55BC();
    v85 = v84;
    swift_bridgeObjectRelease();
    v115 = v83;
    v116 = v85;
    sub_2318D56A0();
    (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v108, *MEMORY[0x24BE44C60], v107);
    v86 = sub_2318D3918();
    v87 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
    v88 = (uint64_t *)v113;
    *(_QWORD *)(v113 + 24) = v86;
    v88[4] = sub_2317CC4AC((unint64_t *)&qword_25418AA68, v87, MEMORY[0x24BE438A8]);
    sub_2317DBF6C(v88);
    sub_2318D390C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v92, v77);
    return sub_2317DD39C(v61, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408]);
  }
  return result;
}

uint64_t sub_231859800(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21[2];
  uint64_t v22;
  void *v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v6 = sub_2318D4A1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
  sub_2317D4B4C(0, &qword_255F271B0);
  v10 = a1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_2317D4AF0(v21, (uint64_t)v24);
    sub_2318D48D8();
    sub_2318D4758();
    swift_allocObject();
    v11 = sub_2318D474C();
    v12 = v25;
    v13 = v26;
    sub_2317D4B08(v24, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v11, v12, v13);
    sub_2318D4890();
    swift_release();
    return sub_2317D4B2C((uint64_t)v24);
  }
  else
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_2317CF774((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23185B7B4);
    sub_2318D49E0();
    v15 = sub_2318D4A10();
    v16 = sub_2318D5A3C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v21[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v24[0] = a4;
      swift_getMetatypeMetadata();
      v19 = sub_2318D55E0();
      v24[0] = sub_231851EBC(v19, v20, (uint64_t *)v21);
      sub_2318D5F70();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2317C8000, v15, v16, "[%{public}s] Add medication triggered by unexpected view controller", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348E77E8](v18, -1, -1);
      MEMORY[0x2348E77E8](v17, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_231859AB0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17[2];
  uint64_t v18;
  void *v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = sub_2318D4A1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  sub_2317CCC9C(0, (unint64_t *)&qword_255F25600);
  sub_2317D4B4C(0, &qword_255F271B0);
  v6 = a1;
  if (swift_dynamicCast())
  {
    sub_2317D4AF0(v17, (uint64_t)v20);
    sub_2318D3144();
    v7 = sub_2318D48F0();
    swift_release();
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_2318D6174();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v8)
    {
      sub_2318D3144();
      v13 = sub_2318D48C0();
      swift_release();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_2318D6174();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    sub_2318D4758();
    swift_allocObject();
    v14 = sub_2318D474C();
    v15 = v21;
    v16 = v22;
    sub_2317D4B08(v20, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v14, v15, v16);
    swift_release();
    return sub_2317D4B2C((uint64_t)v20);
  }
  else
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_2317CF774((uint64_t)v17, (uint64_t (*)(_QWORD))sub_23185B7B4);
    sub_2318D49E0();
    v9 = sub_2318D4A10();
    v10 = sub_2318D5A3C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2317C8000, v9, v10, "Add medication triggered by unexpected view controller", v11, 2u);
      MEMORY[0x2348E77E8](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void MedicationListCompactDataSource.__allocating_init(listManager:healthStore:collectionView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationListCompactDataSource.init(listManager:healthStore:collectionView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231859DC8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[3];
  __int128 v25;
  __int128 v26;
  _BYTE v27[40];
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];
  _QWORD v31[5];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v2 = sub_2318D4080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  sub_2317D4194(0, (unint64_t *)&qword_25418B2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - v8;
  sub_2317D4194(0, &qword_255F25518, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2318D3774();
  v10 = swift_allocObject();
  v25 = xmmword_2318D8680;
  *(_OWORD *)(v10 + 16) = xmmword_2318D8680;
  v11 = sub_2318D29AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_2318D4074();
  v12 = sub_2318D444C();
  v24[1] = v13;
  v24[2] = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2317DD39C((uint64_t)v9, (unint64_t *)&qword_25418B2C0, v6);
  v32 = v25;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_3;
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
LABEL_3:
      v35 = 0;
      v33 = 0u;
      v34 = 0u;
      goto LABEL_6;
    }
  }
  swift_allocObject();
  swift_weakInit();
  *((_QWORD *)&v34 + 1) = sub_2318D4044();
  v35 = sub_2317CC4AC(&qword_255F270F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE46310], MEMORY[0x24BE46300]);
  sub_2317DBF6C((uint64_t *)&v33);
  sub_2318D4038();
LABEL_6:
  sub_2317FAFA8((uint64_t)&v33, (uint64_t)v31);
  sub_2317D40A8((uint64_t)v31, (uint64_t)&v28, (uint64_t (*)(_QWORD))sub_2317FAF08);
  if (v29)
  {
    sub_2317D4AF0(&v28, (uint64_t)v30);
    sub_2317D4AF0(v30, (uint64_t)&v28);
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_2317EC6A4(0, v15[2] + 1, 1, v15);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_2317EC6A4((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    sub_2317D4AF0(&v28, (uint64_t)&v15[5 * v17 + 4]);
  }
  else
  {
    sub_2317CF774((uint64_t)&v28, (uint64_t (*)(_QWORD))sub_2317FAF08);
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_2317FAF08();
  swift_arrayDestroy();
  v18 = sub_231855570(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE46368], sub_23185B970);
  v31[0] = v15;
  sub_231855F7C(v18, (uint64_t (*)(void))sub_2317EC6A4, (unint64_t *)&qword_25418AA40);
  v19 = v31[0];
  v26 = v25;
  sub_231858E04(v14 == 0, (void *)2, (uint64_t)v27);
  sub_2317FAFA8((uint64_t)v27, (uint64_t)v31);
  sub_2317D40A8((uint64_t)v31, (uint64_t)&v28, (uint64_t (*)(_QWORD))sub_2317FAF08);
  if (v29)
  {
    sub_2317D4AF0(&v28, (uint64_t)v30);
    sub_2317D4AF0(v30, (uint64_t)&v28);
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_2317EC6A4(0, v20[2] + 1, 1, v20);
    v22 = v20[2];
    v21 = v20[3];
    if (v22 >= v21 >> 1)
      v20 = sub_2317EC6A4((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
    v20[2] = v22 + 1;
    sub_2317D4AF0(&v28, (uint64_t)&v20[5 * v22 + 4]);
  }
  else
  {
    sub_2317CF774((uint64_t)&v28, (uint64_t (*)(_QWORD))sub_2317FAF08);
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_arrayDestroy();
  v31[0] = v19;
  sub_231855F7C((uint64_t)v20, (uint64_t (*)(void))sub_2317EC6A4, (unint64_t *)&qword_25418AA40);
  sub_2318D3768();
  return v10;
}

uint64_t sub_23185A318()
{
  MedicationListCompactDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23185A334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  id v10;
  uint64_t v12;

  sub_2317D4194(0, &qword_255F271C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE429C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2318D3504();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2318D3528();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - v7;
  sub_2318D351C();
  sub_2318D34F8();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v8, v2);
  sub_2318D351C();
  sub_2318D34E0();
  v9(v6, v2);
  sub_2317CCC9C(0, &qword_255F271C8);
  sub_2318D5DA8();
  v10 = objc_msgSend((id)objc_opt_self(), sel_interSectionSpacing);
  return sub_2318D34EC();
}

void _s26MedicationsHealthAppPlugin08ArchivedA14ListDataSourceC10layoutType3for4with0B12ExperienceUI019LayoutConfigurationJ0OSgSi_So012NSCollectionO11Environment_ptF_0(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  unsigned int v24;
  id v25;
  id v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, char *, uint64_t);
  char *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;

  v48 = a1;
  v55 = a3;
  v4 = sub_2318D38AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - v9;
  v49 = sub_2318D3A38();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v46 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2318D3528();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2318D3840();
  v54 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v53 = (char **)((char *)&v46 - v18);
  v19 = a2;
  v20 = objc_msgSend(a2, sel_traitCollection);
  v21 = objc_msgSend(v20, sel_horizontalSizeClass);

  if (v21 != (id)2)
    goto LABEL_7;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4198]), sel_init);
  v23 = objc_msgSend(v22, sel_features);

  if (v23)
  {
    v24 = objc_msgSend(v23, sel_stanley);

    if (v24)
    {
      v25 = objc_msgSend(v19, sel_traitCollection);
      v26 = objc_msgSend(v25, sel_preferredContentSizeCategory);

      sub_2318D5C64();
      v27 = v50;
      sub_23185A334();
      swift_unknownObjectRetain();
      sub_2318D3144();
      v28 = sub_2318D48C0();
      swift_release();
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_2318D6174();
        swift_bridgeObjectRelease();
      }
      v29 = v54;
      swift_bridgeObjectRelease();
      v30 = v46;
      sub_2318D3A2C();
      v38 = (void *)sub_2318D3510();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v49);
      v39 = (void *)objc_opt_self();
      v40 = objc_msgSend(v39, sel_estimatedDimension_, 100.0);
      v41 = (void *)sub_2318D5CAC();

      v42 = objc_msgSend(v39, sel_estimatedDimension_, 50.0);
      v43 = sub_23185B474((uint64_t)v42);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v52);
      v44 = v53;
      *v53 = v43;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v44, *MEMORY[0x24BE43690], v14);
      v45 = v55;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v29 + 32))(v55, v44, v14);
      goto LABEL_8;
    }
LABEL_7:
    sub_2318D3858();
    sub_2318D384C();
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v8, v4);
    sub_2318D3888();
    v32 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_2318D3870();
    sub_23185B3B4();
    v34 = *(int *)(v33 + 48);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v17, v10, v4);
    v35 = sub_2318D315C();
    v31(v10, v4);
    *(_QWORD *)&v17[v34] = v35;
    v29 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v17, *MEMORY[0x24BE43688], v14);
    v36 = *(void (**)(_QWORD *, char *, uint64_t))(v29 + 32);
    v37 = (char *)v53;
    v36(v53, v17, v14);
    v45 = v55;
    v36(v55, v37, v14);
LABEL_8:
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v45, 0, 1, v14);
    return;
  }
  __break(1u);
}

NSCollectionLayoutSection __swiftcall NSCollectionLayoutSection.withFooter(height:)(NSCollectionLayoutDimension height)
{
  return (NSCollectionLayoutSection)sub_23185B474((uint64_t)height.super.isa);
}

uint64_t sub_23185AA38(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  unint64_t i;
  uint64_t (*v13)();
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t (*v17[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68];
        sub_2317D4194(0, &qword_25418AFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45E68], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_23185B838(&qword_255F25EC8, &qword_25418AFC8, v11, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v13 = sub_2318524AC(v17, i, a3);
          v15 = *v14;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v17, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2318D45FC();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_23185AC64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2317DC15C(0, (unint64_t *)&qword_254189E58, &qword_254189F30, 0x24BE45CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_23185B76C(&qword_255F27198, (unint64_t *)&qword_254189E58, &qword_254189F30, 0x24BE45CE8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231852558(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2317CCC9C(0, &qword_254189F30);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_23185AEA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2318D6174();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2317DC15C(0, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_23185B76C(&qword_255F271A8, (unint64_t *)&qword_25418B3E8, (unint64_t *)&qword_25418B440, 0x24BE45CB8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231852504(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2317CCC9C(0, (unint64_t *)&qword_25418B440);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2318D61BC();
  __break(1u);
  return result;
}

uint64_t sub_23185B0EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = v5;
  v24 = a3;
  v25 = a5;
  v26 = a1;
  v9 = sub_2318D5394();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2318D47B8();
  MEMORY[0x24BDAC7A8](v13);
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v5 + qword_255F270E0) = 0;
  *(_QWORD *)(v5 + qword_255F270E8) = 0;
  swift_retain();
  sub_2318D47AC();
  v14 = objc_allocWithZone((Class)sub_2318D47DC());
  v15 = (void *)sub_2318D47D0();
  *(_QWORD *)(v5 + qword_255F270C0) = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE45C90]), sel_initWithHealthStore_, a2);
  *(_QWORD *)(v5 + qword_255F270B8) = v16;
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B420);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5480], v9);
  v17 = v16;
  v18 = v15;
  v19 = (void *)sub_2318D5B98();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v17, sel_registerObserver_queue_, v18, v19);

  v20 = v24;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v6 + qword_255F270C8) = a4;
  *(_QWORD *)(v6 + qword_255F270D0) = v25;
  swift_retain();
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v20, sel_collectionView);
  return sub_2318D3150();
}

void sub_23185B33C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AA30)
  {
    sub_2318D4098();
    sub_2317CC4AC(&qword_25418AA88, (uint64_t (*)(uint64_t))MEMORY[0x24BE46368], MEMORY[0x24BE46358]);
    v0 = sub_2318D3168();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AA30);
  }
}

void sub_23185B3B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25418AA60)
  {
    sub_2318D38AC();
    sub_2317DC15C(255, &qword_25418B040, &qword_25418B038, 0x24BEBD450, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25418AA60);
  }
}

uint64_t sub_23185B440()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23185B464()
{
  return sub_231858D58();
}

uint64_t sub_23185B46C()
{
  return sub_2318589A0();
}

void *sub_23185B474(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;

  v2 = v1;
  objc_msgSend(v2, sel_contentInsets);
  objc_msgSend(v2, sel_setContentInsets_);
  v4 = objc_msgSend((id)objc_opt_self(), sel_fractionalWidthDimension_, 1.0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sizeWithWidthDimension_heightDimension_, v4, a1);

  sub_2318D55BC();
  v6 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_, v5, v6, 4);

  v8 = v7;
  v9 = objc_msgSend(v2, sel_boundarySupplementaryItems);
  sub_2317CCC9C(0, &qword_255F271D0);
  v10 = sub_2318D5790();

  MEMORY[0x2348E6528]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2318D57B4();
  sub_2318D57D8();
  sub_2318D57A8();
  v11 = (void *)sub_2318D5778();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setBoundarySupplementaryItems_, v11);

  return v2;
}

uint64_t type metadata accessor for MedicationListCompactDataSource(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_255F270F8);
}

uint64_t sub_23185B67C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23185B6F0()
{
  return type metadata accessor for MedicationListCompactDataSource(0);
}

uint64_t type metadata accessor for MedicationListRegularDataSource(uint64_t a1)
{
  return sub_23180B748(a1, qword_255F27148);
}

uint64_t sub_23185B70C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23185B748()
{
  return type metadata accessor for MedicationListRegularDataSource(0);
}

uint64_t sub_23185B750()
{
  return sub_2317CC4AC(&qword_255F271A0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationMonthHighlightItem, (uint64_t)&unk_2318DBD08);
}

uint64_t sub_23185B76C(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2317DC15C(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BEE12E0], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23185B7B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F271B8)
  {
    sub_2317D4B4C(255, &qword_255F271B0);
    v0 = sub_2318D5F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F271B8);
  }
}

void sub_23185B818()
{
  sub_231858BEC();
}

uint64_t sub_23185B820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23185B830()
{
  return swift_release();
}

uint64_t sub_23185B838(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2317D4194(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348E7734](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23185B880()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23185B8AC(void *a1)
{
  uint64_t *v1;

  return sub_231859800(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23185B8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23185B914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, &qword_25418AE18, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23185B970()
{
  return sub_2317CC4AC(&qword_25418AA80, (uint64_t (*)(uint64_t))MEMORY[0x24BE46368], MEMORY[0x24BE46350]);
}

void sub_23185B98C()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25418AE38)
  {
    sub_23185BA60();
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(255, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_2317CC4AC(&qword_25418AF20, (uint64_t (*)(uint64_t))sub_23185BA60, MEMORY[0x24BDB9D10]);
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v0);
    v1 = sub_2318D4C68();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25418AE38);
  }
}

void sub_23185BA60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AF28)
  {
    v0 = sub_2318D4DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AF28);
  }
}

void sub_23185BAC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AEC8)
  {
    sub_23180DD24(255, &qword_25418AEF8, (void (*)(uint64_t))sub_23185BB9C);
    sub_23185B98C();
    sub_23180DD80(&qword_25418AEF0, &qword_25418AEF8, (void (*)(uint64_t))sub_23185BB9C);
    sub_2317CC4AC(&qword_25418AE30, (uint64_t (*)(uint64_t))sub_23185B98C, MEMORY[0x24BDB9450]);
    v0 = sub_2318D4D34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AEC8);
  }
}

void sub_23185BB9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25418AE08)
  {
    sub_2318D4974();
    sub_2317DC15C(255, &qword_25418AFD8, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25418AE08);
  }
}

void sub_23185BC28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AEA8)
  {
    sub_23185BAC8();
    sub_23185BCBC();
    sub_2317CC4AC(&qword_25418AEC0, (uint64_t (*)(uint64_t))sub_23185BAC8, MEMORY[0x24BDB98F0]);
    v0 = sub_2318D4CF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AEA8);
  }
}

void sub_23185BCBC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_25418AFB8)
  {
    sub_2317D4194(255, &qword_25418AFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE46368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_25418AFB8);
  }
}

uint64_t sub_23185BD34()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_23185BD60(uint64_t a1)
{
  uint64_t v1;

  return sub_231856870(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23185BD68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23185BD8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_23185BDB4(_QWORD *a1, unint64_t a2)
{
  return sub_231856D18(a1, a2);
}

uint64_t sub_23185BDBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, _QWORD);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  sub_23185BB9C();
  result = v5(a1, *(_QWORD *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  a2[1] = v8;
  return result;
}

void sub_23185BE04()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25418AE28)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_23180DD24(255, (unint64_t *)&qword_25418B390, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_23185BED8();
    sub_23180DD80(&qword_25418B388, (unint64_t *)&qword_25418B390, v0);
    sub_2317CC4AC(&qword_25418AF10, (uint64_t (*)(uint64_t))sub_23185BED8, MEMORY[0x24BDB9AF8]);
    v1 = sub_2318D4C68();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25418AE28);
  }
}

void sub_23185BED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AF18)
  {
    sub_2317DC15C(255, &qword_25418AFD8, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AF18);
  }
}

void sub_23185BF5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AE78)
  {
    sub_23185BFD4();
    sub_2317CC4AC(&qword_25418AF00, (uint64_t (*)(uint64_t))sub_23185BFD4, MEMORY[0x24BDB9AF8]);
    v0 = sub_2318D4CBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AE78);
  }
}

void sub_23185BFD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25418AF08)
  {
    sub_2317DC15C(255, &qword_25418AFD8, &qword_25418B428, 0x24BE45C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2317D4B4C(255, (unint64_t *)&qword_25418B4A0);
    v0 = sub_2318D4D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25418AF08);
  }
}

unint64_t sub_23185C070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25418AF30;
  if (!qword_25418AF30)
  {
    sub_2317D4194(255, &qword_25418AF38, (uint64_t (*)(uint64_t))MEMORY[0x24BE48B58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348E7734](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25418AF30);
  }
  return result;
}

uint64_t static SharedMedicationsFeedItemIdentifierFactory.make(for:feedItemKind:profile:)()
{
  return sub_23185C160();
}

unint64_t static SharedMedicationsFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return FeedItemKind.identifierPrefix.getter();
}

unint64_t static SharedMedicationsFeedItemIdentifierFactory.makeTagComponentForSnippetItem()()
{
  return 0xD000000000000014;
}

uint64_t static SharedMedicationsFeedItemIdentifierFactory.makeComponent(sharingId:)()
{
  sub_2318D56A0();
  sub_2318D56A0();
  return 0x676E69726168535BLL;
}

uint64_t sub_23185C160()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v0 = (void *)sub_2318D2C28();
  FeedItemKind.identifierPrefix.getter();
  sub_23185C3A0();
  v1 = sub_2318D31EC();
  v3 = v2;
  swift_bridgeObjectRelease();

  sub_2318D56A0();
  sub_2318D56A0();
  swift_bridgeObjectRetain();
  v4 = sub_2317EBDA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = v4[2];
  v5 = v4[3];
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    v4 = sub_2317EBDA4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v5 = v4[3];
    v7 = v5 >> 1;
  }
  v4[2] = v8;
  v9 = &v4[2 * v6];
  v9[4] = v1;
  v9[5] = v3;
  if (v7 < (uint64_t)(v6 + 2))
    v4 = sub_2317EBDA4((_QWORD *)(v5 > 1), v6 + 2, 1, v4);
  v4[2] = v6 + 2;
  v10 = &v4[2 * v8];
  v10[4] = 0xD000000000000014;
  v10[5] = 0x80000002318E2AB0;
  v11 = v4[2];
  v12 = v4[3];
  swift_bridgeObjectRetain();
  if (v11 >= v12 >> 1)
    v4 = sub_2317EBDA4((_QWORD *)(v12 > 1), v11 + 1, 1, v4);
  v4[2] = v11 + 1;
  v13 = &v4[2 * v11];
  v13[4] = 0x676E69726168535BLL;
  v13[5] = 0xEB000000003A4449;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23185C3E4();
  sub_2317EB368();
  v14 = sub_2318D5538();
  swift_bridgeObjectRelease();
  return v14;
}

ValueMetadata *type metadata accessor for SharedMedicationsFeedItemIdentifierFactory()
{
  return &type metadata for SharedMedicationsFeedItemIdentifierFactory;
}

unint64_t sub_23185C3A0()
{
  unint64_t result;

  result = qword_254188810;
  if (!qword_254188810)
  {
    result = MEMORY[0x2348E7734](&protocol conformance descriptor for SharedMedicationsFeedItemIdentifierFactory, &type metadata for SharedMedicationsFeedItemIdentifierFactory);
    atomic_store(result, (unint64_t *)&qword_254188810);
  }
  return result;
}

void sub_23185C3E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254189E20)
  {
    v0 = sub_2318D57E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254189E20);
  }
}

id sub_23185C438(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  int *v24;
  char *v25;
  char *v26;
  id v27;
  objc_class *v28;
  id v29;
  objc_super v31;

  v9 = sub_2318D54C0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  v16 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_indicatorLayerAppearanceKey];
  *(_QWORD *)v16 = 0xD000000000000013;
  *((_QWORD *)v16 + 1) = 0x80000002318E2E00;
  v17 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_hideAnimationLayerKey];
  *(_QWORD *)v17 = 0xD000000000000010;
  *((_QWORD *)v17 + 1) = 0x80000002318E2E20;
  v18 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_showAnimationLayerKey];
  *(_QWORD *)v18 = 0xD000000000000010;
  *((_QWORD *)v18 + 1) = 0x80000002318E2E40;
  v19 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar];
  v20 = sub_2318D2A90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  v22 = v4;
  sub_2318D543C();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v23 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v13, v9);
  v24 = (int *)type metadata accessor for TimelineDay();
  *(_QWORD *)&v21[v24[5]] = v23;
  v25 = &v21[v24[6]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0xE000000000000000;
  v21[v24[7]] = 0;
  sub_2318D28B0();
  *(_QWORD *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill] = 0;
  v26 = &v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1E0]);
  *(_OWORD *)v26 = xmmword_2318D8DC0;
  *((_OWORD *)v26 + 1) = xmmword_2318D8DB0;
  *((int64x2_t *)v26 + 2) = vdupq_n_s64(0x4041000000000000uLL);
  *((_QWORD *)v26 + 6) = 0;
  *((_QWORD *)v26 + 7) = v27;
  *((_OWORD *)v26 + 4) = xmmword_2318D8DA0;
  *((_QWORD *)v26 + 10) = 0;
  *((_QWORD *)v26 + 11) = 27;

  v28 = (objc_class *)type metadata accessor for InteractiveTimelineDayCell(0);
  v31.receiver = v22;
  v31.super_class = v28;
  v29 = objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  sub_23185DF50();

  return v29;
}

id sub_23185C734(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  int *v18;
  char *v19;
  char *v20;
  id v21;
  objc_class *v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v3 = sub_2318D54C0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - v8;
  v10 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_indicatorLayerAppearanceKey];
  *(_QWORD *)v10 = 0xD000000000000013;
  *((_QWORD *)v10 + 1) = 0x80000002318E2E00;
  v11 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_hideAnimationLayerKey];
  *(_QWORD *)v11 = 0xD000000000000010;
  *((_QWORD *)v11 + 1) = 0x80000002318E2E20;
  v12 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_showAnimationLayerKey];
  *(_QWORD *)v12 = 0xD000000000000010;
  *((_QWORD *)v12 + 1) = 0x80000002318E2E40;
  v13 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar];
  v14 = sub_2318D2A90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  v16 = v1;
  sub_2318D543C();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v15, v7, v3);
  v18 = (int *)type metadata accessor for TimelineDay();
  *(_QWORD *)&v15[v18[5]] = v17;
  v19 = &v15[v18[6]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0xE000000000000000;
  v15[v18[7]] = 0;
  sub_2318D28B0();
  *(_QWORD *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill] = 0;
  v20 = &v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD5F0]), sel_initForTextStyle_, *MEMORY[0x24BEBE1E0]);
  *(_OWORD *)v20 = xmmword_2318D8DC0;
  *((_OWORD *)v20 + 1) = xmmword_2318D8DB0;
  *((int64x2_t *)v20 + 2) = vdupq_n_s64(0x4041000000000000uLL);
  *((_QWORD *)v20 + 6) = 0;
  *((_QWORD *)v20 + 7) = v21;
  *((_OWORD *)v20 + 4) = xmmword_2318D8DA0;
  *((_QWORD *)v20 + 10) = 0;
  *((_QWORD *)v20 + 11) = 27;

  v22 = (objc_class *)type metadata accessor for InteractiveTimelineDayCell(0);
  v27.receiver = v16;
  v27.super_class = v22;
  v23 = objc_msgSendSuper2(&v27, sel_initWithCoder_, a1);
  v24 = v23;
  if (v23)
  {
    v25 = v23;
    sub_23185DF50();

  }
  return v24;
}

uint64_t sub_23185CB94(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[5];

  v3 = v2;
  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - v7;
  v9 = type metadata accessor for TimelineDay();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v21 - v13;
  v15 = (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_23185FEE0(v15, (uint64_t)v14);
  sub_23185FEE0(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_2317F8260((uint64_t)v12, v15);
  swift_endAccess();
  v16 = sub_2318D2A90();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, a2, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
  v18 = (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
  swift_beginAccess();
  sub_2317F82A4((uint64_t)v8, v18);
  swift_endAccess();
  v21[2] = 0x7865646E49796144;
  v21[3] = 0xE90000000000003ALL;
  v21[1] = sub_2318D549C();
  sub_2318D6288();
  sub_2318D56A0();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_2318D558C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v19);

  sub_23185CDE0((uint64_t)v14);
  return sub_2317CF774((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
}

void sub_23185CDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  CGFloat v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  CGFloat v39;
  void (*v40)(char *, uint64_t, _QWORD);
  char *v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  void (*v46)(char *, _QWORD);
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  unsigned __int8 m11_low;
  __int16 v53;
  id v54;
  double v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double MidX;
  id v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  CGFloat v80;
  id v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  CGFloat v90;
  id v91;
  id v92;
  CGFloat m11;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  id v101;
  void *v102;
  id v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  id v111;
  void *v112;
  id v113;
  uint64_t v114;
  void *v115;
  char *v116;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  uint64_t v125;
  CATransform3D v126;
  CATransform3D v127;
  CATransform3D v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v116 - v6;
  v8 = type metadata accessor for TimelineDay();
  v9 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)&m33 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&m34 = (char *)&v116 - v11;
  sub_2317D4194(0, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v4);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&m43 = (char *)&v116 - v13;
  *(double *)&v14 = COERCE_DOUBLE(sub_2318D294C());
  m42 = *(double *)(v14 - 8);
  m41 = *(double *)&v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)&m44 = (char *)&v116 - v17;
  v18 = sub_2318D54C0();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
  v20 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v116 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  m32 = *(double *)&a1;
  v26((char *)&v116 - v24, a1, v18);
  *(_QWORD *)&v27 = v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  m31 = v27;
  v26(v23, *(_QWORD *)&v27, v18);
  sub_2317CC4AC(&qword_255F27290, v19, MEMORY[0x24BDD24B0]);
  LOBYTE(v19) = sub_2318D5580();
  v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v23, v18);
  v28(v25, v18);
  v125 = v2;
  if ((v19 & 1) == 0)
  {
    sub_23185FEE0(*(uint64_t *)&m31, *(uint64_t *)&m34);
    v29 = v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
    swift_beginAccess();
    sub_23185FF68(v29, (uint64_t)v7);
    v30 = sub_2318D2A90();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v7, 1, v30) == 1)
    {
      __break(1u);
      return;
    }
    v26(v25, *(_QWORD *)&m32, v18);
    v32 = *(_QWORD *)&m34;
    v33 = sub_2318D5580();
    v28(v25, v18);
    if ((v33 & 1) != 0)
    {
      v34 = 1;
      v35 = v125;
      v37 = m42;
      v36 = m41;
      v38 = *(_QWORD *)&m43;
    }
    else
    {
      v38 = *(_QWORD *)&m43;
      sub_2318D54B4();
      v34 = 0;
      v35 = v125;
      v37 = m42;
      v36 = m41;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, CGFloat))(*(_QWORD *)&v37 + 56))(v38, v34, 1, COERCE_CGFLOAT(*(_QWORD *)&v36));
    sub_2317CF774(v32, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, CGFloat))(*(_QWORD *)&v37 + 48))(v38, 1, COERCE_CGFLOAT(*(_QWORD *)&v36)) == 1)
    {
      sub_2317DD39C(v38, (unint64_t *)&qword_25418B300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      v39 = m44;
      (*(void (**)(CGFloat, uint64_t, CGFloat))(*(_QWORD *)&v37 + 32))(COERCE_CGFLOAT(*(_QWORD *)&m44), v38, COERCE_CGFLOAT(*(_QWORD *)&v36));
      v40 = *(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)&v37 + 16);
      v41 = v116;
      v40(v116, *(_QWORD *)&v39, *(_QWORD *)&v36);
      v42 = v35 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_startDate;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, CGFloat))(*(_QWORD *)&v37 + 40))(v42, v41, COERCE_CGFLOAT(*(_QWORD *)&v36));
      swift_endAccess();
      v43 = sub_23185DC74();
      v44 = sub_23185DD38();
      v40(v41, v42, *(_QWORD *)&v36);
      v45 = (void *)sub_2318D28F8();
      v46 = *(void (**)(char *, _QWORD))(*(_QWORD *)&v37 + 8);
      v46(v41, *(_QWORD *)&v36);
      v47 = objc_msgSend(v44, sel_stringFromDate_, v45);

      if (!v47)
      {
        sub_2318D55BC();
        v47 = (id)sub_2318D558C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v43, sel_setText_, v47);

      v46(*(char **)&v39, *(_QWORD *)&v36);
    }
  }
  v48 = sub_23185DE64();
  v49 = (void *)sub_2318D558C();
  v50 = objc_msgSend(v48, sel_valueForKey_, v49);

  if (v50)
  {
    sub_2318D5FE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(&v127, 0, 32);
  }
  v51 = *(_QWORD *)&m33;
  sub_23185FF24((uint64_t)&v127, (uint64_t)&v128);
  if (!*(_QWORD *)&v128.m14)
  {
    sub_2317CF774((uint64_t)&v128, (uint64_t (*)(_QWORD))sub_2317E5F64);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:
    m11_low = 0;
    goto LABEL_19;
  }
  m11_low = LOBYTE(v126.m11);
LABEL_19:
  sub_23185FEE0(*(uint64_t *)&m31, v51);
  v53 = sub_23188B6D8(m11_low, *(uint64_t *)&m32);
  sub_2317CF774(v51, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
  v54 = objc_msgSend((id)objc_opt_self(), *off_25007F320[(char)v53]);
  v55 = dbl_2318DB630[v53 == 1];
  v56 = (void *)objc_opt_self();
  objc_msgSend(v56, sel_begin);
  objc_msgSend(v56, sel_setDisableActions_, (v53 & 0x100) == 0);
  if ((v53 & 0x100) != 0)
  {
    if ((_BYTE)v53)
    {
      objc_msgSend(v56, sel_begin);
      objc_msgSend(v56, sel_setDisableActions_, 1);
      sub_23185DA8C(v55, v125, v54);
      objc_msgSend(v56, sel_commit);
      CATransform3DMakeScale(&v128, 1.0, 1.0, 1.0);
      m11 = v128.m11;
      m12 = v128.m12;
      m13 = v128.m13;
      m14 = v128.m14;
      m21 = v128.m21;
      m22 = v128.m22;
      m23 = v128.m23;
      m24 = v128.m24;
      m32 = v128.m32;
      m31 = v128.m31;
      m34 = v128.m34;
      m33 = v128.m33;
      m42 = v128.m42;
      m41 = v128.m41;
      m44 = v128.m44;
      m43 = v128.m43;
      v127 = v128;
      v101 = sub_23185DE64();
      CATransform3DMakeScale(&v128, 0.001, 0.001, 1.0);
      v102 = (void *)sub_2318D558C();
      v103 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v102);

      v104 = (void *)sub_2318D59D0();
      objc_msgSend(v103, sel_setFromValue_, v104);

      v105 = (void *)sub_2318D59D0();
      objc_msgSend(v103, sel_setToValue_, v105);

      v106 = (void *)sub_2318D558C();
      objc_msgSend(v101, sel_addAnimation_forKey_, v103, v106);

      v92 = sub_23185DE64();
      v126.m11 = m11;
      v126.m12 = m12;
      v126.m13 = m13;
      v126.m14 = m14;
      v126.m21 = m21;
      v126.m22 = m22;
      v126.m23 = m23;
      v126.m24 = m24;
      v126.m31 = m31;
      v126.m32 = m32;
      v126.m33 = m33;
      v126.m34 = m34;
      v126.m41 = m41;
      v126.m42 = m42;
      v126.m43 = m43;
      v126.m44 = m44;
      objc_msgSend(v92, sel_setTransform_, &v126);
    }
    else
    {
      CATransform3DMakeScale(&v128, 1.0, 1.0, 1.0);
      CATransform3DMakeScale(&v127, 0.001, 0.001, 1.0);
      v107 = (void *)sub_2318D558C();
      v108 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v107);

      v109 = (void *)sub_2318D59D0();
      objc_msgSend(v108, sel_setFromValue_, v109);

      v110 = (void *)sub_2318D59D0();
      objc_msgSend(v108, sel_setToValue_, v110);

      objc_msgSend(v108, sel_setDelegate_, v125);
      v111 = sub_23185DE64();
      v112 = (void *)sub_2318D558C();
      objc_msgSend(v111, sel_addAnimation_forKey_, v108, v112);

      v92 = sub_23185DE64();
      CATransform3DMakeScale(&v126, 0.001, 0.001, 1.0);
      objc_msgSend(v92, sel_setTransform_, &v126);

    }
  }
  else
  {
    v57 = sub_23185DE64();
    objc_msgSend(v57, sel_setHidden_, v53 == 0);

    v58 = sub_23185DE64();
    v59 = objc_msgSend(v54, sel_CGColor);
    objc_msgSend(v58, sel_setFillColor_, v59);

    v60 = sub_23185DE64();
    v61 = sub_23185DE64();
    objc_msgSend(v61, sel_frame);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    v69 = v68;

    v129.origin.x = v63;
    v129.origin.y = v65;
    v129.size.width = v67;
    v129.size.height = v69;
    MidX = CGRectGetMidX(v129);
    v71 = sub_23185DE64();
    objc_msgSend(v71, sel_frame);
    v73 = v72;
    v75 = v74;
    v77 = v76;
    v79 = v78;

    v130.origin.x = v73;
    v130.origin.y = v75;
    v130.size.width = v77;
    v130.size.height = v79;
    v80 = CGRectGetHeight(v130) * 0.5;
    v81 = sub_23185DE64();
    objc_msgSend(v81, sel_frame);
    v83 = v82;
    v85 = v84;
    v87 = v86;
    v89 = v88;

    v131.origin.x = v83;
    v131.origin.y = v85;
    v131.size.width = v87;
    v131.size.height = v89;
    v90 = CGRectGetWidth(v131) * 0.5;
    v91 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, v80, v90, 0.0, v55);
    v92 = objc_msgSend(v91, sel_CGPath);

    objc_msgSend(v60, sel_setPath_, v92);
  }

  v113 = sub_23185DE64();
  LOBYTE(v126.m11) = v53;
  v114 = sub_2318D62DC();
  v115 = (void *)sub_2318D558C();
  objc_msgSend(v113, sel_setValue_forKey_, v114, v115);

  swift_unknownObjectRelease();
  objc_msgSend(v56, sel_commit);

}

void sub_23185DA8C(double a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double MidX;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  id v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  id v38;
  id v39;
  id v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v5 = sub_23185DE64();
  v6 = objc_msgSend(a3, sel_CGColor);
  objc_msgSend(v5, sel_setFillColor_, v6);

  v7 = sub_23185DE64();
  v8 = sub_23185DE64();
  objc_msgSend(v8, sel_frame);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v41.origin.x = v10;
  v41.origin.y = v12;
  v41.size.width = v14;
  v41.size.height = v16;
  MidX = CGRectGetMidX(v41);
  v18 = sub_23185DE64();
  objc_msgSend(v18, sel_frame);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v42.origin.x = v20;
  v42.origin.y = v22;
  v42.size.width = v24;
  v42.size.height = v26;
  v27 = CGRectGetHeight(v42) * 0.5;
  v28 = sub_23185DE64();
  objc_msgSend(v28, sel_frame);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  v43.origin.x = v30;
  v43.origin.y = v32;
  v43.size.width = v34;
  v43.size.height = v36;
  v37 = CGRectGetWidth(v43) * 0.5;
  v38 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, v27, v37, 0.0, a1);
  v39 = objc_msgSend(v38, sel_CGPath);

  objc_msgSend(v7, sel_setPath_, v39);
  v40 = sub_23185DE64();
  objc_msgSend(v40, sel_setHidden_, 0);

}

id sub_23185DC74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setAdjustsFontSizeToFitWidth_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 1);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    sub_2318D5DD8();
    v6 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_23185DD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_2318D29AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter;
  v7 = *(void **)(v1
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter);
  if (v7)
  {
    v8 = *(id *)(v1
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    sub_2318D29A0();
    v10 = (void *)sub_2318D2988();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, v10);

    v11 = (void *)sub_2318D558C();
    objc_msgSend(v9, sel_setLocalizedDateFormatFromTemplate_, v11);

    v12 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v13 = v7;
  return v8;
}

id sub_23185DE64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5758]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_23185DED4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SimpleShapeFakeMaskingView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_23185DF50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unsigned __int8 v14;
  int v15;
  id v16;
  id v17;
  char **v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  swift_getObjectType();
  v1 = type metadata accessor for TimelineDay();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v5);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = sub_23185DC74();
  objc_msgSend(v6, sel_addSubview_, v7);

  v8 = objc_msgSend(v0, sel_contentView);
  v9 = sub_23185DED4();
  objc_msgSend(v8, sel_addSubview_, v9);

  v10 = objc_msgSend(v0, sel_contentView);
  v11 = objc_msgSend(v10, sel_layer);

  v12 = sub_23185DE64();
  objc_msgSend(v11, sel_addSublayer_, v12);

  v13 = sub_23185DC74();
  v14 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
  v15 = v14;
  v16 = objc_msgSend(v4, *off_25007F308[(char)v14]);
  objc_msgSend(v13, sel_setTextColor_, v16);

  sub_23185EB68();
  v17 = sub_23185DC74();
  v18 = &selRef_labelColor;
  if (v15 != 1)
    v18 = &selRef_clearColor;
  v19 = objc_msgSend(v4, *v18);
  objc_msgSend(v17, sel_setBackgroundColor_, v19);

  sub_23185E300();
  sub_23185E430();
  v20 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_23185FEE0(v20, (uint64_t)v3);
  sub_23185CDE0((uint64_t)v3);
  sub_2317CF774((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
  sub_2317D4194(0, (unint64_t *)&qword_255F27D10, (uint64_t (*)(uint64_t))sub_2317F9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2318D96D0;
  v22 = sub_2318D4BE4();
  v23 = MEMORY[0x24BEBC608];
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  v24 = sub_2318D53E8();
  v25 = sub_2317CC4AC((unint64_t *)&unk_255F257D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE49D98], MEMORY[0x24BE49D90]);
  *(_QWORD *)(v21 + 48) = v24;
  *(_QWORD *)(v21 + 56) = v25;
  v26 = sub_2318D4C50();
  v27 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v21 + 64) = v26;
  *(_QWORD *)(v21 + 72) = v27;
  sub_2318D5DF0();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2318D8680;
  v29 = sub_2318D4B0C();
  v30 = MEMORY[0x24BEBC428];
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v30;
  sub_2318D5DF0();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23185E300()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  double v3;
  CGPathRef v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  CGRect v13;

  v1 = sub_23185DE64();
  v2 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration;
  v3 = *(double *)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 40);
  v13.origin.x = 0.0;
  v13.origin.y = 0.0;
  v13.size.width = v3;
  v13.size.height = v3;
  v4 = CGPathCreateWithEllipseInRect(v13, 0);
  objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, v3, v3);
  objc_msgSend(v1, sel_setPath_, v4);

  v5 = sub_23185DE64();
  objc_msgSend(v5, sel_setAnchorPoint_, 0.5, 0.5);

  v12 = sub_23185DE64();
  v6 = *(double *)(v2 + 8);
  v7 = *(double *)(v2 + 32);
  v8 = *(double *)(v2 + 40);
  v9 = *(double *)(v2 + 48);
  v10 = *(double *)(v2 + 64);
  objc_msgSend(*(id *)(v2 + 56), sel_scaledValueForValue_, *(double *)(v2 + 72));
  objc_msgSend(v12, sel_setPosition_, 0.0, v8 * 0.5 + v7 + v6 + v10 + v11 - v9 - v8);

}

void sub_23185E430()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  double *v3;
  id v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  id v14;
  id v15;
  id v16;
  uint64_t *v17;
  id v18;
  void *v19;
  id v20;
  CGRect v21;

  v1 = v0;
  v2 = sub_23185DC74();
  v3 = (double *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration);
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56), sel_scaledValueForValue_, *(double *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 72));
  sub_2318D5C94();
  sub_2318D5DB4();
  objc_msgSend(v2, sel_frame);
  objc_msgSend(v2, sel_setFrame_);

  v4 = sub_23185DC74();
  v5 = sub_23185DC74();
  objc_msgSend(v5, sel_frame);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v21.origin.x = v7;
  v21.origin.y = v9;
  v21.size.width = v11;
  v21.size.height = v13;
  CGRectGetWidth(v21);
  sub_2318D5DCC();

  v14 = sub_23185DC74();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0xC0))();
  v15 = objc_msgSend(v1, sel_traitCollection);
  v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)2)
  {
    if (qword_255F25000 != -1)
      swift_once();
    v17 = &qword_255F271E8;
  }
  else
  {
    if (qword_255F24FF8 != -1)
      swift_once();
    v17 = &qword_255F271E0;
  }
  v18 = (id)*v17;
  sub_2317CCC9C(0, &qword_25418B0C0);
  v19 = (void *)sub_2318D5DC0();

  objc_msgSend(v14, sel_setFont_, v19);
  v20 = sub_23185DC74();
  sub_23188AD60(v3[8]);
  objc_msgSend(v20, sel_frame);
  objc_msgSend(v20, sel_setFrame_);

}

void sub_23185E6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  char v10;

  v2 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration;
  if (*(double *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration) != *(double *)a1)
    goto LABEL_13;
  if (*(double *)(v2 + 8) != *(double *)(a1 + 8))
    goto LABEL_13;
  if (*(double *)(v2 + 16) != *(double *)(a1 + 16))
    goto LABEL_13;
  if (*(double *)(v2 + 24) != *(double *)(a1 + 24))
    goto LABEL_13;
  if (*(double *)(v2 + 32) != *(double *)(a1 + 32))
    goto LABEL_13;
  if (*(double *)(v2 + 40) != *(double *)(a1 + 40))
    goto LABEL_13;
  if (*(double *)(v2 + 48) != *(double *)(a1 + 48))
    goto LABEL_13;
  v4 = *(void **)(v2 + 56);
  v6 = *(double *)(v2 + 64);
  v5 = *(double *)(v2 + 72);
  v7 = *(double *)(v2 + 80);
  v8 = *(_QWORD *)(v2 + 88);
  sub_2317CCC9C(0, (unint64_t *)&qword_25418B2D8);
  v9 = v4;
  v10 = sub_2318D5E74();

  if ((v10 & 1) == 0
    || v6 != *(double *)(a1 + 64)
    || v5 != *(double *)(a1 + 72)
    || v7 != *(double *)(a1 + 80)
    || v8 != *(_QWORD *)(a1 + 88))
  {
LABEL_13:
    sub_23185E300();
  }
}

id sub_23185E848(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  objc_super v21;
  _OWORD v22[6];

  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for InteractiveTimelineDayCell(0);
  objc_msgSendSuper2(&v21, sel_applyLayoutAttributes_, a1);
  type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    v4 = *(_QWORD *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 48);
    v5 = *(void **)(v3
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                  + 56);
    v6 = *(_QWORD *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 80);
    v7 = *(_QWORD *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 88);
    v8 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
    v9 = *(_OWORD *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration);
    v10 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 16);
    v11 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 32);
    v12 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 64);
    v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 48];
    v22[2] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 32];
    v22[3] = v13;
    v14 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 80];
    v22[4] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 64];
    v22[5] = v14;
    v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 16];
    v22[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
    v22[1] = v15;
    v16 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56];
    *(_OWORD *)v8 = v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = v11;
    *((_QWORD *)v8 + 6) = v4;
    *((_QWORD *)v8 + 7) = v5;
    *((_OWORD *)v8 + 4) = v12;
    *((_QWORD *)v8 + 10) = v6;
    *((_QWORD *)v8 + 11) = v7;
    v17 = v5;
    v18 = a1;
    sub_2317F9C38((uint64_t)v22);

    sub_23185E6F4((uint64_t)v22);
    sub_2317F9C60((uint64_t)v22);

  }
  v19 = (void *)objc_opt_self();
  objc_msgSend(v19, sel_begin);
  objc_msgSend(v19, sel_setDisableActions_, 1);
  sub_23185EF38(v1);
  return objc_msgSend(v19, sel_commit);
}

id sub_23185E9F0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  int v5;
  void *v6;
  char **v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v1 = type metadata accessor for TimelineDay();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23185DC74();
  v5 = (*(unsigned __int8 (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v0) + 0xC0))();
  v6 = (void *)objc_opt_self();
  v7 = &selRef_labelColor;
  if (v5 != 1)
    v7 = &selRef_clearColor;
  v8 = objc_msgSend(v6, *v7);
  objc_msgSend(v4, sel_setBackgroundColor_, v8);

  v9 = (uint64_t)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  swift_beginAccess();
  sub_23185FEE0(v9, (uint64_t)v3);
  sub_23185CDE0((uint64_t)v3);
  sub_2317CF774((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
  sub_23185E300();
  sub_23185E430();
  v10 = (void *)objc_opt_self();
  objc_msgSend(v10, sel_begin);
  objc_msgSend(v10, sel_setDisableActions_, 1);
  sub_23185EF38(v0);
  return objc_msgSend(v10, sel_commit);
}

id sub_23185EB68()
{
  void *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v0 = (void *)objc_opt_self();
  objc_msgSend(v0, sel_begin);
  objc_msgSend(v0, sel_setDisableActions_, 1);
  v1 = (char *)sub_23185DED4();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemGray6Color);
  v3 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor;
  v4 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor] = v2;
  v5 = v2;

  v6 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  v7 = *(id *)&v1[v3];
  v8 = v6;
  if (v7)
    v7 = objc_msgSend(v7, sel_CGColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return objc_msgSend(v0, sel_commit);
}

id sub_23185ED24()
{
  return sub_23185F550(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineDayCell);
}

uint64_t sub_23185EE3C()
{
  return type metadata accessor for InteractiveTimelineDayCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineDayCell(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_254187A88);
}

void sub_23185EE58()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2317D4194(319, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for TimelineDay();
    if (v1 <= 0x3F)
    {
      sub_2318D294C();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_23185EF38(char *a1)
{
  char *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double MidX;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  double v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  CATransform3D v39;
  CGRect v40;
  CGRect v41;

  v2 = &a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  v3 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 8];
  v4 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 24];
  v5 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 32];
  v6 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 64];
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56], sel_scaledValueForValue_, *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 72]);
  v8 = v3 + v6 + v7;
  v9 = sub_23185DED4();
  objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v9, 0.0, v8, v4, v5);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = (char *)sub_23185DED4();
  v19 = *(id *)&v18[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer];

  objc_msgSend(v19, sel_setFrame_, v11, v13, v15, v17);
  v20 = sub_23185DED4();
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v20, sel_setFrame_);

  v21 = sub_23185DED4();
  objc_msgSend(v21, sel_setNeedsLayout);

  v22 = sub_23185DED4();
  objc_msgSend(v22, sel_layoutIfNeeded);

  v23 = sub_23185DE64();
  objc_msgSend(a1, sel_bounds);
  MidX = CGRectGetMidX(v40);
  v25 = *((double *)v2 + 1);
  v26 = *((double *)v2 + 4);
  v27 = *((double *)v2 + 5);
  v28 = *((double *)v2 + 6);
  v29 = *((double *)v2 + 8);
  objc_msgSend(*((id *)v2 + 7), sel_scaledValueForValue_, *((double *)v2 + 9));
  objc_msgSend(v23, sel_setPosition_, MidX, v27 * 0.5 + v26 + v25 + v29 + v30 - v28 - v27);

  v31 = sub_23185DE64();
  CATransform3DMakeScale(&v39, 1.0, 1.0, 1.0);
  objc_msgSend(v31, sel_setTransform_, &v39);

  v32 = sub_23185DC74();
  objc_msgSend(a1, sel_bounds);
  v33 = CGRectGetMidX(v41);
  objc_msgSend(v32, sel_center);
  objc_msgSend(v32, sel_setCenter_, v33);

  v34 = sub_23185DC74();
  v35 = sub_23185DC74();
  objc_msgSend(v35, sel_frame);
  v37 = v36;

  v38 = sub_23188AD60(v37);
  objc_msgSend(v34, sel_frame);
  objc_msgSend(v34, sel_setFrame_, v38);

}

uint64_t sub_23185F1E8(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];

  v3 = v2;
  v6 = type metadata accessor for TimelineDay();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2318D4A1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D49EC();
  v13 = a1;
  v14 = sub_2318D4A10();
  v15 = sub_2318D5A54();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v31 = a2;
    v17 = v16;
    v18 = swift_slowAlloc();
    v36[0] = v18;
    *(_DWORD *)v17 = 136446466;
    v30[1] = v17 + 4;
    v19 = v13;
    v20 = objc_msgSend(v19, sel_description);
    v33 = v9;
    v21 = v20;
    v22 = sub_2318D55BC();
    v34 = v3;
    v23 = v22;
    v32 = v10;
    v25 = v24;

    v35 = sub_231851EBC(v23, v25, v36);
    sub_2318D5F70();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    if ((v31 & 1) != 0)
      v26 = 1702195828;
    else
      v26 = 0x65736C6166;
    if ((v31 & 1) != 0)
      v27 = 0xE400000000000000;
    else
      v27 = 0xE500000000000000;
    v35 = sub_231851EBC(v26, v27, v36);
    sub_2318D5F70();
    v3 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2317C8000, v14, v15, "Animation: %{public}s finished %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348E77E8](v18, -1, -1);
    MEMORY[0x2348E77E8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v28 = v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_23185FEE0(v28, (uint64_t)v8);
  sub_23185CDE0((uint64_t)v8);
  return sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TimelineDay);
}

id sub_23185F540()
{
  return sub_23185F550(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelinePastCell);
}

id sub_23185F550(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_23185F584()
{
  return type metadata accessor for InteractiveTimelinePastCell(0);
}

uint64_t type metadata accessor for InteractiveTimelinePastCell(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_25418AC58);
}

unint64_t sub_23185F5A4()
{
  return 0xD00000000000001BLL;
}

id sub_23185F5CC(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_23185F648(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_23185F690()
{
  return sub_23185F550(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineTodayCell);
}

uint64_t sub_23185F6A4()
{
  return type metadata accessor for InteractiveTimelineTodayCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineTodayCell(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_25418AC70);
}

unint64_t sub_23185F6C0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_23185F6DC()
{
  return 2;
}

id sub_23185F6FC()
{
  return sub_23185F550(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineFutureCell);
}

uint64_t sub_23185F710()
{
  return type metadata accessor for InteractiveTimelineFutureCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineFutureCell(uint64_t a1)
{
  return sub_23180B748(a1, (uint64_t *)&unk_25418ACA8);
}

uint64_t sub_23185F72C()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_23185F760()
{
  return 0xD00000000000001DLL;
}

char *sub_23185F7C0(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  char *v10;
  id v11;
  id v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  objc_super v27;
  CGRect v28;

  swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor] = 0;
  v9 = objc_allocWithZone(MEMORY[0x24BDE56D0]);
  v10 = v4;
  v11 = objc_msgSend(v9, sel_init);
  *(_QWORD *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer] = v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  *(_QWORD *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer] = v12;

  v27.receiver = v10;
  v27.super_class = (Class)type metadata accessor for SimpleShapeFakeMaskingView();
  v13 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer;
  v15 = *(void **)&v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  v16 = v13;
  v17 = v15;
  objc_msgSend(v16, sel_bounds);
  objc_msgSend(v17, sel_setFrame_);

  v18 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v18, sel_setBackgroundColor_, 0);

  v19 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer;
  objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer], sel_frame);
  objc_msgSend(*(id *)&v16[v19], sel_setCornerRadius_, CGRectGetWidth(v28) * 0.5);
  v20 = *(id *)&v16[v19];
  objc_msgSend(v16, sel_bounds);
  objc_msgSend(v20, sel_setFrame_);

  objc_msgSend(*(id *)&v16[v19], sel_setMasksToBounds_, 1);
  objc_msgSend(*(id *)&v16[v19], sel_addSublayer_, *(_QWORD *)&v13[v14]);
  v21 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v21, sel_addSublayer_, *(_QWORD *)&v16[v19]);

  sub_2317D4194(0, (unint64_t *)&qword_255F27D10, (uint64_t (*)(uint64_t))sub_2317F9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2318D8680;
  v23 = sub_2318D4B0C();
  v24 = MEMORY[0x24BEBC428];
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v24;
  v25 = v16;
  sub_2318D5DF0();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v25;
}

void sub_23185FAE8()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  CGRect v13;

  v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer;
  v2 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer];
  objc_msgSend(v2, sel_frame);
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetWidth(v13) * 0.5);

  v12 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  v3 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_convertRect_toLayer_, *(_QWORD *)&v0[v1]);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v12, sel_setFrame_, v5, v7, v9, v11);
}

id sub_23185FC20(uint64_t a1)
{
  return sub_23185F550(a1, type metadata accessor for SimpleShapeFakeMaskingView);
}

uint64_t type metadata accessor for SimpleShapeFakeMaskingView()
{
  return objc_opt_self();
}

id sub_23185FC94()
{
  qword_255F271E0 = *MEMORY[0x24BEBE1E0];
  return (id)qword_255F271E0;
}

id sub_23185FCAC()
{
  qword_255F271E8 = *MEMORY[0x24BEBE1F0];
  return (id)qword_255F271E8;
}

void sub_23185FCC4()
{
  sub_23185E9F0();
  sub_23185E430();
}

void sub_23185FCF0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  char v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v0 = sub_23185DE64();
  v1 = (void *)sub_2318D558C();
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_2318D5FE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_23185FF24((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = sub_23185DE64();
      v4 = objc_msgSend((id)objc_opt_self(), *off_25007F320[v6]);
      v5 = objc_msgSend(v4, sel_CGColor);

      objc_msgSend(v3, sel_setFillColor_, v5);
    }
  }
  else
  {
    sub_2317CF774((uint64_t)v8, (uint64_t (*)(_QWORD))sub_2317E5F64);
  }
}

void sub_23185FE48(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor);
  v2 = *(void **)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer);
  v3 = v1;
  v4 = v2;
  if (v1)
    v5 = objc_msgSend(v3, sel_CGColor);
  else
    v5 = 0;
  v6 = v5;
  objc_msgSend(v4, sel_setBackgroundColor_);

}

uint64_t sub_23185FEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23185FF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317E5F64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23185FF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2317D4194(0, &qword_25418B2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23185FFC4(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_2318D5934();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_231860650(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t ListConceptManager.criticalMedicationsSet.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v0 = sub_2318D4974();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2318D48E4();
  v4 = sub_2318D4968();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14 = MEMORY[0x24BEE4AF8];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
LABEL_17:
    swift_bridgeObjectRelease();
    v11 = Array<A>.markedCritical.getter(v10);
    swift_bridgeObjectRelease();
    v12 = sub_23186372C(v11, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (unint64_t *)&qword_255F25648, &qword_255F272B8);
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  result = sub_2318D6174();
  v5 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x2348E6E94](i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2348E6528]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2318D57B4();
        sub_2318D57D8();
        sub_2318D57A8();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v10 = v14;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.markedCriticalCount.getter(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = Array<A>.markedCritical.getter(a1);
  v2 = sub_23186372C(v1, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (unint64_t *)&qword_255F25648, &qword_255F272B8);
  swift_bridgeObjectRelease();
  if ((v2 & 0xC000000000000001) != 0)
    v3 = sub_2318D6030();
  else
    v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.markedCritical.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  id v16;
  uint64_t v17;

  v17 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v2 = sub_2318D6174();
  if (!v2)
    goto LABEL_14;
LABEL_3:
  result = objc_opt_self();
  v16 = (id)result;
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    v15 = xmmword_2318D8680;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x2348E6E94](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v16, sel_sharedInstance, v15);
      sub_23183D4F8();
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = v15;
      v9 = objc_msgSend(v6, sel_semanticIdentifier);
      v10 = objc_msgSend(v9, sel_stringValue);

      v11 = sub_2318D55BC();
      v13 = v12;

      *(_QWORD *)(v8 + 32) = v11;
      *(_QWORD *)(v8 + 40) = v13;
      v14 = (void *)sub_2318D5778();
      swift_bridgeObjectRelease();
      LODWORD(v8) = objc_msgSend(v7, sel_containsAtLeastOneOfIdentifiers_, v14);

      if ((_DWORD)v8)
      {
        sub_2318D60FC();
        sub_2318D6120();
        sub_2318D612C();
        sub_2318D6108();
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t ListConceptManager.criticalMedicationsCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = ListConceptManager.criticalMedicationsSet.getter();
  if ((v0 & 0xC000000000000001) != 0)
    v1 = sub_2318D6030();
  else
    v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_231860650(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2318D6348();
  swift_bridgeObjectRetain();
  sub_2318D567C();
  v8 = sub_2318D6384();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2318D62B8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2318D62B8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_231861BBC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2318607FC(_QWORD *a1, void *a2)
{
  return sub_231860820(a1, a2, (unint64_t *)&qword_25418B440, 0x24BE45CB8, &qword_255F272B8, (unint64_t *)&qword_255F25648);
}

uint64_t sub_231860820(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  unint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v11 = v6;
  v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *v6;
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = a2;
    v17 = sub_2318D603C();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_2317CCC9C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2318D6030();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_231861008(v15, result + 1, a5, a3, a4, a6);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v35 = a5;
      v36 = v30 + 1;
      v37 = v16;
      sub_231861504(v36, v35, a3, a4, a6);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v16;
    }
    sub_231861B3C((uint64_t)v16, v31);
    *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    v19 = sub_2318D5E68();
    v20 = -1 << *(_BYTE *)(v14 + 32);
    v21 = v19 & ~v20;
    v40 = a4;
    if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_2317CCC9C(0, a3);
      v22 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
      v23 = sub_2318D5E74();

      if ((v23 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v27 = *(void **)(*(_QWORD *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
        v26 = sub_2318D5E74();

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v6;
    *v6 = 0x8000000000000000;
    v34 = a2;
    sub_231861FB8((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_231860B08(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_2318D297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2317CC4AC(&qword_25418A9C8, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2318D5514();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2317CC4AC(&qword_255F26AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_2318D5580();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_231861D54((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_231860D64(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_2318D2D30();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2317CC4AC(&qword_254188170, v11, MEMORY[0x24BE47768]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2318D5514();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2317CC4AC(&qword_255F272C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], MEMORY[0x24BE47770]);
      v21 = sub_2318D5580();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_2318623D0((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_231860FC0(uint64_t a1, uint64_t a2)
{
  return sub_231861008(a1, a2, &qword_255F272B8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (unint64_t *)&qword_255F25648);
}

uint64_t sub_231860FE4(uint64_t a1, uint64_t a2)
{
  return sub_231861008(a1, a2, (unint64_t *)&qword_255F272B0, &qword_255F272A0, 0x24BDD4088, &qword_255F272A8);
}

uint64_t sub_231861008(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_2318639DC(0, a3, a4, a5, a6);
    v10 = sub_2318D609C();
    v23 = v10;
    sub_2318D6024();
    if (sub_2318D6048())
    {
      sub_2317CCC9C(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_231861504(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_2318D5E68();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_2318D6048());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v10;
}

uint64_t sub_23186122C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_231852E30();
  v3 = sub_2318D6090();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2318D6348();
      sub_2318D567C();
      result = sub_2318D6384();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_231861504(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_2318639DC(0, a2, a3, a4, a5);
  v8 = sub_2318D6090();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_2318D5E68();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_23186179C(uint64_t a1)
{
  return sub_231861504(a1, (unint64_t *)&qword_255F272B0, &qword_255F272A0, 0x24BDD4088, &qword_255F272A8);
}

uint64_t sub_2318617C0(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;

  v10 = v5;
  v11 = a2(0);
  v46 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - v12;
  v14 = *v5;
  v47 = a2;
  v48 = a4;
  v49 = a5;
  sub_23186395C(0, a3, a2, a4, a5);
  v15 = sub_2318D6090();
  v16 = v15;
  if (*(_QWORD *)(v14 + 16))
  {
    v17 = 1 << *(_BYTE *)(v14 + 32);
    v18 = *(_QWORD *)(v14 + 56);
    v45 = (_QWORD *)(v14 + 56);
    if (v17 < 64)
      v19 = ~(-1 << v17);
    else
      v19 = -1;
    v20 = v19 & v18;
    v43 = v5;
    v44 = (unint64_t)(v17 + 63) >> 6;
    v21 = v15 + 56;
    result = swift_retain();
    v23 = 0;
    while (1)
    {
      if (v20)
      {
        v25 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v26 = v25 | (v23 << 6);
      }
      else
      {
        v27 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v27 >= v44)
          goto LABEL_33;
        v28 = v45[v27];
        ++v23;
        if (!v28)
        {
          v23 = v27 + 1;
          if (v27 + 1 >= v44)
            goto LABEL_33;
          v28 = v45[v23];
          if (!v28)
          {
            v23 = v27 + 2;
            if (v27 + 2 >= v44)
              goto LABEL_33;
            v28 = v45[v23];
            if (!v28)
            {
              v29 = v27 + 3;
              if (v29 >= v44)
              {
LABEL_33:
                swift_release();
                v10 = v43;
                v41 = 1 << *(_BYTE *)(v14 + 32);
                if (v41 > 63)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v14 + 16) = 0;
                break;
              }
              v28 = v45[v29];
              if (!v28)
              {
                while (1)
                {
                  v23 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    goto LABEL_39;
                  if (v23 >= v44)
                    goto LABEL_33;
                  v28 = v45[v23];
                  ++v29;
                  if (v28)
                    goto LABEL_23;
                }
              }
              v23 = v29;
            }
          }
        }
LABEL_23:
        v20 = (v28 - 1) & v28;
        v26 = __clz(__rbit64(v28)) + (v23 << 6);
      }
      v30 = v14;
      v31 = *(_QWORD *)(v14 + 48);
      v32 = *(_QWORD *)(v46 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 32);
      v33(v13, v31 + v32 * v26, v11);
      sub_2317CC4AC(v48, v47, v49);
      result = sub_2318D5514();
      v34 = -1 << *(_BYTE *)(v16 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
      {
        v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v21 + 8 * v36);
        }
        while (v40 == -1);
        v24 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v16 + 48) + v24 * v32, v13, v11);
      ++*(_QWORD *)(v16 + 16);
      v14 = v30;
    }
  }
  result = swift_release();
  *v10 = v16;
  return result;
}

unint64_t sub_231861B3C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2318D5E68();
  result = sub_2318D6018();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_231861BBC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23186122C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_231862634();
      goto LABEL_22;
    }
    sub_231862BE8();
  }
  v11 = *v4;
  sub_2318D6348();
  sub_2318D567C();
  result = sub_2318D6384();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2318D62B8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2318D62E8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2318D62B8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_231861D54(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_2318D297C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2318617C0(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_255F272C0, &qword_25418A9C8, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2318629B8((uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_255F272C0, &qword_25418A9C8, MEMORY[0x24BDCEA88]);
      goto LABEL_12;
    }
    sub_231863104(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_255F272C0, &qword_25418A9C8, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_2317CC4AC(&qword_25418A9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_2318D5514();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_2317CC4AC(&qword_255F26AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_2318D5580();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2318D62E8();
  __break(1u);
  return result;
}

void sub_231861FB8(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_231861504(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_231862804(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_231862E90(v13, a4, a5, a6, a7);
  }
  v14 = *v7;
  v15 = sub_2318D5E68();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_2317CCC9C(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_2318D5E74();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_2318D62E8();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_2318D5E74();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

uint64_t sub_23186216C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_2318D2F58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2318617C0(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], &qword_254189F50, &qword_254188190, MEMORY[0x24BE47D50]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2318629B8((uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], &qword_254189F50, &qword_254188190, MEMORY[0x24BE47D50]);
      goto LABEL_12;
    }
    sub_231863104(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], &qword_254189F50, &qword_254188190, MEMORY[0x24BE47D50]);
  }
  v13 = *v3;
  sub_2317CC4AC(&qword_254188190, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], MEMORY[0x24BE47D50]);
  v14 = sub_2318D5514();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_2317CC4AC(&qword_254188198, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], MEMORY[0x24BE47D58]);
      v19 = sub_2318D5580();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2318D62E8();
  __break(1u);
  return result;
}

uint64_t sub_2318623D0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_2318D2D30();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2318617C0(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], &qword_255F272D0, &qword_254188170, MEMORY[0x24BE47768]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_2318629B8((uint64_t (*)(uint64_t))MEMORY[0x24BE47758], &qword_255F272D0, &qword_254188170, MEMORY[0x24BE47768]);
      goto LABEL_12;
    }
    sub_231863104(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], &qword_255F272D0, &qword_254188170, MEMORY[0x24BE47768]);
  }
  v13 = *v3;
  sub_2317CC4AC(&qword_254188170, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], MEMORY[0x24BE47768]);
  v14 = sub_2318D5514();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_2317CC4AC(&qword_255F272C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], MEMORY[0x24BE47770]);
      v19 = sub_2318D5580();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2318D62E8();
  __break(1u);
  return result;
}

void *sub_231862634()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_231852E30();
  v2 = *v0;
  v3 = sub_2318D6084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2318627E0()
{
  return sub_231862804(&qword_255F272B8, (unint64_t *)&qword_25418B440, 0x24BE45CB8, (unint64_t *)&qword_255F25648);
}

id sub_231862804(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_2318639DC(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_2318D6084();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2318629B8(uint64_t (*a1)(uint64_t), unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  uint64_t v17;
  unint64_t v18;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v9 = a1(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - v11;
  sub_23186395C(0, a2, a1, a3, a4);
  v32 = v4;
  v13 = *v4;
  v14 = sub_2318D6084();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v32 = v15;
    return result;
  }
  result = (void *)(v14 + 56);
  v17 = v13 + 56;
  v18 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v18)
    result = memmove(result, (const void *)(v13 + 56), 8 * v18);
  v20 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v21 = 1 << *(_BYTE *)(v13 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v13 + 56);
  v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v26 = v25 | (v20 << 6);
      goto LABEL_12;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v28);
    ++v20;
    if (!v29)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v24)
        goto LABEL_28;
      v29 = *(_QWORD *)(v17 + 8 * v20);
      if (!v29)
      {
        v20 = v28 + 2;
        if (v28 + 2 >= v24)
          goto LABEL_28;
        v29 = *(_QWORD *)(v17 + 8 * v20);
        if (!v29)
          break;
      }
    }
LABEL_27:
    v23 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_12:
    v27 = *(_QWORD *)(v10 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v27, v9);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v27, v12, v9);
  }
  v30 = v28 + 3;
  if (v30 >= v24)
    goto LABEL_28;
  v29 = *(_QWORD *)(v17 + 8 * v30);
  if (v29)
  {
    v20 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

