void sub_2444E434C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2444E4354(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_2445339A8();
  v15 = v14;
  swift_beginAccess();
  swift_retain();
  v16 = sub_244519BD8(v13, v15);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 56) = v16;
    *(_QWORD *)(v7 + 64) = a5;
    *(_QWORD *)(v7 + 72) = a6;
    swift_bridgeObjectRetain();
    swift_release();
    v17 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(_BYTE *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = v17;
    *(_QWORD *)(v7 + 32) = a3;
    *(_QWORD *)(v7 + 40) = a4;
    *(_QWORD *)(v7 + 48) = a2;
    swift_retain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_2444E4CB0();
    swift_allocError();
    *(_QWORD *)v18 = v13;
    *(_QWORD *)(v18 + 8) = v15;
    *(_BYTE *)(v18 + 16) = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for MaterializedViewBlock();
    swift_deallocPartialClassInstance();
  }
  return v7;
}

uint64_t sub_2444E44E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_244526664();
  if (!v1)
    *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_2444E4518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_244533ABC();
  if (!v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    v5 = sub_2444FEB80(v3, v4);
    swift_bridgeObjectRelease();
    sub_24452646C(v2, v5);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v0 + 16) = 1;
  }
  return 1;
}

uint64_t sub_2444E45D4()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2444E45F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MaterializedViewBlock()
{
  return objc_opt_self();
}

void type metadata accessor for BMUseCaseIdentifier(uint64_t a1)
{
  sub_2444E4D28(a1, &qword_257367AA8);
}

void type metadata accessor for BMStreamIdentifier(uint64_t a1)
{
  sub_2444E4D28(a1, &qword_257367AB0);
}

uint64_t sub_2444E4674(uint64_t a1, uint64_t a2)
{
  return sub_2444E4A68(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2444E468C(uint64_t a1, uint64_t a2)
{
  return sub_2444E4A68(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2444E46A0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_244533948();
  *a2 = 0;
  return result;
}

uint64_t sub_2444E4714(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_244533954();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2444E4790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_244533960();
  v2 = sub_24453393C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2444E47D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_244533960();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2444E4800()
{
  sub_2444E4A28(&qword_257367B90, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244536028);
  sub_2444E4A28(&qword_257367B98, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244535FC8);
  return sub_244533CC0();
}

uint64_t sub_2444E4884()
{
  sub_2444E4A28(&qword_257367AE8, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_244535E94);
  sub_2444E4A28(&qword_257367AF0, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_244535E3C);
  return sub_244533CC0();
}

uint64_t sub_2444E4908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_24453393C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2444E494C()
{
  sub_2444E4A28(&qword_257367AF8, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_244535D4C);
  sub_2444E4A28(&qword_257367B00, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_244535CEC);
  return sub_244533CC0();
}

uint64_t sub_2444E49D0()
{
  return sub_2444E4A28(&qword_257367AB8, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_244535CB0);
}

uint64_t sub_2444E49FC()
{
  return sub_2444E4A28(&qword_257367AC0, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_244535C84);
}

uint64_t sub_2444E4A28(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2495115A0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2444E4A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_244533960();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2444E4AA4()
{
  sub_244533960();
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2444E4AE4()
{
  uint64_t v0;

  sub_244533960();
  sub_244533EDC();
  sub_2445339CC();
  v0 = sub_244533EF4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2444E4B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_244533960();
  v2 = v1;
  if (v0 == sub_244533960() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2444E4BDC()
{
  return sub_2444E4A28(&qword_257367AC8, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_244535D20);
}

uint64_t sub_2444E4C08()
{
  return sub_2444E4A28(&qword_257367AD0, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_244535E04);
}

uint64_t sub_2444E4C34()
{
  return sub_2444E4A28(&qword_257367AD8, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_244535DDC);
}

uint64_t sub_2444E4C60()
{
  return sub_2444E4A28(&qword_257367AE0, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_244535E6C);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2444E4CB0()
{
  unint64_t result;

  result = qword_257367B08;
  if (!qword_257367B08)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeError, &type metadata for RecipeError);
    atomic_store(result, (unint64_t *)&qword_257367B08);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_2444E4D28(a1, &qword_257367B70);
}

void sub_2444E4D28(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_2444E4D6C()
{
  return sub_2444E4A28(&qword_257367B78, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244535F8C);
}

uint64_t sub_2444E4D98()
{
  return sub_2444E4A28(&qword_257367B80, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244535F60);
}

uint64_t sub_2444E4DC4()
{
  return sub_2444E4A28(&qword_257367B88, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244535FFC);
}

uint64_t dispatch thunk of ProvidesDependencyNames.dependencyNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PoirotDefaultTaskParameters.recipeFolderPath.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PoirotDefaultTaskParameters.loggingPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

PoirotBlocks::PoirotDefaultTaskParameters __swiftcall PoirotDefaultTaskParameters.init(recipeFolderPath:loggingPath:)(Swift::String recipeFolderPath, Swift::String_optional loggingPath)
{
  Swift::String_optional *v2;
  PoirotBlocks::PoirotDefaultTaskParameters result;

  v2->value = recipeFolderPath;
  v2[1] = loggingPath;
  result.loggingPath = loggingPath;
  result.recipeFolderPath = recipeFolderPath;
  return result;
}

BOOL sub_2444E4E68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2444E4E80()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

uint64_t sub_2444E4EC4()
{
  return sub_244533EE8();
}

uint64_t sub_2444E4EEC()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

uint64_t sub_2444E4F2C()
{
  _BYTE *v0;

  if (*v0)
    return 0x50676E6967676F6CLL;
  else
    return 0xD000000000000010;
}

uint64_t sub_2444E4F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444E63E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2444E4F98()
{
  return 0;
}

void sub_2444E4FA4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2444E4FB0()
{
  sub_2444E63A0();
  return sub_244533F48();
}

uint64_t sub_2444E4FD8()
{
  sub_2444E63A0();
  return sub_244533F54();
}

uint64_t PoirotDefaultTaskParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367C00);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444E63A0();
  sub_244533F3C();
  v12 = 0;
  sub_244533D68();
  if (!v2)
  {
    v11 = 1;
    sub_244533D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t PoirotDefaultTaskParameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367C10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444E63A0();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_244533D14();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244533CE4();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2444E52D4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2444E5300()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2444E532C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PoirotDefaultTaskParameters.init(from:)(a1, a2);
}

uint64_t sub_2444E5340(_QWORD *a1)
{
  return PoirotDefaultTaskParameters.encode(to:)(a1);
}

uint64_t PoirotUserTaskParameters.recipeFolderPath.getter()
{
  uint64_t v0;

  v0 = sub_2444E64E8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PoirotUserTaskParameters.loggingPath.getter()
{
  uint64_t v0;

  v0 = sub_2444E64F0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PoirotUserTaskParameters.userDefined.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_244533B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void PoirotUserTaskParameters.init(recipeFolderPath:loggingPath:userDefined:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  type metadata accessor for PoirotUserTaskParameters();
}

uint64_t sub_2444E5444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 56);
  v4 = sub_244533B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

void static PoirotUserTaskParameters.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[8];
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v14[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14[2] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244533B28();
  v16 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14[7] = (char *)v14 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14[4] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v14[6] = (char *)v14 - v13;
  v17 = a3;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  type metadata accessor for PoirotUserTaskParameters();
}

uint64_t sub_2444E5590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(_BYTE *, _QWORD *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  void (*v26)(_BYTE *, uint64_t);
  _BYTE *v27;
  _BYTE *v28;
  char v29;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  void (*v35)(uint64_t, _BYTE *, uint64_t);
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  _BYTE v43[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v6 - 128) = &v43[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v43[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v43[-v15];
  v17 = v5[1];
  v18 = v4[1];
  v24 = *v5 == *v4;
  *(_QWORD *)(v6 - 120) = v19;
  *(_QWORD *)(v6 - 184) = v1;
  if (v24 && v17 == v18)
    v20 = 1;
  else
    v20 = sub_244533DF8();
  v21 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(v8 + 16);
  v21(v16, v5, a1);
  v21(v14, v4, a1);
  if ((v20 & 1) == 0)
  {
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v26(v14, a1);
    v26(v16, a1);
LABEL_16:
    v27 = *(_BYTE **)(v6 - 128);
    v28 = *(_BYTE **)(v6 - 120);
    goto LABEL_17;
  }
  *(_QWORD *)(v6 - 200) = v3;
  v22 = *((_QWORD *)v16 + 3);
  v23 = *((_QWORD *)v14 + 3);
  if (!v22)
  {
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    v26(v14, a1);
    v26(v16, a1);
    v28 = *(_BYTE **)(v6 - 120);
    if (!v23)
    {
      v27 = *(_BYTE **)(v6 - 128);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    v27 = *(_BYTE **)(v6 - 128);
LABEL_17:
    v21(v27, v5, a1);
    v21(v28, v4, a1);
    goto LABEL_18;
  }
  if (!v23)
  {
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    v26(v14, a1);
    v26(v16, a1);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v24 = *((_QWORD *)v16 + 2) == *((_QWORD *)v14 + 2) && v22 == v23;
  if (!v24)
  {
    v25 = sub_244533DF8();
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    v26(v14, a1);
    v26(v16, a1);
    swift_bridgeObjectRelease();
    v27 = *(_BYTE **)(v6 - 128);
    v21(v27, v5, a1);
    v28 = *(_BYTE **)(v6 - 120);
    v21(v28, v4, a1);
    if ((v25 & 1) != 0)
      goto LABEL_27;
LABEL_18:
    v26(v28, a1);
    v26(v27, a1);
    goto LABEL_19;
  }
  v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v26(v14, a1);
  v26(v16, a1);
  swift_bridgeObjectRelease();
  v27 = *(_BYTE **)(v6 - 128);
  v28 = *(_BYTE **)(v6 - 120);
LABEL_26:
  v21(v27, v5, a1);
  v21(v28, v4, a1);
LABEL_27:
  v31 = *(int *)(a1 + 56);
  v32 = &v28[v31];
  v33 = *(_BYTE **)(v6 - 160);
  v34 = &v33[*(int *)(*(_QWORD *)(v6 - 144) + 48)];
  v35 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 136) + 16);
  v35((uint64_t)v33, &v27[v31], v2);
  v35((uint64_t)v34, v32, v2);
  v36 = *(_QWORD *)(v6 - 168);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v38 = *(_QWORD *)(v6 - 200);
  if (v37((uint64_t)v33, 1, v38) == 1)
  {
    v26(*(_BYTE **)(v6 - 120), a1);
    v26(v27, a1);
    if (v37((uint64_t)v34, 1, v38) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v33, v2);
      v29 = 1;
      return v29 & 1;
    }
  }
  else
  {
    v35(*(_QWORD *)(v6 - 152), v33, v2);
    v39 = v36;
    if (v37((uint64_t)v34, 1, v38) != 1)
    {
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
      v41 = *(_QWORD *)(v6 - 192);
      v40(v41, (uint64_t)v34, v38);
      v29 = sub_244533924();
      v42 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v42(v41, v38);
      v26(*(_BYTE **)(v6 - 120), a1);
      v26(v27, a1);
      v42(*(_QWORD *)(v6 - 152), v38);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v33, v2);
      return v29 & 1;
    }
    v26(*(_BYTE **)(v6 - 120), a1);
    v26(v27, a1);
    (*(void (**)(_QWORD, uint64_t))(v36 + 8))(*(_QWORD *)(v6 - 152), v38);
  }
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v6 - 176) + 8))(v33, *(_QWORD *)(v6 - 144));
LABEL_19:
  v29 = 0;
  return v29 & 1;
}

BOOL sub_2444E59EC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_2444E59FC()
{
  return sub_244533EE8();
}

uint64_t sub_2444E5A20(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002445345A0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50676E6967676F6CLL && a2 == 0xEB00000000687461 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6966654472657375 && a2 == 0xEB0000000064656ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2444E5BA0()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

uint64_t sub_2444E5BE4(char a1)
{
  if (!a1)
    return 0xD000000000000010;
  if (a1 == 1)
    return 0x50676E6967676F6CLL;
  return 0x6966654472657375;
}

BOOL sub_2444E5C50(char *a1, char *a2)
{
  return sub_2444E59EC(*a1, *a2);
}

uint64_t sub_2444E5C68()
{
  return sub_2444E5BA0();
}

uint64_t sub_2444E5C78()
{
  return sub_2444E59FC();
}

uint64_t sub_2444E5C88()
{
  sub_244533EDC();
  sub_2444E59FC();
  return sub_244533EF4();
}

uint64_t sub_2444E5CD0()
{
  char *v0;

  return sub_2444E5BE4(*v0);
}

uint64_t sub_2444E5CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444E5A20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2444E5D10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2444E7724();
  *a1 = result;
  return result;
}

uint64_t sub_2444E5D40(uint64_t a1)
{
  MEMORY[0x2495115A0](&unk_244536480, a1);
  return sub_244533F48();
}

uint64_t sub_2444E5D74(uint64_t a1)
{
  MEMORY[0x2495115A0](&unk_244536480, a1);
  return sub_244533F54();
}

void PoirotUserTaskParameters.encode(to:)()
{
  type metadata accessor for PoirotUserTaskParameters.CodingKeys();
}

uint64_t sub_2444E5DF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x2495115A0](&unk_244536480, a1);
  v3 = sub_244533DA4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_244533F3C();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_244533D68();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_244533D50();
    *(_BYTE *)(v2 - 112) = 2;
    sub_244533D5C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void PoirotUserTaskParameters.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[14];

  v11[3] = a5;
  v9 = sub_244533B28();
  v11[1] = *(_QWORD *)(v9 - 8);
  v11[2] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11[8] = (char *)v11 - v10;
  v11[10] = a1;
  v11[11] = a2;
  v11[12] = a3;
  v11[13] = a4;
  type metadata accessor for PoirotUserTaskParameters.CodingKeys();
}

void sub_2444E5FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x2495115A0](&unk_244536480, a1);
  v6 = sub_244533D44();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 144) = v4;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for PoirotUserTaskParameters();
}

uint64_t sub_2444E602C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  *(_QWORD *)(v3 - 192) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (uint64_t *)((char *)&v16 - v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 120) = v1;
  v7 = *(_QWORD *)(v3 - 72);
  sub_244533F18();
  if (v7)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  *(_QWORD *)(v3 - 72) = v4;
  v8 = *(_QWORD *)(v3 - 152);
  v9 = v6;
  v10 = *(_QWORD *)(v3 - 136);
  *(_BYTE *)(v3 - 112) = 0;
  *v9 = sub_244533D14();
  v9[1] = v11;
  *(_BYTE *)(v3 - 112) = 1;
  v9[2] = sub_244533CE4();
  v9[3] = v12;
  *(_BYTE *)(v3 - 112) = 2;
  sub_244533D08();
  (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v3 - 120), v10);
  v13 = *(_QWORD *)(v3 - 192);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 184) + 32))((char *)v9 + *(int *)(v13 + 56), *(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 176));
  v14 = *(_QWORD *)(v3 - 72);
  (*(void (**)(_QWORD, uint64_t *, uint64_t))(v14 + 16))(*(_QWORD *)(v3 - 168), v9, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v9, v13);
}

uint64_t sub_2444E6218()
{
  uint64_t v0;

  v0 = sub_2444E64E8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2444E624C()
{
  uint64_t v0;

  v0 = sub_2444E64F0();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_2444E6280(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  PoirotUserTaskParameters.init(from:)(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_2444E62A0()
{
  PoirotUserTaskParameters.encode(to:)();
}

void sub_2444E62B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static PoirotUserTaskParameters.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t _s12PoirotBlocks0A21DefaultTaskParametersV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_244533DF8(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_244533DF8() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249511588]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_2444E63A0()
{
  unint64_t result;

  result = qword_257367C08;
  if (!qword_257367C08)
  {
    result = MEMORY[0x2495115A0](&unk_2445364D0, &type metadata for PoirotDefaultTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367C08);
  }
  return result;
}

uint64_t sub_2444E63E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002445345A0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50676E6967676F6CLL && a2 == 0xEB00000000687461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2444E64E8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_2444E64F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void type metadata accessor for PoirotUserTaskParameters()
{
  JUMPOUT(0x249511534);
}

void type metadata accessor for PoirotUserTaskParameters.CodingKeys()
{
  JUMPOUT(0x249511534);
}

unint64_t sub_2444E6510(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2444E6544();
  a1[2] = sub_2444E6588();
  result = sub_2444E65CC();
  a1[3] = result;
  return result;
}

unint64_t sub_2444E6544()
{
  unint64_t result;

  result = qword_257367C18;
  if (!qword_257367C18)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotDefaultTaskParameters, &type metadata for PoirotDefaultTaskParameters);
    atomic_store(result, (unint64_t *)&qword_257367C18);
  }
  return result;
}

unint64_t sub_2444E6588()
{
  unint64_t result;

  result = qword_257367C20;
  if (!qword_257367C20)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotDefaultTaskParameters, &type metadata for PoirotDefaultTaskParameters);
    atomic_store(result, (unint64_t *)&qword_257367C20);
  }
  return result;
}

unint64_t sub_2444E65CC()
{
  unint64_t result;

  result = qword_257367C28[0];
  if (!qword_257367C28[0])
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotDefaultTaskParameters, &type metadata for PoirotDefaultTaskParameters);
    atomic_store(result, qword_257367C28);
  }
  return result;
}

uint64_t sub_2444E6610(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotUserTaskParameters<A>);
  a1[2] = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotUserTaskParameters<A>, a2);
  result = MEMORY[0x2495115A0](&protocol conformance descriptor for PoirotUserTaskParameters<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t dispatch thunk of PoirotTaskParametersProtocol.recipeFolderPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PoirotTaskParametersProtocol.loggingPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for PoirotDefaultTaskParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PoirotDefaultTaskParameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PoirotDefaultTaskParameters(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PoirotDefaultTaskParameters(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for PoirotDefaultTaskParameters(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PoirotDefaultTaskParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PoirotDefaultTaskParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PoirotDefaultTaskParameters()
{
  return &type metadata for PoirotDefaultTaskParameters;
}

uint64_t sub_2444E6860()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2444E6868()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244533B28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2444E68E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 32) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    v16 = (void *)(((unint64_t)v14 + v7 + 16) & ~v7);
    v17 = (const void *)(((unint64_t)v15 + v7 + 16) & ~v7);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v17, 1, v4))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v16, v17, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_2444E6A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_2444E6AB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  size_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 16) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 16) & ~v9);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v13 = *(_QWORD *)(v8 + 64);
    else
      v13 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_2444E6BA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  v12 = (void *)(((unint64_t)v7 + v10 + 16) & ~v10);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  v14 = v13(v12, 1, v8);
  if ((_DWORD)v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, v12, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v15);
  return a1;
}

_OWORD *sub_2444E6CFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)v4 + v8 + 16) & ~v8);
  v10 = (const void *)(((unint64_t)v5 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84))
      v11 = *(_QWORD *)(v7 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_2444E6DD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  size_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 16) & ~v11);
  v13 = (void *)(((unint64_t)v8 + v11 + 16) & ~v11);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v14(v12, 1, v9);
  v15 = v14(v13, 1, v9);
  if ((_DWORD)v8)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v12, v13, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v12, v13, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v16);
  return a1;
}

uint64_t sub_2444E6F10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 32) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *(_QWORD *)(a1 + 8);
        if (v17 >= 0xFFFFFFFF)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_2444E7094(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_2444E72F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2444E72F8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_2444E7318()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2444E7320()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2444E7330()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_2444E733C()
{
  return swift_allocateGenericValueMetadata();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Query.UsageState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_2444E73E4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2444E7430 + 4 * byte_2445360F7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2444E7464 + 4 * byte_2445360F2[v4]))();
}

uint64_t sub_2444E7464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E746C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444E7474);
  return result;
}

uint64_t sub_2444E7480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444E7488);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2444E748C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E7494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E74A0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2444E74AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PoirotDefaultTaskParameters.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PoirotDefaultTaskParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2444E7590 + 4 * byte_244536101[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2444E75C4 + 4 * byte_2445360FC[v4]))();
}

uint64_t sub_2444E75C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E75CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444E75D4);
  return result;
}

uint64_t sub_2444E75E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444E75E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2444E75EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E75F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2444E7600(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PoirotDefaultTaskParameters.CodingKeys()
{
  return &type metadata for PoirotDefaultTaskParameters.CodingKeys;
}

unint64_t sub_2444E7620()
{
  unint64_t result;

  result = qword_257367D30;
  if (!qword_257367D30)
  {
    result = MEMORY[0x2495115A0](&unk_2445363A0, &type metadata for PoirotDefaultTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367D30);
  }
  return result;
}

void sub_2444E7664()
{
  JUMPOUT(0x2495115A0);
}

void sub_2444E7674()
{
  JUMPOUT(0x2495115A0);
}

void sub_2444E7684()
{
  JUMPOUT(0x2495115A0);
}

unint64_t sub_2444E7698()
{
  unint64_t result;

  result = qword_257367D38;
  if (!qword_257367D38)
  {
    result = MEMORY[0x2495115A0](&unk_244536310, &type metadata for PoirotDefaultTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367D38);
  }
  return result;
}

unint64_t sub_2444E76E0()
{
  unint64_t result;

  result = qword_257367D40;
  if (!qword_257367D40)
  {
    result = MEMORY[0x2495115A0](&unk_244536338, &type metadata for PoirotDefaultTaskParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367D40);
  }
  return result;
}

uint64_t sub_2444E7724()
{
  return 3;
}

uint64_t sub_2444E772C@<X0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _BYTE *a7@<X8>)
{
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(uint64_t *, _QWORD);
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_BYTE *, uint64_t);
  uint64_t v80;
  uint64_t *v81;
  _BYTE *v82;
  unsigned __int8 *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unsigned __int8 *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _BYTE v93[12];
  int v94;
  void (*v95)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t *v117;

  v107 = a4;
  v112 = a6;
  v108 = a5;
  v109 = a1;
  v103 = a7;
  v98 = sub_244533858();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v10 = &v93[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104 = sub_244533774();
  v100 = *(_QWORD *)(v104 - 8);
  v11 = MEMORY[0x24BDAC7A8](v104);
  v99 = &v93[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v93[-v13];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D48);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v101 = &v93[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v93[-v18];
  v20 = sub_2445337A4();
  v110 = *(_QWORD *)(v20 - 8);
  v111 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v93[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v21);
  v96 = &v93[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v105 = &v93[-v26];
  v106 = type metadata accessor for InferredProtobufType();
  v27 = MEMORY[0x24BDAC7A8](v106);
  v29 = &v93[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = MEMORY[0x24BDAC7A8](v27);
  v102 = &v93[-v31];
  MEMORY[0x24BDAC7A8](v30);
  v33 = &v93[-v32];
  v34 = type metadata accessor for DatasetColumnDescription(0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = &v93[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x24BDAC7A8](v35);
  v117 = (uint64_t *)&v93[-v40];
  v41 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v41 >= *(_QWORD *)(a3 + 16))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v94 = *v109;
  v42 = v117;
  sub_2444E8C24(a3+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v41, (uint64_t)v117);
  sub_2444E8C24((uint64_t)v42, (uint64_t)v37);
  v43 = v108;
  swift_bridgeObjectRetain();
  sub_244526A20((uint64_t)v37, v107, v43, (uint64_t)v33);
  v45 = *v42;
  v44 = v42[1];
  swift_bridgeObjectRetain();
  v46 = sub_24453384C();
  v47 = *(_QWORD *)(v46 + 16);
  v109 = v33;
  if (v47)
  {
    v48 = sub_2444EB9F0(v45, v44);
    v49 = v110;
    if ((v50 & 1) != 0)
    {
      v51 = v111;
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v110 + 16))(v19, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v110 + 72) * v48, v111);
      v52 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56);
      v53 = v19;
      v54 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    v49 = v110;
  }
  v52 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56);
  v53 = v19;
  v54 = 1;
  v51 = v111;
LABEL_8:
  v95 = v52;
  v52((uint64_t)v53, v54, 1, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v49 + 48))(v19, 1, v51) != 1)
  {
    v74 = v105;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 32))(v105, v19, v51);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v23, v74, v51);
    sub_24453378C();
    v75 = sub_244533798();
    v77 = v76;
    v78 = v51;
    v79 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
    v79(v23, v78);
    v80 = v106;
    v81 = (uint64_t *)&v29[*(int *)(v106 + 20)];
    *v81 = v75;
    v81[1] = v77;
    v82 = v102;
    sub_2444E8B9C((uint64_t)v29, (uint64_t)v102);
    v83 = v109;
    if ((sub_244533768() & 1) != 0)
    {
      v84 = *(int *)(v80 + 20);
      v85 = &v82[v84];
      v86 = *(_QWORD *)&v82[v84 + 8];
      v87 = &v83[v84];
      v88 = *((_QWORD *)v87 + 1);
      if (v86)
      {
        if (v88 && (*v85 == *(_QWORD *)v87 && v86 == v88 || (sub_244533DF8() & 1) != 0))
          goto LABEL_19;
      }
      else if (!v88)
      {
LABEL_19:
        sub_2444E8C68((uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
        v79(v105, v111);
        sub_2444E8C68((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
        result = sub_2444E8C68((uint64_t)v117, type metadata accessor for DatasetColumnDescription);
        *v103 = v94;
        return result;
      }
    }
    v115 = 0;
    v116 = 0xE000000000000000;
    sub_244533BAC();
    v89 = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v115 = v107;
    v116 = v89;
    sub_2445339D8();
    swift_bridgeObjectRetain();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    if (*(_QWORD *)&v82[*(int *)(v80 + 20) + 8])
    {
      v113 = 0;
      v114 = 0xE000000000000000;
      sub_2445339D8();
      sub_2445339D8();
    }
    else
    {
      v113 = 0;
      v114 = 0xE000000000000000;
    }
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    if (*(_QWORD *)&v83[*(int *)(v80 + 20) + 8])
    {
      v113 = 0;
      v114 = 0xE000000000000000;
      sub_2445339D8();
      sub_2445339D8();
    }
    else
    {
      v113 = 0;
      v114 = 0xE000000000000000;
    }
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v90 = v115;
    v91 = v116;
    sub_2444E8BE0();
    swift_allocError();
    *(_QWORD *)v92 = v90;
    *(_QWORD *)(v92 + 8) = v91;
    *(_BYTE *)(v92 + 16) = 5;
    swift_willThrow();
    sub_2444E8C68((uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
    v79(v105, v111);
    sub_2444E8C68((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
    return sub_2444E8C68((uint64_t)v117, type metadata accessor for DatasetColumnDescription);
  }
  sub_2444E8B5C((uint64_t)v19);
  v55 = v100;
  v56 = v104;
  (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v100 + 16))(v14, v109, v104);
  v57 = v97;
  v58 = v98;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v97 + 16))(v10, v112, v98);
  swift_bridgeObjectRetain();
  sub_244533828();
  (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v10, v58);
  LOBYTE(v115) = 1;
  v59 = v96;
  sub_244533780();
  v60 = v99;
  sub_24453378C();
  v61 = (*(uint64_t (**)(_BYTE *, uint64_t))(v55 + 88))(v60, v56);
  v62 = *MEMORY[0x24BE74608];
  (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v60, v56);
  if (v61 == v62)
  {
    v63 = sub_244533798();
    if (v64)
    {
      sub_244512B74(&v115, v63, v64);
      swift_bridgeObjectRelease();
    }
  }
  v65 = v117;
  v66 = *v117;
  v67 = v117[1];
  v68 = v110;
  v69 = (uint64_t)v101;
  v70 = v59;
  v71 = v59;
  v72 = v111;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v110 + 16))(v101, v70, v111);
  v95(v69, 0, 1, v72);
  swift_bridgeObjectRetain();
  v73 = (void (*)(uint64_t *, _QWORD))sub_244533840();
  sub_2444FC650(v69, v66, v67);
  v73(&v115, 0);
  (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v71, v72);
  sub_2444E8C68((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
  result = sub_2444E8C68((uint64_t)v65, type metadata accessor for DatasetColumnDescription);
  *v103 = 1;
  return result;
}

uint64_t sub_2444E80BC@<X0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void (*a6)(char *, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *, _QWORD);
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91[2];
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _BYTE v113[40];
  uint64_t v114;
  unint64_t v115;
  __int128 v116;
  uint64_t v117;

  v91[1] = a8;
  v107 = a7;
  v110 = a5;
  v101 = a9;
  v96 = sub_244533858();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_244533774();
  v104 = *(_QWORD *)(v102 - 8);
  v15 = MEMORY[0x24BDAC7A8](v102);
  v97 = (char *)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v93 = (char *)v91 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D48);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v91 - v21;
  v106 = sub_2445337A4();
  v23 = *(_QWORD *)(v106 - 8);
  v24 = MEMORY[0x24BDAC7A8](v106);
  v26 = (char *)v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v98 = (char *)v91 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v103 = (char *)v91 - v29;
  v105 = type metadata accessor for InferredProtobufType();
  v30 = MEMORY[0x24BDAC7A8](v105);
  v32 = (char *)v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v30);
  v100 = (uint64_t)v91 - v34;
  result = MEMORY[0x24BDAC7A8](v33);
  v117 = (uint64_t)v91 - v36;
  v37 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v37 >= *(_QWORD *)(a3 + 16))
  {
LABEL_32:
    __break(1u);
    return result;
  }
  v92 = v26;
  v38 = *a1;
  v39 = a3 + 56 * v37 + 32;
  sub_2444E8AB8(v39, (uint64_t)&v114);
  v109 = a6;
  v40 = v114;
  v41 = v115;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v116);
  v42 = v39;
  v43 = v40;
  v44 = (uint64_t)v109;
  sub_2444E8AB8(v42, (uint64_t)&v114);
  swift_bridgeObjectRelease();
  sub_2444E8B00(&v116, (uint64_t)v113);
  sub_2444E8B18((uint64_t)v113, (uint64_t)&v114);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = v108;
  sub_244526DEC(&v114, a4 & 1, v110, v44, v43, v41, v117);
  if (v45)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    return swift_bridgeObjectRelease();
  }
  LODWORD(v108) = v38;
  swift_bridgeObjectRetain();
  v46 = sub_24453384C();
  v47 = *(_QWORD *)(v46 + 16);
  v91[0] = v43;
  if (v47)
  {
    v48 = sub_2444EB9F0(v43, v41);
    v49 = v106;
    v50 = v23;
    if ((v51 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v22, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v23 + 72) * v48, v106);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v52(v22, 0, 1, v49);
    }
    else
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v52(v22, 1, 1, v106);
    }
  }
  else
  {
    v50 = v23;
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v49 = v106;
    v52(v22, 1, 1, v106);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v22, 1, v49) != 1)
  {
    v66 = v103;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v103, v22, v49);
    v67 = v92;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v92, v66, v49);
    sub_24453378C();
    v68 = sub_244533798();
    v69 = v49;
    v70 = v68;
    v72 = v71;
    v73 = *(void (**)(char *, uint64_t))(v50 + 8);
    v73(v67, v69);
    v74 = v105;
    v75 = &v32[*(int *)(v105 + 20)];
    *(_QWORD *)v75 = v70;
    *((_QWORD *)v75 + 1) = v72;
    v76 = (uint64_t)v32;
    v77 = v100;
    sub_2444E8B9C(v76, v100);
    v78 = v117;
    v79 = sub_244533768();
    v80 = v110;
    v81 = v108;
    if ((v79 & 1) != 0)
    {
      v82 = *(int *)(v74 + 20);
      v83 = (_QWORD *)(v77 + v82);
      v84 = *(_QWORD *)(v77 + v82 + 8);
      v85 = (_QWORD *)(v78 + v82);
      v86 = v85[1];
      if (v84)
      {
        if (v86 && (*v83 == *v85 && v84 == v86 || (sub_244533DF8() & 1) != 0))
          goto LABEL_22;
      }
      else if (!v86)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        sub_2444E8C68(v77, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
        v73(v103, v106);
        sub_2444E8C68(v78, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
        *v101 = v81;
        return result;
      }
    }
    v114 = 0;
    v115 = 0xE000000000000000;
    sub_244533BAC();
    v87 = v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v114 = v80;
    v115 = (unint64_t)v87;
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    if (*(_QWORD *)(v77 + *(int *)(v74 + 20) + 8))
    {
      v111 = 0;
      v112 = 0xE000000000000000;
      sub_2445339D8();
      sub_2445339D8();
    }
    else
    {
      v111 = 0;
      v112 = 0xE000000000000000;
    }
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    if (*(_QWORD *)(v78 + *(int *)(v74 + 20) + 8))
    {
      v111 = 0;
      v112 = 0xE000000000000000;
      sub_2445339D8();
      sub_2445339D8();
    }
    else
    {
      v111 = 0;
      v112 = 0xE000000000000000;
    }
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v88 = v114;
    v89 = v115;
    sub_2444E8BE0();
    swift_allocError();
    *(_QWORD *)v90 = v88;
    *(_QWORD *)(v90 + 8) = v89;
    *(_BYTE *)(v90 + 16) = 5;
    swift_willThrow();
    sub_2444E8C68(v77, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
    v73(v103, v106);
    sub_2444E8C68(v78, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  }
  v109 = v52;
  v110 = 0;
  sub_2444E8B5C((uint64_t)v22);
  v53 = v117;
  v54 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v93, v117, v102);
  v108 = *(_QWORD *)(v53 + *(int *)(v105 + 20));
  v55 = v95;
  v56 = v94;
  v57 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v107, v96);
  swift_bridgeObjectRetain();
  sub_244533828();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  LOBYTE(v114) = 1;
  v58 = v98;
  sub_244533780();
  v59 = v97;
  sub_24453378C();
  v60 = v104;
  LODWORD(v55) = (*(uint64_t (**)(char *, uint64_t))(v104 + 88))(v59, v54);
  LODWORD(v56) = *MEMORY[0x24BE74608];
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v54);
  if ((_DWORD)v55 == (_DWORD)v56)
  {
    v61 = sub_244533798();
    if (v62)
    {
      sub_244512B74(&v114, v61, v62);
      swift_bridgeObjectRelease();
    }
  }
  v63 = (uint64_t)v99;
  v64 = v106;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v99, v58, v106);
  v109((char *)v63, 0, 1, v64);
  v65 = (void (*)(uint64_t *, _QWORD))sub_244533840();
  sub_2444FC650(v63, v91[0], v41);
  v65(&v114, 0);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v58, v64);
  sub_2444E8C68(v117, (uint64_t (*)(_QWORD))type metadata accessor for InferredProtobufType);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  *v101 = 1;
  return result;
}

uint64_t sub_2444E8AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444E8B00(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2444E8B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2444E8B5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2444E8B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InferredProtobufType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2444E8BE0()
{
  unint64_t result;

  result = qword_257367D58;
  if (!qword_257367D58)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetError, &type metadata for DatasetError);
    atomic_store(result, (unint64_t *)&qword_257367D58);
  }
  return result;
}

uint64_t sub_2444E8C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444E8C68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for AggregationRecipe()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AggregationRecipe(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AggregationRecipe(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AggregationRecipe(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationRecipe(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregationRecipe(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregationRecipe()
{
  return &type metadata for AggregationRecipe;
}

BOOL sub_2444E8EB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2444E8EC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2444E8EFC + 4 * byte_244536530[*v0]))(0xD000000000000010, 0x8000000244534500);
}

uint64_t sub_2444E8EFC()
{
  return 0x6556657069636572;
}

uint64_t sub_2444E8F34()
{
  return 0x747069726373;
}

uint64_t sub_2444E8F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444E92D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2444E8F6C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2444E8F78()
{
  sub_2444E9204();
  return sub_244533F48();
}

uint64_t sub_2444E8FA0()
{
  sub_2444E9204();
  return sub_244533F54();
}

uint64_t sub_2444E8FC8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444E9204();
  sub_244533F3C();
  LOBYTE(v11) = 0;
  sub_244533D68();
  if (!v2)
  {
    if (v3[2])
    {
      LOBYTE(v11) = 1;
      sub_244533D8C();
    }
    v11 = v3[3];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
    sub_2444E9780(&qword_257367D78, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_244533D98();
    v11 = v3[4];
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D80);
    sub_2444E97E0(&qword_257367D88, (uint64_t (*)(void))sub_2444E928C, MEMORY[0x24BEE12A0]);
    sub_244533D98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_2444E91AC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_2444E9498(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_2444E91F0(_QWORD *a1)
{
  return sub_2444E8FC8(a1);
}

unint64_t sub_2444E9204()
{
  unint64_t result;

  result = qword_257367D68;
  if (!qword_257367D68)
  {
    result = MEMORY[0x2495115A0](&unk_244536668, &type metadata for AggregationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367D68);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249511594](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_2444E928C()
{
  unint64_t result;

  result = qword_257367D90;
  if (!qword_257367D90)
  {
    result = MEMORY[0x2495115A0](&unk_244538550, &type metadata for BlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367D90);
  }
  return result;
}

uint64_t sub_2444E92D0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000244534500 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556657069636572 && a2 == 0xED00006E6F697372 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445345C0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747069726373 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2444E9498@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444E9204();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v23) = 0;
  v10 = sub_244533D14();
  v12 = v11;
  LOBYTE(v23) = 1;
  swift_bridgeObjectRetain();
  v13 = sub_244533CFC();
  if ((v14 & 1) != 0)
    v15 = 0;
  else
    v15 = v13;
  v21 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
  v22 = 2;
  sub_2444E9780(&qword_257367DA0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_244533D08();
  if (v23)
    v16 = v23;
  else
    v16 = MEMORY[0x24BEE4AF8];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367D80);
  v22 = 3;
  sub_2444E97E0(&qword_257367DA8, (uint64_t (*)(void))sub_2444E9848, MEMORY[0x24BEE12D0]);
  v20 = v16;
  swift_bridgeObjectRetain();
  sub_244533D2C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v23;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v18 = v20;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v21;
  a2[3] = v18;
  a2[4] = v17;
  return result;
}

uint64_t sub_2444E9780(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257367D70);
    v8 = a2;
    result = MEMORY[0x2495115A0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2444E97E0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257367D80);
    v8 = a2();
    result = MEMORY[0x2495115A0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2444E9848()
{
  unint64_t result;

  result = qword_257367DB0;
  if (!qword_257367DB0)
  {
    result = MEMORY[0x2495115A0](&unk_244538578, &type metadata for BlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367DB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AggregationRecipe.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregationRecipe.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2444E9968 + 4 * byte_244536539[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2444E999C + 4 * byte_244536534[v4]))();
}

uint64_t sub_2444E999C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E99A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444E99ACLL);
  return result;
}

uint64_t sub_2444E99B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444E99C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2444E99C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444E99CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AggregationRecipe.CodingKeys()
{
  return &type metadata for AggregationRecipe.CodingKeys;
}

unint64_t sub_2444E99EC()
{
  unint64_t result;

  result = qword_257367DB8;
  if (!qword_257367DB8)
  {
    result = MEMORY[0x2495115A0](&unk_244536640, &type metadata for AggregationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367DB8);
  }
  return result;
}

unint64_t sub_2444E9A34()
{
  unint64_t result;

  result = qword_257367DC0;
  if (!qword_257367DC0)
  {
    result = MEMORY[0x2495115A0](&unk_2445365B0, &type metadata for AggregationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367DC0);
  }
  return result;
}

unint64_t sub_2444E9A7C()
{
  unint64_t result;

  result = qword_257367DC8;
  if (!qword_257367DC8)
  {
    result = MEMORY[0x2495115A0](&unk_2445365D8, &type metadata for AggregationRecipe.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367DC8);
  }
  return result;
}

uint64_t sub_2444E9AC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2444E9AEC + 4 * byte_2445366C0[a1]))(1701667182, 0xE400000000000000);
}

unint64_t sub_2444E9AEC()
{
  return 0xD000000000000010;
}

unint64_t sub_2444E9B08()
{
  return 0xD000000000000011;
}

uint64_t sub_2444E9B40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367DF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444EA214();
  sub_244533F3C();
  v13 = 0;
  sub_244533D68();
  if (!v2)
  {
    v12 = 1;
    sub_244533D74();
    v11 = *(_QWORD *)(v3 + 24);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    sub_2444EA258((unint64_t *)&qword_257367E00, &qword_257367E08, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12A0]);
    sub_244533D98();
    v10[14] = 3;
    sub_244533D50();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2444E9CE8()
{
  unsigned __int8 *v0;

  return sub_2444E9AC0(*v0);
}

uint64_t sub_2444E9CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444EA84C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2444E9D14()
{
  sub_2444EA214();
  return sub_244533F48();
}

uint64_t sub_2444E9D3C()
{
  sub_2444EA214();
  return sub_244533F54();
}

uint64_t sub_2444E9D64()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2444E9D6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2444E9D74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_2444E9DA0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_2444E9F70(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2444E9DE0(_QWORD *a1)
{
  return sub_2444E9B40(a1);
}

uint64_t sub_2444E9DF4(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2444E9EC0((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_2444E9E38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = (*(uint64_t (**)(void))(*(_QWORD *)(a2[1] + 8) + 8))();
  v8 = v7;
  v9 = (*(uint64_t (**)(uint64_t))(a2[3] + 8))(a1);
  result = (*(uint64_t (**)(uint64_t))(a2[2] + 8))(a1);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v9;
  *(_QWORD *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 40) = v11;
  return result;
}

uint64_t sub_2444E9EC0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_244533DF8(), result = 0, (v5 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && (sub_24450013C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) != 0)
    {
      v7 = *(_QWORD *)(a1 + 40);
      v8 = *(_QWORD *)(a2 + 40);
      if (v7)
      {
        if (v8 && (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v7 == v8 || (sub_244533DF8() & 1) != 0))
          return 1;
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2444E9F70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367DD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444EA214();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v9 = sub_244533D14();
  v11 = v10;
  v23 = 1;
  swift_bridgeObjectRetain();
  v20 = sub_244533CF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
  v22 = 2;
  sub_2444EA258(&qword_257367DE8, &qword_257367DF0, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12D0]);
  sub_244533D2C();
  v21 = 3;
  v19[0] = v19[1];
  swift_bridgeObjectRetain();
  v12 = sub_244533CE4();
  v14 = v13;
  v20 &= 1u;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v17 = v19[0];
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v14;
  return result;
}

unint64_t sub_2444EA214()
{
  unint64_t result;

  result = qword_257367DD8;
  if (!qword_257367DD8)
  {
    result = MEMORY[0x2495115A0](&unk_244536880, &type metadata for ExtractionBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367DD8);
  }
  return result;
}

uint64_t sub_2444EA258(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257367DE0);
    v10 = sub_2444EA2D4(a2, a3);
    result = MEMORY[0x2495115A0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2444EA2D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DatasetColumnDescription(255);
    result = MEMORY[0x2495115A0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExtractionBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2444EA360 + 4 * byte_2445366C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2444EA394 + 4 * byte_2445366C4[v4]))();
}

uint64_t sub_2444EA394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444EA39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444EA3A4);
  return result;
}

uint64_t sub_2444EA3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444EA3B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2444EA3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444EA3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExtractionBlockConfig.CodingKeys()
{
  return &type metadata for ExtractionBlockConfig.CodingKeys;
}

uint64_t destroy for ExtractionBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExtractionBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationBlockConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregationBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtractionBlockConfig()
{
  return &type metadata for ExtractionBlockConfig;
}

unint64_t sub_2444EA60C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2444EA640();
  a1[2] = sub_2444EA684();
  result = sub_2444EA6C8();
  a1[3] = result;
  return result;
}

unint64_t sub_2444EA640()
{
  unint64_t result;

  result = qword_257367E10;
  if (!qword_257367E10)
  {
    result = MEMORY[0x2495115A0](&unk_244536768, &type metadata for ExtractionBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367E10);
  }
  return result;
}

unint64_t sub_2444EA684()
{
  unint64_t result;

  result = qword_257367E18;
  if (!qword_257367E18)
  {
    result = MEMORY[0x2495115A0](&unk_244536740, &type metadata for ExtractionBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367E18);
  }
  return result;
}

unint64_t sub_2444EA6C8()
{
  unint64_t result;

  result = qword_257367E20;
  if (!qword_257367E20)
  {
    result = MEMORY[0x2495115A0](&unk_244536718, &type metadata for ExtractionBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367E20);
  }
  return result;
}

unint64_t sub_2444EA710()
{
  unint64_t result;

  result = qword_257367E28;
  if (!qword_257367E28)
  {
    result = MEMORY[0x2495115A0](&unk_24453683C, &type metadata for ExtractionBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367E28);
  }
  return result;
}

unint64_t sub_2444EA754(uint64_t a1)
{
  unint64_t result;

  result = sub_2444EA778();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2444EA778()
{
  unint64_t result;

  result = qword_257367E30;
  if (!qword_257367E30)
  {
    result = MEMORY[0x2495115A0](&unk_244536790, &type metadata for ExtractionBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257367E30);
  }
  return result;
}

unint64_t sub_2444EA7C0()
{
  unint64_t result;

  result = qword_257367E38;
  if (!qword_257367E38)
  {
    result = MEMORY[0x2495115A0](&unk_2445367AC, &type metadata for ExtractionBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367E38);
  }
  return result;
}

unint64_t sub_2444EA808()
{
  unint64_t result;

  result = qword_257367E40;
  if (!qword_257367E40)
  {
    result = MEMORY[0x2495115A0](&unk_2445367D4, &type metadata for ExtractionBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257367E40);
  }
  return result;
}

uint64_t sub_2444EA84C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445345E0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244534600 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244534580)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2444EA9DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  v4 = sub_24453381C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_2444EAA44(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_24453381C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_2444EAB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  v4 = sub_24453381C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ProtobufFactory.messageNameMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProtobufFactory.__allocating_init(manifest:messageNameMap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  v8 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  v9 = sub_244533720();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v11 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  v12 = sub_24453381C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
  v10((uint64_t)v6, 1, 1, v9);
  v13 = v7 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EADEC((uint64_t)v6, v13);
  swift_endAccess();
  return v7;
}

uint64_t ProtobufFactory.init(manifest:messageNameMap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)(v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store);
  v9 = sub_244533720();
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v11 = v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  v12 = sub_24453381C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
  v10(v7, 1, 1, v9);
  v13 = v2 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EADEC((uint64_t)v7, v13);
  swift_endAccess();
  return v2;
}

uint64_t sub_2444EADEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444EAE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v3 = sub_24453381C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v19 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EC060(v12, (uint64_t)v11);
  v13 = sub_244533720();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v11, v13);
  sub_2444EC024((uint64_t)v11, &qword_257367E48);
  v15 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v15, v3);
  v16 = v20;
  sub_244533708();
  v20 = v16;
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_getObjectType();
  sub_244533894();
  swift_unknownObjectRelease();
  v18 = (uint64_t)v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, a1, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  swift_beginAccess();
  sub_2444EADEC(v18, v12);
  return swift_endAccess();
}

uint64_t sub_2444EB078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24453381C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  swift_endAccess();
  v11 = sub_244533720();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  v12 = v1 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EADEC((uint64_t)v5, v12);
  return swift_endAccess();
}

uint64_t sub_2444EB1C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  v5 = sub_244533720();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2445337BC();
  v17 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v16 = a1[2];
  if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2444EB9F0(v12, v11);
    if ((v13 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  v14 = v3;
  sub_2444EAE34((uint64_t)v8);
  if (!v2)
  {
    sub_244533714();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = sub_2445337B0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2444EB3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[4];

  v14[3] = a3;
  v14[1] = a2;
  v5 = sub_244533720();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2445337BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2444EAE34((uint64_t)v8);
  if (!v4)
  {
    sub_244533714();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3 = sub_2445337B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v3;
}

uint64_t ProtobufFactory.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  v2 = sub_24453381C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_2444EC024(v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store, &qword_257367E48);
  return v0;
}

uint64_t ProtobufFactory.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  v2 = sub_24453381C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_2444EC024(v0 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store, &qword_257367E48);
  return swift_deallocClassInstance();
}

uint64_t sub_2444EB5FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2444EB610(uint64_t *a1)
{
  return sub_2444EB1C4(a1);
}

uint64_t sub_2444EB630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[4];

  v15[3] = a3;
  v15[1] = a2;
  v5 = sub_244533720();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2445337BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  sub_2444EAE34((uint64_t)v8);
  if (!v4)
  {
    sub_244533714();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = sub_2445337B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_2444EB79C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, __int128 *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;
  int64_t v29;

  v21 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    sub_2444E8B18(*(_QWORD *)(a1 + 56) + 40 * i, (uint64_t)v27);
    *(_QWORD *)&v26 = v16;
    *((_QWORD *)&v26 + 1) = v17;
    v22 = v26;
    v23 = v27[0];
    v24 = v27[1];
    v25 = v28;
    v18 = v26;
    swift_bridgeObjectRetain();
    if ((a2(v18, *((_QWORD *)&v18 + 1), &v23) & 1) != 0)
    {
      result = swift_release();
      v19 = v23;
      *(_OWORD *)a3 = v22;
      *(_OWORD *)(a3 + 16) = v19;
      *(_OWORD *)(a3 + 32) = v24;
      *(_QWORD *)(a3 + 48) = v25;
      return result;
    }
    result = sub_2444EC024((uint64_t)&v22, &qword_257367F78);
    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v29)
      goto LABEL_25;
    v13 = *(_QWORD *)(v21 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_25;
      v13 = *(_QWORD *)(v21 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_25;
        v13 = *(_QWORD *)(v21 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v29)
            goto LABEL_25;
          v13 = *(_QWORD *)(v21 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_20:
    v7 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v29)
  {
LABEL_25:
    result = swift_release();
    *(_QWORD *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    return result;
  }
  v13 = *(_QWORD *)(v21 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v29)
      goto LABEL_25;
    v13 = *(_QWORD *)(v21 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_2444EB9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_244533EDC();
  sub_2445339CC();
  v4 = sub_244533EF4();
  return sub_2444EBCB4(a1, a2, v4);
}

uint64_t sub_2444EBA5C()
{
  return type metadata accessor for ProtobufFactory();
}

uint64_t type metadata accessor for ProtobufFactory()
{
  uint64_t result;

  result = qword_257367E80;
  if (!qword_257367E80)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2444EBAA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24453381C();
  if (v0 <= 0x3F)
  {
    sub_2444EBB98();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ProtobufFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProtobufFactory.manifest.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ProtobufFactory.__allocating_init(manifest:messageNameMap:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ProtobufFactory.updateManifest(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ProtobufFactory.makeFlatMessagePayload(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ProtobufFactory.makeFlatMessagePayload(with:messageName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_2444EBB98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257367E90)
  {
    sub_244533720();
    v0 = sub_244533B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257367E90);
  }
}

unint64_t sub_2444EBBEC(uint64_t a1)
{
  uint64_t v2;

  sub_244533C6C();
  v2 = sub_2445338E8();
  return sub_2444EBD94(a1, v2);
}

unint64_t sub_2444EBC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_244533EDC();
  DatasetRow.hash(into:)();
  v6 = sub_244533EF4();
  return sub_2444EBEBC(a1, a2, a3, v6);
}

unint64_t sub_2444EBCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_244533DF8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_244533DF8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2444EBD94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_244533C6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_244533924();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2444EBEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[8];
  uint64_t v13;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v8 = ~v5;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 24 * v6 + 16) + 16) == *(_QWORD *)(a3 + 16))
      {
        MEMORY[0x24BDAC7A8](a1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = swift_bridgeObjectRetain();
        sub_2444EB79C(v9, (uint64_t (*)(_QWORD, _QWORD, __int128 *))sub_2444EC018, (uint64_t)v12);
        swift_bridgeObjectRelease();
        v10 = v13;
        sub_2444EC024((uint64_t)v12, &qword_257367F70);
        swift_bridgeObjectRelease();
        a1 = swift_bridgeObjectRelease();
        if (!v10)
          break;
      }
      v6 = (v6 + 1) & v8;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_2444EC018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_2444EC93C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2444EC024(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2444EC060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for VoidLogger()
{
  return &type metadata for VoidLogger;
}

uint64_t DatasetRow.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetRow.cells.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatasetRow.init(name:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t DatasetRow.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  int64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[7];
  _BYTE v37[40];
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;
  __int128 v41;
  _OWORD v42[2];
  uint64_t v43;
  _QWORD v44[2];
  _BYTE v45[40];
  unsigned __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v50 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2444F0D30(0, v2, 0);
    v4 = sub_2444F1CD8(v1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(v1 + 32))
      {
        v7 = 0;
        v8 = v1 + 64;
        v31 = v1 + 80;
        v32 = v2;
        v33 = v5;
        v34 = v1 + 64;
        v35 = v1;
        do
        {
          v9 = v6 >> 6;
          if ((*(_QWORD *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
            goto LABEL_34;
          if (*(_DWORD *)(v1 + 36) != v5)
            goto LABEL_35;
          v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
          v12 = *v10;
          v11 = v10[1];
          sub_2444E8B18(*(_QWORD *)(v1 + 56) + 40 * v6, (uint64_t)v45);
          v44[0] = v12;
          v44[1] = v11;
          *(_QWORD *)&v41 = v12;
          *((_QWORD *)&v41 + 1) = v11;
          sub_2444E8B18((uint64_t)v45, (uint64_t)v42);
          v38 = v41;
          v39[0] = v42[0];
          v39[1] = v42[1];
          v40 = v43;
          swift_bridgeObjectRetain_n();
          sub_2444EC024((uint64_t)v44, &qword_257367F78);
          v13 = *((_QWORD *)&v38 + 1);
          v14 = v38;
          *(_OWORD *)&v36[5] = v38;
          sub_2444E8B18((uint64_t)v39, (uint64_t)v37);
          v46 = __PAIR128__(v13, v14);
          sub_2444E8B18((uint64_t)v39, (uint64_t)v36);
          sub_2444E8B00((__int128 *)v36, (uint64_t)&v47);
          swift_bridgeObjectRetain();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
          sub_2444EC024((uint64_t)&v38, &qword_257367F78);
          v3 = v50;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2444F0D30(0, *(_QWORD *)(v3 + 16) + 1, 1);
            v3 = v50;
          }
          v16 = *(_QWORD *)(v3 + 16);
          v15 = *(_QWORD *)(v3 + 24);
          v1 = v35;
          if (v16 >= v15 >> 1)
          {
            sub_2444F0D30(v15 > 1, v16 + 1, 1);
            v3 = v50;
          }
          *(_QWORD *)(v3 + 16) = v16 + 1;
          v17 = v3 + 56 * v16;
          v18 = v46;
          v19 = v47;
          v20 = v48;
          *(_QWORD *)(v17 + 80) = v49;
          *(_OWORD *)(v17 + 48) = v19;
          *(_OWORD *)(v17 + 64) = v20;
          *(_OWORD *)(v17 + 32) = v18;
          v21 = 1 << *(_BYTE *)(v35 + 32);
          if ((uint64_t)v6 >= v21)
            goto LABEL_36;
          v8 = v34;
          v22 = *(_QWORD *)(v34 + 8 * v9);
          if ((v22 & (1 << v6)) == 0)
            goto LABEL_37;
          v5 = v33;
          if (*(_DWORD *)(v35 + 36) != v33)
            goto LABEL_38;
          v23 = v22 & (-2 << (v6 & 0x3F));
          if (v23)
          {
            v6 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
            v24 = v32;
            goto LABEL_23;
          }
          v25 = v9 + 1;
          v26 = (unint64_t)(v21 + 63) >> 6;
          v24 = v32;
          if (v9 + 1 < v26)
          {
            v27 = *(_QWORD *)(v34 + 8 * v25);
            if (v27)
            {
LABEL_21:
              v6 = __clz(__rbit64(v27)) + (v25 << 6);
              goto LABEL_23;
            }
            while (v26 - 2 != v9)
            {
              v27 = *(_QWORD *)(v31 + 8 * v9++);
              if (v27)
              {
                v25 = v9 + 1;
                goto LABEL_21;
              }
            }
          }
          v6 = 1 << *(_BYTE *)(v35 + 32);
LABEL_23:
          if (++v7 == v24)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        while ((v6 & 0x8000000000000000) == 0 && (uint64_t)v6 < v21);
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_28:
    *(_QWORD *)&v46 = v3;
    swift_bridgeObjectRetain();
    sub_2444EF1C4((uint64_t *)&v46, (uint64_t (*)(uint64_t))sub_2444F1C44, sub_2444EF23C);
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v46 + 16);
    if (v28)
    {
      v29 = v46 + 32;
      swift_retain();
      do
      {
        sub_2444E8AB8(v29, (uint64_t)&v46);
        sub_2445339CC();
        __swift_project_boxed_opaque_existential_1(&v47, *((uint64_t *)&v48 + 1));
        sub_2445338F4();
        sub_2444EC024((uint64_t)&v46, &qword_257367D50);
        v29 += 56;
        --v28;
      }
      while (v28);
      return swift_release_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t DatasetRow.hashValue.getter()
{
  sub_244533EDC();
  DatasetRow.hash(into:)();
  return sub_244533EF4();
}

uint64_t sub_2444EC57C()
{
  sub_244533EDC();
  DatasetRow.hash(into:)();
  return sub_244533EF4();
}

uint64_t sub_2444EC5D0()
{
  sub_244533EDC();
  DatasetRow.hash(into:)();
  return sub_244533EF4();
}

uint64_t sub_2444EC620(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = v6;
  sub_2444F23A8(v5, (uint64_t)sub_2444F1C04, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v10, v1, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v10;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
    *(_QWORD *)(v1 + 16) = v8;
  return result;
}

uint64_t sub_2444EC6F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((sub_244533684() & 1) != 0)
    return sub_2444E8B18((uint64_t)a1, a4);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_244533BAC();
  sub_2445339D8();
  v10 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain_n();
  v11 = sub_244505CCC(v10);
  swift_bridgeObjectRelease();
  v16 = v11;
  sub_2444EF1C4((uint64_t *)&v16, sub_2444F1C58, sub_2444EFA30);
  if (v4)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    MEMORY[0x249510CC4](v16, MEMORY[0x24BEE0D00]);
    swift_release();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    swift_bridgeObjectRetain_n();
    v12 = sub_244505CCC(a3);
    swift_bridgeObjectRelease();
    v16 = v12;
    sub_2444EF1C4((uint64_t *)&v16, sub_2444F1C58, sub_2444EFA30);
    swift_bridgeObjectRelease();
    MEMORY[0x249510CC4](v16, MEMORY[0x24BEE0D00]);
    swift_release();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    v13 = v17;
    v14 = v18;
    sub_2444E8BE0();
    swift_allocError();
    *(_QWORD *)v15 = v13;
    *(_QWORD *)(v15 + 8) = v14;
    *(_BYTE *)(v15 + 16) = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2444EC93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v9;
  char v10;
  char v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[4];

  if (!*(_QWORD *)(a6 + 16))
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v9 = sub_2444EB9F0(a1, a2);
  if ((v10 & 1) == 0)
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_2444E8B18(*(_QWORD *)(a6 + 56) + 40 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_7:
    sub_2444EC024((uint64_t)&v13, &qword_257367FB0);
    v11 = 1;
    return v11 & 1;
  }
  sub_2444E8B00(&v13, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v11 = sub_244533684() ^ 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v11 & 1;
}

uint64_t sub_2444ECA38(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368038);
  v36 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444ECD4C(uint64_t a1, int a2)
{
  return sub_2444EE7FC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE74690], &qword_257368088);
}

uint64_t sub_2444ECD60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F90);
  v37 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_2444E8B00(v25, (uint64_t)v38);
    }
    else
    {
      sub_2444E8B18((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_2444E8B00(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444ED084(uint64_t a1, int a2)
{
  return sub_2444EE7FC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_257368040);
}

uint64_t sub_2444ED098(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680C0);
  v39 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v34 = *(_QWORD *)v33;
    v40 = *(_OWORD *)(v33 + 8);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444ED3D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for DatasetColumnDescription(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FF0);
  v43 = a2;
  v9 = sub_244533C9C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_2444F27D4(v30, (uint64_t)v7);
    }
    else
    {
      sub_2444E8C24(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_2444F27D4((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_2444ED740(uint64_t a1, char a2)
{
  return sub_2444EE4D8(a1, a2, &qword_257368010);
}

uint64_t sub_2444ED74C(uint64_t a1, char a2)
{
  return sub_2444EE4D8(a1, a2, &qword_257368008);
}

uint64_t sub_2444ED758(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_244533C6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368048);
  v39 = a2;
  v10 = sub_244533C9C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_2444F2854((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_2444F2818(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_2445338E8();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_2444F2854(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_2444EDADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680A8);
  v40 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v34 = *(_QWORD *)v32;
      v33 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_2444F2864(v34, v33, v35);
      }
      sub_244533EDC();
      sub_2445339CC();
      result = sub_244533EF4();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v34;
      *(_QWORD *)(v19 + 8) = v33;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444EDE04(uint64_t a1, int a2)
{
  return sub_2444EE7FC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE74740], &qword_257368080);
}

uint64_t sub_2444EDE18(uint64_t a1, int a2)
{
  return sub_2444EDE40(a1, a2, &qword_257368060, &qword_257368068);
}

uint64_t sub_2444EDE2C(uint64_t a1, int a2)
{
  return sub_2444EDE40(a1, a2, &qword_257367FC8, &qword_257367FD0);
}

uint64_t sub_2444EDE40(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_244533C9C();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_244533EDC();
      sub_2445339CC();
      result = sub_244533EF4();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_2444EE1A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368058);
  v42 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444EE4CC(uint64_t a1, char a2)
{
  return sub_2444EE4D8(a1, a2, &qword_257368050);
}

uint64_t sub_2444EE4D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_244533C9C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2444EE7E8(uint64_t a1, int a2)
{
  return sub_2444EE7FC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE745E8], &qword_257368090);
}

uint64_t sub_2444EE7FC(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_244533C9C();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_244533EDC();
      sub_2445339CC();
      result = sub_244533EF4();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_2444EEB60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368098);
  v37 = a2;
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_244533EDC();
    sub_2445339CC();
    result = sub_244533EF4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444EEE68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA8);
  v6 = sub_244533C9C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_31;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v39)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v40 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v39)
        goto LABEL_33;
      v26 = *(_QWORD *)(v40 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v40 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v26 = *(_QWORD *)(v40 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v13 = v27;
      }
    }
LABEL_30:
    v10 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_31:
    v32 = 24 * v23;
    v33 = *(_QWORD *)(v5 + 48) + v32;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v5 + 56) + v32;
    v36 = *(_QWORD *)v35;
    v41 = *(_OWORD *)(v35 + 8);
    v42 = *(_OWORD *)(v33 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244533EDC();
    DatasetRow.hash(into:)();
    result = sub_244533EF4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      v18 = v42;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v14) >> 6;
      v18 = v42;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v16 == v29;
        if (v16 == v29)
          v16 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v19 = 24 * v17;
    v20 = *(_QWORD *)(v7 + 48) + v19;
    *(_QWORD *)v20 = v34;
    *(_OWORD *)(v20 + 8) = v18;
    v21 = *(_QWORD *)(v7 + 56) + v19;
    *(_QWORD *)v21 = v36;
    *(_OWORD *)(v21 + 8) = v41;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v25 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2444EF1C4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_2444EF23C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *__dst;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v2 = a1;
  v3 = a1[1];
  result = sub_244533DB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_2444F0118(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v110 = result;
  v119 = v1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v109 = MEMORY[0x24BEE4AF8];
    if (v3 != 1)
    {
      v10 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_117:
      v100 = v8;
      if (v10 >= 2)
      {
        v101 = *v2;
        do
        {
          v102 = v10 - 2;
          if (v10 < 2)
            goto LABEL_145;
          if (!v101)
            goto LABEL_157;
          v103 = v100;
          v104 = *(_QWORD *)&v100[16 * v102 + 32];
          v105 = *(_QWORD *)&v100[16 * v10 + 24];
          v106 = v119;
          sub_2444F0340((char *)(v101 + 56 * v104), (char *)(v101 + 56 * *(_QWORD *)&v100[16 * v10 + 16]), v101 + 56 * v105, __dst);
          v119 = v106;
          if (v106)
            break;
          if (v105 < v104)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v103 = sub_2444F0D1C((uint64_t)v103);
          if (v102 >= *((_QWORD *)v103 + 2))
            goto LABEL_147;
          v107 = &v103[16 * v102 + 32];
          *(_QWORD *)v107 = v104;
          *((_QWORD *)v107 + 1) = v105;
          v108 = *((_QWORD *)v103 + 2);
          if (v10 > v108)
            goto LABEL_148;
          memmove(&v103[16 * v10 + 16], &v103[16 * v10 + 32], 16 * (v108 - v10));
          v100 = v103;
          *((_QWORD *)v103 + 2) = v108 - 1;
          v10 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D50);
    v7 = sub_244533A74();
    *(_QWORD *)(v7 + 16) = v6;
    v109 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v11 = v9++;
    if (v9 >= v3)
      goto LABEL_43;
    v12 = *v2;
    sub_2444E8AB8(*v2 + 56 * v9, (uint64_t)&v117);
    v13 = v12;
    sub_2444E8AB8(v12 + 56 * v11, (uint64_t)&v115);
    if (v117 == v115 && v118 == v116)
      v15 = 0;
    else
      v15 = sub_244533DF8();
    sub_2444EC024((uint64_t)&v115, &qword_257367D50);
    sub_2444EC024((uint64_t)&v117, &qword_257367D50);
    v9 = v11 + 2;
    if (v11 + 2 >= v3)
    {
      if ((v15 & 1) == 0)
        goto LABEL_43;
LABEL_36:
      if (v9 < v11)
        goto LABEL_151;
      if (v11 < v9)
      {
        v19 = v13 + 56 * v9 - 56;
        v20 = (__int128 *)(v13 + 56 * v11);
        v21 = v9;
        v22 = v11;
        while (1)
        {
          if (v22 != --v21)
          {
            if (!v13)
              goto LABEL_156;
            v23 = *((_QWORD *)v20 + 6);
            v25 = v20[1];
            v24 = v20[2];
            v26 = *v20;
            v28 = *(_OWORD *)(v19 + 16);
            v27 = *(_OWORD *)(v19 + 32);
            v29 = *(_OWORD *)v19;
            *((_QWORD *)v20 + 6) = *(_QWORD *)(v19 + 48);
            v20[1] = v28;
            v20[2] = v27;
            *v20 = v29;
            *(_OWORD *)v19 = v26;
            *(_OWORD *)(v19 + 16) = v25;
            *(_OWORD *)(v19 + 32) = v24;
            *(_QWORD *)(v19 + 48) = v23;
          }
          ++v22;
          v19 -= 56;
          v20 = (__int128 *)((char *)v20 + 56);
          if (v22 >= v21)
            goto LABEL_43;
        }
      }
      goto LABEL_43;
    }
    v111 = v13;
    v16 = v13 + 56 * v11 + 56;
    while (1)
    {
      sub_2444E8AB8(v16 + 56, (uint64_t)&v117);
      sub_2444E8AB8(v16, (uint64_t)&v115);
      v17 = v117 == v115 && v118 == v116;
      v18 = v17 ? 0 : sub_244533DF8();
      sub_2444EC024((uint64_t)&v115, &qword_257367D50);
      sub_2444EC024((uint64_t)&v117, &qword_257367D50);
      if (((v15 ^ v18) & 1) != 0)
        break;
      ++v9;
      v16 += 56;
      if (v3 == v9)
      {
        v9 = v3;
        break;
      }
    }
    v13 = v111;
    if ((v15 & 1) != 0)
      goto LABEL_36;
LABEL_43:
    if (v9 >= v3)
      goto LABEL_66;
    if (__OFSUB__(v9, v11))
      goto LABEL_149;
    if (v9 - v11 >= v110)
      goto LABEL_66;
    if (__OFADD__(v11, v110))
      goto LABEL_152;
    v30 = v11;
    v31 = v11 + v110 >= v3 ? v3 : v11 + v110;
    v112 = v30;
    if (v31 < v30)
      break;
    if (v9 != v31)
    {
      v32 = 56 * v9;
      do
      {
        v33 = v112;
        v34 = v32;
        while (1)
        {
          v35 = *v2 + v34;
          sub_2444E8AB8(v35, (uint64_t)&v117);
          sub_2444E8AB8(v35 - 56, (uint64_t)&v115);
          if (v117 == v115 && v118 == v116)
            break;
          v37 = sub_244533DF8();
          sub_2444EC024((uint64_t)&v115, &qword_257367D50);
          sub_2444EC024((uint64_t)&v117, &qword_257367D50);
          if ((v37 & 1) == 0)
            goto LABEL_54;
          if (!*v2)
            goto LABEL_154;
          v38 = *v2 + v34;
          v39 = *(_QWORD *)(v38 + 48);
          v41 = *(_OWORD *)(v38 + 16);
          v40 = *(_OWORD *)(v38 + 32);
          v42 = *(_OWORD *)v38;
          v43 = *(_OWORD *)(v38 - 40);
          *(_OWORD *)v38 = *(_OWORD *)(v38 - 56);
          *(_OWORD *)(v38 + 16) = v43;
          *(_OWORD *)(v38 + 32) = *(_OWORD *)(v38 - 24);
          *(_QWORD *)(v38 + 48) = *(_QWORD *)(v38 - 8);
          *(_OWORD *)(v38 - 56) = v42;
          *(_OWORD *)(v38 - 40) = v41;
          *(_OWORD *)(v38 - 24) = v40;
          v34 -= 56;
          ++v33;
          *(_QWORD *)(v38 - 8) = v39;
          if (v9 == v33)
            goto LABEL_54;
        }
        sub_2444EC024((uint64_t)&v115, &qword_257367D50);
        sub_2444EC024((uint64_t)&v117, &qword_257367D50);
LABEL_54:
        ++v9;
        v32 += 56;
      }
      while (v9 != v31);
      v9 = v31;
    }
    v11 = v112;
LABEL_66:
    if (v9 < v11)
      goto LABEL_144;
    v44 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_2444F0998(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v46 = *((_QWORD *)v8 + 2);
    v45 = *((_QWORD *)v8 + 3);
    v10 = v46 + 1;
    if (v46 >= v45 >> 1)
      v8 = sub_2444F0998((char *)(v45 > 1), v46 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v10;
    v47 = v8 + 32;
    v48 = &v8[16 * v46 + 32];
    *(_QWORD *)v48 = v44;
    *((_QWORD *)v48 + 1) = v9;
    if (v46)
    {
      v113 = v9;
      while (1)
      {
        v49 = v10 - 1;
        if (v10 >= 4)
        {
          v54 = &v47[16 * v10];
          v55 = *((_QWORD *)v54 - 8);
          v56 = *((_QWORD *)v54 - 7);
          v60 = __OFSUB__(v56, v55);
          v57 = v56 - v55;
          if (v60)
            goto LABEL_133;
          v59 = *((_QWORD *)v54 - 6);
          v58 = *((_QWORD *)v54 - 5);
          v60 = __OFSUB__(v58, v59);
          v52 = v58 - v59;
          v53 = v60;
          if (v60)
            goto LABEL_134;
          v61 = v10 - 2;
          v62 = &v47[16 * v10 - 32];
          v64 = *(_QWORD *)v62;
          v63 = *((_QWORD *)v62 + 1);
          v60 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          if (v60)
            goto LABEL_136;
          v60 = __OFADD__(v52, v65);
          v66 = v52 + v65;
          if (v60)
            goto LABEL_139;
          if (v66 >= v57)
          {
            v84 = &v47[16 * v49];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v60 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v60)
              goto LABEL_143;
            v77 = v52 < v87;
            goto LABEL_104;
          }
        }
        else
        {
          if (v10 != 3)
          {
            v78 = *((_QWORD *)v8 + 4);
            v79 = *((_QWORD *)v8 + 5);
            v60 = __OFSUB__(v79, v78);
            v71 = v79 - v78;
            v72 = v60;
            goto LABEL_98;
          }
          v51 = *((_QWORD *)v8 + 4);
          v50 = *((_QWORD *)v8 + 5);
          v60 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          v53 = v60;
        }
        if ((v53 & 1) != 0)
          goto LABEL_135;
        v61 = v10 - 2;
        v67 = &v47[16 * v10 - 32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v70 = __OFSUB__(v68, v69);
        v71 = v68 - v69;
        v72 = v70;
        if (v70)
          goto LABEL_138;
        v73 = &v47[16 * v49];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v60 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v60)
          goto LABEL_141;
        if (__OFADD__(v71, v76))
          goto LABEL_142;
        if (v71 + v76 >= v52)
        {
          v77 = v52 < v76;
LABEL_104:
          if (v77)
            v49 = v61;
          goto LABEL_106;
        }
LABEL_98:
        if ((v72 & 1) != 0)
          goto LABEL_137;
        v80 = &v47[16 * v49];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v60 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v60)
          goto LABEL_140;
        if (v83 < v71)
          goto LABEL_14;
LABEL_106:
        v88 = v49 - 1;
        if (v49 - 1 >= v10)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        v89 = *v2;
        if (!*v2)
          goto LABEL_155;
        v90 = v8;
        v91 = v2;
        v92 = &v47[16 * v88];
        v93 = *(_QWORD *)v92;
        v94 = v47;
        v95 = v49;
        v96 = &v47[16 * v49];
        v97 = *((_QWORD *)v96 + 1);
        v98 = v119;
        sub_2444F0340((char *)(v89 + 56 * *(_QWORD *)v92), (char *)(v89 + 56 * *(_QWORD *)v96), v89 + 56 * v97, __dst);
        v119 = v98;
        if (v98)
          goto LABEL_114;
        if (v97 < v93)
          goto LABEL_130;
        if (v95 > *((_QWORD *)v90 + 2))
          goto LABEL_131;
        *(_QWORD *)v92 = v93;
        *(_QWORD *)&v94[16 * v88 + 8] = v97;
        v99 = *((_QWORD *)v90 + 2);
        if (v95 >= v99)
          goto LABEL_132;
        v8 = v90;
        v10 = v99 - 1;
        memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
        v47 = v94;
        *((_QWORD *)v90 + 2) = v99 - 1;
        v2 = v91;
        v9 = v113;
        if (v99 <= 2)
          goto LABEL_14;
      }
    }
    v10 = 1;
LABEL_14:
    v3 = v2[1];
    if (v9 >= v3)
      goto LABEL_117;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_244533C78();
  __break(1u);
  return result;
}

uint64_t sub_2444EFA30(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_244533DB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_2444F0274(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_2444F0700((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_2444F0D1C((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_244533A74();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_244533DF8();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_244533DF8()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_2444F0998(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_2444F0998((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_2444F0700((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_244533DF8() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_244533C78();
  __break(1u);
  return result;
}

uint64_t sub_2444F0118(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD v20[7];
  _QWORD v21[8];

  if (a3 != a2)
  {
    v5 = a3;
    v7 = result;
    v8 = 56 * a3;
LABEL_6:
    v9 = v7;
    v10 = v8;
    while (1)
    {
      v11 = *a4 + v10;
      sub_2444E8AB8(v11, (uint64_t)v21);
      sub_2444E8AB8(v11 - 56, (uint64_t)v20);
      if (v21[0] == v20[0] && v21[1] == v20[1])
      {
        sub_2444EC024((uint64_t)v20, &qword_257367D50);
        result = sub_2444EC024((uint64_t)v21, &qword_257367D50);
LABEL_5:
        ++v5;
        v8 += 56;
        if (v5 == a2)
          return result;
        goto LABEL_6;
      }
      v13 = sub_244533DF8();
      sub_2444EC024((uint64_t)v20, &qword_257367D50);
      result = sub_2444EC024((uint64_t)v21, &qword_257367D50);
      if ((v13 & 1) == 0)
        goto LABEL_5;
      if (!*a4)
        break;
      v14 = *a4 + v10;
      v15 = *(_QWORD *)(v14 + 48);
      v17 = *(_OWORD *)(v14 + 16);
      v16 = *(_OWORD *)(v14 + 32);
      v18 = *(_OWORD *)v14;
      v19 = *(_OWORD *)(v14 - 40);
      *(_OWORD *)v14 = *(_OWORD *)(v14 - 56);
      *(_OWORD *)(v14 + 16) = v19;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v14 - 24);
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(v14 - 8);
      *(_OWORD *)(v14 - 56) = v18;
      *(_OWORD *)(v14 - 40) = v17;
      *(_OWORD *)(v14 - 24) = v16;
      v10 -= 56;
      ++v9;
      *(_QWORD *)(v14 - 8) = v15;
      if (v5 == v9)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2444F0274(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_244533DF8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2444F0340(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  _OWORD *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  char v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v44 = __src;
  v43 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[56 * v11] <= __dst)
        memmove(__dst, a2, 56 * v11);
      v24 = &v4[56 * v11];
      v42 = v24;
      v44 = v6;
      if (__src < v6 && v10 >= 56)
      {
        v25 = a3 - 56;
        do
        {
          sub_2444E8AB8((uint64_t)(v24 - 56), (uint64_t)&v40);
          v29 = v6 - 56;
          sub_2444E8AB8((uint64_t)(v6 - 56), (uint64_t)&v38);
          if (v40 == v38 && v41 == v39)
            v31 = 0;
          else
            v31 = sub_244533DF8();
          v32 = (char *)(v25 + 56);
          sub_2444EC024((uint64_t)&v38, &qword_257367D50);
          sub_2444EC024((uint64_t)&v40, &qword_257367D50);
          if ((v31 & 1) != 0)
          {
            if (v32 != v6 || v25 >= (unint64_t)v6)
            {
              v26 = *(_OWORD *)v29;
              v27 = *(_OWORD *)(v6 - 40);
              v28 = *(_OWORD *)(v6 - 24);
              *(_QWORD *)(v25 + 48) = *((_QWORD *)v6 - 1);
              *(_OWORD *)(v25 + 16) = v27;
              *(_OWORD *)(v25 + 32) = v28;
              *(_OWORD *)v25 = v26;
            }
            v44 -= 56;
            v24 = v42;
            if (v42 <= v4)
              break;
          }
          else
          {
            v33 = v42;
            v24 = v42 - 56;
            v42 -= 56;
            if (v32 < v33 || v25 >= (unint64_t)v33 || v32 != v33)
            {
              v34 = *(_OWORD *)v24;
              v35 = *(_OWORD *)(v33 - 40);
              v36 = *(_OWORD *)(v33 - 24);
              *(_QWORD *)(v25 + 48) = *((_QWORD *)v33 - 1);
              *(_OWORD *)(v25 + 16) = v35;
              *(_OWORD *)(v25 + 32) = v36;
              *(_OWORD *)v25 = v34;
            }
            v29 = v6;
            if (v24 <= v4)
              break;
          }
          v25 -= 56;
          v6 = v29;
        }
        while (v29 > __src);
      }
LABEL_51:
      sub_2444F0A90((void **)&v44, (const void **)&v43, &v42);
      return 1;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[56 * v9] <= __dst)
      memmove(__dst, __src, 56 * v9);
    v12 = (unint64_t)&v4[56 * v9];
    v42 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      while (1)
      {
        sub_2444E8AB8((uint64_t)v6, (uint64_t)&v40);
        sub_2444E8AB8((uint64_t)v4, (uint64_t)&v38);
        if (v40 == v38 && v41 == v39)
          break;
        v14 = sub_244533DF8();
        sub_2444EC024((uint64_t)&v38, &qword_257367D50);
        sub_2444EC024((uint64_t)&v40, &qword_257367D50);
        if ((v14 & 1) == 0)
          goto LABEL_18;
        v15 = v44;
        v16 = (unint64_t)(v6 + 56);
        if (v44 >= v6 && (unint64_t)v44 < v16 && v44 == v6)
        {
          v15 = v6;
        }
        else
        {
          v17 = *(_OWORD *)v6;
          v18 = *((_OWORD *)v6 + 1);
          v19 = *((_OWORD *)v6 + 2);
          *((_QWORD *)v44 + 6) = *((_QWORD *)v6 + 6);
          v15[1] = v18;
          v15[2] = v19;
          *v15 = v17;
        }
LABEL_22:
        v44 = (char *)v15 + 56;
        v4 = v43;
        if ((unint64_t)v43 < v12)
        {
          v6 = (char *)v16;
          if (v16 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_2444EC024((uint64_t)&v38, &qword_257367D50);
      sub_2444EC024((uint64_t)&v40, &qword_257367D50);
LABEL_18:
      v15 = v44;
      v20 = v43 + 56;
      if (v44 != v43 || v44 >= v20)
      {
        v21 = *(_OWORD *)v43;
        v22 = *((_OWORD *)v43 + 1);
        v23 = *((_OWORD *)v43 + 2);
        *((_QWORD *)v44 + 6) = *((_QWORD *)v43 + 6);
        v15[1] = v22;
        v15[2] = v23;
        *v15 = v21;
      }
      v43 = v20;
      v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F0700(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_244533DF8() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_244533DF8() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_2444F0B50((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

char *sub_2444F0998(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2444F0A90(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    result = (char *)sub_244533CB4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

char *sub_2444F0B50(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_244533CB4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_2444F0BF8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_2444F0C10(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDF6048]);
}

uint64_t sub_2444F0C04(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_2444F0C10(a1, a2, a3, type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_2444F0C10(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_244533CB4();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2444F0D1C(uint64_t a1)
{
  return sub_2444F0998(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2444F0D30(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F0EF0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0D4C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2444F1098(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2444F0D68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1384(a1, a2, a3, (_QWORD *)*v3, &qword_257368028, &qword_257368030);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0D94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1844(a1, a2, a3, (_QWORD *)*v3, &qword_257367FE8, type metadata accessor for DatasetColumnDescription);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0DC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1384(a1, a2, a3, (_QWORD *)*v3, &qword_257368018, &qword_257368020);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0DEC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2444F121C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2444F0E08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1528(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0E24(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F16BC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0E40(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1844(a1, a2, a3, (_QWORD *)*v3, &qword_2573680A0, type metadata accessor for DatasetColumnType);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0E6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1844(a1, a2, a3, (_QWORD *)*v3, &qword_257367FC0, (uint64_t (*)(_QWORD))MEMORY[0x24BDF6048]);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0E98(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1A24(a1, a2, a3, (_QWORD *)*v3, &qword_257368070, &qword_257368078);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0EC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2444F1A24(a1, a2, a3, (_QWORD *)*v3, &qword_257367FD8, &qword_257367FE0);
  *v3 = result;
  return result;
}

uint64_t sub_2444F0EF0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573680C8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8)
      memmove(v10 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D50);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1098(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367FB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F121C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1384(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1528(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573680B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 5 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573680B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F16BC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367FF8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368000);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1844(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1A24(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444F1C04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_2444E8B18((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2444F1C44(_QWORD *a1)
{
  return sub_2444F0EF0(0, a1[2], 0, a1);
}

uint64_t sub_2444F1C58(uint64_t a1)
{
  return sub_2444F121C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2444F1C6C(_QWORD *a1)
{
  return sub_2444F1844(0, a1[2], 0, a1, &qword_257367FC0, (uint64_t (*)(_QWORD))MEMORY[0x24BDF6048]);
}

uint64_t sub_2444F1CA0(_QWORD *a1)
{
  return sub_2444F1844(0, a1[2], 0, a1, &qword_257367FE8, type metadata accessor for DatasetColumnDescription);
}

uint64_t sub_2444F1CD8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2444F1D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_2444E8B18(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v25 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_2444F2788((uint64_t)&v25, (uint64_t)v23);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v22 = v24;
    v19(v21);
    return sub_2444EC024((uint64_t)v21, &qword_257367F78);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_2444F1F54()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    v11(&v19, v20);
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

BOOL _s12PoirotBlocks10DatasetRowV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 v3;
  _BYTE v5[8];
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) != *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16))
    return 0;
  MEMORY[0x24BDAC7A8](a1);
  v2 = swift_bridgeObjectRetain();
  sub_2444EB79C(v2, (uint64_t (*)(_QWORD, _QWORD, __int128 *))sub_2444EC018, (uint64_t)v5);
  swift_bridgeObjectRelease();
  v3 = v6 == 0;
  sub_2444EC024((uint64_t)v5, &qword_257367F70);
  return v3;
}

unint64_t sub_2444F21A8()
{
  unint64_t result;

  result = qword_257367F80;
  if (!qword_257367F80)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetRow, &type metadata for DatasetRow);
    atomic_store(result, (unint64_t *)&qword_257367F80);
  }
  return result;
}

uint64_t destroy for DatasetRow()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12PoirotBlocks10DatasetRowVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DatasetRow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DatasetRow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatasetRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetRow()
{
  return &type metadata for DatasetRow;
}

void sub_2444F23A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  id v36[5];
  __int128 v37[2];
  __int128 v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = a8;
  v12 = -1 << *(_BYTE *)(a1 + 32);
  v13 = ~v12;
  v14 = *(_QWORD *)(a1 + 64);
  v15 = -v12;
  v44 = a1;
  v45 = a1 + 64;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  else
    v16 = -1;
  v46 = v13;
  v47 = 0;
  v48 = v16 & v14;
  v49 = a2;
  v50 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2444F1D60((uint64_t)&v41);
  v17 = v42;
  if (!v42)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2444F2780();
    swift_release();
    return;
  }
  while (1)
  {
    v23 = v41;
    v39 = v41;
    v40 = v17;
    sub_2444E8B00(&v43, (uint64_t)v38);
    v24 = *(_QWORD **)a5;
    v26 = sub_2444EB9F0(v23, v17);
    v27 = v24[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_244533E88();
      __break(1u);
      goto LABEL_26;
    }
    v30 = v25;
    if (v24[3] < v29)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v25 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_2444F8724();
      if ((v30 & 1) != 0)
        goto LABEL_16;
    }
LABEL_6:
    v18 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    v19 = (uint64_t *)(v18[6] + 16 * v26);
    *v19 = v23;
    v19[1] = v17;
    sub_2444E8B00(v38, v18[7] + 40 * v26);
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_24;
    v18[2] = v22;
LABEL_8:
    sub_2444F1D60((uint64_t)&v41);
    v17 = v42;
    a4 = 1;
    if (!v42)
      goto LABEL_20;
  }
  sub_2444ECD60(v29, a4 & 1);
  v31 = sub_2444EB9F0(v23, v17);
  if ((v30 & 1) != (v32 & 1))
    goto LABEL_25;
  v26 = v31;
  if ((v30 & 1) == 0)
    goto LABEL_6;
LABEL_16:
  sub_2444E8B18(*(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v26, (uint64_t)v36);
  sub_2444EC6F4(v36, a6, a9, (uint64_t)v37);
  if (!v9)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v26;
    __swift_destroy_boxed_opaque_existential_1(v33);
    sub_2444E8B00(v37, v33);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v36[0] = v9;
  v34 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    sub_2444F2780();
    swift_release();

    return;
  }
LABEL_26:
  *(_QWORD *)&v37[0] = 0;
  *((_QWORD *)&v37[0] + 1) = 0xE000000000000000;
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_2445339D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244533C84();
  __break(1u);
}

uint64_t sub_2444F2780()
{
  return swift_release();
}

uint64_t sub_2444F2788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444F27D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444F2818(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_2444F2854(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2444F2864(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t dispatch thunk of ProtobufCreating.messageNameMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProtobufCreating.makeFlatMessagePayload(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtobufCreating.makeFlatMessagePayload(with:messageName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_2444F28C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v34 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (uint64_t)&v27 - v8;
  v9 = sub_24453330C();
  v28 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2445369D0;
  v13 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(v12 + 32) = *MEMORY[0x24BDBCC60];
  v14 = v13;
  v15 = (void *)sub_244533B1C();
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16 = v15;
    sub_244533B10();
    v27 = v16;

    sub_2444F3154();
    sub_244533B34();
    if (v33)
    {
      v17 = MEMORY[0x24BEE4AF8];
      v29 = v4;
      while (1)
      {
        sub_2444F2854(&v32, v31);
        sub_2444F2D1C((uint64_t)v31, v3);
        if (v0)
          break;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
        {
          sub_2444EC024((uint64_t)v3, &qword_2573680D0);
        }
        else
        {
          v18 = v30;
          sub_2444F3640((uint64_t)v3, v30);
          sub_2444F3640(v18, v34);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_24450086C(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
          v20 = *(_QWORD *)(v17 + 16);
          v19 = *(_QWORD *)(v17 + 24);
          if (v20 >= v19 >> 1)
            v17 = sub_24450086C(v19 > 1, v20 + 1, 1, v17);
          *(_QWORD *)(v17 + 16) = v20 + 1;
          sub_2444F3640(v34, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20);
          v4 = v29;
        }
        sub_244533B34();
        if (!v33)
          goto LABEL_15;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
      v24 = v27;

      return swift_bridgeObjectRelease();
    }
    else
    {
      v17 = MEMORY[0x24BEE4AF8];
LABEL_15:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
      if (*(_QWORD *)(v17 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257368040);
        v23 = sub_244533CA8();
      }
      else
      {
        v23 = MEMORY[0x24BEE4B00];
      }
      *(_QWORD *)&v32 = v23;
      v25 = swift_bridgeObjectRetain();
      sub_2444F319C(v25, 1, &v32);
      if (v0)
      {
        result = swift_unexpectedError();
        __break(1u);
      }
      else
      {
        v26 = v27;

        swift_bridgeObjectRelease();
        return v32;
      }
    }
  }
  else
  {
    sub_2444F2CD8();
    swift_allocError();
    *(_QWORD *)v21 = 0xD00000000000001DLL;
    *(_QWORD *)(v21 + 8) = 0x80000002445347D0;
    *(_BYTE *)(v21 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_2444F2CD8()
{
  unint64_t result;

  result = qword_2573680E8;
  if (!qword_2573680E8)
  {
    result = MEMORY[0x2495115A0](&unk_2445369F8, &type metadata for QueryCollectionError);
    atomic_store(result, (unint64_t *)&qword_2573680E8);
  }
  return result;
}

uint64_t sub_2444F2D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v39 = sub_2445332E8();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2445333CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  sub_2444F2818(a1, (uint64_t)v38);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (!v17)
  {
    v18(v9, 1, 1, v10);
    goto LABEL_6;
  }
  v18(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_2444EC024((uint64_t)v9, &qword_2573680F8);
    sub_2444F2CD8();
    swift_allocError();
    *(_QWORD *)v23 = 0xD000000000000021;
    *(_QWORD *)(v23 + 8) = 0x8000000244534810;
    *(_BYTE *)(v23 + 16) = 0;
    return swift_willThrow();
  }
  v36 = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2445369D0;
  v20 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC60];
  v21 = v20;
  sub_2444F36D0(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_244533360();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v24 = sub_2445332DC();
  if (v24 != 2 && (v24 & 1) == 0)
  {
    sub_244533348();
    v25 = sub_2445339A8();
    v27 = v26;
    swift_bridgeObjectRelease();
    if (v25 == 7106931 && v27 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      sub_244533384();
      sub_24453336C();
      v35 = *(void (**)(char *, uint64_t))(v11 + 8);
      v35(v14, v10);
      v29 = sub_2445339A8();
      v31 = v30;
      swift_bridgeObjectRelease();
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
      v33 = v36;
      *v36 = v29;
      v33[1] = v31;
      sub_244533318();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v39);
      v35(v16, v10);
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 0, 1, v32);
    }
    v28 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v39);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v36, 1, 1, v34);
}

unint64_t sub_2444F3154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573680F0;
  if (!qword_2573680F0)
  {
    v1 = sub_24453330C();
    result = MEMORY[0x2495115A0](MEMORY[0x24BDCD530], v1);
    atomic_store(result, (unint64_t *)&qword_2573680F0);
  }
  return result;
}

void sub_2444F319C(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;

  v7 = sub_2445333CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = (_QWORD *)((char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v60) = a2;
  v56[1] = v3;
  v57 = v16;
  v17 = (char *)v15 + *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v56[0];
  v62 = *(_QWORD *)(v13 + 72);
  v59 = a1;
  swift_bridgeObjectRetain();
  sub_2444F3688(v18, (uint64_t)v15);
  v20 = v15[1];
  v67 = *v15;
  v19 = v67;
  v68 = v20;
  v58 = v8;
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v63 = v7;
  v64 = v10;
  v61 = v17;
  v21(v10, v17, v7);
  v22 = (_QWORD *)*a3;
  v24 = sub_2444EB9F0(v19, v20);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_23;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v60 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2444F890C();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v33 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v34 = (uint64_t *)(v33[6] + 16 * v24);
    *v34 = v19;
    v34[1] = v20;
    v35 = v33[7];
    v60 = *(_QWORD *)(v58 + 72);
    v36 = v63;
    v21((char *)(v35 + v60 * v24), v64, v63);
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    v40 = v57 - 1;
    if (v57 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v41 = v59 + v62 + v56[0];
    while (1)
    {
      sub_2444F3688(v41, (uint64_t)v15);
      v43 = v15[1];
      v67 = *v15;
      v42 = v67;
      v68 = v43;
      v21(v64, v61, v36);
      v44 = (_QWORD *)*a3;
      v45 = sub_2444EB9F0(v42, v43);
      v47 = v44[2];
      v48 = (v46 & 1) == 0;
      v38 = __OFADD__(v47, v48);
      v49 = v47 + v48;
      if (v38)
        break;
      v50 = v46;
      if (v44[3] < v49)
      {
        sub_2444ED084(v49, 1);
        v45 = sub_2444EB9F0(v42, v43);
        if ((v50 & 1) != (v51 & 1))
          goto LABEL_25;
      }
      if ((v50 & 1) != 0)
        goto LABEL_10;
      v52 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v53 = (uint64_t *)(v52[6] + 16 * v45);
      *v53 = v42;
      v53[1] = v43;
      v36 = v63;
      v21((char *)(v52[7] + v60 * v45), v64, v63);
      v54 = v52[2];
      v38 = __OFADD__(v54, 1);
      v55 = v54 + 1;
      if (v38)
        goto LABEL_24;
      v52[2] = v55;
      v41 += v62;
      if (!--v40)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2444ED084(v27, v60 & 1);
  v29 = sub_2444EB9F0(v19, v20);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = (void *)swift_allocError();
    swift_willThrow();
    v69 = v31;
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_244533E88();
  __break(1u);
LABEL_26:
  v65 = 0;
  v66 = 0xE000000000000000;
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_2445339D8();
  sub_244533C84();
  __break(1u);
}

uint64_t sub_2444F3640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444F3688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444F36D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368100);
    v3 = sub_244533BA0();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_244533960();
      sub_244533EDC();
      v7 = v6;
      sub_2445339CC();
      v8 = sub_244533EF4();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_244533960();
        v17 = v16;
        if (v15 == sub_244533960() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_244533DF8();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_244533960();
          v24 = v23;
          if (v22 == sub_244533960() && v24 == v25)
            goto LABEL_3;
          v27 = sub_244533DF8();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2444F3900()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for QueryCollectionError()
{
  return sub_2444F3918();
}

uint64_t sub_2444F3918()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12PoirotBlocks20QueryCollectionErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2444F3900();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for QueryCollectionError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2444F3900();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2444F3918();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for QueryCollectionError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2444F3918();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryCollectionError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryCollectionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2444F3AA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2444F3AA8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for QueryCollectionError()
{
  return &type metadata for QueryCollectionError;
}

_QWORD *initializeBufferWithCopyOfBuffer for TemplateBlockError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TemplateBlockError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for TemplateBlockError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for TemplateBlockError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2444F3BF8()
{
  return 0;
}

ValueMetadata *type metadata accessor for TemplateBlockError()
{
  return &type metadata for TemplateBlockError;
}

void sub_2444F3C10(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2444F3C1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21[5];
  __int128 v22;

  *(_QWORD *)(v3 + 184) = 0;
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 40);
  v12 = *(_QWORD *)(a3 + 48);
  v11 = *(_QWORD *)(a3 + 56);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = v9;
  *(_BYTE *)(v3 + 80) = v10;
  *(_QWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 96) = v11;
  *(_BYTE *)(v3 + 144) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_2444F3E28(a3, a1, a2, v21);
  if (v4)
  {
    sub_2444F4110(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_2444F40DC(v3 + 56);
    swift_release();
    type metadata accessor for TemplateBlock();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v20 = (uint64_t)&v20;
    v14 = *(_QWORD *)(a3 + 64);
    *(_QWORD *)(v3 + 152) = v14;
    MEMORY[0x24BDAC7A8](v13);
    v19[2] = v21;
    v19[3] = a1;
    swift_bridgeObjectRetain_n();
    v16 = sub_244506DA4((void (*)(__int128 *__return_ptr, uint64_t *, uint64_t *))sub_2444F417C, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(a3 + 80);
    *(_QWORD *)(v3 + 160) = *(_QWORD *)(a3 + 72);
    *(_QWORD *)(v3 + 168) = v17;
    *(_QWORD *)(v3 + 176) = v16;
    swift_bridgeObjectRetain();
    swift_release();
    v18 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(_BYTE *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = v18;
    v22 = *(_OWORD *)a3;
    *(_OWORD *)(v3 + 32) = v22;
    *(_QWORD *)(v3 + 48) = a2;
    swift_retain();
    sub_2444F4198((uint64_t)&v22);
    sub_2444F4110(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_2444F3E28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _BYTE v20[40];
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)&v21 = *(_QWORD *)(a1 + 16);
  *((_QWORD *)&v21 + 1) = v8;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v25 = v12;
  sub_2444E8B18((uint64_t)a2, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v13 = sub_2445339A8();
  v15 = v14;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_244519BD8(v13, v15);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for AggregationBlock();
    swift_allocObject();
    result = sub_24450458C((uint64_t)v20, v16, a3, &v21);
    if (!v4)
    {
      a4[3] = v17;
      a4[4] = (uint64_t)&off_251525EA0;
      *a4 = result;
    }
  }
  else
  {
    sub_2444E4CB0();
    swift_allocError();
    *(_QWORD *)v19 = v13;
    *(_QWORD *)(v19 + 8) = v15;
    *(_BYTE *)(v19 + 16) = 3;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2444F3FD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t result;

  v9 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_244505040(a3, v9, a5);
  if (v5)
    *a4 = v5;
  return result;
}

uint64_t sub_2444F4044()
{
  uint64_t v0;

  sub_2444F40DC(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2444F4070()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_2444F40DC(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TemplateBlock()
{
  return objc_opt_self();
}

uint64_t sub_2444F40DC(uint64_t a1)
{
  destroy for BlockConfig(a1);
  return a1;
}

uint64_t sub_2444F4110(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2444F417C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2444F3FD4(a1, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_2444F4198(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectBuilder(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectRow(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlockLogEntryCollecting.collectDataset(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EntryBuilding.buildEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

PoirotBlocks::BlockType_optional __swiftcall BlockType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PoirotBlocks::BlockType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_244533CCC();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BlockType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2444F4280
                                                                     + 4 * asc_244536AF8[*v0]))(0xD000000000000010, 0x8000000244534480);
}

uint64_t sub_2444F4280()
{
  return 0x7461676572676761;
}

uint64_t sub_2444F42A0()
{
  return 0x6974636172747865;
}

uint64_t sub_2444F42BC()
{
  return 0x6574616C706D6574;
}

uint64_t sub_2444F42E0()
{
  return 1852403562;
}

uint64_t sub_2444F42F0()
{
  return 0x6966654472657375;
}

void sub_2444F4310(char *a1)
{
  sub_24451A9F4(*a1);
}

unint64_t sub_2444F4320()
{
  unint64_t result;

  result = qword_257368268;
  if (!qword_257368268)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockType, &type metadata for BlockType);
    atomic_store(result, (unint64_t *)&qword_257368268);
  }
  return result;
}

void sub_2444F4364()
{
  char *v0;

  sub_2444F4468(0, *v0);
}

void sub_2444F4370(uint64_t a1)
{
  char *v1;

  sub_2444F4378(a1, *v1);
}

void sub_2444F4378(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2444F43BC()
{
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

void sub_2444F4460(uint64_t a1)
{
  char *v1;

  sub_2444F4468(a1, *v1);
}

void sub_2444F4468(uint64_t a1, char a2)
{
  sub_244533EDC();
  __asm { BR              X10 }
}

uint64_t sub_2444F44B8()
{
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

PoirotBlocks::BlockType_optional sub_2444F4570(Swift::String *a1)
{
  return BlockType.init(rawValue:)(*a1);
}

uint64_t sub_2444F457C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BlockType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2444F45A0()
{
  sub_2444F47A4();
  return sub_244533A2C();
}

uint64_t sub_2444F45FC()
{
  sub_2444F47A4();
  return sub_244533A20();
}

uint64_t getEnumTagSinglePayload for BlockType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2444F4724 + 4 * byte_244536B12[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2444F4758 + 4 * byte_244536B0D[v4]))();
}

uint64_t sub_2444F4758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444F4760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444F4768);
  return result;
}

uint64_t sub_2444F4774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444F477CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2444F4780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444F4788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockType()
{
  return &type metadata for BlockType;
}

unint64_t sub_2444F47A4()
{
  unint64_t result;

  result = qword_257368270;
  if (!qword_257368270)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockType, &type metadata for BlockType);
    atomic_store(result, (unint64_t *)&qword_257368270);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesPivotColumnNames.pivotColumnNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void BaseStreamSchemaProvider.makeBiomeSchema(forTable:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v1 = (id)BMEventTimestampSQLColumn();
  if (v1)
  {
    v2 = v1;
    v3 = sub_2445334C8();
    v4 = v2;
    swift_retain();
    v5 = sub_2444F4D18(v3, v4, v0);
    swift_bridgeObjectRelease();

    swift_release();
    v6 = v4;
    v7 = swift_bridgeObjectRetain();
    MEMORY[0x249510CAC](v7);
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_244533A68();
    sub_244533A80();
    sub_244533A5C();
    swift_bridgeObjectRelease();
    v8 = objc_allocWithZone(MEMORY[0x24BE0CCE0]);
    swift_bridgeObjectRetain();
    v9 = (void *)sub_24453393C();
    swift_bridgeObjectRelease();
    sub_2444F526C();
    v10 = (void *)sub_244533A44();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v8, sel_initWithTableName_columns_, v9, v10);

    if (v11)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2444F4984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  _QWORD v17[3];
  id v18;
  _QWORD v19[4];

  v6 = sub_2445334A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2444F2818(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368288);
  if (!swift_dynamicCast())
    goto LABEL_7;
  v10 = v18;
  v11 = objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_, sel_eventBodyData);
  v12 = v10;
  if (!v11)
  {
    __break(1u);
LABEL_7:
    result = sub_244533C84();
    __break(1u);
    return result;
  }
  v13 = v12;
  swift_unknownObjectRetain();
  v18 = v11;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v17[1] = a2;
    v14 = v19[0];
    v15 = v19[1];
    sub_2445334F8();
    objc_msgSend(v13, sel_timestamp);
    sub_2444F538C(v14, v15);
    sub_244533498();
    sub_2445334B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2444F53D0(v14, v15);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_unknownObjectRelease();
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

id sub_2444F4C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD *__return_ptr, _QWORD *, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[3];
  uint64_t v14;
  _QWORD v15[4];

  v5 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t))(a1 + 32);
  v15[3] = swift_getObjectType();
  v15[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  v5(v13, v15, a3);
  swift_release();
  v6 = v14;
  if (v14)
  {
    v7 = __swift_project_boxed_opaque_existential_1(v13, v14);
    v8 = *(_QWORD *)(v6 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = (void *)sub_244533DEC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    v11 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v11;
}

uint64_t sub_2444F4D18(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  _BYTE *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  _BYTE v36[4];
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  void *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD aBlock[6];
  uint64_t v64;

  v61 = a3;
  v60 = sub_244533510();
  v6 = *(_QWORD *)(v60 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v60);
  v59 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_244533438();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v56 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x24BEE4AF8];
  v64 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v43 = v3;
    v12 = *(unsigned __int8 *)(v6 + 80);
    v13 = a1 + ((v12 + 32) & ~v12);
    v54 = v6;
    v14 = *(_QWORD *)(v6 + 72);
    v53 = *MEMORY[0x24BE749D8];
    v48 = *MEMORY[0x24BE749C8];
    v47 = *MEMORY[0x24BE749E8];
    v46 = *MEMORY[0x24BE749F0];
    v45 = *MEMORY[0x24BE74A00];
    v44 = *MEMORY[0x24BE74A08];
    v41 = *MEMORY[0x24BE749E0];
    v40 = *MEMORY[0x24BE749F8];
    v39 = *MEMORY[0x24BE74A18];
    v38 = *MEMORY[0x24BE749D0];
    v51 = (v12 + 24) & ~v12;
    v49 = v12 | 7;
    v50 = v51 + v7;
    v37 = *MEMORY[0x24BE74A10];
    v42 = a1;
    swift_bridgeObjectRetain();
    v55 = a2;
    v52 = v14;
    while (1)
    {
      v15 = sub_2445334F8();
      v17 = v16;
      v18 = objc_msgSend(a2, sel_name);
      v19 = sub_244533960();
      v21 = v20;

      if (v15 == v19 && v17 == v21)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v23 = sub_244533DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          v24 = sub_2445334F8();
          v25 = v56;
          sub_244533504();
          v26 = (*(uint64_t (**)(_BYTE *, uint64_t))(v57 + 88))(v25, v58);
          v62 = v24;
          if (v26 == v53)
          {
            v27 = 2;
            goto LABEL_14;
          }
          if (v26 == v48)
          {
LABEL_13:
            v27 = 4;
          }
          else
          {
            v27 = 0;
            if (v26 != v47 && v26 != v46 && v26 != v45 && v26 != v44)
            {
              v27 = 1;
              if (v26 != v41 && v26 != v40)
              {
                if (v26 == v39)
                {
                  v27 = 3;
                }
                else
                {
                  if (v26 != v38)
                  {
                    if (v26 != v37)
                    {
                      result = sub_244533C84();
                      __break(1u);
                      return result;
                    }
                    goto LABEL_13;
                  }
                  v27 = 0;
                }
              }
            }
          }
LABEL_14:
          v28 = v54;
          v30 = v59;
          v29 = v60;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v54 + 16))(v59, v13, v60);
          v31 = swift_allocObject();
          *(_QWORD *)(v31 + 16) = v61;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v28 + 32))(v31 + v51, v30, v29);
          v32 = objc_allocWithZone(MEMORY[0x24BE0CCC8]);
          swift_retain();
          v33 = (void *)sub_24453393C();
          swift_bridgeObjectRelease();
          aBlock[4] = sub_2444F531C;
          aBlock[5] = v31;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_2444F4C08;
          aBlock[3] = &block_descriptor;
          v34 = _Block_copy(aBlock);
          swift_release();
          v35 = objc_msgSend(v32, sel_initWithName_dataType_requestOnly_extractBlock_, v33, v27, 0, v34);
          _Block_release(v34);

          a2 = v55;
          v14 = v52;
          if (v35)
          {
            MEMORY[0x249510CAC]();
            if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_244533A68();
            sub_244533A80();
            sub_244533A5C();
          }
        }
      }
      v13 += v14;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return v64;
      }
    }
  }
  return result;
}

unint64_t sub_2444F526C()
{
  unint64_t result;

  result = qword_257368280;
  if (!qword_257368280)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257368280);
  }
  return result;
}

uint64_t sub_2444F52A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244533510();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2444F531C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_244533510();
  return sub_2444F4984(a1, a2, a3);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2444F538C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2444F53D0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t dispatch thunk of Templatable.templateValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_2444F541C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F90);
  v2 = sub_244533CA8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2444F9FF0(v6, (uint64_t)&v15, &qword_257367D50);
    v7 = v15;
    v8 = v16;
    result = sub_2444EB9F0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_2444E8B00(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F555C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368038);
  v2 = (_QWORD *)sub_244533CA8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_2444EB9F0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F5674(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680C0);
  v2 = (_QWORD *)sub_244533CA8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v15 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2444EB9F0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[7] + 24 * result;
    *(_QWORD *)v11 = v7;
    *(_OWORD *)(v11 + 8) = v15;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 = (_OWORD *)((char *)v4 + 40);
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F57BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368290);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FF0);
  v6 = sub_244533CA8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2444F9FF0(v12, (uint64_t)v5, &qword_257368290);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2444EB9F0(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for DatasetColumnDescription(0);
    result = sub_2444F27D4(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F5954(uint64_t a1)
{
  return sub_2444F5A8C(a1, &qword_257368010);
}

unint64_t sub_2444F5960(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368058);
  v2 = (_QWORD *)sub_244533CA8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2444EB9F0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F5A80(uint64_t a1)
{
  return sub_2444F5A8C(a1, &qword_257368050);
}

unint64_t sub_2444F5A8C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_244533CA8();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2444EB9F0(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2444F5BA0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368098);
  v2 = (_QWORD *)sub_244533CA8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2444EB9F0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2444F5CB0(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_244533AC8();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_244512B74(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t DatasetDescription.layoutNames.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_2444F5CB0(v0);
}

uint64_t DatasetDescription.layoutCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

PoirotBlocks::DatasetDescription __swiftcall DatasetDescription.init()()
{
  PoirotBlocks::DatasetDescription *v0;
  PoirotBlocks::DatasetDescription *v1;
  PoirotBlocks::DatasetDescription result;

  v1 = v0;
  result.layouts._rawValue = (void *)sub_2444F5674(MEMORY[0x24BEE4AF8]);
  v1->layouts._rawValue = result.layouts._rawValue;
  return result;
}

PoirotBlocks::DatasetDescription __swiftcall DatasetDescription.init(_:)(PoirotBlocks::DatasetDescription result)
{
  PoirotBlocks::DatasetDescription *v1;

  v1->layouts._rawValue = result.layouts._rawValue;
  return result;
}

uint64_t DatasetDescription.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *v3;
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = sub_2444EB9F0(v7, a2);
    if ((v9 & 1) != 0)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 24 * v8);
      v11 = v10[1];
      v12 = v10[2];
      *a3 = *v10;
      a3[1] = v11;
      a3[2] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  return result;
}

Swift::Void __swiftcall DatasetDescription.add(_:)(PoirotBlocks::DatasetColumnLayout a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v2 = *(_QWORD *)a1.name._countAndFlagsBits;
  v3 = *(_QWORD *)(a1.name._countAndFlagsBits + 8);
  v4 = *(_QWORD *)(a1.name._countAndFlagsBits + 16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  *v1 = 0x8000000000000000;
  sub_2444F789C(v2, v3, v4, v2, v3, isUniquelyReferenced_nonNull_native);
  *v1 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

PoirotBlocks::DatasetColumnLayout_optional __swiftcall DatasetDescription.removeLayout(withName:)(Swift::String withName)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  PoirotBlocks::DatasetColumnLayout_optional result;

  v3 = v2;
  object = (uint64_t)withName._object;
  countAndFlagsBits = withName._countAndFlagsBits;
  v6 = v1;
  swift_bridgeObjectRetain();
  v7 = sub_2444EB9F0(countAndFlagsBits, object);
  LOBYTE(object) = v8;
  v9 = swift_bridgeObjectRelease();
  if ((object & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2444F8920();
      v13 = v15;
    }
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v13 + 56) + 24 * v7;
    *(_QWORD *)v6 = *(_QWORD *)v14;
    *(_OWORD *)(v6 + 8) = *(_OWORD *)(v14 + 8);
    sub_2444F6E0C(v7, v13);
    *v3 = v13;
    v9 = swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = 0;
  }
  result.value.columnDescriptions._rawValue = v11;
  result.value.name._object = v10;
  result.value.name._countAndFlagsBits = v9;
  return result;
}

uint64_t DatasetDescription.forEach(_:)()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_2444F9DA4(v0, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2444F8B04);
  return swift_bridgeObjectRelease();
}

uint64_t static DatasetDescription.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2444F6334(*a1, *a2);
}

uint64_t sub_2444F6130(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_2444EB9F0(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_244533DF8();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2444F6334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;

  v52 = type metadata accessor for DatasetColumnDescription(0);
  v4 = MEMORY[0x24BDAC7A8](v52);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v10 = (char *)&v43 - v9;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v44 = a2;
    v45 = v8;
    v11 = 0;
    v12 = *(_QWORD *)(a1 + 64);
    v48 = a1 + 64;
    v13 = 1 << *(_BYTE *)(a1 + 32);
    v14 = -1;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    v15 = v14 & v12;
    v49 = (unint64_t)(v13 + 63) >> 6;
    v43 = a1;
    while (1)
    {
      if (v15)
      {
        v50 = (v15 - 1) & v15;
        v51 = v11;
        v16 = __clz(__rbit64(v15)) | (v11 << 6);
      }
      else
      {
        v17 = v11 + 1;
        if (__OFADD__(v11, 1))
          goto LABEL_46;
        if (v17 >= v49)
          return 1;
        v18 = *(_QWORD *)(v48 + 8 * v17);
        v19 = v11 + 1;
        if (!v18)
        {
          v19 = v17 + 1;
          if (v17 + 1 >= v49)
            return 1;
          v18 = *(_QWORD *)(v48 + 8 * v19);
          if (!v18)
          {
            v19 = v17 + 2;
            if (v17 + 2 >= v49)
              return 1;
            v18 = *(_QWORD *)(v48 + 8 * v19);
            if (!v18)
            {
              v20 = v17 + 3;
              if (v20 >= v49)
                return 1;
              v18 = *(_QWORD *)(v48 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  v19 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_47;
                  if (v19 >= v49)
                    return 1;
                  v18 = *(_QWORD *)(v48 + 8 * v19);
                  ++v20;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v19 = v20;
            }
          }
        }
LABEL_23:
        v50 = (v18 - 1) & v18;
        v51 = v19;
        v16 = __clz(__rbit64(v18)) + (v19 << 6);
      }
      v21 = a1;
      v22 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v16);
      v23 = *v22;
      v24 = v22[1];
      v25 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * v16);
      v26 = *v25;
      v27 = v25[1];
      v28 = v25[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = sub_2444EB9F0(v23, v24);
      v31 = v30;
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
        break;
      v32 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 24 * v29);
      v33 = v32[1];
      v34 = v32[2];
      v35 = *v32 == v26 && v33 == v27;
      if (!v35 && (sub_244533DF8() & 1) == 0)
        break;
      v36 = *(_QWORD *)(v34 + 16);
      if (v36 != *(_QWORD *)(v28 + 16))
        break;
      if (v36)
      {
        if (v34 != v28)
        {
          v37 = v45;
          v38 = v33;
          v39 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
          v46 = v38;
          v47 = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v40 = 0;
          v41 = *(_QWORD *)(v37 + 72);
          while (1)
          {
            result = sub_2444E8C24(v34 + v39, (uint64_t)v10);
            if (v40 >= *(_QWORD *)(v28 + 16))
              break;
            sub_2444E8C24(v28 + v39, (uint64_t)v6);
            sub_2444FA0E4();
            v42 = sub_244533924();
            sub_2444FA12C((uint64_t)v6);
            sub_2444FA12C((uint64_t)v10);
            if ((v42 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            ++v40;
            v39 += v41;
            if (v36 == v40)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 = v43;
              a2 = v44;
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        a1 = v21;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        a1 = v21;
      }
LABEL_7:
      result = swift_bridgeObjectRelease();
      v15 = v50;
      v11 = v51;
    }
    swift_bridgeObjectRelease();
LABEL_42:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_2444F66E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  char v18;
  char v19;
  int64_t v21;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 64);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v21 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
LABEL_22:
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v11 = *v10;
      v12 = v10[1];
      v13 = *(_QWORD *)(a1 + 56) + 24 * v6;
      v14 = *(_QWORD *)v13;
      v15 = *(_QWORD *)(v13 + 8);
      v16 = *(_BYTE *)(v13 + 16);
      swift_bridgeObjectRetain();
      sub_2444F2864(v14, v15, v16);
      v17 = sub_2444EB9F0(v11, v12);
      v19 = v18;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        __asm { BR              X8 }
      sub_2444FA034(v14, v15, v16);
      return 0;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_21;
      v8 = 2;
      if (v21 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_21;
      v8 = 3;
      if (v21 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
        goto LABEL_21;
      v8 = 4;
      if (v21 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 96);
      if (v7)
      {
LABEL_21:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_22;
      }
      v9 = 5;
      if (v21 > 5)
      {
        v7 = *(_QWORD *)(a1 + 104);
        if (v7)
        {
          v8 = 5;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x2444F6C08);
          }
          if (v8 >= v21)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_21;
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_2444F6C20(uint64_t *a1, uint64_t *a2)
{
  return sub_2444F6334(*a1, *a2);
}

unint64_t sub_2444F6C2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v9 = sub_244533EF4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2444F6E00(unint64_t a1, uint64_t a2)
{
  return sub_2444F7678(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE74690]);
}

unint64_t sub_2444F6E0C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v10 = sub_244533EF4();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2444F6FF4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_244533C6C();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = sub_2445338E8();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2444F7278(unint64_t a1, uint64_t a2)
{
  return sub_2444F7290(a1, a2, &qword_257368060);
}

unint64_t sub_2444F7284(unint64_t a1, uint64_t a2)
{
  return sub_2444F7290(a1, a2, &qword_257367FC8);
}

unint64_t sub_2444F7290(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v11 = sub_244533EF4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2444F7498(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v9 = sub_244533EF4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2444F766C(unint64_t a1, uint64_t a2)
{
  return sub_2444F7678(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE745E8]);
}

unint64_t sub_2444F7678(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_244533B7C();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v11 = sub_244533EF4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2444F7880(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2444F7E98(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE74690], &qword_257368088, (void (*)(void))sub_2444ECD4C);
}

uint64_t sub_2444F789C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_2444EB9F0(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_2444F8920();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2444ED098(v19, a6 & 1);
  v25 = sub_2444EB9F0(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244533E88();
  __break(1u);
  return result;
}

_OWORD *sub_2444F7A28(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_244533C6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2444EBBEC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_2444F2854(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_2444F8D84();
      goto LABEL_7;
    }
    sub_2444ED758(v17, a3 & 1);
    v23 = sub_2444EBBEC(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_2444F831C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2444F7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_2444EB9F0(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_2444F942C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2444EE1A8(v17, a5 & 1);
  v23 = sub_2444EB9F0(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2444F7D18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2444EB9F0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2444F95E4(&qword_257368050);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2444EE4CC(v15, a4 & 1);
  v21 = sub_2444EB9F0(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2444F7E7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2444F7E98(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE745E8], &qword_257368090, (void (*)(void))sub_2444EE7E8);
}

uint64_t sub_2444F7E98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(void))
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_2444EB9F0(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a5(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_2444F97A4(a5, a6);
      goto LABEL_7;
    }
    a7();
    v27 = sub_2444EB9F0(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2444F8470(v17, a2, a3, a1, v23, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2444F8004(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2444EB9F0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_2444F9A00();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2444EEB60(result, a4 & 1);
  result = sub_2444EB9F0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2444F8154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_2444EBC3C(a4, a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 24 * v17);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *v24 = a1;
        v24[1] = a2;
        v24[2] = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_2444F9BAC();
      goto LABEL_7;
    }
    sub_2444EEE68(v20, a7 & 1);
    v26 = sub_2444EBC3C(a4, a5, a6);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2444F8500(v17, a4, a5, a6, a1, a2, a3, v23);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_244533E88();
  __break(1u);
  return result;
}

unint64_t sub_2444F82D4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_2444F831C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_244533C6C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_2444F2854(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2444F83BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_2444F8470(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x24BE74740]);
}

uint64_t sub_2444F83C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_2444F83E0(a1, a2, a3, a4, a5, &qword_257368060);
}

uint64_t sub_2444F83D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_2444F83E0(a1, a2, a3, a4, a5, &qword_257367FC8);
}

uint64_t sub_2444F83E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t *a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a6);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

uint64_t sub_2444F8470(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

unint64_t sub_2444F8500(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 24 * result);
  *v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v9 = (_QWORD *)(a8[7] + 24 * result);
  *v9 = a5;
  v9[1] = a6;
  v9[2] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

void *sub_2444F855C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368038);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2444F8710()
{
  return sub_2444F97A4((uint64_t (*)(_QWORD))MEMORY[0x24BE74690], &qword_257368088);
}

void *sub_2444F8724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F90);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_2444E8B18(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_2444E8B00(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2444F890C()
{
  return sub_2444F97A4((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_257368040);
}

void *sub_2444F8920()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680C0);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)(v21 + 8);
    *v23 = v19;
    v23[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2444F8B04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t *);
  uint64_t v6;
  __int128 v7;

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v3 + 16);
  v6 = *a3;
  v7 = *(_OWORD *)(a3 + 1);
  return v4(a1, a2, &v6);
}

void *sub_2444F8B40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DatasetColumnDescription(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FF0);
  v5 = *v0;
  v6 = sub_244533C90();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_2444E8C24(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_2444F27D4((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2444F8D6C()
{
  return sub_2444F95E4(&qword_257368010);
}

void *sub_2444F8D78()
{
  return sub_2444F95E4(&qword_257368008);
}

void *sub_2444F8D84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_244533C6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368048);
  v6 = *v0;
  v7 = sub_244533C90();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_2444F2818(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_2444F2854(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2444F8FC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned __int8 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573680A8);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_BYTE *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_BYTE *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    result = (void *)sub_2444F2864(v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2444F9198()
{
  return sub_2444F97A4((uint64_t (*)(_QWORD))MEMORY[0x24BE74740], &qword_257368080);
}

void *sub_2444F91AC()
{
  return sub_2444F91D4(&qword_257368060, &qword_257368068);
}

void *sub_2444F91C0()
{
  return sub_2444F91D4(&qword_257367FC8, &qword_257367FD0);
}

void *sub_2444F91D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_244533C90();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2444F942C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368058);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2444F95E4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_244533C90();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2444F9790()
{
  return sub_2444F97A4((uint64_t (*)(_QWORD))MEMORY[0x24BE745E8], &qword_257368090);
}

void *sub_2444F97A4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_244533C90();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2444F9A00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368098);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2444F9BAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  __int128 v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA8);
  v2 = *v0;
  v3 = sub_244533C90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v2 + 56) + v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_OWORD *)(v17 + 8);
    v26 = *(_OWORD *)(v18 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_OWORD *)(v20 + 8) = v21;
    v22 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v22 = v19;
    *(_OWORD *)(v22 + 8) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2444F9DA4(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  _QWORD v24[3];
  void (*v25)(uint64_t, uint64_t, _QWORD *);

  v25 = a2;
  v3 = v2;
  v22 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v23 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 24 * i);
    v19 = v18[1];
    v20 = v18[2];
    v24[0] = *v18;
    v24[1] = v19;
    v24[2] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v16, v17, v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v23)
      return swift_release();
    v13 = *(_QWORD *)(v22 + 8 * v9);
    if (!v13)
    {
      v14 = v9 + 1;
      if (v9 + 1 >= v23)
        return swift_release();
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 2;
      if (v9 + 2 >= v23)
        return swift_release();
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 3;
      if (v9 + 3 >= v23)
        return swift_release();
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (v13)
      {
LABEL_14:
        v9 = v14;
        goto LABEL_15;
      }
      v21 = v9 + 4;
      if (v9 + 4 >= v23)
        return swift_release();
      v13 = *(_QWORD *)(v22 + 8 * v21);
      v9 += 4;
      if (!v13)
        break;
    }
LABEL_15:
    v7 = (v13 - 1) & v13;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v23)
      return swift_release();
    v13 = *(_QWORD *)(v22 + 8 * v9);
    ++v21;
    if (v13)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DatasetDescription()
{
  return &type metadata for DatasetDescription;
}

uint64_t sub_2444F9FF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2444FA034(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2444FA050(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_244533AC8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_244512B74(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_2444FA0E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257368298;
  if (!qword_257368298)
  {
    v1 = type metadata accessor for DatasetColumnDescription(255);
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnDescription, v1);
    atomic_store(result, (unint64_t *)&qword_257368298);
  }
  return result;
}

uint64_t sub_2444FA12C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_2444FA168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)());
  _QWORD *result;
  uint64_t v17;
  _QWORD v18[2];
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v18[1] = a7;
  ObjectType = swift_getObjectType();
  v25 = 2;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a5;
  v24 = a6;
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)()))(a6 + 16);
  result = ((_QWORD *(*)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, unint64_t (*)@<X0>(unint64_t *@<X8>), _BYTE *, ValueMetadata *, uint64_t, uint64_t))v15)(&v26, &v25, a2, a3, a4, sub_2444FA2C0, v19, &type metadata for DatasetDescription, ObjectType, a6);
  if (!v7)
  {
    v17 = swift_bridgeObjectRelease();
    v18[0] = v18;
    LOBYTE(v26) = 3;
    MEMORY[0x24BDAC7A8](v17);
    return (_QWORD *)v15(&v26, a2, a3, a4, sub_2444FA4D4);
  }
  return result;
}

unint64_t sub_2444FA2C0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2444FA2E4(v1[2], v1[3], v1[4], 0, v1[6], a1);
}

unint64_t sub_2444FA2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, unint64_t *a6@<X8>)
{
  uint64_t v6;
  unint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;

  result = sub_2444F5674(MEMORY[0x24BEE4AF8]);
  v29 = result;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v23 = a6;
    swift_getObjectType();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(a5 + 8);
    v12 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      BYTE1(v28) = 1;
      v14 = v12[3];
      v13 = v12[4];
      __swift_project_boxed_opaque_existential_1(v12, v14);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v13 + 8) + 16))(&v28, v14);
      v16 = v12[3];
      v15 = v12[4];
      __swift_project_boxed_opaque_existential_1(v12, v16);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 8) + 8))(v16);
      v19 = v18;
      v21 = v12[3];
      v20 = v12[4];
      __swift_project_boxed_opaque_existential_1(v12, v21);
      v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v20 + 8) + 24))(v21);
      MEMORY[0x24BDAC7A8](v22);
      v24((char *)&v28 + 1, a2, a3, a4, &v28, v17, v19);
      if (v6)
        break;
      swift_bridgeObjectRelease();
      v12 += 5;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        result = v29;
        a6 = v23;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    *a6 = result;
  }
  return result;
}

uint64_t sub_2444FA4D4()
{
  uint64_t *v0;

  return sub_2444FAF3C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_2444FA4F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_2445196B8(v4, *(_QWORD *)(v5 + 8));
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 + 24) + 8))(a2, v6);
  return swift_unknownObjectRelease();
}

void sub_2444FA594()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v0;
  v3 = *v0;
  v4 = *(_QWORD *)(*v0 + 16);
  if (!v4)
  {
LABEL_5:
    v8 = v2[12];
    if ((v8 & 0x8000000000000000) == 0 && v8 < v4)
    {
      while (1)
      {
        v9 = MEMORY[0x249511228]();
        v10 = (_QWORD *)v2[11];
        if ((unint64_t)v8 >= v10[2])
          break;
        v11 = (void *)v9;
        v26 = v10[v8 + 4];
        swift_bridgeObjectRetain();
        v12 = sub_2444FA884();
        if (v1)
        {
          swift_bridgeObjectRelease();
          objc_autoreleasePoolPop(v11);
          return;
        }
        v13 = v26;
        if ((v12 & 1) != 0)
        {
          v14 = v2[13];
          v15 = __OFADD__(v14, 1);
          v16 = v14 + 1;
          if (v15)
            goto LABEL_31;
          v2[13] = v16;
          v17 = v8 + 1;
          if (v17 < *(_QWORD *)(v3 + 16))
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v10 = sub_244500A7C(0, v10[2] + 1, 1, v10);
            v19 = v10[2];
            v18 = v10[3];
            if (v19 >= v18 >> 1)
              v10 = sub_244500A7C((_QWORD *)(v18 > 1), v19 + 1, 1, v10);
            v10[2] = v19 + 1;
            v10[v19 + 4] = v13;
            v2[11] = v10;
            v2[12] = v17;
            if (v17 >= *(_QWORD *)(v3 + 16))
              goto LABEL_34;
            sub_2444E8B18(v3 + 40 * v17 + 32, (uint64_t)v23);
            v21 = v24;
            v20 = v25;
            __swift_project_boxed_opaque_existential_1(v23, v24);
            (*(void (**)(uint64_t))(*(_QWORD *)(v20 + 16) + 24))(v21);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!v10[2])
            goto LABEL_32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v22 = v10[2];
            if (!v22)
              goto LABEL_33;
          }
          else
          {
            v10 = sub_2444FAF14(v10);
            v22 = v10[2];
            if (!v22)
              goto LABEL_33;
          }
          v10[2] = v22 - 1;
          swift_bridgeObjectRelease();
          v2[11] = v10;
          v2[12] = v8 - 1;
        }
        objc_autoreleasePoolPop(v11);
        v8 = v2[12];
        if ((v8 & 0x8000000000000000) == 0)
        {
          v3 = *v2;
          if (v8 < *(_QWORD *)(*v2 + 16))
            continue;
        }
        return;
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    return;
  }
  v0[12] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573682A0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2445369D0;
  *(_QWORD *)(v5 + 32) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v2[11] = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_35:
    __break(1u);
    return;
  }
  sub_2444E8B18(v3 + 32, (uint64_t)v23);
  v7 = v24;
  v6 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 24))(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if (!v1)
  {
    v3 = *v2;
    v4 = *(_QWORD *)(*v2 + 16);
    goto LABEL_5;
  }
}

uint64_t sub_2444FA884()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[12];
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = v0;
    if (v2 < *(_QWORD *)(*v0 + 16))
    {
      v4 = v1;
      sub_2444E8B18(*v0 + 40 * v2 + 32, (uint64_t)v28);
      v6 = v29;
      v5 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 8))(v6) & 1) != 0)
      {
        v7 = 0;
      }
      else
      {
        type metadata accessor for BlockLogEntryCollector();
        v8 = swift_allocObject();
        v9 = MEMORY[0x24BEE4B00];
        *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v8 + 24) = v9;
        v10 = v3[1];
        v25 = v3[2];
        swift_getObjectType();
        BYTE1(v31) = 2;
        v11 = v3[4];
        v27 = v3[3];
        v26 = v3[5];
        v13 = v29;
        v12 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        v14 = *(_QWORD *)(v12 + 8);
        v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 16);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v15(&v31, v13, v14);
        v17 = v29;
        v16 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 8))(v17);
        v20 = v19;
        v22 = v29;
        v21 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 24))(v22);
        MEMORY[0x24BDAC7A8](v23);
        v7 = v10;
        (*(void (**)(char *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v25 + 8))((char *)&v31 + 2, (char *)&v31 + 1, v27, v11, v26, &v31, v18, v20);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
          return v7 & 1;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        v7 = BYTE2(v31);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v7 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2444FAB0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;

  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2445196B8(v9, *(_QWORD *)(v10 + 8));
  v11 = sub_2444FAD9C(0x7845657069636572, 0xEF6E6F6974756365, (void (*)(uint64_t *__return_ptr))sub_2444FB084);
  if (v4)
  {
    sub_2444FAC0C(a2, a1, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    v13 = v11;
    sub_2444FAC0C(a2, a1, a3);
    result = swift_unknownObjectRelease();
    *a4 = v13 & 1;
  }
  return result;
}

uint64_t sub_2444FAC0C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a1 + 104);
  v8 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v7 + 8) + 16))(v18, v8);
  v10 = a2[3];
  v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 8))(v10);
  v13 = v12;
  sub_2444E8B18(a1 + 48, (uint64_t)v19);
  v14 = v20;
  v15 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v17 = v6;
  v18[1] = v11;
  v18[2] = v13;
  (*(void (**)(uint64_t, _UNKNOWN **, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v15 + 8))(a3, &off_2515278C0, &off_2515278B0, &v17, v14, v15);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_2444FAD20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)(v9 + 16) + 16))(a2, a3, &off_2515278C0, v8);
  if (!v4)
    *a4 = result & 1;
  return result;
}

uint64_t sub_2444FAD9C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v19;

  v5 = v3;
  a3(&v19);
  if (v4)
  {
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = a1;
    v8[3] = a2;
    v8[4] = v4;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_2444FB0CC;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = (_QWORD *)(v5 + 16);
    swift_beginAccess();
    v11 = *(_QWORD **)(v5 + 16);
    swift_bridgeObjectRetain();
    v12 = v4;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v5 + 16) = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_244500B88(0, v11[2] + 1, 1, v11);
      *v10 = v11;
    }
    v15 = v11[2];
    v14 = v11[3];
    if (v15 >= v14 >> 1)
    {
      v11 = sub_244500B88((_QWORD *)(v14 > 1), v15 + 1, 1, v11);
      *v10 = v11;
    }
    v11[2] = v15 + 1;
    v16 = &v11[2 * v15];
    v16[4] = sub_2444FB10C;
    v16[5] = v9;
    swift_endAccess();
    swift_release();
    swift_willThrow();
  }
  else
  {
    v17 = v19;
  }
  return v17 & 1;
}

_QWORD *sub_2444FAF14(_QWORD *a1)
{
  return sub_244500A7C(0, a1[2], 0, a1);
}

_QWORD *sub_2444FAF28(_QWORD *a1)
{
  return sub_244501360(0, a1[2], 0, a1);
}

uint64_t sub_2444FAF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  _BYTE v20[40];
  _OWORD v21[7];

  sub_2444E8B18(a7, (uint64_t)v20);
  *(_QWORD *)&v14 = a1;
  *((_QWORD *)&v14 + 1) = a5;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a2;
  *(_QWORD *)&v16 = a3;
  *((_QWORD *)&v16 + 1) = a4;
  sub_2444E8B18((uint64_t)v20, (uint64_t)v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  v19 = 0uLL;
  *((_QWORD *)&v18 + 1) = MEMORY[0x24BEE4AF8];
  v21[0] = v14;
  v21[1] = v15;
  v21[2] = v16;
  v21[3] = v17[0];
  v21[4] = v17[1];
  v21[5] = v18;
  v21[6] = 0uLL;
  sub_2444FA594();
  return sub_2444FB03C((uint64_t)v21);
}

uint64_t sub_2444FB03C(uint64_t a1)
{
  destroy for BlockProcessorHelper(a1);
  return a1;
}

uint64_t sub_2444FB068@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2444FAB0C(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_2444FB084@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2444FAD20(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_2444FB0A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2444FB0CC()
{
  uint64_t v0;

  return sub_244521AF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_2444FB0E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2444FB10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_244521C80(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_2444FB124()
{
  uint64_t v0;

  return sub_2444FA4F8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t destroy for BlockProcessorHelper(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlockProcessorHelper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a2 + 48;
  v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 48, v5, v7);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BlockProcessorHelper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = v4;
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for BlockProcessorHelper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockProcessorHelper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockProcessorHelper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockProcessorHelper()
{
  return &type metadata for BlockProcessorHelper;
}

uint64_t dispatch thunk of ProvidesInputParametersBlockName.dependencyName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2444FB5D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573682B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444FBB98();
  sub_244533F3C();
  v14 = 0;
  sub_244533D68();
  if (!v5)
  {
    v13 = 1;
    sub_244533D50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2444FB6F8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 1701667182;
}

uint64_t sub_2444FB730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444FB910(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2444FB754()
{
  sub_2444FBB98();
  return sub_244533F48();
}

uint64_t sub_2444FB77C()
{
  sub_2444FBB98();
  return sub_244533F54();
}

uint64_t sub_2444FB7A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2444FB9EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2444FB7D0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2444FB5D0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_2444FB7EC(uint64_t *a1, uint64_t *a2)
{
  return sub_2444FB870(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_2444FB808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) + 8))();
  (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 16) + 8))(a1);
  return v4;
}

uint64_t sub_2444FB870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6 || (v12 = sub_244533DF8(), result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (sub_244533DF8() & 1) != 0))
        return 1;
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2444FB910(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244534580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2444FB9EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573682A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444FBB98();
  sub_244533F18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_244533D14();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_244533CE4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_2444FBB98()
{
  unint64_t result;

  result = qword_2573682B0;
  if (!qword_2573682B0)
  {
    result = MEMORY[0x2495115A0](&unk_244536EC8, &type metadata for MaterializedViewBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573682B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MaterializedViewBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2444FBC28 + 4 * byte_244536D25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2444FBC5C + 4 * asc_244536D20[v4]))();
}

uint64_t sub_2444FBC5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444FBC64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444FBC6CLL);
  return result;
}

uint64_t sub_2444FBC78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444FBC80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2444FBC84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444FBC8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaterializedViewBlockConfig.CodingKeys()
{
  return &type metadata for MaterializedViewBlockConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for MaterializedViewBlockConfig()
{
  return &type metadata for MaterializedViewBlockConfig;
}

unint64_t sub_2444FBCB8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2444FBCEC();
  a1[2] = sub_2444FBD30();
  result = sub_2444FBD74();
  a1[3] = result;
  return result;
}

unint64_t sub_2444FBCEC()
{
  unint64_t result;

  result = qword_2573682C0;
  if (!qword_2573682C0)
  {
    result = MEMORY[0x2495115A0](&unk_244536DCC, &type metadata for MaterializedViewBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573682C0);
  }
  return result;
}

unint64_t sub_2444FBD30()
{
  unint64_t result;

  result = qword_2573682C8;
  if (!qword_2573682C8)
  {
    result = MEMORY[0x2495115A0](&unk_244536DA4, &type metadata for MaterializedViewBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573682C8);
  }
  return result;
}

unint64_t sub_2444FBD74()
{
  unint64_t result;

  result = qword_2573682D0;
  if (!qword_2573682D0)
  {
    result = MEMORY[0x2495115A0](&unk_244536D7C, &type metadata for MaterializedViewBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573682D0);
  }
  return result;
}

unint64_t sub_2444FBDBC()
{
  unint64_t result;

  result = qword_2573682D8;
  if (!qword_2573682D8)
  {
    result = MEMORY[0x2495115A0](&unk_244536EA0, &type metadata for MaterializedViewBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573682D8);
  }
  return result;
}

unint64_t sub_2444FBE04()
{
  unint64_t result;

  result = qword_2573682E0;
  if (!qword_2573682E0)
  {
    result = MEMORY[0x2495115A0](&unk_244536E10, &type metadata for MaterializedViewBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573682E0);
  }
  return result;
}

unint64_t sub_2444FBE4C()
{
  unint64_t result;

  result = qword_2573682E8;
  if (!qword_2573682E8)
  {
    result = MEMORY[0x2495115A0](&unk_244536E38, &type metadata for MaterializedViewBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573682E8);
  }
  return result;
}

uint64_t BlockLogMetadata.sequenceId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void BlockLogMetadata.blockType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t BlockLogMetadata.blockName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2444FBED0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7079546B636F6C62;
  if (*v0 != 1)
    v1 = 0x6D614E6B636F6C62;
  if (*v0)
    return v1;
  else
    return 0x65636E6575716573;
}

uint64_t sub_2444FBF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2444FC4D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2444FBF5C()
{
  sub_2444FC124();
  return sub_244533F48();
}

uint64_t sub_2444FBF84()
{
  sub_2444FC124();
  return sub_244533F54();
}

uint64_t BlockLogMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573682F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v10[0] = *(_QWORD *)(v1 + 24);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444FC124();
  sub_244533F3C();
  v15 = 0;
  sub_244533D80();
  if (!v2)
  {
    v14 = v11;
    v13 = 1;
    sub_2444FC168();
    sub_244533D98();
    v12 = 2;
    sub_244533D68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2444FC124()
{
  unint64_t result;

  result = qword_2573682F8;
  if (!qword_2573682F8)
  {
    result = MEMORY[0x2495115A0](&unk_244537034, &type metadata for BlockLogMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573682F8);
  }
  return result;
}

unint64_t sub_2444FC168()
{
  unint64_t result;

  result = qword_257368300;
  if (!qword_257368300)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockType, &type metadata for BlockType);
    atomic_store(result, (unint64_t *)&qword_257368300);
  }
  return result;
}

uint64_t sub_2444FC1AC(_QWORD *a1)
{
  return BlockLogMetadata.encode(to:)(a1);
}

uint64_t destroy for BlockLogMetadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BlockLogMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockLogMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockLogMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockLogMetadata()
{
  return &type metadata for BlockLogMetadata;
}

uint64_t storeEnumTagSinglePayload for BlockLogMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2444FC378 + 4 * byte_244536F25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2444FC3AC + 4 * byte_244536F20[v4]))();
}

uint64_t sub_2444FC3AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444FC3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2444FC3BCLL);
  return result;
}

uint64_t sub_2444FC3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2444FC3D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2444FC3D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2444FC3DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockLogMetadata.CodingKeys()
{
  return &type metadata for BlockLogMetadata.CodingKeys;
}

unint64_t sub_2444FC3FC()
{
  unint64_t result;

  result = qword_257368308;
  if (!qword_257368308)
  {
    result = MEMORY[0x2495115A0](&unk_24453700C, &type metadata for BlockLogMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368308);
  }
  return result;
}

unint64_t sub_2444FC444()
{
  unint64_t result;

  result = qword_257368310;
  if (!qword_257368310)
  {
    result = MEMORY[0x2495115A0](&unk_244536F7C, &type metadata for BlockLogMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368310);
  }
  return result;
}

unint64_t sub_2444FC48C()
{
  unint64_t result;

  result = qword_257368318;
  if (!qword_257368318)
  {
    result = MEMORY[0x2495115A0](&unk_244536FA4, &type metadata for BlockLogMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368318);
  }
  return result;
}

uint64_t sub_2444FC4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636E6575716573 && a2 == 0xEA00000000006449;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546B636F6C62 && a2 == 0xE900000000000065 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6B636F6C62 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of ProvidesCustomConfigData.customConfigData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2444FC650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2444FC77C(a1, a2, a3, &qword_257367D48, (uint64_t (*)(_QWORD))MEMORY[0x24BE74690], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2444F7880, (void (*)(uint64_t, uint64_t))sub_244519CA4);
}

uint64_t sub_2444FC674(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2444F2854((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_2444F7A28(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_244533C6C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_2444EC024(a1, &qword_257368468);
    sub_244519CC0(a2, v9);
    v7 = sub_244533C6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_2444EC024((uint64_t)v9, &qword_257368468);
  }
}

uint64_t sub_2444FC758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2444FC77C(a1, a2, a3, &qword_257368470, (uint64_t (*)(_QWORD))MEMORY[0x24BE745E8], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2444F7E7C, (void (*)(uint64_t, uint64_t))sub_244519EA0);
}

uint64_t sub_2444FC77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v11;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;

  v24 = a6;
  v11 = v7;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a5(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v24 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_2444EC024(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease();
    return sub_2444EC024((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v11;
    *v11 = 0x8000000000000000;
    v24(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *v11 = v25;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

id sub_2444FC900(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
    case 2:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RecipeError(uint64_t a1)
{
  sub_2444FC948(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_2444FC948(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:

      break;
    default:
      return;
  }
}

uint64_t _s12PoirotBlocks11RecipeErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2444FC900(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RecipeError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2444FC900(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2444FC948(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RecipeError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2444FC948(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2444FCAEC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_2444FCB04(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RecipeError()
{
  return &type metadata for RecipeError;
}

void sub_2444FCB2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD);
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36[32];
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  void *v40[2];
  char v41;
  unint64_t v42;

  v7 = sub_244533C6C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2445333CC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  v17 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v16);
  sub_2444FEA1C(a2, (uint64_t)v40);
  v18 = sub_2445333D8();
  if (v3)
  {
    sub_2444EC024((uint64_t)v40, &qword_257368440);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v17);
    *(_QWORD *)&v37 = v3;
    v28 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if (swift_dynamicCast())
    {
      sub_2444FC948(v40[0], (uint64_t)v40[1], v41);
    }
    else
    {
      sub_2444E4CB0();
      swift_allocError();
      *(_QWORD *)v29 = v3;
      *(_QWORD *)(v29 + 8) = 0;
      *(_BYTE *)(v29 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    v33 = v17;
    v34 = v10;
    v35 = v18;
    v42 = v19;
    sub_244533240();
    swift_allocObject();
    sub_244533234();
    if (qword_257367978 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v7, (uint64_t)qword_257370CB8);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v22 = (uint64_t)v34;
    v21(v34, v20, v7);
    sub_2444FEA1C((uint64_t)v40, (uint64_t)&v37);
    v23 = type metadata accessor for CodingContext();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 56) = 0;
    *(_QWORD *)(v24 + 64) = 0;
    swift_bridgeObjectRelease();
    sub_2444FEAF4((uint64_t)&v37, v24 + 16);
    *(_QWORD *)&v39 = v23;
    *(_QWORD *)&v37 = v24;
    v25 = (void (*)(char *, _QWORD))sub_244533228();
    sub_2444FC674((uint64_t)&v37, v22);
    v25(v36, 0);
    sub_2444FEB3C();
    v26 = v35;
    v27 = v42;
    sub_24453321C();
    swift_release();
    sub_2444F53D0(v26, v27);
    sub_2444EC024((uint64_t)v40, &qword_257368440);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
    v30 = v38;
    v31 = v39;
    *(_OWORD *)a3 = v37;
    *(_QWORD *)(a3 + 16) = v30;
    *(_OWORD *)(a3 + 24) = v31;
  }
}

uint64_t sub_2444FCE78(uint64_t a1, __int128 *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(void);
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  id v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  BOOL v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, _QWORD, uint64_t);
  unsigned int v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(void);
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;

  v103 = a5;
  v104 = a4;
  v105 = a3;
  v112 = sub_2445332AC();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v110 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244533990();
  MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_24453333C();
  v124 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2445333CC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v116 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v121 = (char *)&v86 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)&v86 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v86 - v21;
  v23 = *(void **)(a1 + 16);
  *(_QWORD *)(v5 + 56) = v23;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(a1 + 40);
  v122 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 64) = v122;
  v90 = v5 + 16;
  sub_2444E8B18(v103, v5 + 16);
  v24 = a2[1];
  v129 = *a2;
  v25 = *((_QWORD *)a2 + 4);
  v123 = *((_QWORD *)a2 + 3);
  v130 = v123;
  v128 = v25;
  *(_OWORD *)(v5 + 128) = v129;
  *(_OWORD *)(v5 + 144) = v24;
  *(_QWORD *)(v5 + 160) = v25;
  v119 = v14;
  v26 = *(void (**)(void))(v14 + 16);
  v91 = (char *)(v5 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_recipeFolder);
  v120 = v13;
  v115 = v26;
  v26();
  v93 = v5;
  v89 = v5 + 80;
  sub_2444FEA1C(v104, v5 + 80);
  v94 = a1;
  v98 = *(_QWORD *)(a1 + 16);
  v126 = 0x73656972657551;
  v127 = 0xE700000000000000;
  v27 = v124;
  v28 = *(void (**)(_QWORD))(v124 + 104);
  v97 = *MEMORY[0x24BDCD7A0];
  v29 = v106;
  v96 = (void (*)(char *, _QWORD, uint64_t))v28;
  v28(v12);
  v30 = v23;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2444F4198((uint64_t)&v129);
  sub_2444FEA64((uint64_t)&v130);
  sub_2444FEA64((uint64_t)&v128);
  v31 = sub_2444FE9D8();
  v102 = v22;
  v118 = v31;
  sub_2445333C0();
  v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v99 = v12;
  v95 = v32;
  v32(v12, v29);
  swift_bridgeObjectRelease();
  v33 = sub_2444F555C(MEMORY[0x24BEE4AF8]);
  v34 = *(_QWORD *)(v123 + 16);
  if (!v34)
    goto LABEL_32;
  v100 = v33;
  v35 = v123 + 32;
  swift_bridgeObjectRetain();
  v36 = 0;
  v37 = v125;
  v38 = v121;
  v87 = v34;
  v86 = v35;
  while (2)
  {
    v39 = *(_QWORD *)(v35 + 16 * v36);
    v40 = *(_QWORD *)(v35 + 16 * v36 + 8);
    v126 = v39;
    v127 = v40;
    v41 = v99;
    v42 = v106;
    v96(v99, v97, v106);
    v92 = v40;
    swift_bridgeObjectRetain();
    sub_2445333C0();
    v95(v41, v42);
    v43 = sub_2444F28C8();
    if (v37)
    {
      v52 = v120;
      v66 = *(void (**)(char *, uint64_t))(v119 + 8);
LABEL_31:
      v81 = v93;
      v82 = v104;
      v83 = v103;
      v66(v101, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2444FEAB4((uint64_t)&v130);
      sub_2444FEA8C((uint64_t)&v129);
      sub_2444FEAB4((uint64_t)&v130);
      sub_2444FEAB4((uint64_t)&v128);
      __swift_destroy_boxed_opaque_existential_1(v83);
      sub_2444EC024(v82, &qword_257368440);
      v66(v105, v52);
      v66(v102, v52);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v90);

      swift_unknownObjectRelease();
      sub_2444EC024(v89, &qword_257368440);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66(v91, v52);
      type metadata accessor for RecipeProcessor();
      swift_deallocPartialClassInstance();
      return v81;
    }
    v44 = v43;
    v88 = v36 + 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368038);
    result = sub_244533C90();
    v46 = result;
    v47 = 0;
    v48 = *(_QWORD *)(v44 + 64);
    v107 = v44 + 64;
    v49 = 1 << *(_BYTE *)(v44 + 32);
    if (v49 < 64)
      v50 = ~(-1 << v49);
    else
      v50 = -1;
    v51 = v50 & v48;
    v108 = (unint64_t)(v49 + 63) >> 6;
    v109 = result + 64;
    v52 = v120;
    v113 = v44;
    v114 = result;
    if (v51)
    {
LABEL_8:
      v125 = 0;
      v121 = (char *)((v51 - 1) & v51);
      *(_QWORD *)&v122 = v47;
      v53 = __clz(__rbit64(v51)) | (v47 << 6);
      goto LABEL_20;
    }
    while (1)
    {
      v54 = __OFADD__(v47, 1);
      v55 = v47 + 1;
      if (v54)
        goto LABEL_36;
      if (v55 >= v108)
        goto LABEL_28;
      v56 = *(_QWORD *)(v107 + 8 * v55);
      if (!v56)
        break;
LABEL_19:
      v125 = 0;
      v121 = (char *)((v56 - 1) & v56);
      *(_QWORD *)&v122 = v55;
      v53 = __clz(__rbit64(v56)) + (v55 << 6);
LABEL_20:
      v58 = *(_QWORD *)(v44 + 56);
      v59 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * v53);
      v60 = v59[1];
      v123 = *v59;
      v61 = v119;
      ((void (*)(char *, unint64_t, uint64_t))v115)(v38, v58 + *(_QWORD *)(v119 + 72) * v53, v52);
      v124 = v60;
      swift_bridgeObjectRetain();
      v62 = v116;
      sub_244533384();
      v63 = sub_24453336C();
      v65 = v64;
      v66 = *(void (**)(char *, uint64_t))(v61 + 8);
      v66(v62, v52);
      sub_244533984();
      v67 = v125;
      v68 = sub_244533930();
      v37 = v67;
      if (v67)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v66(v38, v52);
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      v126 = v68;
      v127 = v69;
      v70 = v110;
      sub_2445332A0();
      v71 = sub_244533B4C();
      v73 = v72;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v70, v112);
      swift_bridgeObjectRelease();
      type metadata accessor for Query();
      v74 = swift_allocObject();
      *(_BYTE *)(v74 + 48) = 0;
      *(_QWORD *)(v74 + 16) = v63;
      *(_QWORD *)(v74 + 24) = v65;
      *(_QWORD *)(v74 + 32) = v71;
      *(_QWORD *)(v74 + 40) = v73;
      v52 = v120;
      result = ((uint64_t (*)(char *, uint64_t))v66)(v38, v120);
      *(_QWORD *)(v109 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
      v46 = v114;
      v75 = (_QWORD *)(*(_QWORD *)(v114 + 48) + 16 * v53);
      v76 = v124;
      *v75 = v123;
      v75[1] = v76;
      *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v53) = v74;
      v77 = *(_QWORD *)(v46 + 16);
      v54 = __OFADD__(v77, 1);
      v78 = v77 + 1;
      if (v54)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return result;
      }
      *(_QWORD *)(v46 + 16) = v78;
      v44 = v113;
      v51 = (unint64_t)v121;
      v47 = v122;
      if (v121)
        goto LABEL_8;
    }
    v57 = v55 + 1;
    if (v55 + 1 >= v108)
      goto LABEL_28;
    v56 = *(_QWORD *)(v107 + 8 * v57);
    if (v56)
      goto LABEL_18;
    v57 = v55 + 2;
    if (v55 + 2 >= v108)
      goto LABEL_28;
    v56 = *(_QWORD *)(v107 + 8 * v57);
    if (v56)
    {
LABEL_18:
      v55 = v57;
      goto LABEL_19;
    }
    v57 = v55 + 3;
    if (v55 + 3 < v108)
    {
      v56 = *(_QWORD *)(v107 + 8 * v57);
      if (!v56)
      {
        while (1)
        {
          v55 = v57 + 1;
          if (__OFADD__(v57, 1))
            goto LABEL_37;
          if (v55 >= v108)
            goto LABEL_28;
          v56 = *(_QWORD *)(v107 + 8 * v55);
          ++v57;
          if (v56)
            goto LABEL_19;
        }
      }
      goto LABEL_18;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v101, v52);
    v79 = v100;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v126 = v79;
    sub_2444FDD10(v46, (uint64_t)sub_2444FE12C, 0, isUniquelyReferenced_nonNull_native, &v126);
    v100 = v126;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v88;
    v35 = v86;
    if (v88 != v87)
      continue;
    break;
  }
  sub_2444FEAB4((uint64_t)&v130);
  v33 = v100;
LABEL_32:
  sub_2444FEA8C((uint64_t)&v129);
  sub_2444FEAB4((uint64_t)&v130);
  sub_2444FEAB4((uint64_t)&v128);
  __swift_destroy_boxed_opaque_existential_1(v103);
  sub_2444EC024(v104, &qword_257368440);
  v84 = v120;
  v85 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  v85((uint64_t)v105, v120);
  v85((uint64_t)v102, v84);
  swift_release();
  v81 = v93;
  *(_QWORD *)(v93 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_unclaimedQueries) = v33;
  return v81;
}

uint64_t sub_2444FD8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  sub_2444FE160(v1, (void (*)(uint64_t, uint64_t, uint64_t))sub_2444FDB10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  sub_2444EC024(v0 + 80, &qword_257368440);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC12PoirotBlocks15RecipeProcessor_recipeFolder;
  v3 = sub_2445333CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2444FD9A0()
{
  return sub_244526664();
}

uint64_t sub_2444FD9F4()
{
  sub_2444FD8B0();
  return swift_deallocClassInstance();
}

uint64_t sub_2444FDA18()
{
  return type metadata accessor for RecipeProcessor();
}

uint64_t type metadata accessor for RecipeProcessor()
{
  uint64_t result;

  result = qword_257368350;
  if (!qword_257368350)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2444FDA5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2445333CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2444FDB10()
{
  return sub_2444FD9A0();
}

_QWORD *sub_2444FDB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *(*v12)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *result;
  char v15;
  uint64_t v16;

  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  ObjectType = swift_getObjectType();
  v15 = 1;
  v12 = *(_QWORD *(**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368448);
  result = v12(&v16, &v15, a2, a3, a4, sub_2444FE2F8, a1, v13, ObjectType, v10);
  if (!v4)
  {
    sub_2444FA168(v16, a2, a3, a4, v9, v10, a1 + 16);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2444FDC08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD v10[5];

  v10[3] = type metadata accessor for RecipeProcessor();
  v10[4] = &off_251525B50;
  v9[2] = v10;
  v10[0] = a1;
  swift_retain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_2444FE800(v5, (uint64_t (*)(_QWORD, char *))sub_2444FE310, (uint64_t)v9);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v2)
  {
    swift_beginAccess();
    v8 = swift_bridgeObjectRetain();
    sub_2444FE328(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2444FE93C);
    result = swift_bridgeObjectRelease();
    *a2 = v6;
  }
  return result;
}

void sub_2444FDD10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_2444F1F54();
  if (!v8)
    goto LABEL_22;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v13 = (_QWORD *)*a5;
  v15 = sub_2444EB9F0(v7, v8);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      sub_2444F855C();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_2444ECA38(v18, a4 & 1);
  v20 = sub_2444EB9F0(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
    {
LABEL_12:
      v22[(v15 >> 6) + 8] |= 1 << v15;
      v29 = (uint64_t *)(v22[6] + 16 * v15);
      *v29 = v10;
      v29[1] = v11;
      *(_QWORD *)(v22[7] + 8 * v15) = v12;
      v30 = v22[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v22[2] = v32;
      v33 = sub_2444F1F54();
      if (v34)
      {
        v36 = v33;
        v37 = v34;
        v38 = v35;
        do
        {
          v39 = (_QWORD *)*a5;
          v15 = sub_2444EB9F0(v36, v37);
          v41 = v39[2];
          v42 = (v40 & 1) == 0;
          v43 = v41 + v42;
          if (__OFADD__(v41, v42))
            goto LABEL_23;
          v44 = v40;
          if (v39[3] < v43)
          {
            sub_2444ECA38(v43, 1);
            v45 = sub_2444EB9F0(v36, v37);
            if ((v44 & 1) != (v46 & 1))
              goto LABEL_25;
            v15 = v45;
          }
          v22 = (_QWORD *)*a5;
          if ((v44 & 1) != 0)
            goto LABEL_9;
          v22[(v15 >> 6) + 8] |= 1 << v15;
          v47 = (uint64_t *)(v22[6] + 16 * v15);
          *v47 = v36;
          v47[1] = v37;
          *(_QWORD *)(v22[7] + 8 * v15) = v38;
          v48 = v22[2];
          v31 = __OFADD__(v48, 1);
          v49 = v48 + 1;
          if (v31)
            goto LABEL_24;
          v22[2] = v49;
          v36 = sub_2444F1F54();
          v37 = v50;
          v38 = v51;
        }
        while (v50);
      }
LABEL_22:
      swift_release();
      swift_bridgeObjectRelease();
      sub_2444F2780();
      swift_release();
      return;
    }
LABEL_9:
    v23 = *(_QWORD *)(v22[7] + 8 * v15);
    v25 = *(_QWORD *)(v23 + 16);
    v24 = *(_QWORD *)(v23 + 24);
    sub_2444F2CD8();
    v26 = (void *)swift_allocError();
    *(_QWORD *)v27 = v25;
    *(_QWORD *)(v27 + 8) = v24;
    *(_BYTE *)(v27 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    v28 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2444F2780();
      swift_release();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_244533E88();
  __break(1u);
LABEL_26:
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_2445339D8();
  sub_244533C84();
  __break(1u);
}

uint64_t sub_2444FE12C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2444FE160(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v14, v15, v16);
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2444FE2F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2444FDC08(v1, a1);
}

uint64_t sub_2444FE310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24451852C(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_2444FE328(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;

  v3 = v2;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    a2(v18, v19, v20);
    if (v3)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v22)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v22)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 2;
      if (v11 + 2 >= v22)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 3;
      if (v11 + 3 >= v22)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_14:
        v11 = v16;
        goto LABEL_15;
      }
      v21 = v11 + 4;
      if (v11 + 4 >= v22)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v21);
      v11 += 4;
      if (!v15)
        break;
    }
LABEL_15:
    v9 = (v15 - 1) & v15;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v22)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v21;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_2444FE508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t, uint64_t)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];
  _QWORD v32[5];
  __int128 v33[2];
  uint64_t v34;

  v29 = a1;
  v30 = a4;
  v34 = a3;
  v5 = sub_24453333C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2445333CC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - v14;
  v32[0] = 0x6A2E657069636572;
  v32[1] = 0xEB000000006E6F73;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDCD7A0], v5);
  sub_2444FE9D8();
  sub_2445333C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  if ((sub_244533324() & 1) != 0)
  {
    v16 = v29;
    v17 = v30;
    v18 = v34;
    v19 = v28;
    sub_2444FCB2C((uint64_t)v15, v34, (uint64_t)v33);
    if (!v19)
    {
      v28 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
      sub_2444FEA1C(v18, (uint64_t)v32);
      sub_2444E8B18(v17, (uint64_t)v31);
      type metadata accessor for RecipeProcessor();
      v25 = (void (*)(uint64_t, uint64_t))swift_allocObject();
      sub_2444FCE78(v16, v33, v13, (uint64_t)v32, (uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1(v17);
      sub_2444EC024(v18, &qword_257368440);
      v27 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v27(a2, v9);
      v27((uint64_t)v15, v9);
      return v25;
    }
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v17);
    v20 = v18;
  }
  else
  {
    v21 = sub_244533354();
    v23 = v22;
    sub_2444E4CB0();
    swift_allocError();
    *(_QWORD *)v24 = v21;
    *(_QWORD *)(v24 + 8) = v23;
    *(_BYTE *)(v24 + 16) = 0;
    swift_willThrow();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v30);
    v20 = v34;
  }
  sub_2444EC024(v20, &qword_257368440);
  v25 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v25(a2, v9);
  v25((uint64_t)v15, v9);
  return v25;
}

uint64_t sub_2444FE800(uint64_t a1, uint64_t (*a2)(_QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v14[6];
  char v15;
  _OWORD v16[6];
  char v17;
  uint64_t v18;

  v5 = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = 0;
    v9 = v7 + 32;
    while (1)
    {
      sub_2444FE960(v9, (uint64_t)v14 + 8);
      *(_QWORD *)&v16[0] = v8;
      sub_2444FE99C((uint64_t)v14 + 8, (uint64_t)v16 + 8);
      v14[4] = v16[4];
      v14[5] = v16[5];
      v15 = v17;
      v14[0] = v16[0];
      v14[1] = v16[1];
      v14[2] = v16[2];
      v14[3] = v16[3];
      v5 = a3;
      v10 = a2(*(_QWORD *)&v16[0], (char *)v14 + 8);
      if (v3)
        break;
      v11 = v10;
      ++v8;
      sub_2444EC024((uint64_t)v14, &qword_257368450);
      sub_2444FF8F8(v11);
      v9 += 96;
      if (v6 == v8)
      {
        v5 = v18;
        goto LABEL_6;
      }
    }
    sub_2444EC024((uint64_t)v14, &qword_257368450);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_2444FE93C()
{
  return sub_24452624C();
}

uint64_t sub_2444FE960(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BlockConfig(a2, a1);
  return a2;
}

uint64_t sub_2444FE99C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy89_8(a2, a1);
  return a2;
}

unint64_t sub_2444FE9D8()
{
  unint64_t result;

  result = qword_257368458;
  if (!qword_257368458)
  {
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257368458);
  }
  return result;
}

uint64_t sub_2444FEA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2444FEA64(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2444FEA8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2444FEAB4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2444FEAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2444FEB3C()
{
  unint64_t result;

  result = qword_257368460;
  if (!qword_257368460)
  {
    result = MEMORY[0x2495115A0](&unk_244536554, &type metadata for AggregationRecipe);
    atomic_store(result, (unint64_t *)&qword_257368460);
  }
  return result;
}

unint64_t sub_2444FEB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  char v10;

  if (!a2)
    return sub_2444F541C(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_244501978(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    sub_244533BAC();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v7 = 0x8000000244534B00;
    sub_244502184();
    swift_allocError();
    v10 = 0;
    *(_QWORD *)v9 = 0xD00000000000001ALL;
LABEL_8:
    *(_QWORD *)(v9 + 8) = v7;
    *(_BYTE *)(v9 + 16) = v10;
    swift_willThrow();
    return v7;
  }
  if (v6 != 1)
  {
    sub_244533BAC();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_244533DBC();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    v7 = 0x8000000244534AE0;
    sub_244502184();
    swift_allocError();
    *(_QWORD *)v9 = 0xD00000000000001DLL;
    v10 = 1;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v5 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

PoirotBlocks::Dataset __swiftcall Dataset.init()()
{
  _QWORD *v0;
  PoirotBlocks::Dataset result;

  *v0 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t Dataset.rows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dataset.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

BOOL Dataset.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

PoirotBlocks::Dataset __swiftcall Dataset.init(_:)(PoirotBlocks::Dataset result)
{
  PoirotBlocks::Dataset *v1;

  v1->rows._rawValue = result.rows._rawValue;
  return result;
}

unint64_t Dataset.subscript.getter@<X0>(unint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > result)
  {
    v3 = (_QWORD *)(*(_QWORD *)v2 + 24 * result);
    v4 = v3[5];
    v5 = v3[6];
    *a2 = v3[4];
    a2[1] = v4;
    a2[2] = v5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t Dataset.makeIterator()()
{
  return swift_bridgeObjectRetain();
}

uint64_t Dataset.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_244501978(v6, a1, a2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t Dataset.filter(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  v8 = *v3;
  swift_bridgeObjectRetain();
  result = sub_2444FFD8C(a1, a2, v8);
  if (!v4)
    *a3 = result;
  return result;
}

uint64_t Dataset.appending(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = *v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_244500DB4(0, v7[2] + 1, 1, v7);
  v9 = v7[2];
  v8 = v7[3];
  if (v9 >= v8 >> 1)
    v7 = sub_244500DB4((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v9 + 1;
  v10 = &v7[3 * v9];
  v10[4] = v5;
  v10[5] = v4;
  v10[6] = v6;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t Dataset.appending<A>(contentsOf:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257368478);
  sub_244501B2C(&qword_257368480, &qword_257368478, MEMORY[0x24BEE12E8]);
  result = sub_244533B04();
  *a1 = v3;
  return result;
}

uint64_t Dataset.append(_:)(uint64_t *a1)
{
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_244500DB4(0, v5[2] + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_244500DB4((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    v5 = (_QWORD *)result;
  }
  v5[2] = v8 + 1;
  v9 = &v5[3 * v8];
  v9[4] = v3;
  v9[5] = v2;
  v9[6] = v4;
  *v1 = v5;
  return result;
}

uint64_t Dataset.append<A>(contentsOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368478);
  return sub_244533A8C();
}

uint64_t sub_2444FF1F0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_244500C94(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444FF34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_244500DB4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444FF4A4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  BOOL v28;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  int64_t v43;
  unint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_244500DB4(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = (uint64_t)sub_24450632C(v41, &v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v13 = v4[2];
    v14 = __OFADD__(v13, result);
    v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v7 = v42;
  v39 = v41[1];
  v40 = v41[0];
  v6 = v43;
  v37 = v42;
  if (!v44)
  {
LABEL_51:
    v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    v22 = (unint64_t)(v7 + 64) >> 6;
    if (v30 >= v22)
      goto LABEL_13;
    v34 = *(_QWORD *)(v39 + 8 * v30);
    if (!v34)
    {
      v35 = v6 + 2;
      if (v6 + 2 >= v22)
        goto LABEL_13;
      v34 = *(_QWORD *)(v39 + 8 * v35);
      if (v34)
      {
LABEL_59:
        v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v22)
          goto LABEL_13;
        v34 = *(_QWORD *)(v39 + 8 * (v6 + 3));
        if (!v34)
          goto LABEL_65;
        v30 = v6 + 3;
      }
    }
LABEL_54:
    v16 = (v34 - 1) & v34;
    v17 = __clz(__rbit64(v34)) + (v30 << 6);
    v6 = v30;
    v7 = v37;
    goto LABEL_18;
  }
  v16 = (v44 - 1) & v44;
  v17 = __clz(__rbit64(v44)) | (v43 << 6);
LABEL_18:
  v18 = (uint64_t *)(*(_QWORD *)(v40 + 56) + 24 * v17);
  v19 = *v18;
  v20 = v18[1];
  v21 = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_13;
  v38 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v23 = v4[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      v4 = sub_244500DB4((_QWORD *)(v23 > 1), v2 + 1, 1, v4);
      v24 = v4[3] >> 1;
    }
    if (v2 < v24)
      break;
LABEL_20:
    v4[2] = v2;
    if (!v20)
      goto LABEL_13;
  }
  while (1)
  {
    v29 = &v4[3 * v2 + 4];
    *v29 = v19;
    v29[1] = v20;
    v29[2] = v21;
    ++v2;
    if (!v16)
      break;
    v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v26 = v25 | (v6 << 6);
LABEL_26:
    v27 = (uint64_t *)(*(_QWORD *)(v40 + 56) + 24 * v26);
    v19 = *v27;
    v20 = v27[1];
    v21 = v27[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
      v28 = v2 < v24;
    else
      v28 = 0;
    if (!v28)
      goto LABEL_20;
  }
  v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v38)
      goto LABEL_55;
    v31 = *(_QWORD *)(v39 + 8 * v30);
    if (v31)
      goto LABEL_41;
    v32 = v6 + 2;
    if (v6 + 2 >= v38)
      goto LABEL_55;
    v31 = *(_QWORD *)(v39 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v38)
        goto LABEL_55;
      v31 = *(_QWORD *)(v39 + 8 * (v6 + 3));
      if (v31)
      {
        v30 = v6 + 3;
        goto LABEL_41;
      }
      v32 = v6 + 4;
      if (v6 + 4 >= v38)
        goto LABEL_55;
      v31 = *(_QWORD *)(v39 + 8 * v32);
      if (!v31)
      {
        v30 = v6 + 5;
        if (v6 + 5 >= v38)
          goto LABEL_55;
        v31 = *(_QWORD *)(v39 + 8 * v30);
        if (!v31)
        {
          v33 = v6 + 6;
          while (v38 != v33)
          {
            v31 = *(_QWORD *)(v39 + 8 * v33++);
            if (v31)
            {
              v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v30 = v32;
LABEL_41:
    v16 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v35 = v30 + 3;
  if (v30 + 3 < v22)
  {
    v34 = *(_QWORD *)(v39 + 8 * v35);
    if (v34)
      goto LABEL_59;
    v30 += 4;
    if (v30 >= v22)
      goto LABEL_13;
    v34 = *(_QWORD *)(v39 + 8 * v30);
    if (!v34)
    {
      v36 = v6 + 6;
      while (v22 != v36)
      {
        v34 = *(_QWORD *)(v39 + 8 * v36++);
        if (v34)
        {
          v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_2444F2780();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_2444FF8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_244500EEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368030);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444FFA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_24450112C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2444FFBB0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_2445015AC(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for DatasetColumnDescription(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

PoirotBlocks::Dataset __swiftcall Dataset.appending(contentsOf:)(PoirotBlocks::Dataset contentsOf)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  PoirotBlocks::Dataset result;
  uint64_t v6;

  v3 = v1;
  v4 = *(_QWORD *)contentsOf.rows._rawValue;
  v6 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result.rows._rawValue = (void *)sub_2444FF34C(v4);
  *v3 = v6;
  return result;
}

Swift::Void __swiftcall Dataset.append(contentsOf:)(PoirotBlocks::Dataset contentsOf)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain();
  sub_2444FF34C(v1);
}

uint64_t sub_2444FFD8C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *);
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v14 = (uint64_t (*)(uint64_t *))result;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v5 = 0;
    v6 = (_OWORD *)(a3 + 40);
    v7 = MEMORY[0x24BEE4AF8];
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      v8 = *((_QWORD *)v6 - 1);
      v15 = *v6;
      v16 = v8;
      v17 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = v14(&v16);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v9 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v18 = v7;
        if ((result & 1) == 0)
        {
          result = sub_2444F0D4C(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v18;
        }
        v11 = *(_QWORD *)(v7 + 16);
        v10 = *(_QWORD *)(v7 + 24);
        if (v11 >= v10 >> 1)
        {
          result = sub_2444F0D4C(v10 > 1, v11 + 1, 1);
          v7 = v18;
        }
        *(_QWORD *)(v7 + 16) = v11 + 1;
        v12 = v7 + 24 * v11;
        *(_QWORD *)(v12 + 32) = v8;
        *(_OWORD *)(v12 + 40) = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 = (_OWORD *)((char *)v6 + 24);
      if (v13 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t static Dataset.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2444FFF34(*a1, *a2);
}

uint64_t sub_2444FFF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[8];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 48);
    for (i = a1 + 48; ; i += 24)
    {
      v5 = *v3;
      if (*(_QWORD *)(*(_QWORD *)i + 16) != *(_QWORD *)(*v3 + 16))
        break;
      MEMORY[0x24BDAC7A8](a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_2444EB79C(v5, (uint64_t (*)(_QWORD, _QWORD, __int128 *))sub_2444EC018, (uint64_t)v8);
      swift_bridgeObjectRelease();
      v6 = v9;
      sub_2445027C8((uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = swift_bridgeObjectRelease();
      if (v6)
        break;
      v3 += 3;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_244500078(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_244533DF8(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_244533DF8() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_24450013C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for DatasetColumnDescription(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_2444E8C24(a1 + v12, (uint64_t)v10);
        sub_2444E8C24(a2 + v12, (uint64_t)v7);
        sub_2444FA0E4();
        v15 = sub_244533924();
        sub_2444FA12C((uint64_t)v7);
        sub_2444FA12C((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_244500270(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_2444F6130(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return 0;
  v8 = a1 + 5;
  v9 = a2 + 5;
  v10 = v2 - 1;
  do
  {
    v11 = v10 == 0;
    if (!v10)
      break;
    v13 = *v8++;
    v12 = v13;
    v14 = *v9++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_2444F6130(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

uint64_t sub_24450036C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

uint64_t sub_24450070C(uint64_t *a1, uint64_t *a2)
{
  return sub_2444FFF34(*a1, *a2);
}

void sub_244500718(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_244500724()
{
  return 0;
}

uint64_t sub_24450072C()
{
  return 2;
}

uint64_t sub_244500734()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_2445017B4(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *sub_244500768(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_244500770(a1, a2, a3, *v3);
}

_QWORD *sub_244500770(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5 = result;
  if (!a2)
  {
LABEL_11:
    v6 = 0;
    goto LABEL_15;
  }
  v6 = a3;
  if (!a3)
  {
LABEL_15:
    *v5 = a4;
    v5[1] = v6;
    return (_QWORD *)v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = *(_QWORD *)(a4 + 16);
    if (v7)
    {
      v8 = a2;
      v9 = (uint64_t *)(a4 + 48);
      v10 = 1;
      while (1)
      {
        v11 = *(v9 - 1);
        v12 = *v9;
        *v8 = *(v9 - 2);
        v8[1] = v11;
        v8[2] = v12;
        if (v6 == v10)
          break;
        if (v7 == v10)
        {
          v6 = v7;
          break;
        }
        v9 += 3;
        v13 = *(_QWORD *)(a4 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 += 3;
        if (v10++ >= v13)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v6 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24450084C()
{
  return sub_2445339FC();
}

uint64_t sub_24450086C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573684C8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_244533C78();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_244501D7C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_244500A7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573682A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_244501E98(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244500B88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573684A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_244501F88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244500C94(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244502090(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244500DB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367FB8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244501B7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244500ED8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_244501374(a1, a2, a3, a4, &qword_2573684B0, &qword_2573684B8);
}

_QWORD *sub_244500EEC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368028);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2445021C8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24450100C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573684D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2445024DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24450112C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2445022D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244501238(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573680C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244501C70(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244501360(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_244501374(a1, a2, a3, a4, &qword_257367FF8, &qword_257368000);
}

_QWORD *sub_244501374(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2445025D0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24450148C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573684D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4])
          memmove(v12, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2445026D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2445015AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FE8);
  v10 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_244533C78();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2445023C4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_2445017B4(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = v2 + 4;
    v5 = (uint64_t *)(result + 48);
    while (1)
    {
      v6 = *(v5 - 2);
      v7 = *(v5 - 1);
      v8 = *v5;
      if (v3)
      {
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        v9 = __OFSUB__(v3--, 1);
        if (v9)
          goto LABEL_28;
      }
      else
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_29;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257367FB8);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = v13 + 4;
        v16 = v2[3] >> 1;
        v4 = &v13[3 * v16 + 4];
        v17 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4])
            memmove(v15, v2 + 4, 24 * v16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v13;
        v9 = __OFSUB__(v17, 1);
        v3 = v17 - 1;
        if (v9)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      *v4 = v6;
      v4[1] = v7;
      v4[2] = v8;
      v4 += 3;
      v5 += 3;
      if (!--v1)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v19 = v2[3];
  if (v19 >= 2)
  {
    v20 = v19 >> 1;
    v9 = __OFSUB__(v20, v3);
    v21 = v20 - v3;
    if (v9)
      goto LABEL_30;
    v2[2] = v21;
  }
  return (uint64_t)v2;
}

uint64_t sub_244501978(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = 0;
  v6 = *(_QWORD *)(result + 16);
  v7 = result + 48;
  v20 = v6;
  v21 = MEMORY[0x24BEE4AF8];
  v19 = result + 48;
LABEL_2:
  if (v5 > v6)
    v6 = v5;
  v8 = -(uint64_t)v6;
  v9 = v5 + 1;
  v10 = (uint64_t *)(v7 + 24 * v5);
  while (1)
  {
    if (v22 + v9 == 1)
      return v21;
    v5 = v9++;
    if (v8 + v9 == 2)
      break;
    v11 = *(v10 - 2);
    v12 = *(v10 - 1);
    v13 = *v10;
    if (v11 == a2 && v12 == a3)
    {
      v11 = a2;
      v12 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v21;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_2444F0D4C(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v15 = v21;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        result = sub_2444F0D4C(v16 > 1, v17 + 1, 1);
        v15 = v21;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      v21 = v15;
      v18 = (_QWORD *)(v15 + 24 * v17);
      v18[4] = v11;
      v18[5] = v12;
      v18[6] = v13;
      v7 = v19;
      v6 = v20;
      goto LABEL_2;
    }
    v10 += 3;
    result = sub_244533DF8();
    if ((result & 1) != 0)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_244501B00()
{
  return sub_244501B2C(&qword_257368488, &qword_257368490, MEMORY[0x24BEE2C18]);
}

uint64_t sub_244501B2C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2495115A0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Dataset()
{
  return &type metadata for Dataset;
}

uint64_t sub_244501B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_244501C70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367D50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_244501D7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2573680D8) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_244501E98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_244501F88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573684A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_244502090(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

unint64_t sub_244502184()
{
  unint64_t result;

  result = qword_2573684C0;
  if (!qword_2573684C0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for QueryBlockError, &type metadata for QueryBlockError);
    atomic_store(result, (unint64_t *)&qword_2573684C0);
  }
  return result;
}

uint64_t sub_2445021C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368030);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445022D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445023C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445024DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445025D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445026D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445027C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367F70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_244502808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    v9 = objc_msgSend(v8, sel_publisherWithUseCase_options_, v7, a1);

  }
  else
  {
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    v9 = objc_msgSend(v8, sel_publisherWithOptions_, a1);
  }

  return v9;
}

uint64_t RawPayload.dataVersion.getter()
{
  return 1;
}

uint64_t RawPayload.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data);
  sub_2444F538C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data + 8));
  return v1;
}

id static RawPayload.event(with:dataVersion:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  char *v5;
  uint64_t *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_DWORD *)&v5[OBJC_IVAR____TtC12PoirotBlocks10RawPayload_dataVersion] = 1;
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC12PoirotBlocks10RawPayload_data];
  *v6 = a1;
  v6[1] = a2;
  sub_2444F538C(a1, a2);
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id RawPayload.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RawPayload.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RawPayload.__allocating_init(jsonDictionary:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_2445338C4();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithJSONDictionary_error_, v2, v7);

  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_244533300();

    swift_willThrow();
  }
  return v3;
}

void RawPayload.init(jsonDictionary:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RawPayload.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_244502C84()
{
  id *v0;

  swift_release();
  return swift_deallocClassInstance();
}

id sub_244502CC0()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 40);
}

id sub_244502CCC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 40), sel_schema);
}

uint64_t sub_244502CF4()
{
  return swift_retain();
}

id sub_244502D00()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = v0;
    BaseStreamSchemaProvider.makeBiomeSchema(forTable:)();
    v4 = *(void **)(v0 + 64);
    *(_QWORD *)(v3 + 64) = v5;
    v2 = v5;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

uint64_t sub_244502E14(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t result;
  id v24;
  uint64_t v25;
  _QWORD v26[3];
  id v27[3];

  v27[2] = *(id *)MEMORY[0x24BDAC8D0];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573684F0);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v7 + 64) = 0;
  *(_BYTE *)(v7 + 72) = 1;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  sub_2445038D4(a7, (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2445334EC();
  swift_allocObject();
  v15 = a2;
  v16 = a1;
  v17 = v26[1];
  v18 = sub_2445334E0();
  if (v17)
  {

    sub_24450393C(a7);
    swift_bridgeObjectRelease();

    type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
    swift_deallocPartialClassInstance();
    return v7;
  }
  v19 = a7;
  *(_QWORD *)(v7 + 56) = v18;
  v20 = (id)BiomeLibrary();
  v27[0] = 0;
  v21 = objc_msgSend(v20, sel_streamWithIdentifier_error_, v16, v27);
  swift_unknownObjectRelease();
  if (v21)
  {
    v22 = v27[0];

    sub_24450393C(v19);
    *(_QWORD *)(v7 + 48) = v21;
    return v7;
  }
  v24 = v27[0];
  v25 = sub_244533300();

  swift_willThrow();
  v27[0] = 0;
  v27[1] = (id)0xE000000000000000;
  sub_244533BAC();
  sub_2445339D8();
  v26[2] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
  sub_244533C30();
  result = sub_244533C84();
  __break(1u);
  return result;
}

uint64_t sub_2445030C4()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_244503110()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 48);
}

id sub_24450311C()
{
  return sub_244502D00();
}

uint64_t sub_24450313C()
{
  return swift_retain();
}

void *sub_244503148()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t sub_244503170()
{
  return 1;
}

id sub_244503178()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = v0;
    BaseStreamSchemaProvider.makeBiomeSchema(forTable:)();
    v4 = *(void **)(v0 + 64);
    *(_QWORD *)(v3 + 64) = v5;
    v2 = v5;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

id sub_24450328C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(id *)(v0 + 72);
  }
  else
  {
    v3 = *(id *)(v0 + 32);
    v4 = sub_244503178();
    type metadata accessor for RawPayload();
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0CDA0]), sel_initWithStreamIdentifier_eventClass_storeConfig_, v3, swift_getObjCClassFromMetadata(), *(_QWORD *)(v0 + 40));
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0CD90]), sel_initWithIdentifier_schema_configuration_, v3, v4, v5);

    v7 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v6;
    v2 = v6;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

id *sub_244503370()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_2445033BC()
{
  sub_244503370();
  return swift_deallocClassInstance();
}

id sub_2445033DC()
{
  return sub_24450328C();
}

id sub_2445033FC()
{
  return sub_244503178();
}

void *sub_24450341C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 48);
  v2 = v1;
  return v1;
}

void BiomeTableConfig.init(identifier:useCase:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for BiomeTableConfig.BiomeLibraryConfig();
  swift_allocObject();
  v7 = sub_24450374C(a1, a2);
  *(_QWORD *)(a3 + 24) = v6;
  *(_QWORD *)(a3 + 32) = &off_251525DD8;

  *(_QWORD *)a3 = v7;
  *(_BYTE *)(a3 + 40) = 0;
}

uint64_t type metadata accessor for BiomeTableConfig.BiomeLibraryConfig()
{
  return objc_opt_self();
}

_OWORD *BiomeTableConfig.init(identifier:useCase:tableName:messageName:manifestData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  char v29;
  uint64_t v30;

  v24 = a5;
  v25 = a6;
  v23 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573684F0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2445038D4(a7, (uint64_t)v15);
  v16 = type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
  v17 = swift_allocObject();
  v18 = a2;
  v19 = a1;
  v20 = v30;
  sub_244502E14(v19, a2, a3, a4, v24, v25, (uint64_t)v15);
  if (v20)
  {

    return (_OWORD *)sub_24450393C(a7);
  }
  else
  {
    v27 = v16;
    v28 = &off_251525DA0;

    *(_QWORD *)&v26 = v17;
    sub_24450393C(a7);
    v29 = 1;
    return sub_24450397C(&v26, v23);
  }
}

void BiomeTableConfig.init(identifier:useCase:tableName:schemaProvider:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;

  v12 = type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig();
  swift_allocObject();
  v13 = sub_244503994(a1, a2, a3, a4, a5);
  *(_QWORD *)(a6 + 24) = v12;
  *(_QWORD *)(a6 + 32) = &off_251525DA0;
  swift_release();
  *(_QWORD *)a6 = v13;

  *(_BYTE *)(a6 + 40) = 1;
}

uint64_t BiomeTableConfig.init(identifier:storeConfig:tableName:schemaProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;

  v12 = type metadata accessor for BiomeTableConfig.PrivateBiomeStreamConfig();
  result = swift_allocObject();
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = 0;
  *(_BYTE *)(result + 80) = 0;
  *(_QWORD *)(result + 16) = a3;
  *(_QWORD *)(result + 24) = a4;
  *(_QWORD *)(result + 32) = a1;
  *(_QWORD *)(result + 40) = a2;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = a5;
  *(_QWORD *)(a6 + 24) = v12;
  *(_QWORD *)(a6 + 32) = &off_251525D68;
  *(_QWORD *)a6 = result;
  *(_BYTE *)(a6 + 40) = 2;
  return result;
}

uint64_t sub_24450374C(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t result;
  id v9;
  id v10[4];

  v10[3] = *(id *)MEMORY[0x24BDAC8D0];
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v4 = a2;
  v10[0] = 0;
  v5 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, a1, v10);
  swift_unknownObjectRelease();
  v6 = v10[0];
  if (v5)
  {
    *(_QWORD *)(v2 + 40) = v5;
    v7 = v6;
    return v2;
  }
  else
  {
    v9 = v10[0];
    sub_244533300();

    swift_willThrow();
    v10[0] = 0;
    v10[1] = (id)0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    sub_244533C30();
    result = sub_244533C84();
    __break(1u);
  }
  return result;
}

uint64_t sub_2445038D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573684F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BiomeTableConfig.SchematizedBiomeLibraryConfig()
{
  return objc_opt_self();
}

uint64_t sub_24450393C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573684F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_24450397C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_244503994(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  id v14[4];

  v14[3] = *(id *)MEMORY[0x24BDAC8D0];
  *(_BYTE *)(v5 + 72) = 1;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 56) = a5;
  *(_QWORD *)(v5 + 64) = 0;
  v7 = a2;
  v8 = a1;
  swift_retain();
  v14[0] = 0;
  v9 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, v8, v14);
  swift_unknownObjectRelease();
  v10 = v14[0];
  if (v9)
  {
    *(_QWORD *)(v5 + 48) = v9;
    v11 = v10;
    return v5;
  }
  else
  {
    v13 = v14[0];
    sub_244533300();

    swift_willThrow();
    v14[0] = 0;
    v14[1] = (id)0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    sub_244533C30();
    result = sub_244533C84();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for BiomeTableConfig.PrivateBiomeStreamConfig()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RawPayload()
{
  return objc_opt_self();
}

uint64_t method lookup function for RawPayload()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for BiomeTableConfig(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for BiomeTableConfig(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  v3 = *(_BYTE *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for BiomeTableConfig(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_244503C38(a1);
    v4 = *(_BYTE *)(a2 + 40);
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t sub_244503C38(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for BiomeTableConfig(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_244503C38((uint64_t)a1);
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeTableConfig(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeTableConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeTableConfig()
{
  return &type metadata for BiomeTableConfig;
}

uint64_t initializeWithCopy for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3)
    LOBYTE(v3) = *(_BYTE *)a2 + 3;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3)
      LOBYTE(v4) = *(_BYTE *)a2 + 3;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t assignWithTake for BiomeTableConfig.Container(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 3)
      LOBYTE(v4) = *(_BYTE *)a2 + 3;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeTableConfig.Container(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BiomeTableConfig.Container(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_244503F10(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_244503F2C(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeTableConfig.Container()
{
  return &type metadata for BiomeTableConfig.Container;
}

uint64_t sub_244503F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v4 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v10;
    if (!v12)
    {
      v10 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v10);
      if (!v12)
      {
        v10 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v10);
        if (!v12)
        {
          v10 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v10);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
LABEL_5:
    sub_2444FE9D8();
    a1 = sub_244533B58();
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v10 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_244504160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v13 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v13)
      goto LABEL_23;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v13)
        goto LABEL_23;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v13)
          goto LABEL_23;
        v10 = *(_QWORD *)(v12 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v13)
            goto LABEL_23;
          v10 = *(_QWORD *)(v12 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2445339D8();
    sub_2445339D8();
    sub_2444FE9D8();
    a1 = sub_244533B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v11 = v9 + 4;
  if (v11 >= v13)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v13)
      goto LABEL_23;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AggregationBlockError(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;

  v3 = *a2;
  v4 = (id)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for AggregationBlockError(_QWORD *a1)
{

}

uint64_t *assignWithCopy for AggregationBlockError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;

  v3 = *a2;
  v4 = (id)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  v5 = *a1;
  *a1 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *assignWithTake for AggregationBlockError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AggregationBlockError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AggregationBlockError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_244504540(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_24450454C(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_24450455C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AggregationBlockError()
{
  return &type metadata for AggregationBlockError;
}

void sub_244504580(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24450458C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  void *v4;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  _QWORD v17[5];
  _QWORD v18[5];

  sub_2444E8B18(a1, (uint64_t)v18);
  v17[3] = &type metadata for AggregationBlockConfig;
  v17[4] = sub_244505458();
  v9 = (_OWORD *)swift_allocObject();
  v17[0] = v9;
  v10 = a4[1];
  v9[1] = *a4;
  v9[2] = v10;
  v9[3] = a4[2];
  swift_retain();
  v11 = sub_2445196E0(v18, a2, a3, v17);
  if (v4)
  {
    v18[0] = v4;
    v12 = v4;
    v13 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();

    }
    else
    {

      sub_244505280();
      swift_allocError();
      *v14 = v4;
      v15 = v4;
      swift_willThrow();
      swift_release();

    }
  }
  else
  {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

uint64_t sub_24450470C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  unint64_t *v13;
  uint64_t v15;
  unint64_t v16;

  v7 = sub_244533AB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244504870(a1, a2, a3);
  if (v3)
  {
    v16 = v3;
    v11 = (id)v3;
    v12 = (id)v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if (swift_dynamicCast())
    {

    }
    else
    {
      v16 = v3;
      if (swift_dynamicCast())
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
      else
      {
        sub_244505280();
        swift_allocError();
        *v13 = v3 | 0x8000000000000000;
        swift_willThrow();
      }
    }
  }
  return 1;
}

uint64_t sub_244504870(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v26;
  char *v28;
  uint64_t v29;
  ValueMetadata *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(__int128 *, uint64_t, uint64_t);
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  ValueMetadata *v73;
  unint64_t v74;
  uint64_t v75;

  v5 = v4;
  v6 = v3;
  v69 = a1;
  v70 = a3;
  v65 = a2;
  v67 = sub_244533AB0();
  v60 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v66 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for DatasetColumnDescription(0);
  v64 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2445336F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v55 - v15;
  swift_bridgeObjectRetain();
  sub_2445336A8();
  if (v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v63 = v14;
  v68 = v11;
  v59 = v16;
  v61 = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71 = *v69;
  v18 = *(_QWORD *)(v3 + 72);
  v17 = *(_QWORD *)(v3 + 80);
  swift_bridgeObjectRetain();
  sub_2444FEB80(v18, v17);
  swift_bridgeObjectRelease();
  v28 = v63;
  sub_2445336E4();
  v62 = 0;
  v55 = *(void (**)(char *, uint64_t))(v68 + 8);
  v55(v28, v61);
  swift_bridgeObjectRelease();
  v63 = *(char **)(v6 + 32);
  v68 = *(_QWORD *)(v6 + 40);
  v29 = *(_QWORD *)(v6 + 64);
  v56 = v6;
  v57 = v29;
  v30 = (ValueMetadata *)v58;
  while (1)
  {
    v31 = *(_QWORD *)(v29 + 16);
    v32 = v64;
    if (v31)
    {
      v75 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2444F0DC0(0, v31, 0);
      v33 = v75;
      v34 = v29 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      v35 = *(_QWORD *)(v32 + 72);
      do
      {
        sub_2444E8C24(v34, (uint64_t)v9);
        v75 = v33;
        v37 = *(_QWORD *)(v33 + 16);
        v36 = *(_QWORD *)(v33 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_2444F0DC0(v36 > 1, v37 + 1, 1);
          v33 = v75;
        }
        v73 = v30;
        v74 = sub_244505514();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v71);
        sub_2444E8C24((uint64_t)v9, (uint64_t)boxed_opaque_existential_1);
        *(_QWORD *)(v33 + 16) = v37 + 1;
        sub_2444E8B00(&v71, v33 + 40 * v37 + 32);
        sub_2444FA12C((uint64_t)v9);
        v34 += v35;
        --v31;
      }
      while (v31);
      v29 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v56;
    }
    else
    {
      v33 = MEMORY[0x24BEE4AF8];
    }
    v39 = *(_QWORD *)(v33 + 16);
    swift_bridgeObjectRelease();
    v40 = v62;
    if (v39)
      break;
    v46 = sub_2445336CC();
    v43 = v40;
    if (v40)
      goto LABEL_31;
    v44 = v46;
    v45 = v61;
    if (!v46)
    {
LABEL_29:
      v55(v59, v45);
      goto LABEL_9;
    }
LABEL_24:
    sub_244533ABC();
    v62 = 0;
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v71 = v63;
    *((_QWORD *)&v71 + 1) = v68;
    v72 = v44;
    v48 = v70;
    v49 = *(void (**)(__int128 *, uint64_t, uint64_t))(v70 + 16);
    swift_bridgeObjectRetain();
    v49(&v71, ObjectType, v48);
    v50 = (_QWORD *)*v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v50 = sub_244500DB4(0, v50[2] + 1, 1, v50);
    v29 = v57;
    v52 = v50[2];
    v51 = v50[3];
    if (v52 >= v51 >> 1)
      v50 = sub_244500DB4((_QWORD *)(v51 > 1), v52 + 1, 1, v50);
    v50[2] = v52 + 1;
    v53 = &v50[3 * v52];
    v54 = v68;
    v53[4] = v63;
    v53[5] = v54;
    v53[6] = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v69 = v50;
  }
  v73 = &type metadata for DatasetColumnLayout;
  v41 = sub_244505598();
  *(_QWORD *)&v71 = v63;
  *((_QWORD *)&v71 + 1) = v68;
  v74 = v41;
  v72 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = sub_2445336C0();
  v43 = v40;
  if (!v40)
  {
    v44 = v42;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    v45 = v61;
    if (!v44)
      goto LABEL_29;
    goto LABEL_24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
LABEL_31:
  v5 = v43;
  v55(v59, v61);
LABEL_4:
  v20 = v66;
  v19 = v67;
  v21 = v70;
  if (*(_BYTE *)(v6 + 88) == 1)
  {
    *(_QWORD *)&v71 = v5;
    v22 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v20, v19);
    }
    else
    {
      v23 = swift_getObjectType();
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v6;
      *(_QWORD *)(v24 + 24) = v5;
      v25 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v21 + 8);
      v26 = v5;
      swift_retain();
      v25(sub_2445054FC, v24, v23, v21);
      swift_release();

LABEL_9:
      *(_BYTE *)(v6 + 16) = 1;
    }
  }
  return 1;
}

uint64_t sub_244504E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[6];

  v4 = sub_244533990();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2445369D0;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v17[2] = 0;
  v17[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_244533BAC();
  sub_2445339D8();
  v17[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
  sub_244533C30();
  sub_244533984();
  v11 = sub_24453396C();
  v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v13 >> 60 == 15)
    v14 = 0;
  else
    v14 = v11;
  v15 = 0xC000000000000000;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  *(_BYTE *)(v8 + 48) = 3;
  if (v13 >> 60 != 15)
    v15 = v13;
  *(_QWORD *)(v8 + 56) = v14;
  *(_QWORD *)(v8 + 64) = v15;
  return v8;
}

uint64_t sub_244505024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24450505C(a1, a2, sub_244504160, a3);
}

uint64_t sub_244505040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24450505C(a1, a2, sub_244503F74, a3);
}

uint64_t sub_24450505C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  _BYTE v38[40];
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v7 = v5;
  v8 = v4;
  v11 = *(_QWORD *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 40);
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_2444EB9F0(v11, v12);
    if ((v14 & 1) != 0)
    {
      v15 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v13);
      v11 = *v15;
      v16 = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = v16;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  sub_2444E8B18(a1, (uint64_t)v38);
  v17 = *(_QWORD *)(v8 + 56);
  v18 = *(_QWORD *)(v17 + 32);
  v19 = *(_QWORD *)(v17 + 40);
  swift_bridgeObjectRetain();
  v20 = v18;
  v21 = v7;
  v22 = a3(v20, v19, a2);
  v24 = v23;
  v25 = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for Query();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 48) = 0;
  *(_QWORD *)(v26 + 16) = v11;
  *(_QWORD *)(v26 + 24) = v12;
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v24;
  v27 = *(_QWORD *)(v8 + 48);
  v28 = *(_QWORD *)(v8 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v28;
  v30 = v25;
  v31 = sub_2445052C4(v29, a2);
  swift_bridgeObjectRelease();
  v32 = *(_BYTE *)(v8 + 88);
  v33 = *(_QWORD *)(v8 + 72);
  v34 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)&v39 = v11;
  *((_QWORD *)&v39 + 1) = v12;
  v40 = v31;
  v41 = v32;
  v42 = v33;
  v43 = v34;
  v35 = type metadata accessor for AggregationBlock();
  swift_allocObject();
  swift_bridgeObjectRetain();
  result = sub_24450458C((uint64_t)v38, v26, v27, &v39);
  if (!v30)
  {
    a4[3] = v35;
    a4[4] = (uint64_t)&off_251528188;
    *a4 = result;
  }
  return result;
}

uint64_t sub_24450521C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AggregationBlock()
{
  return objc_opt_self();
}

unint64_t sub_244505280()
{
  unint64_t result;

  result = qword_2573689E0;
  if (!qword_2573689E0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for AggregationBlockError, &type metadata for AggregationBlockError);
    atomic_store(result, (unint64_t *)&qword_2573689E0);
  }
  return result;
}

uint64_t sub_2445052C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v5 = type metadata accessor for DatasetColumnDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v22 = v2;
    v24 = MEMORY[0x24BEE4AF8];
    sub_2444F0D94(0, v9, 0);
    v10 = v24;
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v23;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_2444E8C24(v11, (uint64_t)v8);
      v13 = *v8;
      v14 = v8[1];
      if (*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        v15 = sub_2444EB9F0(v13, v14);
        v16 = v14;
        if ((v17 & 1) != 0)
        {
          v18 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v15);
          v13 = *v18;
          v16 = v18[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v14 = v16;
      }
      *v8 = v13;
      v8[1] = v14;
      v24 = v10;
      v20 = *(_QWORD *)(v10 + 16);
      v19 = *(_QWORD *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2444F0D94(v19 > 1, v20 + 1, 1);
        v10 = v24;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      sub_2444F27D4((uint64_t)v8, v10 + v23 + v20 * v12);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_244505458()
{
  unint64_t result;

  result = qword_2573689E8;
  if (!qword_2573689E8)
  {
    result = MEMORY[0x2495115A0](&unk_244538BB4, &type metadata for AggregationBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573689E8);
  }
  return result;
}

uint64_t sub_24450549C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2445054D0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2445054FC()
{
  uint64_t v0;

  return sub_244504E98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_244505514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573689F0;
  if (!qword_2573689F0)
  {
    v1 = type metadata accessor for DatasetColumnDescription(255);
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnDescription, v1);
    atomic_store(result, (unint64_t *)&qword_2573689F0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_244505598()
{
  unint64_t result;

  result = qword_2573689F8;
  if (!qword_2573689F8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnLayout, &type metadata for DatasetColumnLayout);
    atomic_store(result, (unint64_t *)&qword_2573689F8);
  }
  return result;
}

uint64_t sub_2445055E0()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A18);
  __swift_allocate_value_buffer(v0, qword_257368A00);
  __swift_project_value_buffer(v0, (uint64_t)qword_257368A00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368A28);
  return sub_2445338A0();
}

uint64_t static Template.tokenRegex.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257367970 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A18);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_257368A00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static Template.extractTokens(from:)(uint64_t a1, uint64_t a2)
{
  return sub_244505990(a1, a2, (uint64_t)&unk_2445374A8);
}

unint64_t sub_2445056DC()
{
  unint64_t result;

  result = qword_257368A30;
  if (!qword_257368A30)
  {
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257368A30);
  }
  return result;
}

unint64_t sub_244505720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257368A38;
  if (!qword_257368A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257368A18);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_257368A38);
  }
  return result;
}

uint64_t static Template.extractTokenName(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A40);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v17 = a1;
  v18 = a2;
  if (qword_257367970 != -1)
    swift_once();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A18);
  __swift_project_value_buffer(v14, (uint64_t)qword_257368A00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368A28);
  sub_2445056DC();
  sub_244505720();
  sub_244533900();
  sub_244506940((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    swift_getKeyPath();
    sub_2445338AC();
    swift_release();
    v15 = MEMORY[0x249510C34](v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_244506988((uint64_t)v13);
  return v15;
}

uint64_t static Template.extractTokenNames(from:)(uint64_t a1, uint64_t a2)
{
  return sub_244505990(a1, a2, (uint64_t)&unk_2445374C8);
}

uint64_t sub_244505990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  _QWORD v23[2];
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A20);
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (_QWORD *)a1;
  v29 = a2;
  if (qword_257367970 != -1)
    swift_once();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A18);
  __swift_project_value_buffer(v8, (uint64_t)qword_257368A00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368A28);
  sub_2445056DC();
  sub_244505720();
  v9 = sub_24453390C();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_2444F0DEC(0, v10, 0);
    v11 = v9 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v25 = *(_QWORD *)(v27 + 72);
    v12 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
    v23[1] = v9;
    v24 = v12;
    v13 = v32;
    do
    {
      v24(v7, v11, v5);
      swift_getKeyPath();
      sub_2445338AC();
      swift_release();
      v14 = MEMORY[0x249510C34](v28, v29, v30, v31);
      v16 = v15;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0DEC(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v32;
      }
      v18 = *(_QWORD *)(v13 + 16);
      v17 = *(_QWORD *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_2444F0DEC(v17 > 1, v18 + 1, 1);
        v13 = v32;
      }
      *(_QWORD *)(v13 + 16) = v18 + 1;
      v19 = v13 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v11 += v25;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BEE4AF8];
  }
  sub_2444FA050(v13);
  swift_bridgeObjectRelease();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_244505DE8(v20);
  swift_bridgeObjectRelease();
  v28 = v21;
  sub_244505C64((uint64_t *)&v28);
  swift_bridgeObjectRelease();
  result = (uint64_t)v28;
  if (!v28[2])
  {
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_244505C64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2444F1C58(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2444EFA30(v5);
  *a1 = v2;
  return result;
}

size_t sub_244505CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FE8);
  v3 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_2445060A4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_2444F2780();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_244505DE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_244506548((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2444F2780();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_244505ECC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_244506744((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2444F2780();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_244505FB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FB8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_24450632C(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2444F2780();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2445060A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for DatasetColumnDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v30 - v14;
  v35 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_2444E8C24(*(_QWORD *)(v35 + 56) + v29 * v25, (uint64_t)v12);
    sub_2444F27D4((uint64_t)v12, (uint64_t)v15);
    result = sub_2444F27D4((uint64_t)v15, a2);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v17 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v17 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_24450632C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  v23 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 24 * v15);
    v20 = v19[1];
    v21 = v19[2];
    *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v22;
      result = v23;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_244506548(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_244506744(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_244506940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244506988(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368A40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for Template()
{
  return &type metadata for Template;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_244506A18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368B08);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_244533C6C();
  __swift_allocate_value_buffer(v3, qword_257370CB8);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_257370CB8);
  sub_244533C60();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_244506B00()
{
  uint64_t v0;

  sub_2444EC024(v0 + 16, &qword_257368440);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CodingContext()
{
  return objc_opt_self();
}

double sub_244506B54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  double result;

  v4 = sub_244506BAC(a1, a2, MEMORY[0x24BEE4600]);
  if (v4)
  {
    sub_2444FEA1C(v4 + 16, a3);
    swift_release();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_244506BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD v15[2];
  __int128 v16;
  __int128 v17;

  v6 = sub_244533C6C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3(a1, a2);
  if (qword_257367978 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257370CB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(_QWORD *)(v10 + 16) && (v12 = sub_2444EBBEC((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_2444F2818(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*((_QWORD *)&v17 + 1))
  {
    type metadata accessor for CodingContext();
    if ((swift_dynamicCast() & 1) != 0)
      return v15[1];
  }
  else
  {
    sub_2444EC024((uint64_t)&v16, &qword_257368468);
  }
  return 0;
}

uint64_t sub_244506D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = sub_244506BAC(a3, a4, MEMORY[0x24BEE4630]);
  if (result)
  {
    *(_QWORD *)(result + 56) = a1;
    *(_QWORD *)(result + 64) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of BlockLogHandling.handleLogCollector(_:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_244506DA4(void (*a1)(__int128 *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *i;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[2];
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_2444F0D68(0, v5, 0);
    v6 = v16;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v14 = *i;
      swift_bridgeObjectRetain();
      a1(v15, &v14, &v13);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v16 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2444F0D68(v10 > 1, v11 + 1, 1);
        v6 = v16;
      }
      *(_QWORD *)(v6 + 16) = v11 + 1;
      sub_2444E8B00(v15, v6 + 40 * v11 + 32);
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_244506ED4(void (*a1)(_QWORD *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v22;
  _QWORD v23[3];
  char v24;
  _QWORD v25[2];
  __int128 v26;
  char v27;
  uint64_t v28;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v28 = MEMORY[0x24BEE4AF8];
    sub_2444F0E08(0, v5, 0);
    v6 = v28;
    v8 = (_BYTE *)(a3 + 56);
    while (1)
    {
      v9 = *((_QWORD *)v8 - 2);
      v10 = *((_QWORD *)v8 - 1);
      v11 = *v8;
      v23[0] = *((_QWORD *)v8 - 3);
      v23[1] = v9;
      v23[2] = v10;
      v24 = v11;
      swift_bridgeObjectRetain();
      a1(v25, v23, &v22);
      if (v4)
        break;
      swift_bridgeObjectRelease();
      v13 = v25[0];
      v12 = v25[1];
      v14 = v26;
      v15 = v27;
      v28 = v6;
      v17 = *(_QWORD *)(v6 + 16);
      v16 = *(_QWORD *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        v20 = v26;
        sub_2444F0E08(v16 > 1, v17 + 1, 1);
        v14 = v20;
        v6 = v28;
      }
      *(_QWORD *)(v6 + 16) = v17 + 1;
      v18 = v6 + 40 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v12;
      *(_OWORD *)(v18 + 48) = v14;
      *(_BYTE *)(v18 + 64) = v15;
      v8 += 32;
      --v5;
      v4 = 0;
      if (!v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_244507028(void (*a1)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(_QWORD *, _QWORD);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  _QWORD v28[4];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v4 = v3;
  v24 = a1;
  v25 = a2;
  v5 = sub_244533528();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244533540();
  v10 = sub_244508A50();
  v20 = v9;
  v11 = sub_244533AE0();
  v12 = MEMORY[0x24BEE4AF8];
  if (!v11)
    return v12;
  v13 = v11;
  v31 = MEMORY[0x24BEE4AF8];
  sub_2444F0D4C(0, v11 & ~(v11 >> 63), 0);
  v12 = v20;
  result = sub_244533AD4();
  if ((v13 & 0x8000000000000000) == 0)
  {
    v27 = v10;
    v22 = v5;
    v23 = v2;
    v21 = v6;
    while (1)
    {
      v15 = (void (*)(_QWORD *, _QWORD))sub_244533AF8();
      (*(void (**)(char *))(v6 + 16))(v8);
      v15(v28, 0);
      v24(&v29, v8, v28);
      if (v4)
        break;
      v4 = 0;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v16 = v29;
      v26 = v30;
      v12 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0D4C(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v31;
      }
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_2444F0D4C(v17 > 1, v18 + 1, 1);
        v12 = v31;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      v19 = v12 + 24 * v18;
      *(_QWORD *)(v19 + 32) = v16;
      *(_OWORD *)(v19 + 40) = v26;
      sub_244533AEC();
      --v13;
      v6 = v21;
      v5 = v22;
      if (!v13)
        return v12;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_244507264@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_244507278()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_244507284(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_244507294()
{
  sub_244508478();
  return sub_244533F48();
}

uint64_t sub_2445072BC()
{
  sub_244508478();
  return sub_244533F54();
}

uint64_t AnyCodable.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  _QWORD v27[3];
  uint64_t v28;
  _QWORD *v29;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368B10);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368B18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244508478();
  sub_244533F18();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    sub_2444EC024((uint64_t)v6, &qword_257368B10);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_244533F00();
    sub_2444E8B00(&v25, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v13 = sub_244533DD4();
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v13 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
        sub_2445084E4();
        sub_244533DC8();
        v17 = v25;
        v18 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_24450100C(0, v14[2] + 1, 1, v14);
        v20 = v14[2];
        v19 = v14[3];
        if (v20 >= v19 >> 1)
          v14 = sub_24450100C((_QWORD *)(v19 > 1), v20 + 1, 1, v14);
        v14[2] = v20 + 1;
        v21 = &v14[3 * v20];
        *((_OWORD *)v21 + 2) = v17;
        *((_BYTE *)v21 + 48) = v18;
        __swift_project_boxed_opaque_existential_1(v27, v28);
      }
      while ((sub_244533DD4() & 1) == 0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    v15 = 1;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v11 = sub_244533D38();
    MEMORY[0x24BDAC7A8](v11);
    *((_QWORD *)&v25 - 2) = v10;
    v12 = sub_244506ED4((void (*)(_QWORD *__return_ptr, _QWORD *, uint64_t *))sub_244508528, (uint64_t)(&v25 - 2), v11);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2573680A8);
      v16 = sub_244533CA8();
    }
    else
    {
      v16 = MEMORY[0x24BEE4B00];
    }
    v27[0] = v16;
    v22 = swift_bridgeObjectRetain();
    sub_244507DF4(v22, 1, v27);
    swift_bridgeObjectRelease();
    v14 = (_QWORD *)v27[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v15 = 0;
  }
  v23 = v29;
  *v29 = v14;
  v23[1] = 0;
  *((_BYTE *)v23 + 16) = v15;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24450784C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;

  v5 = a1[1];
  *a3 = *a1;
  a3[1] = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368B18);
  sub_2445084E4();
  result = sub_244533D2C();
  if (v3)
  {
    result = swift_bridgeObjectRelease();
    *a2 = v3;
  }
  return result;
}

void AnyCodable.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _QWORD v3[4];
  uint64_t v4;
  char *v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368B38);
  MEMORY[0x24BDAC7A8](v4);
  v5 = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (char *)sub_244507994 + 4 * byte_244537540[*(unsigned __int8 *)(v0 + 16)];
  v3[3] = *(_QWORD *)v0;
  __asm { BR              X10 }
}

uint64_t sub_244507994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_244508478();
  sub_244533F3C();
  v6 = swift_bridgeObjectRetain();
  *(_QWORD *)(v5 - 120) = sub_244505CCC(v6);
  sub_244505C64((uint64_t *)(v5 - 120));
  if (v0)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    sub_2444FA034(v3, v4, 0);
    v7 = *(_QWORD *)(v5 - 120);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      *(_QWORD *)(v5 - 176) = v2;
      swift_retain();
      *(_QWORD *)(v5 - 184) = v7;
      v9 = (uint64_t *)(v7 + 40);
      do
      {
        v11 = *(v9 - 1);
        v10 = *v9;
        v12 = *(_QWORD *)(v3 + 16);
        swift_bridgeObjectRetain_n();
        if (v12)
        {
          swift_bridgeObjectRetain();
          v13 = sub_2444EB9F0(v11, v10);
          if ((v14 & 1) != 0)
          {
            v15 = *(_QWORD *)(v3 + 56) + 24 * v13;
            v16 = *(_QWORD *)v15;
            v17 = *(_QWORD *)(v15 + 8);
            v18 = *(_BYTE *)(v15 + 16);
            sub_2444F2864(*(_QWORD *)v15, v17, v18);
          }
          else
          {
            v16 = 0;
            v17 = 0;
            v18 = -1;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v16 = 0;
          v17 = 0;
          v18 = -1;
        }
        *(_QWORD *)(v5 - 144) = v16;
        *(_QWORD *)(v5 - 136) = v17;
        *(_BYTE *)(v5 - 128) = v18;
        *(_QWORD *)(v5 - 120) = v11;
        *(_QWORD *)(v5 - 112) = v10;
        *(_QWORD *)(v5 - 104) = 0;
        *(_BYTE *)(v5 - 96) = 1;
        sub_244508544();
        sub_244533D5C();
        sub_244508588(v16, v17, v18);
        v9 += 2;
        swift_bridgeObjectRelease_n();
        --v8;
        v3 = *(_QWORD *)(v5 - 168);
      }
      while (v8);
      swift_release();
      v2 = *(_QWORD *)(v5 - 176);
    }
    swift_release();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(*(_QWORD *)(v5 - 152), *(_QWORD *)(v5 - 160));
  }
  return result;
}

uint64_t sub_244507DC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AnyCodable.init(from:)(a1, a2);
}

void sub_244507DDC()
{
  AnyCodable.encode(to:)();
}

void sub_244507DF4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v46 = v5;
  if (v5)
  {
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6 = *(_BYTE *)(a1 + 64);
    v8 = *(_QWORD *)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 56);
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    v47 = v6;
    sub_2444F2864(v8, v7, v6);
    if (v10)
    {
      v11 = (_QWORD *)*a3;
      v13 = sub_2444EB9F0(v9, v10);
      v14 = v11[2];
      v15 = (v12 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v17 = v12;
      if (v11[3] >= v16)
      {
        if ((a2 & 1) != 0)
        {
          if ((v12 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_2444F8FC0();
          if ((v17 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_2444EDADC(v16, a2 & 1);
        v18 = sub_2444EB9F0(v9, v10);
        if ((v17 & 1) != (v19 & 1))
        {
LABEL_30:
          sub_244533E88();
          __break(1u);
LABEL_31:
          sub_244533BAC();
          sub_2445339D8();
          sub_244533C30();
          sub_2445339D8();
          sub_244533C84();
          __break(1u);
          return;
        }
        v13 = v18;
        if ((v17 & 1) == 0)
        {
LABEL_14:
          v22 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
          v23 = (uint64_t *)(v22[6] + 16 * v13);
          *v23 = v9;
          v23[1] = v10;
          v24 = v22[7] + 24 * v13;
          *(_QWORD *)v24 = v8;
          *(_QWORD *)(v24 + 8) = v7;
          *(_BYTE *)(v24 + 16) = v6;
          v25 = v22[2];
          v26 = __OFADD__(v25, 1);
          v27 = v25 + 1;
          if (v26)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v22[2] = v27;
          if (v46 != 1)
          {
            v28 = (unsigned __int8 *)(a1 + 104);
            v29 = 1;
            while (v29 < *(_QWORD *)(a1 + 16))
            {
              v30 = *v28;
              v8 = *((_QWORD *)v28 - 2);
              v7 = *((_QWORD *)v28 - 1);
              v32 = *((_QWORD *)v28 - 4);
              v31 = *((_QWORD *)v28 - 3);
              swift_bridgeObjectRetain();
              v47 = v30;
              sub_2444F2864(v8, v7, v30);
              if (!v31)
                goto LABEL_25;
              v33 = (_QWORD *)*a3;
              v34 = sub_2444EB9F0(v32, v31);
              v36 = v33[2];
              v37 = (v35 & 1) == 0;
              v26 = __OFADD__(v36, v37);
              v38 = v36 + v37;
              if (v26)
                goto LABEL_28;
              v39 = v35;
              if (v33[3] < v38)
              {
                sub_2444EDADC(v38, 1);
                v34 = sub_2444EB9F0(v32, v31);
                if ((v39 & 1) != (v40 & 1))
                  goto LABEL_30;
              }
              if ((v39 & 1) != 0)
                goto LABEL_11;
              v41 = (_QWORD *)*a3;
              *(_QWORD *)(*a3 + 8 * (v34 >> 6) + 64) |= 1 << v34;
              v42 = (uint64_t *)(v41[6] + 16 * v34);
              *v42 = v32;
              v42[1] = v31;
              v43 = v41[7] + 24 * v34;
              *(_QWORD *)v43 = v8;
              *(_QWORD *)(v43 + 8) = v7;
              *(_BYTE *)(v43 + 16) = v30;
              v44 = v41[2];
              v26 = __OFADD__(v44, 1);
              v45 = v44 + 1;
              if (v26)
                goto LABEL_29;
              ++v29;
              v41[2] = v45;
              v28 += 40;
              if (v46 == v29)
                goto LABEL_25;
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      v20 = (void *)swift_allocError();
      swift_willThrow();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_2444FA034(v8, v7, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

void _s12PoirotBlocks10AnyCodableO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_24450823C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v6;

  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2444F2864(v0, v1, v5);
    sub_2444FA034(v2, v3, v4);
    sub_2444FA034(v0, v1, v5);
    v6 = 0;
  }
  else
  {
    sub_2444F2864(v0, v1, 0);
    sub_2444F2864(v2, v3, 0);
    v6 = sub_2444F66E8(v2, v0);
    sub_2444FA034(v2, v3, 0);
    sub_2444FA034(v0, v1, 0);
  }
  return v6 & 1;
}

unint64_t sub_244508478()
{
  unint64_t result;

  result = qword_257368B20;
  if (!qword_257368B20)
  {
    result = MEMORY[0x2495115A0](&unk_2445376AC, &type metadata for AnyCodable.AnyKey);
    atomic_store(result, (unint64_t *)&qword_257368B20);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_2445084E4()
{
  unint64_t result;

  result = qword_257368B30;
  if (!qword_257368B30)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_257368B30);
  }
  return result;
}

uint64_t sub_244508528@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_24450784C(a1, a2, a3);
}

unint64_t sub_244508544()
{
  unint64_t result;

  result = qword_257368B40;
  if (!qword_257368B40)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_257368B40);
  }
  return result;
}

uint64_t sub_244508588(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_2444FA034(a1, a2, a3);
  return a1;
}

unint64_t sub_24450859C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2445085D0();
  a1[2] = sub_244508614();
  result = sub_244508658();
  a1[3] = result;
  return result;
}

unint64_t sub_2445085D0()
{
  unint64_t result;

  result = qword_257368B48;
  if (!qword_257368B48)
  {
    result = MEMORY[0x2495115A0](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_257368B48);
  }
  return result;
}

unint64_t sub_244508614()
{
  unint64_t result;

  result = qword_257368B50;
  if (!qword_257368B50)
  {
    result = MEMORY[0x2495115A0](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_257368B50);
  }
  return result;
}

unint64_t sub_244508658()
{
  unint64_t result;

  result = qword_257368B58;
  if (!qword_257368B58)
  {
    result = MEMORY[0x2495115A0](MEMORY[0x24BDCDE20], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_257368B58);
  }
  return result;
}

uint64_t destroy for AnyCodable(uint64_t a1)
{
  return sub_2444FA034(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12PoirotBlocks10AnyCodableOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2444F2864(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2444F2864(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2444FA034(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2444FA034(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_24450881C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

uint64_t initializeWithCopy for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodable.AnyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable.AnyKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodable.AnyKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable.AnyKey()
{
  return &type metadata for AnyCodable.AnyKey;
}

unint64_t sub_2445089C4()
{
  unint64_t result;

  result = qword_257368B60;
  if (!qword_257368B60)
  {
    result = MEMORY[0x2495115A0](&unk_24453765C, &type metadata for AnyCodable.AnyKey);
    atomic_store(result, (unint64_t *)&qword_257368B60);
  }
  return result;
}

unint64_t sub_244508A0C()
{
  unint64_t result;

  result = qword_257368B68;
  if (!qword_257368B68)
  {
    result = MEMORY[0x2495115A0](&unk_244537684, &type metadata for AnyCodable.AnyKey);
    atomic_store(result, (unint64_t *)&qword_257368B68);
  }
  return result;
}

unint64_t sub_244508A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257368B70;
  if (!qword_257368B70)
  {
    v1 = sub_244533540();
    result = MEMORY[0x2495115A0](MEMORY[0x24BDF5D20], v1);
    atomic_store(result, (unint64_t *)&qword_257368B70);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesOutputDescription.outputDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_244508AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t i;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int isUniquelyReferenced_nonNull_native;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t result;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  __int128 *v80;
  __int128 *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v70 = a2;
  v68 = a1;
  v69 = a4;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368290);
  v5 = *(_QWORD *)(v75 - 8);
  v6 = MEMORY[0x24BDAC7A8](v75);
  v74 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v73 = (uint64_t)v66 - v8;
  v83 = type metadata accessor for DatasetColumnDescription(0);
  v84 = *(_QWORD *)(v83 - 8);
  v9 = MEMORY[0x24BDAC7A8](v83);
  v76 = (uint64_t)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v66 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)v66 - v14;
  v15 = sub_244533618();
  v89 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v88 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = *(_QWORD *)(a3 + 16);
  if (v71)
  {
    v67 = v5;
    v72 = a3 + 32;
    v81 = &v96;
    v80 = &v92;
    v66[1] = a3;
    swift_bridgeObjectRetain();
    v17 = 0;
    v18 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_4:
    v19 = *(_QWORD *)(v72 + 8 * v17);
    v77 = v17 + 1;
    v20 = *(_QWORD *)(v19 + 64);
    v78 = v19 + 64;
    v21 = 1 << *(_BYTE *)(v19 + 32);
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v23 = v22 & v20;
    v79 = (unint64_t)(v21 + 63) >> 6;
    v85 = v19;
    swift_bridgeObjectRetain_n();
    for (i = 0; ; i = v87)
    {
      if (v23)
      {
        v86 = (v23 - 1) & v23;
        v87 = i;
        v25 = __clz(__rbit64(v23)) | (i << 6);
      }
      else
      {
        v26 = i + 1;
        if (__OFADD__(i, 1))
          goto LABEL_55;
        if (v26 >= v79)
        {
LABEL_3:
          swift_release();
          swift_bridgeObjectRelease();
          v17 = v77;
          if (v77 != v71)
            goto LABEL_4;
          swift_bridgeObjectRelease();
          v5 = v67;
          break;
        }
        v27 = *(_QWORD *)(v78 + 8 * v26);
        v28 = i + 1;
        if (!v27)
        {
          v28 = i + 2;
          if (i + 2 >= v79)
            goto LABEL_3;
          v27 = *(_QWORD *)(v78 + 8 * v28);
          if (!v27)
          {
            v28 = i + 3;
            if (i + 3 >= v79)
              goto LABEL_3;
            v27 = *(_QWORD *)(v78 + 8 * v28);
            if (!v27)
            {
              v28 = i + 4;
              if (i + 4 >= v79)
                goto LABEL_3;
              v27 = *(_QWORD *)(v78 + 8 * v28);
              if (!v27)
              {
                v28 = i + 5;
                if (i + 5 >= v79)
                  goto LABEL_3;
                v27 = *(_QWORD *)(v78 + 8 * v28);
                if (!v27)
                {
                  v29 = i + 6;
                  if (i + 6 >= v79)
                    goto LABEL_3;
                  v27 = *(_QWORD *)(v78 + 8 * v29);
                  if (!v27)
                  {
                    while (1)
                    {
                      v28 = v29 + 1;
                      if (__OFADD__(v29, 1))
                        goto LABEL_56;
                      if (v28 >= v79)
                        goto LABEL_3;
                      v27 = *(_QWORD *)(v78 + 8 * v28);
                      ++v29;
                      if (v27)
                        goto LABEL_29;
                    }
                  }
                  v28 = i + 6;
                }
              }
            }
          }
        }
LABEL_29:
        v86 = (v27 - 1) & v27;
        v87 = v28;
        v25 = __clz(__rbit64(v27)) + (v28 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v85 + 48) + 16 * v25);
      v32 = *v30;
      v31 = v30[1];
      sub_2444E8B18(*(_QWORD *)(v85 + 56) + 40 * v25, (uint64_t)v81);
      *(_QWORD *)&v95 = v32;
      *((_QWORD *)&v95 + 1) = v31;
      v92 = v96;
      v93 = v97;
      v91 = v95;
      v94 = v98;
      v33 = v95;
      v34 = v80;
      __swift_project_boxed_opaque_existential_1(v80, *((uint64_t *)&v97 + 1));
      swift_getDynamicType();
      swift_bridgeObjectRetain();
      v35 = v88;
      sub_244533654();
      __swift_project_boxed_opaque_existential_1(v34, *((uint64_t *)&v93 + 1));
      swift_getDynamicType();
      swift_bridgeObjectRetain_n();
      LOBYTE(v31) = sub_244533660();
      v36 = v83;
      v37 = (uint64_t)v82;
      v38 = v35;
      v39 = v15;
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(&v82[*(int *)(v83 + 24)], v38, v15);
      *(_OWORD *)v37 = v33;
      *(_BYTE *)(v37 + 16) = v31 & 1;
      *(_BYTE *)(v37 + *(int *)(v36 + 28)) = 0;
      sub_2444F27D4(v37, (uint64_t)v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v90 = v18;
      v42 = sub_2444EB9F0(v33, *((uint64_t *)&v33 + 1));
      v43 = v18[2];
      v44 = (v41 & 1) == 0;
      v45 = v43 + v44;
      if (__OFADD__(v43, v44))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        result = sub_244533E88();
        __break(1u);
        return result;
      }
      v46 = v41;
      if (v18[3] >= v45)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v18 = v90;
          if ((v41 & 1) != 0)
            goto LABEL_8;
        }
        else
        {
          sub_2444F8B40();
          v18 = v90;
          if ((v46 & 1) != 0)
            goto LABEL_8;
        }
      }
      else
      {
        sub_2444ED3D8(v45, isUniquelyReferenced_nonNull_native);
        v47 = sub_2444EB9F0(v33, *((uint64_t *)&v33 + 1));
        if ((v46 & 1) != (v48 & 1))
          goto LABEL_57;
        v42 = v47;
        v18 = v90;
        if ((v46 & 1) != 0)
        {
LABEL_8:
          sub_244509DFC((uint64_t)v13, v18[7] + *(_QWORD *)(v84 + 72) * v42);
          goto LABEL_9;
        }
      }
      v18[(v42 >> 6) + 8] |= 1 << v42;
      *(_OWORD *)(v18[6] + 16 * v42) = v33;
      sub_2444F27D4((uint64_t)v13, v18[7] + *(_QWORD *)(v84 + 72) * v42);
      v49 = v18[2];
      v50 = __OFADD__(v49, 1);
      v51 = v49 + 1;
      if (v50)
        goto LABEL_54;
      v18[2] = v51;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v39;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v39);
      sub_2444EC024((uint64_t)&v91, &qword_257367F78);
      v23 = v86;
    }
  }
  v52 = sub_2445338DC();
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    *(_QWORD *)&v95 = MEMORY[0x24BEE4AF8];
    sub_2444F0D94(0, v53, 0);
    v54 = v52 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v55 = *(_QWORD *)(v5 + 72);
    v56 = v95;
    v57 = v76;
    do
    {
      v58 = v73;
      sub_244509E40(v54, v73);
      v59 = *(int *)(v75 + 48);
      v60 = (uint64_t)&v74[v59];
      sub_2444E8C24(v58 + v59, (uint64_t)&v74[v59]);
      sub_2444F27D4(v60, v57);
      sub_2444EC024(v58, &qword_257368290);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0D94(0, *(_QWORD *)(v56 + 16) + 1, 1);
        v56 = v95;
      }
      v62 = *(_QWORD *)(v56 + 16);
      v61 = *(_QWORD *)(v56 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_2444F0D94(v61 > 1, v62 + 1, 1);
        v56 = v95;
      }
      *(_QWORD *)(v56 + 16) = v62 + 1;
      v57 = v76;
      sub_2444F27D4(v76, v56+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v62);
      v54 += v55;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = MEMORY[0x24BEE4AF8];
  }
  v63 = v69;
  v64 = v70;
  *v69 = v68;
  v63[1] = v64;
  v63[2] = v56;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2445092EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _BYTE v11[40];

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24453366C();
  if (v10)
  {
    sub_2444E8B00(&v9, (uint64_t)v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
    if (swift_dynamicCast())
    {
      v6 = v9;
      v7 = sub_2445333F0();
      sub_2444F53D0(v6, *((unint64_t *)&v6 + 1));
    }
    else
    {
      *(_QWORD *)&v9 = 0;
      *((_QWORD *)&v9 + 1) = 0xE000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368B88);
      sub_244533C30();
      v7 = v9;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  }
  else
  {
    sub_2444EC024((uint64_t)&v9, &qword_257367FB0);
    return 0;
  }
  return v7;
}

uint64_t sub_244509444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  sub_244508AA0(a1, a2, a3, &v47);
  swift_bridgeObjectRelease();
  v6 = v47;
  v7 = *(_QWORD *)(a3 + 16);
  v39 = v48;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
LABEL_34:
    *(_QWORD *)a4 = v6;
    *(_OWORD *)(a4 + 8) = v39;
    *(_QWORD *)(a4 + 24) = v34;
    return result;
  }
  v37 = v47;
  v38 = a4;
  v50 = MEMORY[0x24BEE4AF8];
  sub_2444F0E24(0, v7, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368058);
  v8 = 0;
  v41 = a3 + 32;
  v40 = v7;
  while (2)
  {
    v9 = *(_QWORD *)(v41 + 8 * v8);
    v42 = v8 + 1;
    v10 = sub_244533C90();
    v11 = (_QWORD *)v10;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v43 = v9 + 64;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v44 = (unint64_t)(v12 + 63) >> 6;
    v45 = v10 + 64;
    v46 = v9;
    result = swift_bridgeObjectRetain();
    v16 = 0;
    if (v14)
    {
LABEL_7:
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_24;
    }
    while (1)
    {
      v19 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_36;
      if (v19 >= v44)
        goto LABEL_27;
      v20 = *(_QWORD *)(v43 + 8 * v19);
      ++v16;
      if (!v20)
      {
        v16 = v19 + 1;
        if (v19 + 1 >= v44)
          goto LABEL_27;
        v20 = *(_QWORD *)(v43 + 8 * v16);
        if (!v20)
        {
          v16 = v19 + 2;
          if (v19 + 2 >= v44)
            goto LABEL_27;
          v20 = *(_QWORD *)(v43 + 8 * v16);
          if (!v20)
          {
            v16 = v19 + 3;
            if (v19 + 3 >= v44)
              goto LABEL_27;
            v20 = *(_QWORD *)(v43 + 8 * v16);
            if (!v20)
              break;
          }
        }
      }
LABEL_23:
      v14 = (v20 - 1) & v20;
      v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_24:
      v22 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v18);
      v23 = *v22;
      v24 = v22[1];
      sub_2444E8B18(*(_QWORD *)(v46 + 56) + 40 * v18, (uint64_t)&v47);
      v25 = v49;
      __swift_project_boxed_opaque_existential_1(&v47, v49);
      swift_bridgeObjectRetain();
      v26 = sub_2445092EC(v25);
      v28 = v27;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      *(_QWORD *)(v45 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v29 = (_QWORD *)(v11[6] + 16 * v18);
      *v29 = v23;
      v29[1] = v24;
      v30 = (uint64_t *)(v11[7] + 16 * v18);
      *v30 = v26;
      v30[1] = v28;
      v31 = v11[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v11[2] = v33;
      if (v14)
        goto LABEL_7;
    }
    v21 = v19 + 4;
    if (v21 >= v44)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      v34 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0E24(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v50;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_2444F0E24(v35 > 1, v36 + 1, 1);
        v34 = v50;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      *(_QWORD *)(v34 + 8 * v36 + 32) = v11;
      v8 = v42;
      if (v42 == v40)
      {
        result = swift_bridgeObjectRelease();
        a4 = v38;
        v6 = v37;
        goto LABEL_34;
      }
      continue;
    }
    break;
  }
  v20 = *(_QWORD *)(v43 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v44)
      goto LABEL_27;
    v20 = *(_QWORD *)(v43 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2445097CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = sub_244533990();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v31 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DatasetColumnDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(v0 + 16);
  v30[1] = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v35 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2444F0DEC(0, v8, 0);
    v10 = *(unsigned __int8 *)(v4 + 80);
    v30[0] = v7;
    v11 = v7 + ((v10 + 32) & ~v10);
    v12 = *(_QWORD *)(v4 + 72);
    v9 = v35;
    v34 = v12;
    do
    {
      sub_2444E8C24(v11, (uint64_t)v6);
      v14 = *v6;
      v13 = v6[1];
      swift_bridgeObjectRetain();
      sub_2444FA12C((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0DEC(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v12 = v34;
        v9 = v35;
      }
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_2444F0DEC(v15 > 1, v16 + 1, 1);
        v12 = v34;
        v9 = v35;
      }
      *(_QWORD *)(v9 + 16) = v16 + 1;
      v17 = v9 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v14;
      *(_QWORD *)(v17 + 40) = v13;
      v11 += v12;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  v35 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
  sub_244509AE0();
  v18 = sub_244533918();
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2445369D0;
  *(_QWORD *)(v21 + 32) = v18;
  *(_QWORD *)(v21 + 40) = v20;
  swift_bridgeObjectRetain();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_244509C74(v22, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v35 = v21;
  sub_2444FFA60(v23);
  sub_244533918();
  swift_bridgeObjectRelease();
  v24 = v31;
  sub_244533984();
  v25 = sub_24453396C();
  v27 = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
  if (v27 >> 60 == 15)
  {
    sub_244509DB8();
    swift_allocError();
    *v28 = 0;
    v28[1] = 0;
    swift_willThrow();
  }
  return v25;
}

unint64_t sub_244509AE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257368B78;
  if (!qword_257368B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257367D70);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257368B78);
  }
  return result;
}

uint64_t sub_244509B2C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_2444F0DEC(0, v2, 0);
    v3 = v18;
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v7 = *i;
      if (!*(_QWORD *)(a2 + 16))
        break;
      v8 = *(i - 1);
      swift_bridgeObjectRetain_n();
      v9 = sub_2444EB9F0(v8, v7);
      if ((v10 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      v11 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v9);
      v13 = *v11;
      v12 = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v18 + 16);
      v14 = *(_QWORD *)(v18 + 24);
      if (v15 >= v14 >> 1)
        sub_2444F0DEC(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = v18 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v13;
      *(_QWORD *)(v16 + 40) = v12;
      if (!--v2)
        return v3;
    }
    swift_bridgeObjectRetain();
LABEL_8:
    v13 = 0;
    v12 = 0xE000000000000000;
    goto LABEL_9;
  }
  return v3;
}

uint64_t sub_244509C74(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2444F0DEC(0, v2, 0);
    v3 = v15;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v5;
      swift_bridgeObjectRetain();
      sub_244509B2C(a2, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
      sub_244509AE0();
      v7 = sub_244533918();
      v9 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      if (v11 >= v10 >> 1)
        sub_2444F0DEC(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v12 = v15 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

unint64_t sub_244509DB8()
{
  unint64_t result;

  result = qword_257368B80;
  if (!qword_257368B80)
  {
    result = MEMORY[0x2495115A0](&unk_244537738, &type metadata for DatasetSnapshotError);
    atomic_store(result, (unint64_t *)&qword_257368B80);
  }
  return result;
}

uint64_t sub_244509DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetColumnDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244509E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t destroy for DatasetSnapshotError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12PoirotBlocks20DatasetSnapshotErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for DatasetSnapshotError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatasetSnapshotError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetSnapshotError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DatasetSnapshotError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_24450A09C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24450A0B4(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetSnapshotError()
{
  return &type metadata for DatasetSnapshotError;
}

uint64_t sub_24450A0E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _OWORD v12[3];
  __int128 v13[3];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368BC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24450B0C0();
  sub_244533F3C();
  LOBYTE(v12[0]) = 0;
  sub_244533D68();
  if (!v2)
  {
    sub_24450B1C4((__int128 *)(v3 + 16), v13);
    sub_24450B1C4(v13, v12);
    v11 = 1;
    sub_24450B1DC();
    sub_244533D98();
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 64);
    v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368BA8);
    sub_24450B220();
    sub_244533D98();
    LOBYTE(v12[0]) = 3;
    sub_244533D68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24450A294()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24450A2BC + 4 * byte_244537780[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24450A2BC()
{
  return 0x6574616C706D6574;
}

uint64_t sub_24450A2E0()
{
  return 0x736F7263616DLL;
}

uint64_t sub_24450A2F4()
{
  return 0x6D614E7972657571;
}

uint64_t sub_24450A310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24450AAFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24450A334()
{
  sub_24450B0C0();
  return sub_244533F48();
}

uint64_t sub_24450A35C()
{
  sub_24450B0C0();
  return sub_244533F54();
}

double sub_24450A384@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_24450ACCC(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_24450A3DC(_QWORD *a1)
{
  return sub_24450A0E4(a1);
}

uint64_t sub_24450A424(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_24450A850((uint64_t)v7, (uint64_t)v9) & 1;
}

_OWORD *sub_24450A48C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD v6[5];
  _BYTE v7[96];
  __int128 v8[3];

  sub_2444E8B18(a1, (uint64_t)v6);
  sub_244516CC0(v6);
  if (v2)
    return (_OWORD *)__swift_destroy_boxed_opaque_existential_1(a1);
  sub_24450A93C((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_24450B1C4(v8, a2);
}

uint64_t sub_24450A51C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v9[0] = *(_QWORD *)v1;
  v9[1] = v3;
  v9[2] = v4;
  v10 = v5;
  v11 = v7;
  v12 = v6;
  v13 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2445170C4(a1);
  return sub_2444F40DC((uint64_t)v9);
}

uint64_t sub_24450A59C(__int128 *a1, __int128 *a2)
{
  __int128 v4[3];
  __int128 v5[3];

  sub_24450B1C4(a1, v4);
  sub_24450B1C4(a2, v5);
  return sub_24450A750(v4, v5) & 1;
}

uint64_t TemplateBlockConfigType.init(aggregationBlock:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2444E8B00(a1, a2);
}

uint64_t dispatch thunk of TemplateBlockProtocol.configType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TemplateBlockProtocol.macros.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeWithCopy for TemplateBlockConfigType(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for TemplateBlockConfigType(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for TemplateBlockConfigType(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockConfigType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockConfigType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfigType()
{
  return &type metadata for TemplateBlockConfigType;
}

uint64_t sub_24450A750(__int128 *a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;

  sub_24450B1C4(a2, &v18);
  v3 = v18;
  v4 = v19;
  v5 = v20;
  v7 = v21;
  v6 = v22;
  sub_24450B1C4(a1, &v13);
  v8 = v14;
  v9 = v15;
  v11 = v16;
  v10 = v17;
  if ((v13 == v3 || (sub_244533DF8() & 1) != 0) && (sub_24450013C(v8, v4) & 1) != 0 && ((v5 ^ v9) & 1) == 0)
  {
    if (v10)
    {
      if (v6 && (v11 == v7 && v10 == v6 || (sub_244533DF8() & 1) != 0))
        return 1;
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_24450A850(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  __int128 v17;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_244533DF8(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_BYTE *)(a1 + 40);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_BYTE *)(a2 + 40);
    v10 = *(_QWORD *)(a1 + 16);
    v11 = *(_OWORD *)(a1 + 24);
    v12 = v7;
    v13 = *(_OWORD *)(a1 + 48);
    v14 = v8;
    v15 = *(_OWORD *)(a2 + 24);
    v16 = v9;
    v17 = *(_OWORD *)(a2 + 48);
    if ((sub_24451BE94((uint64_t)&v10, (uint64_t)&v14) & 1) != 0
      && (sub_244500270(*(_QWORD **)(a1 + 64), *(_QWORD **)(a2 + 64)) & 1) != 0)
    {
      if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80))
        return 1;
      else
        return sub_244533DF8();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_24450A93C(uint64_t a1)
{
  _BYTE v1[96];

  sub_2444FE960(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_24450A984()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_24450BA40();
  swift_allocError();
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  swift_willThrow();
  return sub_2444F40DC(v0);
}

uint64_t sub_24450AAFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xED00006B636F6C42 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736F7263616DLL && a2 == 0xE600000000000000 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E7972657571 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24450ACCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368B90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24450B0C0();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v38) = 0;
  v9 = sub_244533D14();
  v12 = v11;
  v37 = v9;
  v45 = 1;
  sub_24450B104();
  swift_bridgeObjectRetain();
  sub_244533D2C();
  v13 = v39;
  v31 = v38;
  v32 = v12;
  v14 = v40;
  v44 = v41;
  v30 = v42;
  v33 = 0;
  v15 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368BA8);
  v45 = 2;
  sub_24450B148();
  v35 = v13;
  swift_bridgeObjectRetain();
  v34 = v14;
  swift_bridgeObjectRetain();
  v36 = v15;
  v16 = v33;
  swift_bridgeObjectRetain();
  sub_244533D2C();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v38;
    LOBYTE(v38) = 3;
    v29 = v17;
    swift_bridgeObjectRetain();
    v18 = sub_244533D14();
    v19 = v32;
    v21 = v20;
    v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33 = v18;
    v22(v8, v5);
    swift_bridgeObjectRetain();
    v23 = v35;
    swift_bridgeObjectRetain();
    v24 = v34;
    swift_bridgeObjectRetain();
    v25 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v26 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v37;
    *(_QWORD *)(a2 + 8) = v19;
    *(_QWORD *)(a2 + 16) = v31;
    *(_QWORD *)(a2 + 24) = v23;
    *(_QWORD *)(a2 + 32) = v24;
    *(_BYTE *)(a2 + 40) = v44;
    *(_QWORD *)(a2 + 48) = v30;
    *(_QWORD *)(a2 + 56) = v25;
    v27 = v33;
    *(_QWORD *)(a2 + 64) = v26;
    *(_QWORD *)(a2 + 72) = v27;
    *(_QWORD *)(a2 + 80) = v21;
  }
  return result;
}

unint64_t sub_24450B0C0()
{
  unint64_t result;

  result = qword_257368B98;
  if (!qword_257368B98)
  {
    result = MEMORY[0x2495115A0](&unk_2445379D8, &type metadata for TemplateBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368B98);
  }
  return result;
}

unint64_t sub_24450B104()
{
  unint64_t result;

  result = qword_257368BA0;
  if (!qword_257368BA0)
  {
    result = MEMORY[0x2495115A0](&unk_2445379B0, &type metadata for TemplateConfig);
    atomic_store(result, (unint64_t *)&qword_257368BA0);
  }
  return result;
}

unint64_t sub_24450B148()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257368BB0;
  if (!qword_257368BB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257368BA8);
    v2 = sub_24450B29C(&qword_257368BB8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257368BB0);
  }
  return result;
}

_OWORD *sub_24450B1C4(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_24450B1DC()
{
  unint64_t result;

  result = qword_257368BC8;
  if (!qword_257368BC8)
  {
    result = MEMORY[0x2495115A0](&unk_244537988, &type metadata for TemplateConfig);
    atomic_store(result, (unint64_t *)&qword_257368BC8);
  }
  return result;
}

unint64_t sub_24450B220()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257368BD0;
  if (!qword_257368BD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257368BA8);
    v2 = sub_24450B29C(&qword_257368BD8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257368BD0);
  }
  return result;
}

uint64_t sub_24450B29C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257368000);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x2495115A0](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AggregationBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AggregationBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TemplateConfig()
{
  return &type metadata for TemplateConfig;
}

uint64_t storeEnumTagSinglePayload for TemplateBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24450B4CC + 4 * byte_244537790[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24450B500 + 4 * byte_24453778B[v4]))();
}

uint64_t sub_24450B500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450B508(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24450B510);
  return result;
}

uint64_t sub_24450B51C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24450B524);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24450B528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450B530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfig.CodingKeys()
{
  return &type metadata for TemplateBlockConfig.CodingKeys;
}

uint64_t destroy for TemplateBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for TemplateBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplateBlockConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplateBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateBlockConfig()
{
  return &type metadata for TemplateBlockConfig;
}

unint64_t sub_24450B868(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_24450B89C();
  a1[2] = sub_24450B8E0();
  result = sub_24450B924();
  a1[3] = result;
  return result;
}

unint64_t sub_24450B89C()
{
  unint64_t result;

  result = qword_257368BE0;
  if (!qword_257368BE0)
  {
    result = MEMORY[0x2495115A0](&unk_244537864, &type metadata for TemplateBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368BE0);
  }
  return result;
}

unint64_t sub_24450B8E0()
{
  unint64_t result;

  result = qword_257368BE8;
  if (!qword_257368BE8)
  {
    result = MEMORY[0x2495115A0](&unk_24453783C, &type metadata for TemplateBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368BE8);
  }
  return result;
}

unint64_t sub_24450B924()
{
  unint64_t result;

  result = qword_257368BF0;
  if (!qword_257368BF0)
  {
    result = MEMORY[0x2495115A0](&unk_244537814, &type metadata for TemplateBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368BF0);
  }
  return result;
}

unint64_t sub_24450B96C()
{
  unint64_t result;

  result = qword_257368BF8;
  if (!qword_257368BF8)
  {
    result = MEMORY[0x2495115A0](&unk_244537938, &type metadata for TemplateBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368BF8);
  }
  return result;
}

unint64_t sub_24450B9B4()
{
  unint64_t result;

  result = qword_257368C00;
  if (!qword_257368C00)
  {
    result = MEMORY[0x2495115A0](&unk_2445378A8, &type metadata for TemplateBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368C00);
  }
  return result;
}

unint64_t sub_24450B9FC()
{
  unint64_t result;

  result = qword_257368C08;
  if (!qword_257368C08)
  {
    result = MEMORY[0x2495115A0](&unk_2445378D0, &type metadata for TemplateBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368C08);
  }
  return result;
}

unint64_t sub_24450BA40()
{
  unint64_t result;

  result = qword_257368C10;
  if (!qword_257368C10)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for TemplateBlockError, &type metadata for TemplateBlockError);
    atomic_store(result, (unint64_t *)&qword_257368C10);
  }
  return result;
}

uint64_t DatasetColumnDescription.init(name:nullable:type:pivot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v9;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  v9 = type metadata accessor for DatasetColumnDescription(0);
  *(_BYTE *)(a6 + *(int *)(v9 + 28)) = a5;
  return sub_24450BAE8(a4, a6 + *(int *)(v9 + 24));
}

uint64_t type metadata accessor for DatasetColumnDescription(uint64_t a1)
{
  return sub_24450BB40(a1, qword_257368D70);
}

uint64_t sub_24450BAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetColumnType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DatasetColumnType(uint64_t a1)
{
  return sub_24450BB40(a1, qword_257368CE0);
}

uint64_t sub_24450BB40(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24450BB74()
{
  sub_2444E4A28(&qword_257368C38, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E8]);
  return sub_244533A2C();
}

uint64_t sub_24450BBE8()
{
  sub_2444E4A28(&qword_257368C38, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E8]);
  return sub_244533A20();
}

uint64_t DatasetColumnType.sqlType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t static DatasetColumnType.text.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74080], a1);
}

uint64_t static DatasetColumnType.blob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74070], a1);
}

uint64_t static DatasetColumnType.int32.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74090], a1);
}

uint64_t static DatasetColumnType.int64.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74098], a1);
}

uint64_t static DatasetColumnType.uint32.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE740A8], a1);
}

uint64_t static DatasetColumnType.uint64.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE740B0], a1);
}

uint64_t static DatasetColumnType.float.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74088], a1);
}

uint64_t static DatasetColumnType.double.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE740A0], a1);
}

uint64_t static DatasetColumnType.datetime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE740C0], a1);
}

uint64_t static DatasetColumnType.BOOL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74078], a1);
}

uint64_t static DatasetColumnType.any.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24450BD0C(MEMORY[0x24BE74068], a1);
}

uint64_t sub_24450BD0C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, v3, v4);
}

uint64_t sub_24450BD48()
{
  uint64_t result;

  result = sub_24450BD64();
  qword_257368C18 = result;
  return result;
}

uint64_t sub_24450BD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v0 = type metadata accessor for DatasetColumnType(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244533600();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2444F0E40(0, v5, 0);
    v6 = v17;
    v7 = sub_244533618();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v16 = v4;
    v10 = v4 + ((v9 + 32) & ~v9);
    v11 = *(_QWORD *)(v8 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    do
    {
      v12(v3, v10, v7);
      v17 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2444F0E40(v13 > 1, v14 + 1, 1);
        v6 = v17;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      sub_24450BAE8((uint64_t)v3, v6+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v14);
      v10 += v11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t static DatasetColumnType.allCases.getter()
{
  if (qword_257367980 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static DatasetColumnType.allCases.setter(uint64_t a1)
{
  if (qword_257367980 != -1)
    swift_once();
  swift_beginAccess();
  qword_257368C18 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DatasetColumnType.allCases.modify())()
{
  if (qword_257367980 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DatasetColumnType.hash(into:)()
{
  sub_244533618();
  sub_2444E4A28(&qword_257368C20, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E0]);
  return sub_2445338F4();
}

uint64_t DatasetColumnType.hashValue.getter()
{
  sub_244533EDC();
  sub_244533618();
  sub_2444E4A28(&qword_257368C20, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E0]);
  sub_2445338F4();
  return sub_244533EF4();
}

uint64_t sub_24450C0E8()
{
  sub_244533EDC();
  sub_244533618();
  sub_2444E4A28(&qword_257368C20, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E0]);
  sub_2445338F4();
  return sub_244533EF4();
}

uint64_t sub_24450C154()
{
  sub_244533618();
  sub_2444E4A28(&qword_257368C20, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E0]);
  return sub_2445338F4();
}

uint64_t sub_24450C1AC()
{
  sub_244533EDC();
  sub_244533618();
  sub_2444E4A28(&qword_257368C20, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E0]);
  sub_2445338F4();
  return sub_244533EF4();
}

uint64_t sub_24450C214@<X0>(_QWORD *a1@<X8>)
{
  if (qword_257367980 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_257368C18;
  return swift_bridgeObjectRetain();
}

uint64_t DatasetColumnType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v11[4];

  v5 = sub_244533618();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244533F0C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_2444E4A28(&qword_257368C28, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], (uint64_t)&protocol conformance descriptor for SQLiteColumnType);
    sub_244533E28();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t DatasetColumnType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244533F30();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_244533618();
  sub_2444E4A28(&qword_257368C30, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], (uint64_t)&protocol conformance descriptor for SQLiteColumnType);
  sub_244533E64();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_24450C484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnType.init(from:)(a1, a2);
}

uint64_t sub_24450C498(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244533F30();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_244533618();
  sub_2444E4A28(&qword_257368C30, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], (uint64_t)&protocol conformance descriptor for SQLiteColumnType);
  sub_244533E64();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t DatasetColumnDescription.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DatasetColumnDescription.name.modify())()
{
  return nullsub_1;
}

uint64_t DatasetColumnDescription.nullable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DatasetColumnDescription.nullable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*DatasetColumnDescription.nullable.modify())()
{
  return nullsub_1;
}

uint64_t DatasetColumnDescription.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DatasetColumnDescription(0);
  return sub_24450D41C(v1 + *(int *)(v3 + 24), a1, type metadata accessor for DatasetColumnType);
}

uint64_t DatasetColumnDescription.pivot.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DatasetColumnDescription(0) + 28));
}

uint64_t DatasetColumnDescription.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v5 = type metadata accessor for DatasetColumnDescription(0);
  sub_24450D41C(a1 + *(int *)(v5 + 24), a2 + *(int *)(v5 + 24), type metadata accessor for DatasetColumnType);
  v6 = *(_BYTE *)(a1 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  result = sub_2444FA12C(a1);
  *(_BYTE *)(a2 + *(int *)(v5 + 28)) = v6;
  return result;
}

uint64_t DatasetColumnDescription.matches(_:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = v1;
  v4 = type metadata accessor for DatasetColumnDescription(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  if (*a1 == *v2 && a1[1] == v2[1])
  {
    sub_24450D41C((uint64_t)a1, (uint64_t)v15 - v8, type metadata accessor for DatasetColumnDescription);
    sub_24450D41C((uint64_t)v2, (uint64_t)v7, type metadata accessor for DatasetColumnDescription);
  }
  else
  {
    v11 = sub_244533DF8();
    sub_24450D41C((uint64_t)a1, (uint64_t)v9, type metadata accessor for DatasetColumnDescription);
    sub_24450D41C((uint64_t)v2, (uint64_t)v7, type metadata accessor for DatasetColumnDescription);
    if ((v11 & 1) == 0)
      goto LABEL_13;
  }
  sub_244533618();
  sub_2444E4A28(&qword_257368C38, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E8]);
  sub_244533A14();
  sub_244533A14();
  if (v15[2] == v15[0] && v15[3] == v15[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_244533DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_13:
      v13 = 0;
      goto LABEL_14;
    }
  }
  v13 = 1;
LABEL_14:
  sub_2444FA12C((uint64_t)v7);
  sub_2444FA12C((uint64_t)v9);
  return v13;
}

uint64_t DatasetColumnDescription.columnName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetColumnDescription.columnType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t DynamicType;
  uint64_t v7;
  _QWORD v10[4];

  v1 = v0;
  v2 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DatasetColumnDescription(0);
  sub_24450D41C(v0 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for DatasetColumnType);
  DynamicType = sub_2445335F4();
  v7 = sub_244533618();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    sub_244533678();
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    DynamicType = swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  return DynamicType;
}

uint64_t sub_24450C9A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t DynamicType;
  uint64_t v9;
  _QWORD v12[4];

  v3 = v1;
  v4 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24450D41C(v1 + *(int *)(a1 + 24), (uint64_t)v6, v7);
  DynamicType = sub_2445335F4();
  v9 = sub_244533618();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  if (*(_BYTE *)(v3 + 16) == 1)
  {
    sub_244533678();
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    DynamicType = swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  return DynamicType;
}

uint64_t sub_24450CA98()
{
  return sub_24453363C() & 1;
}

uint64_t sub_24450CAB0()
{
  sub_2444E4A28((unint64_t *)&qword_2573689F0, type metadata accessor for DatasetColumnDescription, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
  return sub_244533630();
}

uint64_t sub_24450CB08()
{
  sub_2444E4A28((unint64_t *)&qword_2573689F0, type metadata accessor for DatasetColumnDescription, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
  return sub_244533624();
}

void sub_24450CB54(char *a1)
{
  sub_24451ABF8(*a1);
}

void sub_24450CB60()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244533EDC();
  __asm { BR              X9 }
}

uint64_t sub_24450CBA4()
{
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

void sub_24450CC04()
{
  __asm { BR              X10 }
}

uint64_t sub_24450CC38()
{
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

void sub_24450CC84()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244533EDC();
  __asm { BR              X9 }
}

uint64_t sub_24450CCC4()
{
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

uint64_t sub_24450CD24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24450DE58();
  *a1 = result;
  return result;
}

uint64_t sub_24450CD50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_24450CD78 + 4 * byte_244537A3C[*v0]))();
}

void sub_24450CD78(_QWORD *a1@<X8>)
{
  *a1 = 0x656C62616C6C756ELL;
  a1[1] = 0xE800000000000000;
}

void sub_24450CD94(_QWORD *a1@<X8>)
{
  *a1 = 0x746F766970;
  a1[1] = 0xE500000000000000;
}

void sub_24450CDAC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1701869940;
  a1[1] = v1;
}

uint64_t sub_24450CDBC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24450CDE4 + 4 * byte_244537A40[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24450CDE4()
{
  return 0x656C62616C6C756ELL;
}

uint64_t sub_24450CDFC()
{
  return 0x746F766970;
}

uint64_t sub_24450CE10()
{
  return 1701869940;
}

uint64_t sub_24450CE1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24450DE58();
  *a1 = result;
  return result;
}

uint64_t sub_24450CE40()
{
  sub_24450D460();
  return sub_244533F48();
}

uint64_t sub_24450CE68()
{
  sub_24450D460();
  return sub_244533F54();
}

uint64_t DatasetColumnDescription.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v20 = a2;
  v21 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368C40);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DatasetColumnDescription(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24450D460();
  v12 = v24;
  sub_244533F18();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  v28 = 0;
  v13 = (uint64_t)v10;
  *(_QWORD *)v10 = sub_244533D14();
  *((_QWORD *)v10 + 1) = v14;
  v27 = 1;
  v10[16] = sub_244533CF0() & 1;
  v26 = 2;
  v10[*(int *)(v8 + 28)] = sub_244533CF0() & 1;
  v25 = 3;
  sub_2444E4A28(&qword_257368C50, type metadata accessor for DatasetColumnType, (uint64_t)&protocol conformance descriptor for DatasetColumnType);
  v15 = (uint64_t)v4;
  v16 = v22;
  sub_244533D2C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  v17 = (uint64_t)v23;
  sub_24450BAE8(v15, v13 + *(int *)(v8 + 24));
  sub_24450D41C(v13, v20, type metadata accessor for DatasetColumnDescription);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return sub_2444FA12C(v13);
}

uint64_t DatasetColumnDescription.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368C58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24450D460();
  sub_244533F3C();
  v10[15] = 0;
  swift_bridgeObjectRetain();
  sub_244533D68();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v3 + 16) == 1)
    {
      v10[12] = 1;
      sub_244533D74();
    }
    if (*(_BYTE *)(v3 + *(int *)(type metadata accessor for DatasetColumnDescription(0) + 28)) == 1)
    {
      v10[13] = 2;
      sub_244533D74();
    }
    v10[14] = 3;
    type metadata accessor for DatasetColumnType(0);
    sub_2444E4A28(&qword_257368C60, type metadata accessor for DatasetColumnType, (uint64_t)&protocol conformance descriptor for DatasetColumnType);
    sub_244533D98();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_24450D32C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnDescription.init(from:)(a1, a2);
}

uint64_t sub_24450D340(_QWORD *a1)
{
  return DatasetColumnDescription.encode(to:)(a1);
}

uint64_t _s12PoirotBlocks17DatasetColumnTypeV2eeoiySbAC_ACtFZ_0()
{
  char v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_244533618();
  sub_2444E4A28(&qword_257368C38, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E8]);
  sub_244533A14();
  sub_244533A14();
  if (v5 == v3 && v6 == v4)
    v1 = 1;
  else
    v1 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_24450D41C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24450D460()
{
  unint64_t result;

  result = qword_257368C48;
  if (!qword_257368C48)
  {
    result = MEMORY[0x2495115A0](&unk_244537E4C, &type metadata for DatasetColumnDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368C48);
  }
  return result;
}

uint64_t sub_24450D4A4()
{
  return sub_2444E4A28(&qword_257368C68, type metadata accessor for DatasetColumnType, (uint64_t)&protocol conformance descriptor for DatasetColumnType);
}

unint64_t sub_24450D4D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257368C70;
  if (!qword_257368C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257368C78);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257368C70);
  }
  return result;
}

uint64_t sub_24450D520()
{
  return sub_2444E4A28(&qword_257368C80, type metadata accessor for DatasetColumnDescription, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
}

uint64_t sub_24450D54C()
{
  return sub_2444E4A28((unint64_t *)&qword_257368298, type metadata accessor for DatasetColumnDescription, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
}

uint64_t initializeBufferWithCopyOfBuffer for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for DatasetColumnType(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DatasetColumnType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetColumnType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24450D704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DatasetColumnType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24450D74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_24450D78C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244533618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DatasetColumnDescription(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_244533618();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for DatasetColumnDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_244533618();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244533618();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithCopy for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for DatasetColumnDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244533618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for DatasetColumnDescription()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24450DB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DatasetColumnType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DatasetColumnDescription()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24450DBC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DatasetColumnType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24450DC38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244533618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DatasetColumnDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24450DD00 + 4 * byte_244537A49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24450DD34 + 4 * byte_244537A44[v4]))();
}

uint64_t sub_24450DD34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450DD3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24450DD44);
  return result;
}

uint64_t sub_24450DD50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24450DD58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24450DD5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450DD64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnDescription.CodingKeys()
{
  return &type metadata for DatasetColumnDescription.CodingKeys;
}

unint64_t sub_24450DD84()
{
  unint64_t result;

  result = qword_257368DB0;
  if (!qword_257368DB0)
  {
    result = MEMORY[0x2495115A0](&unk_244537E24, &type metadata for DatasetColumnDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368DB0);
  }
  return result;
}

unint64_t sub_24450DDCC()
{
  unint64_t result;

  result = qword_257368DB8;
  if (!qword_257368DB8)
  {
    result = MEMORY[0x2495115A0](&unk_244537D5C, &type metadata for DatasetColumnDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368DB8);
  }
  return result;
}

unint64_t sub_24450DE14()
{
  unint64_t result;

  result = qword_257368DC0;
  if (!qword_257368DC0)
  {
    result = MEMORY[0x2495115A0](&unk_244537D84, &type metadata for DatasetColumnDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368DC0);
  }
  return result;
}

uint64_t sub_24450DE58()
{
  unint64_t v0;

  v0 = sub_244533CCC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t AutomaticDSCFileProtobufFactory.dscUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v4 = sub_2445333CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AutomaticDSCFileProtobufFactory.updateFileAutomatically.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically);
}

uint64_t AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(a1, a2, a3, a4);
}

uint64_t AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  unsigned int v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = v5;
  v7 = v4;
  v36 = a4;
  v37 = a3;
  v31 = sub_24453381C();
  v34 = *(_QWORD *)(v31 - 8);
  v10 = MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v15 = sub_2445333CC();
  v35 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v14, a1, v15);
  v32 = a2;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) = a2;
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2445333A8();
  v17 = (void *)sub_24453393C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

  if (v18)
  {
    sub_2445333D8();
    if (v5)
    {
      v19 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v19(a1, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19(v14, v15);
      type metadata accessor for AutomaticDSCFileProtobufFactory();
      swift_deallocPartialClassInstance();
      return v7;
    }
    sub_2445337C8();
    v6 = 0;
  }
  else
  {
    sub_2445337D4();
  }
  v20 = AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)((uint64_t)v13, v37, v36);
  v21 = v33;
  v22 = v34;
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(a1, v15);
  }
  else
  {
    v7 = v20;
    if ((v32 & 1) != 0 && (swift_beginAccess(), *(_BYTE *)(v7 + 24) == 1))
    {
      v24 = *(_QWORD *)(v7 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
      swift_beginAccess();
      v25 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v24, v31);
      swift_retain();
      v26 = sub_244533810();
      v27 = v21;
      v28 = v26;
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v25);
      sub_244533408();
      sub_2444F53D0(v28, v30);
      *(_BYTE *)(v7 + 24) = 0;
    }
    else
    {
      swift_retain();
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(a1, v15);
    swift_release();
  }
  return v7;
}

uint64_t AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  swift_allocObject();
  return AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(a1, a2, a3, a4);
}

uint64_t AutomaticDSCFileProtobufFactory.init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  unsigned int v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v6 = v5;
  v7 = v4;
  v35 = a4;
  v37 = a3;
  v10 = sub_24453381C();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - v13;
  v15 = v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v16 = sub_2445333CC();
  v36 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v15, a1, v16);
  v34 = a2;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) = a2;
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2445333A8();
  v18 = (void *)sub_24453393C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

  if (v19)
  {
    sub_2445333D8();
    if (v5)
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v20(a1, v16);
      swift_bridgeObjectRelease();
      v20(v15, v16);
      type metadata accessor for AutomaticDSCFileProtobufFactory();
      swift_deallocPartialClassInstance();
      return v7;
    }
    sub_2445337C8();
    v6 = 0;
  }
  else
  {
    sub_2445337D4();
  }
  v21 = AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)((uint64_t)v14, v37, v35 & 1);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a1, v16);
  }
  else
  {
    v7 = v21;
    if ((v34 & 1) != 0 && (swift_beginAccess(), *(_BYTE *)(v7 + 24) == 1))
    {
      v23 = *(_QWORD *)(v7 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
      swift_beginAccess();
      v24 = v31;
      v25 = v32;
      v26 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v23, v33);
      swift_retain();
      v37 = sub_244533810();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
      v29 = v37;
      sub_244533408();
      sub_2444F53D0(v29, v28);
      *(_BYTE *)(v7 + 24) = 0;
    }
    else
    {
      swift_retain();
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a1, v16);
    swift_release();
  }
  return v7;
}

uint64_t sub_24450E6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[24];

  v2 = v0;
  v3 = sub_24453381C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_beginAccess();
  if (*(_BYTE *)(v2 + 24) == 1)
  {
    v8 = *(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
    v9 = sub_244533810();
    if (v1)
    {
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v11 = v9;
      v12 = v10;
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
      sub_244533408();
      result = sub_2444F53D0(v11, v12);
      *(_BYTE *)(v2 + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_24450E7F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1;
  v24 = sub_24453381C();
  v20 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v21 = *a1;
  v22 = v8;
  v23 = v9;
  v10 = *(_QWORD *)(v3 + 16);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap);
  swift_bridgeObjectRetain();
  sub_24452E678(&v21, v11);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v11 = sub_2444EB1C4(&v21);
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_updateFileAutomatically) == 1)
    {
      swift_beginAccess();
      if (*(_BYTE *)(v3 + 24) == 1)
      {
        v19 = (_BYTE *)(v3 + 24);
        v13 = v10 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
        swift_beginAccess();
        v14 = v20;
        v15 = v24;
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v6, v13, v24);
        v16 = sub_244533810();
        v18 = v17;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v15);
        sub_244533408();
        sub_2444F53D0(v16, v18);
        *v19 = 0;
      }
    }
  }
  return v11;
}

void AutomaticDSCFileProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void AutomaticDSCFileProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void AutomaticDSCFileProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void AutomaticDSCFileProtobufFactory.init(manifest:messageNameMap:columnsLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24450EAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v2 = sub_2445333CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t AutomaticDSCFileProtobufFactory.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v2 = sub_2445333CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AutomaticDSCFileProtobufFactory.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks31AutomaticDSCFileProtobufFactory_dscUrl;
  v2 = sub_2445333CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutomaticDSCFileProtobufFactory()
{
  uint64_t result;

  result = qword_257368DF0;
  if (!qword_257368DF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24450EBD4()
{
  return type metadata accessor for AutomaticDSCFileProtobufFactory();
}

uint64_t sub_24450EBDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2445333CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AutomaticDSCFileProtobufFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:columnsLayout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.__allocating_init(dscUrl:updateFileAutomatically:messageNameMap:allColumnsArePivots:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of AutomaticDSCFileProtobufFactory.updateManifestFileIfNeeded()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_24450ECA8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v14 = a5;
  v15 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368F18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24450F320();
  sub_244533F3C();
  LOBYTE(v17) = 0;
  sub_244533D68();
  if (!v5)
  {
    v11 = v14;
    v17 = v15;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
    sub_2444E9780(&qword_257367D78, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_244533D98();
    v17 = v11;
    v16 = 2;
    sub_244533D98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24450EE44()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0x73746F7669506E6FLL;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_24450EE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24450F764(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24450EEC0()
{
  sub_24450F320();
  return sub_244533F48();
}

uint64_t sub_24450EEE8()
{
  sub_24450F320();
  return sub_244533F54();
}

uint64_t sub_24450EF10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_24450F0A8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_24450EF3C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24450ECA8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_24450EF58(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  v2 = (_QWORD *)a1[2];
  v3 = (_QWORD *)a1[3];
  v5 = (_QWORD *)a2[2];
  v4 = (_QWORD *)a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_244533DF8() & 1) != 0) && (sub_244500078(v2, v5) & 1) != 0)
    return sub_244500078(v3, v4);
  else
    return 0;
}

uint64_t sub_24450EFD8(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3[1] + 8) + 8))(a2);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(uint64_t))(a3[2] + 8))(a2);
  (*(void (**)(void))(v7 + 8))();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(a3[3] + 8))(a2);
  return v6;
}

uint64_t sub_24450F0A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368F08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24450F320();
  sub_244533F18();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v12) = 0;
    v7 = sub_244533D14();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
    v11 = 1;
    v9 = sub_2444E9780(&qword_257367DA0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    v10 = v9;
    sub_244533D2C();
    v11 = 2;
    swift_bridgeObjectRetain();
    v10 = 0;
    sub_244533D2C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_24450F320()
{
  unint64_t result;

  result = qword_257368F10;
  if (!qword_257368F10)
  {
    result = MEMORY[0x2495115A0](&unk_24453807C, &type metadata for JoinBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368F10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JoinBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24450F3B0 + 4 * byte_244537EF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24450F3E4 + 4 * byte_244537EF0[v4]))();
}

uint64_t sub_24450F3E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450F3EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24450F3F4);
  return result;
}

uint64_t sub_24450F400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24450F408);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24450F40C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24450F414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JoinBlockConfig.CodingKeys()
{
  return &type metadata for JoinBlockConfig.CodingKeys;
}

uint64_t destroy for JoinBlockConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for JoinBlockConfig(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for JoinBlockConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JoinBlockConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for JoinBlockConfig()
{
  return &type metadata for JoinBlockConfig;
}

unint64_t sub_24450F58C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_24450F5C0();
  a1[2] = sub_24450F604();
  result = sub_24450F648();
  a1[3] = result;
  return result;
}

unint64_t sub_24450F5C0()
{
  unint64_t result;

  result = qword_257368F20;
  if (!qword_257368F20)
  {
    result = MEMORY[0x2495115A0](&unk_244537F80, &type metadata for JoinBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368F20);
  }
  return result;
}

unint64_t sub_24450F604()
{
  unint64_t result;

  result = qword_257368F28;
  if (!qword_257368F28)
  {
    result = MEMORY[0x2495115A0](&unk_244537F58, &type metadata for JoinBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368F28);
  }
  return result;
}

unint64_t sub_24450F648()
{
  unint64_t result;

  result = qword_257368F30;
  if (!qword_257368F30)
  {
    result = MEMORY[0x2495115A0](&unk_244537F30, &type metadata for JoinBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257368F30);
  }
  return result;
}

unint64_t sub_24450F690()
{
  unint64_t result;

  result = qword_257368F38;
  if (!qword_257368F38)
  {
    result = MEMORY[0x2495115A0](&unk_244538054, &type metadata for JoinBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368F38);
  }
  return result;
}

unint64_t sub_24450F6D8()
{
  unint64_t result;

  result = qword_257368F40;
  if (!qword_257368F40)
  {
    result = MEMORY[0x2495115A0](&unk_244537FC4, &type metadata for JoinBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368F40);
  }
  return result;
}

unint64_t sub_24450F720()
{
  unint64_t result;

  result = qword_257368F48;
  if (!qword_257368F48)
  {
    result = MEMORY[0x2495115A0](&unk_244537FEC, &type metadata for JoinBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257368F48);
  }
  return result;
}

uint64_t sub_24450F764(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000244534FD0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746F7669506E6FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24450F8A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t i;
  BOOL v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t (*v58)(unint64_t *, uint64_t);
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  unint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  unsigned int v71;
  char *v72;
  char *v73;
  uint64_t v74;
  unint64_t *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;

  v3 = v2;
  v81 = *MEMORY[0x24BDAC8D0];
  v74 = sub_24453333C();
  v77 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2445333CC();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v59 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v59 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (unint64_t *)((char *)&v59 - v15);
  v17 = *a1;
  v18 = (void (*)(char *, uint64_t))a1[2];
  v75 = (unint64_t *)a1[4];
  v76 = v18;
  v20 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, v1 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory, v7);
  v78 = v17;
  v79 = (id)sub_244533DBC();
  v80 = v21;
  sub_2445339D8();
  swift_bridgeObjectRetain();
  sub_2445339D8();
  v22 = v7;
  swift_bridgeObjectRelease();
  v23 = v77;
  v24 = *(void (**)(_QWORD))(v77 + 104);
  v71 = *MEMORY[0x24BDCD7A0];
  v25 = v74;
  v70 = (void (*)(char *, _QWORD, uint64_t))v24;
  v24(v6);
  v69 = sub_2444FE9D8();
  sub_2445333B4();
  v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  v73 = v6;
  v68 = v26;
  v26(v6, v25);
  swift_bridgeObjectRelease();
  v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v14, v22);
  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v29 = (void *)sub_244533378();
  v79 = 0;
  LODWORD(v6) = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 1, 0, &v79);

  if ((_DWORD)v6)
  {
    v30 = v79;
    v31 = sub_2445101F8((uint64_t)v75);
    v32 = 0;
    v33 = *(_QWORD *)(v31 + 64);
    v59 = v31 + 64;
    v61 = v31;
    v34 = 1 << *(_BYTE *)(v31 + 32);
    v35 = -1;
    if (v34 < 64)
      v35 = ~(-1 << v34);
    v36 = v35 & v33;
    v60 = (unint64_t)(v34 + 63) >> 6;
    v75 = v16;
    v76 = v27;
    v37 = (uint64_t)v62;
    v66 = v22;
    if (!v36)
      goto LABEL_6;
LABEL_5:
    v64 = (v36 - 1) & v36;
    v65 = v32;
    for (i = __clz(__rbit64(v36)) | (v32 << 6); ; i = __clz(__rbit64(v41)) + (v40 << 6))
    {
      v43 = *(_QWORD *)(*(_QWORD *)(v61 + 48) + 16 * i + 8);
      v44 = *(_QWORD **)(*(_QWORD *)(v61 + 56) + 8 * i);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = (unint64_t)v16;
      sub_244533390();
      swift_bridgeObjectRelease();
      v46 = v44[2];
      if (v46)
      {
        if (v46 != 1 || (v45 = v44[8], v45 >> 60 == 15))
        {
          v47 = 0;
          v63 = v44;
          v16 = v44 + 8;
          v67 = v46;
          while (v46 != v47)
          {
            v48 = *v16;
            if (*v16 >> 60 != 15)
            {
              v77 = v3;
              v37 = *(v16 - 1);
              v43 = *(v16 - 3);
              v79 = (id)*(v16 - 4);
              v80 = v43;
              v78 = v47;
              swift_bridgeObjectRetain_n();
              sub_244510530(v37, v48);
              sub_244510530(v37, v48);
              sub_244533DBC();
              sub_2445339D8();
              swift_bridgeObjectRelease();
              sub_2445339D8();
              swift_bridgeObjectRelease();
              v50 = v73;
              v49 = v74;
              v70(v73, v71, v74);
              v51 = v72;
              v45 = (unint64_t)v75;
              sub_2445333B4();
              v68(v50, v49);
              swift_bridgeObjectRelease();
              v52 = v77;
              sub_244533408();
              v3 = v52;
              v53 = v51;
              if (v52)
              {
                v55 = v66;
                v56 = v76;
                v76(v53, v66);
                sub_244510544(v37, v48);
                swift_bridgeObjectRelease();
                sub_244510544(v37, v48);
                swift_bridgeObjectRelease();
                v56(v62, v55);
                swift_release();
                return ((uint64_t (*)(unint64_t *, uint64_t))v56)(v75, v55);
              }
              v22 = v66;
              v76(v51, v66);
              sub_244510544(v37, v48);
              swift_bridgeObjectRelease();
              sub_244510544(v37, v48);
              v46 = v67;
            }
            ++v47;
            v16 += 5;
            if (v46 == v47)
              goto LABEL_28;
          }
          __break(1u);
LABEL_41:
          sub_244510544(v43, v45);
          v58 = (uint64_t (*)(unint64_t *, uint64_t))v76;
          v76((char *)v37, v22);
          swift_release();
          return v58(v16, v22);
        }
        v43 = v44[7];
        sub_2444F538C(v43, v44[8]);
        swift_bridgeObjectRelease();
        sub_244533408();
        if (v3)
          goto LABEL_41;
        v27 = v76;
        v76((char *)v37, v22);
        sub_244510544(v43, v45);
      }
      else
      {
        v63 = v44;
LABEL_28:
        v37 = (uint64_t)v62;
        v27 = v76;
        v76(v62, v22);
        swift_bridgeObjectRelease();
        v16 = v75;
      }
      v36 = v64;
      v32 = v65;
      if (v64)
        goto LABEL_5;
LABEL_6:
      v39 = __OFADD__(v32, 1);
      v40 = v32 + 1;
      if (v39)
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v40 >= v60)
        goto LABEL_39;
      v41 = *(_QWORD *)(v59 + 8 * v40);
      if (!v41)
      {
        v42 = v40 + 1;
        if (v40 + 1 >= v60)
          goto LABEL_39;
        v41 = *(_QWORD *)(v59 + 8 * v42);
        if (!v41)
        {
          v42 = v40 + 2;
          if (v40 + 2 >= v60)
            goto LABEL_39;
          v41 = *(_QWORD *)(v59 + 8 * v42);
          if (!v41)
          {
            v42 = v40 + 3;
            if (v40 + 3 >= v60)
            {
LABEL_39:
              swift_release();
              return ((uint64_t (*)(unint64_t *, uint64_t))v27)(v16, v22);
            }
            v41 = *(_QWORD *)(v59 + 8 * v42);
            if (!v41)
            {
              while (1)
              {
                v40 = v42 + 1;
                if (__OFADD__(v42, 1))
                  break;
                if (v40 >= v60)
                  goto LABEL_39;
                v41 = *(_QWORD *)(v59 + 8 * v40);
                ++v42;
                if (v41)
                  goto LABEL_16;
              }
LABEL_43:
              __break(1u);
            }
          }
        }
        v40 = v42;
      }
LABEL_16:
      v64 = (v41 - 1) & v41;
      v65 = v40;
    }
  }
  v54 = v79;
  sub_244533300();

  swift_willThrow();
  return ((uint64_t (*)(unint64_t *, uint64_t))v27)(v16, v22);
}

void sub_244510024(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_244510034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory;
  v2 = sub_2445333CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_244510084()
{
  return type metadata accessor for FileLogger();
}

uint64_t type metadata accessor for FileLogger()
{
  uint64_t result;

  result = qword_257368F80;
  if (!qword_257368F80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2445100C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2445333CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_244510134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *(_QWORD *)a4;
  v8 = *(_BYTE *)(a4 + 8);
  v10 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  ObjectType = swift_getObjectType();
  v13 = a1;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  if (!v4)
  {
    v13 = v7;
    v14 = v8;
    v15 = v10;
    v16 = v9;
    v17 = result;
    swift_bridgeObjectRetain();
    sub_24450F8A0(&v13);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2445101F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(_QWORD *@<X8>);
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  void (*v28)(_QWORD *@<X8>);
  uint64_t result;
  char v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = (_QWORD *)sub_2444F5954(MEMORY[0x24BEE4AF8]);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = (unint64_t *)(a1 + 64);
    while (1)
    {
      v6 = *(v5 - 3);
      v7 = *(v5 - 1);
      v8 = *v5;
      v33 = v3;
      v34 = *(v5 - 4);
      v31 = v5 + 5;
      v30 = *((_BYTE *)v5 - 16);
      swift_bridgeObjectRetain_n();
      sub_244510530(v7, v8);
      sub_2445339D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v32 = v7;
      sub_244510530(v7, v8);
      sub_244510558((uint64_t)v4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v11 = sub_2444EB9F0(v34, v6);
      v12 = v2[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        break;
      v15 = v10;
      if (v2[3] >= v14)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2444F8D6C();
      }
      else
      {
        sub_2444ED740(v14, isUniquelyReferenced_nonNull_native);
        v16 = sub_2444EB9F0(v34, v6);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_25;
        v11 = v16;
      }
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        v2[(v11 >> 6) + 8] |= 1 << v11;
        v18 = (uint64_t *)(v2[6] + 16 * v11);
        *v18 = v34;
        v18[1] = v6;
        *(_QWORD *)(v2[7] + 8 * v11) = MEMORY[0x24BEE4AF8];
        v19 = v2[2];
        v20 = v19 + 1;
        v21 = __OFADD__(v19, 1);
        swift_bridgeObjectRetain();
        if (v21)
          goto LABEL_24;
        v2[2] = v20;
      }
      swift_bridgeObjectRetain();
      v22 = v2[7];
      swift_bridgeObjectRelease();
      v23 = *(_QWORD **)(v22 + 8 * v11);
      v24 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v22 + 8 * v11) = v23;
      if ((v24 & 1) == 0)
      {
        v23 = sub_244500C94(0, v23[2] + 1, 1, v23);
        *(_QWORD *)(v22 + 8 * v11) = v23;
      }
      v26 = v23[2];
      v25 = v23[3];
      if (v26 >= v25 >> 1)
      {
        v23 = sub_244500C94((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
        *(_QWORD *)(v22 + 8 * v11) = v23;
      }
      v5 = v31;
      v23[2] = v26 + 1;
      v27 = &v23[5 * v26];
      v27[4] = v34;
      v27[5] = v6;
      *((_BYTE *)v27 + 48) = v30;
      v27[7] = v32;
      v27[8] = v8;
      swift_bridgeObjectRelease();
      sub_244510544(v32, v8);
      swift_bridgeObjectRelease();
      v4 = sub_244510024;
      v3 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        v28 = sub_244510024;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    result = sub_244533E88();
    __break(1u);
  }
  else
  {
    v28 = 0;
LABEL_22:
    sub_244510558((uint64_t)v28);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_244510530(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2444F538C(a1, a2);
  return a1;
}

uint64_t sub_244510544(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2444F53D0(a1, a2);
  return a1;
}

uint64_t sub_244510558(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_244510568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return a9();
}

uint64_t sub_244510588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_2445105A8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultActivityMonitor()
{
  return objc_opt_self();
}

uint64_t sub_2445105D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return sub_244510568(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2445105FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return sub_244510588(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for OutputStreamToStdErr()
{
  return &type metadata for OutputStreamToStdErr;
}

ValueMetadata *type metadata accessor for OutputStreamToStdOut()
{
  return &type metadata for OutputStreamToStdOut;
}

uint64_t sub_244510638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244510654(a1, a2, a3, a4, MEMORY[0x24BEE76D8]);
}

uint64_t sub_244510648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244510654(a1, a2, a3, a4, MEMORY[0x24BEE76E0]);
}

uint64_t sub_244510654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  FILE *v5;
  uint64_t v6;

  v5 = (FILE *)a5();
  v6 = sub_2445339B4();
  fputs((const char *)(v6 + 32), v5);
  return swift_release();
}

PoirotBlocks::BlockActivityType_optional __swiftcall BlockActivityType.init(rawValue:)(Swift::UInt rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x20100030303uLL >> (8 * rawValue);
  if (rawValue >= 6)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (PoirotBlocks::BlockActivityType_optional)rawValue;
}

uint64_t BlockActivityType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 3;
}

uint64_t sub_2445106D8()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

uint64_t sub_24451071C()
{
  return sub_244533EE8();
}

uint64_t sub_244510748()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

PoirotBlocks::BlockActivityType_optional sub_244510788(Swift::UInt *a1)
{
  return BlockActivityType.init(rawValue:)(*a1);
}

void sub_244510790(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 3;
}

PoirotBlocks::EngineActivityType_optional __swiftcall EngineActivityType.init(rawValue:)(Swift::UInt rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x30201040004uLL >> (8 * rawValue);
  if (rawValue >= 6)
    LOBYTE(v2) = 4;
  *v1 = v2;
  return (PoirotBlocks::EngineActivityType_optional)rawValue;
}

uint64_t EngineActivityType.rawValue.getter()
{
  char *v0;

  return qword_2445383A8[*v0];
}

unint64_t sub_2445107E0()
{
  unint64_t result;

  result = qword_2573690E8;
  if (!qword_2573690E8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockActivityType, &type metadata for BlockActivityType);
    atomic_store(result, (unint64_t *)&qword_2573690E8);
  }
  return result;
}

BOOL sub_244510824(char *a1, char *a2)
{
  return qword_2445383A8[*a1] == qword_2445383A8[*a2];
}

unint64_t sub_24451084C()
{
  unint64_t result;

  result = qword_2573690F0;
  if (!qword_2573690F0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for EngineActivityType, &type metadata for EngineActivityType);
    atomic_store(result, (unint64_t *)&qword_2573690F0);
  }
  return result;
}

uint64_t sub_244510890()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

uint64_t sub_2445108DC()
{
  return sub_244533EE8();
}

uint64_t sub_244510910()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

PoirotBlocks::EngineActivityType_optional sub_244510958(Swift::UInt *a1)
{
  return EngineActivityType.init(rawValue:)(*a1);
}

void sub_244510960(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_2445383A8[*v1];
}

uint64_t storeEnumTagSinglePayload for BlockActivityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2445109C4 + 4 * byte_2445381E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2445109F8 + 4 * byte_2445381E0[v4]))();
}

uint64_t sub_2445109F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244510A00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244510A08);
  return result;
}

uint64_t sub_244510A14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244510A1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244510A20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244510A28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockActivityType()
{
  return &type metadata for BlockActivityType;
}

uint64_t storeEnumTagSinglePayload for EngineActivityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244510A90 + 4 * byte_2445381EF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244510AC4 + 4 * byte_2445381EA[v4]))();
}

uint64_t sub_244510AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244510ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244510AD4);
  return result;
}

uint64_t sub_244510AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244510AE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244510AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244510AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngineActivityType()
{
  return &type metadata for EngineActivityType;
}

uint64_t dispatch thunk of ActivityMonitoring.measure<A>(blockActivity:recipeIdentifier:recipeVersion:blockType:blockName:blockID:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 8))(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ActivityMonitoring.measure<A>(engineActivity:recipeIdentifier:recipeVersion:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 16))(a1);
}

char *sub_244510B78(void (*a1)(_OWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(_OWORD *__return_ptr, char *);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v4 = v3;
  v41 = a2;
  v34 = a1;
  v6 = sub_2445335E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369128);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v30 = *(_QWORD *)(v7 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v27 = a3;
    swift_bridgeObjectRetain();
    v14 = (char *)MEMORY[0x24BEE4AF8];
    v15 = v28;
    v31 = v6;
    v32 = v7;
    while (1)
    {
      v33(v11, v13, v6);
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
      v29(v11, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
        break;
      v16 = v14;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v11, v6);
      v14 = v15;
      v17 = v4;
      v34(v39, v15);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
      if (*((_QWORD *)&v39[0] + 1))
      {
        v35 = v39[0];
        v36 = v39[1];
        v37 = v39[2];
        v38 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = (char *)sub_244501238(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        v19 = *((_QWORD *)v16 + 2);
        v18 = *((_QWORD *)v16 + 3);
        v20 = v16;
        if (v19 >= v18 >> 1)
          v20 = (char *)sub_244501238((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
        *((_QWORD *)v20 + 2) = v19 + 1;
        v14 = v20;
        v21 = &v20[56 * v19];
        v22 = v35;
        v23 = v36;
        v24 = v37;
        *((_QWORD *)v21 + 10) = v38;
        *((_OWORD *)v21 + 3) = v23;
        *((_OWORD *)v21 + 4) = v24;
        *((_OWORD *)v21 + 2) = v22;
        v4 = v17;
        v15 = v28;
      }
      else
      {
        sub_2444EC024((uint64_t)v39, &qword_257369130);
        v14 = v16;
      }
      v6 = v31;
      v7 = v32;
      v13 += v30;
      if (!--v12)
      {
        v29(v11, 1, 1, v31);
        break;
      }
    }
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v14 = (char *)MEMORY[0x24BEE4AF8];
    v25(v11, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_244510E88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v4 = sub_2445092EC(v3);
  v6 = v5;
  v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_2445092EC(v7) && v6 == v8)
    v10 = 0;
  else
    v10 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_244510F4C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v3 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v4 = sub_2445092EC(v3);
  v6 = v5;
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if (v4 == sub_2445092EC(v7) && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    v11 = 1;
  }
  else
  {
    v10 = sub_244533DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_244511020(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v4 = sub_2445092EC(v3);
  v6 = v5;
  v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_2445092EC(v7) && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    v11 = 1;
  }
  else
  {
    v10 = sub_244533DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_2445110F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v4 = sub_2445092EC(v3);
  v6 = v5;
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if (v4 == sub_2445092EC(v7) && v6 == v8)
    v10 = 0;
  else
    v10 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_2445111B8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_2445092EC(v1);
}

uint64_t sub_2445111F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v4 = sub_2445092EC(v3);
  v6 = v5;
  v7 = a2[3];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  if (v4 == sub_2445092EC(v7) && v6 == v8)
    v10 = 1;
  else
    v10 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t Dataset.dataFrame(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_2445112C0(a1, a2, *v3, a3);
}

uint64_t sub_2445112C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  int v31;
  int v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  _QWORD *v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t result;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;

  v84 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368078);
  v95 = *(_QWORD *)(v7 - 8);
  v96 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369138);
  v10 = MEMORY[0x24BDAC7A8](v93);
  v92 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t *)((char *)&v84 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v84 - v14;
  v15 = sub_2445335E8();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BEE4B08];
  v102 = MEMORY[0x24BEE4B08];
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v99 = 0;
    v94 = (_QWORD *)a3;
    v19 = (_OWORD *)(a3 + 40);
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v22 = *((_QWORD *)v19 - 1);
      v98 = *v19;
      v23 = v22 == a1 && (_QWORD)v98 == a2;
      if (v23 || (sub_244533DF8() & 1) != 0)
      {
        if (__OFADD__(v99++, 1))
          goto LABEL_71;
        swift_bridgeObjectRetain();
        v25 = *((_QWORD *)&v98 + 1);
        swift_bridgeObjectRetain_n();
        sub_2445123D8(v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_244500DB4(0, v20[2] + 1, 1, v20);
        v27 = v20[2];
        v26 = v20[3];
        if (v27 >= v26 >> 1)
          v20 = sub_244500DB4((_QWORD *)(v26 > 1), v27 + 1, 1, v20);
        v20[2] = v27 + 1;
        v21 = &v20[3 * v27];
        v21[4] = v22;
        *(_OWORD *)(v21 + 5) = v98;
      }
      v19 = (_OWORD *)((char *)v19 + 24);
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v17 = v102;
  }
  else
  {
    v99 = 0;
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v28 = *(_QWORD *)(v17 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  if (!v28)
    goto LABEL_27;
  v101 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2444F0E98(0, v28, 0);
  v29 = v101;
  v30 = sub_2445156F4(v17);
  v32 = v31;
  v34 = v33 & 1;
  *(_QWORD *)&v98 = v17 + 56;
  v94 = v20;
  do
  {
    if (v30 < 0 || v30 >= 1 << *(_BYTE *)(v17 + 32))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_72;
    }
    if (((*(_QWORD *)(v98 + (((unint64_t)v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      goto LABEL_63;
    if (*(_DWORD *)(v17 + 36) != v32)
      goto LABEL_64;
    v35 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v30);
    v36 = v35[1];
    *v9 = *v35;
    v9[1] = v36;
    swift_bridgeObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368B88);
    sub_2445335B8();
    v101 = v29;
    v38 = *(_QWORD *)(v29 + 16);
    v37 = *(_QWORD *)(v29 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_2444F0E98(v37 > 1, v38 + 1, 1);
      v29 = v101;
    }
    *(_QWORD *)(v29 + 16) = v38 + 1;
    sub_244516140((uint64_t)v9, v29+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v38, &qword_257368078);
    v39 = sub_244515794(v30, v32, v34 & 1, v17);
    v30 = v39;
    v32 = v40;
    v34 = v41 & 1;
    --v28;
    v20 = v94;
  }
  while (v28);
  sub_2445160D0(v39, v40, v41 & 1);
  swift_bridgeObjectRelease();
LABEL_27:
  if (*(_QWORD *)(v29 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368068);
    v42 = sub_244533CA8();
  }
  else
  {
    v42 = MEMORY[0x24BEE4B00];
  }
  v101 = v42;
  v43 = swift_bridgeObjectRetain();
  v44 = 0;
  sub_244514AAC(v43, 1, &v101, &qword_257368060, &qword_257368078, (void (*)(void))sub_2444F91AC, (void (*)(void))sub_2444EDE18);
  swift_bridgeObjectRelease();
  v45 = v20[2];
  if (v45)
  {
    swift_bridgeObjectRetain();
    v46 = v20 + 6;
    do
    {
      v47 = *(v46 - 2);
      v48 = *(v46 - 1);
      v49 = *v46;
      v46 += 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244515878(v17, v47, v48, v49, (uint64_t)&v101);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v50 = v101;
  v51 = *(_QWORD *)(v101 + 16);
  v52 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v51)
  {
    v100 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2444F0E6C(0, v51, 0);
    v54 = sub_2444F1CD4(v50);
    v55 = 0;
    v56 = (_QWORD *)(v50 + 64);
    v57 = *(_BYTE *)(v50 + 32);
    v85 = v50 + 80;
    v86 = v51;
    v94 = (_QWORD *)(v50 + 64);
    v95 = v50;
    v87 = v53;
    v58 = v90;
    while (1)
    {
      if (v54 < 0 || v54 >= 1 << v57)
        goto LABEL_65;
      v62 = (unint64_t)v54 >> 6;
      if ((v56[(unint64_t)v54 >> 6] & (1 << v54)) == 0)
        goto LABEL_66;
      if (*(_DWORD *)(v50 + 36) != (_DWORD)v53)
        goto LABEL_67;
      *(_QWORD *)&v98 = 1 << v54;
      v96 = v55;
      v99 = v44;
      v63 = v93;
      v64 = (char *)v58 + *(int *)(v93 + 48);
      v65 = *(_QWORD *)(v50 + 56);
      v66 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v54);
      v67 = *v66;
      v68 = v66[1];
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368060);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = v65 + *(_QWORD *)(v70 + 72) * v54;
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
      v72(v64, v71, v69);
      *v58 = v67;
      v58[1] = v68;
      v73 = (uint64_t)v91;
      *v91 = v67;
      *(_QWORD *)(v73 + 8) = v68;
      v72((char *)(v73 + *(int *)(v63 + 48)), (uint64_t)v64, v69);
      v74 = v92;
      sub_244516140(v73, v92, &qword_257369138);
      swift_bridgeObjectRetain_n();
      sub_2444EC024((uint64_t)v58, &qword_257369138);
      sub_2445335AC();
      sub_2444EC024(v74, &qword_257369138);
      v52 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0E6C(0, v52[2] + 1, 1);
        v52 = v100;
      }
      v76 = v52[2];
      v75 = v52[3];
      v44 = v99;
      v50 = v95;
      if (v76 >= v75 >> 1)
      {
        sub_2444F0E6C(v75 > 1, v76 + 1, 1);
        v52 = v100;
      }
      v52[2] = v76 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))((unint64_t)v52+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v76, v97, v89);
      v100 = v52;
      v57 = *(_BYTE *)(v50 + 32);
      v59 = 1 << v57;
      if (v54 >= 1 << v57)
        goto LABEL_68;
      v56 = v94;
      v77 = v94[v62];
      if ((v77 & (unint64_t)v98) == 0)
        goto LABEL_69;
      LODWORD(v53) = v87;
      if (*(_DWORD *)(v50 + 36) != (_DWORD)v87)
        goto LABEL_70;
      v78 = v77 & (-2 << (v54 & 0x3F));
      if (v78)
      {
        v59 = __clz(__rbit64(v78)) | v54 & 0xFFFFFFFFFFFFFFC0;
        v60 = v86;
      }
      else
      {
        v79 = v62 + 1;
        v80 = (v59 + 63) >> 6;
        v60 = v86;
        if (v62 + 1 < v80)
        {
          v81 = v94[v79];
          if (v81)
          {
            v61 = v96;
LABEL_58:
            v59 = __clz(__rbit64(v81)) + (v79 << 6);
          }
          else
          {
            v82 = v80 - 2;
            v61 = v96;
            while (v82 != v62)
            {
              v81 = *(_QWORD *)(v85 + 8 * v62++);
              if (v81)
              {
                v79 = v62 + 1;
                goto LABEL_58;
              }
            }
          }
          goto LABEL_38;
        }
      }
      v61 = v96;
LABEL_38:
      v55 = v61 + 1;
      v54 = v59;
      if (v55 == v60)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v100 = v52;
  swift_bridgeObjectRetain();
  sub_2445135F0(&v100);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257369100);
    sub_2445160DC();
    sub_244533564();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_72:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_244511B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  int v31;
  int v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  _QWORD *v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t result;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;

  v84 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FE0);
  v95 = *(_QWORD *)(v7 - 8);
  v96 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573690F8);
  v10 = MEMORY[0x24BDAC7A8](v93);
  v92 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t *)((char *)&v84 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v84 - v14;
  v15 = sub_2445335E8();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BEE4B08];
  v102 = MEMORY[0x24BEE4B08];
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v99 = 0;
    v94 = (_QWORD *)a3;
    v19 = (_OWORD *)(a3 + 40);
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v22 = *((_QWORD *)v19 - 1);
      v98 = *v19;
      v23 = v22 == a1 && (_QWORD)v98 == a2;
      if (v23 || (sub_244533DF8() & 1) != 0)
      {
        if (__OFADD__(v99++, 1))
          goto LABEL_71;
        swift_bridgeObjectRetain();
        v25 = *((_QWORD *)&v98 + 1);
        swift_bridgeObjectRetain_n();
        sub_2445123D8(v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_244500DB4(0, v20[2] + 1, 1, v20);
        v27 = v20[2];
        v26 = v20[3];
        if (v27 >= v26 >> 1)
          v20 = sub_244500DB4((_QWORD *)(v26 > 1), v27 + 1, 1, v20);
        v20[2] = v27 + 1;
        v21 = &v20[3 * v27];
        v21[4] = v22;
        *(_OWORD *)(v21 + 5) = v98;
      }
      v19 = (_OWORD *)((char *)v19 + 24);
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v17 = v102;
  }
  else
  {
    v99 = 0;
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v28 = *(_QWORD *)(v17 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  if (!v28)
    goto LABEL_27;
  v101 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2444F0EC4(0, v28, 0);
  v29 = v101;
  v30 = sub_2445156F4(v17);
  v32 = v31;
  v34 = v33 & 1;
  *(_QWORD *)&v98 = v17 + 56;
  v94 = v20;
  do
  {
    if (v30 < 0 || v30 >= 1 << *(_BYTE *)(v17 + 32))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_72;
    }
    if (((*(_QWORD *)(v98 + (((unint64_t)v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      goto LABEL_63;
    if (*(_DWORD *)(v17 + 36) != v32)
      goto LABEL_64;
    v35 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v30);
    v36 = v35[1];
    *v9 = *v35;
    v9[1] = v36;
    swift_bridgeObjectRetain_n();
    sub_2445335B8();
    v101 = v29;
    v38 = *(_QWORD *)(v29 + 16);
    v37 = *(_QWORD *)(v29 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_2444F0EC4(v37 > 1, v38 + 1, 1);
      v29 = v101;
    }
    *(_QWORD *)(v29 + 16) = v38 + 1;
    sub_244516140((uint64_t)v9, v29+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v38, &qword_257367FE0);
    v39 = sub_244515794(v30, v32, v34 & 1, v17);
    v30 = v39;
    v32 = v40;
    v34 = v41 & 1;
    --v28;
    v20 = v94;
  }
  while (v28);
  sub_2445160D0(v39, v40, v41 & 1);
  swift_bridgeObjectRelease();
LABEL_27:
  if (*(_QWORD *)(v29 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367FD0);
    v42 = sub_244533CA8();
  }
  else
  {
    v42 = MEMORY[0x24BEE4B00];
  }
  v101 = v42;
  v43 = swift_bridgeObjectRetain();
  v44 = 0;
  sub_244514AAC(v43, 1, &v101, &qword_257367FC8, &qword_257367FE0, (void (*)(void))sub_2444F91C0, (void (*)(void))sub_2444EDE2C);
  swift_bridgeObjectRelease();
  v45 = v20[2];
  if (v45)
  {
    swift_bridgeObjectRetain();
    v46 = v20 + 6;
    do
    {
      v47 = *(v46 - 2);
      v48 = *(v46 - 1);
      v49 = *v46;
      v46 += 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244515BCC(v17, v47, v48, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v50 = v101;
  v51 = *(_QWORD *)(v101 + 16);
  v52 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v51)
  {
    v100 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2444F0E6C(0, v51, 0);
    v54 = sub_2444F1CD4(v50);
    v55 = 0;
    v56 = (_QWORD *)(v50 + 64);
    v57 = *(_BYTE *)(v50 + 32);
    v85 = v50 + 80;
    v86 = v51;
    v94 = (_QWORD *)(v50 + 64);
    v95 = v50;
    v87 = v53;
    v58 = v90;
    while (1)
    {
      if (v54 < 0 || v54 >= 1 << v57)
        goto LABEL_65;
      v62 = (unint64_t)v54 >> 6;
      if ((v56[(unint64_t)v54 >> 6] & (1 << v54)) == 0)
        goto LABEL_66;
      if (*(_DWORD *)(v50 + 36) != (_DWORD)v53)
        goto LABEL_67;
      *(_QWORD *)&v98 = 1 << v54;
      v96 = v55;
      v99 = v44;
      v63 = v93;
      v64 = (char *)v58 + *(int *)(v93 + 48);
      v65 = *(_QWORD *)(v50 + 56);
      v66 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v54);
      v67 = *v66;
      v68 = v66[1];
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FC8);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = v65 + *(_QWORD *)(v70 + 72) * v54;
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
      v72(v64, v71, v69);
      *v58 = v67;
      v58[1] = v68;
      v73 = (uint64_t)v91;
      *v91 = v67;
      *(_QWORD *)(v73 + 8) = v68;
      v72((char *)(v73 + *(int *)(v63 + 48)), (uint64_t)v64, v69);
      v74 = v92;
      sub_244516140(v73, v92, &qword_2573690F8);
      swift_bridgeObjectRetain_n();
      sub_2444EC024((uint64_t)v58, &qword_2573690F8);
      sub_2445335AC();
      sub_2444EC024(v74, &qword_2573690F8);
      v52 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2444F0E6C(0, v52[2] + 1, 1);
        v52 = v100;
      }
      v76 = v52[2];
      v75 = v52[3];
      v44 = v99;
      v50 = v95;
      if (v76 >= v75 >> 1)
      {
        sub_2444F0E6C(v75 > 1, v76 + 1, 1);
        v52 = v100;
      }
      v52[2] = v76 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))((unint64_t)v52+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v76, v97, v89);
      v100 = v52;
      v57 = *(_BYTE *)(v50 + 32);
      v59 = 1 << v57;
      if (v54 >= 1 << v57)
        goto LABEL_68;
      v56 = v94;
      v77 = v94[v62];
      if ((v77 & (unint64_t)v98) == 0)
        goto LABEL_69;
      LODWORD(v53) = v87;
      if (*(_DWORD *)(v50 + 36) != (_DWORD)v87)
        goto LABEL_70;
      v78 = v77 & (-2 << (v54 & 0x3F));
      if (v78)
      {
        v59 = __clz(__rbit64(v78)) | v54 & 0xFFFFFFFFFFFFFFC0;
        v60 = v86;
      }
      else
      {
        v79 = v62 + 1;
        v80 = (v59 + 63) >> 6;
        v60 = v86;
        if (v62 + 1 < v80)
        {
          v81 = v94[v79];
          if (v81)
          {
            v61 = v96;
LABEL_58:
            v59 = __clz(__rbit64(v81)) + (v79 << 6);
          }
          else
          {
            v82 = v80 - 2;
            v61 = v96;
            while (v82 != v62)
            {
              v81 = *(_QWORD *)(v85 + 8 * v62++);
              if (v81)
              {
                v79 = v62 + 1;
                goto LABEL_58;
              }
            }
          }
          goto LABEL_38;
        }
      }
      v61 = v96;
LABEL_38:
      v55 = v61 + 1;
      v54 = v59;
      if (v55 == v60)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v100 = v52;
  swift_bridgeObjectRetain();
  sub_2445135F0(&v100);
  if (!v44)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257369100);
    sub_2445160DC();
    sub_244533564();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_72:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2445123D8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_244512B74(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t (*sub_244512544(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_244514F74(v6, a2, a3);
  return sub_2445125B0;
}

uint64_t (*sub_2445125B4(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_244515008(v6, a2, a3);
  return sub_2445125B0;
}

void sub_244512620(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t Dataset.append(_:withName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = sub_244533540();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24453354C();
  v15 = a2;
  v16 = a3;
  v17 = a1;
  v11 = sub_244507028((void (*)(uint64_t *__return_ptr, char *, _QWORD *))sub_244512870, (uint64_t)v14);
  if (v3)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  v13 = v11;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  return sub_2444FF34C(v13);
}

uint64_t sub_244512744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v11 = sub_244533570();
  v17[2] = a1;
  v12 = sub_244510B78((void (*)(_OWORD *__return_ptr, char *))sub_244516128, (uint64_t)v17, v11);
  result = swift_bridgeObjectRelease();
  if (v5)
  {
    *a4 = v5;
  }
  else
  {
    if (*((_QWORD *)v12 + 2))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367F90);
      v14 = sub_244533CA8();
    }
    else
    {
      v14 = MEMORY[0x24BEE4B00];
    }
    v18 = v14;
    v15 = swift_bridgeObjectRetain();
    sub_244532754(v15, 1, &v18);
    swift_bridgeObjectRelease();
    v16 = v18;
    *a5 = a2;
    a5[1] = a3;
    a5[2] = v16;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_244512870@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_244512744(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_244512890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];
  uint64_t v11;
  _BYTE v12[32];
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];

  sub_2445335DC();
  sub_244533534();
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_2444F2854(&v13, v15);
    sub_2444F2818((uint64_t)v15, (uint64_t)v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368B88);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2444E8B00(v10, (uint64_t)&v13);
      v2 = sub_2445335DC();
      v4 = v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *(_QWORD *)a1 = v2;
      *(_QWORD *)(a1 + 8) = v4;
      return sub_2444E8B00(&v13, a1 + 16);
    }
    else
    {
      v11 = 0;
      memset(v10, 0, sizeof(v10));
      sub_2444EC024((uint64_t)v10, &qword_257367FB0);
      sub_2445335DC();
      sub_244533534();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368468);
      v6 = sub_24453399C();
      v8 = v7;
      sub_2444E8BE0();
      swift_allocError();
      *(_QWORD *)v9 = v6;
      *(_QWORD *)(v9 + 8) = v8;
      *(_BYTE *)(v9 + 16) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    result = sub_2444EC024((uint64_t)&v13, &qword_257368468);
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t Dataset.appendReplacing(_:withName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v3;
  v21 = sub_244533540();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_244515F30(v12, a2, a3);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *v5 = v13;
  sub_24453354C();
  v18 = a2;
  v19 = a3;
  v20 = a1;
  v14 = sub_244507028((void (*)(uint64_t *__return_ptr, char *, _QWORD *))sub_2445161F0, (uint64_t)v17);
  if (v4)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v21);
  v16 = v14;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v21);
  return sub_2444FF34C(v16);
}

uint64_t sub_244512B74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_244533EDC();
  swift_bridgeObjectRetain();
  sub_2445339CC();
  v8 = sub_244533EF4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_244533DF8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_244533DF8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_244512FFC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_244512D20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369110);
  v3 = sub_244533B94();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_244533EDC();
      sub_2445339CC();
      result = sub_244533EF4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_244512FFC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_244512D20();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_244513194();
      goto LABEL_22;
    }
    sub_244513344();
  }
  v11 = *v4;
  sub_244533EDC();
  sub_2445339CC();
  result = sub_244533EF4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_244533DF8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_244533E7C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_244533DF8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_244513194()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369110);
  v2 = *v0;
  v3 = sub_244533B88();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_244513344()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369110);
  v3 = sub_244533B94();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_244533EDC();
    swift_bridgeObjectRetain();
    sub_2445339CC();
    result = sub_244533EF4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2445135F0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_2445335E8() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2444F1C6C(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_244513670(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_244513670(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_2445335E8();
  v159 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v155 = (char *)&v138 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v154 = (char *)&v138 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v142 = (char *)&v138 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v149 = (char *)&v138 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v144 = (char *)&v138 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  result = sub_244533DB0();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      return sub_244514208(0, v20, 1, v158);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = result;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x24BEE4AF8];
    v26 = MEMORY[0x24BEE4AF8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x24BEE4AF8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_2445144D0(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_2444F0D1C((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_244533A74();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x24BEE4AF8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_2445335DC();
    v37 = v36;
    if (v35 == sub_2445335DC() && v37 == v38)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_244533DF8();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_2445335DC();
        v48 = v47;
        if (v46 == sub_2445335DC() && v48 == v49)
          v50 = 0;
        else
          v50 = sub_244533DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_2444F0998(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_2444F0998((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_2445144D0(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_2445335DC();
          v72 = v71;
          if (v70 == sub_2445335DC() && v72 == v73)
            break;
          v74 = sub_244533DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_244533C78();
  __break(1u);
  return result;
}

uint64_t sub_244514208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_2445335E8();
  v38 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v29 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      v32(v39, v41 + v16 + *v37, v6);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_2445335DC();
      v22 = v21;
      if (v20 == sub_2445335DC() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v24 = sub_244533DF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      result = ((uint64_t (*)(char *, uint64_t))v25)(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = v26 + v34 + v16;
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2445144D0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_2445335E8();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v54 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v54 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_2445335DC();
          v45 = v44;
          if (v43 == sub_2445335DC() && v45 == v46)
            v47 = 0;
          else
            v47 = sub_244533DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_2444F0BF8(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v15, a4, v8);
        v27 = sub_2445335DC();
        v29 = v28;
        if (v27 == sub_2445335DC() && v29 == v30)
          break;
        v32 = sub_244533DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v15, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v15, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

void sub_244514AAC(uint64_t a1, int a2, _QWORD *a3, uint64_t *a4, uint64_t *a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  _QWORD *v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  char v33;
  unint64_t v34;
  char v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  char v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;

  v71 = a7;
  LODWORD(v72) = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t *)((char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v67 = v7;
  v68 = v21;
  v22 = (char *)v20 + *(int *)(v17 + 48);
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v65 = a6;
  v66 = v23;
  v24 = a1 + v23;
  v75 = *(_QWORD *)(v18 + 72);
  v70 = a1;
  swift_bridgeObjectRetain();
  v74 = a5;
  sub_2444F9FF0(v24, (uint64_t)v20, a5);
  v25 = v20[1];
  v80 = *v20;
  v26 = v80;
  v81 = v25;
  v69 = v13;
  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v76 = v15;
  v77 = v12;
  v73 = v22;
  v27(v15, v22, v12);
  v28 = (_QWORD *)*a3;
  v30 = sub_2444EB9F0(v26, v25);
  v31 = v28[2];
  v32 = (v29 & 1) == 0;
  if (__OFADD__(v31, v32))
    goto LABEL_23;
  v33 = v29;
  if (v28[3] >= v31 + v32)
  {
    if ((v72 & 1) != 0)
    {
      if ((v29 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      v65();
      if ((v33 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v38 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v39 = (uint64_t *)(v38[6] + 16 * v30);
    *v39 = v26;
    v39[1] = v25;
    v40 = v38[7];
    v72 = *(_QWORD *)(v69 + 72);
    v41 = (char *)(v40 + v72 * v30);
    v42 = v76;
    v43 = v77;
    v27(v41, v76, v77);
    v44 = v38[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v38[2] = v46;
    v47 = v68 - 1;
    if (v68 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v48 = v70 + v75 + v66;
    while (1)
    {
      sub_2444F9FF0(v48, (uint64_t)v20, v74);
      v49 = v42;
      v51 = v20[1];
      v80 = *v20;
      v50 = v80;
      v81 = v51;
      v27(v49, v73, v43);
      v52 = (_QWORD *)*a3;
      v53 = sub_2444EB9F0(v50, v51);
      v55 = v52[2];
      v56 = (v54 & 1) == 0;
      v45 = __OFADD__(v55, v56);
      v57 = v55 + v56;
      if (v45)
        break;
      v58 = v54;
      if (v52[3] < v57)
      {
        ((void (*)(uint64_t, uint64_t))v71)(v57, 1);
        v53 = sub_2444EB9F0(v50, v51);
        if ((v58 & 1) != (v59 & 1))
          goto LABEL_25;
      }
      if ((v58 & 1) != 0)
        goto LABEL_10;
      v60 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v53 >> 6) + 64) |= 1 << v53;
      v61 = (uint64_t *)(v60[6] + 16 * v53);
      *v61 = v50;
      v61[1] = v51;
      v42 = v76;
      v43 = v77;
      v27((char *)(v60[7] + v72 * v53), v76, v77);
      v62 = v60[2];
      v45 = __OFADD__(v62, 1);
      v63 = v62 + 1;
      if (v45)
        goto LABEL_24;
      v60[2] = v63;
      v48 += v75;
      if (!--v47)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v71();
  v34 = sub_2444EB9F0(v26, v25);
  if ((v33 & 1) == (v35 & 1))
  {
    v30 = v34;
    if ((v33 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v36 = (void *)swift_allocError();
    swift_willThrow();
    v82 = v36;
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v77);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_244533E88();
  __break(1u);
LABEL_26:
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_2445339D8();
  sub_244533C84();
  __break(1u);
}

uint64_t (*sub_244514F74(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2445154EC(v6);
  v6[10] = sub_2445150E8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_244515004;
}

uint64_t (*sub_244515008(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_24451550C(v6);
  v6[10] = sub_2445152B0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_244515004;
}

void sub_244515098(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_2445150E8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369140);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_2444EB9F0(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368060);
        v23 = *(_QWORD *)(v22 - 8);
        (*(void (**)(void *, unint64_t, uint64_t))(v23 + 32))(v12, v21 + *(_QWORD *)(v23 + 72) * v15, v22);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_24451528C;
      }
LABEL_11:
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368060);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2444F91AC();
      goto LABEL_7;
    }
    sub_2444EDE18(v18, a4 & 1);
    v25 = sub_2444EB9F0(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_244533E88();
  __break(1u);
  return result;
}

void sub_24451528C(uint64_t **a1, uint64_t a2)
{
  sub_244515478(a1, a2, &qword_257369140, &qword_257368060, (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_2444F83C8, (uint64_t (*)(uint64_t, _QWORD))sub_2444F7278);
}

void (*sub_2445152B0(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369120);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_2444EB9F0(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FC8);
        v23 = *(_QWORD *)(v22 - 8);
        (*(void (**)(void *, unint64_t, uint64_t))(v23 + 32))(v12, v21 + *(_QWORD *)(v23 + 72) * v15, v22);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_244515454;
      }
LABEL_11:
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FC8);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2444F91C0();
      goto LABEL_7;
    }
    sub_2444EDE2C(v18, a4 & 1);
    v25 = sub_2444EB9F0(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_244533E88();
  __break(1u);
  return result;
}

void sub_244515454(uint64_t **a1, uint64_t a2)
{
  sub_244515478(a1, a2, &qword_257369120, &qword_257367FC8, (void (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_2444F83D4, (uint64_t (*)(uint64_t, _QWORD))sub_2444F7284);
}

void sub_244515478(uint64_t **a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t, uint64_t, uint64_t, char *, uint64_t), uint64_t (*a6)(uint64_t, _QWORD))
{
  uint64_t *v7;
  void *v8;

  v7 = *a1;
  v8 = (void *)(*a1)[3];
  sub_244515538((uint64_t)v8, *((_BYTE *)*a1 + 40), (_QWORD *)(*a1)[2], (*a1)[4], **a1, (*a1)[1], a3, a4, a5, a6);
  sub_2444EC024((uint64_t)v8, a3);
  free(v8);
  free(v7);
}

uint64_t (*sub_2445154EC(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_244516204;
}

uint64_t (*sub_24451550C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24451552C;
}

uint64_t sub_24451552C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_244515538(uint64_t a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, void (*a9)(uint64_t, uint64_t, uint64_t, char *, uint64_t), uint64_t (*a10)(uint64_t, _QWORD))
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a7);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a8);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v29 - v24;
  sub_2444F9FF0(a1, (uint64_t)v18, a7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    result = sub_2444EC024((uint64_t)v18, a7);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      return a10(a4, *a3);
    }
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v27(v25, v18, v19);
    v28 = *a3;
    if ((a2 & 1) != 0)
    {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v20 + 72) * a4, v25, v19);
    }
    else
    {
      v27(v23, v25, v19);
      a9(a4, v29, v30, v23, v28);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_2445156F4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_244515794(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_244515878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v37 = a5;
  v30 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v31 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (v9)
    goto LABEL_6;
LABEL_7:
  v14 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v14 < v31)
    {
      v15 = *(_QWORD *)(v30 + 8 * v14);
      ++v11;
      if (v15)
        goto LABEL_22;
      v11 = v14 + 1;
      if (v14 + 1 >= v31)
        return swift_release();
      v15 = *(_QWORD *)(v30 + 8 * v11);
      if (v15)
        goto LABEL_22;
      v11 = v14 + 2;
      if (v14 + 2 >= v31)
        return swift_release();
      v15 = *(_QWORD *)(v30 + 8 * v11);
      if (v15)
        goto LABEL_22;
      v11 = v14 + 3;
      if (v14 + 3 >= v31)
        return swift_release();
      v15 = *(_QWORD *)(v30 + 8 * v11);
      if (v15)
      {
LABEL_22:
        v9 = (v15 - 1) & v15;
        for (i = __clz(__rbit64(v15)) + (v11 << 6); ; i = v12 | (v11 << 6))
        {
          v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v19 = *v17;
          v18 = v17[1];
          if (*(_QWORD *)(a4 + 16))
          {
            swift_bridgeObjectRetain_n();
            v20 = sub_2444EB9F0(v19, v18);
            if ((v21 & 1) != 0)
            {
              sub_2444E8B18(*(_QWORD *)(a4 + 56) + 40 * v20, (uint64_t)&v32);
            }
            else
            {
              v34 = 0;
              v32 = 0u;
              v33 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v33 + 1))
            {
              sub_2444E8B00(&v32, (uint64_t)v35);
              swift_bridgeObjectRetain();
              v22 = sub_244512544(&v32, v19, v18);
              v24 = v23;
              v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368060);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))sub_2445335C4();
              ((void (*)(__int128 *, _QWORD))v22)(&v32, 0);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
              result = swift_bridgeObjectRelease();
              if (!v9)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else
          {
            v34 = 0;
            v32 = 0u;
            v33 = 0u;
            swift_bridgeObjectRetain();
          }
          sub_2444EC024((uint64_t)&v32, &qword_257367FB0);
          swift_bridgeObjectRetain();
          v26 = sub_244512544(&v32, v19, v18);
          v28 = v27;
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368060);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
          {
            v36 = 0;
            memset(v35, 0, sizeof(v35));
            sub_2445335D0();
            sub_2444EC024((uint64_t)v35, &qword_257367FB0);
          }
          ((void (*)(__int128 *, _QWORD))v26)(&v32, 0);
          result = swift_bridgeObjectRelease_n();
          if (!v9)
            goto LABEL_7;
LABEL_6:
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
      }
      v16 = v14 + 4;
      if (v16 < v31)
      {
        v15 = *(_QWORD *)(v30 + 8 * v16);
        if (v15)
        {
          v11 = v16;
          goto LABEL_22;
        }
        while (1)
        {
          v11 = v16 + 1;
          if (__OFADD__(v16, 1))
            goto LABEL_37;
          if (v11 >= v31)
            return swift_release();
          v15 = *(_QWORD *)(v30 + 8 * v11);
          ++v16;
          if (v15)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_244515BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t (*v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;
  int64_t v36;

  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v36 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (v8)
    goto LABEL_6;
LABEL_7:
  v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v36)
    {
      v14 = *(_QWORD *)(v29 + 8 * v13);
      ++v10;
      if (v14)
        goto LABEL_22;
      v10 = v13 + 1;
      if (v13 + 1 >= v36)
        return swift_release();
      v14 = *(_QWORD *)(v29 + 8 * v10);
      if (v14)
        goto LABEL_22;
      v10 = v13 + 2;
      if (v13 + 2 >= v36)
        return swift_release();
      v14 = *(_QWORD *)(v29 + 8 * v10);
      if (v14)
        goto LABEL_22;
      v10 = v13 + 3;
      if (v13 + 3 >= v36)
        return swift_release();
      v14 = *(_QWORD *)(v29 + 8 * v10);
      if (v14)
      {
LABEL_22:
        v8 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v10 << 6); ; i = v11 | (v10 << 6))
        {
          v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v17 = *v16;
          v18 = v16[1];
          if (*(_QWORD *)(a4 + 16))
          {
            swift_bridgeObjectRetain_n();
            v19 = sub_2444EB9F0(v17, v18);
            if ((v20 & 1) != 0)
            {
              sub_2444E8B18(*(_QWORD *)(a4 + 56) + 40 * v19, (uint64_t)&v31);
            }
            else
            {
              v33 = 0;
              v31 = 0u;
              v32 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v32 + 1))
            {
              sub_2444E8B00(&v31, (uint64_t)v34);
              swift_bridgeObjectRetain();
              v21 = sub_2445125B4(v30, v17, v18);
              v23 = v22;
              v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FC8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
              {
                sub_2444E8B18((uint64_t)v34, (uint64_t)&v31);
                sub_2445335C4();
                sub_244503C38((uint64_t)&v31);
              }
              ((void (*)(_QWORD *, _QWORD))v21)(v30, 0);
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
              result = swift_bridgeObjectRelease();
              if (!v8)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else
          {
            v33 = 0;
            v31 = 0u;
            v32 = 0u;
            swift_bridgeObjectRetain();
          }
          sub_2444EC024((uint64_t)&v31, &qword_257367FB0);
          swift_bridgeObjectRetain();
          v25 = sub_2445125B4(&v31, v17, v18);
          v27 = v26;
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367FC8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
          {
            v35 = 0;
            memset(v34, 0, sizeof(v34));
            sub_2445335D0();
            sub_2444EC024((uint64_t)v34, &qword_257369118);
          }
          ((void (*)(__int128 *, _QWORD))v25)(&v31, 0);
          result = swift_bridgeObjectRelease_n();
          if (!v8)
            goto LABEL_7;
LABEL_6:
          v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      v15 = v13 + 4;
      if (v15 < v36)
      {
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (v14)
        {
          v10 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          v10 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_37;
          if (v10 >= v36)
            return swift_release();
          v14 = *(_QWORD *)(v29 + 8 * v10);
          ++v15;
          if (v14)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_244515F30(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v6 = 0;
  v7 = result + 48;
  v8 = -(uint64_t)v3;
  v9 = MEMORY[0x24BEE4AF8];
  v21 = *(_QWORD *)(result + 16);
  do
  {
    v23 = v9;
    if (v6 <= v3)
      v10 = v3;
    else
      v10 = v6;
    v11 = -(uint64_t)v10;
    for (i = (uint64_t *)(v7 + 24 * v6++); ; i += 3)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      v13 = *(i - 2);
      v14 = *(i - 1);
      if (v13 != a2 || v14 != a3)
      {
        v16 = *i;
        result = sub_244533DF8();
        if ((result & 1) == 0)
          break;
      }
      ++v6;
      if (v8 + v6 == 1)
        return v23;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = v23;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_2444F0D4C(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v9 = v23;
    }
    v7 = v22;
    v18 = *(_QWORD *)(v9 + 16);
    v17 = *(_QWORD *)(v9 + 24);
    v19 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      result = sub_2444F0D4C(v17 > 1, v18 + 1, 1);
      v19 = v18 + 1;
      v7 = v22;
      v9 = v23;
    }
    *(_QWORD *)(v9 + 16) = v19;
    v20 = (_QWORD *)(v9 + 24 * v18);
    v20[4] = v13;
    v20[5] = v14;
    v20[6] = v16;
    v3 = v21;
  }
  while (v8 + v6);
  return v9;
}

uint64_t sub_2445160D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2445160DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257369108;
  if (!qword_257369108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257369100);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257369108);
  }
  return result;
}

uint64_t sub_244516128@<X0>(uint64_t a1@<X8>)
{
  return sub_244512890(a1);
}

uint64_t sub_244516140(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for LogEntryCell(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

ValueMetadata *type metadata accessor for LogEntryCell()
{
  return &type metadata for LogEntryCell;
}

unint64_t sub_2445161AC()
{
  unint64_t result;

  result = qword_257369148;
  if (!qword_257369148)
  {
    result = MEMORY[0x2495115A0](&unk_244538408, &type metadata for LogEntryCell);
    atomic_store(result, (unint64_t *)&qword_257369148);
  }
  return result;
}

uint64_t sub_2445161F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_244512870(a1, a2, a3);
}

uint64_t destroy for BlockConfig(uint64_t a1)
{
  int v2;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 88);
  while (2)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 2:
      case 3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      case 5:
LABEL_6:
        swift_bridgeObjectRelease();
LABEL_7:
        result = swift_bridgeObjectRelease();
        break;
      case 6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 56))
          result = __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        break;
      default:
        v2 = *(_DWORD *)a1 + 7;
        continue;
    }
    return result;
  }
}

uint64_t initializeWithCopy for BlockConfig(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v4 = *(unsigned __int8 *)(a2 + 88);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v5;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        v6 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v6;
        *(_BYTE *)(a1 + 88) = 0;
        goto LABEL_11;
      case 1:
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v8 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = v8;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        v9 = 1;
        goto LABEL_10;
      case 2:
        v10 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v10;
        v11 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v12 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v12;
        v13 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v13;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        v14 = 2;
        goto LABEL_8;
      case 3:
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v15;
        v16 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v17 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v17;
        v18 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v18;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        v14 = 3;
LABEL_8:
        *(_BYTE *)(a1 + 88) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4:
        v19 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v19;
        v20 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v20;
        v9 = 4;
LABEL_10:
        *(_BYTE *)(a1 + 88) = v9;
LABEL_11:
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5:
        v21 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v21;
        v22 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v22;
        *(_BYTE *)(a1 + 88) = 5;
LABEL_13:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6:
        v24 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v24;
        v25 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v25;
        v26 = (_OWORD *)(a2 + 32);
        v27 = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27)
        {
          v28 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v27;
          *(_QWORD *)(a1 + 64) = v28;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 32, a2 + 32, v27);
        }
        else
        {
          v29 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *v26;
          *(_OWORD *)(a1 + 48) = v29;
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        }
        *(_BYTE *)(a1 + 88) = 6;
        break;
      default:
        v4 = *(_DWORD *)a2 + 7;
        continue;
    }
    return a1;
  }
}

uint64_t assignWithCopy for BlockConfig(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  char v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 4:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 2:
        case 3:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 5:
LABEL_7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56))
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          break;
        default:
          v4 = *(_DWORD *)a1 + 7;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 88);
    while (2)
    {
      switch(v5)
      {
        case 0:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_BYTE *)(a1 + 88) = 0;
          goto LABEL_20;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          v6 = 1;
          goto LABEL_19;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          v7 = 2;
          goto LABEL_17;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          v7 = 3;
LABEL_17:
          *(_BYTE *)(a1 + 88) = v7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_22;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          v6 = 4;
LABEL_19:
          *(_BYTE *)(a1 + 88) = v6;
LABEL_20:
          swift_bridgeObjectRetain();
          goto LABEL_22;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + 88) = 5;
LABEL_22:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 6:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          v9 = *(_QWORD *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v9)
          {
            *(_QWORD *)(a1 + 56) = v9;
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 32, a2 + 32, v9);
          }
          else
          {
            v10 = *(_OWORD *)(a2 + 32);
            v11 = *(_OWORD *)(a2 + 48);
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 32) = v10;
            *(_OWORD *)(a1 + 48) = v11;
          }
          *(_BYTE *)(a1 + 88) = 6;
          break;
        default:
          v5 = *(_DWORD *)a2 + 7;
          continue;
      }
      break;
    }
  }
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BlockConfig(uint64_t a1, __int128 *a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 4:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 2:
        case 3:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 5:
LABEL_7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56))
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          break;
        default:
          v4 = *(_DWORD *)a1 + 7;
          continue;
      }
      break;
    }
    v5 = *((unsigned __int8 *)a2 + 88);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          v7 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_OWORD *)(a1 + 32) = a2[2];
          break;
        case 1:
          v8 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v8;
          *(_OWORD *)(a1 + 32) = a2[2];
          v6 = 1;
          break;
        case 2:
          v9 = a2[3];
          *(_OWORD *)(a1 + 32) = a2[2];
          *(_OWORD *)(a1 + 48) = v9;
          *(_OWORD *)(a1 + 64) = a2[4];
          *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
          v10 = *a2;
          v11 = a2[1];
          v6 = 2;
          goto LABEL_18;
        case 3:
          v12 = a2[3];
          *(_OWORD *)(a1 + 32) = a2[2];
          *(_OWORD *)(a1 + 48) = v12;
          *(_OWORD *)(a1 + 64) = a2[4];
          *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
          v10 = *a2;
          v11 = a2[1];
          v6 = 3;
LABEL_18:
          *(_OWORD *)a1 = v10;
          *(_OWORD *)(a1 + 16) = v11;
          break;
        case 4:
          v13 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v13;
          v6 = 4;
          break;
        case 5:
          v14 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v14;
          v6 = 5;
          break;
        case 6:
          v15 = a2[3];
          *(_OWORD *)(a1 + 32) = a2[2];
          *(_OWORD *)(a1 + 48) = v15;
          *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
          v16 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v16;
          v6 = 6;
          break;
        default:
          v5 = *(_DWORD *)a2 + 7;
          continue;
      }
      break;
    }
    *(_BYTE *)(a1 + 88) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockConfig(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 >= 7)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BlockConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 73) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 89) = 0;
    if (a2)
      *(_BYTE *)(result + 88) = -(char)a2;
  }
  return result;
}

uint64_t sub_244516B5C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 88);
  if (result >= 7)
    return (*(_DWORD *)a1 + 7);
  return result;
}

uint64_t sub_244516B78(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 6)
  {
    v2 = a2 - 7;
    *(_QWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 7;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 88) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BlockConfig()
{
  return &type metadata for BlockConfig;
}

void sub_244516BB8()
{
  uint64_t v0;
  _BYTE v1[96];

  sub_2444FE960(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_244516BF8()
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_244516CC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369150);
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445184A4();
  sub_244533F18();
  if (!v1)
  {
    sub_2445184E8();
    sub_244533D2C();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_244516E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2444E8B18(v2, v0 + 8);
  v7 = sub_2444FB9EC((_QWORD *)(v0 + 8));
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  }
  else
  {
    v11 = v7;
    v12 = v8;
    v13 = v1;
    v14 = v4;
    v15 = v9;
    v16 = v10;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v14);
    *(_QWORD *)(v0 + 48) = v11;
    *(_QWORD *)(v0 + 56) = v12;
    *(_QWORD *)(v0 + 64) = v15;
    *(_QWORD *)(v0 + 72) = v16;
    *(_BYTE *)(v0 + 136) = 5;
    sub_2444FE99C(v0 + 48, v0 + 144);
    sub_2444FE99C(v0 + 144, v5);
  }
  JUMPOUT(0x244516DCCLL);
}

void sub_2445170C4(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[688];
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369168);
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2445184A4();
  sub_244533F3C();
  sub_2444FE960(v1, (uint64_t)v3);
  __asm { BR              X10 }
}

uint64_t sub_244517198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 112) = v6;
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 32) = 1;
  *(_BYTE *)(v0 + 31) = 0;
  sub_2444FC168();
  sub_244533D98();
  if (v4)
  {
    *(_OWORD *)(v1 + 576) = *(_OWORD *)(v1 + 96);
    sub_2444FEA8C(v5 - 192);
    *(_QWORD *)(v1 + 600) = *(_QWORD *)(v1 + 112);
    sub_2444FEAB4(v5 - 168);
    sub_244519380(v0 + 240, v5 - 160);
    v7 = v5 - 160;
  }
  else
  {
    sub_24451BB48(v3);
    *(_OWORD *)(v1 + 528) = *(_OWORD *)(v1 + 96);
    sub_2444FEA8C(v5 - 240);
    *(_QWORD *)(v1 + 552) = *(_QWORD *)(v1 + 112);
    sub_2444FEAB4(v5 - 216);
    sub_244519380(v0 + 240, v5 - 208);
    v7 = v5 - 208;
  }
  sub_2444FEA8C(v7);
  v8 = *(_QWORD *)(v5 - 72);
  v9 = v3[3];
  v10 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v9);
  sub_244506D18(0, 0, v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 16) + 8))(v2, v8);
}

uint64_t sub_244517680(char *a1, char *a2)
{
  return sub_24451AF04(*a1, *a2);
}

uint64_t sub_24451768C()
{
  sub_244533EDC();
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

uint64_t sub_244517708()
{
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244517760()
{
  sub_244533EDC();
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

uint64_t sub_2445177D8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_244533CCC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_244517834(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701869940;
  if (*v1)
    v2 = 0x666E6F4372657375;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEA00000000006769;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_244517870()
{
  _BYTE *v0;

  if (*v0)
    return 0x666E6F4372657375;
  else
    return 1701869940;
}

uint64_t sub_2445178A8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_244533CCC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_244517908()
{
  sub_2445184A4();
  return sub_244533F48();
}

uint64_t sub_244517930()
{
  sub_2445184A4();
  return sub_244533F54();
}

void sub_244517958()
{
  uint64_t v0;
  _BYTE v1[96];

  sub_2444FE960(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_244517994()
{
  _BYTE *v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2444F40DC((uint64_t)&v2);
  *v0 = 1;
  return result;
}

void sub_244517A28()
{
  uint64_t v0;
  _BYTE v1[96];

  sub_2444FE960(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_244517A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

void sub_244517BC4()
{
  uint64_t v0;
  _BYTE v1[96];

  sub_2444FE960(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_244517BFC()
{
  uint64_t v1;

  sub_2444F40DC((uint64_t)&v1);
  return 0;
}

uint64_t sub_244517C70(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, void (*)(_QWORD *@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v5 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 72);
  ObjectType = swift_getObjectType();
  v24 = 0;
  v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = *(_QWORD *)(*v6 + 136);
  v17 = *(_QWORD *)(*v6 + 128);
  v8 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 144);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_244517958();
  sub_244516BB8();
  v10 = v9;
  v12 = v11;
  v20 = v2;
  v21 = a1;
  v22 = a2;
  v13 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, void (*)(_QWORD *@<X8>), _BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 8);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368448);
  v13(&v25, &v24, v17, v7, v8, &v23, v10, v12, a2, sub_244519408, v19, v14, ObjectType, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v18)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

void sub_244517DCC(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  sub_244517958();
  sub_244517E48(a2, a1);
  if (!v3)
    *a3 = v7;
}

void sub_244517E48(_QWORD *a1, uint64_t a2)
{
  _BYTE v3[352];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444FE960(a2, (uint64_t)v3);
  __asm { BR              X10 }
}

uint64_t sub_244517EBC()
{
  _OWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[176];
  __int128 v12;

  v6 = v0[6];
  v0[11] = v0[5];
  v0[12] = v6;
  v0[13] = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368028);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2445369D0;
  sub_2444E8B18(v4, (uint64_t)v11);
  v8 = type metadata accessor for AggregationBlock();
  swift_allocObject();
  swift_retain();
  v9 = sub_24450458C((uint64_t)v11, 0, v1, &v12);
  if (v3)
  {
    *(_QWORD *)(v7 + 16) = 0;
    swift_release();
    result = swift_release();
    *v2 = v3;
  }
  else
  {
    *(_QWORD *)(v7 + 56) = v8;
    *(_QWORD *)(v7 + 64) = &off_251528188;
    *(_QWORD *)(v7 + 32) = v9;
    result = swift_release();
    *v5 = v7;
  }
  return result;
}

uint64_t sub_244518478(_QWORD *a1)
{
  return sub_244516CC0(a1);
}

void sub_24451848C(_QWORD *a1)
{
  sub_2445170C4(a1);
}

unint64_t sub_2445184A4()
{
  unint64_t result;

  result = qword_257369158;
  if (!qword_257369158)
  {
    result = MEMORY[0x2495115A0](&unk_24453869C, &type metadata for BlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369158);
  }
  return result;
}

unint64_t sub_2445184E8()
{
  unint64_t result;

  result = qword_257369160;
  if (!qword_257369160)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockType, &type metadata for BlockType);
    atomic_store(result, (unint64_t *)&qword_257369160);
  }
  return result;
}

uint64_t sub_24451852C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    return sub_244517C70(a3, v3);
  }
  result = sub_244533C78();
  __break(1u);
  return result;
}

void sub_2445185B0(uint64_t a1, uint64_t a2)
{
  _BYTE v3[96];
  uint64_t v4;

  sub_2444FE960(a1, (uint64_t)v3);
  sub_2444FE960(a2, (uint64_t)&v4);
  __asm { BR              X10 }
}

uint64_t sub_24451860C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v10;
  _QWORD v11[3];
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[15];
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_2444FE960((uint64_t)v15, (uint64_t)v11);
  v0 = v11[2];
  v1 = v14;
  if (!v19)
  {
    v2 = v12;
    v3 = v13;
    v4 = v15[14];
    v5 = v16;
    v7 = v17;
    v6 = v18;
    if ((v11[0] == v15[12] && v11[1] == v15[13] || (sub_244533DF8() & 1) != 0)
      && (sub_24450013C(v0, v4) & 1) != 0
      && v2 == v5)
    {
      if (v1)
      {
        if (!v6)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          sub_2444F40DC((uint64_t)v15);
          goto LABEL_19;
        }
        if (v3 == v7 && v1 == v6)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = sub_244533DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
            goto LABEL_18;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v6)
          goto LABEL_17;
      }
      sub_2444F40DC((uint64_t)v15);
      v8 = 1;
      return v8 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2445193C8((uint64_t)v15);
LABEL_19:
  v8 = 0;
  return v8 & 1;
}

uint64_t sub_24451934C(uint64_t a1)
{
  destroy for UserDefinedBlockConfig(a1);
  return a1;
}

uint64_t sub_244519380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2445193C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_244519408(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_244517DCC(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_244519424(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for UserDefinedBlockConfig(a2, a1);
  return a2;
}

unint64_t sub_244519460()
{
  unint64_t result;

  result = qword_257369180;
  if (!qword_257369180)
  {
    result = MEMORY[0x2495115A0](&unk_244536864, &type metadata for ExtractionBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369180);
  }
  return result;
}

uint64_t sub_2445194A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for BlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244519524 + 4 * byte_244538515[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244519558 + 4 * byte_244538510[v4]))();
}

uint64_t sub_244519558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244519560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244519568);
  return result;
}

uint64_t sub_244519574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24451957CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244519580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244519588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockConfig.CodingKeys()
{
  return &type metadata for BlockConfig.CodingKeys;
}

unint64_t sub_2445195A8()
{
  unint64_t result;

  result = qword_257369188;
  if (!qword_257369188)
  {
    result = MEMORY[0x2495115A0](&unk_244538674, &type metadata for BlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369188);
  }
  return result;
}

unint64_t sub_2445195F0()
{
  unint64_t result;

  result = qword_257369190;
  if (!qword_257369190)
  {
    result = MEMORY[0x2495115A0](&unk_2445385AC, &type metadata for BlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369190);
  }
  return result;
}

unint64_t sub_244519638()
{
  unint64_t result;

  result = qword_257369198;
  if (!qword_257369198)
  {
    result = MEMORY[0x2495115A0](&unk_2445385D4, &type metadata for BlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369198);
  }
  return result;
}

uint64_t dispatch thunk of DatasetProcessing.done.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatasetProcessing.process(dataset:logCollector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))() & 1;
}

uint64_t dispatch thunk of DatasetProcessing.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2445196B8(uint64_t a1, uint64_t a2)
{
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 16))(&var1);
  return 0;
}

uint64_t sub_2445196E0(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v29;
  uint64_t v31;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  sub_2444E8B18((uint64_t)a1, (uint64_t)v36);
  sub_2444E8B18((uint64_t)a4, (uint64_t)v33);
  if (a2)
  {
    swift_retain();
    v9 = a2;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v36, v37);
    v11 = v34;
    v10 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
    swift_retain();
    v13(v11, v12);
    v14 = sub_2445339A8();
    v16 = v15;
    swift_beginAccess();
    v9 = sub_244519BD8(v14, v16);
    swift_endAccess();
    if (!v9)
    {
      sub_2444E4CB0();
      swift_allocError();
      *(_QWORD *)v31 = v14;
      *(_QWORD *)(v31 + 8) = v16;
      *(_BYTE *)(v31 + 16) = 3;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      type metadata accessor for QueryBlock();
      swift_deallocPartialClassInstance();
      return v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  *(_QWORD *)(v5 + 56) = v9;
  v17 = a4[3];
  v18 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v17);
  *(_BYTE *)(v5 + 88) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18) & 1;
  v19 = a4[3];
  v20 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v19);
  *(_QWORD *)(v5 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
  v21 = a4[3];
  v22 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v21);
  *(_QWORD *)(v5 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  *(_QWORD *)(v5 + 80) = v23;
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = a4[3];
  v25 = a4[4];
  v26 = __swift_project_boxed_opaque_existential_1(a4, v24);
  v37 = v24;
  v38 = *(_QWORD *)(v25 + 8);
  v27 = v38;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(boxed_opaque_existential_1, v26, v24);
  v29 = swift_retain();
  v14 = sub_24452A570(v29, a3, (uint64_t)boxed_opaque_existential_1, v5, v24, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v14;
}

uint64_t sub_2445199C4(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_2444F789C(v3, v4, v5, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244519A80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  v5 = v1[4];
  v4 = v1[5];
  v6 = v1[8];
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_24452B30C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    v13[3] = &type metadata for DatasetColumnLayout;
    v13[0] = v5;
    v13[1] = v4;
    v13[4] = sub_244505598();
    v13[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_2445336C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    v10 = a1;
    v11 = sub_2445336CC();
    if (!v2)
      return v11;
  }
  return v10;
}

ValueMetadata *type metadata accessor for QueryBlockError()
{
  return &type metadata for QueryBlockError;
}

void sub_244519B88(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_244519B94()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for QueryBlock()
{
  return objc_opt_self();
}

uint64_t sub_244519BD8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2444EB9F0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2444F855C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_2444F6C2C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_244519CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_244519EBC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE74690], (void (*)(unint64_t, uint64_t))sub_2444F6E00, (void (*)(void))sub_2444F8710, a3);
}

double sub_244519CC0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2444EBBEC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2444F8D84();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_244533C6C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_2444F2854((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_2444F6FF4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_244519DBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2444EB9F0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2444F942C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_2444F7498(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_244519EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_244519EBC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE745E8], (void (*)(unint64_t, uint64_t))sub_2444F766C, (void (*)(void))sub_2444F9790, a3);
}

uint64_t sub_244519EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v10;
  unint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v10 = v6;
  swift_bridgeObjectRetain();
  v14 = sub_2444EB9F0(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v10;
    v23 = *v10;
    *v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      v17 = v23;
    }
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v17 + 56);
    v19 = a3(0);
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a6, v18 + *(_QWORD *)(v20 + 72) * v14, v19);
    a4(v14, v17);
    *v10 = v17;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a6, 0, 1, v19);
  }
  else
  {
    v22 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a6, 1, 1, v22);
  }
}

uint64_t sub_244519FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + 16) = 0;
  swift_bridgeObjectRetain();
  sub_2445336A8();
  result = swift_bridgeObjectRelease();
  if (!v1)
  {
    v6 = sub_2445336F0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
    v7 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
    swift_beginAccess();
    sub_24451A9A0((uint64_t)v4, v7);
    result = swift_endAccess();
    *(_BYTE *)(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized) = 0;
  }
  return result;
}

uint64_t sub_24451A110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + 16) = 1;
  v4 = sub_2445336F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
  swift_beginAccess();
  sub_24451A9A0((uint64_t)v3, v5);
  return swift_endAccess();
}

uint64_t sub_24451A1D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  void (*v52)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  char *v71;

  v68 = a2;
  v66 = a3;
  v67 = a1;
  v3 = sub_244533AB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v58 - v11;
  v13 = sub_2445336F0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v58 - v18;
  v20 = (uint64_t)v71;
  sub_244533ABC();
  if (!v20)
  {
    v64 = v10;
    v65 = 0;
    v61 = v17;
    v62 = v6;
    v60 = v4;
    v63 = v3;
    v22 = v69;
    v71 = v19;
    v23 = v69 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement;
    swift_beginAccess();
    sub_24451A92C(v23, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_24451A8EC((uint64_t)v12);
      v21 = 0;
    }
    else
    {
      v24 = v14;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v71, v12, v13);
      v25 = OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized;
      v26 = *(_BYTE *)(v22 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_initialized);
      v59 = v13;
      if ((v26 & 1) != 0)
      {
        v27 = (uint64_t)v64;
      }
      else
      {
        v70[0] = *v67;
        v34 = *(_QWORD *)(v22 + 72);
        v35 = *(_QWORD *)(v22 + 80);
        swift_bridgeObjectRetain();
        v36 = v35;
        v37 = v65;
        v38 = sub_2444FEB80(v34, v36);
        v27 = (uint64_t)v64;
        if (v37)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v71, v59);
          return v21 & 1;
        }
        v47 = v38;
        swift_bridgeObjectRelease();
        v48 = v61;
        v58 = v47;
        sub_2445336E4();
        v65 = 0;
        v57 = v48;
        v13 = v59;
        (*(void (**)(char *, uint64_t))(v24 + 8))(v57, v59);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v22 + v25) = 1;
      }
      v28 = v65;
      v29 = sub_244519A80((uint64_t)v71);
      if (v28)
      {
        v70[0] = v28;
        v30 = v28;
        v31 = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
        v32 = v62;
        v33 = v63;
        if (swift_dynamicCast())
        {
          (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v33);
        }
        else if (*(_BYTE *)(v22 + 88) == 1)
        {
          v49 = v66;

          v67 = (_QWORD *)v23;
          ObjectType = swift_getObjectType();
          v51 = swift_allocObject();
          *(_QWORD *)(v51 + 16) = v22;
          *(_QWORD *)(v51 + 24) = v28;
          v52 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v49 + 8);
          v53 = v28;
          swift_retain();
          v52(sub_2445054FC, v51, ObjectType, v49);
          swift_release();
          *(_BYTE *)(v22 + 16) = 1;
          v54 = v59;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, 1, 1, v59);
          v55 = (uint64_t)v67;
          swift_beginAccess();
          sub_24451A9A0(v27, v55);
          swift_endAccess();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v71, v54);

          v21 = 0;
          return v21 & 1;
        }
        (*(void (**)(char *, uint64_t))(v24 + 8))(v71, v59);

        return v21 & 1;
      }
      v39 = v29;
      if (v29)
      {
        v40 = *(_QWORD *)(v22 + 32);
        v41 = *(_QWORD *)(v22 + 40);
        v42 = (_QWORD *)*v67;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_244500DB4(0, v42[2] + 1, 1, v42);
        v44 = v42[2];
        v43 = v42[3];
        if (v44 >= v43 >> 1)
          v42 = sub_244500DB4((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
        v42[2] = v44 + 1;
        v45 = &v42[3 * v44];
        v45[4] = v40;
        v45[5] = v41;
        v45[6] = v39;
        *v67 = v42;
        v46 = swift_getObjectType();
        v70[0] = v40;
        v70[1] = v41;
        v70[2] = v39;
        (*(void (**)(_QWORD *, uint64_t))(v66 + 16))(v70, v46);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v71, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = 1;
      }
      else
      {
        *(_BYTE *)(v22 + 16) = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, 1, 1, v13);
        swift_beginAccess();
        sub_24451A9A0(v27, v23);
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v71, v13);
        v21 = 0;
      }
    }
  }
  return v21 & 1;
}

uint64_t sub_24451A778()
{
  uint64_t v0;

  return sub_24451A8EC(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement);
}

uint64_t sub_24451A788()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24451A8EC(v0 + OBJC_IVAR____TtC12PoirotBlocks15ExtractionBlock_statement);
  return swift_deallocClassInstance();
}

uint64_t sub_24451A7E0()
{
  return type metadata accessor for ExtractionBlock();
}

uint64_t type metadata accessor for ExtractionBlock()
{
  uint64_t result;

  result = qword_257369300;
  if (!qword_257369300)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24451A824()
{
  unint64_t v0;

  sub_24451A898();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_24451A898()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257369310)
  {
    sub_2445336F0();
    v0 = sub_244533B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257369310);
  }
}

uint64_t sub_24451A8EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24451A92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24451A974()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24451A9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

PoirotBlocks::RecipeMetadata __swiftcall RecipeMetadata.init(name:version:)(Swift::String name, Swift::UInt version)
{
  Swift::String *v2;
  PoirotBlocks::RecipeMetadata result;

  *v2 = name;
  v2[1]._countAndFlagsBits = version;
  result.name = name;
  result.version = version;
  return result;
}

void sub_24451A9F4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_24451AA40(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24451AAF8 + 4 * byte_244538857[a2]))(0x7461676572676761);
}

uint64_t sub_24451AAF8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7461676572676761 && v1 == 0xEB000000006E6F69)
    v2 = 1;
  else
    v2 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_24451ABF8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24451AC38(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24451AC8C + 4 * byte_244538862[a2]))(0x656C62616C6C756ELL);
}

uint64_t sub_24451AC8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C62616C6C756ELL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_24451AD24(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6556657069636572;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x8000000244534500;
  else
    v4 = 0xED00006E6F697372;
  if ((a2 & 1) != 0)
    v5 = 0x6556657069636572;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0xED00006E6F697372;
  else
    v6 = 0x8000000244534500;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_24451ADD8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24451AE18(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24451AE6C + 4 * byte_24453886A[a2]))(7762787);
}

uint64_t sub_24451AE6C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7762787 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_24451AF04(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x666E6F4372657375;
  else
    v3 = 1701869940;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xEA00000000006769;
  if ((a2 & 1) != 0)
    v5 = 0x666E6F4372657375;
  else
    v5 = 1701869940;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006769;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_244533DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t RecipeMetadata.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecipeMetadata.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecipeMetadata.name.modify())()
{
  return nullsub_1;
}

uint64_t RecipeMetadata.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t RecipeMetadata.version.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*RecipeMetadata.version.modify())()
{
  return nullsub_1;
}

uint64_t sub_24451B034(char *a1, char *a2)
{
  return sub_24451AD24(*a1, *a2);
}

uint64_t sub_24451B040()
{
  sub_244533EDC();
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

uint64_t sub_24451B0D0()
{
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24451B13C()
{
  sub_244533EDC();
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

uint64_t sub_24451B1C8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_244533CCC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_24451B224(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000010;
  if (*v1)
    v2 = 0x6556657069636572;
  v3 = 0x8000000244534500;
  if (*v1)
    v3 = 0xED00006E6F697372;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24451B274()
{
  _BYTE *v0;

  if (*v0)
    return 0x6556657069636572;
  else
    return 0xD000000000000010;
}

uint64_t sub_24451B2C0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_244533CCC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_24451B320()
{
  sub_24451B76C();
  return sub_244533F48();
}

uint64_t sub_24451B348()
{
  sub_24451B76C();
  return sub_244533F54();
}

double RecipeMetadata.init(recipeURL:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, uint64_t);
  double result;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v21[0] = a2;
  v3 = sub_24453333C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2445333CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244533240();
  swift_allocObject();
  sub_244533234();
  v21[1] = 0x6A2E657069636572;
  v21[2] = 0xEB000000006E6F73;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCD7A0], v3);
  sub_2444FE9D8();
  sub_2445333B4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  v11 = v24;
  v12 = sub_2445333D8();
  if (v11)
  {
    swift_release();
    v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(a1, v7);
    v14(v10, v7);
  }
  else
  {
    v16 = v12;
    v17 = v13;
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    sub_24451B5A4();
    sub_24453321C();
    v18(a1, v7);
    sub_2444F53D0(v16, v17);
    swift_release();
    result = *(double *)&v22;
    v19 = v23;
    v20 = v21[0];
    *(_OWORD *)v21[0] = v22;
    *(_QWORD *)(v20 + 16) = v19;
  }
  return result;
}

unint64_t sub_24451B5A4()
{
  unint64_t result;

  result = qword_257369440;
  if (!qword_257369440)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeMetadata, &type metadata for RecipeMetadata);
    atomic_store(result, (unint64_t *)&qword_257369440);
  }
  return result;
}

uint64_t RecipeMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369448);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24451B76C();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_244533D14();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244533D20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24451B76C()
{
  unint64_t result;

  result = qword_257369450;
  if (!qword_257369450)
  {
    result = MEMORY[0x2495115A0](&unk_2445389B4, &type metadata for RecipeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369450);
  }
  return result;
}

uint64_t sub_24451B7B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecipeMetadata.init(from:)(a1, a2);
}

_QWORD *sub_24451B7C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RecipeMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for RecipeMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for RecipeMetadata()
{
  return &type metadata for RecipeMetadata;
}

uint64_t storeEnumTagSinglePayload for RecipeMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24451B8E8 + 4 * byte_244538873[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24451B91C + 4 * byte_24453886E[v4]))();
}

uint64_t sub_24451B91C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24451B924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24451B92CLL);
  return result;
}

uint64_t sub_24451B938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24451B940);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24451B944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24451B94C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecipeMetadata.CodingKeys()
{
  return &type metadata for RecipeMetadata.CodingKeys;
}

unint64_t sub_24451B96C()
{
  unint64_t result;

  result = qword_257369458;
  if (!qword_257369458)
  {
    result = MEMORY[0x2495115A0](&unk_24453898C, &type metadata for RecipeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369458);
  }
  return result;
}

unint64_t sub_24451B9B4()
{
  unint64_t result;

  result = qword_257369460;
  if (!qword_257369460)
  {
    result = MEMORY[0x2495115A0](&unk_2445388C4, &type metadata for RecipeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369460);
  }
  return result;
}

unint64_t sub_24451B9FC()
{
  unint64_t result;

  result = qword_257369468;
  if (!qword_257369468)
  {
    result = MEMORY[0x2495115A0](&unk_2445388EC, &type metadata for RecipeMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369468);
  }
  return result;
}

uint64_t sub_24451BA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  v10 = a1;
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, v6);
  if (a2)
  {
    v15 = a2;
  }
  else
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4[1] + 8) + 8))(a3);
    v15 = v16;
  }
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  v17(v14, a3);
  v18 = (*(uint64_t (**)(uint64_t))(a4[3] + 8))(a3);
  result = (*(uint64_t (**)(uint64_t))(a4[2] + 8))(a3);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v15;
  *(_QWORD *)(a5 + 16) = v18;
  *(_BYTE *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = result;
  *(_QWORD *)(a5 + 40) = v20;
  return result;
}

uint64_t sub_24451BB48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369488);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24451C234();
  sub_244533F3C();
  v12 = 0;
  sub_244533D68();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    sub_2444EA258((unint64_t *)&qword_257367E00, &qword_257367E08, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12A0]);
    sub_244533D98();
    v10[14] = 2;
    sub_244533D74();
    v10[13] = 3;
    sub_244533D50();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24451BCF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24451BD1C + 4 * byte_244538A10[a1]))(1701667182, 0xE400000000000000);
}

unint64_t sub_24451BD1C()
{
  return 0xD000000000000011;
}

uint64_t sub_24451BD70()
{
  unsigned __int8 *v0;

  return sub_24451BCF0(*v0);
}

uint64_t sub_24451BD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24451C5D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24451BD9C()
{
  sub_24451C234();
  return sub_244533F48();
}

uint64_t sub_24451BDC4()
{
  sub_24451C234();
  return sub_244533F54();
}

uint64_t sub_24451BDEC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24451BDF4()
{
  return swift_bridgeObjectRetain();
}

double sub_24451BDFC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_24451BF48(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_24451BE3C(_QWORD *a1)
{
  return sub_24451BB48(a1);
}

uint64_t sub_24451BE50(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_24451BE94((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_24451BE94(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_244533DF8(), result = 0, (v5 & 1) != 0))
  {
    if ((sub_24450013C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0
      || ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) != 0)
    {
      return 0;
    }
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a2 + 40);
    if (v7)
    {
      if (!v8 || (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v7 != v8) && (sub_244533DF8() & 1) == 0)
        return 0;
    }
    else if (v8)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_24451BF48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369470);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24451C234();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v24) = 0;
  v9 = sub_244533D14();
  v11 = v10;
  v22 = v9;
  v23 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
  v25 = 1;
  sub_2444EA258(&qword_257367DE8, &qword_257367DF0, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_244533D2C();
  v12 = v24;
  LOBYTE(v24) = 2;
  v13 = sub_244533CF0();
  LOBYTE(v24) = 3;
  v14 = sub_244533CE4();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v20 = v23;
  *v23 = v22;
  v20[1] = v11;
  v20[2] = v12;
  *((_BYTE *)v20 + 24) = v13 & 1;
  v20[4] = v18;
  v20[5] = v16;
  return result;
}

unint64_t sub_24451C234()
{
  unint64_t result;

  result = qword_257369478;
  if (!qword_257369478)
  {
    result = MEMORY[0x2495115A0](&unk_244538BD0, &type metadata for AggregationBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369478);
  }
  return result;
}

unint64_t sub_24451C278()
{
  unint64_t result;

  result = qword_257369480;
  if (!qword_257369480)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnLayout, &type metadata for DatasetColumnLayout);
    atomic_store(result, (unint64_t *)&qword_257369480);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AggregationBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24451C308 + 4 * byte_244538A19[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24451C33C + 4 * byte_244538A14[v4]))();
}

uint64_t sub_24451C33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24451C344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24451C34CLL);
  return result;
}

uint64_t sub_24451C358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24451C360);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24451C364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24451C36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AggregationBlockConfig.CodingKeys()
{
  return &type metadata for AggregationBlockConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for AggregationBlockConfig()
{
  return &type metadata for AggregationBlockConfig;
}

unint64_t sub_24451C398(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_24451C3CC();
  a1[2] = sub_24451C410();
  result = sub_24451C454();
  a1[3] = result;
  return result;
}

unint64_t sub_24451C3CC()
{
  unint64_t result;

  result = qword_257369490;
  if (!qword_257369490)
  {
    result = MEMORY[0x2495115A0](&unk_244538AB8, &type metadata for AggregationBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369490);
  }
  return result;
}

unint64_t sub_24451C410()
{
  unint64_t result;

  result = qword_257369498;
  if (!qword_257369498)
  {
    result = MEMORY[0x2495115A0](&unk_244538A90, &type metadata for AggregationBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369498);
  }
  return result;
}

unint64_t sub_24451C454()
{
  unint64_t result;

  result = qword_2573694A0;
  if (!qword_2573694A0)
  {
    result = MEMORY[0x2495115A0](&unk_244538A68, &type metadata for AggregationBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573694A0);
  }
  return result;
}

unint64_t sub_24451C49C()
{
  unint64_t result;

  result = qword_2573694A8;
  if (!qword_2573694A8)
  {
    result = MEMORY[0x2495115A0](&unk_244538B8C, &type metadata for AggregationBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573694A8);
  }
  return result;
}

unint64_t sub_24451C4E0(uint64_t a1)
{
  unint64_t result;

  result = sub_24451C504();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24451C504()
{
  unint64_t result;

  result = qword_2573694B0;
  if (!qword_2573694B0)
  {
    result = MEMORY[0x2495115A0](&unk_244538AE0, &type metadata for AggregationBlockConfig);
    atomic_store(result, (unint64_t *)&qword_2573694B0);
  }
  return result;
}

unint64_t sub_24451C54C()
{
  unint64_t result;

  result = qword_2573694B8;
  if (!qword_2573694B8)
  {
    result = MEMORY[0x2495115A0](&unk_244538AFC, &type metadata for AggregationBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573694B8);
  }
  return result;
}

unint64_t sub_24451C594()
{
  unint64_t result;

  result = qword_2573694C0;
  if (!qword_2573694C0)
  {
    result = MEMORY[0x2495115A0](&unk_244538B24, &type metadata for AggregationBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2573694C0);
  }
  return result;
}

uint64_t sub_24451C5D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244534600 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002445345E0 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244534580)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t URL.queryName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2445333CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244533384();
  v4 = sub_24453336C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

_QWORD *sub_24451C7F8(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_2444F1CD4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_24452084C(&v5, (uint64_t)result, v3, 0, a1);
}

void RecipeBuilderError.errorDescription.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_24451C8B4()
{
  sub_244533BAC();
  swift_bridgeObjectRelease();
  sub_2445339D8();
  return 0xD000000000000016;
}

uint64_t RecipeBuilder.viewQueries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecipeBuilder.viewQueries.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*RecipeBuilder.viewQueries.modify())()
{
  return nullsub_1;
}

uint64_t RecipeBuilder.blockQueries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecipeBuilder.blocksWithoutQuery.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t RecipeBuilder.init(identifier:version:viewQueries:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t result;
  void *v14;
  uint64_t v15;

  v10 = MEMORY[0x24BEE4AF8];
  v11 = sub_2444F5674(MEMORY[0x24BEE4AF8]);
  v12 = sub_2444F5A80(v10);
  result = sub_2444F5960(v10);
  if (*(_QWORD *)(a4 + 16))
    v14 = &unk_251524800;
  else
    v14 = (void *)v10;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = v14;
  a5[4] = v10;
  a5[5] = v11;
  a5[6] = v12;
  a5[7] = a4;
  v15 = MEMORY[0x24BEE4B08];
  a5[8] = result;
  a5[9] = v15;
  return result;
}

uint64_t sub_24451CB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + 48);
  result = MEMORY[0x24BEE4AF8];
  v13 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v9 = *(i - 1);
      v8 = *i;
      v10 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRetain();
      if (v10)
      {
        swift_bridgeObjectRetain();
        v11 = sub_2444EB9F0(v9, v8);
        if ((v12 & 1) != 0)
        {
          v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_2445369D0;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v8;
LABEL_5:
      sub_2444FFA60(v7);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
  }
  return result;
}

_QWORD *sub_24451CC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  _QWORD *result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21[3];
  _QWORD *v22;

  v5 = sub_2444F5960(MEMORY[0x24BEE4AF8]);
  v22 = (_QWORD *)sub_24451CE58(v5, a2);
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = (_QWORD *)swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (unint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v19 = v18[1];
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v21[0] = *v18;
    v21[1] = v19;
    v21[2] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24451CF48(&v22, v21, a2);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v10)
      goto LABEL_28;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_19:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    goto LABEL_28;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    goto LABEL_28;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    goto LABEL_28;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    goto LABEL_28;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 5;
  if (v12 + 5 >= v10)
  {
LABEL_28:
    swift_release();
    return v22;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      goto LABEL_28;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24451CE58(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_244533C78();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368000);
      v4 = (_QWORD *)sub_244533A74();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v5;
  }
  return result;
}

_QWORD **sub_24451CF48(_QWORD **result, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD **v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *a2;
  v3 = a2[1];
  v30 = a2[2];
  if (*(_QWORD *)(v30 + 16) == a3)
  {
    v5 = a3;
    if (a3)
    {
      v6 = result;
      v7 = *result;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_29:
        v7 = sub_2444FAF28(v7);
      v8 = 0;
      v9 = (uint64_t *)(v30 + 40);
      v28 = (_QWORD **)v6;
      v29 = v5;
      while (1)
      {
        if (v5 == v8)
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v8 >= *(_QWORD *)(v30 + 16))
          goto LABEL_25;
        v12 = *(v9 - 1);
        v11 = *v9;
        *v6 = v7;
        v13 = v7[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v8 >= v13)
          goto LABEL_26;
        v31 = v12;
        v32 = v11;
        v6 = &v7[v8];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v7 = (_QWORD *)v6[4];
        v6[4] = 0x8000000000000000;
        v15 = v4;
        v5 = v3;
        v4 = sub_2444EB9F0(v4, v3);
        v17 = v7[2];
        v18 = (v16 & 1) == 0;
        v19 = v17 + v18;
        if (__OFADD__(v17, v18))
          goto LABEL_27;
        v3 = v16;
        if (v7[3] >= v19)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v16 & 1) != 0)
              goto LABEL_5;
          }
          else
          {
            sub_2444F942C();
            if ((v3 & 1) != 0)
              goto LABEL_5;
          }
        }
        else
        {
          sub_2444EE1A8(v19, isUniquelyReferenced_nonNull_native);
          v20 = sub_2444EB9F0(v15, v5);
          if ((v3 & 1) != (v21 & 1))
          {
            result = (_QWORD **)sub_244533E88();
            __break(1u);
            return result;
          }
          v4 = v20;
          if ((v3 & 1) != 0)
          {
LABEL_5:
            v10 = (_QWORD *)(v7[7] + 16 * v4);
            swift_bridgeObjectRelease();
            *v10 = v31;
            v10[1] = v32;
            v3 = v5;
            v4 = v15;
            goto LABEL_6;
          }
        }
        v7[(v4 >> 6) + 8] |= 1 << v4;
        v22 = (uint64_t *)(v7[6] + 16 * v4);
        *v22 = v15;
        v22[1] = v5;
        v23 = (_QWORD *)(v7[7] + 16 * v4);
        *v23 = v31;
        v23[1] = v32;
        v24 = v7[2];
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_28;
        v4 = v15;
        v3 = v5;
        v7[2] = v26;
        swift_bridgeObjectRetain();
LABEL_6:
        ++v8;
        v6[4] = v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = v28;
        v5 = v29;
        v7 = *v28;
        v9 += 2;
        if (v29 == v8)
          return (_QWORD **)swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    sub_244520A78();
    swift_allocError();
    *(_QWORD *)v27 = v4;
    *(_QWORD *)(v27 + 8) = v3;
    *(_BYTE *)(v27 + 16) = 2;
    swift_bridgeObjectRetain();
    return (_QWORD **)swift_willThrow();
  }
  return result;
}

uint64_t sub_24451D214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t result;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _OWORD v57[7];

  v8 = v7;
  v9 = a6;
  v11 = a4;
  v13 = a1;
  v14 = a7;
  v15 = *(_QWORD *)(a3 + 8);
  v16 = *(_QWORD *)(a3 + 16);
  v43 = *(_BYTE *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 40);
  v49 = *(_QWORD *)(a3 + 32);
  v50 = *(_QWORD *)a3;
  v46 = *(_QWORD *)(a6 + 16);
  if (!v46)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_16:
    *(_QWORD *)v14 = v13;
    *(_QWORD *)(v14 + 8) = a2;
    *(_QWORD *)(v14 + 16) = v50;
    *(_QWORD *)(v14 + 24) = v15;
    *(_QWORD *)(v14 + 32) = v16;
    *(_BYTE *)(v14 + 40) = v43 & 1;
    *(_QWORD *)(v14 + 48) = v49;
    *(_QWORD *)(v14 + 56) = v17;
    *(_QWORD *)(v14 + 64) = v9;
    *(_QWORD *)(v14 + 72) = v11;
    *(_QWORD *)(v14 + 80) = a5;
    return result;
  }
  swift_bridgeObjectRetain_n();
  v42 = a2;
  swift_bridgeObjectRetain();
  v41 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = v16;
  swift_bridgeObjectRetain();
  v47 = v17;
  swift_bridgeObjectRetain();
  v18 = 0;
  v44 = v15;
  v45 = v9;
  v19 = v17;
  while (1)
  {
    v20 = *(_QWORD *)(v9 + 8 * v18 + 32);
    if (!*(_QWORD *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
LABEL_19:
      *(_QWORD *)&v57[0] = 0;
      *((_QWORD *)&v57[0] + 1) = 0xE000000000000000;
      sub_244533BAC();
      v51 = v57[0];
      sub_2445339D8();
      v34 = *(_OWORD *)(a3 + 16);
      v57[0] = *(_OWORD *)a3;
      v57[1] = v34;
      v57[2] = *(_OWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24453399C();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445339D8();
      sub_2445338D0();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445339D8();
      v35 = v51;
      sub_244520ABC();
      swift_allocError();
      *(_OWORD *)v36 = v35;
      *(_BYTE *)(v36 + 16) = 2;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_2444EB9F0(v50, v15);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v23 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v21);
    v24 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v26 = sub_2445052C4(v48, v20);
    swift_bridgeObjectRelease();
    if (v19)
    {
      v27 = *(_QWORD *)(v20 + 16);
      swift_bridgeObjectRetain();
      if (v27)
      {
        swift_bridgeObjectRetain();
        v28 = v49;
        v29 = sub_2444EB9F0(v49, v19);
        v30 = v19;
        if ((v31 & 1) != 0)
        {
          v32 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v29);
          v28 = *v32;
          v30 = v32[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = v49;
        v30 = v19;
      }
    }
    else
    {
      v30 = 0;
      v28 = v49;
    }
    *(_QWORD *)&v51 = v24;
    *((_QWORD *)&v51 + 1) = v25;
    v52 = v26;
    v53 = 0;
    v54 = v28;
    v55 = v30;
    v56 = 0;
    sub_2444FE99C((uint64_t)&v51, (uint64_t)v57);
    sub_24451D68C((uint64_t)v57, 0, 0);
    if (v8)
      break;
    ++v18;
    sub_2444F40DC((uint64_t)v57);
    swift_bridgeObjectRelease();
    v9 = v45;
    v15 = v44;
    if (v46 == v18)
    {
      result = swift_bridgeObjectRelease();
      a5 = v41;
      a2 = v42;
      v17 = v47;
      v16 = v48;
      v14 = a7;
      v11 = a4;
      v13 = a1;
      goto LABEL_16;
    }
  }
  sub_2444F40DC((uint64_t)v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24451D68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  char v45;

  v4 = v3;
  sub_244516BB8();
  v7 = v6;
  v9 = v8;
  sub_244517958();
  v10 = v42;
  sub_244517A28();
  v12 = v11;
  sub_244517BC4();
  v14 = v13;
  swift_bridgeObjectRetain();
  sub_244519DBC(v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3[8] + 16))
  {
    swift_bridgeObjectRetain();
    sub_2444EB9F0(v7, v9);
    if ((v15 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = 0;
      v43 = 0xE000000000000000;
      sub_244533BAC();
      sub_2445339D8();
      v45 = v10;
      sub_244533C30();
      sub_2445339D8();
      sub_2445339D8();
      swift_bridgeObjectRelease();
LABEL_7:
      sub_2445339D8();
      v18 = v43;
      sub_244520ABC();
      swift_allocError();
      *(_QWORD *)v19 = v42;
      *(_QWORD *)(v19 + 8) = v18;
      *(_BYTE *)(v19 + 16) = 0;
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
  }
  v41 = v12;
  v44 = v42;
  v16 = v3[9];
  swift_bridgeObjectRetain();
  v17 = sub_24452EFFC(v7, v9, v16);
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = 0;
    v43 = 0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    v45 = v44;
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v21 = v41;
  if (a3)
  {
    if (*(_QWORD *)(v3[8] + 16))
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = (_QWORD *)v3[3];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_38:
        v22 = sub_24450112C(0, v22[2] + 1, 1, v22);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_24450112C((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
      v22[2] = v24 + 1;
      v25 = &v22[2 * v24];
      v25[4] = 0x736B636F6C62;
      v25[5] = 0xE600000000000000;
      v4[3] = v22;
      v21 = v41;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v42 = v4[8];
    v4[8] = 0x8000000000000000;
    sub_2444F7BA4(a2, a3, v7, v9, isUniquelyReferenced_nonNull_native);
    v4[8] = v42;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_244512B74(&v42, v7, v9);
  }
  swift_bridgeObjectRelease();
  a2 = v21[2];
  if (!a2)
  {
    swift_bridgeObjectRelease();
    if (!v14)
      return swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v27 = v21[4];
  a3 = v21[5];
  v22 = (_QWORD *)v4[5];
  v28 = v22[2];
  swift_bridgeObjectRetain();
  if (!v28)
  {
    swift_bridgeObjectRetain();
LABEL_35:
    v42 = 0;
    v43 = 0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    sub_2445339D8();
    sub_2445339D8();
    v45 = v44;
    sub_244533C30();
    sub_2445339D8();
    sub_2445339D8();
    sub_2445339D8();
    v36 = v42;
    v37 = v43;
    sub_244520ABC();
    swift_allocError();
    *(_QWORD *)v38 = v36;
    *(_QWORD *)(v38 + 8) = v37;
    *(_BYTE *)(v38 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2444EB9F0(v27, a3);
  if ((v29 & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (a2 != 1)
  {
    v39 = v14;
    v31 = v21 + 7;
    v32 = 1;
    do
    {
      v14 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      v33 = *(v31 - 1);
      a3 = *v31;
      v22 = (_QWORD *)v4[5];
      v34 = v22[2];
      swift_bridgeObjectRetain();
      if (!v34)
        goto LABEL_35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2444EB9F0(v33, a3);
      if ((v35 & 1) == 0)
        goto LABEL_34;
      v31 += 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v32;
    }
    while (v14 != a2);
    swift_bridgeObjectRelease_n();
    v14 = v39;
    if (v39)
      goto LABEL_24;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease_n();
  if (v14)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v42 = v4[5];
    v4[5] = 0x8000000000000000;
    sub_2444F789C(v7, v9, v14, v7, v9, v30);
    v4[5] = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  return swift_bridgeObjectRelease();
}

uint64_t RecipeBuilder.append(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _BYTE v51[96];
  _OWORD v52[5];
  uint64_t v53;
  char v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[5];
  uint64_t v59;
  _BYTE v60[16];
  uint64_t v61;
  __int128 v62;

  v3 = v1;
  v6 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 48) + 8))(v6);
  if (v7)
  {
    v8 = v7;
    v9 = sub_24451C7F8(v7);
    if (v10)
    {
      v12 = (uint64_t)v9;
      v13 = v10;
      v14 = v11;
      v16 = a1[3];
      v15 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v16);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 8) + 8) + 8))(v16);
      v19 = v18;
      v20 = *(_QWORD *)(v8 + 16);
      if (v20 > 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_244520A78();
        swift_allocError();
        *(_OWORD *)v21 = xmmword_244538F20;
        *(_BYTE *)(v21 + 16) = 0;
        return swift_willThrow();
      }
      if (v20)
      {
        v50 = v17;
        swift_bridgeObjectRetain();
        v32 = sub_2444EB9F0(v12, v13);
        if ((v33 & 1) != 0)
        {
          v34 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v34 + 16))
          {
            v48 = v34;
            if (*(_QWORD *)(v8 + 16))
            {
              swift_bridgeObjectRetain();
              sub_2444EB9F0(v12, v13);
              v36 = v35;
              swift_bridgeObjectRelease();
              if ((v36 & 1) != 0)
              {
                v46 = *(_QWORD *)(v48 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v49 = sub_24451CC4C(v8, v46);
                if (v2)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v40 = a1[3];
                v39 = a1[4];
                __swift_project_boxed_opaque_existential_1(a1, v40);
                v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v39 + 8) + 8) + 8))(v40);
                v42 = v41;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)&v52[0] = *(_QWORD *)(v3 + 48);
                *(_QWORD *)(v3 + 48) = 0x8000000000000000;
                sub_2444F7D18(v14, v47, v42, isUniquelyReferenced_nonNull_native);
                *(_QWORD *)(v3 + 48) = *(_QWORD *)&v52[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v44 = a1[3];
                v45 = (_QWORD *)a1[4];
                __swift_project_boxed_opaque_existential_1(a1, v44);
                sub_24451BA40(v12, v13, v44, v45, (uint64_t)&v55);
                swift_bridgeObjectRelease();
                sub_24451D214(v50, v19, (uint64_t)&v55, v50, v19, (uint64_t)v49, (uint64_t)v58);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v62 = v55;
                sub_2444FEA8C((uint64_t)&v62);
                v61 = v56;
                sub_2444FEAB4((uint64_t)&v61);
                sub_244519380((uint64_t)&v57, (uint64_t)v60);
                sub_2444FEA8C((uint64_t)v60);
                v52[2] = v58[2];
                v52[3] = v58[3];
                v52[4] = v58[4];
                v53 = v59;
                v52[0] = v58[0];
                v52[1] = v58[1];
                v54 = 3;
                goto LABEL_7;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v52[0] = 0;
            *((_QWORD *)&v52[0] + 1) = 0xE000000000000000;
            sub_244533BAC();
            sub_2445339D8();
            sub_2445339D8();
            swift_bridgeObjectRelease();
            sub_244520A78();
            swift_allocError();
            *(_OWORD *)v37 = v52[0];
            v38 = 3;
LABEL_26:
            *(_BYTE *)(v37 + 16) = v38;
            return swift_willThrow();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_244520A78();
      swift_allocError();
      *(_QWORD *)v37 = v12;
      *(_QWORD *)(v37 + 8) = v13;
      v38 = 1;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  v22 = a1[3];
  v23 = (_QWORD *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24451BA40(0, 0, v22, v23, (uint64_t)v52);
  v54 = 0;
LABEL_7:
  v25 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v24 + 32) + 8))(v25);
  if (v2)
    return sub_2444F40DC((uint64_t)v52);
  sub_24451D68C((uint64_t)v52, v26, v27);
  sub_2444FE960((uint64_t)v52, (uint64_t)v51);
  v29 = *(_QWORD **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v29 = sub_24450148C(0, v29[2] + 1, 1, v29);
  v31 = v29[2];
  v30 = v29[3];
  if (v31 >= v30 >> 1)
    v29 = sub_24450148C((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
  v29[2] = v31 + 1;
  sub_2444FE99C((uint64_t)v51, (uint64_t)&v29[12 * v31 + 4]);
  *(_QWORD *)(v3 + 32) = v29;
  sub_2444F40DC((uint64_t)v52);
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _BYTE v17[96];
  _BYTE v18[96];

  v3 = v1;
  v5 = a1[3];
  v6 = (_QWORD *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  sub_2444E9E38(v5, v6, (uint64_t)v18);
  v18[88] = 1;
  v8 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 32) + 8))(v8);
  if (v2)
    return sub_2444F40DC((uint64_t)v18);
  sub_24451D68C((uint64_t)v18, v9, v10);
  sub_2444FE960((uint64_t)v18, (uint64_t)v17);
  v12 = *(_QWORD **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_24450148C(0, v12[2] + 1, 1, v12);
  v14 = v12[2];
  v13 = v12[3];
  v15 = v14 + 1;
  if (v14 >= v13 >> 1)
  {
    v16 = sub_24450148C((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v15 = v14 + 1;
    v12 = v16;
  }
  v12[2] = v15;
  sub_2444FE99C((uint64_t)v17, (uint64_t)&v12[12 * v14 + 4]);
  *(_QWORD *)(v3 + 32) = v12;
  sub_2444F40DC((uint64_t)v18);
  return swift_bridgeObjectRelease();
}

{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84[12];
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;

  v3 = v1;
  v6 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v7 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 16) + 8))(v6) + 16);
  swift_bridgeObjectRelease();
  if (v7 < 2)
  {
    v85 = 0;
    v86 = 0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    v30 = a1[3];
    v29 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v30);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v29 + 8) + 8) + 8))(v30);
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v32 = a1[3];
    v31 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v32);
    v33 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v31 + 16) + 8))(v32) + 16);
    swift_bridgeObjectRelease();
    v84[0] = v33;
    sub_244533DBC();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_244520ABC();
    swift_allocError();
    *(_QWORD *)v34 = 0;
    *(_QWORD *)(v34 + 8) = 0xE000000000000000;
    v35 = 1;
LABEL_7:
    *(_BYTE *)(v34 + 16) = v35;
    return swift_willThrow();
  }
  v9 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v10 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 + 24) + 8))(v9) + 16);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    sub_244533BAC();
    swift_bridgeObjectRelease();
    v85 = 0x6F6C42206E696F4ALL;
    v86 = 0xEB00000000206B63;
    v37 = a1[3];
    v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v37);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v36 + 8) + 8) + 8))(v37);
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v39 = a1[3];
    v38 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v39);
    v40 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v38 + 24) + 8))(v39) + 16);
    swift_bridgeObjectRelease();
    v84[0] = v40;
    sub_244533DBC();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_244520ABC();
    swift_allocError();
    *(_QWORD *)v34 = 0x6F6C42206E696F4ALL;
    *(_QWORD *)(v34 + 8) = 0xEB00000000206B63;
    v35 = 3;
    goto LABEL_7;
  }
  v80 = a1[3];
  v81 = (_QWORD *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v80);
  v11 = v3[1];
  v79 = *v3;
  v78 = v3[2];
  v83 = v3;
  v12 = v3[3];
  v13 = v3[4];
  v14 = v3[5];
  v15 = v3[6];
  v16 = v3[7];
  v17 = v83[8];
  v18 = v83[9];
  v84[3] = (uint64_t)&type metadata for RecipeBuilder;
  v84[4] = (uint64_t)&off_251527468;
  v19 = (_QWORD *)swift_allocObject();
  v84[0] = (uint64_t)v19;
  v19[2] = v79;
  v19[3] = v11;
  v19[4] = v78;
  v19[5] = v12;
  v19[6] = v13;
  v19[7] = v14;
  v19[8] = v15;
  v19[9] = v16;
  v19[10] = v17;
  v19[11] = v18;
  swift_bridgeObjectRetain();
  v20 = (uint64_t)v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_24450EFD8(v84, v80, v81);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  v85 = v21;
  v86 = v23;
  v87 = v25;
  v88 = v27;
  v89 = 4;
  sub_24451D68C((uint64_t)&v85, 0, 0);
  if (v2)
    return sub_2444F40DC((uint64_t)&v85);
  sub_2444FE960((uint64_t)&v85, (uint64_t)v84);
  v41 = (_QWORD *)v83[4];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v41 = sub_24450148C(0, v41[2] + 1, 1, v41);
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_24450148C((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  sub_2444FE99C((uint64_t)v84, (uint64_t)&v41[12 * v43 + 4]);
  v83[4] = v41;
  sub_2444F40DC((uint64_t)&v85);
  v84[0] = 0;
  v44 = v83[6];
  v45 = a1[4];
  v82 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v82);
  v46 = *(_QWORD *)(v45 + 16);
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = v47(v82, v46);
  v49 = MEMORY[0x24BEE4AF8];
  v85 = MEMORY[0x24BEE4AF8];
  v50 = *(_QWORD *)(v48 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain();
    v51 = (uint64_t *)(v48 + 40);
    while (1)
    {
      v54 = *(v51 - 1);
      v53 = *v51;
      v55 = *(_QWORD *)(v44 + 16);
      swift_bridgeObjectRetain();
      if (v55)
      {
        swift_bridgeObjectRetain();
        v56 = sub_2444EB9F0(v54, v53);
        if ((v57 & 1) != 0)
        {
          v52 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257367FA0);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_2445369D0;
      *(_QWORD *)(v52 + 32) = v54;
      *(_QWORD *)(v52 + 40) = v53;
LABEL_16:
      v51 += 2;
      sub_2444FFA60(v52);
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v58 = v85;
        v20 = (uint64_t)v83;
        v49 = MEMORY[0x24BEE4AF8];
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = MEMORY[0x24BEE4AF8];
LABEL_22:
  v90 = v49;
  v59 = *(_QWORD *)(v58 + 16);
  if (!v59)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    v85 = 0;
    v86 = 0xE000000000000000;
    sub_244533BAC();
    swift_bridgeObjectRelease();
    v85 = 0xD000000000000028;
    v86 = 0x8000000244535280;
    v74 = a1[3];
    v73 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v74);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v73 + 8) + 8) + 8))(v74);
    sub_2445339D8();
    swift_bridgeObjectRelease();
    v75 = v85;
    v76 = v86;
    sub_244520ABC();
    swift_allocError();
    *(_QWORD *)v77 = v75;
    *(_QWORD *)(v77 + 8) = v76;
    *(_BYTE *)(v77 + 16) = 3;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v60 = (unint64_t *)(v58 + 40);
  do
  {
    v61 = *v60;
    v85 = *(v60 - 1);
    v86 = v61;
    swift_bridgeObjectRetain();
    sub_24451EF4C((uint64_t)&v90, &v85, v20, (uint64_t)a1, v84);
    v60 += 2;
    swift_bridgeObjectRelease();
    --v59;
  }
  while (v59);
  swift_bridgeObjectRelease_n();
  v62 = v90;
  v63 = v84[0];
  if (!v84[0])
    goto LABEL_28;
  v64 = a1[3];
  v65 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v64);
  v66 = *(_QWORD *)(*(_QWORD *)(v65 + 8) + 8);
  v67 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
  swift_bridgeObjectRetain();
  v68 = v67(v64, v66);
  v70 = v69;
  v85 = v63;
  sub_2444FFBB0(v62);
  v71 = v85;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v85 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v20 + 40) = 0x8000000000000000;
  sub_2444F789C(v68, v70, v71, v68, v70, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v20 + 40) = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _BYTE v20[96];
  _QWORD v21[11];
  char v22;

  v3 = v1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v21[0] = sub_2444FB808(v5, v6);
  v21[1] = v7;
  v21[2] = v8;
  v21[3] = v9;
  v22 = 5;
  v11 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 24) + 8))(v11);
  if (v2)
    return sub_2444F40DC((uint64_t)v21);
  sub_24451D68C((uint64_t)v21, v12, v13);
  sub_2444FE960((uint64_t)v21, (uint64_t)v20);
  v15 = *(_QWORD **)(v3 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_24450148C(0, v15[2] + 1, 1, v15);
  v17 = v15[2];
  v16 = v15[3];
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    v19 = sub_24450148C((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v18 = v17 + 1;
    v15 = v19;
  }
  v15[2] = v18;
  sub_2444FE99C((uint64_t)v20, (uint64_t)&v15[12 * v17 + 4]);
  *(_QWORD *)(v3 + 32) = v15;
  sub_2444F40DC((uint64_t)v21);
  return swift_bridgeObjectRelease();
}

{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v21[12];
  _BYTE v22[104];
  uint64_t v23;

  v2 = v1;
  v19 = a1[3];
  v20 = (_QWORD *)a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v3 = v1[1];
  v18 = *v1;
  v4 = v1[3];
  v17 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v10 = v1[8];
  v9 = v1[9];
  v21[3] = &type metadata for RecipeBuilder;
  v21[4] = &off_251527468;
  v11 = (_QWORD *)swift_allocObject();
  v21[0] = v11;
  v11[2] = v18;
  v11[3] = v3;
  v11[4] = v17;
  v11[5] = v4;
  v11[6] = v5;
  v11[7] = v6;
  v11[8] = v7;
  v11[9] = v8;
  v11[10] = v10;
  v11[11] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v23;
  sub_24452958C(v21, v19, v20, (uint64_t)v22);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (!v12)
  {
    v22[88] = 6;
    sub_24451D68C((uint64_t)v22, 0, 0);
    sub_2444FE960((uint64_t)v22, (uint64_t)v21);
    v14 = (_QWORD *)v2[4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_24450148C(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_24450148C((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    sub_2444FE99C((uint64_t)v21, (uint64_t)&v14[12 * v16 + 4]);
    v2[4] = v14;
    return sub_2444F40DC((uint64_t)v22);
  }
  return result;
}

uint64_t sub_24451EF4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  unint64_t v29;

  if (!*(_QWORD *)(*(_QWORD *)(a3 + 40) + 16))
    goto LABEL_12;
  v6 = v5;
  v9 = *a2;
  v10 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2444EB9F0(v9, v10);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    result = sub_244533C84();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v12);
  v27[2] = a4;
  v28 = MEMORY[0x24BEE4AF8];
  v13 = swift_bridgeObjectRetain();
  v14 = sub_2445215D0(v13, (uint64_t (*)(char *))sub_2445215B4, (uint64_t)v27, (unint64_t *)&v28);
  if (v6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v16 = v14;
  swift_bridgeObjectRelease();
  v17 = v28;
  v18 = *a5;
  if (!*a5)
  {
    *a5 = v16;
    return sub_2444FFBB0(v17);
  }
  v19 = swift_bridgeObjectRetain();
  if ((sub_24450013C(v19, v16) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2444FFBB0(v17);
  }
  swift_bridgeObjectRelease();
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_244533BAC();
  v20 = type metadata accessor for DatasetColumnDescription(0);
  v21 = MEMORY[0x249510CC4](v18, v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v21;
  v29 = v23;
  sub_2445339D8();
  MEMORY[0x249510CC4](v16, v20);
  sub_2445339D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v28;
  v25 = v29;
  sub_244520ABC();
  swift_allocError();
  *(_QWORD *)v26 = v24;
  *(_QWORD *)(v26 + 8) = v25;
  *(_BYTE *)(v26 + 16) = 4;
  return swift_willThrow();
}

uint64_t sub_24451F1F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[3];
  v3 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v5 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 24) + 8))(v4);
  v6 = v5;
  v7 = v5[2];
  if (!v7)
    goto LABEL_17;
  v8 = *a1;
  v9 = a1[1];
  v10 = v5[4] == v8 && v5[5] == v9;
  if (v10 || (result = sub_244533DF8(), (result & 1) != 0))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v7 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v12 = v6 + 7;
    v13 = 1;
    while (1)
    {
      v14 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      if (*(v12 - 1) == v8 && *v12 == v9)
        goto LABEL_7;
      result = sub_244533DF8();
      if ((result & 1) != 0)
        goto LABEL_7;
      v12 += 2;
      ++v13;
      if (v14 == v7)
        goto LABEL_17;
    }
    __break(1u);
  }
  return result;
}

double RecipeBuilder.appending(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24451F6D0(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_24451F6D0(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_24451F6D0(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_24451F6D0(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

{
  return sub_24451F6D0(a1, (void (*)(uint64_t))RecipeBuilder.append(_:), a2);
}

double sub_24451F6D0@<D0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v4;
  double result;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v8 = *v3;
  v9 = *((_QWORD *)v3 + 2);
  v10 = *(__int128 *)((char *)v3 + 24);
  v11 = *(__int128 *)((char *)v3 + 40);
  v12 = *(__int128 *)((char *)v3 + 56);
  v13 = *((_QWORD *)v3 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(a1);
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)a3 = v8;
    *(_QWORD *)(a3 + 16) = v9;
    *(_OWORD *)(a3 + 24) = v10;
    *(_OWORD *)(a3 + 40) = v11;
    result = *(double *)&v12;
    *(_OWORD *)(a3 + 56) = v12;
    *(_QWORD *)(a3 + 72) = v13;
  }
  return result;
}

uint64_t sub_24451F820()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24451F82C()
{
  return 0;
}

BOOL static RecipeBuilder.BuildRecipeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecipeBuilder.BuildRecipeError.hash(into:)()
{
  return sub_244533EE8();
}

uint64_t RecipeBuilder.BuildRecipeError.hashValue.getter()
{
  sub_244533EDC();
  sub_244533EE8();
  return sub_244533EF4();
}

void RecipeBuilder.buildRecipe(at:overwrite:)(uint64_t a1, int a2)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  unsigned int v20;
  void *v21;
  unsigned int v22;
  id v23;
  void *v24;
  unsigned int v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  id v48;
  _BYTE *v49;
  id v50;
  char *v51;
  id v52;
  void *v53;
  _BYTE *v54;
  _OWORD *v55;
  void *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  id v63[3];
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  unint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;

  LODWORD(v80) = a2;
  v91 = *MEMORY[0x24BDAC8D0];
  v64 = sub_244533264();
  v63[1] = *(id *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v63[2] = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24453333C();
  v76 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2445333CC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v79 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v77 = (char *)v63 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v63 - v13;
  v15 = *v2;
  v16 = v2[1];
  v72 = v2[2];
  v73 = (uint64_t)v15;
  v74 = v2[3];
  v75 = (unint64_t)v16;
  v71 = v2[4];
  v68 = v2[5];
  v67 = v2[6];
  v66 = (uint64_t)v2[7];
  v69 = (uint64_t)v2[8];
  v65 = v2[9];
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_244533330();
  sub_2445333A8();
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v78 = v7;
  v18(v14, v7);
  v19 = (void *)sub_24453393C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_fileExistsAtPath_, v19);

  if (v20)
  {
    if ((v80 & 1) == 0)
    {
      sub_244520C34();
      swift_allocError();
      *v49 = 0;
      goto LABEL_11;
    }
    v21 = (void *)sub_244533378();
    v81 = 0;
    v22 = objc_msgSend(v17, sel_removeItemAtURL_error_, v21, &v81);

    if (!v22)
    {
      v52 = (id)v81;
      v53 = (void *)sub_244533300();

      swift_willThrow();
      sub_244520C34();
      swift_allocError();
      *v54 = 1;
      swift_willThrow();

      goto LABEL_12;
    }
    v23 = (id)v81;
  }
  v24 = (void *)sub_244533378();
  v81 = 0;
  v25 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v24, 1, 0, &v81);

  v26 = (id)v81;
  if (!v25)
  {
    v48 = (id)v81;
    sub_244533300();

LABEL_11:
    swift_willThrow();
LABEL_12:

    return;
  }
  v80 = (void (*)(uint64_t, uint64_t))v18;
  v81 = 0x73656972657551;
  v82 = 0xE700000000000000;
  v27 = *MEMORY[0x24BDCD7A0];
  v28 = v76;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 104);
  v29(v6, v27, v4);
  sub_2444FE9D8();
  v63[0] = v17;
  v30 = v26;
  v31 = v77;
  sub_2445333C0();
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v6, v4);
  swift_bridgeObjectRelease();
  v81 = 0x6A2E657069636572;
  v82 = 0xEB000000006E6F73;
  v29(v6, v27, v4);
  v33 = v79;
  v34 = v63[0];
  sub_2445333C0();
  v32(v6, v4);
  swift_bridgeObjectRelease();
  v35 = (void *)sub_244533378();
  v81 = 0;
  LODWORD(v27) = objc_msgSend(v34, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v35, 0, 0, &v81);

  v36 = (id)v81;
  if ((_DWORD)v27)
  {
    v81 = v73;
    v82 = v75;
    v37 = v71;
    v83 = v72;
    v84 = v74;
    v38 = v68;
    v85 = v71;
    v86 = v68;
    v39 = (uint64_t)v31;
    v40 = v67;
    v41 = v66;
    v87 = v67;
    v88 = v66;
    v42 = v69;
    v43 = v65;
    v89 = v69;
    v90 = v65;
    v44 = v36;
    v45 = v70;
    sub_24452009C(v41, (void *)0x7377656976, (void *)0xE500000000000000, v39);
    if (v45)
    {

      v46 = v78;
      v47 = v80;
      v80((uint64_t)v79, v78);
      v47(v39, v46);
      return;
    }
    v81 = v73;
    v82 = v75;
    v83 = v72;
    v84 = v74;
    v85 = v37;
    v86 = v38;
    v87 = v40;
    v88 = v41;
    v89 = v42;
    v90 = v43;
    sub_24452009C(v42, (void *)0x736B636F6C62, (void *)0xE600000000000000, v39);
    v31 = (char *)v39;
    sub_244533294();
    swift_allocObject();
    sub_244533288();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573694D8);
    v55 = (_OWORD *)swift_allocObject();
    v55[1] = xmmword_244538F30;
    sub_244533258();
    sub_24453324C();
    v81 = (uint64_t)v55;
    sub_244520B5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2573694E8);
    sub_244520BA4();
    sub_244533B70();
    v56 = v71;
    sub_244533270();
    v81 = v73;
    v82 = v75;
    v83 = v72;
    v84 = v74;
    v85 = v56;
    sub_244520BF0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = sub_24453327C();
    v61 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v79;
    sub_244533408();

    sub_2444F53D0(v59, v61);
    swift_release();
    v51 = v62;
  }
  else
  {
    v50 = (id)v81;
    sub_244533300();

    swift_willThrow();
    v51 = v33;
  }
  v57 = v78;
  v58 = (void (*)(char *, uint64_t))v80;
  v80((uint64_t)v51, v78);
  v58(v31, v57);
}

void sub_24452009C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27[3];

  v24 = a4;
  v27[2] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_24453333C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2445333CC();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v15 = v14;
  v23 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    v27[0] = a2;
    v27[1] = a3;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCD7A0], v7);
    sub_2444FE9D8();
    sub_2445333C0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v16 = (void *)sub_244533378();
    v27[0] = 0;
    v17 = objc_msgSend(v15, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v16, 0, 0, v27);

    v19 = v27[0];
    if (v17)
    {
      MEMORY[0x24BDAC7A8](v18);
      *(&v22 - 2) = (uint64_t)v13;
      v20 = v19;
      sub_2445213A8(v23, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244521390);
    }
    else
    {
      v21 = v27[0];
      sub_244533300();

      swift_willThrow();
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  }
  else
  {

  }
}

uint64_t static RecipeBuilder.buildRecipe(at:with:viewQueries:overwrite:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD v47[6];
  uint64_t v48;

  LODWORD(v34) = a5;
  v36 = a2;
  v8 = sub_2445333CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  sub_244533384();
  v12 = sub_24453336C();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x24BEE4AF8];
  v16 = sub_2444F5674(MEMORY[0x24BEE4AF8]);
  v17 = sub_2444F5A80(v15);
  v18 = sub_2444F5960(v15);
  if (*(_QWORD *)(a4 + 16))
    v19 = &unk_251524830;
  else
    v19 = (void *)v15;
  v47[3] = &type metadata for AdHocBlock;
  v47[4] = &off_2515277A8;
  v20 = (_QWORD *)swift_allocObject();
  v47[0] = v20;
  v20[2] = v12;
  v20[3] = v14;
  v20[4] = v36;
  v20[5] = a3;
  v37 = v12;
  v38 = v14;
  v39 = 1;
  v40 = v19;
  v41 = v15;
  v42 = v16;
  v43 = v17;
  v44 = a4;
  v45 = v18;
  v46 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v48;
  RecipeBuilder.append(_:)(v47);
  if (v21)
  {
    v48 = v38;
    v35 = v41;
    v36 = v40;
    v33 = v43;
    v34 = v42;
    v32[1] = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v37;
    v24 = v38;
    v48 = v38;
    v25 = v40;
    v33 = v39;
    v36 = 0;
    v26 = v41;
    v27 = v42;
    v28 = v43;
    v29 = v44;
    v31 = v45;
    v30 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    v37 = v23;
    v38 = v24;
    v39 = v33;
    v40 = v25;
    v41 = v26;
    v42 = v27;
    v43 = v28;
    v44 = v29;
    v45 = v31;
    v46 = v30;
    RecipeBuilder.buildRecipe(at:overwrite:)(v35, v34 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24452064C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a2;
  v25 = a5;
  v23 = a4;
  v31 = sub_244533990();
  v26 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24453333C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2445333CC();
  v13 = *(_QWORD *)(v22 - 8);
  v14 = MEMORY[0x24BDAC7A8](v22);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v22 - v17;
  v29 = a3;
  v30 = v23;
  v27 = a1;
  v28 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDCD7A0], v9);
  sub_2444FE9D8();
  sub_2445333C0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24453339C();
  v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20 = v22;
  v19(v16, v22);
  sub_244533984();
  sub_244533B64();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v31);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v20);
}

_QWORD *sub_24452084C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    *result = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void _s12PoirotBlocks18RecipeBuilderErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_244520920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;

  if (v5)
  {
    v7 = 0;
  }
  else if (v0 == v2 && v1 == v3)
  {
    LOBYTE(v5) = 0;
    v4 = 0;
    v7 = 1;
  }
  else
  {
    v7 = sub_244533DF8();
    LOBYTE(v5) = v4;
  }
  sub_244520CFC(v2, v3, v5);
  sub_244520CFC(v0, v1, v4);
  sub_244520D24(v0, v1, v4);
  sub_244520D24(v2, v3, v5);
  return v7 & 1;
}

unint64_t sub_244520A78()
{
  unint64_t result;

  result = qword_2573694C8;
  if (!qword_2573694C8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeBuilder.TokenError, &type metadata for RecipeBuilder.TokenError);
    atomic_store(result, (unint64_t *)&qword_2573694C8);
  }
  return result;
}

unint64_t sub_244520ABC()
{
  unint64_t result;

  result = qword_2573694D0;
  if (!qword_2573694D0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeBuilderError, &type metadata for RecipeBuilderError);
    atomic_store(result, (unint64_t *)&qword_2573694D0);
  }
  return result;
}

uint64_t sub_244520B00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_244520B5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573694E0;
  if (!qword_2573694E0)
  {
    v1 = sub_244533264();
    result = MEMORY[0x2495115A0](MEMORY[0x24BDCB2C8], v1);
    atomic_store(result, (unint64_t *)&qword_2573694E0);
  }
  return result;
}

unint64_t sub_244520BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2573694F0;
  if (!qword_2573694F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2573694E8);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2573694F0);
  }
  return result;
}

unint64_t sub_244520BF0()
{
  unint64_t result;

  result = qword_2573694F8;
  if (!qword_2573694F8)
  {
    result = MEMORY[0x2495115A0](&unk_24453657C, &type metadata for AggregationRecipe);
    atomic_store(result, (unint64_t *)&qword_2573694F8);
  }
  return result;
}

unint64_t sub_244520C34()
{
  unint64_t result;

  result = qword_257369500;
  if (!qword_257369500)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeBuilder.BuildRecipeError, &type metadata for RecipeBuilder.BuildRecipeError);
    atomic_store(result, (unint64_t *)&qword_257369500);
  }
  return result;
}

uint64_t sub_244520C78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_244520CAC()
{
  unint64_t result;

  result = qword_257369508;
  if (!qword_257369508)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for RecipeBuilder.BuildRecipeError, &type metadata for RecipeBuilder.BuildRecipeError);
    atomic_store(result, (unint64_t *)&qword_257369508);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RecipeBuilderError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_24452110C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_244520CFC);
}

uint64_t sub_244520CFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for RecipeBuilderError(uint64_t a1)
{
  return sub_244520D24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_244520D24(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *assignWithCopy for RecipeBuilderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_244521168(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_244520CFC, (void (*)(uint64_t, uint64_t, uint64_t))sub_244520D24);
}

uint64_t *assignWithTake for RecipeBuilderError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2445211D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_244520D24);
}

ValueMetadata *type metadata accessor for RecipeBuilderError()
{
  return &type metadata for RecipeBuilderError;
}

uint64_t destroy for RecipeBuilder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RecipeBuilder(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RecipeBuilder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RecipeBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeBuilder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder()
{
  return &type metadata for RecipeBuilder;
}

uint64_t initializeBufferWithCopyOfBuffer for RecipeBuilder.TokenError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_24452110C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2445210C4);
}

uint64_t sub_2445210C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for RecipeBuilder.TokenError(uint64_t a1)
{
  return sub_2445210F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2445210F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24452110C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for RecipeBuilder.TokenError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_244521168(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2445210C4, (void (*)(uint64_t, uint64_t, uint64_t))sub_2445210F0);
}

uint64_t *sub_244521168(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for RecipeBuilder.TokenError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2445211D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2445210F0);
}

uint64_t *sub_2445211D4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipeBuilder.TokenError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipeBuilder.TokenError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder.TokenError()
{
  return &type metadata for RecipeBuilder.TokenError;
}

uint64_t storeEnumTagSinglePayload for RecipeBuilder.BuildRecipeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244521300 + 4 * byte_244538C41[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244521334 + 4 * byte_244538C3C[v4]))();
}

uint64_t sub_244521334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452133C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244521344);
  return result;
}

uint64_t sub_244521350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244521358);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24452135C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244521364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecipeBuilder.BuildRecipeError()
{
  return &type metadata for RecipeBuilder.BuildRecipeError;
}

ValueMetadata *type metadata accessor for AdHocBlock()
{
  return &type metadata for AdHocBlock;
}

uint64_t sub_244521390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_24452064C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_2445213A8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = v2;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = 16 * i;
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v16);
    v22 = *v20;
    v21 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v18, v19, v22, v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v25)
      return swift_release();
    v14 = *(_QWORD *)(v24 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 2;
      if (v10 + 2 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 3;
      if (v10 + 3 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
      {
LABEL_14:
        v10 = v15;
        goto LABEL_15;
      }
      v23 = v10 + 4;
      if (v10 + 4 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v23);
      v10 += 4;
      if (!v14)
        break;
    }
LABEL_15:
    v8 = (v14 - 1) & v14;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v25)
      return swift_release();
    v14 = *(_QWORD *)(v24 + 8 * v10);
    ++v23;
    if (v14)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2445215B4(uint64_t *a1)
{
  uint64_t v1;

  return sub_24451F1F4(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_2445215D0(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t *v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *);
  uint64_t v35;
  uint64_t v36;

  v29 = a4;
  v34 = a2;
  v35 = a3;
  v6 = type metadata accessor for DatasetColumnDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (uint64_t)&v28 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v28 - v13;
  v15 = MEMORY[0x24BEE4AF8];
  v36 = MEMORY[0x24BEE4AF8];
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v16 = 0;
    v30 = a1;
    while (v16 < *(_QWORD *)(a1 + 16))
    {
      v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v20 = *(_QWORD *)(v7 + 72);
      sub_2444E8C24(a1 + v19 + v20 * v16, (uint64_t)v14);
      v15 = v35;
      v21 = v34(v14);
      if (v4)
      {
        sub_2444FA12C((uint64_t)v14);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if ((v21 & 1) != 0)
      {
        sub_2444F27D4((uint64_t)v14, v33);
        v27 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2444F0D94(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v27 = v36;
        }
        v18 = *(_QWORD *)(v27 + 16);
        v17 = *(_QWORD *)(v27 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_2444F0D94(v17 > 1, v18 + 1, 1);
          v27 = v36;
        }
        *(_QWORD *)(v27 + 16) = v18 + 1;
        result = sub_2444F27D4(v33, v27 + v19 + v18 * v20);
      }
      else
      {
        sub_2444E8C24((uint64_t)v14, v32);
        v22 = v29;
        v23 = *v29;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v22 = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v23 = sub_2445015AC(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
          *v29 = v23;
        }
        v26 = *(_QWORD *)(v23 + 16);
        v25 = *(_QWORD *)(v23 + 24);
        if (v26 >= v25 >> 1)
        {
          v23 = sub_2445015AC(v25 > 1, v26 + 1, 1, v23);
          *v29 = v23;
        }
        *(_QWORD *)(v23 + 16) = v26 + 1;
        sub_2444F27D4(v32, v23 + v19 + v26 * v20);
        result = sub_2444FA12C((uint64_t)v14);
      }
      ++v16;
      a1 = v30;
      if (v31 == v16)
      {
        v15 = v36;
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_244521870(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD **v6;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  v2 = v1;
  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = (_QWORD **)(v1 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD **)(v1 + 24);
  *(_QWORD *)(v2 + 24) = 0x8000000000000000;
  v10 = sub_2444EB9F0(v4, v3);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    v8 = sub_244500ED8(0, v8[2] + 1, 1, v8);
    v6[v10] = v8;
    goto LABEL_10;
  }
  v14 = v9;
  if (v8[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_2444F8D78();
  }
  else
  {
    sub_2444ED74C(v13, isUniquelyReferenced_nonNull_native);
    v15 = sub_2444EB9F0(v4, v3);
    if ((v14 & 1) != (v16 & 1))
    {
      result = sub_244533E88();
      __break(1u);
      return result;
    }
    v10 = v15;
  }
  *v6 = v8;
  swift_bridgeObjectRelease();
  v17 = (uint64_t)*v6;
  if ((v14 & 1) == 0)
  {
    sub_2444F82D4(v10, v4, v3, MEMORY[0x24BEE4AF8], *v6);
    swift_bridgeObjectRetain();
  }
  v6 = *(_QWORD ***)(v17 + 56);
  v8 = v6[v10];
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v6[v10] = v8;
  if ((v18 & 1) == 0)
    goto LABEL_14;
LABEL_10:
  v20 = v8[2];
  v19 = v8[3];
  if (v20 >= v19 >> 1)
  {
    v8 = sub_244500ED8((_QWORD *)(v19 > 1), v20 + 1, 1, v8);
    v6[v10] = v8;
  }
  v8[2] = v20 + 1;
  v8[v20 + 4] = v5;
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244521A50(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  v1 = *(_QWORD *)result;
  v2 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(v1 + 48);
    do
    {
      v4 = *(v3 - 2);
      v5 = *(v3 - 1);
      v6 = *v3;
      v3 += 3;
      v7[0] = v4;
      v7[1] = v5;
      v7[2] = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244521870(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244521AF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2445369D0;
  swift_bridgeObjectRetain();
  v7 = a3;
  BlockLogEntry.init(useCase:error:)(a1, a2, a3, v6 + 32);
  return v6;
}

uint64_t sub_244521B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_244500B88(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_244500B88((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_244522464;
  v11[5] = v5;
  return swift_endAccess();
}

uint64_t sub_244521C80@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = a1();
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_244521CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD **v36;
  uint64_t v37;

  v2 = v1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369610);
  v3 = sub_2445338DC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v35 = v0;
    v36 = (_QWORD **)(v0 + 16);
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v3 + 48);
    do
    {
      v6 = *(v5 - 2);
      v7 = *(v5 - 1);
      v8 = *v5;
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v6;
      v9[3] = v7;
      v9[4] = v8;
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = sub_244522424;
      *(_QWORD *)(v10 + 24) = v9;
      swift_beginAccess();
      v11 = *v36;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v36 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_244500B88(0, v11[2] + 1, 1, v11);
        *v36 = v11;
      }
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        v11 = sub_244500B88((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
        *v36 = v11;
      }
      v11[2] = v14 + 1;
      v15 = &v11[2 * v14];
      v15[4] = sub_244522464;
      v15[5] = v10;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v5 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v0 = v35;
    v2 = v1;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain_n();
  v18 = v16 + 40;
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v20 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v18 - 8);
    v21 = swift_retain();
    v20(&v37, v21);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();
      return (uint64_t)v19;
    }
    swift_release();
    v22 = v37;
    v23 = *(_QWORD *)(v37 + 16);
    v24 = v19[2];
    v25 = v24 + v23;
    if (__OFADD__(v24, v23))
      break;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    if ((v26 & 1) != 0 && v25 <= v19[3] >> 1)
    {
      if (*(_QWORD *)(v22 + 16))
        goto LABEL_23;
    }
    else
    {
      if (v24 <= v25)
        v27 = v24 + v23;
      else
        v27 = v24;
      v19 = sub_244500C94((_QWORD *)v26, v27, 1, v19);
      if (*(_QWORD *)(v22 + 16))
      {
LABEL_23:
        v28 = v19[2];
        if ((v19[3] >> 1) - v28 < v23)
          goto LABEL_38;
        v29 = (unint64_t)&v19[5 * v28 + 4];
        if (v22 + 32 < v29 + 40 * v23 && v29 < v22 + 32 + 40 * v23)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v23)
        {
          v31 = v19[2];
          v32 = __OFADD__(v31, v23);
          v33 = v31 + v23;
          if (v32)
            goto LABEL_39;
          v19[2] = v33;
        }
        goto LABEL_12;
      }
    }
    if (v23)
      goto LABEL_37;
LABEL_12:
    swift_bridgeObjectRelease();
    v18 += 16;
    if (!--v17)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v19;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

uint64_t sub_2445220A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_244533264();
  MEMORY[0x24BDAC7A8](v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = a2;
  sub_244509444(a1, a2, a3, (uint64_t)&v21);
  v7 = v21;
  v8 = v22;
  v9 = v23;
  v25 = v24;
  sub_244533294();
  swift_allocObject();
  sub_244533288();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694D8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_244538F30;
  sub_244533258();
  sub_24453324C();
  v21 = v10;
  sub_244520B5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694E8);
  sub_244520BA4();
  sub_244533B70();
  sub_244533270();
  v21 = v7;
  v22 = v8;
  v23 = v9;
  sub_244522478();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_24453327C();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = v11;
    v14 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v24 = v25;
    swift_bridgeObjectRetain();
    v16 = sub_2445097CC();
    v25 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_244538F30;
    *(_QWORD *)(v8 + 32) = a1;
    *(_QWORD *)(v8 + 40) = v19;
    *(_BYTE *)(v8 + 48) = 0;
    *(_QWORD *)(v8 + 56) = v13;
    *(_QWORD *)(v8 + 64) = v14;
    *(_QWORD *)(v8 + 72) = a1;
    *(_QWORD *)(v8 + 80) = v19;
    *(_BYTE *)(v8 + 88) = 1;
    v18 = v25;
    *(_QWORD *)(v8 + 96) = v16;
    *(_QWORD *)(v8 + 104) = v18;
    swift_bridgeObjectRetain();
  }
  swift_release();
  return v8;
}

uint64_t sub_244522380()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BlockLogEntryCollector()
{
  return objc_opt_self();
}

uint64_t sub_2445223D8()
{
  return sub_244521CAC();
}

uint64_t sub_2445223F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244522424()
{
  uint64_t *v0;

  return sub_2445220A0(v0[2], v0[3], v0[4]);
}

uint64_t sub_244522440()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244522464@<X0>(uint64_t *a1@<X8>)
{
  return sub_2445224BC(a1);
}

unint64_t sub_244522478()
{
  unint64_t result;

  result = qword_257369618;
  if (!qword_257369618)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnLayout, &type metadata for DatasetColumnLayout);
    atomic_store(result, (unint64_t *)&qword_257369618);
  }
  return result;
}

uint64_t sub_2445224BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

void _s12PoirotBlocks12DatasetErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_244522534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;

  if (v5)
  {
    v7 = 0;
  }
  else if (v0 == v2 && v1 == v3)
  {
    LOBYTE(v5) = 0;
    v4 = 0;
    v7 = 1;
  }
  else
  {
    v7 = sub_244533DF8();
    LOBYTE(v5) = v4;
  }
  sub_244520CFC(v2, v3, v5);
  sub_244520CFC(v0, v1, v4);
  sub_244520D24(v0, v1, v4);
  sub_244520D24(v2, v3, v5);
  return v7 & 1;
}

uint64_t sub_244522690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_244520CFC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DatasetError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_244520CFC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_244520D24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DatasetError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_244520D24(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DatasetError()
{
  return &type metadata for DatasetError;
}

uint64_t sub_244522780()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30[2];
  _OWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  v1 = sub_244533990();
  MEMORY[0x24BDAC7A8](v1);
  v30[1] = (unint64_t)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_244533264();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *v0;
  v5 = v0[1];
  v31 = v0;
  v36 = v4;
  v37 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369700);
  v6 = swift_allocObject();
  v33 = xmmword_2445369D0;
  *(_OWORD *)(v6 + 16) = xmmword_2445369D0;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 32) = 0xD000000000000022;
  *(_QWORD *)(v6 + 40) = 0x8000000244535460;
  sub_2445235C0();
  sub_244533EC4();
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v33;
  *(_QWORD *)(v8 + 56) = v7;
  *(_QWORD *)(v8 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v8 + 40) = 0x8000000244535490;
  sub_244533EC4();
  swift_bridgeObjectRelease();
  sub_244533294();
  swift_allocObject();
  sub_244533288();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694D8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_244538F30;
  sub_244533258();
  sub_24453324C();
  *(_QWORD *)&v34 = v9;
  sub_244520B5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694E8);
  sub_244520BA4();
  sub_244533B70();
  sub_244533270();
  v34 = v36;
  v35 = v37;
  sub_244523604((uint64_t)&v36);
  sub_24452362C();
  v10 = v32;
  v11 = sub_24453327C();
  if (v10)
  {
    sub_244523670((uint64_t)&v36);
    swift_release();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v33;
    *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v13 + 32) = 0xD000000000000020;
    *(_QWORD *)(v13 + 40) = 0x80000002445354B0;
LABEL_10:
    sub_244533EC4();
    return swift_bridgeObjectRelease();
  }
  v14 = v11;
  v15 = v31;
  v16 = v12;
  sub_244523670((uint64_t)&v36);
  sub_244533984();
  v32 = v14;
  v30[0] = v16;
  v17 = sub_244533978();
  if (v18)
  {
    v19 = v17;
    v20 = v18;
    v40 = *((_QWORD *)v15 + 4);
    v21 = v40;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v33;
    *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v20;
    sub_244533EC4();
    swift_bridgeObjectRelease();
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v33;
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v23 + 32) = 0xD000000000000019;
    *(_QWORD *)(v23 + 40) = 0x8000000244535520;
    sub_244533EC4();
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v21 + 16);
    if (v24)
    {
      v25 = (__int128 *)(v21 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v26 = *v25;
        v27 = v25[1];
        v39 = *((_QWORD *)v25 + 4);
        v38[0] = v26;
        v38[1] = v27;
        sub_244523698((uint64_t)v38);
        sub_244522D14((uint64_t)v38);
        sub_2445236D8((uint64_t)v38);
        v25 = (__int128 *)((char *)v25 + 40);
        --v24;
      }
      while (v24);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_2444F53D0(v32, v30[0]);
    swift_release();
    sub_2444FEAB4((uint64_t)&v40);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v33;
    *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v28 + 32) = 0xD000000000000020;
    *(_QWORD *)(v28 + 40) = 0x80000002445354B0;
    goto LABEL_10;
  }
  result = sub_244533C84();
  __break(1u);
  return result;
}

uint64_t sub_244522D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_244533990();
  MEMORY[0x24BDAC7A8](v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369700);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2445369D0;
  sub_244533BAC();
  sub_2445339D8();
  swift_bridgeObjectRetain();
  sub_2445339D8();
  swift_bridgeObjectRelease();
  sub_2445339D8();
  v4 = *(unsigned __int8 *)(a1 + 16);
  sub_244533C30();
  sub_2445339D8();
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0xE000000000000000;
  sub_2445235C0();
  sub_244533EC4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
    __asm { BR              X9 }
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2445369D0;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = 0x3E4C4C554E3CLL;
  *(_QWORD *)(v6 + 40) = 0xE600000000000000;
  sub_244533EC4();
  swift_bridgeObjectRelease();
  return sub_244523228(a1);
}

uint64_t sub_244523228(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257369700);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2445369D0;
  BYTE8(v4) = 0;
  sub_244533BAC();
  sub_2445339D8();
  swift_bridgeObjectRetain();
  sub_2445339D8();
  swift_bridgeObjectRelease();
  sub_2445339D8();
  *(_QWORD *)&v4 = *(unsigned __int8 *)(a1 + 16);
  sub_244533C30();
  sub_2445339D8();
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = *(_QWORD *)((char *)&v4 + 1);
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_2445235C0();
  sub_244533EC4();
  return swift_bridgeObjectRelease();
}

void sub_24452339C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_244522780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for ConsoleLogger()
{
  return objc_opt_self();
}

void sub_244523568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24452339C(a1, a2, a3);
}

unint64_t sub_24452357C()
{
  unint64_t result;

  result = qword_257369708;
  if (!qword_257369708)
  {
    result = MEMORY[0x2495115A0](&unk_244538198, &type metadata for OutputStreamToStdErr);
    atomic_store(result, (unint64_t *)&qword_257369708);
  }
  return result;
}

unint64_t sub_2445235C0()
{
  unint64_t result;

  result = qword_257369710;
  if (!qword_257369710)
  {
    result = MEMORY[0x2495115A0](&unk_244538158, &type metadata for OutputStreamToStdOut);
    atomic_store(result, (unint64_t *)&qword_257369710);
  }
  return result;
}

uint64_t sub_244523604(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_24452362C()
{
  unint64_t result;

  result = qword_257369718;
  if (!qword_257369718)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockLogMetadata, &type metadata for BlockLogMetadata);
    atomic_store(result, (unint64_t *)&qword_257369718);
  }
  return result;
}

uint64_t sub_244523670(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244523698(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_244510530(v2, v3);
  return a1;
}

uint64_t sub_2445236D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_244510544(v2, v3);
  return a1;
}

uint64_t dispatch thunk of SupportsIgnoreSQLFailure.ignoreSQLFailure.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id BiomeUDFContext.biomeDatabase.getter()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + qword_257369720);
  if (v1)
    return v1;
  result = (id)sub_244533C84();
  __break(1u);
  return result;
}

id sub_244523794@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id result;

  v2 = *(void **)(*a1 + qword_257369720);
  if (v2)
  {
    *a2 = v2;
    return v2;
  }
  else
  {
    result = (id)sub_244533C84();
    __break(1u);
  }
  return result;
}

void sub_244523810(void *a1)
{
  uint64_t v1;
  void *v3;

  objc_msgSend(a1, sel_db);
  sub_2445336B4();
  swift_allocObject();
  sub_244533690();
  sub_244533468();
  v3 = *(void **)(v1 + qword_257369720);
  *(_QWORD *)(v1 + qword_257369720) = a1;

}

uint64_t sub_244523938()
{
  *(_QWORD *)(swift_allocObject() + qword_257369720) = 0;
  return sub_244533480();
}

void static BiomeUDFContext.makeUDFContext(withSQLiteConnection:)()
{
  sub_244533C84();
  __break(1u);
}

char *static BiomeUDFContext.makeUDFContext(withStreamTables:manifestData:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v4 = sub_244533888();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24453387C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2573684F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369728);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2444F9FF0(a2, (uint64_t)v13, &qword_2573684F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    v17 = sub_24453381C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
LABEL_6:
    v10 = (char *)sub_244523E04(v25, (uint64_t)v16);
    sub_24452454C((uint64_t)v16);
    return v10;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
  v18 = sub_244533864();
  v20 = v19;
  sub_244533870();
  sub_2445336FC();
  if (!v2)
  {
    sub_2444F53D0(v18, v20);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v21 = sub_24453381C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 0, 1, v21);
    goto LABEL_6;
  }
  sub_2444F53D0(v18, v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v10;
}

uint64_t static BiomeUDFContext.makeUDFContext(withStreamTables:manifest:)(uint64_t a1, uint64_t a2)
{
  return sub_244523E04(a1, a2);
}

id sub_244523C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];

  sub_244524644(a2, (uint64_t)&v7);
  sub_2444E8B00(&v7, (uint64_t)v10);
  sub_2444E8B00(v10, (uint64_t)&v7);
  v3 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  v5 = sub_244502808(a1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v5;
}

void BiomeUDFContext.__allocating_init(databaseConnection:ownsConnection:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void BiomeUDFContext.init(databaseConnection:ownsConnection:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_244523D34()
{
  uint64_t v0;

}

uint64_t BiomeUDFContext.deinit()
{
  uint64_t v0;

  v0 = sub_24453348C();

  return v0;
}

uint64_t BiomeUDFContext.__deallocating_deinit()
{

  return swift_deallocClassInstance();
}

id sub_244523DB4(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_244523E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id (*v36)(uint64_t);
  void *v37;
  __int128 *p_aBlock;
  void *v39;
  id (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _OWORD *v44;
  __int128 v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  _QWORD v52[2];
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 aBlock;
  id (*v59)(uint64_t, void *);
  void *v60;
  id (*v61)(uint64_t);
  _OWORD *v62;
  __int128 v63;
  _OWORD v64[2];
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v57 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369728);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v52 - v8;
  v10 = sub_24453381C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v52 - v15;
  type metadata accessor for BiomeUDFContext();
  *(_QWORD *)(swift_allocObject() + qword_257369720) = 0;
  v55 = sub_244533480();
  if (v2)
    return v55;
  v54 = v14;
  sub_2444F9FF0(v57, (uint64_t)v9, &qword_257369728);
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v53(v9, 1, v10) == 1)
  {
    v57 = 0;
    sub_24452454C((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    sub_244533474();
    v57 = 0;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  v19 = a1;
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
    goto LABEL_26;
  v56 = v11;
  v21 = a1 + 32;
  v52[1] = v19;
  swift_bridgeObjectRetain();
  v22 = v21;
  v23 = v20;
  do
  {
    sub_244524644(v22, (uint64_t)&aBlock);
    sub_2444E8B00(&aBlock, (uint64_t)&v63);
    sub_2444E8B00(&v63, (uint64_t)v68);
    v24 = v69;
    v25 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    if (!(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v7, 1, 1, v10);
LABEL_10:
      sub_24452454C((uint64_t)v7);
      goto LABEL_11;
    }
    sub_2445334BC();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    v26 = v53(v7, 1, v10);
    v27 = v56;
    v28 = v54;
    if (v26 == 1)
      goto LABEL_10;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v54, v7, v10);
    v29 = v57;
    sub_244533474();
    v57 = v29;
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v10);
LABEL_29:
      swift_release();
      swift_bridgeObjectRelease();
      return v55;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v10);
LABEL_11:
    v22 += 48;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v30 = v21;
  v31 = v20;
  do
  {
    sub_244524644(v30, (uint64_t)&aBlock);
    sub_2444E8B00(&aBlock, (uint64_t)&v63);
    sub_2444E8B00(&v63, (uint64_t)v68);
    v32 = v69;
    v33 = v70;
    __swift_project_boxed_opaque_existential_1(v68, v69);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33))
    {
      v34 = v57;
      sub_2445334D4();
      swift_release();
      v57 = v34;
      if (v34)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
        goto LABEL_29;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    v30 += 48;
    --v31;
  }
  while (v31);
  swift_bridgeObjectRelease();
  v71 = MEMORY[0x24BEE4AF8];
  sub_244533BE8();
  do
  {
    sub_244524680(v21, (uint64_t)v68);
    sub_244524644((uint64_t)v68, (uint64_t)&aBlock);
    sub_2444E8B00(&aBlock, (uint64_t)&v63);
    sub_2444E8B00(&v63, (uint64_t)&aBlock);
    v39 = v60;
    v40 = v61;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v60);
    LOBYTE(v39) = (*((uint64_t (**)(void *, id (*)(uint64_t)))v40 + 6))(v39, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    sub_244524644((uint64_t)v68, (uint64_t)&aBlock);
    sub_2444E8B00(&aBlock, (uint64_t)&v63);
    if ((v39 & 1) != 0)
    {
      sub_2444E8B00(&v63, (uint64_t)v65);
      v41 = v66;
      v42 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 24))(v41, v42);
      sub_244524680((uint64_t)v68, (uint64_t)&v63);
      v44 = (_OWORD *)swift_allocObject();
      v45 = v64[0];
      v44[1] = v63;
      v44[2] = v45;
      *(_OWORD *)((char *)v44 + 41) = *(_OWORD *)((char *)v64 + 9);
      v46 = objc_allocWithZone(MEMORY[0x24BE0CDA8]);
      v61 = sub_24452475C;
      v62 = v44;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v59 = sub_244523DB4;
      v60 = &block_descriptor_0;
      v47 = _Block_copy(&aBlock);
      objc_msgSend(v46, sel_initWithSchema_publisherBlockWithOptions_acceptPublisherOptions_, v43, v47, 1);

      _Block_release(v47);
      swift_release();
      p_aBlock = (__int128 *)v65;
    }
    else
    {
      sub_2444E8B00(&v63, (uint64_t)&aBlock);
      v35 = v60;
      v36 = v61;
      __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v60);
      v37 = (void *)(*((uint64_t (**)(void *, id (*)(uint64_t)))v36 + 2))(v35, v36);
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0CDA8]), sel_initWithStream_, v37);

      p_aBlock = &aBlock;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)p_aBlock);
    sub_2445246BC((uint64_t)v68);
    sub_244533BC4();
    sub_244533BF4();
    sub_244533C00();
    sub_244533BD0();
    v21 += 48;
    --v20;
  }
  while (v20);
LABEL_26:
  v48 = objc_allocWithZone(MEMORY[0x24BE0CCD0]);
  sub_2445246F0();
  v49 = (void *)sub_244533A44();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v48, sel_initWithVirtualTables_privileges_isColumnAccessLoggingEnabled_enableAuthorizer_error_, v49, 0, 0, 0, 0);

  v17 = v55;
  sub_244523810(v50);
  v51 = v57;
  sub_244533450();
  if (v51)
  {
    swift_release();
    return v55;
  }
  return v17;
}

uint64_t sub_24452454C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369728);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_244524590(id *a1)
{
  sub_244523810(*a1);
}

uint64_t type metadata accessor for BiomeUDFContext()
{
  uint64_t result;

  result = qword_257369730;
  if (!qword_257369730)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2445245F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24452463C()
{
  return type metadata accessor for BiomeUDFContext();
}

uint64_t sub_244524644(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BiomeTableConfig.Container(a2, a1);
  return a2;
}

uint64_t sub_244524680(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BiomeTableConfig(a2, a1);
  return a2;
}

uint64_t sub_2445246BC(uint64_t a1)
{
  destroy for BiomeTableConfig(a1);
  return a1;
}

unint64_t sub_2445246F0()
{
  unint64_t result;

  result = qword_257369780;
  if (!qword_257369780)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257369780);
  }
  return result;
}

uint64_t sub_24452472C()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 56) <= 2u)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

id sub_24452475C(uint64_t a1)
{
  uint64_t v1;

  return sub_244523C50(a1, v1 + 16);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_24452477C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;
  uint64_t result;
  char v38;
  uint64_t v39;
  _BYTE *v40;
  char *v41;
  uint64_t (*v42)(_BYTE *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];
  _QWORD *v48;

  v45 = a4;
  v40 = a5;
  v8 = sub_244533858();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v39) = *a1;
  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = *(_QWORD *)(a3 + 16);
  v44 = *a2;
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2444EB9F0(v11, v10);
    if ((v15 & 1) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v14);
      v11 = *v16;
      v17 = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v17 = v10;
LABEL_6:
  swift_bridgeObjectRetain();
  v42 = (uint64_t (*)(_BYTE *, uint64_t))sub_2445337F8();
  v19 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v48 = (_QWORD *)*v19;
  v21 = v48;
  *v19 = 0x8000000000000000;
  v23 = sub_2444EB9F0(v11, v17);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_18;
  }
  LOBYTE(a1) = v22;
  if (v21[3] >= v26)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_11;
LABEL_18:
    sub_2444F9198();
    goto LABEL_11;
  }
  sub_2444EDE04(v26, isUniquelyReferenced_nonNull_native);
  v27 = sub_2444EB9F0(v11, v17);
  if ((a1 & 1) != (v28 & 1))
  {
    result = sub_244533E88();
    __break(1u);
    return result;
  }
  v23 = v27;
LABEL_11:
  *v19 = v48;
  swift_bridgeObjectRelease();
  v29 = (_QWORD *)*v19;
  swift_bridgeObjectRetain();
  if ((a1 & 1) == 0)
  {
    v30 = (uint64_t)v41;
    sub_244533834();
    sub_2444F83BC(v23, v11, v17, v30, v29);
    swift_bridgeObjectRetain();
  }
  v31 = v29[7];
  swift_bridgeObjectRelease();
  v32 = v31 + *(_QWORD *)(v43 + 72) * v23;
  v33 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v33;
  v35 = v46;
  v36 = sub_244525A40(0, 0, v34, v44, v10, v12, v11, v17, v32);
  if (v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v42(v47, 1);
  }
  else
  {
    v38 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    result = v42(v47, 0);
    *v40 = (v38 | BYTE4(v39)) & 1;
  }
  return result;
}

uint64_t sub_244524A78(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  _QWORD *v18;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t result;
  uint64_t v38[2];
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t);
  int v41;
  _QWORD *v42;
  _BYTE v43[32];
  uint64_t v44;

  v5 = v4;
  v6 = v3;
  v41 = a3;
  v9 = sub_244533858();
  v39 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v12 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a1[1];
  v38[1] = a1[2];
  v44 = MEMORY[0x24BEE4B08];
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_2444EB9F0(v13, (uint64_t)v12);
    if ((v15 & 1) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v14);
      v13 = *v16;
      a1 = (uint64_t *)v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a1;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_6:
  swift_bridgeObjectRetain();
  v38[0] = v6;
  v40 = (void (*)(_BYTE *, uint64_t))sub_2445337F8();
  v18 = v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v42 = (_QWORD *)*v18;
  v20 = v42;
  *v18 = 0x8000000000000000;
  v22 = sub_2444EB9F0(v13, (uint64_t)v12);
  v23 = v20[2];
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_18;
  }
  LOBYTE(a1) = v21;
  if (v20[3] >= v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_11;
LABEL_18:
    sub_2444F9198();
    goto LABEL_11;
  }
  sub_2444EDE04(v25, isUniquelyReferenced_nonNull_native);
  v26 = sub_2444EB9F0(v13, (uint64_t)v12);
  if ((a1 & 1) != (v27 & 1))
  {
    result = sub_244533E88();
    __break(1u);
    return result;
  }
  v22 = v26;
LABEL_11:
  *v18 = v42;
  swift_bridgeObjectRelease();
  v28 = (_QWORD *)*v18;
  swift_bridgeObjectRetain();
  if ((a1 & 1) == 0)
  {
    sub_244533834();
    sub_2444F83BC(v22, v13, (uint64_t)v12, (uint64_t)v11, v28);
    swift_bridgeObjectRetain();
  }
  v29 = v28[7];
  swift_bridgeObjectRelease();
  v30 = v29 + *(_QWORD *)(v39 + 72) * v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368B88);
  v31 = sub_2445338DC();
  v32 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  v33 = sub_244525B10(0, 0, v32, v31, v41 & 1, v13, v12, v30, (uint64_t)&v44);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v40(v43, 1);
  }
  else
  {
    v35 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v40(v43, 0);
    v36 = sub_24452D9A8(0, v44, v38[0]);
    swift_bridgeObjectRelease();
    v34 = v36 | v35;
  }
  return v34 & 1;
}

uint64_t sub_244524DC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD v27[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369788);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244533858();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v27[0] = a1[2];
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v13 = sub_2444EB9F0(v11, v12);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    v16 = v11;
    v17 = v12;
    goto LABEL_6;
  }
  v15 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v13);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  v18 = sub_244533804();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_2444EB9F0(v16, v17), (v20 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v8 + 72) * v19, v7);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v21, 1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_2444EC024((uint64_t)v6, &qword_257369788);
    LOBYTE(v16) = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v22 = sub_24453384C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v27[0];
    swift_bridgeObjectRetain();
    v24 = v27[1];
    v25 = sub_244525CD8(0, v22, v11, v12, v23, v16, v17, v27[3]);
    if (!v24)
      LOBYTE(v16) = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v16 & 1;
}

uint64_t sub_244525080@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, _BYTE *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t result;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(__int128 *, _QWORD);
  uint64_t *v75;
  uint64_t *v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  void (*v79)(__int128 *, _QWORD);
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  _QWORD v102[6];
  char *v103;

  v86 = a6;
  v85 = a5;
  v84 = a4;
  v96 = a3;
  v94 = a7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368470);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v92 = (uint64_t)&v80 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)&v80 - v14;
  v88 = sub_24453375C();
  v87 = *(_QWORD *)(v88 - 8);
  v15 = MEMORY[0x24BDAC7A8](v88);
  v80 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v80 - v17;
  v90 = sub_244533774();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2445337A4();
  v20 = *(_QWORD **)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v103 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369790);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v93) = *a1;
  v26 = *(int *)(v23 + 48);
  v27 = (char *)v25 + v26;
  v28 = (char *)a2 + v26;
  v30 = *a2;
  v29 = a2[1];
  *v25 = *a2;
  v25[1] = v29;
  v31 = (void (*)(char *, char *, uint64_t))v20[2];
  v31((char *)v25 + v26, v28, v19);
  v32 = (void (*)(char *, uint64_t))v20[1];
  swift_bridgeObjectRetain();
  v95 = v32;
  v32(v27, v19);
  v33 = *(int *)(v22 + 48);
  v34 = v19;
  v35 = (char *)v25 + v33;
  v31((char *)v25 + v33, v28, v19);
  v36 = (void (*)(char *, char *, uint64_t))v20[4];
  v37 = v103;
  v38 = v96;
  v36(v103, v35, v34);
  if (!*(_QWORD *)(v38 + 16))
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
LABEL_13:
    v95(v37, v34);
    swift_bridgeObjectRelease();
    result = sub_2444EC024((uint64_t)&v99, &qword_257367FB0);
LABEL_26:
    *v94 = v93;
    return result;
  }
  swift_bridgeObjectRetain();
  v39 = sub_2444EB9F0(v30, v29);
  if ((v40 & 1) != 0)
  {
    sub_2444E8B18(*(_QWORD *)(v38 + 56) + 40 * v39, (uint64_t)&v99);
  }
  else
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
  }
  v42 = v91;
  v41 = v92;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v100 + 1))
    goto LABEL_13;
  sub_2444E8B00(&v99, (uint64_t)v102);
  sub_24453378C();
  v43 = v89;
  v44 = v90;
  if ((*(unsigned int (**)(char *, uint64_t))(v89 + 88))(v42, v90) != *MEMORY[0x24BE74608])
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    v95(v37, v34);
    result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v44);
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  v45 = sub_244533798();
  if (!v46)
  {
    swift_bridgeObjectRelease();
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    result = ((uint64_t (*)(char *, uint64_t))v95)(v37, v34);
    goto LABEL_26;
  }
  v47 = v45;
  v48 = v46;
  sub_2444E8B18((uint64_t)v102, (uint64_t)&v99);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368B88);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v99 = 0;
    *((_QWORD *)&v99 + 1) = 0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    __swift_project_boxed_opaque_existential_1(v102, v102[3]);
    swift_getDynamicType();
    sub_244533F60();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    sub_2445339D8();
    sub_2445339D8();
    v61 = v99;
    sub_2444E8BE0();
    swift_allocError();
    *(_OWORD *)v62 = v61;
    *(_BYTE *)(v62 + 16) = 5;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    return ((uint64_t (*)(char *, uint64_t))v95)(v37, v34);
  }
  swift_bridgeObjectRelease();
  v49 = v98;
  v96 = v97;
  swift_bridgeObjectRetain();
  v50 = sub_2445337EC();
  v51 = *(_QWORD *)(v50 + 16);
  v92 = v47;
  if (v51)
  {
    v52 = sub_2444EB9F0(v47, v48);
    v53 = v88;
    v54 = v87;
    v55 = (uint64_t)v82;
    if ((v56 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v82, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v87 + 72) * v52, v88);
      v57 = *(char **)(v54 + 56);
      v58 = (char *)v55;
      v59 = 0;
    }
    else
    {
      v57 = *(char **)(v87 + 56);
      v58 = v82;
      v59 = 1;
    }
  }
  else
  {
    v54 = v87;
    v57 = *(char **)(v87 + 56);
    v55 = (uint64_t)v82;
    v58 = v82;
    v59 = 1;
    v53 = v88;
  }
  v91 = v57;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v57)(v58, v59, 1, v53);
  sub_244516140(v55, v41, &qword_257368470);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v41, 1, v53) == 1)
  {
    v63 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2444F5BA0(MEMORY[0x24BEE4AF8]);
    sub_244525BD8(v63);
    v64 = v83;
    sub_244533738();
    sub_2444EC024(v41, &qword_257368470);
  }
  else
  {
    v64 = v83;
    (*(void (**)(void))(v54 + 32))();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (*(_QWORD *)(sub_244533750() + 16))
  {
    sub_2444EB9F0(v96, v49);
    if ((v65 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v64, v88);
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = v87;
  v67 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v68 = v80;
  v69 = v88;
  v67(v80, v64, v88);
  v70 = sub_24453372C();
  v90 = v48;
  v71 = v64;
  v72 = v70;
  v73 = *(void (**)(char *, uint64_t))(v66 + 8);
  v73(v68, v69);
  v74 = (void (*)(__int128 *, _QWORD))sub_244533744();
  v93 = v34;
  v76 = v75;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v97 = *v76;
  *v76 = 0x8000000000000000;
  sub_2444F8004(v72, v96, v49, isUniquelyReferenced_nonNull_native);
  *v76 = v97;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74(&v99, 0);
  v78 = (uint64_t)v81;
  v67(v81, v71, v69);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v91)(v78, 0, 1, v69);
  v79 = (void (*)(__int128 *, _QWORD))sub_2445337E0();
  sub_2444FC758(v78, v92, v90);
  v79(&v99, 0);
  v73(v71, v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  result = ((uint64_t (*)(char *, uint64_t))v95)(v103, v93);
  *v94 = 1;
  return result;
}

unint64_t sub_244525944(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244533ED0();
  return sub_244525974(a1, v2);
}

unint64_t sub_244525974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      result = (result + 1) & v8;
      if (((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0
        && *(_QWORD *)(v7 + 8 * result) != a1)
      {
        for (result = (result + 1) & v8;
              ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
              result = (result + 1) & v8)
        {
          if (*(_QWORD *)(v7 + 8 * result) == a1)
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_244525A40(uint64_t result, int64_t a2, int64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int64_t v11;
  int64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  v17 = result;
  if (a2 == a3)
    return result & 1;
  v11 = a2;
  if (a3 >= a2)
  {
    while (v11 < a3)
    {
      v15 = v11;
      LOBYTE(result) = sub_2444E772C(&v17, (unint64_t *)&v15, a6, a7, a8, a9, &v16);
      if (!v9)
      {
        ++v11;
        result = v16;
        v17 = v16;
        if (a3 != v11)
          continue;
      }
      return result & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_244525B10(uint64_t result, int64_t a2, int64_t a3, uint64_t a4, char a5, uint64_t a6, void (*a7)(char *, uint64_t, uint64_t, uint64_t), uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int64_t v11;
  char v16;
  unsigned __int8 v17;
  unint64_t v18;
  unsigned __int8 v19;

  v19 = result;
  if (a2 == a3)
    return result & 1;
  v11 = a2;
  if (a3 >= a2)
  {
    v16 = a5 & 1;
    while (v11 < a3)
    {
      v18 = v11;
      LOBYTE(result) = sub_2444E80BC(&v19, &v18, a4, v16, a6, a7, a8, a9, &v17);
      if (!v9)
      {
        ++v11;
        result = v17;
        v19 = v17;
        if (a3 != v11)
          continue;
      }
      return result & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_244525BD8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  unint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369798);
  v3 = (_QWORD *)sub_244533CA8();
  v5 = a1[4];
  v4 = a1[5];
  v6 = a1[6];
  result = sub_244525944(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v10 = (uint64_t *)(v3[7] + 16 * result);
    *v10 = v4;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    sub_2444F538C(v4, v6);
    if (!--v1)
      return (unint64_t)v3;
    v5 = *(v9 - 2);
    v4 = *(v9 - 1);
    v6 = *v9;
    result = sub_244525944(v5);
    v9 += 3;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_244525CD8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unsigned __int8 v43;
  unsigned __int8 v44;

  v39 = a7;
  v40 = a8;
  v37 = a5;
  v38 = a6;
  v35 = a3;
  v36 = a4;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369790);
  v11 = MEMORY[0x24BDAC7A8](v34);
  v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v44 = a1;
  v16 = *(_QWORD *)(a2 + 64);
  v32 = a2 + 64;
  v17 = 1 << *(_BYTE *)(a2 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v33 = (unint64_t)(v17 + 63) >> 6;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v42 = a1;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    v27 = *(_QWORD *)(v41 + 56);
    v28 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * i);
    v29 = *v28;
    v30 = v28[1];
    v31 = sub_2445337A4();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(&v15[*(int *)(v34 + 48)], v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * i, v31);
    *(_QWORD *)v15 = v29;
    *((_QWORD *)v15 + 1) = v30;
    sub_244516140((uint64_t)v15, (uint64_t)v13, &qword_257369790);
    swift_bridgeObjectRetain();
    sub_244525080(&v44, v13, v37, v38, v39, v40, &v43);
    result = sub_2444EC024((uint64_t)v13, &qword_257369790);
    if (v8)
    {
      swift_release();
      LOBYTE(a1) = v42;
      return a1 & 1;
    }
    LOBYTE(a1) = v43;
    v44 = v43;
    v42 = v43;
    if (v19)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v21++, 1))
      break;
    if (v21 >= v33)
      goto LABEL_26;
    v25 = *(_QWORD *)(v32 + 8 * v21);
    if (!v25)
    {
      v26 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_26;
      v25 = *(_QWORD *)(v32 + 8 * v26);
      if (v25)
        goto LABEL_16;
      v26 = v21 + 2;
      if (v21 + 2 >= v33)
        goto LABEL_26;
      v25 = *(_QWORD *)(v32 + 8 * v26);
      if (v25)
        goto LABEL_16;
      v26 = v21 + 3;
      if (v21 + 3 >= v33)
        goto LABEL_26;
      v25 = *(_QWORD *)(v32 + 8 * v26);
      if (v25)
      {
LABEL_16:
        v21 = v26;
        goto LABEL_17;
      }
      v26 = v21 + 4;
      if (v21 + 4 < v33)
      {
        v25 = *(_QWORD *)(v32 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v21 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_29;
            if (v21 >= v33)
              goto LABEL_26;
            v25 = *(_QWORD *)(v32 + 8 * v21);
            ++v26;
            if (v25)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return a1 & 1;
    }
LABEL_17:
    v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_244525F94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21[5];
  __int128 v22;

  *(_QWORD *)(v3 + 184) = 0;
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 40);
  v12 = *(_QWORD *)(a3 + 48);
  v11 = *(_QWORD *)(a3 + 56);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = v9;
  *(_BYTE *)(v3 + 80) = v10;
  *(_QWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 96) = v11;
  *(_BYTE *)(v3 + 144) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_2444F3E28(a3, a1, a2, v21);
  if (v4)
  {
    sub_2444F4110(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_2444F40DC(v3 + 56);
    swift_release();
    type metadata accessor for TemplateBlockLegacy();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v20 = (uint64_t)&v20;
    v14 = *(_QWORD *)(a3 + 64);
    *(_QWORD *)(v3 + 152) = v14;
    MEMORY[0x24BDAC7A8](v13);
    v19[2] = v21;
    v19[3] = a1;
    swift_bridgeObjectRetain_n();
    v16 = sub_244506DA4((void (*)(__int128 *__return_ptr, uint64_t *, uint64_t *))sub_244526230, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(a3 + 80);
    *(_QWORD *)(v3 + 160) = *(_QWORD *)(a3 + 72);
    *(_QWORD *)(v3 + 168) = v17;
    *(_QWORD *)(v3 + 176) = v16;
    swift_bridgeObjectRetain();
    swift_release();
    v18 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
    *(_BYTE *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = v18;
    v22 = *(_OWORD *)a3;
    *(_OWORD *)(v3 + 32) = v22;
    *(_QWORD *)(v3 + 48) = a2;
    swift_retain();
    sub_2444F4198((uint64_t)&v22);
    sub_2444F4110(a3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_2445261A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t result;

  v9 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_244505024(a3, v9, a5);
  if (v5)
    *a4 = v5;
  return result;
}

uint64_t type metadata accessor for TemplateBlockLegacy()
{
  return objc_opt_self();
}

uint64_t sub_244526230@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2445261A0(a1, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_24452624C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  _BYTE v7[16];
  unint64_t v8;
  unint64_t v9;

  v2 = sub_2445336F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v0 + 48))
  {
    v8 = 0;
    v9 = 0xE000000000000000;
    sub_244533BAC();
    sub_2445339D8();
    v7[15] = *(_BYTE *)(v0 + 48);
    sub_244533C30();
    result = sub_244533C84();
    __break(1u);
  }
  else
  {
    v8 = 0;
    v9 = 0xE000000000000000;
    sub_244533BAC();
    swift_bridgeObjectRelease();
    v8 = 0xD000000000000011;
    v9 = 0x8000000244535840;
    swift_bridgeObjectRetain();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    swift_bridgeObjectRetain();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445336A8();
    result = swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_2445336D8();
      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      *(_BYTE *)(v0 + 48) = 2;
    }
  }
  return result;
}

uint64_t sub_24452646C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void (*v12)(char *, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v15 = a2;
  v4 = sub_2445336F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - v9;
  if (*(unsigned __int8 *)(v2 + 48) - 1 > 1 || (result = sub_244526664(), !v3))
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_244533BAC();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000012;
    v14 = 0x80000002445357B0;
    swift_bridgeObjectRetain();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    swift_bridgeObjectRetain();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445336A8();
    result = swift_bridgeObjectRelease();
    if (!v3)
    {
      sub_2445336E4();
      v12 = *(void (**)(char *, uint64_t))(v5 + 8);
      v12(v8, v4);
      sub_2445336D8();
      result = ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
      *(_BYTE *)(v2 + 48) = 1;
    }
  }
  return result;
}

uint64_t sub_244526664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;

  v2 = sub_2445336F0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v10 - v8;
  if (*(_BYTE *)(v0 + 48))
  {
    if (*(_BYTE *)(v0 + 48) == 1)
    {
      v10 = 0;
      v11 = 0xE000000000000000;
      sub_244533BAC();
      swift_bridgeObjectRelease();
      v10 = 0xD00000000000001ALL;
      v11 = 0x8000000244535790;
      swift_bridgeObjectRetain();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445336A8();
      result = swift_bridgeObjectRelease();
      if (v1)
        return result;
      sub_2445336D8();
    }
    else
    {
      v10 = 0;
      v11 = 0xE000000000000000;
      sub_244533BAC();
      swift_bridgeObjectRelease();
      v10 = 0xD000000000000019;
      v11 = 0x8000000244535770;
      swift_bridgeObjectRetain();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445336A8();
      result = swift_bridgeObjectRelease();
      if (v1)
        return result;
      sub_2445336D8();
      v9 = v6;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    *(_BYTE *)(v0 + 48) = 0;
  }
  return result;
}

uint64_t sub_244526870()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Query()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for Query.UsageState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244526908 + 4 * byte_2445390FD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24452693C + 4 * asc_2445390F8[v4]))();
}

uint64_t sub_24452693C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244526944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24452694CLL);
  return result;
}

uint64_t sub_244526958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244526960);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244526964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452696C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Query.UsageState()
{
  return &type metadata for Query.UsageState;
}

unint64_t sub_24452698C()
{
  unint64_t result;

  result = qword_2573699F0;
  if (!qword_2573699F0)
  {
    result = MEMORY[0x2495115A0](&unk_244539178, &type metadata for Query.UsageState);
    atomic_store(result, (unint64_t *)&qword_2573699F0);
  }
  return result;
}

uint64_t dispatch thunk of ProvidesQueryString.getQueryString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UserBlockImplConfiguring.isEqual(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UserBlockFactory.decodeConfiguration(forBlockName:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of UserBlockFactory.makeBlock(withName:config:recipeMetadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_244526A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a3;
  v30 = a4;
  v6 = sub_244533618();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DatasetColumnType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244533774();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DatasetColumnDescription(0);
  sub_2445272C0(a1 + *(int *)(v17 + 24), (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v18 != *MEMORY[0x24BE74080])
  {
    if (v18 != *MEMORY[0x24BE74070])
    {
      if (v18 == *MEMORY[0x24BE74090])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74620];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x24BE74098])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74628];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x24BE740A8])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74640];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x24BE740B0])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74648];
        goto LABEL_18;
      }
      if (v18 == *MEMORY[0x24BE74088])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74618];
        goto LABEL_18;
      }
      v23 = (unsigned int *)MEMORY[0x24BE74630];
      if (v18 == *MEMORY[0x24BE740A0] || v18 == *MEMORY[0x24BE740C0])
        goto LABEL_18;
      if (v18 == *MEMORY[0x24BE74078])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74600];
        goto LABEL_18;
      }
      if (v18 != *MEMORY[0x24BE74068])
      {
        result = sub_244533C84();
        __break(1u);
        return result;
      }
    }
    v23 = (unsigned int *)MEMORY[0x24BE74610];
LABEL_18:
    sub_2444FA12C(a1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *v23, v13);
    v27 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v30, v16, v13);
    result = type metadata accessor for InferredProtobufType();
    v28 = (_QWORD *)(v27 + *(int *)(result + 20));
    *v28 = 0;
    v28[1] = 0;
    return result;
  }
  if (*(_BYTE *)(a1 + *(int *)(v17 + 28)) == 1)
  {
    v19 = v30;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v30, *MEMORY[0x24BE74608], v13);
    v31 = a2;
    v32 = v29;
    swift_bridgeObjectRetain();
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    v20 = v31;
    v21 = v32;
    v22 = (_QWORD *)(v19 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *v22 = v20;
    v22[1] = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = v30;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v30, *MEMORY[0x24BE74638], v13);
    v25 = (_QWORD *)(v24 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *v25 = 0;
    v25[1] = 0;
  }
  return sub_2444FA12C(a1);
}

uint64_t sub_244526DEC@<X0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a4;
  v33 = a6;
  v30 = a3;
  v31 = a5;
  v34 = a7;
  v9 = sub_244533618();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244533774();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_244533654();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v17 != *MEMORY[0x24BE74080])
  {
    if (v17 != *MEMORY[0x24BE74070])
    {
      if (v17 == *MEMORY[0x24BE74090])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74620];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x24BE74098])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74628];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x24BE740A8])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74640];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x24BE740B0])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74648];
        goto LABEL_18;
      }
      if (v17 == *MEMORY[0x24BE74088])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74618];
        goto LABEL_18;
      }
      v23 = (unsigned int *)MEMORY[0x24BE74630];
      if (v17 == *MEMORY[0x24BE740A0] || v17 == *MEMORY[0x24BE740C0])
        goto LABEL_18;
      if (v17 == *MEMORY[0x24BE74078])
      {
        v23 = (unsigned int *)MEMORY[0x24BE74600];
        goto LABEL_18;
      }
      if (v17 != *MEMORY[0x24BE74068])
      {
        result = sub_244533C84();
        __break(1u);
        return result;
      }
    }
    v23 = (unsigned int *)MEMORY[0x24BE74610];
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *v23, v13);
    v27 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v34, v16, v13);
    result = type metadata accessor for InferredProtobufType();
    v28 = (_QWORD *)(v27 + *(int *)(result + 20));
    *v28 = 0;
    v28[1] = 0;
    return result;
  }
  if ((a2 & 1) != 0)
  {
    v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104);
    v19 = v34;
    v18(v34, *MEMORY[0x24BE74608], v13);
    v35 = v30;
    v36 = v32;
    sub_2445339D8();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    v20 = v35;
    v21 = v36;
    v22 = (_QWORD *)(v19 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *v22 = v20;
    v22[1] = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v34;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v34, *MEMORY[0x24BE74638], v13);
    v25 = (_QWORD *)(v24 + *(int *)(type metadata accessor for InferredProtobufType() + 20));
    *v25 = 0;
    v25[1] = 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for InferredProtobufType()
{
  uint64_t result;

  result = qword_257369A50;
  if (!qword_257369A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2445271CC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for InferredProtobufType() + 20) + 8))
  {
    sub_2445339D8();
    sub_2445339D8();
  }
  sub_244533774();
  sub_244533C30();
  sub_2445339D8();
  return 0;
}

uint64_t sub_2445272C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatasetColumnType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_244527304(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244533774();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244527398(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244533774();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445273E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_244533774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244527448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_244533774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2445274C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244533774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_244527520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_244533774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24452758C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244527598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_244533774();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_244527624()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244527630(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244533774();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_2445276AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244533774();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24452771C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((sub_244533768() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for InferredProtobufType() + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_244533DF8() & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t BlocksController.deinit()
{
  uint64_t v0;

  sub_24453369C();

  swift_unknownObjectRelease();
  swift_release();
  sub_2445277E8(v0 + 48);
  swift_release();
  return v0;
}

uint64_t sub_2445277E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BlocksController.__deallocating_deinit()
{
  uint64_t v0;

  sub_24453369C();

  swift_unknownObjectRelease();
  swift_release();
  sub_2445277E8(v0 + 48);
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *BlocksController.__allocating_init(_:userBlockFactory:activityMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3, _UNKNOWN **a4)
{
  uint64_t v4;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v13[40];

  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2444FEA1C(a2, (uint64_t)v13);
  if (a3)
  {
    v9 = a3;
  }
  else
  {
    type metadata accessor for DefaultActivityMonitor();
    v9 = swift_allocObject();
    a4 = &off_2515269B0;
  }
  type metadata accessor for BlocksController();
  v10 = (_QWORD *)swift_allocObject();
  sub_2445336B4();
  swift_allocObject();
  swift_unknownObjectRetain();
  v11 = sub_244533690();
  if (v4)
  {

    swift_unknownObjectRelease();
    sub_2445277E8((uint64_t)v13);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10[2] = v8;
    v10[3] = v9;
    v10[4] = a4;
    v10[5] = v11;
    sub_2444FEAF4((uint64_t)v13, (uint64_t)(v10 + 6));
    v10[11] = 0;
  }
  swift_unknownObjectRelease();
  sub_2445277E8(a2);
  return v10;
}

{
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v13[40];

  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2444FEA1C(a2, (uint64_t)v13);
  if (a3)
  {
    v9 = a3;
  }
  else
  {
    type metadata accessor for DefaultActivityMonitor();
    v9 = swift_allocObject();
    a4 = &off_2515269B0;
  }
  type metadata accessor for BlocksController();
  v10 = (_QWORD *)swift_allocObject();
  swift_unknownObjectRetain();
  v11 = sub_24453345C();
  v10[2] = v8;
  v10[3] = v9;
  v10[4] = a4;
  v10[5] = v11;
  sub_2444FEAF4((uint64_t)v13, (uint64_t)(v10 + 6));
  swift_unknownObjectRelease();
  v10[11] = a1;
  sub_2445277E8(a2);
  return v10;
}

uint64_t type metadata accessor for BlocksController()
{
  return objc_opt_self();
}

uint64_t sub_244527AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 88))
  {
    swift_retain();
    sub_244533444();
    if (v1)
    {
      return swift_release();
    }
    else
    {
      swift_getObjectType();
      sub_244533894();
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    result = sub_244533C84();
    __break(1u);
  }
  return result;
}

uint64_t sub_244527BCC(uint64_t a1)
{
  uint64_t v3[5];

  BlockLoggingType.makeLogHandler()(v3);
  sub_244527C30(a1, (uint64_t)v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

void (*sub_244527C30(uint64_t a1, uint64_t a2))(uint64_t, uint64_t)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*result)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t, _QWORD *(*)());
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[40];

  v6 = sub_2445333CC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 16))(v8, a1);
  sub_2444FEA1C(v2 + 48, (uint64_t)v22);
  sub_2444E8B18(a2, (uint64_t)v21);
  v10 = swift_retain();
  result = sub_2444FE508(v10, (uint64_t)v8, (uint64_t)v22, (uint64_t)v21);
  if (!v3)
  {
    v12 = result;
    v13 = *((_QWORD *)result + 16);
    v14 = *((_QWORD *)result + 17);
    v15 = *((_QWORD *)result + 18);
    v16 = *((_QWORD *)result + 9);
    ObjectType = swift_getObjectType();
    v22[0] = 0;
    MEMORY[0x24BDAC7A8](ObjectType);
    v21[-4] = v12;
    v21[-3] = v13;
    v19 = v14;
    v20 = v15;
    v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, _QWORD *(*)()))(v16 + 16);
    v19 = v16;
    v18(v22, v13, v14, v15, sub_244527D90);
    return (void (*)(uint64_t, uint64_t))swift_release();
  }
  return result;
}

_QWORD *sub_244527D90()
{
  uint64_t *v0;

  return sub_2444FDB18(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t method lookup function for BlocksController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlocksController.getSchemaStore()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of BlocksController.executeRecipe(at:loggingType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of BlocksController.executeRecipe(at:logHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t BlockLogEntry.init(name:type:data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;

  v6 = *a3;
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = v6;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

void BlockLogEntry.init(useCase:error:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[4];

  v8 = sub_244533990();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[2] = 0;
  v17[3] = 0xE000000000000000;
  v17[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
  sub_244533C30();
  sub_244533984();
  v12 = sub_24453396C();
  v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v14 >> 60 == 15)
    v15 = 0;
  else
    v15 = v12;
  if (v14 >> 60 == 15)
    v16 = 0xC000000000000000;
  else
    v16 = v14;

  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = 3;
  *(_QWORD *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 32) = v16;
}

PoirotBlocks::BlockLogEntry::EntryType_optional __swiftcall BlockLogEntry.EntryType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PoirotBlocks::BlockLogEntry::EntryType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_244533CCC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BlockLogEntry.EntryType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244527FCC + 4 * byte_2445392D8[*v0]))(1852797802, 0xE400000000000000);
}

uint64_t sub_244527FCC()
{
  return 7762787;
}

uint64_t sub_244527FDC()
{
  return 0x7972616E6962;
}

uint64_t sub_244527FF0()
{
  return 0x726F727265;
}

void sub_244528004(char *a1)
{
  sub_24451ADD8(*a1);
}

void sub_244528010()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244533EDC();
  __asm { BR              X9 }
}

uint64_t sub_244528054()
{
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

void sub_2445280B4()
{
  __asm { BR              X10 }
}

uint64_t sub_2445280E8()
{
  sub_2445339CC();
  return swift_bridgeObjectRelease();
}

void sub_244528134()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244533EDC();
  __asm { BR              X9 }
}

uint64_t sub_244528174()
{
  sub_2445339CC();
  swift_bridgeObjectRelease();
  return sub_244533EF4();
}

PoirotBlocks::BlockLogEntry::EntryType_optional sub_2445281D4(Swift::String *a1)
{
  return BlockLogEntry.EntryType.init(rawValue:)(*a1);
}

uint64_t sub_2445281E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_244528208 + 4 * byte_2445392E8[*v0]))();
}

void sub_244528208(_QWORD *a1@<X8>)
{
  *a1 = 7762787;
  a1[1] = 0xE300000000000000;
}

void sub_24452821C(_QWORD *a1@<X8>)
{
  *a1 = 0x7972616E6962;
  a1[1] = 0xE600000000000000;
}

void sub_244528234(_QWORD *a1@<X8>)
{
  *a1 = 0x726F727265;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_24452824C()
{
  sub_244528BF0();
  return sub_244533A20();
}

uint64_t BlockLogEntry.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void BlockLogEntry.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t BlockLogEntry.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_244510530(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t sub_244528300()
{
  char *v0;

  return *(_QWORD *)&aName_15[8 * *v0];
}

uint64_t sub_244528318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244528ACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24452833C()
{
  sub_24452851C();
  return sub_244533F48();
}

uint64_t sub_244528364()
{
  sub_24452851C();
  return sub_244533F54();
}

uint64_t BlockLogEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369B68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_24452851C();
  sub_244533F3C();
  LOBYTE(v18) = 0;
  sub_244533D68();
  if (!v2)
  {
    v14 = v16;
    v13 = v17;
    LOBYTE(v18) = v20;
    v21 = 1;
    sub_244528560();
    sub_244533D98();
    v18 = v13;
    v19 = v14;
    v21 = 2;
    sub_244508614();
    sub_244533D5C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_24452851C()
{
  unint64_t result;

  result = qword_257369B70;
  if (!qword_257369B70)
  {
    result = MEMORY[0x2495115A0](&unk_2445394F4, &type metadata for BlockLogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369B70);
  }
  return result;
}

unint64_t sub_244528560()
{
  unint64_t result;

  result = qword_257369B78;
  if (!qword_257369B78)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockLogEntry.EntryType, &type metadata for BlockLogEntry.EntryType);
    atomic_store(result, (unint64_t *)&qword_257369B78);
  }
  return result;
}

unint64_t sub_2445285A8()
{
  unint64_t result;

  result = qword_257369B80;
  if (!qword_257369B80)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockLogEntry.EntryType, &type metadata for BlockLogEntry.EntryType);
    atomic_store(result, (unint64_t *)&qword_257369B80);
  }
  return result;
}

uint64_t sub_2445285EC(_QWORD *a1)
{
  return BlockLogEntry.encode(to:)(a1);
}

uint64_t destroy for BlockLogEntry(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_2444F53D0(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_2444F538C(v6, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (uint64_t *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_2444F538C(*v4, v5);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v5;
      sub_2444F53D0(v8, v9);
      return a1;
    }
    sub_244528788(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_2444F538C(*v4, v5);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t sub_244528788(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t assignWithTake for BlockLogEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v5;
      *(_QWORD *)(a1 + 32) = v7;
      sub_2444F53D0(v8, v6);
      return a1;
    }
    sub_244528788(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

ValueMetadata *type metadata accessor for BlockLogEntry()
{
  return &type metadata for BlockLogEntry;
}

uint64_t storeEnumTagSinglePayload for BlockLogEntry.EntryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2445288A8 + 4 * byte_2445392F1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2445288DC + 4 * byte_2445392EC[v4]))();
}

uint64_t sub_2445288DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2445288E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2445288ECLL);
  return result;
}

uint64_t sub_2445288F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244528900);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244528904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452890C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockLogEntry.EntryType()
{
  return &type metadata for BlockLogEntry.EntryType;
}

uint64_t storeEnumTagSinglePayload for BlockLogEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244528974 + 4 * byte_2445392FB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2445289A8 + 4 * byte_2445392F6[v4]))();
}

uint64_t sub_2445289A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2445289B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2445289B8);
  return result;
}

uint64_t sub_2445289C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2445289CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2445289D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2445289D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockLogEntry.CodingKeys()
{
  return &type metadata for BlockLogEntry.CodingKeys;
}

unint64_t sub_2445289F8()
{
  unint64_t result;

  result = qword_257369B88;
  if (!qword_257369B88)
  {
    result = MEMORY[0x2495115A0](&unk_2445394CC, &type metadata for BlockLogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369B88);
  }
  return result;
}

unint64_t sub_244528A40()
{
  unint64_t result;

  result = qword_257369B90;
  if (!qword_257369B90)
  {
    result = MEMORY[0x2495115A0](&unk_24453943C, &type metadata for BlockLogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369B90);
  }
  return result;
}

unint64_t sub_244528A88()
{
  unint64_t result;

  result = qword_257369B98;
  if (!qword_257369B98)
  {
    result = MEMORY[0x2495115A0](&unk_244539464, &type metadata for BlockLogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369B98);
  }
  return result;
}

uint64_t sub_244528ACC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_244528BF0()
{
  unint64_t result;

  result = qword_257369BA0;
  if (!qword_257369BA0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for BlockLogEntry.EntryType, &type metadata for BlockLogEntry.EntryType);
    atomic_store(result, (unint64_t *)&qword_257369BA0);
  }
  return result;
}

uint64_t UserDefinedBlockConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(_QWORD *__return_ptr, uint64_t, uint64_t, __int128 *, ValueMetadata *, unint64_t);
  ValueMetadata *v23;
  uint64_t v24;
  _QWORD v25[5];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  _BYTE v33[32];
  uint64_t v34;
  _BYTE *v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369BA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v33;
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v32 = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24452914C();
  sub_244533F18();
  if (v2)
  {
    v9 = (uint64_t)v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2444EC024(v9, &qword_257369BB8);
  }
  else
  {
    LOBYTE(v28) = 0;
    v11 = sub_244533D14();
    v13 = v12;
    v31[0] = v11;
    v31[1] = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
    LOBYTE(v26) = 1;
    sub_2444E9780(&qword_257367DA0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_244533D08();
    v24 = v13;
    *(_QWORD *)&v32 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    LOBYTE(v26) = 2;
    sub_2444EA258(&qword_257367DE8, &qword_257367DF0, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12D0]);
    sub_244533D08();
    *((_QWORD *)&v32 + 1) = v28;
    v14 = sub_244533D38();
    v15 = sub_2445293F4(3, v14);
    swift_bridgeObjectRelease();
    if (v15)
    {
      v16 = a1[3];
      v17 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v16);
      sub_244506B54(v16, v17, (uint64_t)&v26);
      if (v27)
      {
        sub_2444E8B00(&v26, (uint64_t)&v28);
        LOBYTE(v25[0]) = 3;
        sub_244533CD8();
        v18 = v30;
        v23 = v29;
        v21 = v30;
        __swift_project_boxed_opaque_existential_1(&v28, (uint64_t)v29);
        v22 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __int128 *, ValueMetadata *, unint64_t))(v18 + 8);
        v19 = v24;
        swift_bridgeObjectRetain();
        v22(v25, v11, v19, &v26, v23, v21);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_2445294CC((uint64_t)v25, (uint64_t)v35);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
      }
      else
      {
        sub_2444EC024((uint64_t)&v26, &qword_257368440);
        LOBYTE(v26) = 3;
        v29 = &type metadata for AnyCodable;
        v30 = sub_244529454();
        sub_2445084E4();
        sub_244533D2C();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_2445294CC((uint64_t)&v28, (uint64_t)v35);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    sub_244519424(v31, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_24451934C((uint64_t)v31);
  }
}

unint64_t sub_24452914C()
{
  unint64_t result;

  result = qword_257369BB0;
  if (!qword_257369BB0)
  {
    result = MEMORY[0x2495115A0](&unk_24453972C, &type metadata for UserDefinedBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369BB0);
  }
  return result;
}

uint64_t UserDefinedBlockConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v13[4];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369BC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24452914C();
  sub_244533F3C();
  LOBYTE(v13[0]) = 0;
  sub_244533D68();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13[0] = *(_QWORD *)(v3 + 16);
  LOBYTE(v11) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367D70);
  sub_2444E9780(&qword_257367D78, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_244533D5C();
  v10 = *(_QWORD *)(v3 + 24);
  if (v10 && *(_QWORD *)(v10 + 16))
  {
    v13[0] = *(_QWORD *)(v3 + 24);
    LOBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    sub_2444EA258((unint64_t *)&qword_257367E00, &qword_257367E08, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12A0]);
    sub_244533D98();
  }
  sub_244529544(v3 + 32, (uint64_t)&v11);
  if (v12)
  {
    sub_2444E8B00(&v11, (uint64_t)v13);
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    LOBYTE(v11) = 3;
    sub_244533D98();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return sub_2444EC024((uint64_t)&v11, &qword_257369BB8);
  }
}

BOOL sub_2445293F4(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_244529454()
{
  unint64_t result;

  result = qword_257369BC0;
  if (!qword_257369BC0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for AnyCodable, &type metadata for AnyCodable);
    atomic_store(result, (unint64_t *)&qword_257369BC0);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x249511654);
  return result;
}

uint64_t sub_2445294CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244529514(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244529544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24452958C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;

  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3[1] + 8) + 8))(a2);
  v23 = v8;
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  (*(void (**)(uint64_t))(a3[3] + 8))(a2);
  v10 = (*(uint64_t (**)(void))(v9 + 8))();
  swift_bridgeObjectRelease();
  v11 = (*(uint64_t (**)(uint64_t))(a3[4] + 8))(a2);
  v12 = (*(uint64_t (**)(uint64_t))(a3[2] + 8))(a2);
  if (v13 >> 60 == 15)
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
  }
  else
  {
    v14 = v12;
    v15 = v13;
    sub_244533240();
    swift_allocObject();
    sub_244533234();
    *((_QWORD *)&v21 + 1) = &type metadata for AnyCodable;
    v22 = sub_244529454();
    sub_2445084E4();
    sub_24453321C();
    if (v19)
    {
      swift_release();
      __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_244510544(v14, v15);
    }
    swift_release();
    sub_244510544(v14, v15);
  }
  *(_QWORD *)(a4 + 64) = 0;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  v17 = v23;
  *(_QWORD *)a4 = v18;
  *(_QWORD *)(a4 + 8) = v17;
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + 24) = v11;
  return sub_2445294CC((uint64_t)&v20, a4 + 32);
}

uint64_t AnyCodable.isEqual(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD v11[2];
  char v12;

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  sub_2444E8B18(a1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369BD0);
  if (swift_dynamicCast())
  {
    v11[0] = v2;
    v11[1] = v3;
    v12 = v4;
    _s12PoirotBlocks10AnyCodableO2eeoiySbAC_ACtFZ_0((uint64_t)v11);
    v6 = v5;
    sub_2444FA034(v8, v9, v10);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_244529824()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24452984C + 4 * byte_244539560[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24452984C()
{
  return 0x7461447475706E69;
}

unint64_t sub_244529870()
{
  return 0xD000000000000011;
}

uint64_t sub_24452988C()
{
  return 0x666E6F4372657375;
}

uint64_t sub_2445298A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24452A224(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2445298CC()
{
  sub_24452914C();
  return sub_244533F48();
}

uint64_t sub_2445298F4()
{
  sub_24452914C();
  return sub_244533F54();
}

uint64_t UserDefinedBlockConfig.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDefinedBlockConfig.inputDatasets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserDefinedBlockConfig.outputDescription.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserDefinedBlockConfig.implConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244529544(v1 + 32, a1);
}

uint64_t UserDefinedBlockConfig.init(name:inputDatasets:outputDescription:implConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)(a6 + 64) = 0;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_OWORD *)(a6 + 32) = 0u;
  return sub_2445294CC(a5, a6 + 32);
}

uint64_t sub_24452998C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserDefinedBlockConfig.init(from:)(a1, a2);
}

uint64_t sub_2445299A0(_QWORD *a1)
{
  return UserDefinedBlockConfig.encode(to:)(a1);
}

uint64_t _s12PoirotBlocks22UserDefinedBlockConfigV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;
  _BYTE *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  _QWORD v21[5];
  __int128 v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;

  v4 = (_QWORD *)a1[2];
  v5 = (_QWORD *)a2[2];
  if (!v4)
  {
    if (!v5)
    {
      sub_244519424(a1, (uint64_t)v26);
      sub_244519424(a2, (uint64_t)v24);
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  if (!v5)
  {
LABEL_6:
    sub_244519424(a1, (uint64_t)v26);
    sub_244519424(a2, (uint64_t)v24);
    goto LABEL_7;
  }
  v6 = sub_244500078(v4, v5);
  sub_244519424(a1, (uint64_t)v26);
  sub_244519424(a2, (uint64_t)v24);
  if ((v6 & 1) == 0)
  {
LABEL_7:
    sub_24451934C((uint64_t)v24);
    v7 = v26;
LABEL_8:
    sub_24451934C((uint64_t)v7);
    goto LABEL_9;
  }
LABEL_12:
  v10 = v25;
  if (!v27)
  {
    swift_bridgeObjectRetain();
    sub_24451934C((uint64_t)v24);
    sub_24451934C((uint64_t)v26);
    if (v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  if (!v25)
  {
    swift_bridgeObjectRetain();
    sub_24451934C((uint64_t)v24);
    sub_24451934C((uint64_t)v26);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_24450013C(v11, v10);
  swift_bridgeObjectRelease();
  sub_24451934C((uint64_t)v24);
  sub_24451934C((uint64_t)v26);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_18:
    v13 = (uint64_t)(a1 + 4);
    sub_244529544(v13, (uint64_t)&v22);
    if (v23)
    {
      sub_2444E8B00(&v22, (uint64_t)v19);
      sub_244529544((uint64_t)(a2 + 4), (uint64_t)&v17);
      if (v18)
      {
        sub_2444E8B00(&v17, (uint64_t)&v22);
        v14 = v20;
        v15 = v21[0];
        __swift_project_boxed_opaque_existential_1(v19, v20);
        v8 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v15 + 24))(&v22, v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return v8 & 1;
      }
      sub_2444EC024((uint64_t)&v17, &qword_257369BB8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {
      sub_2444EC024((uint64_t)&v22, &qword_257369BB8);
    }
    sub_244529544(v13, (uint64_t)v19);
    v16 = v20;
    sub_2444EC024((uint64_t)v19, &qword_257369BB8);
    sub_244519424(a2, (uint64_t)v19);
    if (!v16)
    {
      sub_244529544((uint64_t)v21, (uint64_t)&v22);
      sub_24451934C((uint64_t)v19);
      v8 = v23 == 0;
      sub_2444EC024((uint64_t)&v22, &qword_257369BB8);
      return v8 & 1;
    }
    v7 = v19;
    goto LABEL_8;
  }
LABEL_9:
  v8 = 0;
  return v8 & 1;
}

unint64_t sub_244529C34(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_2445084E4();
  result = sub_244508544();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_244529C60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_244529C94();
  a1[2] = sub_244529CD8();
  result = sub_244529D1C();
  a1[3] = result;
  return result;
}

unint64_t sub_244529C94()
{
  unint64_t result;

  result = qword_257369BD8;
  if (!qword_257369BD8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for UserDefinedBlockConfig, &type metadata for UserDefinedBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369BD8);
  }
  return result;
}

unint64_t sub_244529CD8()
{
  unint64_t result;

  result = qword_257369BE0;
  if (!qword_257369BE0)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for UserDefinedBlockConfig, &type metadata for UserDefinedBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369BE0);
  }
  return result;
}

unint64_t sub_244529D1C()
{
  unint64_t result;

  result = qword_257369BE8;
  if (!qword_257369BE8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for UserDefinedBlockConfig, &type metadata for UserDefinedBlockConfig);
    atomic_store(result, (unint64_t *)&qword_257369BE8);
  }
  return result;
}

uint64_t destroy for UserDefinedBlockConfig(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  return result;
}

uint64_t initializeWithCopy for UserDefinedBlockConfig(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 4;
  v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v9 = *((_OWORD *)v6 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = v6[4];
  }
  return a1;
}

uint64_t assignWithCopy for UserDefinedBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 56) = v4;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 32);
    v6 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for UserDefinedBlockConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDefinedBlockConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefinedBlockConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockConfig()
{
  return &type metadata for UserDefinedBlockConfig;
}

uint64_t storeEnumTagSinglePayload for UserDefinedBlockConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24452A0CC + 4 * byte_244539569[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24452A100 + 4 * byte_244539564[v4]))();
}

uint64_t sub_24452A100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452A108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24452A110);
  return result;
}

uint64_t sub_24452A11C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24452A124);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24452A128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452A130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockConfig.CodingKeys()
{
  return &type metadata for UserDefinedBlockConfig.CodingKeys;
}

unint64_t sub_24452A150()
{
  unint64_t result;

  result = qword_257369BF0;
  if (!qword_257369BF0)
  {
    result = MEMORY[0x2495115A0](&unk_244539704, &type metadata for UserDefinedBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369BF0);
  }
  return result;
}

unint64_t sub_24452A198()
{
  unint64_t result;

  result = qword_257369BF8;
  if (!qword_257369BF8)
  {
    result = MEMORY[0x2495115A0](&unk_244539674, &type metadata for UserDefinedBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369BF8);
  }
  return result;
}

unint64_t sub_24452A1E0()
{
  unint64_t result;

  result = qword_257369C00;
  if (!qword_257369C00)
  {
    result = MEMORY[0x2495115A0](&unk_24453969C, &type metadata for UserDefinedBlockConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369C00);
  }
  return result;
}

uint64_t sub_24452A224(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447475706E69 && a2 == 0xED00007374657361 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244534600 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E6F4372657375 && a2 == 0xEA00000000006769)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_24452A3F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 0;
}

void sub_24452A3FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 1;
}

uint64_t sub_24452A408()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 168))();
  return 1;
}

ValueMetadata *type metadata accessor for ProcessingError()
{
  return &type metadata for ProcessingError;
}

uint64_t sub_24452A438()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseBlock()
{
  return objc_opt_self();
}

uint64_t sub_24452A484()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_24452A490()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 184))() & 1;
}

uint64_t sub_24452A4BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 176))();
}

uint64_t sub_24452A4E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

uint64_t sub_24452A50C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24452A53C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_24452A564()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 48);
}

uint64_t sub_24452A570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = a1;
  *(_QWORD *)(a4 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
  *(_QWORD *)(a4 + 40) = v8;
  *(_QWORD *)(a4 + 48) = a2;
  return a4;
}

uint64_t Sequence<>.existingNames.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v8 = sub_24452A6AC((void (*)(char *, char *))sub_24452A640, (uint64_t)v11, a1, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], a8);
  v9 = sub_2444FA050(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24452A640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = v4(AssociatedTypeWitness, v3);
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t sub_24452A6AC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_244533B28();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_2445339F0();
  v57 = sub_2445338B8();
  v53 = sub_244533C24();
  sub_244533BDC();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_2445339E4();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_244533B34();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_244533C0C();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_244533B34();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_244533C0C();
      sub_244533B34();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t dispatch thunk of ProvidesName.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24452ABC0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2444F0DEC(0, v1, 0);
    v2 = v13;
    v4 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + a1 + 8);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_2444F0DEC(v9 > 1, v10 + 1, 1);
      v6 = (uint64_t *)((char *)v6 + v5);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DatasetColumnLayout.pivotColumns.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_24452B5B8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Array.partition(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_2445338B8();
  v1 = sub_244533AA4();
  swift_bridgeObjectRetain();
  MEMORY[0x2495115A0](MEMORY[0x24BEE12F0], v1);
  result = sub_244533BB8();
  if (v0)
    return swift_bridgeObjectRelease();
  return result;
}

PoirotBlocks::DatasetColumnLayout __swiftcall DatasetColumnLayout.init(name:columnDescriptions:)(Swift::String name, Swift::OpaquePointer columnDescriptions)
{
  uint64_t v2;
  PoirotBlocks::DatasetColumnLayout result;

  *(Swift::String *)v2 = name;
  *(Swift::OpaquePointer *)(v2 + 16) = columnDescriptions;
  result.name = name;
  result.columnDescriptions = columnDescriptions;
  return result;
}

uint64_t DatasetColumnLayout.columns.getter()
{
  uint64_t v0;

  return sub_24452B30C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24452ADD4()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6D756C6F63;
  else
    return 1701667182;
}

uint64_t sub_24452AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24452B9A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24452AE2C()
{
  sub_24452B768();
  return sub_244533F48();
}

uint64_t sub_24452AE54()
{
  sub_24452B768();
  return sub_244533F54();
}

uint64_t DatasetColumnLayout.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatasetColumnLayout.columnDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DatasetColumnLayout.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24452B768();
  sub_244533F18();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17[0] = a2;
  v19 = 0;
  v9 = sub_244533CE4();
  v12 = v9;
  v13 = v10;
  if (v10)
    v14 = v10;
  else
    v14 = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
  v18 = 1;
  sub_2444EA258(&qword_257367DE8, &qword_257367DF0, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_244533D2C();
  if (!v13)
    v12 = 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v17[0];
  v16 = v17[1];
  *(_QWORD *)v17[0] = v12;
  *(_QWORD *)(v15 + 8) = v14;
  *(_QWORD *)(v15 + 16) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DatasetColumnLayout.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257369D18);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24452B768();
  sub_244533F3C();
  v13 = 0;
  sub_244533D68();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    sub_2444EA258((unint64_t *)&qword_257367E00, &qword_257367E08, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription, MEMORY[0x24BEE12A0]);
    sub_244533D98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t static DatasetColumnLayout.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_244533DF8() & 1) != 0)
    return sub_24450013C(v2, v3);
  else
    return 0;
}

uint64_t sub_24452B284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DatasetColumnLayout.init(from:)(a1, a2);
}

uint64_t sub_24452B298(_QWORD *a1)
{
  return DatasetColumnLayout.encode(to:)(a1);
}

uint64_t sub_24452B2AC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_244533DF8() & 1) != 0)
    return sub_24450013C(v2, v3);
  else
    return 0;
}

uint64_t sub_24452B30C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for DatasetColumnDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2444F0DC0(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_2444E8C24(v8, (uint64_t)v5);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2444F0DC0(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_2444EA2D4((unint64_t *)&qword_2573689F0, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_2444E8C24((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_2444E8B00(&v14, v7 + 40 * v11 + 32);
      sub_2444FA12C((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_24452B470()
{
  uint64_t v0;

  return sub_24452B30C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24452B478()
{
  sub_244505598();
  return sub_244533648();
}

uint64_t DatasetColumnLayout.columnNames.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_24452ABC0(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24452B4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  char v13;
  char v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a5 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v12(v9);
  v14 = v13;
  if (!v5 && (v13 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, a5);
    sub_244533AA4();
    sub_244533A98();
  }
  return v14 & 1;
}

uint64_t sub_24452B5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for DatasetColumnDescription(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v17 - v8;
  result = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v17 = v1;
    v12 = *(_QWORD *)(v7 + 72);
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v13 = a1 + v18;
    v14 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_2444E8C24(v13, (uint64_t)v9);
      if (v9[*(int *)(v3 + 28)] == 1)
      {
        sub_2444F27D4((uint64_t)v9, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2444F0D94(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v19;
        v16 = *(_QWORD *)(v19 + 16);
        v15 = *(_QWORD *)(v19 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_2444F0D94(v15 > 1, v16 + 1, 1);
          v14 = v19;
        }
        *(_QWORD *)(v14 + 16) = v16 + 1;
        sub_2444F27D4((uint64_t)v6, v14 + v18 + v16 * v12);
      }
      else
      {
        sub_2444FA12C((uint64_t)v9);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

uint64_t sub_24452B748(uint64_t a1)
{
  uint64_t *v1;

  return sub_24452B4FC(a1, v1[3], v1[4], v1[5], v1[2]) & 1;
}

unint64_t sub_24452B768()
{
  unint64_t result;

  result = qword_257369D10;
  if (!qword_257369D10)
  {
    result = MEMORY[0x2495115A0](&unk_244539A58, &type metadata for DatasetColumnLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369D10);
  }
  return result;
}

unint64_t sub_24452B7B0()
{
  unint64_t result;

  result = qword_257369D20;
  if (!qword_257369D20)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for DatasetColumnLayout, &type metadata for DatasetColumnLayout);
    atomic_store(result, (unint64_t *)&qword_257369D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnLayout()
{
  return &type metadata for DatasetColumnLayout;
}

uint64_t storeEnumTagSinglePayload for DatasetColumnLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24452B850 + 4 * byte_244539895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24452B884 + 4 * byte_244539890[v4]))();
}

uint64_t sub_24452B884(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452B88C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24452B894);
  return result;
}

uint64_t sub_24452B8A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24452B8A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24452B8AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452B8B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DatasetColumnLayout.CodingKeys()
{
  return &type metadata for DatasetColumnLayout.CodingKeys;
}

unint64_t sub_24452B8D4()
{
  unint64_t result;

  result = qword_257369D28;
  if (!qword_257369D28)
  {
    result = MEMORY[0x2495115A0](&unk_244539A30, &type metadata for DatasetColumnLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369D28);
  }
  return result;
}

unint64_t sub_24452B91C()
{
  unint64_t result;

  result = qword_257369D30;
  if (!qword_257369D30)
  {
    result = MEMORY[0x2495115A0](&unk_2445399A0, &type metadata for DatasetColumnLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369D30);
  }
  return result;
}

unint64_t sub_24452B964()
{
  unint64_t result;

  result = qword_257369D38;
  if (!qword_257369D38)
  {
    result = MEMORY[0x2495115A0](&unk_2445399C8, &type metadata for DatasetColumnLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257369D38);
  }
  return result;
}

uint64_t sub_24452B9A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_244533DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_244533DF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t BlockLoggingType.makeLogHandler()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD v37[2];
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  v43 = a1;
  v3 = sub_24453333C();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24453342C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2445333CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v37 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v37 - v17;
  v19 = type metadata accessor for BlockLoggingType();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24452BDC4(v2, (uint64_t)v21);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 2, v10);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      v23 = v43;
      v43[3] = (uint64_t)&type metadata for VoidLogger;
      v23[4] = (uint64_t)&off_251525228;
    }
    else
    {
      v35 = type metadata accessor for ConsoleLogger();
      result = swift_allocObject();
      v36 = v43;
      v43[3] = v35;
      v36[4] = (uint64_t)&off_251527A30;
      *v36 = result;
    }
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v39(v18, v21, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v18, v10);
    v24 = type metadata accessor for FileLogger();
    v38 = swift_allocObject();
    sub_244533420();
    v25 = sub_244533414();
    v26 = v6;
    v28 = v27;
    v37[1] = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
    v44 = v25;
    v45 = v28;
    v30 = v41;
    v29 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v5, *MEMORY[0x24BDCD7A0], v42);
    sub_2444FE9D8();
    v31 = v40;
    sub_2445333C0();
    v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v16, v10);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    swift_bridgeObjectRelease();
    v33 = v38;
    v39((char *)(v38 + OBJC_IVAR____TtC12PoirotBlocks10FileLogger_directory), v31, v10);
    v34 = v43;
    v43[3] = v24;
    v34[4] = (uint64_t)&off_251526998;
    *v34 = v33;
    return ((uint64_t (*)(char *, uint64_t))v32)(v18, v10);
  }
  return result;
}

uint64_t type metadata accessor for BlockLoggingType()
{
  uint64_t result;

  result = qword_257369DB0;
  if (!qword_257369DB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24452BDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BlockLoggingType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for BlockLoggingType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_2445333CC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for BlockLoggingType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_2445333CC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for BlockLoggingType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2445333CC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for BlockLoggingType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_2445333CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for BlockLoggingType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2445333CC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for BlockLoggingType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_2445333CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlockLoggingType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24452C26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_2445333CC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BlockLoggingType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24452C2C4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_2445333CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_24452C318(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2445333CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_24452C350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2445333CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_24452C390()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2445333CC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefinedBlockError()
{
  return &type metadata for UserDefinedBlockError;
}

uint64_t sub_24452C3F4(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t *, _QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v7 = a3[3];
  *(_QWORD *)(v3 + 56) = a3[2];
  *(_QWORD *)(v3 + 64) = v7;
  v21 = v3 + 72;
  sub_2444F9FF0((uint64_t)(a3 + 4), v3 + 72, &qword_257369BB8);
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2444F9FF0(*v8 + 80, (uint64_t)&v23, &qword_257368440);
  if (v24)
  {
    sub_2444E8B00(&v23, (uint64_t)v26);
    v9 = v27;
    v10 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v11 = a3[1];
    v22 = *a3;
    v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v13 = *(_QWORD *)(*v12 + 136);
    v14 = *(_QWORD *)(*v12 + 144);
    v25[0] = *(_QWORD *)(*v12 + 128);
    v25[1] = v13;
    v25[2] = v14;
    v15 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t *, _QWORD *, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = v29;
    v15(&v23, v22, v11, a3, v25, v9, v10);
    swift_bridgeObjectRelease();
    if (v16)
    {
      sub_24451934C((uint64_t)a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2444EC024(v21, &qword_257369BB8);
      swift_release();
      type metadata accessor for UserDefinedBlock();
      swift_deallocPartialClassInstance();
    }
    else
    {
      sub_2444E8B00(&v23, v4 + 112);
      swift_release();
      v17 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(a1, a1[3]) + 120);
      sub_244519424(a3, (uint64_t)&v23);
      *(_BYTE *)(v4 + 16) = 0;
      v18 = v23;
      *(_QWORD *)(v4 + 24) = v17;
      *(_OWORD *)(v4 + 32) = v18;
      *(_QWORD *)(v4 + 48) = a2;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24451934C((uint64_t)&v23);
      sub_24451934C((uint64_t)a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    return v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2444EC024((uint64_t)&v23, &qword_257368440);
    result = sub_244533C84();
    __break(1u);
  }
  return result;
}

uint64_t sub_24452C688(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v2 = v1;
  v3 = (uint64_t *)result;
  if (v1[7])
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_2444FA050(v4);
    swift_bridgeObjectRelease();
    v6 = swift_bridgeObjectRetain();
    v7 = sub_2444F5CB0(v6);
    if (*(_QWORD *)(v7 + 16) <= *(_QWORD *)(v5 + 16) >> 3)
    {
      sub_24452CA5C(v7);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_4;
    }
    else
    {
      v8 = sub_24452CBF0(v7, v5);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v8 + 16))
      {
LABEL_4:
        __swift_instantiateConcreteTypeFromMangledName(&qword_257369EE8);
        sub_24452D918();
        sub_2444FE9D8();
        v9 = sub_244533A08();
        v11 = v10;
        swift_bridgeObjectRelease();
        sub_24452D964();
        swift_allocError();
        *(_QWORD *)v12 = v9;
        *(_QWORD *)(v12 + 8) = v11;
        *(_BYTE *)(v12 + 16) = 1;
        return swift_willThrow();
      }
    }
    result = swift_bridgeObjectRelease();
  }
  v13 = v2[8];
  if (v13)
  {
    v15 = v2[4];
    v14 = v2[5];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_2444F789C(v15, v14, v13, v15, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24452C85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 136);
  v10 = *(_QWORD *)(v5 + 144);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 112), v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, v9, v10);
  if (!v4)
  {
    v12 = *(_QWORD *)(v5 + 136);
    v13 = *(_QWORD *)(v5 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 112), v12);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13) & 1) != 0)
      *(_BYTE *)(v5 + 16) = 1;
  }
  return v11 & 1;
}

uint64_t sub_24452C920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (!v1)
  {
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v5);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    *(_BYTE *)(v0 + 16) = result & 1;
  }
  return result;
}

uint64_t sub_24452C9B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2444EC024(v0 + 72, &qword_257369BB8);
  return __swift_destroy_boxed_opaque_existential_1(v0 + 112);
}

uint64_t sub_24452C9E8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2444EC024(v0 + 72, &qword_257369BB8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDefinedBlock()
{
  return objc_opt_self();
}

uint64_t sub_24452CA5C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_24452D058(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24452CBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_2444F2780();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_244533EDC();
      swift_bridgeObjectRetain();
      sub_2445339CC();
      v19 = sub_244533EF4();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_244533DF8() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_244533DF8() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_24452D1E4((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_2444F2780();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_24452D1E4((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_2444F2780();
      MEMORY[0x249511654](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_24452D058(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_244533EDC();
  swift_bridgeObjectRetain();
  sub_2445339CC();
  v6 = sub_244533EF4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_244533DF8() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_244533DF8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_244513194();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_24452D754(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_24452D1E4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_24452D4C0(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v22 = sub_244533EF4();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_244533DF8() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_244533DF8() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_24452D4C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257369110);
  result = sub_244533BA0();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_244533EDC();
    swift_bridgeObjectRetain();
    sub_2445339CC();
    result = sub_244533EF4();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_24452D754(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_244533B7C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_244533EDC();
        swift_bridgeObjectRetain();
        sub_2445339CC();
        v10 = sub_244533EF4();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_24452D918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257369EF0;
  if (!qword_257369EF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257369EE8);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE1718], v1);
    atomic_store(result, (unint64_t *)&qword_257369EF0);
  }
  return result;
}

unint64_t sub_24452D964()
{
  unint64_t result;

  result = qword_257369EF8;
  if (!qword_257369EF8)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for UserDefinedBlockError, &type metadata for UserDefinedBlockError);
    atomic_store(result, (unint64_t *)&qword_257369EF8);
  }
  return result;
}

uint64_t sub_24452D9A8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  BOOL v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _QWORD);
  uint64_t *v44;
  uint64_t *v45;
  unint64_t v46;
  char v47;
  char v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  int v52;
  _QWORD *v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void (*v74)(_BYTE *, _QWORD);
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  _BYTE v82[32];
  _QWORD *v83;

  LODWORD(v74) = a1;
  v81 = sub_24453375C();
  v5 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368470);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v69 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v69 - v12;
  v14 = *(_QWORD *)(a2 + 56);
  v75 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v76 = (unint64_t)(v15 + 63) >> 6;
  v77 = a2;
  swift_bridgeObjectRetain();
  v18 = 0;
  v71 = a3;
  v72 = v13;
  v79 = v5;
  while (v17)
  {
    v22 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v23 = v22 | (v18 << 6);
LABEL_26:
    v27 = (uint64_t *)(*(_QWORD *)(v77 + 48) + 16 * v23);
    v29 = *v27;
    v28 = v27[1];
    swift_bridgeObjectRetain_n();
    v30 = sub_2445337EC();
    v31 = *(_QWORD *)(v30 + 16);
    v80 = v18;
    if (v31 && (v32 = sub_2444EB9F0(v29, v28), (v33 & 1) != 0))
    {
      v34 = v81;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v13, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v5 + 72) * v32, v81);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v35(v13, 0, 1, v34);
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v34 = v81;
      v35(v13, 1, 1, v81);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
    v37 = v36(v13, 1, v34);
    sub_24452EFBC((uint64_t)v13);
    v38 = v37 == 1;
    v39 = v78;
    if (v38)
    {
      swift_bridgeObjectRetain();
      sub_2444F5BA0(MEMORY[0x24BEE4AF8]);
      sub_244533738();
      v40 = v81;
      v35(v39, 0, 1, v81);
      v41 = sub_2445337E0();
      v42 = (uint64_t)v78;
      v43 = (void (*)(_BYTE *, _QWORD))v41;
      v45 = v44;
      if (v36(v78, 1, v40) == 1)
      {
        sub_24452EFBC(v42);
        swift_bridgeObjectRetain();
        v46 = sub_2444EB9F0(v29, v28);
        v48 = v47;
        swift_bridgeObjectRelease();
        if ((v48 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v83 = (_QWORD *)*v45;
          *v45 = 0x8000000000000000;
          v21 = (uint64_t)v70;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_2444F9790();
          v50 = (uint64_t)v83;
          swift_bridgeObjectRelease();
          v20 = v81;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v79 + 32))(v21, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v79 + 72) * v46, v81);
          sub_2444F766C(v46, v50);
          *v45 = v50;
          swift_bridgeObjectRelease();
          v19 = 0;
        }
        else
        {
          v19 = 1;
          v20 = v81;
          v21 = (uint64_t)v70;
        }
        v35((char *)v21, v19, 1, v20);
        swift_bridgeObjectRelease();
        sub_24452EFBC(v21);
        v13 = v72;
        v43(v82, 0);
      }
      else
      {
        v74 = v43;
        v51 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 32);
        v51(v73, v42, v40);
        v52 = swift_isUniquelyReferenced_nonNull_native();
        v83 = (_QWORD *)*v45;
        v53 = v83;
        *v45 = 0x8000000000000000;
        v55 = sub_2444EB9F0(v29, v28);
        v56 = v53[2];
        v57 = (v54 & 1) == 0;
        v58 = v56 + v57;
        if (__OFADD__(v56, v57))
          goto LABEL_50;
        v59 = v54;
        if (v53[3] >= v58)
        {
          if ((v52 & 1) == 0)
            sub_2444F9790();
        }
        else
        {
          sub_2444EE7E8(v58, v52);
          v60 = sub_2444EB9F0(v29, v28);
          if ((v59 & 1) != (v61 & 1))
            goto LABEL_53;
          v55 = v60;
        }
        v62 = v81;
        v13 = v72;
        v63 = v83;
        if ((v59 & 1) != 0)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v79 + 40))(v83[7] + *(_QWORD *)(v79 + 72) * v55, v73, v81);
        }
        else
        {
          v83[(v55 >> 6) + 8] |= 1 << v55;
          v64 = (uint64_t *)(v63[6] + 16 * v55);
          *v64 = v29;
          v64[1] = v28;
          v51((char *)(v63[7] + *(_QWORD *)(v79 + 72) * v55), (uint64_t)v73, v62);
          v65 = v63[2];
          v66 = __OFADD__(v65, 1);
          v67 = v65 + 1;
          if (v66)
            goto LABEL_51;
          v63[2] = v67;
          swift_bridgeObjectRetain();
        }
        *v45 = (uint64_t)v83;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v74(v82, 0);
      }
      LODWORD(v74) = 1;
    }
    swift_bridgeObjectRelease();
    v5 = v79;
    v18 = v80;
  }
  v24 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v24 >= v76)
    goto LABEL_48;
  v25 = *(_QWORD *)(v75 + 8 * v24);
  ++v18;
  if (v25)
    goto LABEL_25;
  v18 = v24 + 1;
  if (v24 + 1 >= v76)
    goto LABEL_48;
  v25 = *(_QWORD *)(v75 + 8 * v18);
  if (v25)
    goto LABEL_25;
  v18 = v24 + 2;
  if (v24 + 2 >= v76)
    goto LABEL_48;
  v25 = *(_QWORD *)(v75 + 8 * v18);
  if (v25)
    goto LABEL_25;
  v18 = v24 + 3;
  if (v24 + 3 >= v76)
    goto LABEL_48;
  v25 = *(_QWORD *)(v75 + 8 * v18);
  if (v25)
  {
LABEL_25:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v18 << 6);
    goto LABEL_26;
  }
  v26 = v24 + 4;
  if (v26 >= v76)
  {
LABEL_48:
    swift_release();
    return v74 & 1;
  }
  v25 = *(_QWORD *)(v75 + 8 * v26);
  if (v25)
  {
    v18 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v18 >= v76)
      goto LABEL_48;
    v25 = *(_QWORD *)(v75 + 8 * v18);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45[3];
  unsigned __int8 v46;
  uint64_t v47;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24453381C();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - v13;
  v39 = v15;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v37((char *)&v37 - v13, a1, v10);
  v16 = MEMORY[0x24BEE4B08];
  v47 = MEMORY[0x24BEE4B08];
  v46 = 0;
  v17 = *(_QWORD *)(a3 + 16);
  v40 = v10;
  v41 = a1;
  v38 = v9;
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v20 = *(v18 - 1);
      v19 = *v18;
      v45[0] = *(v18 - 2);
      v45[1] = v20;
      v45[2] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24452477C(&v46, v45, a2, (uint64_t)&v47, &v44);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v44;
      v46 = v44;
      v18 += 3;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        v16 = v47;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v40;
    v35 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v35(v41, v40);
    v35((uint64_t)v14, v34);
    type metadata accessor for AutomaticProtobufFactory();
    v33 = v43;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = 0;
LABEL_7:
    v22 = v43;
    swift_bridgeObjectRetain();
    v23 = sub_24452D9A8(0, v16, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_BYTE *)(v22 + 24) = (v23 | v21) & 1;
    *(_BYTE *)(v22 + 25) = 2;
    v24 = v40;
    v37(v42, (uint64_t)v14, v40);
    type metadata accessor for ProtobufFactory();
    v25 = swift_allocObject();
    v26 = v25 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
    v27 = sub_244533720();
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v28(v26, 1, 1, v27);
    v29 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v25 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest, v42, v24);
    *(_QWORD *)(v25 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = a2;
    v30 = (uint64_t)v38;
    v28((uint64_t)v38, 1, 1, v27);
    v31 = v25 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
    swift_beginAccess();
    sub_2444EADEC(v30, v31);
    swift_endAccess();
    v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v32(v41, v24);
    v32((uint64_t)v14, v24);
    v33 = v43;
    *(_QWORD *)(v43 + 16) = v25;
  }
  return v33;
}

uint64_t AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v19 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24453381C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 25) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  type metadata accessor for ProtobufFactory();
  v13 = swift_allocObject();
  v14 = v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  v15 = sub_244533720();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest, v12, v9);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap) = v20;
  v16((uint64_t)v8, 1, 1, v15);
  v17 = v13 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EADEC((uint64_t)v8, v17);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v9);
  *(_QWORD *)(v3 + 16) = v13;
  return v3;
}

uint64_t sub_24452E504(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v8 = *a1;
  v9 = v4;
  v10 = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_messageNameMap);
  swift_bridgeObjectRetain();
  sub_24452E678(&v8, v6);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v8 = v3;
    v9 = v4;
    v10 = v5;
    return sub_2444EB1C4(&v8);
  }
  return result;
}

uint64_t AutomaticProtobufFactory.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_24452E5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  v4 = sub_24453381C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24452E630()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24452E648()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24452E678(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257367E48);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24453381C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - v10;
  v13 = *a1;
  v12 = a1[1];
  v14 = a1[2];
  v34 = *(_QWORD *)(v2 + 16);
  v15 = v34 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_manifest;
  swift_beginAccess();
  v37 = v7;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v17 = v6;
  v16(v11, v15, v6);
  v36 = v2;
  v18 = *(unsigned __int8 *)(v2 + 25);
  if (v18 == 2)
  {
    v19 = v42;
    v20 = v38;
    v21 = 0;
  }
  else
  {
    v39 = v13;
    v40 = v12;
    v41 = v14;
    v22 = v38;
    v23 = sub_244524A78(&v39, v42, v18 & 1);
    if (v22)
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v17);
    v21 = v23;
    v19 = v42;
    v20 = 0;
  }
  v39 = v13;
  v40 = v12;
  v41 = v14;
  v24 = sub_244524DC0(&v39, v19);
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v17);
  v26 = v17;
  v27 = v37;
  if (((v24 | v21) & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v26);
  v28 = v33;
  v16(v33, (uint64_t)v11, v26);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 40))(v15, v28, v26);
  swift_endAccess();
  v29 = sub_244533720();
  v30 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
  v31 = v34 + OBJC_IVAR____TtC12PoirotBlocks15ProtobufFactory_store;
  swift_beginAccess();
  sub_2444EADEC(v30, v31);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
  v32 = v36;
  result = swift_beginAccess();
  *(_BYTE *)(v32 + 24) = 1;
  return result;
}

uint64_t sub_24452E938(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;

  v4 = v3;
  v27 = sub_244533720();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2445337BC();
  v22 = *(_QWORD *)(v10 - 8);
  v23 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v24 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = *a1 == a2 && v13 == a3;
  if (v15 || (sub_244533DF8() & 1) != 0)
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257369F00);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2445369D0;
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(inited + 40) = v13;
    *(_QWORD *)(inited + 48) = a2;
    *(_QWORD *)(inited + 56) = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = inited;
  }
  v18 = sub_2444F5960(v16);
  v26[0] = v12;
  v26[1] = v13;
  v26[2] = v14;
  sub_24452E678(v26, v18);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    sub_2444EAE34((uint64_t)v9);
    v19 = v24;
    sub_244533714();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v27);
    v12 = sub_2445337B0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v23);
  }
  return v12;
}

uint64_t sub_24452EB60()
{
  uint64_t v0;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v0 + 24) = 0;
  return result;
}

uint64_t type metadata accessor for AutomaticProtobufFactory()
{
  return objc_opt_self();
}

uint64_t AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  AutomaticProtobufFactory.init(manifest:messageNameMap:allColumnsArePivots:)(a1, a2, a3);
  return v6;
}

uint64_t AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  AutomaticProtobufFactory.init(manifest:messageNameMap:columnsLayout:)(a1, a2, a3);
  return v6;
}

uint64_t AutomaticProtobufFactory.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24452EC9C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24452ECB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24452E938(a1, a2, a3);
}

uint64_t sub_24452ECD8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_24452ED1C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 24) = v2;
  return result;
}

uint64_t method lookup function for AutomaticProtobufFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.manifest.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.messageNameMap.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.manifestUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:allColumnsArePivots:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.__allocating_init(manifest:messageNameMap:columnsLayout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.makeFlatMessagePayload(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.makeFlatMessagePayload(with:messageName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AutomaticProtobufFactory.resetUpdatedState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t getEnumTagSinglePayload for AutomaticProtobufFactory.DrivenBy(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24452EE50 + 4 * asc_244539B70[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AutomaticProtobufFactory.DrivenBy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24452EF08 + 4 * byte_244539B7A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24452EF3C + 4 * byte_244539B75[v5]))();
}

uint64_t sub_24452EF3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452EF44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24452EF4CLL);
  return result;
}

uint64_t sub_24452EF58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24452EF60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24452EF64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452EF6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24452EF78(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_24452EF94(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for AutomaticProtobufFactory.DrivenBy()
{
  return &type metadata for AutomaticProtobufFactory.DrivenBy;
}

uint64_t sub_24452EFBC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257368470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24452EFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_244533EDC();
    sub_2445339CC();
    v6 = sub_244533EF4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_244533DF8() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_244533DF8() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

id sub_24452F134(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 5:
    case 6:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for JoinBlockError(uint64_t a1)
{
  sub_24452F17C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_24452F17C(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      break;
    case 5:
    case 6:

      break;
    default:
      return;
  }
}

uint64_t _s12PoirotBlocks14JoinBlockErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24452F134(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JoinBlockError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24452F134(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_24452F17C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JoinBlockError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_24452F17C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JoinBlockError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JoinBlockError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JoinBlockError()
{
  return &type metadata for JoinBlockError;
}

void sub_24452F330(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24452F33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v18[2];
  uint64_t v19;

  v5 = v4;
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  swift_retain();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_2444FA050(v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 56) = v10;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_2444FA050(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 64) = v12;
  if (*(_QWORD *)(v10 + 16) < 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244533BAC();
    swift_bridgeObjectRelease();
    strcpy((char *)v18, "Configured: ");
    BYTE5(v18[1]) = 0;
    HIWORD(v18[1]) = -5120;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16);
    sub_244533DBC();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v13 = v18[1];
    sub_2445314F8();
    swift_allocError();
    v15 = 0;
    *(_QWORD *)v14 = v18[0];
LABEL_6:
    *(_QWORD *)(v14 + 8) = v13;
    *(_BYTE *)(v14 + 16) = v15;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244529514(*(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80));
    swift_release();
    type metadata accessor for JoinBlock();
    swift_deallocPartialClassInstance();
    return v5;
  }
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244533BAC();
    swift_bridgeObjectRelease();
    strcpy((char *)v18, "Configured: ");
    BYTE5(v18[1]) = 0;
    HIWORD(v18[1]) = -5120;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 64) + 16);
    sub_244533DBC();
    sub_2445339D8();
    swift_bridgeObjectRelease();
    sub_2445339D8();
    v13 = v18[1];
    sub_2445314F8();
    swift_allocError();
    *(_QWORD *)v14 = v18[0];
    v15 = 1;
    goto LABEL_6;
  }
  swift_release();
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_24452F634(unint64_t *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;

  sub_24452F6E4(a1);
  if (v1)
  {
    v2 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if (swift_dynamicCast())
    {
      sub_24452F17C(v4, v5, v6);
    }
    else
    {
      sub_2445314F8();
      swift_allocError();
      *(_QWORD *)v3 = v1;
      *(_QWORD *)(v3 + 8) = 0;
      *(_BYTE *)(v3 + 16) = 5;
      swift_willThrow();
    }
  }
}

uint64_t sub_24452F6E4(unint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  char v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  BOOL v82;
  uint64_t v83;
  _QWORD *v84;
  BOOL v85;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  _QWORD *v92;
  BOOL v93;
  int v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t result;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  size_t v123;
  uint64_t v124;
  uint64_t v125;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v127;
  uint64_t v128;
  unint64_t *v129;
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25736A180);
  MEMORY[0x24BDAC7A8](v3);
  v147 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for DatasetColumnDescription(0);
  v143 = *(_QWORD *)(v145 - 8);
  v5 = MEMORY[0x24BDAC7A8](v145);
  v7 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v138 = (uint64_t *)((char *)&v127 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v148 = (uint64_t)&v127 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v139 = (uint64_t)&v127 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v136 = (uint64_t)&v127 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v135 = (uint64_t)&v127 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v144 = (uint64_t *)((char *)&v127 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v146 = (uint64_t *)((char *)&v127 - v20);
  v21 = (_QWORD *)sub_2444F57BC(MEMORY[0x24BEE4AF8]);
  v140 = v1;
  v22 = v1[7];
  v23 = *(_QWORD *)(v22 + 56);
  v130 = v22 + 56;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v131 = (unint64_t)(v24 + 63) >> 6;
  swift_bridgeObjectRetain();
  v27 = 0;
  v137 = v7;
  v128 = v22;
  v129 = a1;
  while (1)
  {
    if (v26)
    {
      v133 = (v26 - 1) & v26;
      v134 = v27;
      v28 = __clz(__rbit64(v26)) | (v27 << 6);
    }
    else
    {
      v29 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_100;
      if (v29 >= v131)
        goto LABEL_97;
      v30 = *(_QWORD *)(v130 + 8 * v29);
      v31 = v27 + 1;
      if (!v30)
      {
        v31 = v27 + 2;
        if (v27 + 2 >= v131)
          goto LABEL_97;
        v30 = *(_QWORD *)(v130 + 8 * v31);
        if (!v30)
        {
          v31 = v27 + 3;
          if (v27 + 3 >= v131)
            goto LABEL_97;
          v30 = *(_QWORD *)(v130 + 8 * v31);
          if (!v30)
          {
            v32 = v27 + 4;
            if (v27 + 4 >= v131)
              goto LABEL_97;
            v30 = *(_QWORD *)(v130 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                v31 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_101;
                if (v31 >= v131)
                  break;
                v30 = *(_QWORD *)(v130 + 8 * v31);
                ++v32;
                if (v30)
                  goto LABEL_22;
              }
LABEL_97:
              v119 = a1;
              swift_release();
              v120 = v140;
              v122 = v140[4];
              v121 = v140[5];
              swift_bridgeObjectRetain();
              v123 = sub_244505CD0((uint64_t)v21);
              swift_bridgeObjectRelease();
              v125 = v120[9];
              v124 = v120[10];
              v120[9] = v122;
              v120[10] = v121;
              v120[11] = v123;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_244529514(v125, v124);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v151 = *v119;
              *v119 = 0x8000000000000000;
              sub_2444F789C(v122, v121, v123, v122, v121, isUniquelyReferenced_nonNull_native);
              *v119 = v151;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
            v31 = v27 + 4;
          }
        }
      }
LABEL_22:
      v133 = (v30 - 1) & v30;
      v134 = v31;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
    }
    v33 = (uint64_t *)(*(_QWORD *)(v22 + 48) + 16 * v28);
    v35 = *v33;
    v34 = v33[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = sub_2444EB9F0(v35, v34);
    v37 = (uint64_t *)a1;
    v39 = v38;
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v151 = 0;
      v152 = 0xE000000000000000;
      sub_244533BAC();
      swift_bridgeObjectRelease();
      v151 = 0xD000000000000015;
      v152 = 0x8000000244535B00;
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445339D8();
      v116 = v151;
      v117 = v152;
      sub_2445314F8();
      swift_allocError();
      *(_QWORD *)v118 = v116;
      *(_QWORD *)(v118 + 8) = v117;
      *(_BYTE *)(v118 + 16) = 2;
      swift_willThrow();
      return swift_release();
    }
    v40 = swift_isUniquelyReferenced_nonNull_native();
    v41 = *v37;
    v151 = *v37;
    *v37 = 0x8000000000000000;
    if (!v40)
    {
      sub_2444F8920();
      v41 = v151;
    }
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 24 * v36 + 16);
    sub_2444F6E0C(v36, v41);
    *v37 = v41;
    v43 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = *(_QWORD *)(v42 + 16);
    v45 = (uint64_t)v144;
    v142 = v44;
    if (v44)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = v129;
    v27 = v134;
    v26 = v133;
  }
  v46 = v143;
  v141 = v43 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  v132 = v43;
  swift_bridgeObjectRetain();
  v47 = 0;
  v153 = *(_QWORD *)(v46 + 72);
  v49 = v145;
  v48 = v146;
  v50 = v147;
  while (1)
  {
    sub_24450D41C(v141 + v153 * v47, (uint64_t)v48, type metadata accessor for DatasetColumnDescription);
    if (!v21[2])
      break;
    v53 = *v48;
    v52 = v48[1];
    swift_bridgeObjectRetain();
    v54 = sub_2444EB9F0(v53, v52);
    if ((v55 & 1) != 0)
    {
      v50 = v147;
      sub_24450D41C(v21[7] + v54 * v153, v147, type metadata accessor for DatasetColumnDescription);
      v56 = 0;
    }
    else
    {
      v56 = 1;
      v50 = v147;
    }
    v57 = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v50, v56, 1, v49);
    swift_bridgeObjectRelease();
    v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v50, 1, v49);
    v7 = v137;
    if (v58 == 1)
      goto LABEL_37;
    sub_2444F27D4(v50, v45);
    v75 = v140[8];
    if (!*(_QWORD *)(v75 + 16))
      goto LABEL_93;
    sub_244533EDC();
    swift_bridgeObjectRetain();
    sub_2445339CC();
    v76 = sub_244533EF4();
    v77 = -1 << *(_BYTE *)(v75 + 32);
    v78 = v76 & ~v77;
    v79 = v75 + 56;
    if (((*(_QWORD *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
      goto LABEL_92;
    v80 = *(_QWORD *)(v75 + 48);
    v81 = (_QWORD *)(v80 + 16 * v78);
    v82 = *v81 == v53 && v81[1] == v52;
    if (!v82 && (sub_244533DF8() & 1) == 0)
    {
      v83 = ~v77;
      while (1)
      {
        v78 = (v78 + 1) & v83;
        if (((*(_QWORD *)(v79 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
          break;
        v84 = (_QWORD *)(v80 + 16 * v78);
        v85 = *v84 == v53 && v84[1] == v52;
        if (v85 || (sub_244533DF8() & 1) != 0)
          goto LABEL_59;
      }
LABEL_92:
      swift_bridgeObjectRelease();
      v45 = (uint64_t)v144;
LABEL_93:
      v151 = 0;
      v152 = 0xE000000000000000;
      sub_244533BAC();
      sub_2445339D8();
      v107 = v139;
      sub_24450D41C(v45, v139, type metadata accessor for DatasetColumnDescription);
      sub_24453399C();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      sub_2445339D8();
      v108 = (uint64_t)v146;
      sub_24450D41C((uint64_t)v146, v107, type metadata accessor for DatasetColumnDescription);
      sub_24453399C();
      sub_2445339D8();
      swift_bridgeObjectRelease();
      v110 = v151;
      v109 = v152;
      sub_2445314F8();
      swift_allocError();
      *(_QWORD *)v111 = v110;
      v112 = 4;
LABEL_95:
      *(_QWORD *)(v111 + 8) = v109;
      *(_BYTE *)(v111 + 16) = v112;
      swift_willThrow();
      sub_2444FA12C(v45);
      swift_bridgeObjectRelease();
      sub_2444FA12C(v108);
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
LABEL_59:
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v144;
    if (v53 == *v144 && v52 == v144[1])
    {
      sub_24450D41C((uint64_t)v146, v135, type metadata accessor for DatasetColumnDescription);
      sub_24450D41C(v45, v136, type metadata accessor for DatasetColumnDescription);
    }
    else
    {
      v87 = sub_244533DF8();
      v88 = v135;
      sub_24450D41C((uint64_t)v146, v135, type metadata accessor for DatasetColumnDescription);
      v89 = v136;
      sub_24450D41C(v45, v136, type metadata accessor for DatasetColumnDescription);
      if ((v87 & 1) == 0)
        goto LABEL_94;
    }
    sub_244533618();
    sub_2444E4A28(&qword_257368C38, (uint64_t (*)(uint64_t))MEMORY[0x24BE740D0], MEMORY[0x24BE740E8]);
    sub_244533A14();
    sub_244533A14();
    if (v151 == v149 && v152 == v150)
    {
      swift_bridgeObjectRelease_n();
      v49 = v145;
      v89 = v136;
      v88 = v135;
    }
    else
    {
      v90 = sub_244533DF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = v145;
      v89 = v136;
      v88 = v135;
      if ((v90 & 1) == 0)
      {
LABEL_94:
        sub_2444FA12C(v88);
        sub_2444FA12C(v89);
        v151 = 0;
        v152 = 0xE000000000000000;
        sub_244533BAC();
        sub_2445339D8();
        v113 = v139;
        sub_24450D41C(v45, v139, type metadata accessor for DatasetColumnDescription);
        sub_24453399C();
        sub_2445339D8();
        swift_bridgeObjectRelease();
        sub_2445339D8();
        v108 = (uint64_t)v146;
        sub_24450D41C((uint64_t)v146, v113, type metadata accessor for DatasetColumnDescription);
        sub_24453399C();
        sub_2445339D8();
        swift_bridgeObjectRelease();
        v114 = v151;
        v109 = v152;
        sub_2445314F8();
        swift_allocError();
        *(_QWORD *)v111 = v114;
        v112 = 3;
        goto LABEL_95;
      }
    }
    sub_2444FA12C(v88);
    sub_2444FA12C(v89);
    v51 = v45;
    v48 = v146;
    v50 = v147;
LABEL_30:
    ++v47;
    sub_2444FA12C(v51);
    sub_2444FA12C((uint64_t)v48);
    if (v47 == v142)
    {
      swift_bridgeObjectRelease();
      v22 = v128;
      goto LABEL_6;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v50, 1, 1, v49);
LABEL_37:
  sub_2444EC024(v50, (uint64_t *)&unk_25736A180);
  v59 = (uint64_t)v48;
  v60 = v139;
  sub_24450D41C(v59, v139, type metadata accessor for DatasetColumnDescription);
  v61 = *(_QWORD *)(v60 + 8);
  v62 = (uint64_t)v138;
  *v138 = *(_QWORD *)v60;
  *(_QWORD *)(v62 + 8) = v61;
  *(_BYTE *)(v62 + 16) = *(_BYTE *)(v60 + 16);
  sub_24450D41C(v60 + *(int *)(v49 + 24), v62 + *(int *)(v49 + 24), type metadata accessor for DatasetColumnType);
  v63 = *(_BYTE *)(v60 + *(int *)(v49 + 28));
  swift_bridgeObjectRetain();
  sub_2444FA12C(v60);
  *(_BYTE *)(v62 + *(int *)(v49 + 28)) = v63;
  v64 = v148;
  sub_2444F27D4(v62, v148);
  v65 = v140[8];
  v66 = *(_QWORD *)v64;
  v67 = *(_QWORD *)(v64 + 8);
  if (*(_QWORD *)(v65 + 16))
  {
    sub_244533EDC();
    swift_bridgeObjectRetain();
    sub_2445339CC();
    v68 = sub_244533EF4();
    v69 = -1 << *(_BYTE *)(v65 + 32);
    v70 = v68 & ~v69;
    v71 = v65 + 56;
    if (((*(_QWORD *)(v65 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) != 0)
    {
      v72 = *(_QWORD *)(v65 + 48);
      v73 = (_QWORD *)(v72 + 16 * v70);
      v74 = *v73 == v66 && v73[1] == v67;
      if (v74 || (sub_244533DF8() & 1) != 0)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        v64 = v148;
        goto LABEL_81;
      }
      v91 = ~v69;
      while (1)
      {
        v70 = (v70 + 1) & v91;
        if (((*(_QWORD *)(v71 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
          break;
        v92 = (_QWORD *)(v72 + 16 * v70);
        v93 = *v92 == v66 && v92[1] == v67;
        if (v93 || (sub_244533DF8() & 1) != 0)
          goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();
    v64 = v148;
  }
  *(_BYTE *)(v64 + 16) = 1;
LABEL_81:
  sub_24450D41C(v64, (uint64_t)v7, type metadata accessor for DatasetColumnDescription);
  swift_bridgeObjectRetain();
  v94 = swift_isUniquelyReferenced_nonNull_native();
  v151 = (unint64_t)v21;
  v96 = sub_2444EB9F0(v66, v67);
  v97 = v21[2];
  v98 = (v95 & 1) == 0;
  v99 = v97 + v98;
  if (!__OFADD__(v97, v98))
  {
    v100 = v95;
    if (v21[3] >= v99)
    {
      v50 = v147;
      if ((v94 & 1) != 0)
      {
        v48 = v146;
        v21 = (_QWORD *)v151;
        if ((v95 & 1) == 0)
        {
LABEL_89:
          v21[(v96 >> 6) + 8] |= 1 << v96;
          v103 = (uint64_t *)(v21[6] + 16 * v96);
          *v103 = v66;
          v103[1] = v67;
          sub_2444F27D4((uint64_t)v7, v21[7] + v96 * v153);
          v104 = v21[2];
          v105 = __OFADD__(v104, 1);
          v106 = v104 + 1;
          if (v105)
            goto LABEL_99;
          v21[2] = v106;
          swift_bridgeObjectRetain();
          goto LABEL_29;
        }
LABEL_28:
        sub_244509DFC((uint64_t)v7, v21[7] + v96 * v153);
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v148;
        v45 = (uint64_t)v144;
        v49 = v145;
        goto LABEL_30;
      }
      sub_2444F8B40();
    }
    else
    {
      sub_2444ED3D8(v99, v94);
      v101 = sub_2444EB9F0(v66, v67);
      if ((v100 & 1) != (v102 & 1))
        goto LABEL_102;
      v96 = v101;
    }
    v48 = v146;
    v50 = v147;
    v21 = (_QWORD *)v151;
    if ((v100 & 1) == 0)
      goto LABEL_89;
    goto LABEL_28;
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  result = sub_244533E88();
  __break(1u);
  return result;
}

uint64_t sub_2445305C0(_QWORD **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_244533ABC();
  if (!v3)
    sub_244530DC4(a1, a2, a3);
  return 1;
}

uint64_t sub_2445306B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = v0;
  v3 = sub_244533264();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8];
  MEMORY[0x24BDAC7A8](v3);
  sub_244533294();
  swift_allocObject();
  sub_244533288();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694D8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_244538F30;
  sub_244533258();
  sub_24453324C();
  v18 = (_QWORD *)v5;
  sub_2444E4A28((unint64_t *)&qword_2573694E0, v4, MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573694E8);
  sub_244520BA4();
  sub_244533B70();
  sub_244533270();
  v6 = v2[10];
  if (!v6)
  {
    v9 = MEMORY[0x24BEE4AF8];
    goto LABEL_5;
  }
  v7 = v2[9];
  v8 = (_QWORD *)v2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2445369D0;
  v10 = v2[4];
  v11 = v2[5];
  v16 = v10;
  v18 = v8;
  swift_bridgeObjectRetain_n();
  v17 = v7;
  sub_244533170(v7, v6);
  swift_bridgeObjectRetain();
  sub_244531558(&v18);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367DE0);
    sub_2445331A0();
    v12 = sub_24453327C();
    v14 = v13;
    swift_release();
    *(_QWORD *)(v9 + 32) = v16;
    *(_QWORD *)(v9 + 40) = v11;
    *(_BYTE *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = v12;
    *(_QWORD *)(v9 + 64) = v14;
    sub_244529514(v17, v6);
LABEL_5:
    swift_release();
    return v9;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24453094C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51[12];

  v3 = v1;
  v51[10] = *MEMORY[0x24BDAC8D0];
  v40 = sub_244533594();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_2445335A0();
  v50 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24453357C();
  v48 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v46 = v3;
  v47 = (char *)&v35 - v12;
  v14 = v3[4];
  v13 = v3[5];
  v15 = v3[8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v16 = sub_244505DE8(v15);
  swift_bridgeObjectRelease();
  v51[0] = (uint64_t)v16;
  sub_244505C64(v51);
  if (v2)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v17 = 0;
    swift_bridgeObjectRelease();
    v36 = v14;
    v37 = v13;
    v18 = v13;
    v19 = v51[0];
    sub_244511B50(v14, v18, a1, (uint64_t)v11);
    v20 = *(_QWORD *)(v19 + 16);
    v21 = v48;
    if (v20)
    {
      v42 = 0;
      v43 = a1;
      v44 = v8;
      v49 = *MEMORY[0x24BDF5EF8];
      v22 = *(void (**)(char *, _QWORD, uint64_t))(v50 + 104);
      swift_retain();
      v41 = v19;
      v23 = v19 + 16 * v20 + 24;
      v24 = v45;
      do
      {
        --v20;
        v22(v7, v49, v24);
        sub_24453312C();
        swift_bridgeObjectRetain();
        sub_244533558();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v24);
        swift_bridgeObjectRelease();
        v23 -= 16;
      }
      while (v20);
      swift_release();
      v8 = v44;
      v21 = v48;
      v17 = v42;
    }
    v25 = v47;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v47, v11, v8);
    swift_bridgeObjectRelease();
    swift_release();
    v26 = sub_2445306B0();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v8);
    }
    else
    {
      v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257368498);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2445369D0;
      v29 = v37;
      swift_bridgeObjectRetain();
      v30 = v38;
      sub_244533588();
      v32 = sub_24453351C();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v40);
      *(_QWORD *)(inited + 32) = v36;
      *(_QWORD *)(inited + 40) = v29;
      *(_BYTE *)(inited + 48) = 1;
      *(_QWORD *)(inited + 56) = v32;
      *(_QWORD *)(inited + 64) = v34;
      v51[0] = v27;
      sub_2444FF1F0(inited);
      v21 = v51[0];
      (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v8);
    }
    return v21;
  }
  return result;
}

uint64_t sub_244530DC4(_QWORD **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD **v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  void (*v22)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29[3];
  uint64_t v30;

  v6 = v3;
  v9 = *a1;
  v29[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain_n();
  v10 = sub_244532E60((uint64_t)v9, sub_24453153C, v6, v29);
  if (v4)
    goto LABEL_2;
  v12 = v10;
  swift_bridgeObjectRelease();
  v13 = v29[0];
  v14 = *(_QWORD *)(v12 + 16);
  if (v14 > 1)
  {
    v27 = a3;
    v28 = v29[0];
    v30 = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRetain_n();
    v15 = (_QWORD **)(v12 + 48);
    do
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      v29[0] = *(v15 - 2);
      v29[1] = v16;
      v29[2] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244531148(&v30, (uint64_t)v29, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 3;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    v18 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29[0] = v28;
    v19 = swift_bridgeObjectRetain();
    sub_2444FF4A4(v19);
    *a1 = v29[0];
    ObjectType = swift_getObjectType();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v6;
    *(_QWORD *)(v21 + 24) = v18;
    v22 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v27 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v22(sub_244533114, v21, ObjectType, v27);
    swift_release();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v6 + 16) = 1;
    return 1;
  }
  *(_BYTE *)(v6 + 16) = 1;
  if (!*(_QWORD *)(v12 + 16))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = *(_QWORD *)(v6 + 32);
  v6 = *(_QWORD *)(v6 + 40);
  a3 = *(_QWORD *)(v12 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v23 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_16:
    v23 = sub_244500DB4(0, v13[2] + 1, 1, v13);
  v25 = v23[2];
  v24 = v23[3];
  if (v25 >= v24 >> 1)
    v23 = sub_244500DB4((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
  v23[2] = v25 + 1;
  v26 = &v23[3 * v25];
  v26[4] = v5;
  v26[5] = v6;
  v26[6] = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v23;
  return 1;
}

uint64_t sub_2445310F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_24452EFFC(v3, v2, v4);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_244531148(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a3 + 40);
  v26 = *(_QWORD *)(a3 + 32);
  v7 = v26;
  v27 = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_244532B18(v8, v26, v6, v5, 0);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  v11 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F90);
    v12 = sub_244533CA8();
  }
  else
  {
    v12 = MEMORY[0x24BEE4B00];
  }
  v25[0] = v12;
  v13 = swift_bridgeObjectRetain();
  sub_244532754(v13, 1, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v25[0];
  v15 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_2444EBC3C(v7, v6, v14);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    v23 = v6;
    v24 = v7;
    goto LABEL_11;
  }
  v18 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 24 * v16);
  v19 = *v18;
  v20 = v18[1];
  v21 = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25[0] = v19;
  v25[1] = v20;
  v25[2] = v21;
  sub_2444EC620(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v26;
  v23 = v27;
  v5 = v28;
LABEL_11:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_2444F8154(v24, v23, v5, v7, v6, v14, isUniquelyReferenced_nonNull_native);
  *a1 = v25[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2445313F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  swift_bridgeObjectRetain();
  v3 = sub_244505FB0(a2);
  swift_bridgeObjectRelease();
  v4 = sub_24453094C((uint64_t)v3);
  swift_release();
  return v4;
}

uint64_t sub_244531468()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_244529514(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_244531490()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244529514(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JoinBlock()
{
  return objc_opt_self();
}

unint64_t sub_2445314F8()
{
  unint64_t result;

  result = qword_25736A170;
  if (!qword_25736A170)
  {
    result = MEMORY[0x2495115A0](&protocol conformance descriptor for JoinBlockError, &type metadata for JoinBlockError);
    atomic_store(result, (unint64_t *)&qword_25736A170);
  }
  return result;
}

uint64_t sub_24453153C(uint64_t *a1)
{
  uint64_t v1;

  return sub_2445310F0(a1, v1) & 1;
}

uint64_t sub_244531558(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for DatasetColumnDescription(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2444F1CA0(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2445315D8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_2445315D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  BOOL v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;

  v2 = v1;
  v4 = type metadata accessor for DatasetColumnDescription(0);
  v143 = *(_QWORD *)(v4 - 8);
  v144 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v138 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v149 = (uint64_t)&v130 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v130 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v130 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v141 = (uint64_t *)((char *)&v130 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v140 = (uint64_t *)((char *)&v130 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v136 = (uint64_t *)((char *)&v130 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v135 = (uint64_t *)((char *)&v130 - v21);
  v151 = a1;
  v22 = a1[1];
  result = sub_244533DB0();
  if (result >= v22)
  {
    if (v22 < 0)
      goto LABEL_156;
    if (v22)
      return sub_244532048(0, v22, 1, v151);
    return result;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_164;
  v145 = v14;
  v146 = v11;
  v134 = result;
  if (v22 < 2)
  {
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v142 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
    v133 = MEMORY[0x24BEE4AF8];
    if (v22 != 1)
    {
      v30 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_122:
      if (v30 >= 2)
      {
        v123 = *v151;
        do
        {
          v124 = v30 - 2;
          if (v30 < 2)
            goto LABEL_151;
          if (!v123)
            goto LABEL_163;
          v125 = v28;
          v126 = *(_QWORD *)&v28[16 * v124 + 32];
          v127 = *(_QWORD *)&v28[16 * v30 + 24];
          sub_244532284(v123 + *(_QWORD *)(v143 + 72) * v126, v123 + *(_QWORD *)(v143 + 72) * *(_QWORD *)&v28[16 * v30 + 16], v123 + *(_QWORD *)(v143 + 72) * v127, v142);
          if (v2)
            break;
          if (v127 < v126)
            goto LABEL_152;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v125 = sub_2444F0D1C((uint64_t)v28);
          if (v124 >= *((_QWORD *)v125 + 2))
            goto LABEL_153;
          v128 = &v125[16 * v124 + 32];
          *(_QWORD *)v128 = v126;
          *((_QWORD *)v128 + 1) = v127;
          v129 = *((_QWORD *)v125 + 2);
          if (v30 > v129)
            goto LABEL_154;
          memmove(&v125[16 * v30 + 16], &v125[16 * v30 + 32], 16 * (v129 - v30));
          *((_QWORD *)v125 + 2) = v129 - 1;
          v30 = v129 - 1;
          v28 = v125;
        }
        while (v129 > 2);
      }
LABEL_133:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v133 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v25 = v24 >> 1;
    v26 = sub_244533A74();
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v143 + 80);
    v133 = v26;
    v142 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v31 = v29;
    v32 = v29 + 1;
    if (v29 + 1 >= v22)
    {
      v39 = v29 + 1;
      v40 = v146;
    }
    else
    {
      v33 = *v151;
      v34 = *(_QWORD *)(v143 + 72);
      v35 = v135;
      sub_24450D41C(*v151 + v34 * v32, (uint64_t)v135, type metadata accessor for DatasetColumnDescription);
      v139 = v31;
      v150 = v34;
      v36 = v33 + v34 * v31;
      v37 = v136;
      sub_24450D41C(v36, (uint64_t)v136, type metadata accessor for DatasetColumnDescription);
      v38 = *v35 == *v37 && v35[1] == v37[1];
      LODWORD(v148) = v38 ? 0 : sub_244533DF8();
      sub_2444FA12C((uint64_t)v136);
      sub_2444FA12C((uint64_t)v135);
      v31 = v139;
      v137 = v33;
      if (v139 + 2 >= v22)
      {
        v42 = v139 + 2;
        if ((v148 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        v147 = v150 * v32;
        v41 = v33;
        v42 = v139 + 2;
        v43 = v150 * (v139 + 2);
        while (1)
        {
          v44 = v22;
          v45 = v140;
          sub_24450D41C(v41 + v43, (uint64_t)v140, type metadata accessor for DatasetColumnDescription);
          v46 = v141;
          sub_24450D41C(v41 + v147, (uint64_t)v141, type metadata accessor for DatasetColumnDescription);
          v47 = *v45 == *v46 && v45[1] == v46[1];
          v48 = v47 ? 0 : sub_244533DF8();
          sub_2444FA12C((uint64_t)v141);
          sub_2444FA12C((uint64_t)v140);
          v22 = v44;
          if (((v148 ^ v48) & 1) != 0)
            break;
          v41 += v150;
          if (v44 == ++v42)
          {
            v42 = v44;
            break;
          }
        }
        v31 = v139;
        if ((v148 & 1) == 0)
        {
LABEL_35:
          v40 = v146;
          v39 = v42;
          goto LABEL_51;
        }
      }
      if (v42 < v31)
        goto LABEL_157;
      v39 = v42;
      if (v31 >= v42)
      {
        v40 = v146;
      }
      else
      {
        v147 = v22;
        v132 = v28;
        v49 = 0;
        v50 = v31;
        v51 = v150 * (v39 - 1);
        v52 = v39 * v150;
        v53 = v50;
        v54 = v50 * v150;
        v40 = v146;
        do
        {
          if (v53 != v39 + v49 - 1)
          {
            v56 = v2;
            v57 = v137;
            if (!v137)
              goto LABEL_162;
            v58 = v137 + v54;
            v148 = v137 + v51;
            sub_2444F27D4(v137 + v54, v138);
            if (v54 < v51 || v58 >= v57 + v52)
            {
              v55 = v148;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v55 = v148;
              if (v54 != v51)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_2444F27D4(v138, v55);
            v40 = v146;
            v2 = v56;
          }
          ++v53;
          --v49;
          v51 -= v150;
          v52 -= v150;
          v54 += v150;
        }
        while (v53 < v39 + v49);
        v28 = v132;
        v31 = v139;
        v22 = v147;
      }
    }
LABEL_51:
    v148 = v39;
    if (v39 >= v22)
      goto LABEL_74;
    if (__OFSUB__(v39, v31))
      goto LABEL_155;
    if (v39 - v31 >= v134)
      goto LABEL_74;
    if (__OFADD__(v31, v134))
      goto LABEL_158;
    v59 = v31 + v134 >= v22 ? v22 : v31 + v134;
    if (v59 < v31)
      break;
    v60 = v148;
    if (v148 != v59)
    {
      v61 = v40;
      v139 = v31;
      v131 = v2;
      v132 = v28;
      v62 = *(_QWORD *)(v143 + 72);
      v150 = v62 * (v148 - 1);
      v147 = v62;
      v63 = v148 * v62;
      v137 = v59;
      do
      {
        v64 = 0;
        v65 = v139;
        v148 = v63;
        while (1)
        {
          v66 = *v151;
          v67 = v145;
          sub_24450D41C(v63 + v64 + *v151, (uint64_t)v145, type metadata accessor for DatasetColumnDescription);
          sub_24450D41C(v150 + v64 + v66, (uint64_t)v61, type metadata accessor for DatasetColumnDescription);
          if (*v67 == *v61 && v67[1] == v61[1])
            break;
          v69 = sub_244533DF8();
          sub_2444FA12C((uint64_t)v61);
          sub_2444FA12C((uint64_t)v67);
          if ((v69 & 1) == 0)
            goto LABEL_62;
          v70 = *v151;
          v63 = v148;
          if (!*v151)
            goto LABEL_160;
          v71 = v70 + v150 + v64;
          sub_2444F27D4(v70 + v148 + v64, v149);
          swift_arrayInitWithTakeFrontToBack();
          sub_2444F27D4(v149, v71);
          v61 = v146;
          v64 -= v147;
          if (v60 == ++v65)
            goto LABEL_63;
        }
        sub_2444FA12C((uint64_t)v61);
        sub_2444FA12C((uint64_t)v67);
LABEL_62:
        v63 = v148;
LABEL_63:
        ++v60;
        v150 += v147;
        v63 += v147;
      }
      while (v60 != v137);
      v148 = v137;
      v2 = v131;
      v28 = v132;
      v31 = v139;
    }
LABEL_74:
    if (v148 < v31)
      goto LABEL_150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_2444F0998(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v73 = *((_QWORD *)v28 + 2);
    v72 = *((_QWORD *)v28 + 3);
    v30 = v73 + 1;
    if (v73 >= v72 >> 1)
      v28 = sub_2444F0998((char *)(v72 > 1), v73 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v30;
    v74 = v28 + 32;
    v75 = &v28[16 * v73 + 32];
    v76 = v148;
    *(_QWORD *)v75 = v31;
    *((_QWORD *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        v77 = v30 - 1;
        if (v30 >= 4)
        {
          v82 = &v74[16 * v30];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_139;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_140;
          v89 = v30 - 2;
          v90 = &v74[16 * v30 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_142;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_145;
          if (v94 >= v85)
          {
            v112 = &v74[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_149;
            v105 = v80 < v115;
            goto LABEL_111;
          }
        }
        else
        {
          if (v30 != 3)
          {
            v106 = *((_QWORD *)v28 + 4);
            v107 = *((_QWORD *)v28 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
            goto LABEL_105;
          }
          v79 = *((_QWORD *)v28 + 4);
          v78 = *((_QWORD *)v28 + 5);
          v88 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          v81 = v88;
        }
        if ((v81 & 1) != 0)
          goto LABEL_141;
        v89 = v30 - 2;
        v95 = &v74[16 * v30 - 32];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v98 = __OFSUB__(v96, v97);
        v99 = v96 - v97;
        v100 = v98;
        if (v98)
          goto LABEL_144;
        v101 = &v74[16 * v77];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v88 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v88)
          goto LABEL_147;
        if (__OFADD__(v99, v104))
          goto LABEL_148;
        if (v99 + v104 >= v80)
        {
          v105 = v80 < v104;
LABEL_111:
          if (v105)
            v77 = v89;
          goto LABEL_113;
        }
LABEL_105:
        if ((v100 & 1) != 0)
          goto LABEL_143;
        v108 = &v74[16 * v77];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v88 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v88)
          goto LABEL_146;
        if (v111 < v99)
          goto LABEL_14;
LABEL_113:
        v116 = v77 - 1;
        if (v77 - 1 >= v30)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!*v151)
          goto LABEL_161;
        v117 = v28;
        v118 = &v74[16 * v116];
        v119 = *(_QWORD *)v118;
        v120 = &v74[16 * v77];
        v121 = *((_QWORD *)v120 + 1);
        sub_244532284(*v151 + *(_QWORD *)(v143 + 72) * *(_QWORD *)v118, *v151 + *(_QWORD *)(v143 + 72) * *(_QWORD *)v120, *v151 + *(_QWORD *)(v143 + 72) * v121, v142);
        if (v2)
          goto LABEL_133;
        if (v121 < v119)
          goto LABEL_136;
        if (v77 > *((_QWORD *)v117 + 2))
          goto LABEL_137;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v74[16 * v116 + 8] = v121;
        v122 = *((_QWORD *)v117 + 2);
        if (v77 >= v122)
          goto LABEL_138;
        v28 = v117;
        v30 = v122 - 1;
        memmove(&v74[16 * v77], v120 + 16, 16 * (v122 - 1 - v77));
        *((_QWORD *)v117 + 2) = v122 - 1;
        if (v122 <= 2)
          goto LABEL_14;
      }
    }
    v30 = 1;
LABEL_14:
    v22 = v151[1];
    v29 = v148;
    if (v148 >= v22)
      goto LABEL_122;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  result = sub_244533C78();
  __break(1u);
  return result;
}

uint64_t sub_244532048(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a1;
  v28 = type metadata accessor for DatasetColumnDescription(0);
  v7 = MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v25 - v10);
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (uint64_t *)((char *)&v25 - v14);
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v33 = v16 * (v30 - 1);
    v29 = v16;
    v32 = v16 * v30;
LABEL_6:
    v17 = 0;
    v18 = v27;
    while (1)
    {
      v19 = *a4;
      sub_24450D41C(v32 + v17 + *a4, (uint64_t)v15, type metadata accessor for DatasetColumnDescription);
      sub_24450D41C(v33 + v17 + v19, (uint64_t)v11, type metadata accessor for DatasetColumnDescription);
      if (*v15 == *v11 && v15[1] == v11[1])
      {
        sub_2444FA12C((uint64_t)v11);
        result = sub_2444FA12C((uint64_t)v15);
LABEL_5:
        v33 += v29;
        v32 += v29;
        if (++v30 == v26)
          return result;
        goto LABEL_6;
      }
      v21 = sub_244533DF8();
      sub_2444FA12C((uint64_t)v11);
      result = sub_2444FA12C((uint64_t)v15);
      if ((v21 & 1) == 0)
        goto LABEL_5;
      v22 = *a4;
      if (!*a4)
        break;
      v23 = a4;
      v24 = v22 + v33 + v17;
      sub_2444F27D4(v22 + v32 + v17, v31);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_2444F27D4(v31, v24);
      v17 -= v29;
      ++v18;
      a4 = v23;
      if (v30 == v18)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_244532284(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  unint64_t v37;
  char v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v45 = type metadata accessor for DatasetColumnDescription(0);
  v8 = MEMORY[0x24BDAC7A8](v45);
  v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)((char *)&v43 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v43 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v43 - v17);
  v20 = *(_QWORD *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v21 = a1;
  if (a2 - a1 == 0x8000000000000000 && v20 == -1)
    goto LABEL_72;
  v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1)
    goto LABEL_73;
  v23 = (uint64_t)(a2 - a1) / v20;
  v48 = a1;
  v47 = a4;
  v24 = v22 / v20;
  if (v23 >= v22 / v20)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      v44 = a1;
      v26 = v24 * v20;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v34 = a4 + v26;
      v46 = a4 + v26;
      v48 = a2;
      if (v26 >= 1 && v44 < a2)
      {
        v36 = -v20;
        do
        {
          sub_24450D41C(v34 + v36, (uint64_t)v13, type metadata accessor for DatasetColumnDescription);
          v37 = a2 + v36;
          sub_24450D41C(a2 + v36, (uint64_t)v10, type metadata accessor for DatasetColumnDescription);
          if (*v13 == *v10 && v13[1] == v10[1])
            v39 = 0;
          else
            v39 = sub_244533DF8();
          v40 = a3 + v36;
          sub_2444FA12C((uint64_t)v10);
          sub_2444FA12C((uint64_t)v13);
          if ((v39 & 1) != 0)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v48 += v36;
          }
          else
          {
            v41 = v46;
            v46 += v36;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v41)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v37 = a2;
          }
          v34 = v46;
          if (v46 <= a4)
            break;
          a2 = v37;
          a3 += v36;
        }
        while (v37 > v44);
      }
LABEL_70:
      sub_2444F0C04(&v48, &v47, (uint64_t *)&v46);
      return 1;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = v23 * v20;
    if (a4 < v21 || v21 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v21)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v27 = a4 + v25;
    v46 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_24450D41C(a2, (uint64_t)v18, type metadata accessor for DatasetColumnDescription);
        sub_24450D41C(a4, (uint64_t)v16, type metadata accessor for DatasetColumnDescription);
        if (*v18 == *v16 && v18[1] == v16[1])
          break;
        v30 = sub_244533DF8();
        sub_2444FA12C((uint64_t)v16);
        sub_2444FA12C((uint64_t)v18);
        if ((v30 & 1) == 0)
          goto LABEL_32;
        v31 = v48;
        v32 = a2 + v20;
        if (v48 < a2 || v48 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 == a2)
        {
          v31 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v48 = v31 + v20;
        a4 = v47;
        if (v47 < v27)
        {
          a2 = v32;
          if (v32 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_2444FA12C((uint64_t)v16);
      sub_2444FA12C((uint64_t)v18);
LABEL_32:
      v31 = v48;
      v33 = v47 + v20;
      if (v48 < v47 || v48 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v48 != v47)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v47 = v33;
      v32 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_244533CB4();
  __break(1u);
  return result;
}

void sub_244532754(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46[3];
  id v47;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_2444E8AB8(a1 + 32, (uint64_t)&v44);
  v7 = v44;
  v8 = v45;
  v42 = v44;
  v43 = v45;
  sub_2444E8B00(v46, (uint64_t)v41);
  v9 = (_QWORD *)*a3;
  v11 = sub_2444EB9F0(v7, v8);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2444F8724();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v8;
    sub_2444E8B00(v41, v20[7] + 40 * v11);
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 88;
    while (1)
    {
      sub_2444E8AB8(v26, (uint64_t)&v44);
      v27 = v44;
      v28 = v45;
      v42 = v44;
      v43 = v45;
      sub_2444E8B00(v46, (uint64_t)v41);
      v29 = (_QWORD *)*a3;
      v30 = sub_2444EB9F0(v27, v28);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_2444ECD60(v34, 1);
        v30 = sub_2444EB9F0(v27, v28);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v28;
      sub_2444E8B00(v41, v37[7] + 40 * v30);
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v37[2] = v40;
      v26 += 56;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2444ECD60(v14, a2 & 1);
  v16 = sub_2444EB9F0(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v47 = v18;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257367F88);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_244533E88();
  __break(1u);
LABEL_26:
  sub_244533BAC();
  sub_2445339D8();
  sub_244533C30();
  sub_2445339D8();
  sub_244533C84();
  __break(1u);
}

uint64_t sub_244532B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 *v45;

  v8 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v45 = &v42;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_21;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_37;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_37;
      v18 = *(_QWORD *)(v8 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_37;
        v18 = *(_QWORD *)(v8 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v12)
            goto LABEL_37;
          v18 = *(_QWORD *)(v8 + 8 * v14);
          if (!v18)
          {
            v19 = v17 + 4;
            if (v19 >= v12)
            {
LABEL_37:
              swift_release();
              return (uint64_t)v33;
            }
            v18 = *(_QWORD *)(v8 + 8 * v19);
            v14 = v19;
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_20:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_21:
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    if (!*(_QWORD *)(a4 + 16))
    {
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
    swift_bridgeObjectRetain_n();
    v23 = sub_2444EB9F0(v21, v22);
    if ((v24 & 1) != 0)
    {
      sub_2444E8B18(*(_QWORD *)(a4 + 56) + 40 * v23, (uint64_t)&v38);
    }
    else
    {
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v39 + 1))
    {
      sub_2444E8B00(&v38, (uint64_t)&v34);
      *(_QWORD *)&v41 = v21;
      *((_QWORD *)&v41 + 1) = v22;
      sub_2444E8B00(&v34, (uint64_t)v45);
      if (*((_QWORD *)&v41 + 1))
        goto LABEL_28;
LABEL_35:
      result = sub_2444EC024((uint64_t)&v41, &qword_257369130);
    }
    else
    {
LABEL_33:
      sub_2444EC024((uint64_t)&v38, &qword_257367FB0);
      if ((a5 & 1) == 0)
      {
        sub_2444E8BE0();
        swift_allocError();
        *(_QWORD *)v32 = v21;
        *(_QWORD *)(v32 + 8) = v22;
        *(_BYTE *)(v32 + 16) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v33;
      }
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
      v41 = 0u;
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v41 + 1))
        goto LABEL_35;
LABEL_28:
      v34 = v41;
      v35 = v42;
      v36 = v43;
      v37 = v44;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
        v25 = v33;
      }
      else
      {
        result = (uint64_t)sub_244501238(0, v33[2] + 1, 1, v33);
        v25 = (_QWORD *)result;
      }
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
      {
        result = (uint64_t)sub_244501238((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
        v25 = (_QWORD *)result;
      }
      v25[2] = v27 + 1;
      v33 = v25;
      v28 = &v25[7 * v27];
      v29 = v34;
      v30 = v35;
      v31 = v36;
      v28[10] = v37;
      *((_OWORD *)v28 + 3) = v30;
      *((_OWORD *)v28 + 4) = v31;
      *((_OWORD *)v28 + 2) = v29;
    }
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v12)
      goto LABEL_37;
    v18 = *(_QWORD *)(v8 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_244532E60(uint64_t result, uint64_t (*a2)(uint64_t *), uint64_t a3, _QWORD **a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v5 = result;
  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v7 = 0;
    v8 = result + 40;
    v9 = MEMORY[0x24BEE4AF8];
    v24 = *(_QWORD *)(result + 16);
    v25 = result;
    v22 = result + 40;
    do
    {
      v23 = v9;
      v10 = (_OWORD *)(v8 + 24 * v7);
      v11 = v7;
      while (1)
      {
        if (v11 >= *(_QWORD *)(v5 + 16))
        {
          __break(1u);
          return result;
        }
        v12 = *((_QWORD *)v10 - 1);
        v28 = *v10;
        v29 = v12;
        v30 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = a2(&v29);
        if (v4)
        {
          v9 = v23;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        if ((v13 & 1) != 0)
          break;
        v14 = *a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v14 = sub_244500DB4(0, v14[2] + 1, 1, v14);
          *a4 = v14;
        }
        v17 = v14[2];
        v16 = v14[3];
        if (v17 >= v16 >> 1)
        {
          v14 = sub_244500DB4((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
          *a4 = v14;
        }
        ++v11;
        v14[2] = v17 + 1;
        v18 = &v14[3 * v17];
        v18[4] = v12;
        *(_OWORD *)(v18 + 5) = v28;
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v10 = (_OWORD *)((char *)v10 + 24);
        v5 = v25;
        if (v24 == v11)
        {
          v9 = v23;
          goto LABEL_21;
        }
      }
      v9 = v23;
      result = swift_isUniquelyReferenced_nonNull_native();
      v31 = v23;
      if ((result & 1) == 0)
      {
        result = sub_2444F0D4C(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v9 = v31;
      }
      v20 = *(_QWORD *)(v9 + 16);
      v19 = *(_QWORD *)(v9 + 24);
      if (v20 >= v19 >> 1)
      {
        result = sub_2444F0D4C(v19 > 1, v20 + 1, 1);
        v9 = v31;
      }
      v7 = v11 + 1;
      *(_QWORD *)(v9 + 16) = v20 + 1;
      v21 = v9 + 24 * v20;
      *(_QWORD *)(v21 + 32) = v12;
      *(_OWORD *)(v21 + 40) = v28;
      v8 = v22;
    }
    while (v6 - 1 != v11);
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2445330E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244533114()
{
  uint64_t v0;

  return sub_2445313F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_24453312C()
{
  unint64_t result;

  result = qword_25736A178;
  if (!qword_25736A178)
  {
    result = MEMORY[0x2495115A0](&unk_244538458, &type metadata for LogEntryCell);
    atomic_store(result, (unint64_t *)&qword_25736A178);
  }
  return result;
}

uint64_t sub_244533170(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2445331A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257367E00;
  if (!qword_257367E00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257367DE0);
    v2 = sub_2444E4A28(&qword_257367E08, type metadata accessor for DatasetColumnDescription, (uint64_t)&protocol conformance descriptor for DatasetColumnDescription);
    result = MEMORY[0x2495115A0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257367E00);
  }
  return result;
}

uint64_t sub_24453321C()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_244533228()
{
  return MEMORY[0x24BDCB238]();
}

uint64_t sub_244533234()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_244533240()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_24453324C()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_244533258()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_244533264()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_244533270()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_24453327C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_244533288()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_244533294()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2445332A0()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_2445332AC()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_2445332B8()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_2445332C4()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_2445332D0()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_2445332DC()
{
  return MEMORY[0x24BDCC710]();
}

uint64_t sub_2445332E8()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_2445332F4()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_244533300()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_24453330C()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_244533318()
{
  return MEMORY[0x24BDCD730]();
}

uint64_t sub_244533324()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_244533330()
{
  return MEMORY[0x24BDCD750]();
}

uint64_t sub_24453333C()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_244533348()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_244533354()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_244533360()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_24453336C()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_244533378()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_244533384()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_244533390()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_24453339C()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_2445333A8()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_2445333B4()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_2445333C0()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_2445333CC()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2445333D8()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_2445333E4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2445333F0()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_2445333FC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_244533408()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_244533414()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_244533420()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_24453342C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_244533438()
{
  return MEMORY[0x24BE74A20]();
}

uint64_t sub_244533444()
{
  return MEMORY[0x24BE74A30]();
}

uint64_t sub_244533450()
{
  return MEMORY[0x24BE74A38]();
}

uint64_t sub_24453345C()
{
  return MEMORY[0x24BE74A40]();
}

uint64_t sub_244533468()
{
  return MEMORY[0x24BE74A48]();
}

uint64_t sub_244533474()
{
  return MEMORY[0x24BE74A58]();
}

uint64_t sub_244533480()
{
  return MEMORY[0x24BE74A68]();
}

uint64_t sub_24453348C()
{
  return MEMORY[0x24BE74A80]();
}

uint64_t sub_244533498()
{
  return MEMORY[0x24BE74A90]();
}

uint64_t sub_2445334A4()
{
  return MEMORY[0x24BE74AA0]();
}

uint64_t sub_2445334B0()
{
  return MEMORY[0x24BE74AC0]();
}

uint64_t sub_2445334BC()
{
  return MEMORY[0x24BE74AD8]();
}

uint64_t sub_2445334C8()
{
  return MEMORY[0x24BE74AE0]();
}

uint64_t sub_2445334D4()
{
  return MEMORY[0x24BE74AF0]();
}

uint64_t sub_2445334E0()
{
  return MEMORY[0x24BE74B10]();
}

uint64_t sub_2445334EC()
{
  return MEMORY[0x24BE74B18]();
}

uint64_t sub_2445334F8()
{
  return MEMORY[0x24BE74B28]();
}

uint64_t sub_244533504()
{
  return MEMORY[0x24BE74B30]();
}

uint64_t sub_244533510()
{
  return MEMORY[0x24BE74B38]();
}

uint64_t sub_24453351C()
{
  return MEMORY[0x24BDF5C50]();
}

uint64_t sub_244533528()
{
  return MEMORY[0x24BDF5CD8]();
}

uint64_t sub_244533534()
{
  return MEMORY[0x24BDF5CF0]();
}

uint64_t sub_244533540()
{
  return MEMORY[0x24BDF5D10]();
}

uint64_t sub_24453354C()
{
  return MEMORY[0x24BDF5D30]();
}

uint64_t sub_244533558()
{
  return MEMORY[0x24BDF5D40]();
}

uint64_t sub_244533564()
{
  return MEMORY[0x24BDF5DC0]();
}

uint64_t sub_244533570()
{
  return MEMORY[0x24BDF5DC8]();
}

uint64_t sub_24453357C()
{
  return MEMORY[0x24BDF5DF0]();
}

uint64_t sub_244533588()
{
  return MEMORY[0x24BDF5E98]();
}

uint64_t sub_244533594()
{
  return MEMORY[0x24BDF5EA0]();
}

uint64_t sub_2445335A0()
{
  return MEMORY[0x24BDF5F00]();
}

uint64_t sub_2445335AC()
{
  return MEMORY[0x24BDF5F08]();
}

uint64_t sub_2445335B8()
{
  return MEMORY[0x24BDF5F18]();
}

uint64_t sub_2445335C4()
{
  return MEMORY[0x24BDF5F50]();
}

uint64_t sub_2445335D0()
{
  return MEMORY[0x24BDF5F58]();
}

uint64_t sub_2445335DC()
{
  return MEMORY[0x24BDF6038]();
}

uint64_t sub_2445335E8()
{
  return MEMORY[0x24BDF6048]();
}

uint64_t sub_2445335F4()
{
  return MEMORY[0x24BE74060]();
}

uint64_t sub_244533600()
{
  return MEMORY[0x24BE740B8]();
}

uint64_t _s12PoirotBlocks17DatasetColumnTypeV11descriptionSSvg_0()
{
  return MEMORY[0x24BE740C8]();
}

uint64_t sub_244533618()
{
  return MEMORY[0x24BE740D0]();
}

uint64_t sub_244533624()
{
  return MEMORY[0x24BE74130]();
}

uint64_t sub_244533630()
{
  return MEMORY[0x24BE74138]();
}

uint64_t sub_24453363C()
{
  return MEMORY[0x24BE74140]();
}

uint64_t sub_244533648()
{
  return MEMORY[0x24BE74160]();
}

uint64_t sub_244533654()
{
  return MEMORY[0x24BE741A0]();
}

uint64_t sub_244533660()
{
  return MEMORY[0x24BE741A8]();
}

uint64_t sub_24453366C()
{
  return MEMORY[0x24BE741B0]();
}

uint64_t sub_244533678()
{
  return MEMORY[0x24BE741C0]();
}

uint64_t sub_244533684()
{
  return MEMORY[0x24BE741C8]();
}

uint64_t sub_244533690()
{
  return MEMORY[0x24BE74318]();
}

uint64_t sub_24453369C()
{
  return MEMORY[0x24BE74328]();
}

uint64_t sub_2445336A8()
{
  return MEMORY[0x24BE74350]();
}

uint64_t sub_2445336B4()
{
  return MEMORY[0x24BE74358]();
}

uint64_t sub_2445336C0()
{
  return MEMORY[0x24BE74408]();
}

uint64_t sub_2445336CC()
{
  return MEMORY[0x24BE74410]();
}

uint64_t sub_2445336D8()
{
  return MEMORY[0x24BE74440]();
}

uint64_t sub_2445336E4()
{
  return MEMORY[0x24BE74448]();
}

uint64_t sub_2445336F0()
{
  return MEMORY[0x24BE74458]();
}

uint64_t sub_2445336FC()
{
  return MEMORY[0x24BE74500]();
}

uint64_t sub_244533708()
{
  return MEMORY[0x24BE74508]();
}

uint64_t sub_244533714()
{
  return MEMORY[0x24BE74540]();
}

uint64_t sub_244533720()
{
  return MEMORY[0x24BE74550]();
}

uint64_t sub_24453372C()
{
  return MEMORY[0x24BE745C8]();
}

uint64_t sub_244533738()
{
  return MEMORY[0x24BE745D0]();
}

uint64_t sub_244533744()
{
  return MEMORY[0x24BE745D8]();
}

uint64_t sub_244533750()
{
  return MEMORY[0x24BE745E0]();
}

uint64_t sub_24453375C()
{
  return MEMORY[0x24BE745E8]();
}

uint64_t sub_244533768()
{
  return MEMORY[0x24BE745F8]();
}

uint64_t sub_244533774()
{
  return MEMORY[0x24BE74658]();
}

uint64_t sub_244533780()
{
  return MEMORY[0x24BE74678]();
}

uint64_t sub_24453378C()
{
  return MEMORY[0x24BE74680]();
}

uint64_t sub_244533798()
{
  return MEMORY[0x24BE74688]();
}

uint64_t sub_2445337A4()
{
  return MEMORY[0x24BE74690]();
}

uint64_t sub_2445337B0()
{
  return MEMORY[0x24BE746A0]();
}

uint64_t sub_2445337BC()
{
  return MEMORY[0x24BE746B8]();
}

uint64_t sub_2445337C8()
{
  return MEMORY[0x24BE746C8]();
}

uint64_t sub_2445337D4()
{
  return MEMORY[0x24BE746D0]();
}

uint64_t sub_2445337E0()
{
  return MEMORY[0x24BE746D8]();
}

uint64_t sub_2445337EC()
{
  return MEMORY[0x24BE746E0]();
}

uint64_t sub_2445337F8()
{
  return MEMORY[0x24BE746F0]();
}

uint64_t sub_244533804()
{
  return MEMORY[0x24BE746F8]();
}

uint64_t sub_244533810()
{
  return MEMORY[0x24BE74708]();
}

uint64_t sub_24453381C()
{
  return MEMORY[0x24BE74710]();
}

uint64_t sub_244533828()
{
  return MEMORY[0x24BE74720]();
}

uint64_t sub_244533834()
{
  return MEMORY[0x24BE74728]();
}

uint64_t sub_244533840()
{
  return MEMORY[0x24BE74730]();
}

uint64_t sub_24453384C()
{
  return MEMORY[0x24BE74738]();
}

uint64_t sub_244533858()
{
  return MEMORY[0x24BE74740]();
}

uint64_t sub_244533864()
{
  return MEMORY[0x24BE747D8]();
}

uint64_t sub_244533870()
{
  return MEMORY[0x24BE747E8]();
}

uint64_t sub_24453387C()
{
  return MEMORY[0x24BE747F0]();
}

uint64_t sub_244533888()
{
  return MEMORY[0x24BE74808]();
}

uint64_t sub_244533894()
{
  return MEMORY[0x24BE74868]();
}

uint64_t sub_2445338A0()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_2445338AC()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_2445338B8()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_2445338C4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2445338D0()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2445338DC()
{
  return MEMORY[0x24BE749B8]();
}

uint64_t sub_2445338E8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2445338F4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_244533900()
{
  return MEMORY[0x24BEE75B8]();
}

uint64_t sub_24453390C()
{
  return MEMORY[0x24BEE75F8]();
}

uint64_t sub_244533918()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_244533924()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_244533930()
{
  return MEMORY[0x24BDCF870]();
}

uint64_t sub_24453393C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_244533948()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_244533954()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_244533960()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_24453396C()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_244533978()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_244533984()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_244533990()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_24453399C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2445339A8()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_2445339B4()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_2445339C0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_2445339CC()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2445339D8()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2445339E4()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_2445339F0()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_2445339FC()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_244533A08()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_244533A14()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_244533A20()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_244533A2C()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_244533A38()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_244533A44()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_244533A50()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_244533A5C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_244533A68()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_244533A74()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_244533A80()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_244533A8C()
{
  return MEMORY[0x24BEE11F0]();
}

uint64_t sub_244533A98()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_244533AA4()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_244533AB0()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_244533ABC()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_244533AC8()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_244533AD4()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_244533AE0()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_244533AEC()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_244533AF8()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_244533B04()
{
  return MEMORY[0x24BEE1AA8]();
}

uint64_t sub_244533B10()
{
  return MEMORY[0x24BDCFE18]();
}

uint64_t sub_244533B1C()
{
  return MEMORY[0x24BDCFF40]();
}

uint64_t sub_244533B28()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_244533B34()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_244533B40()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_244533B4C()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_244533B58()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_244533B64()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_244533B70()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_244533B7C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_244533B88()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_244533B94()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_244533BA0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_244533BAC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_244533BB8()
{
  return MEMORY[0x24BEE28C0]();
}

uint64_t sub_244533BC4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_244533BD0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_244533BDC()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_244533BE8()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_244533BF4()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_244533C00()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_244533C0C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_244533C18()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_244533C24()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_244533C30()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_244533C3C()
{
  return MEMORY[0x24BEE2C90]();
}

uint64_t sub_244533C48()
{
  return MEMORY[0x24BEE2C98]();
}

uint64_t sub_244533C54()
{
  return MEMORY[0x24BEE2CA0]();
}

uint64_t sub_244533C60()
{
  return MEMORY[0x24BEE2CB8]();
}

uint64_t sub_244533C6C()
{
  return MEMORY[0x24BEE2CC8]();
}

uint64_t sub_244533C78()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_244533C84()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_244533C90()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_244533C9C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_244533CA8()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_244533CB4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_244533CC0()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_244533CCC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_244533CD8()
{
  return MEMORY[0x24BEE32C8]();
}

uint64_t sub_244533CE4()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_244533CF0()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_244533CFC()
{
  return MEMORY[0x24BEE3300]();
}

uint64_t sub_244533D08()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_244533D14()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_244533D20()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_244533D2C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_244533D38()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_244533D44()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_244533D50()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_244533D5C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_244533D68()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_244533D74()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_244533D80()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_244533D8C()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_244533D98()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_244533DA4()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_244533DB0()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_244533DBC()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_244533DC8()
{
  return MEMORY[0x24BEE3638]();
}

uint64_t sub_244533DD4()
{
  return MEMORY[0x24BEE3668]();
}

uint64_t sub_244533DE0()
{
  return MEMORY[0x24BEE3788]();
}

uint64_t sub_244533DEC()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_244533DF8()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_244533E04()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_244533E10()
{
  return MEMORY[0x24BEE3A60]();
}

uint64_t sub_244533E1C()
{
  return MEMORY[0x24BEE3A68]();
}

uint64_t sub_244533E28()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_244533E34()
{
  return MEMORY[0x24BEE3AA8]();
}

uint64_t sub_244533E40()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_244533E4C()
{
  return MEMORY[0x24BEE3AF8]();
}

uint64_t sub_244533E58()
{
  return MEMORY[0x24BEE3B00]();
}

uint64_t sub_244533E64()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_244533E70()
{
  return MEMORY[0x24BEE3B40]();
}

uint64_t sub_244533E7C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_244533E88()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_244533E94()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_244533EA0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_244533EAC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_244533EB8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_244533EC4()
{
  return MEMORY[0x24BEE42B8]();
}

uint64_t sub_244533ED0()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_244533EDC()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_244533EE8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_244533EF4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_244533F00()
{
  return MEMORY[0x24BEE45F0]();
}

uint64_t sub_244533F0C()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_244533F18()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_244533F24()
{
  return MEMORY[0x24BEE4620]();
}

uint64_t sub_244533F30()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_244533F3C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_244533F48()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_244533F54()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_244533F60()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t BMEventTimestampSQLColumn()
{
  return MEMORY[0x24BE0CA98]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x24BDAE440](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

