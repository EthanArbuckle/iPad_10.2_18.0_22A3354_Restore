uint64_t _s23LighthouseDataProcessor29TranscriptProtoUndoExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA300);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA300);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA300);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA300);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoStatementID);
      v25 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C50);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoUndoExpression(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_2404DDC94(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_257000CC0, &qword_256FFA468, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.== infix(_:_:), type metadata accessor for TranscriptProtoToolResolution);
}

uint64_t sub_2404DDCC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5, uint64_t (*a6)(char *, char *), uint64_t (*a7)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t *v51;
  char v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, char *);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(_QWORD);
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t (*v100)(_QWORD);
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v95 = a7;
  v91 = a6;
  v104 = a2;
  v11 = sub_2408E57A4();
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v84 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)&v82 - v14;
  v96 = type metadata accessor for TranscriptProtoStatementID(0);
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v88 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v16 = MEMORY[0x24BDAC7A8](v102);
  v89 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v99 = (uint64_t)&v82 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v87 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v97 = (char *)&v82 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v98 = (char *)&v82 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v90 = (uint64_t)&v82 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v92 = (uint64_t)&v82 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v93 = (uint64_t)&v82 - v30;
  v100 = a3;
  v31 = a3(0);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v82 - v33;
  v101 = a4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v82 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v82 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v82 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v82 - v45;
  v103 = a1;
  sub_2403A9210(a1, (uint64_t)&v82 - v45, a5);
  sub_2403A9210(v104, (uint64_t)v44, a5);
  v47 = (uint64_t)&v37[*(int *)(v35 + 48)];
  sub_2403A9210((uint64_t)v46, (uint64_t)v37, a5);
  sub_2403A9210((uint64_t)v44, v47, a5);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v48((uint64_t)v37, 1, v31) == 1)
  {
    sub_2403A97FC((uint64_t)v44, a5);
    sub_2403A97FC((uint64_t)v46, a5);
    if (v48(v47, 1, v31) == 1)
    {
      sub_2403A97FC((uint64_t)v37, a5);
      goto LABEL_8;
    }
LABEL_6:
    v50 = (uint64_t)v37;
    v51 = v101;
LABEL_21:
    sub_2403A97FC(v50, v51);
    goto LABEL_22;
  }
  v49 = v100;
  sub_2403A9210((uint64_t)v37, (uint64_t)v41, a5);
  if (v48(v47, 1, v31) == 1)
  {
    sub_2403A97FC((uint64_t)v44, a5);
    sub_2403A97FC((uint64_t)v46, a5);
    sub_240388AE4((uint64_t)v41, v49);
    goto LABEL_6;
  }
  sub_2403A91CC(v47, (uint64_t)v34, v49);
  v52 = v91(v41, v34);
  sub_240388AE4((uint64_t)v34, v49);
  sub_2403A97FC((uint64_t)v44, a5);
  sub_2403A97FC((uint64_t)v46, a5);
  sub_240388AE4((uint64_t)v41, v49);
  sub_2403A97FC((uint64_t)v37, a5);
  if ((v52 & 1) == 0)
    goto LABEL_22;
LABEL_8:
  v53 = (int *)v95(0);
  v54 = v93;
  sub_2403A9210(v103 + v53[5], v93, &qword_256FFA300);
  v55 = v92;
  sub_2403A9210(v104 + v53[5], v92, &qword_256FFA300);
  v56 = v99;
  v57 = v99 + *(int *)(v102 + 48);
  sub_2403A9210(v54, v99, &qword_256FFA300);
  sub_2403A9210(v55, v57, &qword_256FFA300);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  v59 = v96;
  if (v58(v56, 1, v96) == 1)
  {
    sub_2403A97FC(v55, &qword_256FFA300);
    sub_2403A97FC(v54, &qword_256FFA300);
    v60 = v58(v57, 1, v59);
    v62 = (uint64_t)v97;
    v61 = (uint64_t)v98;
    if (v60 != 1)
    {
LABEL_20:
      v51 = &qword_257000C50;
      v50 = v56;
      goto LABEL_21;
    }
    sub_2403A97FC(v56, &qword_256FFA300);
LABEL_14:
    v67 = v103;
    sub_2403A9210(v103 + v53[6], v61, &qword_256FFA300);
    v68 = v104;
    sub_2403A9210(v104 + v53[6], v62, &qword_256FFA300);
    v56 = v89;
    v69 = v89 + *(int *)(v102 + 48);
    sub_2403A9210(v61, v89, &qword_256FFA300);
    sub_2403A9210(v62, v69, &qword_256FFA300);
    if (v58(v56, 1, v59) == 1)
    {
      sub_2403A97FC(v62, &qword_256FFA300);
      sub_2403A97FC(v61, &qword_256FFA300);
      if (v58(v69, 1, v59) == 1)
      {
        sub_2403A97FC(v56, &qword_256FFA300);
LABEL_25:
        v74 = v67 + v53[7];
        v76 = v85;
        v75 = v86;
        v77 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
        v78 = v83;
        v77(v83, v74, v86);
        v79 = v68 + v53[7];
        v80 = v84;
        v77(v84, v79, v75);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v70 = sub_2408E5CD8();
        v81 = *(void (**)(char *, uint64_t))(v76 + 8);
        v81(v80, v75);
        v81(v78, v75);
        return v70 & 1;
      }
      goto LABEL_20;
    }
    v63 = v87;
    sub_2403A9210(v56, v87, &qword_256FFA300);
    if (v58(v69, 1, v59) == 1)
    {
      sub_2403A97FC(v62, &qword_256FFA300);
      v65 = v61;
      goto LABEL_19;
    }
    v72 = v88;
    sub_2403A91CC(v69, v88, type metadata accessor for TranscriptProtoStatementID);
    v73 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v63, v72);
    sub_240388AE4(v72, type metadata accessor for TranscriptProtoStatementID);
    sub_2403A97FC(v62, &qword_256FFA300);
    sub_2403A97FC(v61, &qword_256FFA300);
    sub_240388AE4(v63, type metadata accessor for TranscriptProtoStatementID);
    sub_2403A97FC(v56, &qword_256FFA300);
    if ((v73 & 1) != 0)
      goto LABEL_25;
    goto LABEL_22;
  }
  v63 = v90;
  sub_2403A9210(v56, v90, &qword_256FFA300);
  v64 = v58(v57, 1, v59);
  v62 = (uint64_t)v97;
  v61 = (uint64_t)v98;
  if (v64 == 1)
  {
    sub_2403A97FC(v55, &qword_256FFA300);
    v65 = v54;
LABEL_19:
    sub_2403A97FC(v65, &qword_256FFA300);
    sub_240388AE4(v63, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_20;
  }
  v66 = v88;
  sub_2403A91CC(v57, v88, type metadata accessor for TranscriptProtoStatementID);
  LODWORD(v101) = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v63, v66);
  sub_240388AE4(v66, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v55, &qword_256FFA300);
  sub_2403A97FC(v54, &qword_256FFA300);
  sub_240388AE4(v63, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v99, &qword_256FFA300);
  if ((v101 & 1) != 0)
    goto LABEL_14;
LABEL_22:
  v70 = 0;
  return v70 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA3E0);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3E0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3E0);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3E0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3E0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      _s23LighthouseDataProcessor35TranscriptProtoStatementOutcomeEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3E0);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3E0);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3E0);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3E0);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570010E0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3E0);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3E0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoSystemResponseV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  char v45;
  _QWORD *v46;
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  char v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  int *v97;
  _QWORD *v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v4 = sub_2408E57A4();
  v104 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v103 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v102 = (char *)&v96 - v7;
  v112 = type metadata accessor for TranscriptProtoStatementID(0);
  v109 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v105 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v108);
  v113 = (uint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v106 = (uint64_t)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v110 = (uint64_t)&v96 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v111 = (uint64_t)&v96 - v15;
  v120 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v117 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v107 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CE0);
  MEMORY[0x24BDAC7A8](v116);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v114 = (uint64_t *)((char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x24BDAC7A8](v20);
  v118 = (uint64_t)&v96 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v119 = (uint64_t)&v96 - v24;
  v25 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v115 = (uint64_t)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v96 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = a2;
  v40 = (char *)&v96 - v39;
  v41 = a1[4];
  v42 = v38[4];
  if (!v41)
  {
    v101 = v4;
    if (v42)
      goto LABEL_33;
    goto LABEL_8;
  }
  if (!v42)
    goto LABEL_33;
  v101 = v4;
  if (a1[3] == v38[3] && v41 == v42 || (v43 = v38, v44 = sub_2408E617C(), v38 = v43, v45 = 0, (v44 & 1) != 0))
  {
LABEL_8:
    if (*a1 != *v38 || a1[1] != v38[1])
    {
      v46 = v38;
      v47 = sub_2408E617C();
      v38 = v46;
      v45 = 0;
      if ((v47 & 1) == 0)
        return v45 & 1;
    }
    v100 = v18;
    v48 = a1;
    v49 = v38;
    v50 = type metadata accessor for TranscriptProtoSystemResponse(0);
    v51 = *(int *)(v50 + 28);
    v98 = v48;
    sub_2403A9210((uint64_t)v48 + v51, (uint64_t)v40, &qword_256FFA3E8);
    v97 = (int *)v50;
    v52 = *(int *)(v50 + 28);
    v99 = v49;
    sub_2403A9210((uint64_t)v49 + v52, (uint64_t)v37, &qword_256FFA3E8);
    v53 = (uint64_t)&v30[*(int *)(v28 + 48)];
    sub_2403A9210((uint64_t)v40, (uint64_t)v30, &qword_256FFA3E8);
    sub_2403A9210((uint64_t)v37, v53, &qword_256FFA3E8);
    v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v54((uint64_t)v30, 1, v25) == 1)
    {
      sub_2403A97FC((uint64_t)v37, &qword_256FFA3E8);
      sub_2403A97FC((uint64_t)v40, &qword_256FFA3E8);
      v55 = v54(v53, 1, v25);
      v56 = (uint64_t)v100;
      if (v55 == 1)
      {
        sub_2403A97FC((uint64_t)v30, &qword_256FFA3E8);
        goto LABEL_18;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFA3E8);
      if (v54(v53, 1, v25) != 1)
      {
        v59 = v115;
        sub_2403A91CC(v53, v115, type metadata accessor for TranscriptProtoStatementOutcome);
        v60 = _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0((uint64_t)v34, v59);
        sub_240388AE4(v59, type metadata accessor for TranscriptProtoStatementOutcome);
        sub_2403A97FC((uint64_t)v37, &qword_256FFA3E8);
        sub_2403A97FC((uint64_t)v40, &qword_256FFA3E8);
        sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoStatementOutcome);
        sub_2403A97FC((uint64_t)v30, &qword_256FFA3E8);
        v56 = (uint64_t)v100;
        if ((v60 & 1) == 0)
          goto LABEL_33;
LABEL_18:
        v61 = v97;
        v62 = v119;
        sub_2403A9210((uint64_t)v98 + v97[8], v119, &qword_256FFA400);
        v63 = v118;
        sub_2403A9210((uint64_t)v99 + v61[8], v118, &qword_256FFA400);
        v64 = v56 + *(int *)(v116 + 48);
        sub_2403A9210(v62, v56, &qword_256FFA400);
        sub_2403A9210(v63, v64, &qword_256FFA400);
        v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
        v66 = v120;
        if (v65(v56, 1, v120) == 1)
        {
          sub_2403A97FC(v63, &qword_256FFA400);
          sub_2403A97FC(v62, &qword_256FFA400);
          if (v65(v64, 1, v66) == 1)
          {
            sub_2403A97FC(v56, &qword_256FFA400);
LABEL_25:
            v70 = v111;
            sub_2403A9210((uint64_t)v98 + v61[9], v111, &qword_256FFA300);
            v71 = v110;
            sub_2403A9210((uint64_t)v99 + v61[9], v110, &qword_256FFA300);
            v56 = v113;
            v72 = v113 + *(int *)(v108 + 48);
            sub_2403A9210(v70, v113, &qword_256FFA300);
            sub_2403A9210(v71, v72, &qword_256FFA300);
            v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
            v74 = v112;
            if (v73(v56, 1, v112) == 1)
            {
              sub_2403A97FC(v71, &qword_256FFA300);
              sub_2403A97FC(v70, &qword_256FFA300);
              if (v73(v72, 1, v74) == 1)
              {
                sub_2403A97FC(v56, &qword_256FFA300);
LABEL_36:
                v79 = v61[10];
                v80 = v98;
                v81 = (_QWORD *)((char *)v98 + v79);
                v82 = *(_QWORD *)((char *)v98 + v79 + 8);
                v83 = v99;
                v84 = (_QWORD *)((char *)v99 + v79);
                v85 = v84[1];
                if (v82)
                {
                  if (v85)
                  {
                    if (*v81 != *v84 || v82 != v85)
                    {
                      v86 = sub_2408E617C();
                      v83 = v99;
                      v45 = 0;
                      if ((v86 & 1) == 0)
                        return v45 & 1;
                    }
                    goto LABEL_43;
                  }
                }
                else if (!v85)
                {
LABEL_43:
                  v87 = v83;
                  if ((sub_2408BDA00(v80[2], v83[2]) & 1) != 0)
                  {
                    v88 = (uint64_t)v80 + v61[11];
                    v89 = v104;
                    v90 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
                    v91 = v101;
                    v92 = v102;
                    v90(v102, v88, v101);
                    v93 = (uint64_t)v87 + v61[11];
                    v94 = v103;
                    v90(v103, v93, v91);
                    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    v45 = sub_2408E5CD8();
                    v95 = *(void (**)(char *, uint64_t))(v89 + 8);
                    v95(v94, v91);
                    v95(v92, v91);
                    return v45 & 1;
                  }
                }
LABEL_33:
                v45 = 0;
                return v45 & 1;
              }
            }
            else
            {
              v75 = v106;
              sub_2403A9210(v56, v106, &qword_256FFA300);
              if (v73(v72, 1, v74) != 1)
              {
                v77 = v105;
                sub_2403A91CC(v72, v105, type metadata accessor for TranscriptProtoStatementID);
                v78 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v75, v77);
                sub_240388AE4(v77, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC(v71, &qword_256FFA300);
                sub_2403A97FC(v70, &qword_256FFA300);
                sub_240388AE4(v75, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC(v56, &qword_256FFA300);
                if ((v78 & 1) == 0)
                  goto LABEL_33;
                goto LABEL_36;
              }
              sub_2403A97FC(v71, &qword_256FFA300);
              sub_2403A97FC(v70, &qword_256FFA300);
              sub_240388AE4(v75, type metadata accessor for TranscriptProtoStatementID);
            }
            v57 = &qword_257000C50;
            goto LABEL_31;
          }
        }
        else
        {
          v67 = v114;
          sub_2403A9210(v56, (uint64_t)v114, &qword_256FFA400);
          if (v65(v64, 1, v66) != 1)
          {
            v68 = v107;
            sub_2403A91CC(v64, v107, type metadata accessor for TranscriptProtoResponseOutput);
            v69 = _s23LighthouseDataProcessor29TranscriptProtoResponseOutputV2eeoiySbAC_ACtFZ_0(v67, v68);
            sub_240388AE4(v68, type metadata accessor for TranscriptProtoResponseOutput);
            sub_2403A97FC(v63, &qword_256FFA400);
            sub_2403A97FC(v62, &qword_256FFA400);
            sub_240388AE4((uint64_t)v67, type metadata accessor for TranscriptProtoResponseOutput);
            sub_2403A97FC(v56, &qword_256FFA400);
            if ((v69 & 1) == 0)
              goto LABEL_33;
            goto LABEL_25;
          }
          sub_2403A97FC(v63, &qword_256FFA400);
          sub_2403A97FC(v62, &qword_256FFA400);
          sub_240388AE4((uint64_t)v67, type metadata accessor for TranscriptProtoResponseOutput);
        }
        v57 = &qword_257000CE0;
LABEL_31:
        v58 = v56;
        goto LABEL_32;
      }
      sub_2403A97FC((uint64_t)v37, &qword_256FFA3E8);
      sub_2403A97FC((uint64_t)v40, &qword_256FFA3E8);
      sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoStatementOutcome);
    }
    v57 = &qword_257000CD8;
    v58 = (uint64_t)v30;
LABEL_32:
    sub_2403A97FC(v58, v57);
    goto LABEL_33;
  }
  return v45 & 1;
}

uint64_t sub_2404DF384(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v10 = sub_2408E57A4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0 && (a4(a1[1], *((_QWORD *)a2 + 1)) & 1) != 0)
  {
    v17 = a5(0);
    v18 = (char *)a1 + *(int *)(v17 + 24);
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v19(v16, v18, v10);
    v19(v14, &a2[*(int *)(v17 + 24)], v10);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v20 = sub_2408E5CD8();
    v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v21(v14, v10);
    v21(v16, v10);
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoResponseOutputV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;

  v81 = a2;
  v3 = sub_2408E57A4();
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v66 - v6;
  v7 = type metadata accessor for TranscriptProtoDialogType(0);
  v79 = *(uint64_t **)(v7 - 8);
  v80 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v77 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001050);
  v9 = MEMORY[0x24BDAC7A8](v78);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v66 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v66 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v66 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v66 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v66 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v66 - v30;
  v32 = a1;
  v33 = *a1;
  v34 = v81;
  if ((sub_2408BE378(v33, *(_QWORD *)v81) & 1) == 0)
    goto LABEL_16;
  v71 = v26;
  v72 = v20;
  v67 = v17;
  v68 = v23;
  v69 = v11;
  v35 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v36 = v32;
  sub_2403A9210((uint64_t)v32 + *(int *)(v35 + 28), (uint64_t)v31, &qword_256FFA3F8);
  v70 = v35;
  sub_2403A9210(v34 + *(int *)(v35 + 28), (uint64_t)v29, &qword_256FFA3F8);
  v37 = v78;
  v38 = (uint64_t)&v13[*(int *)(v78 + 48)];
  sub_2403A9210((uint64_t)v31, (uint64_t)v13, &qword_256FFA3F8);
  sub_2403A9210((uint64_t)v29, v38, &qword_256FFA3F8);
  v39 = v80;
  v40 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v79[6];
  v41 = v36;
  if (v40((uint64_t)v13, 1, v80) == 1)
  {
    v79 = v36;
    sub_2403A97FC((uint64_t)v29, &qword_256FFA3F8);
    sub_2403A97FC((uint64_t)v31, &qword_256FFA3F8);
    if (v40(v38, 1, v39) == 1)
    {
      v66 = v40;
      sub_2403A97FC((uint64_t)v13, &qword_256FFA3F8);
      v42 = v77;
      v41 = v79;
      goto LABEL_9;
    }
LABEL_7:
    v44 = (uint64_t)v13;
LABEL_15:
    sub_2403A97FC(v44, &qword_257001050);
    goto LABEL_16;
  }
  v43 = (uint64_t)v71;
  sub_2403A9210((uint64_t)v13, (uint64_t)v71, &qword_256FFA3F8);
  if (v40(v38, 1, v39) == 1)
  {
    sub_2403A97FC((uint64_t)v29, &qword_256FFA3F8);
    sub_2403A97FC((uint64_t)v31, &qword_256FFA3F8);
    sub_240388AE4(v43, type metadata accessor for TranscriptProtoDialogType);
    goto LABEL_7;
  }
  v66 = v40;
  v42 = v77;
  sub_2403A91CC(v38, v77, type metadata accessor for TranscriptProtoDialogType);
  LODWORD(v79) = _s23LighthouseDataProcessor25TranscriptProtoDialogTypeV2eeoiySbAC_ACtFZ_0(v43, v42);
  sub_240388AE4(v42, type metadata accessor for TranscriptProtoDialogType);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA3F8);
  sub_2403A97FC((uint64_t)v31, &qword_256FFA3F8);
  sub_240388AE4(v43, type metadata accessor for TranscriptProtoDialogType);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA3F8);
  if ((v79 & 1) == 0)
    goto LABEL_16;
LABEL_9:
  v45 = v70;
  v46 = *(int *)(v70 + 32);
  v79 = v41;
  v47 = (uint64_t)v68;
  sub_2403A9210((uint64_t)v41 + v46, (uint64_t)v68, &qword_256FFA3F8);
  v48 = (uint64_t)v72;
  sub_2403A9210(v81 + *(int *)(v45 + 32), (uint64_t)v72, &qword_256FFA3F8);
  v49 = (uint64_t)v69;
  v50 = (uint64_t)&v69[*(int *)(v37 + 48)];
  sub_2403A9210(v47, (uint64_t)v69, &qword_256FFA3F8);
  sub_2403A9210(v48, v50, &qword_256FFA3F8);
  v51 = v66;
  if (v66(v49, 1, v39) != 1)
  {
    v52 = (uint64_t)v67;
    sub_2403A9210(v49, (uint64_t)v67, &qword_256FFA3F8);
    if (v51(v50, 1, v39) != 1)
    {
      sub_2403A91CC(v50, v42, type metadata accessor for TranscriptProtoDialogType);
      v55 = _s23LighthouseDataProcessor25TranscriptProtoDialogTypeV2eeoiySbAC_ACtFZ_0(v52, v42);
      sub_240388AE4(v42, type metadata accessor for TranscriptProtoDialogType);
      sub_2403A97FC((uint64_t)v72, &qword_256FFA3F8);
      sub_2403A97FC(v47, &qword_256FFA3F8);
      sub_240388AE4(v52, type metadata accessor for TranscriptProtoDialogType);
      sub_2403A97FC(v49, &qword_256FFA3F8);
      if ((v55 & 1) == 0)
        goto LABEL_16;
      goto LABEL_19;
    }
    sub_2403A97FC((uint64_t)v72, &qword_256FFA3F8);
    sub_2403A97FC(v47, &qword_256FFA3F8);
    sub_240388AE4(v52, type metadata accessor for TranscriptProtoDialogType);
    goto LABEL_14;
  }
  sub_2403A97FC(v48, &qword_256FFA3F8);
  sub_2403A97FC(v47, &qword_256FFA3F8);
  if (v51(v50, 1, v39) != 1)
  {
LABEL_14:
    v44 = v49;
    goto LABEL_15;
  }
  sub_2403A97FC(v49, &qword_256FFA3F8);
LABEL_19:
  v56 = v79;
  v57 = v81;
  if (*((unsigned __int8 *)v79 + 8) == *(unsigned __int8 *)(v81 + 8)
    && (sub_2408BE728(v79[2], *(_QWORD *)(v81 + 16)) & 1) != 0)
  {
    v58 = v70;
    v59 = (uint64_t)v56 + *(int *)(v70 + 36);
    v61 = v75;
    v60 = v76;
    v62 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    v63 = v73;
    v62(v73, v59, v76);
    v64 = v74;
    v62(v74, v57 + *(int *)(v58 + 36), v60);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v53 = sub_2408E5CD8();
    v65 = *(void (**)(char *, uint64_t))(v61 + 8);
    v65(v64, v60);
    v65(v63, v60);
    return v53 & 1;
  }
LABEL_16:
  v53 = 0;
  return v53 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoResponseDialogV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  if (*a1 != *(_QWORD *)a2 || a1[1] != *((_QWORD *)a2 + 1))
  {
    v12 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v12 & 1;
  }
  v13 = a1[3];
  v14 = *((_QWORD *)a2 + 3);
  if (!v13)
  {
    if (v14)
      goto LABEL_27;
    goto LABEL_13;
  }
  if (!v14)
    goto LABEL_27;
  if (a1[2] == *((_QWORD *)a2 + 2) && v13 == v14 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_13:
    v15 = a1[5];
    v16 = *((_QWORD *)a2 + 5);
    if (v15)
    {
      if (!v16)
        goto LABEL_27;
      if (a1[4] != *((_QWORD *)a2 + 4) || v15 != v16)
      {
        v12 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v12 & 1;
      }
    }
    else if (v16)
    {
      goto LABEL_27;
    }
    v17 = a1[7];
    v18 = *((_QWORD *)a2 + 7);
    if (v17)
    {
      if (v18)
      {
        if (a1[6] != *((_QWORD *)a2 + 6) || v17 != v18)
        {
          v12 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v12 & 1;
        }
LABEL_29:
        v20 = type metadata accessor for TranscriptProtoResponseDialog(0);
        v21 = (char *)a1 + *(int *)(v20 + 32);
        v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v22(v10, v21, v4);
        v22(v8, &a2[*(int *)(v20 + 32)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v23 = *(void (**)(char *, uint64_t))(v5 + 8);
        v23(v8, v4);
        v23(v10, v4);
        return v12 & 1;
      }
    }
    else if (!v18)
    {
      goto LABEL_29;
    }
LABEL_27:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoPickExpressionV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v41 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v41 - v21;
  v23 = type metadata accessor for TranscriptProtoPickExpression(0);
  v24 = *(int *)(v23 + 20);
  v47 = a1;
  v25 = (uint64_t)&a1[v24];
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA300);
  v27 = *(int *)(v26 + 20);
  v48 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_256FFA300);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA300);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
LABEL_10:
    v38 = 0;
    return v38 & 1;
  }
  v30 = v46;
  sub_2403A91CC(v28, v46, type metadata accessor for TranscriptProtoStatementID);
  v31 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v31 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v32 = v48;
  if (*(_QWORD *)v47 != *(_QWORD *)v48)
    goto LABEL_10;
  v34 = v44;
  v33 = v45;
  v35 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v36 = v42;
  v35(v42, &v47[*(int *)(v26 + 24)], v45);
  v37 = v43;
  v35(v43, &v32[*(int *)(v26 + 24)], v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_2408E5CD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoPromptSelectionV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if ((*((_BYTE *)a1 + 9) & 1) != 0)
  {
    if ((*((_BYTE *)a2 + 9) & 1) != 0)
    {
LABEL_3:
      v11 = type metadata accessor for TranscriptProtoPromptSelection(0);
      v12 = (uint64_t)a1 + *(int *)(v11 + 20);
      v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v10, v12, v4);
      v13(v8, (uint64_t)a2 + *(int *)(v11 + 20), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
      return v14 & 1;
    }
LABEL_5:
    v14 = 0;
    return v14 & 1;
  }
  if ((*((_BYTE *)a2 + 9) & 1) != 0)
    goto LABEL_5;
  v17 = *a1;
  v18 = *a2;
  v14 = 0;
  if ((a1[1] & 1) != 0)
  {
    if (v17)
    {
      if ((a2[1] & 1) != 0 && v18)
        goto LABEL_3;
    }
    else if ((a2[1] & 1) != 0 && !v18)
    {
      goto LABEL_3;
    }
  }
  else if ((a2[1] & 1) == 0 && v17 == v18)
  {
    goto LABEL_3;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoParameterValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001208);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001210);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoTypedValue(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA3A8);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA3A8);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA3A8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA3A8);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoTypedValue);
      v35 = static ToolKitProtoTypedValue.== infix(_:_:)(v25, v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3A8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v33 = &qword_257000CA8;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3A8);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoParameterValue(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_257001210);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_257001210);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_257001210);
  sub_2403A9210(v40, v42, &qword_257001210);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_257001210);
    sub_2403A97FC(v38, &qword_257001210);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_257001210);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_257001210);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_257001210);
    sub_2403A97FC(v38, &qword_257001210);
    sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoPromptSelection);
LABEL_13:
    v33 = &qword_257001208;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for TranscriptProtoPromptSelection);
  v49 = _s23LighthouseDataProcessor30TranscriptProtoPromptSelectionV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2403A97FC(v70, &qword_257001210);
  sub_2403A97FC(v38, &qword_257001210);
  sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2403A97FC(v41, &qword_257001210);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_2404E0934(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  sub_2408C422C(*a1, a1[1]);
  if ((v13 & 1) != 0)
  {
    v14 = a3(0);
    v15 = (char *)a1 + *(int *)(v14 + 20);
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v16(v12, v15, v6);
    v16(v10, (char *)(a2 + *(int *)(v14 + 20)), v6);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v17 = sub_2408E5CD8();
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    v18(v12, v6);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoAppRequirementV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1;
  v12 = *a2;
  if (v11 != 3)
  {
    if (v12 != 3 && v11 == v12)
      goto LABEL_3;
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  if (v12 != 3)
    goto LABEL_8;
LABEL_3:
  v13 = type metadata accessor for TranscriptProtoAppRequirement(0);
  v14 = &a1[*(int *)(v13 + 20)];
  v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v15(v10, v14, v4);
  v15(v8, &a2[*(int *)(v13 + 20)], v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_2408E5CD8();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoQueryPredicateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t Predicate;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v40 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v42 = v17;
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      sub_2403A9210(a1 + *(int *)(Predicate + 24), (uint64_t)v22, &qword_256FFA3A8);
      v41 = Predicate;
      sub_2403A9210(a2 + *(int *)(Predicate + 24), (uint64_t)v20, &qword_256FFA3A8);
      v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA3A8);
      sub_2403A9210((uint64_t)v20, v25, &qword_256FFA3A8);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v13, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
        if (v26(v25, 1, v8) == 1)
        {
          sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
LABEL_14:
          v31 = v41;
          v32 = a1 + *(int *)(v41 + 28);
          v34 = v46;
          v33 = v47;
          v35 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
          v36 = v44;
          v35(v44, v32, v47);
          v37 = a2 + *(int *)(v31 + 28);
          v38 = v45;
          v35(v45, v37, v33);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v23 = sub_2408E5CD8();
          v39 = *(void (**)(char *, uint64_t))(v34 + 8);
          v39(v38, v33);
          v39(v36, v33);
          return v23 & 1;
        }
      }
      else
      {
        v27 = v42;
        sub_2403A9210((uint64_t)v13, (uint64_t)v42, &qword_256FFA3A8);
        if (v26(v25, 1, v8) != 1)
        {
          v29 = v43;
          sub_2403A91CC(v25, (uint64_t)v43, type metadata accessor for ToolKitProtoTypedValue);
          v30 = static ToolKitProtoTypedValue.== infix(_:_:)(v27, v29);
          sub_240388AE4((uint64_t)v29, type metadata accessor for ToolKitProtoTypedValue);
          sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
          sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
          sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
          sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
          if ((v30 & 1) != 0)
            goto LABEL_14;
          goto LABEL_11;
        }
        sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
        sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
      }
      sub_2403A97FC((uint64_t)v13, &qword_257000CA8);
    }
LABEL_11:
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoPropertyQueryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Enum;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char EnumO2eeoiySbAC_ACtFZ_0;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v8 = *(_QWORD *)(Enum - 8);
  MEMORY[0x24BDAC7A8](Enum);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001070);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFE960);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFE960);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFE960);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFE960);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, Enum) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFE960);
    if (v23(v22, 1, Enum) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      EnumO2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor32TranscriptProtoPropertyQueryEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFE960);
      sub_2403A97FC((uint64_t)v21, &qword_256FFE960);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFE960);
      if ((EnumO2eeoiySbAC_ACtFZ_0 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFE960);
    sub_2403A97FC((uint64_t)v21, &qword_256FFE960);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001070);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFE960);
  sub_2403A97FC((uint64_t)v21, &qword_256FFE960);
  if (v23(v22, 1, Enum) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFE960);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoExecutorErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA380);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA380);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA380);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA380);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA380);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA380);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoExecutorErrorEnum);
      v25 = sub_24052F39C((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoExecutorErrorEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA380);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA380);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoExecutorErrorEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA380);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA380);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA380);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoExecutorErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570011B0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA380);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA380);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA380);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoExecutorError(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoDotExpressionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v43 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for TranscriptProtoDotExpression(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA300);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_256FFA300);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA300);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
LABEL_12:
    v34 = 0;
    return v34 & 1;
  }
  v30 = v44;
  sub_2403A91CC(v28, v44, type metadata accessor for TranscriptProtoStatementID);
  v31 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v31 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v33 = v49;
  v32 = v50;
  if (*v49 == *(_QWORD *)v50 && v49[1] == *((_QWORD *)v50 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    v35 = (char *)v33 + *(int *)(v26 + 24);
    v37 = v47;
    v36 = v48;
    v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v39 = v45;
    v38(v45, v35, v48);
    v40 = v46;
    v38(v46, &v32[*(int *)(v26 + 24)], v36);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v34 = sub_2408E5CD8();
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v40, v36);
    v41(v39, v36);
  }
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoDeviceDetailsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  _DWORD *v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  _DWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v42 - v7;
  v8 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v43 = (_DWORD *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CC8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (_DWORD *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v42 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v42 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v47 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v42 = v4;
    v28 = type metadata accessor for TranscriptProtoDeviceDetails(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_256FFA318);
    sub_2403A9210((uint64_t)&v47[*(int *)(v28 + 20)], (uint64_t)v20, &qword_256FFA318);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA318);
    sub_2403A9210((uint64_t)v20, v29, &qword_256FFA318);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA318);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA318);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA318);
LABEL_12:
        v35 = v46;
        v36 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
        v37 = v44;
        v38 = v42;
        v36(v44, (char *)a1 + *(int *)(v28 + 24), v42);
        v39 = v45;
        v36(v45, &v47[*(int *)(v28 + 24)], v38);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v40 = *(void (**)(char *, uint64_t))(v35 + 8);
        v40(v39, v38);
        v40(v37, v38);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA318);
      if (v30(v29, 1, v8) != 1)
      {
        v33 = v43;
        sub_2403A91CC(v29, (uint64_t)v43, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
        if (*v17 == *v33)
        {
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v34 = sub_2408E5CD8();
          sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
          sub_2403A97FC((uint64_t)v20, &qword_256FFA318);
          sub_2403A97FC((uint64_t)v22, &qword_256FFA318);
          sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
          sub_2403A97FC((uint64_t)v13, &qword_256FFA318);
          if ((v34 & 1) != 0)
            goto LABEL_12;
LABEL_15:
          v27 = 0;
          return v27 & 1;
        }
        sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
        sub_2403A97FC((uint64_t)v20, &qword_256FFA318);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA318);
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
        v32 = (uint64_t)v13;
        v31 = &qword_256FFA318;
LABEL_14:
        sub_2403A97FC(v32, v31);
        goto LABEL_15;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFA318);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA318);
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    }
    v31 = &qword_257000CC8;
    v32 = (uint64_t)v13;
    goto LABEL_14;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoActionSuccessV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  char v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unsigned __int8 *, uint64_t);
  char *v55;
  unsigned __int8 *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned __int8 *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v61 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v59 - v5;
  v70 = type metadata accessor for TranscriptProtoUndoContext(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v64 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001140);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3B0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for ToolKitProtoTypedValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for TranscriptProtoActionSuccess(0);
  sub_2403A9210((uint64_t)&v73[*(int *)(v30 + 24)], (uint64_t)v29, &qword_256FFA3A8);
  v72 = v30;
  sub_2403A9210((uint64_t)&v74[*(int *)(v30 + 24)], (uint64_t)v27, &qword_256FFA3A8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA3A8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA3A8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      goto LABEL_9;
    }
LABEL_6:
    v33 = &qword_257000CA8;
    v34 = (uint64_t)v20;
LABEL_7:
    sub_2403A97FC(v34, v33);
    goto LABEL_10;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA3A8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
  v35 = static ToolKitProtoTypedValue.== infix(_:_:)(v24, v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
  if ((v35 & 1) == 0)
    goto LABEL_10;
LABEL_9:
  v37 = v73;
  v36 = v74;
  if (*v73 != *v74)
    goto LABEL_10;
  v40 = v72;
  v41 = v69;
  sub_2403A9210((uint64_t)&v73[*(int *)(v72 + 28)], v69, &qword_256FFA3B0);
  v42 = v68;
  sub_2403A9210((uint64_t)&v36[*(int *)(v40 + 28)], v68, &qword_256FFA3B0);
  v43 = v71;
  v44 = v71 + *(int *)(v66 + 48);
  sub_2403A9210(v41, v71, &qword_256FFA3B0);
  sub_2403A9210(v42, v44, &qword_256FFA3B0);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v46 = v70;
  if (v45(v43, 1, v70) != 1)
  {
    v47 = v65;
    sub_2403A9210(v43, (uint64_t)v65, &qword_256FFA3B0);
    if (v45(v44, 1, v46) != 1)
    {
      v48 = v64;
      sub_2403A91CC(v44, (uint64_t)v64, type metadata accessor for TranscriptProtoUndoContext);
      v49 = sub_2404E4C74(v47, v48, type metadata accessor for TranscriptProtoUndoContext);
      sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoUndoContext);
      sub_2403A97FC(v42, &qword_256FFA3B0);
      sub_2403A97FC(v41, &qword_256FFA3B0);
      sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoUndoContext);
      sub_2403A97FC(v43, &qword_256FFA3B0);
      if ((v49 & 1) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
    sub_2403A97FC(v42, &qword_256FFA3B0);
    sub_2403A97FC(v41, &qword_256FFA3B0);
    sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoUndoContext);
    goto LABEL_17;
  }
  sub_2403A97FC(v42, &qword_256FFA3B0);
  sub_2403A97FC(v41, &qword_256FFA3B0);
  if (v45(v44, 1, v46) != 1)
  {
LABEL_17:
    v33 = &qword_257001140;
    v34 = v43;
    goto LABEL_7;
  }
  sub_2403A97FC(v43, &qword_256FFA3B0);
LABEL_19:
  if (v37[1] == v36[1])
  {
    v50 = v72;
    v51 = &v37[*(int *)(v72 + 32)];
    v53 = v62;
    v52 = v63;
    v54 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v62 + 16);
    v55 = v60;
    v54(v60, v51, v63);
    v56 = &v36[*(int *)(v50 + 32)];
    v57 = v61;
    v54(v61, v56, v52);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v38 = sub_2408E5CD8();
    v58 = *(void (**)(char *, uint64_t))(v53 + 8);
    v58(v57, v52);
    v58(v55, v52);
    return v38 & 1;
  }
LABEL_10:
  v38 = 0;
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoActionFailureV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA3D8);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3D8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3D8);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3D8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3D8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoActionFailureFailure);
      v25 = _s23LighthouseDataProcessor028TranscriptProtoActionFailureG0V2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoActionFailureFailure);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3D8);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3D8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailure);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3D8);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3D8);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3D8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailure);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001158);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3D8);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3D8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3D8);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoActionFailure(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor28TranscriptProtoASTUpdateExprV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unsigned __int8 *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v0 = sub_2408E57A4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v48 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v41 - v4;
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v41 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v22 = (char *)&v41 - v21;
  if (*v20 != *v19)
    goto LABEL_10;
  v41 = v8;
  v45 = v1;
  v46 = v0;
  v23 = v20;
  v24 = v19;
  v25 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v26 = *(int *)(v25 + 20);
  v43 = v23;
  sub_2403A9210((uint64_t)&v23[v26], (uint64_t)v22, &qword_257000CF8);
  v42 = v25;
  v27 = *(int *)(v25 + 20);
  v44 = v24;
  sub_2403A9210((uint64_t)&v24[v27], (uint64_t)v18, &qword_257000CF8);
  v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v11, &qword_257000CF8);
  sub_2403A9210((uint64_t)v18, v28, &qword_257000CF8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v29((uint64_t)v11, 1, v5) != 1)
  {
    sub_2403A9210((uint64_t)v11, (uint64_t)v15, &qword_257000CF8);
    if (v29(v28, 1, v5) != 1)
    {
      v30 = v41;
      sub_2403A91CC(v28, (uint64_t)v41, type metadata accessor for TranscriptProtoASTExpr);
      v31 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v15, v30);
      sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v18, &qword_257000CF8);
      sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
      sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v11, &qword_257000CF8);
      if ((v31 & 1) != 0)
        goto LABEL_9;
LABEL_10:
      v38 = 0;
      return v38 & 1;
    }
    sub_2403A97FC((uint64_t)v18, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
    sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoASTExpr);
LABEL_7:
    sub_2403A97FC((uint64_t)v11, &qword_257000CF0);
    goto LABEL_10;
  }
  sub_2403A97FC((uint64_t)v18, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
  if (v29(v28, 1, v5) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v11, &qword_257000CF8);
LABEL_9:
  v32 = v42;
  v34 = v45;
  v33 = v46;
  v35 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 16);
  v36 = v47;
  v35(v47, &v43[*(int *)(v42 + 24)], v46);
  v37 = v48;
  v35(v48, &v44[*(int *)(v32 + 24)], v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_2408E5CD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoVisualOutputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001028);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFE9F8);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFE9F8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFE9F8);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFE9F8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFE9F8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoVisualOutputType);
      _s23LighthouseDataProcessor31TranscriptProtoVisualOutputTypeO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoVisualOutputType);
      sub_2403A97FC((uint64_t)v19, &qword_256FFE9F8);
      sub_2403A97FC((uint64_t)v21, &qword_256FFE9F8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
      sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFE9F8);
    sub_2403A97FC((uint64_t)v21, &qword_256FFE9F8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoVisualOutputType);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001028);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFE9F8);
  sub_2403A97FC((uint64_t)v21, &qword_256FFE9F8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoVisualOutput(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoVariableStepV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_2408E57A4();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - v7;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v43);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v38 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v38 - v21;
  v23 = a1;
  if ((sub_2408BE934(*a1, *a2) & 1) == 0)
    goto LABEL_8;
  v38 = v11;
  v39 = v8;
  v24 = type metadata accessor for TranscriptProtoVariableStep(0);
  v25 = v23;
  sub_2403A9210((uint64_t)v23 + *(int *)(v24 + 20), (uint64_t)v22, &qword_256FFA300);
  sub_2403A9210((uint64_t)a2 + *(int *)(v24 + 20), (uint64_t)v20, &qword_256FFA300);
  v26 = (uint64_t)&v13[*(int *)(v43 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v26, &qword_256FFA300);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v27((uint64_t)v13, 1, v45) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v27(v26, 1, v45) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
LABEL_11:
      v33 = v41;
      v32 = v42;
      v34 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v35 = v39;
      v34(v39, (char *)v25 + *(int *)(v24 + 24), v42);
      v36 = v40;
      v34(v40, (char *)a2 + *(int *)(v24 + 24), v32);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v28 = sub_2408E5CD8();
      v37 = *(void (**)(char *, uint64_t))(v33 + 8);
      v37(v36, v32);
      v37(v35, v32);
      return v28 & 1;
    }
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v27(v26, 1, v45) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_7:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
    goto LABEL_8;
  }
  v30 = (uint64_t)v38;
  sub_2403A91CC(v26, (uint64_t)v38, type metadata accessor for TranscriptProtoStatementID);
  v31 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v31 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v28 = 0;
  return v28 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoIntelligenceFlowErrorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (a1[2] == *((_QWORD *)a2 + 2))
    {
      v13 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
      v14 = (char *)a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, &a2[*(int *)(v13 + 24)], v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoSessionErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA388);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA388);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA388);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA388);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA388);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoSessionErrorEnum);
      _s23LighthouseDataProcessor31TranscriptProtoSessionErrorEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoSessionErrorEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA388);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA388);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA388);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA388);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSessionErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570011C0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA388);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA388);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoSessionError(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoPlannerErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA378);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA378);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA378);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA378);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA378);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA378);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoPlannerErrorEnum);
      v25 = sub_24052FE18((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoPlannerErrorEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA378);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA378);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPlannerErrorEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA378);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA378);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA378);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPlannerErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570011A0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA378);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA378);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA378);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoPlannerError(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoClientCustomV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  sub_2408C422C(*a1, a1[1]);
  if ((v11 & 1) != 0 && (sub_2408C422C(a1[2], a1[3]), (v12 & 1) != 0))
  {
    if (a1[4] == *(_QWORD *)(a2 + 32) && a1[5] == *(_QWORD *)(a2 + 40) || (v13 = 0, (sub_2408E617C() & 1) != 0))
    {
      v14 = type metadata accessor for TranscriptProtoClientCustom(0);
      v15 = (char *)a1 + *(int *)(v14 + 28);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, (char *)(a2 + *(int *)(v14 + 28)), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = sub_2408E5CD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoClientActionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v44 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v12);
  v51 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v23 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v23 & 1;
  }
  if ((sub_240890664(a1[2], a2[2]) & 1) == 0)
    goto LABEL_26;
  v24 = a1[5];
  v25 = a2[5];
  if (v24)
  {
    if (!v25)
      goto LABEL_26;
    if (a1[4] != a2[4] || v24 != v25)
    {
      v23 = 0;
      if ((sub_2408E617C() & 1) == 0)
        return v23 & 1;
    }
  }
  else if (v25)
  {
    goto LABEL_26;
  }
  v26 = a1[7];
  v27 = a2[7];
  if (!v26)
  {
    if (v27)
      goto LABEL_26;
LABEL_19:
    if ((sub_240890B4C(a1[3], a2[3]) & 1) != 0)
    {
      v28 = type metadata accessor for TranscriptProtoClientAction(0);
      sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 36), (uint64_t)v22, &qword_256FFA300);
      v45 = v28;
      sub_2403A9210((uint64_t)a2 + *(int *)(v28 + 36), (uint64_t)v20, &qword_256FFA300);
      v29 = v51;
      v30 = v51 + *(int *)(v12 + 48);
      sub_2403A9210((uint64_t)v22, v51, &qword_256FFA300);
      v46 = v30;
      sub_2403A9210((uint64_t)v20, v30, &qword_256FFA300);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v31(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
        v29 = v51;
        sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
        if (v31(v46, 1, v8) == 1)
        {
          sub_2403A97FC(v29, &qword_256FFA300);
LABEL_29:
          v35 = v45;
          v36 = (char *)a1 + *(int *)(v45 + 40);
          v38 = v49;
          v37 = v50;
          v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
          v40 = v47;
          v39(v47, v36, v50);
          v41 = (char *)a2 + *(int *)(v35 + 40);
          v42 = v48;
          v39(v48, v41, v37);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v23 = sub_2408E5CD8();
          v43 = *(void (**)(char *, uint64_t))(v38 + 8);
          v43(v42, v37);
          v43(v40, v37);
          return v23 & 1;
        }
      }
      else
      {
        sub_2403A9210(v29, (uint64_t)v17, &qword_256FFA300);
        v32 = v46;
        if (v31(v46, 1, v8) != 1)
        {
          sub_2403A91CC(v32, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
          v34 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, (uint64_t)v11);
          sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
          sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
          sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
          sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
          sub_2403A97FC(v29, &qword_256FFA300);
          if ((v34 & 1) != 0)
            goto LABEL_29;
          goto LABEL_26;
        }
        sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
      }
      sub_2403A97FC(v29, &qword_257000C50);
    }
LABEL_26:
    v23 = 0;
    return v23 & 1;
  }
  if (!v27)
    goto LABEL_26;
  if (a1[6] == a2[6] && v26 == v27)
    goto LABEL_19;
  v23 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_19;
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoASTForInStmtV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;

  v4 = sub_2408E57A4();
  v62 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v57 - v7;
  v69 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v59 = (uint64_t *)((char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD0);
  MEMORY[0x24BDAC7A8](v65);
  v70 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v57 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v57 - v15;
  v16 = type metadata accessor for TranscriptProtoASTExpr(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v64 = (uint64_t *)((char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v57 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v57 - v29;
  v31 = *(_QWORD *)a1;
  v32 = *((_QWORD *)a1 + 1);
  v71 = a1;
  v72 = a2;
  if (v31 == *(_QWORD *)a2 && v32 == *((_QWORD *)a2 + 1) || (v33 = 0, (sub_2408E617C() & 1) != 0))
  {
    v58 = v4;
    v34 = (int *)type metadata accessor for TranscriptProtoASTForInStmt(0);
    sub_2403A9210((uint64_t)&v71[v34[5]], (uint64_t)v30, &qword_257000CF8);
    sub_2403A9210((uint64_t)&v72[v34[5]], (uint64_t)v28, &qword_257000CF8);
    v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_257000CF8);
    sub_2403A9210((uint64_t)v28, v35, &qword_257000CF8);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v36((uint64_t)v21, 1, v16) == 1)
    {
      sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
      sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
      if (v36(v35, 1, v16) == 1)
      {
        sub_2403A97FC((uint64_t)v21, &qword_257000CF8);
LABEL_11:
        v41 = v68;
        sub_2403A9210((uint64_t)&v71[v34[6]], v68, &qword_257000DD8);
        v42 = v67;
        sub_2403A9210((uint64_t)&v72[v34[6]], v67, &qword_257000DD8);
        v43 = v70;
        v44 = v70 + *(int *)(v65 + 48);
        sub_2403A9210(v41, v70, &qword_257000DD8);
        sub_2403A9210(v42, v44, &qword_257000DD8);
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
        v46 = v69;
        if (v45(v43, 1, v69) == 1)
        {
          sub_2403A97FC(v42, &qword_257000DD8);
          sub_2403A97FC(v41, &qword_257000DD8);
          if (v45(v44, 1, v46) == 1)
          {
            sub_2403A97FC(v43, &qword_257000DD8);
LABEL_19:
            v50 = v62;
            v51 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
            v52 = v60;
            v53 = v58;
            v51(v60, &v71[v34[7]], v58);
            v54 = v61;
            v51(v61, &v72[v34[7]], v53);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v33 = sub_2408E5CD8();
            v55 = *(void (**)(char *, uint64_t))(v50 + 8);
            v55(v54, v53);
            v55(v52, v53);
            return v33 & 1;
          }
          goto LABEL_16;
        }
        v47 = v63;
        sub_2403A9210(v43, (uint64_t)v63, &qword_257000DD8);
        if (v45(v44, 1, v46) == 1)
        {
          sub_2403A97FC(v42, &qword_257000DD8);
          sub_2403A97FC(v41, &qword_257000DD8);
          sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_16:
          v37 = &qword_257000DD0;
          v38 = v43;
          goto LABEL_21;
        }
        v48 = v59;
        sub_2403A91CC(v44, (uint64_t)v59, type metadata accessor for TranscriptProtoASTBlockStmt);
        if ((sub_2408BFDF8(*v47, *v48) & 1) == 0)
        {
          sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoASTBlockStmt);
          sub_2403A97FC(v42, &qword_257000DD8);
          sub_2403A97FC(v41, &qword_257000DD8);
          sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoASTBlockStmt);
          v38 = v43;
          v37 = &qword_257000DD8;
          goto LABEL_21;
        }
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v49 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoASTBlockStmt);
        sub_2403A97FC(v42, &qword_257000DD8);
        sub_2403A97FC(v41, &qword_257000DD8);
        sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoASTBlockStmt);
        sub_2403A97FC(v43, &qword_257000DD8);
        if ((v49 & 1) != 0)
          goto LABEL_19;
LABEL_22:
        v33 = 0;
        return v33 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_257000CF8);
      if (v36(v35, 1, v16) != 1)
      {
        v39 = v64;
        sub_2403A91CC(v35, (uint64_t)v64, type metadata accessor for TranscriptProtoASTExpr);
        v40 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v25, v39);
        sub_240388AE4((uint64_t)v39, type metadata accessor for TranscriptProtoASTExpr);
        sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
        sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
        sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTExpr);
        sub_2403A97FC((uint64_t)v21, &qword_257000CF8);
        if ((v40 & 1) == 0)
          goto LABEL_22;
        goto LABEL_11;
      }
      sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
      sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTExpr);
    }
    v37 = &qword_257000CF0;
    v38 = (uint64_t)v21;
LABEL_21:
    sub_2403A97FC(v38, v37);
    goto LABEL_22;
  }
  return v33 & 1;
}

uint64_t sub_2404E4C74(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v13 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
    v15 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v15 || (v14 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v14 = 0, (sub_2408E617C() & 1) != 0))
      {
        v16 = a3(0);
        v17 = (char *)a1 + *(int *)(v16 + 28);
        v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        v18(v12, v17, v6);
        v18(v10, &a2[*(int *)(v16 + 28)], v6);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v14 = sub_2408E5CD8();
        v19 = *(void (**)(char *, uint64_t))(v7 + 8);
        v19(v10, v6);
        v19(v12, v6);
      }
    }
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor26TranscriptProtoSpeechQueryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if ((sub_2408BB6B4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
  {
    goto LABEL_3;
  }
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a2 + 24);
  if (!v13)
  {
    if (!v14)
    {
LABEL_12:
      v15 = type metadata accessor for TranscriptProtoSpeechQuery(0);
      v16 = a1 + *(int *)(v15 + 28);
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v17(v10, v16, v4);
      v17(v8, a2 + *(int *)(v15 + 28), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v11 = sub_2408E5CD8();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v8, v4);
      v18(v10, v4);
      return v11 & 1;
    }
LABEL_3:
    v11 = 0;
    return v11 & 1;
  }
  if (!v14)
    goto LABEL_3;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v13 == v14)
    goto LABEL_12;
  v11 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_12;
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor26TranscriptProtoASTPickTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(unsigned __int8 *)(a1 + 8);
  v12 = *((unsigned __int8 *)a2 + 8);
  if (v11 == 255)
  {
    if (v12 == 255)
    {
LABEL_3:
      v13 = type metadata accessor for TranscriptProtoASTPickType(0);
      v14 = a1 + *(int *)(v13 + 20);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, (uint64_t)a2 + *(int *)(v13 + 20), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_2408E5CD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
      return v16 & 1;
    }
LABEL_5:
    v16 = 0;
    return v16 & 1;
  }
  if (v12 == 255)
    goto LABEL_5;
  v19 = *a2;
  v16 = 0;
  if ((v11 & 1) != 0)
  {
    if ((v12 & 1) != 0 && ((((*(_QWORD *)a1 & 1) == 0) ^ v19) & 1) != 0)
      goto LABEL_3;
  }
  else if ((v12 & 1) == 0 && *(_QWORD *)a1 == v19)
  {
    goto LABEL_3;
  }
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E78);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFEC30);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFEC30);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFEC30);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFEC30);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFEC30);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, (uint64_t)v37, type metadata accessor for TranscriptProtoAstflatValueEnum);
      _s23LighthouseDataProcessor31TranscriptProtoAstflatValueEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoAstflatValueEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFEC30);
      sub_2403A97FC((uint64_t)v21, &qword_256FFEC30);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFEC30);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFEC30);
    sub_2403A97FC((uint64_t)v21, &qword_256FFEC30);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000E78);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFEC30);
  sub_2403A97FC((uint64_t)v21, &qword_256FFEC30);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFEC30);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor26TranscriptProtoASTFlatExprV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E90);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFEC20);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFEC20);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFEC20);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFEC20);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFEC20);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoAstflatExprEnum);
      _s23LighthouseDataProcessor30TranscriptProtoAstflatExprEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoAstflatExprEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFEC20);
      sub_2403A97FC((uint64_t)v21, &qword_256FFEC20);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFEC20);
    sub_2403A97FC((uint64_t)v21, &qword_256FFEC20);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000E90);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFEC20);
  sub_2403A97FC((uint64_t)v21, &qword_256FFEC20);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor25TranscriptProtoDialogTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA3F0);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3F0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3F0);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3F0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3F0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoDialogFormat);
      _s23LighthouseDataProcessor27TranscriptProtoDialogFormatO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoDialogFormat);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3F0);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3F0);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3F0);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3F0);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000FF8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3F0);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3F0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoDialogType(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor24TranscriptProtoTimepointV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  _QWORD *v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v44 - v7;
  v8 = sub_2408E5750();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001290);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  v23 = type metadata accessor for TranscriptProtoTimepoint(0);
  v24 = *(int *)(v23 + 28);
  v50 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA498);
  v27 = *(int *)(v26 + 28);
  v51 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_256FFA498);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA498);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA498);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA498);
    if (v29(v28, 1, v8) != 1)
    {
      v30 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v49, v28, v8);
      sub_2404FA028(&qword_257001298, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
      v31 = sub_2408E5CD8();
      v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32(v30, v8);
      sub_2403A97FC((uint64_t)v20, &qword_256FFA498);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA498);
      v32(v17, v8);
      sub_2403A97FC((uint64_t)v13, &qword_256FFA498);
      if ((v31 & 1) != 0)
        goto LABEL_8;
LABEL_14:
      v35 = 0;
      return v35 & 1;
    }
    sub_2403A97FC((uint64_t)v20, &qword_256FFA498);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA498);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257001290);
    goto LABEL_14;
  }
  sub_2403A97FC((uint64_t)v20, &qword_256FFA498);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA498);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v13, &qword_256FFA498);
LABEL_8:
  v34 = v50;
  v33 = v51;
  if (*v50 != *(_QWORD *)v51 || v50[1] != *((_QWORD *)v51 + 1))
    goto LABEL_14;
  if (v50[2] == *((_QWORD *)v51 + 2) && v50[3] == *((_QWORD *)v51 + 3) || (v35 = 0, (sub_2408E617C() & 1) != 0))
  {
    v36 = (char *)v34 + *(int *)(v26 + 32);
    v38 = v47;
    v37 = v48;
    v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v40 = v45;
    v39(v45, v36, v48);
    v41 = v46;
    v39(v46, &v33[*(int *)(v26 + 32)], v37);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v35 = sub_2408E5CD8();
    v42 = *(void (**)(char *, uint64_t))(v38 + 8);
    v42(v41, v37);
    v42(v40, v37);
  }
  return v35 & 1;
}

uint64_t _s23LighthouseDataProcessor24TranscriptProtoTextQueryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v4 = sub_2408E57A4();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v51 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v51 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v51 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *a2;
  v26 = a2[1];
  v58 = a2;
  if (v23 != v25 || v24 != v26)
  {
    v27 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v27 & 1;
  }
  if (*((unsigned __int8 *)a1 + 16) != *((unsigned __int8 *)v58 + 16))
    goto LABEL_19;
  v28 = type metadata accessor for TranscriptProtoTextQuery(0);
  sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v22, &qword_256FFA300);
  v52 = v28;
  v29 = *(int *)(v28 + 24);
  v30 = v58;
  sub_2403A9210((uint64_t)v58 + v29, (uint64_t)v20, &qword_256FFA300);
  v31 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v32(v31, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      goto LABEL_12;
    }
LABEL_10:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
    goto LABEL_19;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v32(v31, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_10;
  }
  v33 = v57;
  sub_2403A91CC(v31, v57, type metadata accessor for TranscriptProtoStatementID);
  v34 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v33);
  sub_240388AE4(v33, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v34 & 1) == 0)
    goto LABEL_19;
LABEL_12:
  v35 = v30;
  v36 = v52;
  v37 = *(int *)(v52 + 28);
  v38 = (uint64_t *)((char *)a1 + v37);
  v39 = *(uint64_t *)((char *)a1 + v37 + 8);
  v40 = (_QWORD *)((char *)v35 + v37);
  v41 = v40[1];
  if (!v39)
  {
    if (!v41)
    {
LABEL_21:
      v43 = (uint64_t)a1 + *(int *)(v36 + 32);
      v45 = v55;
      v44 = v56;
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      v47 = v53;
      v46(v53, v43, v56);
      v48 = (char *)v58 + *(int *)(v36 + 32);
      v49 = v54;
      v46(v54, (uint64_t)v48, v44);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v27 = sub_2408E5CD8();
      v50 = *(void (**)(char *, uint64_t))(v45 + 8);
      v50(v49, v44);
      v50(v47, v44);
      return v27 & 1;
    }
    goto LABEL_19;
  }
  if (!v41)
  {
LABEL_19:
    v27 = 0;
    return v27 & 1;
  }
  if (*v38 == *v40 && v39 == v41)
    goto LABEL_21;
  v27 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_21;
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoActionParameterContextV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v24 = *(int *)(v23 + 24);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA300);
  v27 = *(int *)(v26 + 24);
  v50 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_256FFA300);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA300);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
LABEL_15:
    v34 = 0;
    return v34 & 1;
  }
  v30 = v48;
  sub_2403A91CC(v28, v48, type metadata accessor for TranscriptProtoStatementID);
  v31 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v31 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v33 = v49;
  v32 = v50;
  if (*v49 == *(_QWORD *)v50 && v49[1] == *((_QWORD *)v50 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (v33[2] == *((_QWORD *)v32 + 2) && v33[3] == *((_QWORD *)v32 + 3) || (v34 = 0, (sub_2408E617C() & 1) != 0))
    {
      v35 = (char *)v33 + *(int *)(v26 + 28);
      v37 = v46;
      v36 = v47;
      v38 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
      v39 = v44;
      v38(v44, v35, v47);
      v40 = v45;
      v38(v45, &v32[*(int *)(v26 + 28)], v36);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v34 = sub_2408E5CD8();
      v41 = *(void (**)(char *, uint64_t))(v37 + 8);
      v41(v40, v36);
      v41(v39, v36);
    }
  }
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoParameterQueryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char B0V2eeoiySbAC_ACtFZ_0;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t Data;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;

  v77 = a2;
  v3 = sub_2408E57A4();
  v66 = *(_QWORD *)(v3 - 8);
  v67 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v65 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)&v64 - v6;
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  v71 = *(_QWORD *)(Data - 8);
  MEMORY[0x24BDAC7A8](Data);
  v68 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001058);
  MEMORY[0x24BDAC7A8](v70);
  v74 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001060);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v76 = (uint64_t)&v64 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v72 = (uint64_t)&v64 - v14;
  v15 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001068);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char **)((char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v64 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v64 - v29;
  v31 = type metadata accessor for TranscriptProtoParameterQuery(0);
  v32 = *(int *)(v31 + 20);
  v75 = a1;
  v33 = (uint64_t)a1 + v32;
  v34 = (int *)v31;
  sub_2403A9210(v33, (uint64_t)v30, &qword_256FFAFF8);
  sub_2403A9210((uint64_t)v77 + v34[5], (uint64_t)v28, &qword_256FFAFF8);
  v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFAFF8);
  sub_2403A9210((uint64_t)v28, v35, &qword_256FFAFF8);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v36((uint64_t)v21, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFAFF8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFAFF8);
    if (v36(v35, 1, v15) == 1)
    {
      sub_2403A97FC((uint64_t)v21, &qword_256FFAFF8);
      goto LABEL_8;
    }
LABEL_6:
    sub_2403A97FC((uint64_t)v21, &qword_257001068);
    goto LABEL_23;
  }
  sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFAFF8);
  if (v36(v35, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFAFF8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFAFF8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoActionParameterContext);
    goto LABEL_6;
  }
  sub_2403A91CC(v35, (uint64_t)v18, type metadata accessor for TranscriptProtoActionParameterContext);
  v37 = _s23LighthouseDataProcessor37TranscriptProtoActionParameterContextV2eeoiySbAC_ACtFZ_0(v25, v18);
  sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoActionParameterContext);
  sub_2403A97FC((uint64_t)v28, &qword_256FFAFF8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFAFF8);
  sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoActionParameterContext);
  sub_2403A97FC((uint64_t)v21, &qword_256FFAFF8);
  if ((v37 & 1) == 0)
    goto LABEL_23;
LABEL_8:
  v38 = v75;
  v39 = v72;
  sub_2403A9210((uint64_t)v75 + v34[6], v72, &qword_257001060);
  v41 = v76;
  v40 = v77;
  sub_2403A9210((uint64_t)v77 + v34[6], v76, &qword_257001060);
  v42 = v74;
  v43 = v74 + *(int *)(v70 + 48);
  sub_2403A9210(v39, v74, &qword_257001060);
  sub_2403A9210(v41, v43, &qword_257001060);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v45 = Data;
  if (v44(v42, 1, Data) == 1)
  {
    sub_2403A97FC(v41, &qword_257001060);
    sub_2403A97FC(v39, &qword_257001060);
    if (v44(v43, 1, v45) == 1)
    {
      sub_2403A97FC(v42, &qword_257001060);
      goto LABEL_15;
    }
LABEL_13:
    sub_2403A97FC(v42, &qword_257001058);
    goto LABEL_23;
  }
  v46 = v69;
  sub_2403A9210(v42, v69, &qword_257001060);
  if (v44(v43, 1, v45) == 1)
  {
    sub_2403A97FC(v76, &qword_257001060);
    sub_2403A97FC(v39, &qword_257001060);
    sub_240388AE4(v46, type metadata accessor for TranscriptProtoQueryData);
    goto LABEL_13;
  }
  v47 = v68;
  sub_2403A91CC(v43, v68, type metadata accessor for TranscriptProtoQueryData);
  B0V2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor020TranscriptProtoQueryB0V2eeoiySbAC_ACtFZ_0(v46, v47);
  sub_240388AE4(v47, type metadata accessor for TranscriptProtoQueryData);
  sub_2403A97FC(v76, &qword_257001060);
  sub_2403A97FC(v39, &qword_257001060);
  sub_240388AE4(v46, type metadata accessor for TranscriptProtoQueryData);
  sub_2403A97FC(v42, &qword_257001060);
  if ((B0V2eeoiySbAC_ACtFZ_0 & 1) == 0)
    goto LABEL_23;
LABEL_15:
  if ((sub_24088FCEC(*v38, *v40) & 1) == 0)
    goto LABEL_23;
  v49 = v34[7];
  v50 = (uint64_t *)((char *)v38 + v49);
  v51 = *(uint64_t *)((char *)v38 + v49 + 8);
  v52 = (uint64_t *)((char *)v40 + v49);
  v53 = v52[1];
  if (!v51)
  {
    if (!v53)
    {
LABEL_25:
      v56 = (char *)v38 + v34[8];
      v58 = v66;
      v57 = v67;
      v59 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
      v60 = v64;
      v59(v64, v56, v67);
      v61 = (char *)v40 + v34[8];
      v62 = v65;
      v59(v65, v61, v57);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v54 = sub_2408E5CD8();
      v63 = *(void (**)(char *, uint64_t))(v58 + 8);
      v63(v62, v57);
      v63(v60, v57);
      return v54 & 1;
    }
    goto LABEL_23;
  }
  if (!v53)
  {
LABEL_23:
    v54 = 0;
    return v54 & 1;
  }
  if (*v50 == *v52 && v51 == v53)
    goto LABEL_25;
  v54 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_25;
  return v54 & 1;
}

uint64_t sub_2404E7000(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoQueryStep, sub_2408C0714);
}

uint64_t _s23LighthouseDataProcessor24TranscriptProtoParameterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v28;
  unsigned __int8 *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - v7;
  v8 = type metadata accessor for TranscriptProtoCandidate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (unsigned __int8 *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (unsigned __int8 *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v41 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    v24 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        goto LABEL_16;
    }
    else
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
        v24 = 1;
      if ((v24 & 1) != 0)
        goto LABEL_16;
    }
    v43 = v17;
    v25 = type metadata accessor for TranscriptProtoParameter(0);
    sub_2403A9210(a1 + *(int *)(v25 + 24), (uint64_t)v22, &qword_256FFA7B8);
    v42 = v25;
    sub_2403A9210(a2 + *(int *)(v25 + 24), (uint64_t)v20, &qword_256FFA7B8);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA7B8);
    sub_2403A9210((uint64_t)v20, v26, &qword_256FFA7B8);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v27((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7B8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA7B8);
      if (v27(v26, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA7B8);
LABEL_19:
        v32 = v42;
        v33 = a1 + *(int *)(v42 + 28);
        v35 = v47;
        v34 = v48;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        v37 = v45;
        v36(v45, v33, v48);
        v38 = a2 + *(int *)(v32 + 28);
        v39 = v46;
        v36(v46, v38, v34);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v23 = sub_2408E5CD8();
        v40 = *(void (**)(char *, uint64_t))(v35 + 8);
        v40(v39, v34);
        v40(v37, v34);
        return v23 & 1;
      }
    }
    else
    {
      v28 = v43;
      sub_2403A9210((uint64_t)v13, (uint64_t)v43, &qword_256FFA7B8);
      if (v27(v26, 1, v8) != 1)
      {
        v30 = v44;
        sub_2403A91CC(v26, (uint64_t)v44, type metadata accessor for TranscriptProtoCandidate);
        v31 = _s23LighthouseDataProcessor24TranscriptProtoCandidateV2eeoiySbAC_ACtFZ_0(v28, v30);
        sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoCandidate);
        sub_2403A97FC((uint64_t)v20, &qword_256FFA7B8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA7B8);
        sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoCandidate);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA7B8);
        if ((v31 & 1) != 0)
          goto LABEL_19;
LABEL_16:
        v23 = 0;
        return v23 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7B8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA7B8);
      sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoCandidate);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000F40);
    goto LABEL_16;
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoCandidatePromptStatusV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if ((*((_BYTE *)a1 + 9) & 1) != 0)
  {
    if ((*((_BYTE *)a2 + 9) & 1) != 0)
    {
LABEL_3:
      v11 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
      v12 = (uint64_t)a1 + *(int *)(v11 + 20);
      v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v10, v12, v4);
      v13(v8, (uint64_t)a2 + *(int *)(v11 + 20), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
      return v14 & 1;
    }
LABEL_5:
    v14 = 0;
    return v14 & 1;
  }
  if ((*((_BYTE *)a2 + 9) & 1) != 0)
    goto LABEL_5;
  v17 = *a1;
  v18 = *a2;
  v14 = 0;
  if ((a1[1] & 1) != 0)
  {
    if (v17)
    {
      if ((a2[1] & 1) != 0 && v18)
        goto LABEL_3;
    }
    else if ((a2[1] & 1) != 0 && !v18)
    {
      goto LABEL_3;
    }
  }
  else if ((a2[1] & 1) == 0 && v17 == v18)
  {
    goto LABEL_3;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor24TranscriptProtoCandidateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t *v43;
  uint64_t v44;
  char v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, unsigned __int8 *, uint64_t);
  char *v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  unsigned __int8 *v98;

  v97 = a1;
  v98 = a2;
  v2 = sub_2408E57A4();
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v78 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v76 - v5;
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v76 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v82);
  v89 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v87 = (char *)&v76 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v88 = (char *)&v76 - v14;
  v15 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v91 = *(_QWORD *)(v15 - 8);
  v92 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t *)((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011F0);
  MEMORY[0x24BDAC7A8](v90);
  v96 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v85 = (uint64_t *)((char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v94 = (uint64_t)&v76 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v95 = (uint64_t)&v76 - v23;
  v24 = type metadata accessor for ToolKitProtoTypedValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v76 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v76 - v38;
  v40 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_2403A9210((uint64_t)&v97[*(int *)(v40 + 20)], (uint64_t)v39, &qword_256FFA3A8);
  v93 = (int *)v40;
  sub_2403A9210((uint64_t)&v98[*(int *)(v40 + 20)], (uint64_t)v37, &qword_256FFA3A8);
  v41 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_2403A9210((uint64_t)v39, (uint64_t)v30, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v37, v41, &qword_256FFA3A8);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v42((uint64_t)v30, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
    if (v42(v41, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
      goto LABEL_9;
    }
LABEL_6:
    v43 = &qword_257000CA8;
    v44 = (uint64_t)v30;
LABEL_7:
    sub_2403A97FC(v44, v43);
    goto LABEL_25;
  }
  sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFA3A8);
  if (v42(v41, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_6;
  }
  sub_2403A91CC(v41, (uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
  v45 = static ToolKitProtoTypedValue.== infix(_:_:)(v34, v27);
  sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
  if ((v45 & 1) == 0)
    goto LABEL_25;
LABEL_9:
  v47 = v97;
  v46 = v98;
  if (*v97 != *v98)
    goto LABEL_25;
  v48 = v93;
  v49 = v95;
  sub_2403A9210((uint64_t)&v97[v93[6]], v95, &qword_256FFA7B0);
  v50 = v94;
  sub_2403A9210((uint64_t)&v46[v48[6]], v94, &qword_256FFA7B0);
  v51 = v96;
  v52 = v96 + *(int *)(v90 + 48);
  sub_2403A9210(v49, v96, &qword_256FFA7B0);
  sub_2403A9210(v50, v52, &qword_256FFA7B0);
  v53 = v92;
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  if (v54(v51, 1, v92) == 1)
  {
    sub_2403A97FC(v50, &qword_256FFA7B0);
    sub_2403A97FC(v49, &qword_256FFA7B0);
    v55 = v54(v52, 1, v53);
    v57 = (uint64_t)v88;
    v56 = (uint64_t)v89;
    v58 = (uint64_t)v86;
    v59 = (uint64_t)v87;
    if (v55 == 1)
    {
      sub_2403A97FC(v96, &qword_256FFA7B0);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  v60 = v85;
  sub_2403A9210(v51, (uint64_t)v85, &qword_256FFA7B0);
  v61 = v54(v52, 1, v53);
  v57 = (uint64_t)v88;
  v56 = (uint64_t)v89;
  v59 = (uint64_t)v87;
  if (v61 == 1)
  {
    sub_2403A97FC(v94, &qword_256FFA7B0);
    sub_2403A97FC(v95, &qword_256FFA7B0);
    sub_240388AE4((uint64_t)v60, type metadata accessor for TranscriptProtoCandidatePromptStatus);
LABEL_15:
    v43 = &qword_2570011F0;
    v44 = v96;
    goto LABEL_7;
  }
  v62 = v81;
  sub_2403A91CC(v52, (uint64_t)v81, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  LODWORD(v92) = _s23LighthouseDataProcessor36TranscriptProtoCandidatePromptStatusV2eeoiySbAC_ACtFZ_0(v60, v62);
  sub_240388AE4((uint64_t)v62, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_2403A97FC(v94, &qword_256FFA7B0);
  sub_2403A97FC(v95, &qword_256FFA7B0);
  sub_240388AE4((uint64_t)v60, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_2403A97FC(v51, &qword_256FFA7B0);
  v58 = (uint64_t)v86;
  if ((v92 & 1) == 0)
    goto LABEL_25;
LABEL_17:
  sub_2403A9210((uint64_t)&v47[v48[7]], v57, &qword_256FFA300);
  sub_2403A9210((uint64_t)&v46[v48[7]], v59, &qword_256FFA300);
  v63 = v56 + *(int *)(v82 + 48);
  sub_2403A9210(v57, v56, &qword_256FFA300);
  sub_2403A9210(v59, v63, &qword_256FFA300);
  v64 = v84;
  v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  if (v65(v56, 1, v84) != 1)
  {
    sub_2403A9210(v56, v58, &qword_256FFA300);
    if (v65(v63, 1, v64) != 1)
    {
      v66 = v76;
      sub_2403A91CC(v63, v76, type metadata accessor for TranscriptProtoStatementID);
      v67 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v58, v66);
      sub_240388AE4(v66, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC(v59, &qword_256FFA300);
      sub_2403A97FC(v57, &qword_256FFA300);
      sub_240388AE4(v58, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC(v56, &qword_256FFA300);
      if ((v67 & 1) != 0)
        goto LABEL_24;
LABEL_25:
      v73 = 0;
      return v73 & 1;
    }
    sub_2403A97FC(v59, &qword_256FFA300);
    sub_2403A97FC(v57, &qword_256FFA300);
    sub_240388AE4(v58, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_22;
  }
  sub_2403A97FC(v59, &qword_256FFA300);
  sub_2403A97FC(v57, &qword_256FFA300);
  if (v65(v63, 1, v64) != 1)
  {
LABEL_22:
    v43 = &qword_257000C50;
    v44 = v56;
    goto LABEL_7;
  }
  sub_2403A97FC(v56, &qword_256FFA300);
LABEL_24:
  v69 = v79;
  v68 = v80;
  v70 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v79 + 16);
  v71 = v77;
  v70(v77, &v47[v48[8]], v80);
  v72 = v78;
  v70(v78, &v46[v48[8]], v68);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v73 = sub_2408E5CD8();
  v74 = *(void (**)(char *, uint64_t))(v69 + 8);
  v74(v72, v68);
  v74(v71, v68);
  return v73 & 1;
}

uint64_t _s23LighthouseDataProcessor22TranscriptProtoUILabelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoLabel(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_257000FA8);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_257000FA8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_257000FA8);
  sub_2403A9210((uint64_t)v19, v22, &qword_257000FA8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_257000FA8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoLabel);
      v25 = static TranscriptProtoLabel.== infix(_:_:)(v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoLabel);
      sub_2403A97FC((uint64_t)v19, &qword_257000FA8);
      sub_2403A97FC((uint64_t)v21, &qword_257000FA8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoLabel);
      sub_2403A97FC((uint64_t)v12, &qword_257000FA8);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_257000FA8);
    sub_2403A97FC((uint64_t)v21, &qword_257000FA8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoLabel);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000FA0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_257000FA8);
  sub_2403A97FC((uint64_t)v21, &qword_257000FA8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_257000FA8);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoUILabel(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor29TranscriptProtoRequestContentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001268);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA348);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA348);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA348);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA348);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA348);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoRequestContentEnum);
      _s23LighthouseDataProcessor33TranscriptProtoRequestContentEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoRequestContentEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA348);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA348);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA348);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA348);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContentEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001268);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA348);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA348);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoRequestContent(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor22TranscriptProtoRequestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  char v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  int *v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, unsigned __int8 *, uint64_t);
  char *v78;
  unsigned __int8 *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 *v106;
  unsigned __int8 *v107;

  v107 = a2;
  v3 = sub_2408E57A4();
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)&v85 - v6;
  v97 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v93 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v86 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C38);
  MEMORY[0x24BDAC7A8](v92);
  v98 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v91 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v95 = (char *)&v85 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v96 = (char *)&v85 - v14;
  v103 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v94 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001278);
  MEMORY[0x24BDAC7A8](v100);
  v104 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v99 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = (uint64_t)&v85 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v102 = (uint64_t)&v85 - v22;
  v23 = type metadata accessor for TranscriptProtoRequestContent(0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001260);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v85 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v85 - v37;
  v39 = type metadata accessor for TranscriptProtoRequest(0);
  v40 = *(int *)(v39 + 20);
  v106 = a1;
  v41 = (uint64_t)&a1[v40];
  v42 = (int *)v39;
  sub_2403A9210(v41, (uint64_t)v38, &qword_256FFA350);
  sub_2403A9210((uint64_t)&v107[v42[5]], (uint64_t)v36, &qword_256FFA350);
  v43 = (uint64_t)&v29[*(int *)(v27 + 48)];
  sub_2403A9210((uint64_t)v38, (uint64_t)v29, &qword_256FFA350);
  sub_2403A9210((uint64_t)v36, v43, &qword_256FFA350);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v44((uint64_t)v29, 1, v23) == 1)
  {
    sub_2403A97FC((uint64_t)v36, &qword_256FFA350);
    sub_2403A97FC((uint64_t)v38, &qword_256FFA350);
    if (v44(v43, 1, v23) == 1)
    {
      sub_2403A97FC((uint64_t)v29, &qword_256FFA350);
      goto LABEL_9;
    }
LABEL_6:
    v45 = &qword_257001260;
    v46 = (uint64_t)v29;
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v29, (uint64_t)v33, &qword_256FFA350);
  if (v44(v43, 1, v23) == 1)
  {
    sub_2403A97FC((uint64_t)v36, &qword_256FFA350);
    sub_2403A97FC((uint64_t)v38, &qword_256FFA350);
    sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoRequestContent);
    goto LABEL_6;
  }
  sub_2403A91CC(v43, (uint64_t)v26, type metadata accessor for TranscriptProtoRequestContent);
  v47 = _s23LighthouseDataProcessor29TranscriptProtoRequestContentV2eeoiySbAC_ACtFZ_0((uint64_t)v33, (uint64_t)v26);
  sub_240388AE4((uint64_t)v26, type metadata accessor for TranscriptProtoRequestContent);
  sub_2403A97FC((uint64_t)v36, &qword_256FFA350);
  sub_2403A97FC((uint64_t)v38, &qword_256FFA350);
  sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoRequestContent);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA350);
  if ((v47 & 1) == 0)
    goto LABEL_10;
LABEL_9:
  v49 = v106;
  v48 = v107;
  if (*v106 != *v107)
    goto LABEL_10;
  v52 = v102;
  sub_2403A9210((uint64_t)&v106[v42[6]], v102, &qword_256FFA360);
  v53 = v105;
  sub_2403A9210((uint64_t)&v48[v42[6]], v105, &qword_256FFA360);
  v54 = v104;
  v55 = v104 + *(int *)(v100 + 48);
  sub_2403A9210(v52, v104, &qword_256FFA360);
  sub_2403A9210(v53, v55, &qword_256FFA360);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  v57 = v103;
  if (v56(v54, 1, v103) == 1)
  {
    sub_2403A97FC(v53, &qword_256FFA360);
    sub_2403A97FC(v52, &qword_256FFA360);
    if (v56(v55, 1, v57) == 1)
    {
      sub_2403A97FC(v54, &qword_256FFA360);
      goto LABEL_19;
    }
LABEL_17:
    v45 = &qword_257001278;
    v46 = v54;
    goto LABEL_7;
  }
  v58 = v99;
  sub_2403A9210(v54, v99, &qword_256FFA360);
  if (v56(v55, 1, v57) == 1)
  {
    sub_2403A97FC(v105, &qword_256FFA360);
    sub_2403A97FC(v52, &qword_256FFA360);
    sub_240388AE4(v58, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    goto LABEL_17;
  }
  v59 = v94;
  sub_2403A91CC(v55, v94, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  v60 = _s23LighthouseDataProcessor36TranscriptProtoRequestPrescribedPlanV2eeoiySbAC_ACtFZ_0(v58, v59);
  sub_240388AE4(v59, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_2403A97FC(v105, &qword_256FFA360);
  sub_2403A97FC(v52, &qword_256FFA360);
  sub_240388AE4(v58, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_2403A97FC(v54, &qword_256FFA360);
  if ((v60 & 1) == 0)
    goto LABEL_10;
LABEL_19:
  v61 = v42[7];
  v62 = &v49[v61];
  v63 = *(_QWORD *)&v49[v61 + 8];
  v64 = &v48[v61];
  v65 = *((_QWORD *)v64 + 1);
  if (!v63)
  {
    v70 = v42;
    v67 = v97;
    v66 = (uint64_t)v98;
    v69 = (uint64_t)v95;
    v68 = (uint64_t)v96;
    if (v65)
      goto LABEL_10;
LABEL_26:
    sub_2403A9210((uint64_t)&v49[v70[8]], v68, &qword_256FFA368);
    v71 = v70;
    sub_2403A9210((uint64_t)&v48[v70[8]], v69, &qword_256FFA368);
    v72 = v66 + *(int *)(v92 + 48);
    sub_2403A9210(v68, v66, &qword_256FFA368);
    sub_2403A9210(v69, v72, &qword_256FFA368);
    v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
    if (v73(v66, 1, v67) == 1)
    {
      sub_2403A97FC(v69, &qword_256FFA368);
      sub_2403A97FC(v68, &qword_256FFA368);
      if (v73(v72, 1, v67) == 1)
      {
        sub_2403A97FC(v66, &qword_256FFA368);
        goto LABEL_29;
      }
    }
    else
    {
      v82 = v91;
      sub_2403A9210(v66, v91, &qword_256FFA368);
      if (v73(v72, 1, v67) != 1)
      {
        v83 = v86;
        sub_2403A91CC(v72, v86, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        if ((*(_QWORD *)v82 == *(_QWORD *)v83 && *(_QWORD *)(v82 + 8) == *(_QWORD *)(v83 + 8)
           || (sub_2408E617C() & 1) != 0)
          && (sub_2408BAD50(*(_QWORD **)(v82 + 16), *(_QWORD **)(v83 + 16)) & 1) != 0)
        {
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v84 = sub_2408E5CD8();
          sub_240388AE4(v83, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          sub_2403A97FC(v69, &qword_256FFA368);
          sub_2403A97FC(v68, &qword_256FFA368);
          sub_240388AE4(v82, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          sub_2403A97FC(v66, &qword_256FFA368);
          if ((v84 & 1) == 0)
            goto LABEL_10;
LABEL_29:
          v74 = &v49[v71[9]];
          v76 = v89;
          v75 = v90;
          v77 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v89 + 16);
          v78 = v87;
          v77(v87, v74, v90);
          v79 = &v48[v71[9]];
          v80 = v88;
          v77(v88, v79, v75);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v50 = sub_2408E5CD8();
          v81 = *(void (**)(char *, uint64_t))(v76 + 8);
          v81(v80, v75);
          v81(v78, v75);
          return v50 & 1;
        }
        sub_240388AE4(v83, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        sub_2403A97FC(v69, &qword_256FFA368);
        sub_2403A97FC(v68, &qword_256FFA368);
        sub_240388AE4(v82, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        v46 = v66;
        v45 = &qword_256FFA368;
        goto LABEL_7;
      }
      sub_2403A97FC(v69, &qword_256FFA368);
      sub_2403A97FC(v68, &qword_256FFA368);
      sub_240388AE4(v82, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    }
    v45 = &qword_257000C38;
    v46 = v66;
LABEL_7:
    sub_2403A97FC(v46, v45);
LABEL_10:
    v50 = 0;
    return v50 & 1;
  }
  v67 = v97;
  v66 = (uint64_t)v98;
  v69 = (uint64_t)v95;
  v68 = (uint64_t)v96;
  if (!v65)
    goto LABEL_10;
  v70 = v42;
  if (*(_QWORD *)v62 == *(_QWORD *)v64 && v63 == v65)
    goto LABEL_26;
  v50 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_26;
  return v50 & 1;
}

uint64_t _s23LighthouseDataProcessor24TranscriptProtoASTIfStmtV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t *v71;
  uint64_t *v72;
  char v73;
  uint64_t *v74;
  uint64_t *v75;
  char v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v98 = a2;
  v86 = sub_2408E57A4();
  v83 = *(_QWORD *)(v86 - 8);
  v3 = MEMORY[0x24BDAC7A8](v86);
  v82 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v81 = (char *)&v78 - v5;
  v94 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v91 = *(_QWORD *)(v94 - 8);
  v6 = MEMORY[0x24BDAC7A8](v94);
  v80 = (uint64_t *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v85 = (uint64_t *)((char *)&v78 - v8);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD0);
  v9 = MEMORY[0x24BDAC7A8](v93);
  v88 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v92 = (uint64_t)&v78 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v84 = (uint64_t *)((char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v13);
  v89 = (uint64_t)&v78 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v87 = (uint64_t)&v78 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v90 = (uint64_t *)((char *)&v78 - v20);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v97 = (uint64_t)&v78 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v96 = (uint64_t)&v78 - v23;
  v24 = type metadata accessor for TranscriptProtoASTExpr(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t *)((char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (uint64_t *)((char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v78 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v78 - v38;
  v95 = a1;
  sub_2403A9210(a1, (uint64_t)&v78 - v38, &qword_257000CF8);
  sub_2403A9210(v98, (uint64_t)v37, &qword_257000CF8);
  v40 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_2403A9210((uint64_t)v39, (uint64_t)v30, &qword_257000CF8);
  sub_2403A9210((uint64_t)v37, v40, &qword_257000CF8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v41((uint64_t)v30, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v39, &qword_257000CF8);
    if (v41(v40, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
      goto LABEL_8;
    }
LABEL_6:
    v42 = &qword_257000CF0;
    v43 = (uint64_t)v30;
LABEL_30:
    sub_2403A97FC(v43, v42);
    goto LABEL_31;
  }
  sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_257000CF8);
  if (v41(v40, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v39, &qword_257000CF8);
    sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_6;
  }
  sub_2403A91CC(v40, (uint64_t)v27, type metadata accessor for TranscriptProtoASTExpr);
  v44 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v34, v27);
  sub_240388AE4((uint64_t)v27, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v37, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v39, &qword_257000CF8);
  sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
  if ((v44 & 1) == 0)
    goto LABEL_31;
LABEL_8:
  v45 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v47 = v95;
  v46 = v96;
  sub_2403A9210(v95 + *(int *)(v45 + 20), v96, &qword_257000DD8);
  v79 = v45;
  v49 = v97;
  v48 = v98;
  sub_2403A9210(v98 + *(int *)(v45 + 20), v97, &qword_257000DD8);
  v51 = v92;
  v50 = v93;
  v52 = v92 + *(int *)(v93 + 48);
  sub_2403A9210(v46, v92, &qword_257000DD8);
  sub_2403A9210(v49, v52, &qword_257000DD8);
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  v54 = v94;
  if (v53(v51, 1, v94) == 1)
  {
    sub_2403A97FC(v49, &qword_257000DD8);
    sub_2403A97FC(v46, &qword_257000DD8);
    if (v53(v52, 1, v54) == 1)
    {
      sub_2403A97FC(v51, &qword_257000DD8);
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  v71 = v90;
  sub_2403A9210(v51, (uint64_t)v90, &qword_257000DD8);
  if (v53(v52, 1, v54) == 1)
  {
    sub_2403A97FC(v97, &qword_257000DD8);
    sub_2403A97FC(v46, &qword_257000DD8);
    sub_240388AE4((uint64_t)v71, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_17:
    v42 = &qword_257000DD0;
    v43 = v51;
    goto LABEL_30;
  }
  v72 = v85;
  sub_2403A91CC(v52, (uint64_t)v85, type metadata accessor for TranscriptProtoASTBlockStmt);
  if ((sub_2408BFDF8(*v71, *v72) & 1) == 0)
  {
    sub_240388AE4((uint64_t)v72, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_2403A97FC(v97, &qword_257000DD8);
    sub_2403A97FC(v96, &qword_257000DD8);
    sub_240388AE4((uint64_t)v71, type metadata accessor for TranscriptProtoASTBlockStmt);
    v43 = v51;
    goto LABEL_29;
  }
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v73 = sub_2408E5CD8();
  sub_240388AE4((uint64_t)v72, type metadata accessor for TranscriptProtoASTBlockStmt);
  sub_2403A97FC(v97, &qword_257000DD8);
  sub_2403A97FC(v96, &qword_257000DD8);
  sub_240388AE4((uint64_t)v71, type metadata accessor for TranscriptProtoASTBlockStmt);
  sub_2403A97FC(v51, &qword_257000DD8);
  if ((v73 & 1) == 0)
    goto LABEL_31;
LABEL_11:
  v55 = v79;
  v56 = v87;
  sub_2403A9210(v47 + *(int *)(v79 + 24), v87, &qword_257000DD8);
  v57 = v89;
  sub_2403A9210(v48 + *(int *)(v55 + 24), v89, &qword_257000DD8);
  v58 = *(int *)(v50 + 48);
  v59 = v88;
  v60 = v88 + v58;
  sub_2403A9210(v56, v88, &qword_257000DD8);
  sub_2403A9210(v57, v60, &qword_257000DD8);
  if (v53(v59, 1, v54) != 1)
  {
    v74 = v84;
    sub_2403A9210(v59, (uint64_t)v84, &qword_257000DD8);
    if (v53(v60, 1, v54) == 1)
    {
      sub_2403A97FC(v57, &qword_257000DD8);
      sub_2403A97FC(v56, &qword_257000DD8);
      sub_240388AE4((uint64_t)v74, type metadata accessor for TranscriptProtoASTBlockStmt);
      goto LABEL_23;
    }
    v75 = v80;
    sub_2403A91CC(v60, (uint64_t)v80, type metadata accessor for TranscriptProtoASTBlockStmt);
    if ((sub_2408BFDF8(*v74, *v75) & 1) != 0)
    {
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v76 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v75, type metadata accessor for TranscriptProtoASTBlockStmt);
      sub_2403A97FC(v89, &qword_257000DD8);
      sub_2403A97FC(v56, &qword_257000DD8);
      sub_240388AE4((uint64_t)v74, type metadata accessor for TranscriptProtoASTBlockStmt);
      sub_2403A97FC(v59, &qword_257000DD8);
      if ((v76 & 1) != 0)
        goto LABEL_14;
LABEL_31:
      v69 = 0;
      return v69 & 1;
    }
    sub_240388AE4((uint64_t)v75, type metadata accessor for TranscriptProtoASTBlockStmt);
    sub_2403A97FC(v89, &qword_257000DD8);
    sub_2403A97FC(v56, &qword_257000DD8);
    sub_240388AE4((uint64_t)v74, type metadata accessor for TranscriptProtoASTBlockStmt);
    v43 = v59;
LABEL_29:
    v42 = &qword_257000DD8;
    goto LABEL_30;
  }
  sub_2403A97FC(v57, &qword_257000DD8);
  sub_2403A97FC(v56, &qword_257000DD8);
  if (v53(v60, 1, v54) != 1)
  {
LABEL_23:
    v42 = &qword_257000DD0;
    v43 = v59;
    goto LABEL_30;
  }
  sub_2403A97FC(v59, &qword_257000DD8);
LABEL_14:
  v61 = v79;
  v62 = v47 + *(int *)(v79 + 28);
  v63 = v83;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v65 = v81;
  v66 = v86;
  v64(v81, v62, v86);
  v67 = v48 + *(int *)(v61 + 28);
  v68 = v82;
  v64(v82, v67, v66);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v69 = sub_2408E5CD8();
  v70 = *(void (**)(char *, uint64_t))(v63 + 8);
  v70(v68, v66);
  v70(v65, v66);
  return v69 & 1;
}

uint64_t _s23LighthouseDataProcessor22TranscriptProtoASTStmtV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1;
  v12 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v12 & 0xF000000000000007) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v21 = *a1;
  if ((~v12 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_2404F9F70(v12);
    sub_2404F9F88(v11);
    sub_2404F9F88(v12);
LABEL_9:
    v17 = 0;
    return v17 & 1;
  }
  v20 = v12;
  sub_2404F9F70(v11);
  swift_retain();
  v13 = _s23LighthouseDataProcessor26TranscriptProtoAststmtEnumO2eeoiySbAC_ACtFZ_0(&v21, (unint64_t *)&v20);
  swift_release();
  sub_2404F9F88(v11);
  if ((v13 & 1) == 0)
    goto LABEL_9;
LABEL_8:
  v14 = type metadata accessor for TranscriptProtoASTStmt(0);
  v15 = (char *)a1 + *(int *)(v14 + 20);
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v10, v15, v4);
  v16(v8, (char *)a2 + *(int *)(v14 + 20), v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v17 = sub_2408E5CD8();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v10, v4);
  return v17 & 1;
}

uint64_t _s23LighthouseDataProcessor25TranscriptProtoASTLiteralV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFED88);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFED88);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFED88);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFED88);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFED88);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoAstliteralEnum);
      _s23LighthouseDataProcessor29TranscriptProtoAstliteralEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoAstliteralEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFED88);
      sub_2403A97FC((uint64_t)v21, &qword_256FFED88);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFED88);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFED88);
    sub_2403A97FC((uint64_t)v21, &qword_256FFED88);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoAstliteralEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000DB8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFED88);
  sub_2403A97FC((uint64_t)v21, &qword_256FFED88);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFED88);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoASTLiteral(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *a1;
  v12 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v12 & 0xF000000000000007) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v22 = *a1;
  if ((~v12 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_2404F9F14(v12);
    sub_2404F9F30(v11);
    sub_2404F9F30(v12);
LABEL_9:
    v18 = 0;
    return v18 & 1;
  }
  v21 = v12;
  sub_2404F9F14(v11);
  swift_retain();
  _s23LighthouseDataProcessor26TranscriptProtoAstexprEnumO2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)&v21);
  v14 = v13;
  swift_release();
  sub_2404F9F30(v11);
  if ((v14 & 1) == 0)
    goto LABEL_9;
LABEL_8:
  v15 = type metadata accessor for TranscriptProtoASTExpr(0);
  v16 = (char *)a1 + *(int *)(v15 + 20);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v10, v16, v4);
  v17(v8, (char *)a2 + *(int *)(v15 + 20), v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v18 = sub_2408E5CD8();
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  return v18 & 1;
}

uint64_t _s23LighthouseDataProcessor33TranscriptProtoArchiveViewPayloadV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  sub_2408C422C(*a1, a1[1]);
  if ((v11 & 1) == 0)
    goto LABEL_16;
  v12 = a1[3];
  v13 = *((_QWORD *)a2 + 3);
  if (!v12)
  {
    if (v13)
      goto LABEL_16;
    goto LABEL_9;
  }
  if (!v13)
    goto LABEL_16;
  if (a1[2] == *((_QWORD *)a2 + 2) && v12 == v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_9:
    v15 = a1[5];
    v16 = *((_QWORD *)a2 + 5);
    if (v15)
    {
      if (v16)
      {
        if (a1[4] != *((_QWORD *)a2 + 4) || v15 != v16)
        {
          v14 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v14 & 1;
        }
LABEL_18:
        v18 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
        v19 = (char *)a1 + *(int *)(v18 + 28);
        v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v20(v10, v19, v4);
        v20(v8, &a2[*(int *)(v18 + 28)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v14 = sub_2408E5CD8();
        v21 = *(void (**)(char *, uint64_t))(v5 + 8);
        v21(v8, v4);
        v21(v10, v4);
        return v14 & 1;
      }
    }
    else if (!v16)
    {
      goto LABEL_18;
    }
LABEL_16:
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor21TranscriptProtoUITypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoUitype(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFEA88);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFEA88);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFEA88);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFEA88);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFEA88);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoUitype);
      _s23LighthouseDataProcessor21TranscriptProtoUitypeO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoUitype);
      sub_2403A97FC((uint64_t)v19, &qword_256FFEA88);
      sub_2403A97FC((uint64_t)v21, &qword_256FFEA88);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
      sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFEA88);
    sub_2403A97FC((uint64_t)v21, &qword_256FFEA88);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoUitype);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000FB8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFEA88);
  sub_2403A97FC((uint64_t)v21, &qword_256FFEA88);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoUIType(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor21TranscriptProtoSpanIDV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2)
  {
    v11 = type metadata accessor for TranscriptProtoSpanID(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 20)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoValueExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFEC68);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFEC68);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFEC68);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFEC68);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFEC68);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoValueExpressionEnum);
      _s23LighthouseDataProcessor34TranscriptProtoValueExpressionEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoValueExpressionEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFEC68);
      sub_2403A97FC((uint64_t)v21, &qword_256FFEC68);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoValueExpressionEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFEC68);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFEC68);
    sub_2403A97FC((uint64_t)v21, &qword_256FFEC68);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000E00);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFEC68);
  sub_2403A97FC((uint64_t)v21, &qword_256FFEC68);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFEC68);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoValueExpression(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor25TranscriptProtoExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E10);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFCF98);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFCF98);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFCF98);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFCF98);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFCF98);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoExpressionEnum);
      _s23LighthouseDataProcessor29TranscriptProtoExpressionEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoExpressionEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFCF98);
      sub_2403A97FC((uint64_t)v21, &qword_256FFCF98);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFCF98);
    sub_2403A97FC((uint64_t)v21, &qword_256FFCF98);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000E10);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFCF98);
  sub_2403A97FC((uint64_t)v21, &qword_256FFCF98);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoExpression(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoProgramStatementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v43;
  char v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  char v65;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v99 = a2;
  v3 = sub_2408E57A4();
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)&v77 - v6;
  v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v78 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v84);
  v96 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v77 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)&v77 - v15;
  v93 = type metadata accessor for TranscriptProtoExpression(0);
  v90 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v83 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD0);
  MEMORY[0x24BDAC7A8](v89);
  v98 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v87 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v91 = (uint64_t)&v77 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v92 = (uint64_t)&v77 - v23;
  v24 = type metadata accessor for TranscriptProtoStatementID(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v77 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v77 - v38;
  v97 = a1;
  sub_2403A9210(a1, (uint64_t)&v77 - v38, &qword_256FFA300);
  sub_2403A9210(v99, (uint64_t)v37, &qword_256FFA300);
  v40 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_2403A9210((uint64_t)v39, (uint64_t)v30, &qword_256FFA300);
  sub_2403A9210((uint64_t)v37, v40, &qword_256FFA300);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v41((uint64_t)v30, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
    if (v41(v40, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
      goto LABEL_8;
    }
LABEL_6:
    v42 = &qword_257000C50;
    v43 = (uint64_t)v30;
LABEL_21:
    sub_2403A97FC(v43, v42);
    goto LABEL_22;
  }
  sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFA300);
  if (v41(v40, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
    sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  sub_2403A91CC(v40, (uint64_t)v27, type metadata accessor for TranscriptProtoStatementID);
  v44 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v27);
  sub_240388AE4((uint64_t)v27, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v37, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
  sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
  if ((v44 & 1) == 0)
    goto LABEL_22;
LABEL_8:
  v45 = (int *)type metadata accessor for TranscriptProtoProgramStatement(0);
  v46 = v92;
  sub_2403A9210(v97 + v45[5], v92, &qword_256FFCFA0);
  v47 = v91;
  sub_2403A9210(v99 + v45[5], v91, &qword_256FFCFA0);
  v48 = v98;
  v49 = v98 + *(int *)(v89 + 48);
  sub_2403A9210(v46, v98, &qword_256FFCFA0);
  sub_2403A9210(v47, v49, &qword_256FFCFA0);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  v51 = v93;
  if (v50(v48, 1, v93) != 1)
  {
    v57 = v87;
    sub_2403A9210(v48, v87, &qword_256FFCFA0);
    v58 = v50(v49, 1, v51);
    v54 = (uint64_t)v95;
    v53 = (uint64_t)v96;
    v56 = (uint64_t)v94;
    if (v58 != 1)
    {
      v59 = v83;
      sub_2403A91CC(v49, v83, type metadata accessor for TranscriptProtoExpression);
      LODWORD(v93) = _s23LighthouseDataProcessor25TranscriptProtoExpressionV2eeoiySbAC_ACtFZ_0(v57, v59);
      sub_240388AE4(v59, type metadata accessor for TranscriptProtoExpression);
      sub_2403A97FC(v47, &qword_256FFCFA0);
      sub_2403A97FC(v46, &qword_256FFCFA0);
      sub_240388AE4(v57, type metadata accessor for TranscriptProtoExpression);
      sub_2403A97FC(v48, &qword_256FFCFA0);
      v55 = (uint64_t)v88;
      if ((v93 & 1) == 0)
        goto LABEL_22;
      goto LABEL_15;
    }
    sub_2403A97FC(v47, &qword_256FFCFA0);
    sub_2403A97FC(v46, &qword_256FFCFA0);
    sub_240388AE4(v57, type metadata accessor for TranscriptProtoExpression);
    goto LABEL_13;
  }
  sub_2403A97FC(v47, &qword_256FFCFA0);
  sub_2403A97FC(v46, &qword_256FFCFA0);
  v52 = v50(v49, 1, v51);
  v54 = (uint64_t)v95;
  v53 = (uint64_t)v96;
  v55 = (uint64_t)v88;
  v56 = (uint64_t)v94;
  if (v52 != 1)
  {
LABEL_13:
    v42 = &qword_257000CD0;
    v43 = v98;
    goto LABEL_21;
  }
  sub_2403A97FC(v98, &qword_256FFCFA0);
LABEL_15:
  v60 = v97;
  sub_2403A9210(v97 + v45[6], v54, &qword_256FFA428);
  v61 = v99;
  sub_2403A9210(v99 + v45[6], v56, &qword_256FFA428);
  v62 = v53 + *(int *)(v84 + 48);
  sub_2403A9210(v54, v53, &qword_256FFA428);
  sub_2403A9210(v56, v62, &qword_256FFA428);
  v63 = v86;
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v64(v53, 1, v86) == 1)
  {
    sub_2403A97FC(v56, &qword_256FFA428);
    sub_2403A97FC(v54, &qword_256FFA428);
    if (v64(v62, 1, v63) == 1)
    {
      sub_2403A97FC(v53, &qword_256FFA428);
LABEL_25:
      v69 = v60 + v45[7];
      v71 = v81;
      v70 = v82;
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
      v73 = v79;
      v72(v79, v69, v82);
      v74 = v61 + v45[7];
      v75 = v80;
      v72(v80, v74, v70);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v65 = sub_2408E5CD8();
      v76 = *(void (**)(char *, uint64_t))(v71 + 8);
      v76(v75, v70);
      v76(v73, v70);
      return v65 & 1;
    }
    goto LABEL_20;
  }
  sub_2403A9210(v53, v55, &qword_256FFA428);
  if (v64(v62, 1, v63) == 1)
  {
    sub_2403A97FC(v56, &qword_256FFA428);
    sub_2403A97FC(v54, &qword_256FFA428);
    sub_240388AE4(v55, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_20:
    v42 = &qword_257000CB0;
    v43 = v53;
    goto LABEL_21;
  }
  v67 = v78;
  sub_2403A91CC(v62, v78, type metadata accessor for ToolKitProtoTypeInstance);
  v68 = static ToolKitProtoTypeInstance.== infix(_:_:)(v55, v67);
  sub_240388AE4(v67, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC(v56, &qword_256FFA428);
  sub_2403A97FC(v54, &qword_256FFA428);
  sub_240388AE4(v55, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC(v53, &qword_256FFA428);
  if ((v68 & 1) != 0)
    goto LABEL_25;
LABEL_22:
  v65 = 0;
  return v65 & 1;
}

uint64_t _s23LighthouseDataProcessor19TranscriptProtoPlanV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if ((sub_2408C0E30(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0)
      {
        v14 = *(_QWORD *)(a1 + 48);
        v15 = *(_QWORD *)(a2 + 48);
        if (v14)
        {
          if (v15)
          {
            if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v14 != v15)
            {
              v12 = 0;
              if ((sub_2408E617C() & 1) == 0)
                return v12 & 1;
            }
LABEL_19:
            v16 = *(unsigned __int8 *)(a1 + 56);
            v17 = *(unsigned __int8 *)(a2 + 56);
            if (v16 == 5)
            {
              if (v17 != 5)
                goto LABEL_21;
            }
            else
            {
              v12 = 0;
              if (v17 == 5 || v16 != v17)
                return v12 & 1;
            }
            v19 = type metadata accessor for TranscriptProtoPlan(0);
            v20 = a1 + *(int *)(v19 + 36);
            v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
            v21(v10, v20, v4);
            v21(v8, a2 + *(int *)(v19 + 36), v4);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v12 = sub_2408E5CD8();
            v22 = *(void (**)(char *, uint64_t))(v5 + 8);
            v22(v8, v4);
            v22(v10, v4);
            return v12 & 1;
          }
        }
        else if (!v15)
        {
          goto LABEL_19;
        }
      }
LABEL_21:
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor053TranscriptProtoSystemRequirementAuthenticationRequestH5LevelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  int v18;
  uint64_t v21;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *a1;
  v12 = *a2;
  if (v11 != 2)
  {
    v18 = (v12 ^ v11) & 1;
    if (v12 != 2 && v18 == 0)
      goto LABEL_3;
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  if (v12 != 2)
    goto LABEL_8;
LABEL_3:
  v13 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  v14 = &a1[*(int *)(v13 + 20)];
  v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v15(v10, v14, v4);
  v15(v8, &a2[*(int *)(v13 + 20)], v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_2408E5CD8();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor048TranscriptProtoSystemPromptResolutionRequirementH0V2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void (*v14)(char *, unsigned __int8 *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2)
  {
    v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
    v13 = &a1[*(int *)(v12 + 20)];
    v14 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, &a2[*(int *)(v12 + 20)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v11 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor041TranscriptProtoUpdateParameterExpression_fG0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t updated;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v40 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v42 = v17;
      updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
      sub_2403A9210(a1 + *(int *)(updated + 24), (uint64_t)v22, &qword_256FFA300);
      v41 = updated;
      sub_2403A9210(a2 + *(int *)(updated + 24), (uint64_t)v20, &qword_256FFA300);
      v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
      sub_2403A9210((uint64_t)v20, v25, &qword_256FFA300);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v13, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
        if (v26(v25, 1, v8) == 1)
        {
          sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
LABEL_12:
          v30 = v41;
          v31 = a1 + *(int *)(v41 + 28);
          v33 = v46;
          v32 = v47;
          v34 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
          v35 = v44;
          v34(v44, v31, v47);
          v36 = a2 + *(int *)(v30 + 28);
          v37 = v45;
          v34(v45, v36, v32);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v23 = sub_2408E5CD8();
          v38 = *(void (**)(char *, uint64_t))(v33 + 8);
          v38(v37, v32);
          v38(v35, v32);
          return v23 & 1;
        }
        goto LABEL_10;
      }
      v27 = (uint64_t)v42;
      sub_2403A9210((uint64_t)v13, (uint64_t)v42, &qword_256FFA300);
      if (v26(v25, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
        sub_240388AE4(v27, type metadata accessor for TranscriptProtoStatementID);
LABEL_10:
        sub_2403A97FC((uint64_t)v13, &qword_257000C50);
        goto LABEL_13;
      }
      v28 = v43;
      sub_2403A91CC(v25, v43, type metadata accessor for TranscriptProtoStatementID);
      v29 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v27, v28);
      sub_240388AE4(v28, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
      sub_240388AE4(v27, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      if ((v29 & 1) != 0)
        goto LABEL_12;
    }
LABEL_13:
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_2404EC218(uint64_t *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  char *v48;

  v47 = a3;
  v5 = sub_2408E57A4();
  v46 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v41 - v8;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v41 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v41 - v22;
  v24 = *a1;
  v25 = a1[1];
  v26 = *(_QWORD *)a2;
  v27 = *((_QWORD *)a2 + 1);
  v48 = a2;
  if (v24 == v26 && v25 == v27 || (v28 = 0, (sub_2408E617C() & 1) != 0))
  {
    v42 = v5;
    v29 = v47(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v29 + 20), (uint64_t)v23, &qword_256FFA300);
    sub_2403A9210((uint64_t)&v48[*(int *)(v29 + 20)], (uint64_t)v21, &qword_256FFA300);
    v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_2403A9210((uint64_t)v23, (uint64_t)v14, &qword_256FFA300);
    sub_2403A9210((uint64_t)v21, v30, &qword_256FFA300);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (v31((uint64_t)v14, 1, v9) == 1)
    {
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
      if (v31(v30, 1, v9) == 1)
      {
        sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
LABEL_11:
        v34 = v46;
        v35 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
        v36 = v44;
        v37 = v42;
        v35(v44, (char *)a1 + *(int *)(v29 + 24), v42);
        v38 = v45;
        v35(v45, &v48[*(int *)(v29 + 24)], v37);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v28 = sub_2408E5CD8();
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v38, v37);
        v39(v36, v37);
        return v28 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v14, (uint64_t)v18, &qword_256FFA300);
      if (v31(v30, 1, v9) != 1)
      {
        v32 = v43;
        sub_2403A91CC(v30, v43, type metadata accessor for TranscriptProtoStatementID);
        v33 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v18, v32);
        sub_240388AE4(v32, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
        sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
        if ((v33 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v28 = 0;
        return v28 & 1;
      }
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
    }
    sub_2403A97FC((uint64_t)v14, &qword_257000C50);
    goto LABEL_12;
  }
  return v28 & 1;
}

uint64_t sub_2404EC624(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_240890664, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t _s23LighthouseDataProcessor028TranscriptProtoDeviceDetailsF4TypeV2eeoiySbAC_ACtFZ_0(_DWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_DWORD *)a2)
  {
    v11 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 20)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor49TranscriptProtoActionFailureDeveloperDefinedErrorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4))
      {
        v14 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        v15 = (char *)a1 + *(int *)(v14 + 28);
        v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, &a2[*(int *)(v14 + 28)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor028TranscriptProtoActionFailureG0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001148);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA3D0);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3D0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3D0);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3D0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3D0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
      _s23LighthouseDataProcessor028TranscriptProtoActionFailureG4EnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3D0);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3D0);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3D0);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3D0);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3D0);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001148);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3D0);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3D0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3D0);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    goto LABEL_9;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 16);
  if (!v11)
  {
    if (!v12)
    {
LABEL_10:
      v14 = type metadata accessor for TranscriptProtoStatementID(0);
      v15 = a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, a2 + *(int *)(v14 + 24), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = sub_2408E5CD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
      return v13 & 1;
    }
LABEL_9:
    v13 = 0;
    return v13 & 1;
  }
  if (!v12)
    goto LABEL_9;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v11 == v12)
    goto LABEL_10;
  v13 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_10;
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor21TranscriptProtoActionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v58 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v58 - v21;
  v23 = type metadata accessor for TranscriptProtoAction(0);
  v24 = *(int *)(v23 + 28);
  v64 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = (int *)v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA300);
  v27 = v26[7];
  v65 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_256FFA300);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA300);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA300);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
      goto LABEL_8;
    }
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000C50);
    goto LABEL_34;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA300);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  v30 = v63;
  sub_2403A91CC(v28, v63, type metadata accessor for TranscriptProtoStatementID);
  v31 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA300);
  if ((v31 & 1) == 0)
    goto LABEL_34;
LABEL_8:
  v33 = v64;
  v32 = v65;
  if (*v64 == *(_QWORD *)v65 && v64[1] == *((_QWORD *)v65 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    v35 = v26[8];
    v36 = (_QWORD *)((char *)v33 + v35);
    v37 = *(_QWORD *)((char *)v33 + v35 + 8);
    v38 = &v32[v35];
    v39 = *((_QWORD *)v38 + 1);
    if (v37)
    {
      if (!v39)
        goto LABEL_34;
      if (*v36 != *(_QWORD *)v38 || v37 != v39)
      {
        v34 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v34 & 1;
      }
    }
    else if (v39)
    {
      goto LABEL_34;
    }
    v40 = v26[9];
    v41 = (_QWORD *)((char *)v33 + v40);
    v42 = *(_QWORD *)((char *)v33 + v40 + 8);
    v43 = &v32[v40];
    v44 = *((_QWORD *)v43 + 1);
    if (v42)
    {
      if (!v44)
        goto LABEL_34;
      if (*v41 != *(_QWORD *)v43 || v42 != v44)
      {
        v34 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v34 & 1;
      }
    }
    else if (v44)
    {
      goto LABEL_34;
    }
    if (*((unsigned __int8 *)v33 + 16) == v32[16]
      && (sub_240891584(v33[3], *((_QWORD *)v32 + 3)) & 1) != 0)
    {
      v45 = v26[10];
      v46 = (_QWORD *)((char *)v33 + v45);
      v47 = *(_QWORD *)((char *)v33 + v45 + 8);
      v48 = &v32[v45];
      v49 = *((_QWORD *)v48 + 1);
      if (v47)
      {
        if (v49)
        {
          if (*v46 != *(_QWORD *)v48 || v47 != v49)
          {
            v34 = 0;
            if ((sub_2408E617C() & 1) == 0)
              return v34 & 1;
          }
LABEL_36:
          v51 = (char *)v33 + v26[11];
          v53 = v61;
          v52 = v62;
          v54 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
          v55 = v59;
          v54(v59, v51, v62);
          v56 = v60;
          v54(v60, &v32[v26[11]], v52);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v34 = sub_2408E5CD8();
          v57 = *(void (**)(char *, uint64_t))(v53 + 8);
          v57(v56, v52);
          v57(v55, v52);
          return v34 & 1;
        }
      }
      else if (!v49)
      {
        goto LABEL_36;
      }
    }
LABEL_34:
    v34 = 0;
  }
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor020TranscriptProtoQueryB0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DataEnum;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t Data;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v8 = *(_QWORD *)(DataEnum - 8);
  MEMORY[0x24BDAC7A8](DataEnum);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001088);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFE948);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFE948);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFE948);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFE948);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, DataEnum) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFE948);
    if (v23(v22, 1, DataEnum) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoQueryDataEnum);
      _s23LighthouseDataProcessor020TranscriptProtoQueryB4EnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoQueryDataEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFE948);
      sub_2403A97FC((uint64_t)v21, &qword_256FFE948);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFE948);
    sub_2403A97FC((uint64_t)v21, &qword_256FFE948);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDataEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001088);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFE948);
  sub_2403A97FC((uint64_t)v21, &qword_256FFE948);
  if (v23(v22, 1, DataEnum) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
LABEL_8:
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(Data + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(Data + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor27TranscriptProtoSessionStartV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  char *v48;
  char v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unsigned __int8 *, uint64_t);
  char *v55;
  unsigned __int8 *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned __int8 *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v61 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v59 - v5;
  v70 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v64 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001280);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001288);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_2403A9210((uint64_t)&v73[*(int *)(v30 + 20)], (uint64_t)v29, &qword_256FFA310);
  v72 = v30;
  sub_2403A9210((uint64_t)&v74[*(int *)(v30 + 20)], (uint64_t)v27, &qword_256FFA310);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA310);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA310);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA310);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA310);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA310);
      goto LABEL_8;
    }
LABEL_6:
    v33 = &qword_257001288;
    v34 = (uint64_t)v20;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA310);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA310);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA310);
    sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoLocaleSettings);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for TranscriptProtoLocaleSettings);
  v35 = sub_2404E4C74(v24, v17, type metadata accessor for TranscriptProtoLocaleSettings);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoLocaleSettings);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA310);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA310);
  sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoLocaleSettings);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA310);
  if ((v35 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v36 = v72;
  v37 = v73;
  v38 = v69;
  sub_2403A9210((uint64_t)&v73[*(int *)(v72 + 24)], v69, &qword_256FFA320);
  v39 = v74;
  v40 = v68;
  sub_2403A9210((uint64_t)&v74[*(int *)(v36 + 24)], v68, &qword_256FFA320);
  v41 = v71;
  v42 = v71 + *(int *)(v66 + 48);
  sub_2403A9210(v38, v71, &qword_256FFA320);
  sub_2403A9210(v40, v42, &qword_256FFA320);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v44 = v70;
  if (v43(v41, 1, v70) != 1)
  {
    v45 = v65;
    sub_2403A9210(v41, (uint64_t)v65, &qword_256FFA320);
    if (v43(v42, 1, v44) != 1)
    {
      v48 = v64;
      sub_2403A91CC(v42, (uint64_t)v64, type metadata accessor for TranscriptProtoDeviceDetails);
      v49 = _s23LighthouseDataProcessor28TranscriptProtoDeviceDetailsV2eeoiySbAC_ACtFZ_0(v45, v48);
      sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoDeviceDetails);
      sub_2403A97FC(v40, &qword_256FFA320);
      sub_2403A97FC(v38, &qword_256FFA320);
      sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoDeviceDetails);
      sub_2403A97FC(v41, &qword_256FFA320);
      if ((v49 & 1) == 0)
        goto LABEL_15;
      goto LABEL_18;
    }
    sub_2403A97FC(v40, &qword_256FFA320);
    sub_2403A97FC(v38, &qword_256FFA320);
    sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoDeviceDetails);
    goto LABEL_13;
  }
  sub_2403A97FC(v40, &qword_256FFA320);
  sub_2403A97FC(v38, &qword_256FFA320);
  if (v43(v42, 1, v44) != 1)
  {
LABEL_13:
    v33 = &qword_257001280;
    v34 = v41;
    goto LABEL_14;
  }
  sub_2403A97FC(v41, &qword_256FFA320);
LABEL_18:
  if (*v37 == *v39)
  {
    v50 = v72;
    v51 = &v37[*(int *)(v72 + 28)];
    v53 = v62;
    v52 = v63;
    v54 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v62 + 16);
    v55 = v60;
    v54(v60, v51, v63);
    v56 = &v39[*(int *)(v50 + 28)];
    v57 = v61;
    v54(v61, v56, v52);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v46 = sub_2408E5CD8();
    v58 = *(void (**)(char *, uint64_t))(v53 + 8);
    v58(v57, v52);
    v58(v55, v52);
    return v46 & 1;
  }
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor22TranscriptProtoPayloadV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC940);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA488);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA488);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA488);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA488);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA488);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoPayloadEnum);
      _s23LighthouseDataProcessor26TranscriptProtoPayloadEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA488);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA488);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA488);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA488);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_256FFC940);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA488);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA488);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoPayload(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor20TranscriptProtoEventV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t *v72;
  uint64_t v73;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  _QWORD *v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char v87;
  int *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  void (*v122)(char *, uint64_t);
  int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  _QWORD *v129;
  _QWORD *v130;
  char v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  int *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  _QWORD *v151;
  _QWORD *v152;
  char v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;

  v4 = sub_2408E57A4();
  v161 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v160 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v159 = (char *)&v155 - v7;
  v167 = type metadata accessor for TranscriptProtoSpanID(0);
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v162 = (uint64_t *)((char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013B0);
  MEMORY[0x24BDAC7A8](v165);
  v171 = (uint64_t)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v163 = (uint64_t *)((char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v169 = (uint64_t)&v155 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v170 = (uint64_t)&v155 - v15;
  v185 = type metadata accessor for TranscriptProtoParticipantID(0);
  v173 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v164 = (uint64_t *)((char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013B8);
  MEMORY[0x24BDAC7A8](v17);
  v175 = (uint64_t)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v168 = (uint64_t *)((char *)&v155 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x24BDAC7A8](v20);
  v174 = (uint64_t)&v155 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v182 = (char *)&v155 - v24;
  v178 = sub_2408E5750();
  v181 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v172 = (char *)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001290);
  MEMORY[0x24BDAC7A8](v177);
  v191 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v184 = (char *)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v180 = (uint64_t)&v155 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v183 = (char *)&v155 - v32;
  v189 = type metadata accessor for TranscriptProtoTimepoint(0);
  v187 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v176 = (char *)&v155 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013C0);
  MEMORY[0x24BDAC7A8](v186);
  v190 = (uint64_t)&v155 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v179 = (uint64_t *)((char *)&v155 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = MEMORY[0x24BDAC7A8](v36);
  v192 = (uint64_t)&v155 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v188 = (uint64_t)&v155 - v40;
  v41 = type metadata accessor for TranscriptProtoPayload(0);
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v193 = (uint64_t)&v155 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013C8);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v155 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v48 = MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v155 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)&v155 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v54 = a1;
  v55 = a2;
  v57 = (char *)&v155 - v56;
  v58 = v54[1];
  v59 = a2[1];
  v60 = *v54 == *a2;
  v194 = v54;
  v195 = a2;
  if (!v60 || v58 != v59)
  {
    v61 = sub_2408E617C();
    v54 = v194;
    v55 = v195;
    v62 = 0;
    if ((v61 & 1) == 0)
      return v62 & 1;
  }
  if (v54[2] != v55[2] || v54[3] != v55[3])
  {
    v63 = sub_2408E617C();
    v54 = v194;
    v55 = v195;
    v62 = 0;
    if ((v63 & 1) == 0)
      return v62 & 1;
  }
  v64 = v54[12];
  v65 = v55[12];
  if (v64)
  {
    if (!v65)
      goto LABEL_22;
    if (v54[11] != v55[11] || v64 != v65)
    {
      v66 = sub_2408E617C();
      v54 = v194;
      v55 = v195;
      v62 = 0;
      if ((v66 & 1) == 0)
        return v62 & 1;
    }
  }
  else if (v65)
  {
    goto LABEL_22;
  }
  v157 = v17;
  v156 = v4;
  v67 = v55;
  v68 = v54;
  v69 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210((uint64_t)v68 + *(int *)(v69 + 44), (uint64_t)v57, &qword_256FFA490);
  v158 = (int *)v69;
  sub_2403A9210((uint64_t)v67 + *(int *)(v69 + 44), (uint64_t)v53, &qword_256FFA490);
  v70 = (uint64_t)&v46[*(int *)(v44 + 48)];
  sub_2403A9210((uint64_t)v57, (uint64_t)v46, &qword_256FFA490);
  sub_2403A9210((uint64_t)v53, v70, &qword_256FFA490);
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v71((uint64_t)v46, 1, v41) == 1)
  {
    sub_2403A97FC((uint64_t)v53, &qword_256FFA490);
    sub_2403A97FC((uint64_t)v57, &qword_256FFA490);
    if (v71(v70, 1, v41) == 1)
    {
      sub_2403A97FC((uint64_t)v46, &qword_256FFA490);
      goto LABEL_25;
    }
LABEL_20:
    v72 = &qword_2570013C8;
    v73 = (uint64_t)v46;
    goto LABEL_21;
  }
  sub_2403A9210((uint64_t)v46, (uint64_t)v50, &qword_256FFA490);
  if (v71(v70, 1, v41) == 1)
  {
    sub_2403A97FC((uint64_t)v53, &qword_256FFA490);
    sub_2403A97FC((uint64_t)v57, &qword_256FFA490);
    sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoPayload);
    goto LABEL_20;
  }
  v75 = v193;
  sub_2403A91CC(v70, v193, type metadata accessor for TranscriptProtoPayload);
  v76 = _s23LighthouseDataProcessor22TranscriptProtoPayloadV2eeoiySbAC_ACtFZ_0((uint64_t)v50, v75);
  sub_240388AE4(v75, type metadata accessor for TranscriptProtoPayload);
  sub_2403A97FC((uint64_t)v53, &qword_256FFA490);
  sub_2403A97FC((uint64_t)v57, &qword_256FFA490);
  sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoPayload);
  sub_2403A97FC((uint64_t)v46, &qword_256FFA490);
  if ((v76 & 1) == 0)
    goto LABEL_22;
LABEL_25:
  v78 = v194;
  v77 = v195;
  if (v194[4] == v195[4] && v194[5] == v195[5]
    || (v79 = sub_2408E617C(), v78 = v194, v77 = v195, v62 = 0, (v79 & 1) != 0))
  {
    if (v78[6] == v77[6] && v78[7] == v77[7]
      || (v80 = sub_2408E617C(), v78 = v194, v77 = v195, v62 = 0, (v80 & 1) != 0))
    {
      if (v78[8] == v77[8] && v78[9] == v77[9]
        || (v81 = sub_2408E617C(), v78 = v194, v77 = v195, v62 = 0, (v81 & 1) != 0))
      {
        v82 = v158[12];
        v83 = (_QWORD *)((char *)v78 + v82);
        v84 = *(_QWORD *)((char *)v78 + v82 + 8);
        v85 = (_QWORD *)((char *)v77 + v82);
        v86 = v85[1];
        if (v84)
        {
          if (!v86)
            goto LABEL_22;
          if (*v83 != *v85 || v84 != v86)
          {
            v87 = sub_2408E617C();
            v78 = v194;
            v77 = v195;
            v62 = 0;
            if ((v87 & 1) == 0)
              return v62 & 1;
          }
        }
        else if (v86)
        {
          goto LABEL_22;
        }
        v88 = v158;
        v89 = v188;
        v90 = v77;
        sub_2403A9210((uint64_t)v78 + v158[13], v188, &qword_256FFA4A0);
        v91 = v192;
        sub_2403A9210((uint64_t)v90 + v88[13], v192, &qword_256FFA4A0);
        v92 = v190;
        v93 = v190 + *(int *)(v186 + 48);
        sub_2403A9210(v89, v190, &qword_256FFA4A0);
        sub_2403A9210(v91, v93, &qword_256FFA4A0);
        v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
        v95 = v189;
        if (v94(v92, 1, v189) == 1)
        {
          sub_2403A97FC(v91, &qword_256FFA4A0);
          sub_2403A97FC(v89, &qword_256FFA4A0);
          v96 = v94(v93, 1, v95);
          v98 = (uint64_t)v184;
          v97 = v185;
          v100 = (uint64_t)v182;
          v99 = (uint64_t)v183;
          v101 = (uint64_t)v191;
          if (v96 == 1)
          {
            sub_2403A97FC(v92, &qword_256FFA4A0);
            goto LABEL_48;
          }
        }
        else
        {
          v102 = v179;
          sub_2403A9210(v92, (uint64_t)v179, &qword_256FFA4A0);
          v103 = v94(v93, 1, v95);
          v104 = v184;
          v105 = v185;
          v101 = (uint64_t)v191;
          v99 = (uint64_t)v183;
          if (v103 != 1)
          {
            v106 = v176;
            sub_2403A91CC(v93, (uint64_t)v176, type metadata accessor for TranscriptProtoTimepoint);
            v107 = _s23LighthouseDataProcessor24TranscriptProtoTimepointV2eeoiySbAC_ACtFZ_0(v102, v106);
            sub_240388AE4((uint64_t)v106, type metadata accessor for TranscriptProtoTimepoint);
            sub_2403A97FC(v192, &qword_256FFA4A0);
            sub_2403A97FC(v89, &qword_256FFA4A0);
            v108 = v105;
            v100 = (uint64_t)v182;
            sub_240388AE4((uint64_t)v102, type metadata accessor for TranscriptProtoTimepoint);
            sub_2403A97FC(v92, &qword_256FFA4A0);
            v98 = (uint64_t)v104;
            v97 = v108;
            if ((v107 & 1) == 0)
              goto LABEL_22;
LABEL_48:
            v109 = v158;
            sub_2403A9210((uint64_t)v194 + v158[14], v99, &qword_256FFA498);
            v110 = v180;
            sub_2403A9210((uint64_t)v195 + v109[14], v180, &qword_256FFA498);
            v111 = v101 + *(int *)(v177 + 48);
            sub_2403A9210(v99, v101, &qword_256FFA498);
            sub_2403A9210(v110, v111, &qword_256FFA498);
            v112 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
            v113 = v178;
            if (v112(v101, 1, v178) == 1)
            {
              sub_2403A97FC(v110, &qword_256FFA498);
              v101 = (uint64_t)v191;
              sub_2403A97FC(v99, &qword_256FFA498);
              if (v112(v111, 1, v113) == 1)
              {
                sub_2403A97FC(v101, &qword_256FFA498);
LABEL_55:
                v123 = v158;
                sub_2403A9210((uint64_t)v194 + v158[15], v100, &qword_256FFA4A8);
                v124 = v174;
                sub_2403A9210((uint64_t)v195 + v123[15], v174, &qword_256FFA4A8);
                v125 = v175;
                v126 = v175 + *(int *)(v157 + 48);
                sub_2403A9210(v100, v175, &qword_256FFA4A8);
                v127 = v125;
                sub_2403A9210(v124, v126, &qword_256FFA4A8);
                v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48);
                if (v128(v127, 1, v97) == 1)
                {
                  sub_2403A97FC(v124, &qword_256FFA4A8);
                  v127 = v175;
                  sub_2403A97FC(v100, &qword_256FFA4A8);
                  if (v128(v126, 1, v97) == 1)
                  {
                    sub_2403A97FC(v127, &qword_256FFA4A8);
                    goto LABEL_65;
                  }
                }
                else
                {
                  v129 = v168;
                  sub_2403A9210(v127, (uint64_t)v168, &qword_256FFA4A8);
                  if (v128(v126, 1, v97) != 1)
                  {
                    v130 = v164;
                    sub_2403A91CC(v126, (uint64_t)v164, type metadata accessor for TranscriptProtoParticipantID);
                    if ((*v129 != *v130 || v129[1] != v130[1]) && (sub_2408E617C() & 1) == 0)
                    {
                      sub_240388AE4((uint64_t)v130, type metadata accessor for TranscriptProtoParticipantID);
                      v154 = &qword_256FFA4A8;
                      sub_2403A97FC(v174, &qword_256FFA4A8);
                      sub_2403A97FC(v100, &qword_256FFA4A8);
                      sub_240388AE4((uint64_t)v129, type metadata accessor for TranscriptProtoParticipantID);
                      v73 = v175;
                      goto LABEL_78;
                    }
                    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    v131 = sub_2408E5CD8();
                    sub_240388AE4((uint64_t)v130, type metadata accessor for TranscriptProtoParticipantID);
                    sub_2403A97FC(v174, &qword_256FFA4A8);
                    sub_2403A97FC(v100, &qword_256FFA4A8);
                    sub_240388AE4((uint64_t)v129, type metadata accessor for TranscriptProtoParticipantID);
                    sub_2403A97FC(v175, &qword_256FFA4A8);
                    if ((v131 & 1) == 0)
                      goto LABEL_22;
LABEL_65:
                    v132 = v158;
                    v133 = v170;
                    sub_2403A9210((uint64_t)v194 + v158[16], v170, &qword_256FFA4B0);
                    v134 = v169;
                    sub_2403A9210((uint64_t)v195 + v132[16], v169, &qword_256FFA4B0);
                    v135 = v171;
                    v136 = v171 + *(int *)(v165 + 48);
                    sub_2403A9210(v133, v171, &qword_256FFA4B0);
                    v137 = v135;
                    sub_2403A9210(v134, v136, &qword_256FFA4B0);
                    v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
                    v139 = v167;
                    if (v138(v137, 1, v167) == 1)
                    {
                      sub_2403A97FC(v134, &qword_256FFA4B0);
                      v137 = v171;
                      sub_2403A97FC(v133, &qword_256FFA4B0);
                      if (v138(v136, 1, v139) == 1)
                      {
                        sub_2403A97FC(v137, &qword_256FFA4B0);
                        goto LABEL_68;
                      }
                      goto LABEL_72;
                    }
                    v151 = v163;
                    sub_2403A9210(v137, (uint64_t)v163, &qword_256FFA4B0);
                    if (v138(v136, 1, v139) == 1)
                    {
                      sub_2403A97FC(v169, &qword_256FFA4B0);
                      sub_2403A97FC(v170, &qword_256FFA4B0);
                      sub_240388AE4((uint64_t)v151, type metadata accessor for TranscriptProtoSpanID);
LABEL_72:
                      v72 = &qword_2570013B0;
                      v73 = v137;
                      goto LABEL_21;
                    }
                    v152 = v162;
                    sub_2403A91CC(v136, (uint64_t)v162, type metadata accessor for TranscriptProtoSpanID);
                    if (*v151 == *v152)
                    {
                      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                      v153 = sub_2408E5CD8();
                      sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoSpanID);
                      sub_2403A97FC(v169, &qword_256FFA4B0);
                      sub_2403A97FC(v170, &qword_256FFA4B0);
                      sub_240388AE4((uint64_t)v151, type metadata accessor for TranscriptProtoSpanID);
                      sub_2403A97FC(v171, &qword_256FFA4B0);
                      if ((v153 & 1) != 0)
                      {
LABEL_68:
                        v140 = v194;
                        v141 = v195;
                        if ((sub_240891984(v194[10], v195[10]) & 1) != 0)
                        {
                          v142 = v158;
                          v143 = (char *)v140 + v158[17];
                          v144 = v161;
                          v145 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
                          v146 = v159;
                          v147 = v156;
                          v145(v159, v143, v156);
                          v148 = (char *)v141 + v142[17];
                          v149 = v160;
                          v145(v160, v148, v147);
                          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                          v62 = sub_2408E5CD8();
                          v150 = *(void (**)(char *, uint64_t))(v144 + 8);
                          v150(v149, v147);
                          v150(v146, v147);
                          return v62 & 1;
                        }
                      }
LABEL_22:
                      v62 = 0;
                      return v62 & 1;
                    }
                    sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoSpanID);
                    v154 = &qword_256FFA4B0;
                    sub_2403A97FC(v169, &qword_256FFA4B0);
                    sub_2403A97FC(v170, &qword_256FFA4B0);
                    sub_240388AE4((uint64_t)v151, type metadata accessor for TranscriptProtoSpanID);
                    v73 = v171;
LABEL_78:
                    v72 = v154;
                    goto LABEL_21;
                  }
                  sub_2403A97FC(v174, &qword_256FFA4A8);
                  sub_2403A97FC(v100, &qword_256FFA4A8);
                  sub_240388AE4((uint64_t)v129, type metadata accessor for TranscriptProtoParticipantID);
                }
                v72 = &qword_2570013B8;
                v73 = v127;
LABEL_21:
                sub_2403A97FC(v73, v72);
                goto LABEL_22;
              }
            }
            else
            {
              sub_2403A9210(v101, v98, &qword_256FFA498);
              if (v112(v111, 1, v113) != 1)
              {
                v114 = v181;
                v115 = v97;
                v116 = v99;
                v117 = v172;
                (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v172, v111, v113);
                sub_2404FA028(&qword_257001298, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
                v118 = v98;
                v119 = v115;
                v120 = v118;
                v121 = sub_2408E5CD8();
                v122 = *(void (**)(char *, uint64_t))(v114 + 8);
                v122(v117, v113);
                sub_2403A97FC(v180, &qword_256FFA498);
                sub_2403A97FC(v116, &qword_256FFA498);
                v97 = v119;
                v122((char *)v120, v113);
                sub_2403A97FC(v101, &qword_256FFA498);
                if ((v121 & 1) == 0)
                  goto LABEL_22;
                goto LABEL_55;
              }
              sub_2403A97FC(v180, &qword_256FFA498);
              sub_2403A97FC(v99, &qword_256FFA498);
              (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v98, v113);
            }
            v72 = &qword_257001290;
            v73 = v101;
            goto LABEL_21;
          }
          sub_2403A97FC(v192, &qword_256FFA4A0);
          sub_2403A97FC(v89, &qword_256FFA4A0);
          sub_240388AE4((uint64_t)v102, type metadata accessor for TranscriptProtoTimepoint);
        }
        v72 = &qword_2570013C0;
        v73 = v92;
        goto LABEL_21;
      }
    }
  }
  return v62 & 1;
}

uint64_t _s23LighthouseDataProcessor015TranscriptProtoD0V2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  if (*a1 != *(_QWORD *)a2 || a1[1] != *((_QWORD *)a2 + 1))
  {
    v12 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v12 & 1;
  }
  v13 = a1[4];
  v14 = *((_QWORD *)a2 + 4);
  if (!v13)
  {
    if (v14)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (!v14)
    goto LABEL_15;
  if (a1[3] == *((_QWORD *)a2 + 3) && v13 == v14 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_13:
    if ((sub_2408C2408(a1[2], *((_QWORD *)a2 + 2)) & 1) != 0)
    {
      v15 = type metadata accessor for TranscriptProtoTranscript(0);
      v16 = (char *)a1 + *(int *)(v15 + 28);
      v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v17(v10, v16, v4);
      v17(v8, &a2[*(int *)(v15 + 28)], v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v8, v4);
      v18(v10, v4);
      return v12 & 1;
    }
LABEL_15:
    v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_2404EF628()
{
  unint64_t result;

  result = qword_256FFE7D0;
  if (!qword_256FFE7D0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoCandidateSource, &type metadata for TranscriptProtoCandidateSource);
    atomic_store(result, (unint64_t *)&qword_256FFE7D0);
  }
  return result;
}

unint64_t sub_2404EF66C()
{
  unint64_t result;

  result = qword_256FFE8F0;
  if (!qword_256FFE8F0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoParameterNotAllowed.Reason, &type metadata for TranscriptProtoParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256FFE8F0);
  }
  return result;
}

unint64_t sub_2404EF6B0()
{
  unint64_t result;

  result = qword_256FFE988;
  if (!qword_256FFE988)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoQueryOperator, &type metadata for TranscriptProtoQueryOperator);
    atomic_store(result, (unint64_t *)&qword_256FFE988);
  }
  return result;
}

unint64_t sub_2404EF6F4()
{
  unint64_t result;

  result = qword_256FFE9E0;
  if (!qword_256FFE9E0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseType, &type metadata for TranscriptProtoResponseType);
    atomic_store(result, (unint64_t *)&qword_256FFE9E0);
  }
  return result;
}

unint64_t sub_2404EF738()
{
  unint64_t result;

  result = qword_256FFEBF0;
  if (!qword_256FFEBF0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTUpdateKind, &type metadata for TranscriptProtoASTUpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFEBF0);
  }
  return result;
}

unint64_t sub_2404EF77C()
{
  unint64_t result;

  result = qword_256FFEC50;
  if (!qword_256FFEC50)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTInfixOp, &type metadata for TranscriptProtoASTInfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFEC50);
  }
  return result;
}

unint64_t sub_2404EF7C0()
{
  unint64_t result;

  result = qword_256FFEC80;
  if (!qword_256FFEC80)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPrefixExpression_PrefixOp, &type metadata for TranscriptProtoPrefixExpression_PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFEC80);
  }
  return result;
}

unint64_t sub_2404EF804()
{
  unint64_t result;

  result = qword_256FFEC90;
  if (!qword_256FFEC90)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoInfixExpression_InfixOp, &type metadata for TranscriptProtoInfixExpression_InfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFEC90);
  }
  return result;
}

unint64_t sub_2404EF848()
{
  unint64_t result;

  result = qword_256FFECA0;
  if (!qword_256FFECA0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTPrefixOp, &type metadata for TranscriptProtoASTPrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFECA0);
  }
  return result;
}

unint64_t sub_2404EF88C()
{
  unint64_t result;

  result = qword_256FFECD0;
  if (!qword_256FFECD0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateKind, &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFECD0);
  }
  return result;
}

unint64_t sub_2404EF8D0()
{
  unint64_t result;

  result = qword_256FFEED0;
  if (!qword_256FFEED0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUndoOperation, &type metadata for TranscriptProtoUndoOperation);
    atomic_store(result, (unint64_t *)&qword_256FFEED0);
  }
  return result;
}

unint64_t sub_2404EF918()
{
  unint64_t result;

  result = qword_256FFEF80;
  if (!qword_256FFEF80)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoCandidateSource, &type metadata for TranscriptProtoCandidateSource);
    atomic_store(result, (unint64_t *)&qword_256FFEF80);
  }
  return result;
}

unint64_t sub_2404EF960()
{
  unint64_t result;

  result = qword_256FFEF88;
  if (!qword_256FFEF88)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoCandidateSource, &type metadata for TranscriptProtoCandidateSource);
    atomic_store(result, (unint64_t *)&qword_256FFEF88);
  }
  return result;
}

unint64_t sub_2404EF9A8()
{
  unint64_t result;

  result = qword_256FFEF90;
  if (!qword_256FFEF90)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256FFEF90);
  }
  return result;
}

unint64_t sub_2404EF9F0()
{
  unint64_t result;

  result = qword_256FFEF98;
  if (!qword_256FFEF98)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_256FFEF98);
  }
  return result;
}

unint64_t sub_2404EFA38()
{
  unint64_t result;

  result = qword_256FFEFA0;
  if (!qword_256FFEFA0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPlanSource, &type metadata for TranscriptProtoPlanSource);
    atomic_store(result, (unint64_t *)&qword_256FFEFA0);
  }
  return result;
}

unint64_t sub_2404EFA80()
{
  unint64_t result;

  result = qword_256FFEFA8;
  if (!qword_256FFEFA8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPlanSource, &type metadata for TranscriptProtoPlanSource);
    atomic_store(result, (unint64_t *)&qword_256FFEFA8);
  }
  return result;
}

unint64_t sub_2404EFAC8()
{
  unint64_t result;

  result = qword_256FFEFB0;
  if (!qword_256FFEFB0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoQueryOperator, &type metadata for TranscriptProtoQueryOperator);
    atomic_store(result, (unint64_t *)&qword_256FFEFB0);
  }
  return result;
}

unint64_t sub_2404EFB10()
{
  unint64_t result;

  result = qword_256FFEFB8;
  if (!qword_256FFEFB8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoQueryOperator, &type metadata for TranscriptProtoQueryOperator);
    atomic_store(result, (unint64_t *)&qword_256FFEFB8);
  }
  return result;
}

unint64_t sub_2404EFB58()
{
  unint64_t result;

  result = qword_256FFEFC0;
  if (!qword_256FFEFC0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseType, &type metadata for TranscriptProtoResponseType);
    atomic_store(result, (unint64_t *)&qword_256FFEFC0);
  }
  return result;
}

unint64_t sub_2404EFBA0()
{
  unint64_t result;

  result = qword_256FFEFC8;
  if (!qword_256FFEFC8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseType, &type metadata for TranscriptProtoResponseType);
    atomic_store(result, (unint64_t *)&qword_256FFEFC8);
  }
  return result;
}

unint64_t sub_2404EFBE8()
{
  unint64_t result;

  result = qword_256FFEFD0;
  if (!qword_256FFEFD0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseDialogPresentationHint, &type metadata for TranscriptProtoResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256FFEFD0);
  }
  return result;
}

unint64_t sub_2404EFC30()
{
  unint64_t result;

  result = qword_256FFEFD8;
  if (!qword_256FFEFD8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseDialogPresentationHint, &type metadata for TranscriptProtoResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_256FFEFD8);
  }
  return result;
}

unint64_t sub_2404EFC78()
{
  unint64_t result;

  result = qword_256FFEFE0;
  if (!qword_256FFEFE0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTUpdateKind, &type metadata for TranscriptProtoASTUpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFEFE0);
  }
  return result;
}

unint64_t sub_2404EFCC0()
{
  unint64_t result;

  result = qword_256FFEFE8;
  if (!qword_256FFEFE8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTUpdateKind, &type metadata for TranscriptProtoASTUpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFEFE8);
  }
  return result;
}

unint64_t sub_2404EFD08()
{
  unint64_t result;

  result = qword_256FFEFF0;
  if (!qword_256FFEFF0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPrefixExpression_PrefixOp, &type metadata for TranscriptProtoPrefixExpression_PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFEFF0);
  }
  return result;
}

unint64_t sub_2404EFD50()
{
  unint64_t result;

  result = qword_256FFEFF8;
  if (!qword_256FFEFF8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPrefixExpression_PrefixOp, &type metadata for TranscriptProtoPrefixExpression_PrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFEFF8);
  }
  return result;
}

unint64_t sub_2404EFD98()
{
  unint64_t result;

  result = qword_256FFF000;
  if (!qword_256FFF000)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoInfixExpression_InfixOp, &type metadata for TranscriptProtoInfixExpression_InfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF000);
  }
  return result;
}

unint64_t sub_2404EFDE0()
{
  unint64_t result;

  result = qword_256FFF008;
  if (!qword_256FFF008)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoInfixExpression_InfixOp, &type metadata for TranscriptProtoInfixExpression_InfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF008);
  }
  return result;
}

unint64_t sub_2404EFE28()
{
  unint64_t result;

  result = qword_256FFF010;
  if (!qword_256FFF010)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTInfixOp, &type metadata for TranscriptProtoASTInfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF010);
  }
  return result;
}

unint64_t sub_2404EFE70()
{
  unint64_t result;

  result = qword_256FFF018;
  if (!qword_256FFF018)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTInfixOp, &type metadata for TranscriptProtoASTInfixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF018);
  }
  return result;
}

unint64_t sub_2404EFEB8()
{
  unint64_t result;

  result = qword_256FFF020;
  if (!qword_256FFF020)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTPrefixOp, &type metadata for TranscriptProtoASTPrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF020);
  }
  return result;
}

unint64_t sub_2404EFF00()
{
  unint64_t result;

  result = qword_256FFF028;
  if (!qword_256FFF028)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTPrefixOp, &type metadata for TranscriptProtoASTPrefixOp);
    atomic_store(result, (unint64_t *)&qword_256FFF028);
  }
  return result;
}

unint64_t sub_2404EFF48()
{
  unint64_t result;

  result = qword_256FFF030;
  if (!qword_256FFF030)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateKind, &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFF030);
  }
  return result;
}

unint64_t sub_2404EFF90()
{
  unint64_t result;

  result = qword_256FFF038;
  if (!qword_256FFF038)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateKind, &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind);
    atomic_store(result, (unint64_t *)&qword_256FFF038);
  }
  return result;
}

unint64_t sub_2404EFFD8()
{
  unint64_t result;

  result = qword_256FFF040;
  if (!qword_256FFF040)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUndoOperation, &type metadata for TranscriptProtoUndoOperation);
    atomic_store(result, (unint64_t *)&qword_256FFF040);
  }
  return result;
}

unint64_t sub_2404F0020()
{
  unint64_t result;

  result = qword_256FFF048;
  if (!qword_256FFF048)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUndoOperation, &type metadata for TranscriptProtoUndoOperation);
    atomic_store(result, (unint64_t *)&qword_256FFF048);
  }
  return result;
}

uint64_t sub_2404F0064()
{
  return sub_2404FA028(&qword_256FFF050, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t sub_2404F0090()
{
  return sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t sub_2404F00BC()
{
  return sub_2404FA028(&qword_256FFE688, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t sub_2404F00E8()
{
  return sub_2404FA028(&qword_256FFF058, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t sub_2404F0114()
{
  return sub_2404FA028(&qword_256FFF060, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

uint64_t sub_2404F0140()
{
  return sub_2404FA028(&qword_256FFF068, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

uint64_t sub_2404F016C()
{
  return sub_2404FA028(&qword_256FFE690, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

uint64_t sub_2404F0198()
{
  return sub_2404FA028(&qword_256FFF070, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

uint64_t sub_2404F01C4()
{
  return sub_2404FA028(&qword_256FFF078, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

uint64_t sub_2404F01F0()
{
  return sub_2404FA028(&qword_256FFF080, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

uint64_t sub_2404F021C()
{
  return sub_2404FA028(&qword_256FFE698, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

uint64_t sub_2404F0248()
{
  return sub_2404FA028(&qword_256FFF088, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

uint64_t sub_2404F0274()
{
  return sub_2404FA028(&qword_256FFF090, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

uint64_t sub_2404F02A0()
{
  return sub_2404FA028(&qword_256FFF098, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

uint64_t sub_2404F02CC()
{
  return sub_2404FA028(&qword_256FFE6A0, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

uint64_t sub_2404F02F8()
{
  return sub_2404FA028(&qword_256FFF0A0, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

uint64_t sub_2404F0324()
{
  return sub_2404FA028(&qword_256FFF0A8, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

uint64_t sub_2404F0350()
{
  return sub_2404FA028(&qword_256FFF0B0, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

uint64_t sub_2404F037C()
{
  return sub_2404FA028(&qword_256FFE6A8, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

uint64_t sub_2404F03A8()
{
  return sub_2404FA028(&qword_256FFF0B8, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

uint64_t sub_2404F03D4()
{
  return sub_2404FA028(&qword_256FFF0C0, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

uint64_t sub_2404F0400()
{
  return sub_2404FA028(&qword_256FFF0C8, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

uint64_t sub_2404F042C()
{
  return sub_2404FA028(&qword_256FFE6B0, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

uint64_t sub_2404F0458()
{
  return sub_2404FA028(&qword_256FFF0D0, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

uint64_t sub_2404F0484()
{
  return sub_2404FA028(&qword_256FFF0D8, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

uint64_t sub_2404F04B0()
{
  return sub_2404FA028(&qword_256FFF0E0, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

uint64_t sub_2404F04DC()
{
  return sub_2404FA028(&qword_256FFE6B8, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

uint64_t sub_2404F0508()
{
  return sub_2404FA028(&qword_256FFF0E8, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

uint64_t sub_2404F0534()
{
  return sub_2404FA028(&qword_256FFF0F0, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

uint64_t sub_2404F0560()
{
  return sub_2404FA028(&qword_256FFF0F8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

uint64_t sub_2404F058C()
{
  return sub_2404FA028(&qword_256FFE6C8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

uint64_t sub_2404F05B8()
{
  return sub_2404FA028(&qword_256FFF100, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

uint64_t sub_2404F05E4()
{
  return sub_2404FA028(&qword_256FFF108, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_2404F0610()
{
  return sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_2404F063C()
{
  return sub_2404FA028(&qword_256FFE6D0, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_2404F0668()
{
  return sub_2404FA028(&qword_256FFF118, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_2404F0694()
{
  return sub_2404FA028(&qword_256FFF120, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t sub_2404F06C0()
{
  return sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t sub_2404F06EC()
{
  return sub_2404FA028(&qword_256FFE6E0, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t sub_2404F0718()
{
  return sub_2404FA028(&qword_256FFF130, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t sub_2404F0744()
{
  return sub_2404FA028(&qword_256FFF138, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_2404F0770()
{
  return sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_2404F079C()
{
  return sub_2404FA028(&qword_256FFE6E8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_2404F07C8()
{
  return sub_2404FA028(&qword_256FFF140, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_2404F07F4()
{
  return sub_2404FA028(&qword_256FFF148, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_2404F0820()
{
  return sub_2404FA028(&qword_256FFF150, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_2404F084C()
{
  return sub_2404FA028(&qword_256FFE6F0, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_2404F0878()
{
  return sub_2404FA028(&qword_256FFF158, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_2404F08A4()
{
  return sub_2404FA028(&qword_256FFF160, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t sub_2404F08D0()
{
  return sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t sub_2404F08FC()
{
  return sub_2404FA028(&qword_256FFE6F8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t sub_2404F0928()
{
  return sub_2404FA028(&qword_256FFF170, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t sub_2404F0954()
{
  return sub_2404FA028(&qword_256FFF178, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_2404F0980()
{
  return sub_2404FA028(&qword_256FFF180, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_2404F09AC()
{
  return sub_2404FA028(&qword_256FFE700, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_2404F09D8()
{
  return sub_2404FA028(&qword_256FFF188, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_2404F0A04()
{
  return sub_2404FA028(&qword_256FFF190, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t sub_2404F0A30()
{
  return sub_2404FA028(&qword_256FFF198, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t sub_2404F0A5C()
{
  return sub_2404FA028(&qword_256FFE708, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t sub_2404F0A88()
{
  return sub_2404FA028(&qword_256FFF1A0, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t sub_2404F0AB4()
{
  return sub_2404FA028(&qword_256FFF1A8, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t sub_2404F0AE0()
{
  return sub_2404FA028(&qword_256FFF1B0, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t sub_2404F0B0C()
{
  return sub_2404FA028(&qword_256FFE710, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t sub_2404F0B38()
{
  return sub_2404FA028(&qword_256FFF1B8, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t sub_2404F0B64()
{
  return sub_2404FA028(&qword_256FFF1C0, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t sub_2404F0B90()
{
  return sub_2404FA028(&qword_256FFF1C8, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t sub_2404F0BBC()
{
  return sub_2404FA028(&qword_256FFE718, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t sub_2404F0BE8()
{
  return sub_2404FA028(&qword_256FFF1D0, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t sub_2404F0C14()
{
  return sub_2404FA028(&qword_256FFF1D8, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t sub_2404F0C40()
{
  return sub_2404FA028(&qword_256FFF1E0, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t sub_2404F0C6C()
{
  return sub_2404FA028(&qword_256FFE720, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t sub_2404F0C98()
{
  return sub_2404FA028(&qword_256FFF1E8, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t sub_2404F0CC4()
{
  return sub_2404FA028(&qword_256FFF1F0, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t sub_2404F0CF0()
{
  return sub_2404FA028(&qword_256FFF1F8, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t sub_2404F0D1C()
{
  return sub_2404FA028(&qword_256FFE728, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t sub_2404F0D48()
{
  return sub_2404FA028(&qword_256FFF200, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t sub_2404F0D74()
{
  return sub_2404FA028(&qword_256FFF208, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404F0DA0()
{
  return sub_2404FA028(&qword_256FFF210, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404F0DCC()
{
  return sub_2404FA028(&qword_256FFE730, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404F0DF8()
{
  return sub_2404FA028(&qword_256FFF218, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404F0E24()
{
  return sub_2404FA028(&qword_256FFF220, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

uint64_t sub_2404F0E50()
{
  return sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

uint64_t sub_2404F0E7C()
{
  return sub_2404FA028(&qword_256FFE748, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

uint64_t sub_2404F0EA8()
{
  return sub_2404FA028(&qword_256FFF230, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

uint64_t sub_2404F0ED4()
{
  return sub_2404FA028(&qword_256FFF238, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

uint64_t sub_2404F0F00()
{
  return sub_2404FA028(&qword_256FFE738, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

uint64_t sub_2404F0F2C()
{
  return sub_2404FA028(&qword_256FFE740, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

uint64_t sub_2404F0F58()
{
  return sub_2404FA028(&qword_256FFF240, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

uint64_t sub_2404F0F84()
{
  return sub_2404FA028(&qword_256FFF248, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

uint64_t sub_2404F0FB0()
{
  return sub_2404FA028(&qword_256FFF250, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

uint64_t sub_2404F0FDC()
{
  return sub_2404FA028(&qword_256FFE750, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

uint64_t sub_2404F1008()
{
  return sub_2404FA028(&qword_256FFF258, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

uint64_t sub_2404F1034()
{
  return sub_2404FA028(&qword_256FFF260, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

uint64_t sub_2404F1060()
{
  return sub_2404FA028(&qword_256FFF268, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

uint64_t sub_2404F108C()
{
  return sub_2404FA028(&qword_256FFE758, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

uint64_t sub_2404F10B8()
{
  return sub_2404FA028(&qword_256FFF270, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

uint64_t sub_2404F10E4()
{
  return sub_2404FA028(&qword_256FFF278, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

uint64_t sub_2404F1110()
{
  return sub_2404FA028(&qword_256FFF280, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

uint64_t sub_2404F113C()
{
  return sub_2404FA028(&qword_256FFE770, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

uint64_t sub_2404F1168()
{
  return sub_2404FA028(&qword_256FFF288, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

uint64_t sub_2404F1194()
{
  return sub_2404FA028(&qword_256FFF290, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

uint64_t sub_2404F11C0()
{
  return sub_2404FA028(&qword_256FFE760, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

uint64_t sub_2404F11EC()
{
  return sub_2404FA028(&qword_256FFE768, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

uint64_t sub_2404F1218()
{
  return sub_2404FA028(&qword_256FFF298, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

uint64_t sub_2404F1244()
{
  return sub_2404FA028(&qword_256FFF2A0, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_2404F1270()
{
  return sub_2404FA028(&qword_256FFF2A8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_2404F129C()
{
  return sub_2404FA028(&qword_256FFE780, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_2404F12C8()
{
  return sub_2404FA028(&qword_256FFF2B0, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_2404F12F4()
{
  return sub_2404FA028(&qword_256FFF2B8, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

uint64_t sub_2404F1320()
{
  return sub_2404FA028(&qword_256FFF2C0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

uint64_t sub_2404F134C()
{
  return sub_2404FA028(&qword_256FFE788, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

uint64_t sub_2404F1378()
{
  return sub_2404FA028(&qword_256FFF2C8, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

uint64_t sub_2404F13A4()
{
  return sub_2404FA028(&qword_256FFF2D0, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

uint64_t sub_2404F13D0()
{
  return sub_2404FA028(&qword_256FFF2D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

uint64_t sub_2404F13FC()
{
  return sub_2404FA028(&qword_256FFE790, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

uint64_t sub_2404F1428()
{
  return sub_2404FA028(&qword_256FFF2E0, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

uint64_t sub_2404F1454()
{
  return sub_2404FA028(&qword_256FFF2E8, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

uint64_t sub_2404F1480()
{
  return sub_2404FA028(&qword_256FFF2F0, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

uint64_t sub_2404F14AC()
{
  return sub_2404FA028(&qword_256FFE798, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

uint64_t sub_2404F14D8()
{
  return sub_2404FA028(&qword_256FFF2F8, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

uint64_t sub_2404F1504()
{
  return sub_2404FA028(&qword_256FFF300, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_2404F1530()
{
  return sub_2404FA028(&qword_256FFF308, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_2404F155C()
{
  return sub_2404FA028(&qword_256FFE7A0, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_2404F1588()
{
  return sub_2404FA028(&qword_256FFF310, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_2404F15B4()
{
  return sub_2404FA028(&qword_256FFF318, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

uint64_t sub_2404F15E0()
{
  return sub_2404FA028(&qword_256FFF320, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

uint64_t sub_2404F160C()
{
  return sub_2404FA028(&qword_256FFE7A8, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

uint64_t sub_2404F1638()
{
  return sub_2404FA028(&qword_256FFF328, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

uint64_t sub_2404F1664()
{
  return sub_2404FA028(&qword_256FFF330, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_2404F1690()
{
  return sub_2404FA028(&qword_256FFF338, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_2404F16BC()
{
  return sub_2404FA028(&qword_256FFE7B0, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_2404F16E8()
{
  return sub_2404FA028(&qword_256FFF340, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_2404F1714()
{
  return sub_2404FA028(&qword_256FFF348, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t sub_2404F1740()
{
  return sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t sub_2404F176C()
{
  return sub_2404FA028(&qword_256FFE7B8, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t sub_2404F1798()
{
  return sub_2404FA028(&qword_256FFF350, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t sub_2404F17C4()
{
  return sub_2404FA028(&qword_256FFF358, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

uint64_t sub_2404F17F0()
{
  return sub_2404FA028(&qword_256FFF360, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

uint64_t sub_2404F181C()
{
  return sub_2404FA028(&qword_256FFE7C8, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

uint64_t sub_2404F1848()
{
  return sub_2404FA028(&qword_256FFF368, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

uint64_t sub_2404F1874()
{
  return sub_2404FA028(&qword_256FFF370, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

uint64_t sub_2404F18A0()
{
  return sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

uint64_t sub_2404F18CC()
{
  return sub_2404FA028(&qword_256FFE7D8, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

uint64_t sub_2404F18F8()
{
  return sub_2404FA028(&qword_256FFF378, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

uint64_t sub_2404F1924()
{
  return sub_2404FA028(&qword_256FFF380, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_2404F1950()
{
  return sub_2404FA028(&qword_256FFF388, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_2404F197C()
{
  return sub_2404FA028(&qword_256FFE7E0, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_2404F19A8()
{
  return sub_2404FA028(&qword_256FFF390, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_2404F19D4()
{
  return sub_2404FA028(&qword_256FFF398, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

uint64_t sub_2404F1A00()
{
  return sub_2404FA028(&qword_256FFF3A0, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

uint64_t sub_2404F1A2C()
{
  return sub_2404FA028(&qword_256FFE808, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

uint64_t sub_2404F1A58()
{
  return sub_2404FA028(&qword_256FFF3A8, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

uint64_t sub_2404F1A84()
{
  return sub_2404FA028(&qword_256FFF3B0, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_2404F1AB0()
{
  return sub_2404FA028(&qword_256FFE7F8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_2404F1ADC()
{
  return sub_2404FA028(&qword_256FFE800, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_2404F1B08()
{
  return sub_2404FA028(&qword_256FFF3B8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_2404F1B34()
{
  return sub_2404FA028(&qword_256FFF3C0, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_2404F1B60()
{
  return sub_2404FA028(&qword_256FFF3C8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_2404F1B8C()
{
  return sub_2404FA028(&qword_256FFE818, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_2404F1BB8()
{
  return sub_2404FA028(&qword_256FFF3D0, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_2404F1BE4()
{
  return sub_2404FA028(&qword_256FFF3D8, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

uint64_t sub_2404F1C10()
{
  return sub_2404FA028(&qword_256FFF3E0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

uint64_t sub_2404F1C3C()
{
  return sub_2404FA028(&qword_256FFE820, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

uint64_t sub_2404F1C68()
{
  return sub_2404FA028(&qword_256FFF3E8, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

uint64_t sub_2404F1C94()
{
  return sub_2404FA028(&qword_256FFF3F0, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

uint64_t sub_2404F1CC0()
{
  return sub_2404FA028(&qword_256FFF3F8, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

uint64_t sub_2404F1CEC()
{
  return sub_2404FA028(&qword_256FFE828, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

uint64_t sub_2404F1D18()
{
  return sub_2404FA028(&qword_256FFF400, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

uint64_t sub_2404F1D44()
{
  return sub_2404FA028(&qword_256FFF408, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

uint64_t sub_2404F1D70()
{
  return sub_2404FA028(&qword_256FFF410, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

uint64_t sub_2404F1D9C()
{
  return sub_2404FA028(&qword_256FFE830, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

uint64_t sub_2404F1DC8()
{
  return sub_2404FA028(&qword_256FFF418, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

uint64_t sub_2404F1DF4()
{
  return sub_2404FA028(&qword_256FFF420, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_2404F1E20()
{
  return sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_2404F1E4C()
{
  return sub_2404FA028(&qword_256FFE838, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_2404F1E78()
{
  return sub_2404FA028(&qword_256FFF430, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_2404F1EA4()
{
  return sub_2404FA028(&qword_256FFF438, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

uint64_t sub_2404F1ED0()
{
  return sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

uint64_t sub_2404F1EFC()
{
  return sub_2404FA028(&qword_256FFE840, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

uint64_t sub_2404F1F28()
{
  return sub_2404FA028(&qword_256FFF440, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

uint64_t sub_2404F1F54()
{
  return sub_2404FA028(&qword_256FFF448, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

uint64_t sub_2404F1F80()
{
  return sub_2404FA028(&qword_256FFF450, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

uint64_t sub_2404F1FAC()
{
  return sub_2404FA028(&qword_256FFE848, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

uint64_t sub_2404F1FD8()
{
  return sub_2404FA028(&qword_256FFF458, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

uint64_t sub_2404F2004()
{
  return sub_2404FA028(&qword_256FFF460, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

uint64_t sub_2404F2030()
{
  return sub_2404FA028(&qword_256FFF468, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

uint64_t sub_2404F205C()
{
  return sub_2404FA028(&qword_256FFE850, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

uint64_t sub_2404F2088()
{
  return sub_2404FA028(&qword_256FFF470, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

uint64_t sub_2404F20B4()
{
  return sub_2404FA028(&qword_256FFF478, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

uint64_t sub_2404F20E0()
{
  return sub_2404FA028(&qword_256FFF480, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

uint64_t sub_2404F210C()
{
  return sub_2404FA028(&qword_256FFE858, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

uint64_t sub_2404F2138()
{
  return sub_2404FA028(&qword_256FFF488, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

uint64_t sub_2404F2164()
{
  return sub_2404FA028(&qword_256FFF490, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

uint64_t sub_2404F2190()
{
  return sub_2404FA028(&qword_256FFF498, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

uint64_t sub_2404F21BC()
{
  return sub_2404FA028(&qword_256FFE860, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

uint64_t sub_2404F21E8()
{
  return sub_2404FA028(&qword_256FFF4A0, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

uint64_t sub_2404F2214()
{
  return sub_2404FA028(&qword_256FFF4A8, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

uint64_t sub_2404F2240()
{
  return sub_2404FA028(&qword_256FFF4B0, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

uint64_t sub_2404F226C()
{
  return sub_2404FA028(&qword_256FFE868, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

uint64_t sub_2404F2298()
{
  return sub_2404FA028(&qword_256FFF4B8, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

uint64_t sub_2404F22C4()
{
  return sub_2404FA028(&qword_256FFF4C0, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

uint64_t sub_2404F22F0()
{
  return sub_2404FA028(&qword_256FFF4C8, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

uint64_t sub_2404F231C()
{
  return sub_2404FA028(&qword_256FFE870, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

uint64_t sub_2404F2348()
{
  return sub_2404FA028(&qword_256FFF4D0, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

uint64_t sub_2404F2374()
{
  return sub_2404FA028(&qword_256FFF4D8, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t sub_2404F23A0()
{
  return sub_2404FA028(&qword_256FFF4E0, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t sub_2404F23CC()
{
  return sub_2404FA028(&qword_256FFE878, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t sub_2404F23F8()
{
  return sub_2404FA028(&qword_256FFF4E8, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t sub_2404F2424()
{
  return sub_2404FA028(&qword_256FFF4F0, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_2404F2450()
{
  return sub_2404FA028(&qword_256FFF4F8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_2404F247C()
{
  return sub_2404FA028(&qword_256FFE880, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_2404F24A8()
{
  return sub_2404FA028(&qword_256FFF500, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_2404F24D4()
{
  return sub_2404FA028(&qword_256FFF508, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t sub_2404F2500()
{
  return sub_2404FA028(&qword_256FFF510, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t sub_2404F252C()
{
  return sub_2404FA028(&qword_256FFE888, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t sub_2404F2558()
{
  return sub_2404FA028(&qword_256FFF518, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t sub_2404F2584()
{
  return sub_2404FA028(&qword_256FFF520, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

uint64_t sub_2404F25B0()
{
  return sub_2404FA028(&qword_256FFF528, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

uint64_t sub_2404F25DC()
{
  return sub_2404FA028(&qword_256FFE890, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

uint64_t sub_2404F2608()
{
  return sub_2404FA028(&qword_256FFF530, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

uint64_t sub_2404F2634()
{
  return sub_2404FA028(&qword_256FFF538, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

uint64_t sub_2404F2660()
{
  return sub_2404FA028(&qword_256FFF540, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

uint64_t sub_2404F268C()
{
  return sub_2404FA028(&qword_256FFE898, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

uint64_t sub_2404F26B8()
{
  return sub_2404FA028(&qword_256FFF548, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

uint64_t sub_2404F26E4()
{
  return sub_2404FA028(&qword_256FFF550, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

uint64_t sub_2404F2710()
{
  return sub_2404FA028(&qword_256FFF558, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

uint64_t sub_2404F273C()
{
  return sub_2404FA028(&qword_256FFE8A0, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

uint64_t sub_2404F2768()
{
  return sub_2404FA028(&qword_256FFF560, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

uint64_t sub_2404F2794()
{
  return sub_2404FA028(&qword_256FFF568, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_2404F27C0()
{
  return sub_2404FA028(&qword_256FFF570, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_2404F27EC()
{
  return sub_2404FA028(&qword_256FFE8A8, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_2404F2818()
{
  return sub_2404FA028(&qword_256FFF578, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_2404F2844()
{
  return sub_2404FA028(&qword_256FFF580, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t sub_2404F2870()
{
  return sub_2404FA028(&qword_256FFF588, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t sub_2404F289C()
{
  return sub_2404FA028(&qword_256FFE8B0, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t sub_2404F28C8()
{
  return sub_2404FA028(&qword_256FFF590, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t sub_2404F28F4()
{
  return sub_2404FA028(&qword_256FFF598, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

uint64_t sub_2404F2920()
{
  return sub_2404FA028(&qword_256FFF5A0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

uint64_t sub_2404F294C()
{
  return sub_2404FA028(&qword_256FFE8B8, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

uint64_t sub_2404F2978()
{
  return sub_2404FA028(&qword_256FFF5A8, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

uint64_t sub_2404F29A4()
{
  return sub_2404FA028(&qword_256FFF5B0, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

uint64_t sub_2404F29D0()
{
  return sub_2404FA028(&qword_256FFF5B8, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

uint64_t sub_2404F29FC()
{
  return sub_2404FA028(&qword_256FFE8C0, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

uint64_t sub_2404F2A28()
{
  return sub_2404FA028(&qword_256FFF5C0, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

uint64_t sub_2404F2A54()
{
  return sub_2404FA028(&qword_256FFF5C8, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_2404F2A80()
{
  return sub_2404FA028(&qword_256FFF5D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_2404F2AAC()
{
  return sub_2404FA028(&qword_256FFE8C8, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_2404F2AD8()
{
  return sub_2404FA028(&qword_256FFF5D8, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_2404F2B04()
{
  return sub_2404FA028(&qword_256FFF5E0, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_2404F2B30()
{
  return sub_2404FA028(&qword_256FFF5E8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_2404F2B5C()
{
  return sub_2404FA028(&qword_256FFE8D0, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_2404F2B88()
{
  return sub_2404FA028(&qword_256FFF5F0, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_2404F2BB4()
{
  return sub_2404FA028(&qword_256FFF5F8, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_2404F2BE0()
{
  return sub_2404FA028(&qword_256FFF600, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_2404F2C0C()
{
  return sub_2404FA028(&qword_256FFE8D8, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_2404F2C38()
{
  return sub_2404FA028(&qword_256FFF608, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_2404F2C64()
{
  return sub_2404FA028(&qword_256FFF610, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2404F2C90()
{
  return sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2404F2CBC()
{
  return sub_2404FA028(&qword_256FFE8E0, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2404F2CE8()
{
  return sub_2404FA028(&qword_256FFF620, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2404F2D14()
{
  return sub_2404FA028(&qword_256FFF628, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

uint64_t sub_2404F2D40()
{
  return sub_2404FA028(&qword_256FFF630, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

uint64_t sub_2404F2D6C()
{
  return sub_2404FA028(&qword_256FFE8E8, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

uint64_t sub_2404F2D98()
{
  return sub_2404FA028(&qword_256FFF638, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

uint64_t sub_2404F2DC4()
{
  return sub_2404FA028(&qword_256FFF640, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

uint64_t sub_2404F2DF0()
{
  return sub_2404FA028(&qword_256FFF648, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

uint64_t sub_2404F2E1C()
{
  return sub_2404FA028(&qword_256FFE8F8, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

uint64_t sub_2404F2E48()
{
  return sub_2404FA028(&qword_256FFF650, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

unint64_t sub_2404F2E78()
{
  unint64_t result;

  result = qword_256FFF658;
  if (!qword_256FFF658)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoParameterNotAllowed.Reason, &type metadata for TranscriptProtoParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256FFF658);
  }
  return result;
}

unint64_t sub_2404F2EC0()
{
  unint64_t result;

  result = qword_256FFF660;
  if (!qword_256FFF660)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoParameterNotAllowed.Reason, &type metadata for TranscriptProtoParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_256FFF660);
  }
  return result;
}

uint64_t sub_2404F2F04()
{
  return sub_2404FA028(&qword_256FFF668, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_2404F2F30()
{
  return sub_2404FA028(&qword_256FFF670, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_2404F2F5C()
{
  return sub_2404FA028(&qword_256FFE900, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_2404F2F88()
{
  return sub_2404FA028(&qword_256FFF678, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_2404F2FB4()
{
  return sub_2404FA028(&qword_256FFF680, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

uint64_t sub_2404F2FE0()
{
  return sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

uint64_t sub_2404F300C()
{
  return sub_2404FA028(&qword_256FFE908, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

uint64_t sub_2404F3038()
{
  return sub_2404FA028(&qword_256FFF690, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

uint64_t sub_2404F3064()
{
  return sub_2404FA028(&qword_256FFF698, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

uint64_t sub_2404F3090()
{
  return sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

uint64_t sub_2404F30BC()
{
  return sub_2404FA028(&qword_256FFE910, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

uint64_t sub_2404F30E8()
{
  return sub_2404FA028(&qword_256FFF6A8, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

uint64_t sub_2404F3114()
{
  return sub_2404FA028(&qword_256FFF6B0, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_2404F3140()
{
  return sub_2404FA028(&qword_256FFF6B8, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_2404F316C()
{
  return sub_2404FA028(&qword_256FFE920, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_2404F3198()
{
  return sub_2404FA028(&qword_256FFF6C0, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_2404F31C4()
{
  return sub_2404FA028(&qword_256FFF6C8, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

uint64_t sub_2404F31F0()
{
  return sub_2404FA028(&qword_256FFF6D0, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

uint64_t sub_2404F321C()
{
  return sub_2404FA028(&qword_256FFE928, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

uint64_t sub_2404F3248()
{
  return sub_2404FA028(&qword_256FFF6D8, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

uint64_t sub_2404F3274()
{
  return sub_2404FA028(&qword_256FFF6E0, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_2404F32A0()
{
  return sub_2404FA028(&qword_256FFF6E8, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_2404F32CC()
{
  return sub_2404FA028(&qword_256FFE930, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_2404F32F8()
{
  return sub_2404FA028(&qword_256FFF6F0, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_2404F3324()
{
  return sub_2404FA028(&qword_256FFF6F8, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t sub_2404F3350()
{
  return sub_2404FA028(&qword_256FFF700, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t sub_2404F337C()
{
  return sub_2404FA028(&qword_256FFE938, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t sub_2404F33A8()
{
  return sub_2404FA028(&qword_256FFF708, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t sub_2404F33D4()
{
  return sub_2404FA028(&qword_256FFF710, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

uint64_t sub_2404F3400()
{
  return sub_2404FA028(&qword_256FFF718, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

uint64_t sub_2404F342C()
{
  return sub_2404FA028(&qword_256FFE940, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

uint64_t sub_2404F3458()
{
  return sub_2404FA028(&qword_256FFF720, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

uint64_t sub_2404F3484()
{
  return sub_2404FA028(&qword_256FFF728, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

uint64_t sub_2404F34B0()
{
  return sub_2404FA028(&qword_256FFF730, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

uint64_t sub_2404F34DC()
{
  return sub_2404FA028(&qword_256FFE950, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

uint64_t sub_2404F3508()
{
  return sub_2404FA028(&qword_256FFF738, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

uint64_t sub_2404F3534()
{
  return sub_2404FA028(&qword_256FFF740, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

uint64_t sub_2404F3560()
{
  return sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

uint64_t sub_2404F358C()
{
  return sub_2404FA028(&qword_256FFE958, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

uint64_t sub_2404F35B8()
{
  return sub_2404FA028(&qword_256FFF750, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

uint64_t sub_2404F35E4()
{
  return sub_2404FA028(&qword_256FFF758, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

uint64_t sub_2404F3610()
{
  return sub_2404FA028(&qword_256FFF760, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

uint64_t sub_2404F363C()
{
  return sub_2404FA028(&qword_256FFE968, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

uint64_t sub_2404F3668()
{
  return sub_2404FA028(&qword_256FFF768, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

uint64_t sub_2404F3694()
{
  return sub_2404FA028(&qword_256FFF770, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

uint64_t sub_2404F36C0()
{
  return sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

uint64_t sub_2404F36EC()
{
  return sub_2404FA028(&qword_256FFE978, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

uint64_t sub_2404F3718()
{
  return sub_2404FA028(&qword_256FFF780, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

uint64_t sub_2404F3744()
{
  return sub_2404FA028(&qword_256FFF788, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

uint64_t sub_2404F3770()
{
  return sub_2404FA028(&qword_256FFF790, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

uint64_t sub_2404F379C()
{
  return sub_2404FA028(&qword_256FFE980, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

uint64_t sub_2404F37C8()
{
  return sub_2404FA028(&qword_256FFF798, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

uint64_t sub_2404F37F4()
{
  return sub_2404FA028(&qword_256FFF7A0, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

uint64_t sub_2404F3820()
{
  return sub_2404FA028(&qword_256FFE970, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

uint64_t sub_2404F384C()
{
  return sub_2404FA028(&qword_256FFE990, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

uint64_t sub_2404F3878()
{
  return sub_2404FA028(&qword_256FFF7A8, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

uint64_t sub_2404F38A4()
{
  return sub_2404FA028(&qword_256FFF7B0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

uint64_t sub_2404F38D0()
{
  return sub_2404FA028(&qword_256FFE9C0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

uint64_t sub_2404F38FC()
{
  return sub_2404FA028(&qword_256FFE9A0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

uint64_t sub_2404F3928()
{
  return sub_2404FA028(&qword_256FFF7B8, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

uint64_t sub_2404F3954()
{
  return sub_2404FA028(&qword_256FFF7C0, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

uint64_t sub_2404F3980()
{
  return sub_2404FA028(&qword_256FFF7C8, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

uint64_t sub_2404F39AC()
{
  return sub_2404FA028(&qword_256FFE9B0, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

uint64_t sub_2404F39D8()
{
  return sub_2404FA028(&qword_256FFF7D0, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

uint64_t sub_2404F3A04()
{
  return sub_2404FA028(&qword_256FFF7D8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

uint64_t sub_2404F3A30()
{
  return sub_2404FA028(&qword_256FFE9A8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

uint64_t sub_2404F3A5C()
{
  return sub_2404FA028(&qword_256FFE9B8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

uint64_t sub_2404F3A88()
{
  return sub_2404FA028(&qword_256FFF7E0, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

uint64_t sub_2404F3AB4()
{
  return sub_2404FA028(&qword_256FFF7E8, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

uint64_t sub_2404F3AE0()
{
  return sub_2404FA028(&qword_256FFF7F0, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

uint64_t sub_2404F3B0C()
{
  return sub_2404FA028(&qword_256FFE9C8, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

uint64_t sub_2404F3B38()
{
  return sub_2404FA028(&qword_256FFF7F8, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

uint64_t sub_2404F3B64()
{
  return sub_2404FA028(&qword_256FFF800, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

uint64_t sub_2404F3B90()
{
  return sub_2404FA028(&qword_256FFF808, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

uint64_t sub_2404F3BBC()
{
  return sub_2404FA028(&qword_256FFE9D0, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

uint64_t sub_2404F3BE8()
{
  return sub_2404FA028(&qword_256FFF810, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

uint64_t sub_2404F3C14()
{
  return sub_2404FA028(&qword_256FFF818, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

uint64_t sub_2404F3C40()
{
  return sub_2404FA028(&qword_256FFF820, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

uint64_t sub_2404F3C6C()
{
  return sub_2404FA028(&qword_256FFE9F0, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

uint64_t sub_2404F3C98()
{
  return sub_2404FA028(&qword_256FFF828, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

uint64_t sub_2404F3CC4()
{
  return sub_2404FA028(&qword_256FFF830, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

uint64_t sub_2404F3CF0()
{
  return sub_2404FA028(&qword_256FFE9D8, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

uint64_t sub_2404F3D1C()
{
  return sub_2404FA028(&qword_256FFEA00, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

uint64_t sub_2404F3D48()
{
  return sub_2404FA028(&qword_256FFF838, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

uint64_t sub_2404F3D74()
{
  return sub_2404FA028(&qword_256FFF840, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t sub_2404F3DA0()
{
  return sub_2404FA028(&qword_256FFF848, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t sub_2404F3DCC()
{
  return sub_2404FA028(&qword_256FFEA08, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t sub_2404F3DF8()
{
  return sub_2404FA028(&qword_256FFF850, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t sub_2404F3E24()
{
  return sub_2404FA028(&qword_256FFF858, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t sub_2404F3E50()
{
  return sub_2404FA028(&qword_256FFF860, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t sub_2404F3E7C()
{
  return sub_2404FA028(&qword_256FFEA10, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t sub_2404F3EA8()
{
  return sub_2404FA028(&qword_256FFF868, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t sub_2404F3ED4()
{
  return sub_2404FA028(&qword_256FFF870, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

uint64_t sub_2404F3F00()
{
  return sub_2404FA028(&qword_256FFF878, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

uint64_t sub_2404F3F2C()
{
  return sub_2404FA028(&qword_256FFEA18, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

uint64_t sub_2404F3F58()
{
  return sub_2404FA028(&qword_256FFF880, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

uint64_t sub_2404F3F84()
{
  return sub_2404FA028(&qword_256FFF888, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t sub_2404F3FB0()
{
  return sub_2404FA028(&qword_256FFF890, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t sub_2404F3FDC()
{
  return sub_2404FA028(&qword_256FFEA20, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t sub_2404F4008()
{
  return sub_2404FA028(&qword_256FFF898, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t sub_2404F4034()
{
  return sub_2404FA028(&qword_256FFF8A0, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

uint64_t sub_2404F4060()
{
  return sub_2404FA028(&qword_256FFF8A8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

uint64_t sub_2404F408C()
{
  return sub_2404FA028(&qword_256FFEA28, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

uint64_t sub_2404F40B8()
{
  return sub_2404FA028(&qword_256FFF8B0, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

uint64_t sub_2404F40E4()
{
  return sub_2404FA028(&qword_256FFF8B8, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

uint64_t sub_2404F4110()
{
  return sub_2404FA028(&qword_256FFF8C0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

uint64_t sub_2404F413C()
{
  return sub_2404FA028(&qword_256FFEA30, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

uint64_t sub_2404F4168()
{
  return sub_2404FA028(&qword_256FFF8C8, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

uint64_t sub_2404F4194()
{
  return sub_2404FA028(&qword_256FFF8D0, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

uint64_t sub_2404F41C0()
{
  return sub_2404FA028(&qword_256FFF8D8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

uint64_t sub_2404F41EC()
{
  return sub_2404FA028(&qword_256FFEA38, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

uint64_t sub_2404F4218()
{
  return sub_2404FA028(&qword_256FFF8E0, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

uint64_t sub_2404F4244()
{
  return sub_2404FA028(&qword_256FFF8E8, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

uint64_t sub_2404F4270()
{
  return sub_2404FA028(&qword_256FFF8F0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

uint64_t sub_2404F429C()
{
  return sub_2404FA028(&qword_256FFEA40, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

uint64_t sub_2404F42C8()
{
  return sub_2404FA028(&qword_256FFF8F8, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

uint64_t sub_2404F42F4()
{
  return sub_2404FA028(&qword_256FFF900, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

uint64_t sub_2404F4320()
{
  return sub_2404FA028(&qword_256FFF908, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

uint64_t sub_2404F434C()
{
  return sub_2404FA028(&qword_256FFEA48, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

uint64_t sub_2404F4378()
{
  return sub_2404FA028(&qword_256FFF910, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

uint64_t sub_2404F43A4()
{
  return sub_2404FA028(&qword_256FFF918, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

uint64_t sub_2404F43D0()
{
  return sub_2404FA028(&qword_256FFF920, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

uint64_t sub_2404F43FC()
{
  return sub_2404FA028(&qword_256FFEA50, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

uint64_t sub_2404F4428()
{
  return sub_2404FA028(&qword_256FFF928, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

uint64_t sub_2404F4454()
{
  return sub_2404FA028(&qword_256FFF930, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

uint64_t sub_2404F4480()
{
  return sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

uint64_t sub_2404F44AC()
{
  return sub_2404FA028(&qword_256FFEA60, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

uint64_t sub_2404F44D8()
{
  return sub_2404FA028(&qword_256FFF940, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

uint64_t sub_2404F4504()
{
  return sub_2404FA028(&qword_256FFF948, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

uint64_t sub_2404F4530()
{
  return sub_2404FA028(&qword_256FFEA58, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

uint64_t sub_2404F455C()
{
  return sub_2404FA028(&qword_256FFEA68, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

uint64_t sub_2404F4588()
{
  return sub_2404FA028(&qword_256FFF950, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

uint64_t sub_2404F45B4()
{
  return sub_2404FA028(&qword_256FFF958, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

uint64_t sub_2404F45E0()
{
  return sub_2404FA028(&qword_256FFF960, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

uint64_t sub_2404F460C()
{
  return sub_2404FA028(&qword_256FFEA80, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

uint64_t sub_2404F4638()
{
  return sub_2404FA028(&qword_256FFF968, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

uint64_t sub_2404F4664()
{
  return sub_2404FA028(&qword_256FFF970, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

uint64_t sub_2404F4690()
{
  return sub_2404FA028(&qword_256FFEA70, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

uint64_t sub_2404F46BC()
{
  return sub_2404FA028(&qword_256FFEA90, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

uint64_t sub_2404F46E8()
{
  return sub_2404FA028(&qword_256FFF978, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

uint64_t sub_2404F4714()
{
  return sub_2404FA028(&qword_256FFF980, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

uint64_t sub_2404F4740()
{
  return sub_2404FA028(&qword_256FFEA78, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

uint64_t sub_2404F476C()
{
  return sub_2404FA028(&qword_256FFEA98, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

uint64_t sub_2404F4798()
{
  return sub_2404FA028(&qword_256FFF988, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

uint64_t sub_2404F47C4()
{
  return sub_2404FA028(&qword_256FFF990, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_2404F47F0()
{
  return sub_2404FA028(&qword_256FFF998, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_2404F481C()
{
  return sub_2404FA028(&qword_256FFEAA0, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_2404F4848()
{
  return sub_2404FA028(&qword_256FFF9A0, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_2404F4874()
{
  return sub_2404FA028(&qword_256FFF9A8, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

uint64_t sub_2404F48A0()
{
  return sub_2404FA028(&qword_256FFF9B0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

uint64_t sub_2404F48CC()
{
  return sub_2404FA028(&qword_256FFEAA8, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

uint64_t sub_2404F48F8()
{
  return sub_2404FA028(&qword_256FFF9B8, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

uint64_t sub_2404F4924()
{
  return sub_2404FA028(&qword_256FFF9C0, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

uint64_t sub_2404F4950()
{
  return sub_2404FA028(&qword_256FFF9C8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

uint64_t sub_2404F497C()
{
  return sub_2404FA028(&qword_256FFEAB0, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

uint64_t sub_2404F49A8()
{
  return sub_2404FA028(&qword_256FFF9D0, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

uint64_t sub_2404F49D4()
{
  return sub_2404FA028(&qword_256FFF9D8, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

uint64_t sub_2404F4A00()
{
  return sub_2404FA028(&qword_256FFF9E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

uint64_t sub_2404F4A2C()
{
  return sub_2404FA028(&qword_256FFEAB8, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

uint64_t sub_2404F4A58()
{
  return sub_2404FA028(&qword_256FFF9E8, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

uint64_t sub_2404F4A84()
{
  return sub_2404FA028(&qword_256FFF9F0, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

uint64_t sub_2404F4AB0()
{
  return sub_2404FA028(&qword_256FFF9F8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

uint64_t sub_2404F4ADC()
{
  return sub_2404FA028(&qword_256FFEAC0, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

uint64_t sub_2404F4B08()
{
  return sub_2404FA028(&qword_256FFFA00, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

uint64_t sub_2404F4B34()
{
  return sub_2404FA028(&qword_256FFFA08, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_2404F4B60()
{
  return sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_2404F4B8C()
{
  return sub_2404FA028(&qword_256FFEAC8, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_2404F4BB8()
{
  return sub_2404FA028(&qword_256FFFA18, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_2404F4BE4()
{
  return sub_2404FA028(&qword_256FFFA20, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t sub_2404F4C10()
{
  return sub_2404FA028(&qword_256FFFA28, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t sub_2404F4C3C()
{
  return sub_2404FA028(&qword_256FFEAD0, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t sub_2404F4C68()
{
  return sub_2404FA028(&qword_256FFFA30, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t sub_2404F4C94()
{
  return sub_2404FA028(&qword_256FFFA38, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

uint64_t sub_2404F4CC0()
{
  return sub_2404FA028(&qword_256FFFA40, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

uint64_t sub_2404F4CEC()
{
  return sub_2404FA028(&qword_256FFEAD8, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

uint64_t sub_2404F4D18()
{
  return sub_2404FA028(&qword_256FFFA48, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

uint64_t sub_2404F4D44()
{
  return sub_2404FA028(&qword_256FFFA50, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_2404F4D70()
{
  return sub_2404FA028(&qword_256FFFA58, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_2404F4D9C()
{
  return sub_2404FA028(&qword_256FFEAE8, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_2404F4DC8()
{
  return sub_2404FA028(&qword_256FFFA60, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_2404F4DF4()
{
  return sub_2404FA028(&qword_256FFFA68, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

uint64_t sub_2404F4E20()
{
  return sub_2404FA028(&qword_256FFFA70, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

uint64_t sub_2404F4E4C()
{
  return sub_2404FA028(&qword_256FFEAF8, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

uint64_t sub_2404F4E78()
{
  return sub_2404FA028(&qword_256FFFA78, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

uint64_t sub_2404F4EA4()
{
  return sub_2404FA028(&qword_256FFFA80, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_2404F4ED0()
{
  return sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_2404F4EFC()
{
  return sub_2404FA028(&qword_256FFEB00, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_2404F4F28()
{
  return sub_2404FA028(&qword_256FFFA88, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_2404F4F54()
{
  return sub_2404FA028(&qword_256FFFA90, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_2404F4F80()
{
  return sub_2404FA028(&qword_256FFEEF8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_2404F4FAC()
{
  return sub_2404FA028(&qword_256FFEB08, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_2404F4FD8()
{
  return sub_2404FA028(&qword_256FFFA98, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_2404F5004()
{
  return sub_2404FA028(&qword_256FFFAA0, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

uint64_t sub_2404F5030()
{
  return sub_2404FA028(&qword_256FFFAA8, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

uint64_t sub_2404F505C()
{
  return sub_2404FA028(&qword_256FFEB10, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

uint64_t sub_2404F5088()
{
  return sub_2404FA028(&qword_256FFFAB0, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

uint64_t sub_2404F50B4()
{
  return sub_2404FA028(&qword_256FFFAB8, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

uint64_t sub_2404F50E0()
{
  return sub_2404FA028(&qword_256FFFAC0, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

uint64_t sub_2404F510C()
{
  return sub_2404FA028(&qword_256FFEB18, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

uint64_t sub_2404F5138()
{
  return sub_2404FA028(&qword_256FFFAC8, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

uint64_t sub_2404F5164()
{
  return sub_2404FA028(&qword_256FFFAD0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

uint64_t sub_2404F5190()
{
  return sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

uint64_t sub_2404F51BC()
{
  return sub_2404FA028(&qword_256FFEB28, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

uint64_t sub_2404F51E8()
{
  return sub_2404FA028(&qword_256FFFAD8, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

uint64_t sub_2404F5214()
{
  return sub_2404FA028(&qword_256FFFAE0, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_2404F5240()
{
  return sub_2404FA028(&qword_256FFEB20, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_2404F526C()
{
  return sub_2404FA028(&qword_256FFEB30, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_2404F5298()
{
  return sub_2404FA028(&qword_256FFFAE8, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_2404F52C4()
{
  return sub_2404FA028(&qword_256FFFAF0, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t sub_2404F52F0()
{
  return sub_2404FA028(&qword_256FFFAF8, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t sub_2404F531C()
{
  return sub_2404FA028(&qword_256FFEB38, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t sub_2404F5348()
{
  return sub_2404FA028(&qword_256FFFB00, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t sub_2404F5374()
{
  return sub_2404FA028(&qword_256FFFB08, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

uint64_t sub_2404F53A0()
{
  return sub_2404FA028(&qword_256FFFB10, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

uint64_t sub_2404F53CC()
{
  return sub_2404FA028(&qword_256FFEB40, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

uint64_t sub_2404F53F8()
{
  return sub_2404FA028(&qword_256FFFB18, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

uint64_t sub_2404F5424()
{
  return sub_2404FA028(&qword_256FFFB20, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_2404F5450()
{
  return sub_2404FA028(&qword_256FFFB28, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_2404F547C()
{
  return sub_2404FA028(&qword_256FFEB48, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_2404F54A8()
{
  return sub_2404FA028(&qword_256FFFB30, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_2404F54D4()
{
  return sub_2404FA028(&qword_256FFFB38, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

uint64_t sub_2404F5500()
{
  return sub_2404FA028(&qword_256FFFB40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

uint64_t sub_2404F552C()
{
  return sub_2404FA028(&qword_256FFEB50, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

uint64_t sub_2404F5558()
{
  return sub_2404FA028(&qword_256FFFB48, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

uint64_t sub_2404F5584()
{
  return sub_2404FA028(&qword_256FFFB50, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t sub_2404F55B0()
{
  return sub_2404FA028(&qword_256FFFB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t sub_2404F55DC()
{
  return sub_2404FA028(&qword_256FFEB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t sub_2404F5608()
{
  return sub_2404FA028(&qword_256FFFB60, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t sub_2404F5634()
{
  return sub_2404FA028(&qword_256FFFB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

uint64_t sub_2404F5660()
{
  return sub_2404FA028(&qword_256FFEB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

uint64_t sub_2404F568C()
{
  return sub_2404FA028(&qword_256FFEB60, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

uint64_t sub_2404F56B8()
{
  return sub_2404FA028(&qword_256FFFB70, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

uint64_t sub_2404F56E4()
{
  return sub_2404FA028(&qword_256FFFB78, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

uint64_t sub_2404F5710()
{
  return sub_2404FA028(&qword_256FFFB80, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

uint64_t sub_2404F573C()
{
  return sub_2404FA028(&qword_256FFEB70, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

uint64_t sub_2404F5768()
{
  return sub_2404FA028(&qword_256FFFB88, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

uint64_t sub_2404F5794()
{
  return sub_2404FA028(&qword_256FFFB90, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t sub_2404F57C0()
{
  return sub_2404FA028(&qword_256FFFB98, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t sub_2404F57EC()
{
  return sub_2404FA028(&qword_256FFEB88, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t sub_2404F5818()
{
  return sub_2404FA028(&qword_256FFFBA0, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t sub_2404F5844()
{
  return sub_2404FA028(&qword_256FFFBA8, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t sub_2404F5870()
{
  return sub_2404FA028(&qword_256FFFBB0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t sub_2404F589C()
{
  return sub_2404FA028(&qword_256FFEB90, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t sub_2404F58C8()
{
  return sub_2404FA028(&qword_256FFFBB8, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t sub_2404F58F4()
{
  return sub_2404FA028(&qword_256FFFBC0, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_2404F5920()
{
  return sub_2404FA028(&qword_256FFFBC8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_2404F594C()
{
  return sub_2404FA028(&qword_256FFEB98, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_2404F5978()
{
  return sub_2404FA028(&qword_256FFFBD0, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_2404F59A4()
{
  return sub_2404FA028(&qword_256FFFBD8, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t sub_2404F59D0()
{
  return sub_2404FA028(&qword_256FFFBE0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t sub_2404F59FC()
{
  return sub_2404FA028(&qword_256FFEBA0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t sub_2404F5A28()
{
  return sub_2404FA028(&qword_256FFFBE8, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t sub_2404F5A54()
{
  return sub_2404FA028(&qword_256FFFBF0, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t sub_2404F5A80()
{
  return sub_2404FA028(&qword_256FFFBF8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t sub_2404F5AAC()
{
  return sub_2404FA028(&qword_256FFEBA8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t sub_2404F5AD8()
{
  return sub_2404FA028(&qword_256FFFC00, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t sub_2404F5B04()
{
  return sub_2404FA028(&qword_256FFFC08, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t sub_2404F5B30()
{
  return sub_2404FA028(&qword_256FFFC10, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t sub_2404F5B5C()
{
  return sub_2404FA028(&qword_256FFEBB0, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t sub_2404F5B88()
{
  return sub_2404FA028(&qword_256FFFC18, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t sub_2404F5BB4()
{
  return sub_2404FA028(&qword_256FFFC20, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t sub_2404F5BE0()
{
  return sub_2404FA028(&qword_256FFFC28, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t sub_2404F5C0C()
{
  return sub_2404FA028(&qword_256FFEBB8, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t sub_2404F5C38()
{
  return sub_2404FA028(&qword_256FFFC30, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t sub_2404F5C64()
{
  return sub_2404FA028(&qword_256FFFC38, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

uint64_t sub_2404F5C90()
{
  return sub_2404FA028(&qword_256FFFC40, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

uint64_t sub_2404F5CBC()
{
  return sub_2404FA028(&qword_256FFEBC0, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

uint64_t sub_2404F5CE8()
{
  return sub_2404FA028(&qword_256FFFC48, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

uint64_t sub_2404F5D14()
{
  return sub_2404FA028(&qword_256FFFC50, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t sub_2404F5D40()
{
  return sub_2404FA028(&qword_256FFFC58, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t sub_2404F5D6C()
{
  return sub_2404FA028(&qword_256FFEBC8, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t sub_2404F5D98()
{
  return sub_2404FA028(&qword_256FFFC60, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t sub_2404F5DC4()
{
  return sub_2404FA028(&qword_256FFFC68, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t sub_2404F5DF0()
{
  return sub_2404FA028(&qword_256FFFC70, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t sub_2404F5E1C()
{
  return sub_2404FA028(&qword_256FFEBD0, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t sub_2404F5E48()
{
  return sub_2404FA028(&qword_256FFFC78, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t sub_2404F5E74()
{
  return sub_2404FA028(&qword_256FFFC80, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t sub_2404F5EA0()
{
  return sub_2404FA028(&qword_256FFFC88, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t sub_2404F5ECC()
{
  return sub_2404FA028(&qword_256FFEBE0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t sub_2404F5EF8()
{
  return sub_2404FA028(&qword_256FFFC90, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t sub_2404F5F24()
{
  return sub_2404FA028(&qword_256FFFC98, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

uint64_t sub_2404F5F50()
{
  return sub_2404FA028(&qword_256FFFCA0, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

uint64_t sub_2404F5F7C()
{
  return sub_2404FA028(&qword_256FFEBE8, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

uint64_t sub_2404F5FA8()
{
  return sub_2404FA028(&qword_256FFFCA8, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

uint64_t sub_2404F5FD4()
{
  return sub_2404FA028(&qword_256FFFCB0, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_2404F6000()
{
  return sub_2404FA028(&qword_256FFEBD8, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_2404F602C()
{
  return sub_2404FA028(&qword_256FFEBF8, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_2404F6058()
{
  return sub_2404FA028(&qword_256FFFCB8, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_2404F6084()
{
  return sub_2404FA028(&qword_256FFFCC0, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t sub_2404F60B0()
{
  return sub_2404FA028(&qword_256FFFCC8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t sub_2404F60DC()
{
  return sub_2404FA028(&qword_256FFEC00, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t sub_2404F6108()
{
  return sub_2404FA028(&qword_256FFFCD0, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t sub_2404F6134()
{
  return sub_2404FA028(&qword_256FFFCD8, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t sub_2404F6160()
{
  return sub_2404FA028(&qword_256FFFCE0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t sub_2404F618C()
{
  return sub_2404FA028(&qword_256FFEC08, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t sub_2404F61B8()
{
  return sub_2404FA028(&qword_256FFFCE8, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t sub_2404F61E4()
{
  return sub_2404FA028(&qword_256FFFCF0, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_2404F6210()
{
  return sub_2404FA028(&qword_256FFFCF8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_2404F623C()
{
  return sub_2404FA028(&qword_256FFEC10, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_2404F6268()
{
  return sub_2404FA028(&qword_256FFFD00, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_2404F6294()
{
  return sub_2404FA028(&qword_256FFFD08, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_2404F62C0()
{
  return sub_2404FA028(&qword_256FFFD10, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_2404F62EC()
{
  return sub_2404FA028(&qword_256FFEC18, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_2404F6318()
{
  return sub_2404FA028(&qword_256FFFD18, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_2404F6344()
{
  return sub_2404FA028(&qword_256FFFD20, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_2404F6370()
{
  return sub_2404FA028(&qword_256FFFD28, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_2404F639C()
{
  return sub_2404FA028(&qword_256FFEC28, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_2404F63C8()
{
  return sub_2404FA028(&qword_256FFFD30, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_2404F63F4()
{
  return sub_2404FA028(&qword_256FFFD38, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t sub_2404F6420()
{
  return sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t sub_2404F644C()
{
  return sub_2404FA028(&qword_256FFEB80, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t sub_2404F6478()
{
  return sub_2404FA028(&qword_256FFFD40, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t sub_2404F64A4()
{
  return sub_2404FA028(&qword_256FFFD48, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t sub_2404F64D0()
{
  return sub_2404FA028(&qword_256FFFD50, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t sub_2404F64FC()
{
  return sub_2404FA028(&qword_256FFEC38, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t sub_2404F6528()
{
  return sub_2404FA028(&qword_256FFFD58, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t sub_2404F6554()
{
  return sub_2404FA028(&qword_256FFFD60, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t sub_2404F6580()
{
  return sub_2404FA028(&qword_256FFFD68, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t sub_2404F65AC()
{
  return sub_2404FA028(&qword_256FFEC40, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t sub_2404F65D8()
{
  return sub_2404FA028(&qword_256FFFD70, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t sub_2404F6604()
{
  return sub_2404FA028(&qword_256FFFD78, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t sub_2404F6630()
{
  return sub_2404FA028(&qword_256FFFD80, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t sub_2404F665C()
{
  return sub_2404FA028(&qword_256FFEC48, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t sub_2404F6688()
{
  return sub_2404FA028(&qword_256FFFD88, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t sub_2404F66B4()
{
  return sub_2404FA028(&qword_256FFFD90, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_2404F66E0()
{
  return sub_2404FA028(&qword_256FFFD98, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_2404F670C()
{
  return sub_2404FA028(&qword_256FFEC58, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_2404F6738()
{
  return sub_2404FA028(&qword_256FFFDA0, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_2404F6764()
{
  return sub_2404FA028(&qword_256FFFDA8, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

uint64_t sub_2404F6790()
{
  return sub_2404FA028(&qword_256FFFDB0, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

uint64_t sub_2404F67BC()
{
  return sub_2404FA028(&qword_256FFEC60, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

uint64_t sub_2404F67E8()
{
  return sub_2404FA028(&qword_256FFFDB8, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

uint64_t sub_2404F6814()
{
  return sub_2404FA028(&qword_256FFFDC0, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

uint64_t sub_2404F6840()
{
  return sub_2404FA028(&qword_256FFFDC8, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

uint64_t sub_2404F686C()
{
  return sub_2404FA028(&qword_256FFEC70, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

uint64_t sub_2404F6898()
{
  return sub_2404FA028(&qword_256FFFDD0, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

uint64_t sub_2404F68C4()
{
  return sub_2404FA028(&qword_256FFFDD8, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t sub_2404F68F0()
{
  return sub_2404FA028(&qword_256FFFDE0, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t sub_2404F691C()
{
  return sub_2404FA028(&qword_256FFEC78, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t sub_2404F6948()
{
  return sub_2404FA028(&qword_256FFFDE8, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t sub_2404F6974()
{
  return sub_2404FA028(&qword_256FFFDF0, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404F69A0()
{
  return sub_2404FA028(&qword_256FFFDF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404F69CC()
{
  return sub_2404FA028(&qword_256FFEC88, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404F69F8()
{
  return sub_2404FA028(&qword_256FFFE00, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404F6A24()
{
  return sub_2404FA028(&qword_256FFFE08, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

uint64_t sub_2404F6A50()
{
  return sub_2404FA028(&qword_256FFFE10, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

uint64_t sub_2404F6A7C()
{
  return sub_2404FA028(&qword_256FFEC98, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

uint64_t sub_2404F6AA8()
{
  return sub_2404FA028(&qword_256FFFE18, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

uint64_t sub_2404F6AD4()
{
  return sub_2404FA028(&qword_256FFFE20, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404F6B00()
{
  return sub_2404FA028(&qword_256FFFE28, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404F6B2C()
{
  return sub_2404FA028(&qword_256FFECA8, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404F6B58()
{
  return sub_2404FA028(&qword_256FFFE30, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404F6B84()
{
  return sub_2404FA028(&qword_256FFFE38, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

uint64_t sub_2404F6BB0()
{
  return sub_2404FA028(&qword_256FFFE40, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

uint64_t sub_2404F6BDC()
{
  return sub_2404FA028(&qword_256FFECB0, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

uint64_t sub_2404F6C08()
{
  return sub_2404FA028(&qword_256FFFE48, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

uint64_t sub_2404F6C34()
{
  return sub_2404FA028(&qword_256FFFE50, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

uint64_t sub_2404F6C60()
{
  return sub_2404FA028(&qword_256FFFE58, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

uint64_t sub_2404F6C8C()
{
  return sub_2404FA028(&qword_256FFECB8, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

uint64_t sub_2404F6CB8()
{
  return sub_2404FA028(&qword_256FFFE60, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

uint64_t sub_2404F6CE4()
{
  return sub_2404FA028(&qword_256FFFE68, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

uint64_t sub_2404F6D10()
{
  return sub_2404FA028(&qword_256FFFE70, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

uint64_t sub_2404F6D3C()
{
  return sub_2404FA028(&qword_256FFECC8, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

uint64_t sub_2404F6D68()
{
  return sub_2404FA028(&qword_256FFFE78, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

uint64_t sub_2404F6D94()
{
  return sub_2404FA028(&qword_256FFFE80, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_2404F6DC0()
{
  return sub_2404FA028(&qword_256FFECC0, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_2404F6DEC()
{
  return sub_2404FA028(&qword_256FFECD8, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_2404F6E18()
{
  return sub_2404FA028(&qword_256FFFE88, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_2404F6E44()
{
  return sub_2404FA028(&qword_256FFFE90, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

uint64_t sub_2404F6E70()
{
  return sub_2404FA028(&qword_256FFFE98, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

uint64_t sub_2404F6E9C()
{
  return sub_2404FA028(&qword_256FFECE8, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

uint64_t sub_2404F6EC8()
{
  return sub_2404FA028(&qword_256FFFEA0, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

uint64_t sub_2404F6EF4()
{
  return sub_2404FA028(&qword_256FFFEA8, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

uint64_t sub_2404F6F20()
{
  return sub_2404FA028(&qword_256FFFEB0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

uint64_t sub_2404F6F4C()
{
  return sub_2404FA028(&qword_256FFECF0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

uint64_t sub_2404F6F78()
{
  return sub_2404FA028(&qword_256FFFEB8, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

uint64_t sub_2404F6FA4()
{
  return sub_2404FA028(&qword_256FFFEC0, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

uint64_t sub_2404F6FD0()
{
  return sub_2404FA028(&qword_256FFFEC8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

uint64_t sub_2404F6FFC()
{
  return sub_2404FA028(&qword_256FFECF8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

uint64_t sub_2404F7028()
{
  return sub_2404FA028(&qword_256FFFED0, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

uint64_t sub_2404F7054()
{
  return sub_2404FA028(&qword_256FFFED8, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

uint64_t sub_2404F7080()
{
  return sub_2404FA028(&qword_256FFFEE0, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

uint64_t sub_2404F70AC()
{
  return sub_2404FA028(&qword_256FFED00, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

uint64_t sub_2404F70D8()
{
  return sub_2404FA028(&qword_256FFFEE8, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

uint64_t sub_2404F7104()
{
  return sub_2404FA028(&qword_256FFFEF0, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

uint64_t sub_2404F7130()
{
  return sub_2404FA028(&qword_256FFFEF8, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

uint64_t sub_2404F715C()
{
  return sub_2404FA028(&qword_256FFED08, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

uint64_t sub_2404F7188()
{
  return sub_2404FA028(&qword_256FFFF00, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

uint64_t sub_2404F71B4()
{
  return sub_2404FA028(&qword_256FFFF08, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

uint64_t sub_2404F71E0()
{
  return sub_2404FA028(&qword_256FFFF10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

uint64_t sub_2404F720C()
{
  return sub_2404FA028(&qword_256FFED10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

uint64_t sub_2404F7238()
{
  return sub_2404FA028(&qword_256FFFF18, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

uint64_t sub_2404F7264()
{
  return sub_2404FA028(&qword_256FFFF20, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

uint64_t sub_2404F7290()
{
  return sub_2404FA028(&qword_256FFFF28, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

uint64_t sub_2404F72BC()
{
  return sub_2404FA028(&qword_256FFED18, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

uint64_t sub_2404F72E8()
{
  return sub_2404FA028(&qword_256FFFF30, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

uint64_t sub_2404F7314()
{
  return sub_2404FA028(&qword_256FFFF38, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

uint64_t sub_2404F7340()
{
  return sub_2404FA028(&qword_256FFFF40, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

uint64_t sub_2404F736C()
{
  return sub_2404FA028(&qword_256FFED20, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

uint64_t sub_2404F7398()
{
  return sub_2404FA028(&qword_256FFFF48, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

uint64_t sub_2404F73C4()
{
  return sub_2404FA028(&qword_256FFFF50, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

uint64_t sub_2404F73F0()
{
  return sub_2404FA028(&qword_256FFFF58, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

uint64_t sub_2404F741C()
{
  return sub_2404FA028(&qword_256FFED28, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

uint64_t sub_2404F7448()
{
  return sub_2404FA028(&qword_256FFFF60, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

uint64_t sub_2404F7474()
{
  return sub_2404FA028(&qword_256FFFF68, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

uint64_t sub_2404F74A0()
{
  return sub_2404FA028(&qword_256FFFF70, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

uint64_t sub_2404F74CC()
{
  return sub_2404FA028(&qword_256FFED30, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

uint64_t sub_2404F74F8()
{
  return sub_2404FA028(&qword_256FFFF78, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

uint64_t sub_2404F7524()
{
  return sub_2404FA028(&qword_256FFFF80, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

uint64_t sub_2404F7550()
{
  return sub_2404FA028(&qword_256FFFF88, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

uint64_t sub_2404F757C()
{
  return sub_2404FA028(&qword_256FFED38, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

uint64_t sub_2404F75A8()
{
  return sub_2404FA028(&qword_256FFFF90, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

uint64_t sub_2404F75D4()
{
  return sub_2404FA028(&qword_256FFFF98, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

uint64_t sub_2404F7600()
{
  return sub_2404FA028(&qword_256FFFFA0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

uint64_t sub_2404F762C()
{
  return sub_2404FA028(&qword_256FFED40, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

uint64_t sub_2404F7658()
{
  return sub_2404FA028(&qword_256FFFFA8, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

uint64_t sub_2404F7684()
{
  return sub_2404FA028(&qword_256FFFFB0, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

uint64_t sub_2404F76B0()
{
  return sub_2404FA028(&qword_256FFFFB8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

uint64_t sub_2404F76DC()
{
  return sub_2404FA028(&qword_256FFED48, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

uint64_t sub_2404F7708()
{
  return sub_2404FA028(&qword_256FFFFC0, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

uint64_t sub_2404F7734()
{
  return sub_2404FA028(&qword_256FFFFC8, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

uint64_t sub_2404F7760()
{
  return sub_2404FA028(&qword_256FFFFD0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

uint64_t sub_2404F778C()
{
  return sub_2404FA028(&qword_256FFED50, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

uint64_t sub_2404F77B8()
{
  return sub_2404FA028(&qword_256FFFFD8, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

uint64_t sub_2404F77E4()
{
  return sub_2404FA028(&qword_256FFFFE0, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

uint64_t sub_2404F7810()
{
  return sub_2404FA028(&qword_256FFFFE8, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

uint64_t sub_2404F783C()
{
  return sub_2404FA028(&qword_256FFED60, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

uint64_t sub_2404F7868()
{
  return sub_2404FA028(&qword_256FFFFF0, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

uint64_t sub_2404F7894()
{
  return sub_2404FA028(&qword_256FFFFF8, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t sub_2404F78C0()
{
  return sub_2404FA028(&qword_256FFED58, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t sub_2404F78EC()
{
  return sub_2404FA028(&qword_256FFED68, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t sub_2404F7918()
{
  return sub_2404FA028(&qword_257000000, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t sub_2404F7944()
{
  return sub_2404FA028(&qword_257000008, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

uint64_t sub_2404F7970()
{
  return sub_2404FA028(&qword_257000010, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

uint64_t sub_2404F799C()
{
  return sub_2404FA028(&qword_256FFED70, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

uint64_t sub_2404F79C8()
{
  return sub_2404FA028(&qword_257000018, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

uint64_t sub_2404F79F4()
{
  return sub_2404FA028(&qword_257000020, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

uint64_t sub_2404F7A20()
{
  return sub_2404FA028(&qword_257000028, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

uint64_t sub_2404F7A4C()
{
  return sub_2404FA028(&qword_256FFED78, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

uint64_t sub_2404F7A78()
{
  return sub_2404FA028(&qword_257000030, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

uint64_t sub_2404F7AA4()
{
  return sub_2404FA028(&qword_257000038, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

uint64_t sub_2404F7AD0()
{
  return sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

uint64_t sub_2404F7AFC()
{
  return sub_2404FA028(&qword_256FFED80, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

uint64_t sub_2404F7B28()
{
  return sub_2404FA028(&qword_257000048, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

uint64_t sub_2404F7B54()
{
  return sub_2404FA028(&qword_257000050, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

uint64_t sub_2404F7B80()
{
  return sub_2404FA028(&qword_257000058, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

uint64_t sub_2404F7BAC()
{
  return sub_2404FA028(&qword_256FFED90, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

uint64_t sub_2404F7BD8()
{
  return sub_2404FA028(&qword_257000060, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

uint64_t sub_2404F7C04()
{
  return sub_2404FA028(&qword_257000068, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t sub_2404F7C30()
{
  return sub_2404FA028(&qword_257000070, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t sub_2404F7C5C()
{
  return sub_2404FA028(&qword_256FFEDA0, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t sub_2404F7C88()
{
  return sub_2404FA028(&qword_257000078, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t sub_2404F7CB4()
{
  return sub_2404FA028(&qword_257000080, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t sub_2404F7CE0()
{
  return sub_2404FA028(&qword_257000088, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t sub_2404F7D0C()
{
  return sub_2404FA028(&qword_256FFEDB0, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t sub_2404F7D38()
{
  return sub_2404FA028(&qword_257000090, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t sub_2404F7D64()
{
  return sub_2404FA028(&qword_257000098, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404F7D90()
{
  return sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404F7DBC()
{
  return sub_2404FA028(&qword_256FFEDA8, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404F7DE8()
{
  return sub_2404FA028(&qword_2570000A0, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404F7E14()
{
  return sub_2404FA028(&qword_2570000A8, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404F7E40()
{
  return sub_2404FA028(&qword_2570000B0, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404F7E6C()
{
  return sub_2404FA028(&qword_256FFEDB8, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404F7E98()
{
  return sub_2404FA028(&qword_2570000B8, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404F7EC4()
{
  return sub_2404FA028(&qword_2570000C0, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404F7EF0()
{
  return sub_2404FA028(&qword_2570000C8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404F7F1C()
{
  return sub_2404FA028(&qword_256FFEDC0, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404F7F48()
{
  return sub_2404FA028(&qword_2570000D0, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404F7F74()
{
  return sub_2404FA028(&qword_2570000D8, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404F7FA0()
{
  return sub_2404FA028(&qword_2570000E0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404F7FCC()
{
  return sub_2404FA028(&qword_256FFEDC8, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404F7FF8()
{
  return sub_2404FA028(&qword_2570000E8, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404F8024()
{
  return sub_2404FA028(&qword_2570000F0, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

uint64_t sub_2404F8050()
{
  return sub_2404FA028(&qword_2570000F8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

uint64_t sub_2404F807C()
{
  return sub_2404FA028(&qword_256FFEDD0, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

uint64_t sub_2404F80A8()
{
  return sub_2404FA028(&qword_257000100, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

uint64_t sub_2404F80D4()
{
  return sub_2404FA028(&qword_257000108, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

uint64_t sub_2404F8100()
{
  return sub_2404FA028(&qword_257000110, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

uint64_t sub_2404F812C()
{
  return sub_2404FA028(&qword_256FFEDD8, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

uint64_t sub_2404F8158()
{
  return sub_2404FA028(&qword_257000118, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

uint64_t sub_2404F8184()
{
  return sub_2404FA028(&qword_257000120, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

uint64_t sub_2404F81B0()
{
  return sub_2404FA028(&qword_257000128, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

uint64_t sub_2404F81DC()
{
  return sub_2404FA028(&qword_256FFEDE0, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

uint64_t sub_2404F8208()
{
  return sub_2404FA028(&qword_257000130, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

uint64_t sub_2404F8234()
{
  return sub_2404FA028(&qword_257000138, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

uint64_t sub_2404F8260()
{
  return sub_2404FA028(&qword_257000140, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

uint64_t sub_2404F828C()
{
  return sub_2404FA028(&qword_256FFEDE8, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

uint64_t sub_2404F82B8()
{
  return sub_2404FA028(&qword_257000148, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

uint64_t sub_2404F82E4()
{
  return sub_2404FA028(&qword_257000150, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t sub_2404F8310()
{
  return sub_2404FA028(&qword_257000158, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t sub_2404F833C()
{
  return sub_2404FA028(&qword_256FFEDF0, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t sub_2404F8368()
{
  return sub_2404FA028(&qword_257000160, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t sub_2404F8394()
{
  return sub_2404FA028(&qword_257000168, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404F83C0()
{
  return sub_2404FA028(&qword_257000170, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404F83EC()
{
  return sub_2404FA028(&qword_256FFEDF8, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404F8418()
{
  return sub_2404FA028(&qword_257000178, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404F8444()
{
  return sub_2404FA028(&qword_257000180, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

uint64_t sub_2404F8470()
{
  return sub_2404FA028(&qword_257000188, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

uint64_t sub_2404F849C()
{
  return sub_2404FA028(&qword_256FFEE00, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

uint64_t sub_2404F84C8()
{
  return sub_2404FA028(&qword_257000190, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

uint64_t sub_2404F84F4()
{
  return sub_2404FA028(&qword_257000198, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404F8520()
{
  return sub_2404FA028(&qword_2570001A0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404F854C()
{
  return sub_2404FA028(&qword_256FFEE08, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404F8578()
{
  return sub_2404FA028(&qword_2570001A8, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404F85A4()
{
  return sub_2404FA028(&qword_2570001B0, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t sub_2404F85D0()
{
  return sub_2404FA028(&qword_2570001B8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t sub_2404F85FC()
{
  return sub_2404FA028(&qword_256FFEE10, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t sub_2404F8628()
{
  return sub_2404FA028(&qword_2570001C0, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t sub_2404F8654()
{
  return sub_2404FA028(&qword_2570001C8, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

uint64_t sub_2404F8680()
{
  return sub_2404FA028(&qword_2570001D0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

uint64_t sub_2404F86AC()
{
  return sub_2404FA028(&qword_256FFEE18, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

uint64_t sub_2404F86D8()
{
  return sub_2404FA028(&qword_2570001D8, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

uint64_t sub_2404F8704()
{
  return sub_2404FA028(&qword_2570001E0, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

uint64_t sub_2404F8730()
{
  return sub_2404FA028(&qword_2570001E8, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

uint64_t sub_2404F875C()
{
  return sub_2404FA028(&qword_256FFEE20, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

uint64_t sub_2404F8788()
{
  return sub_2404FA028(&qword_2570001F0, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

uint64_t sub_2404F87B4()
{
  return sub_2404FA028(&qword_2570001F8, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t sub_2404F87E0()
{
  return sub_2404FA028(&qword_257000200, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t sub_2404F880C()
{
  return sub_2404FA028(&qword_256FFEE28, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t sub_2404F8838()
{
  return sub_2404FA028(&qword_257000208, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t sub_2404F8864()
{
  return sub_2404FA028(&qword_257000210, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

uint64_t sub_2404F8890()
{
  return sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

uint64_t sub_2404F88BC()
{
  return sub_2404FA028(&qword_256FFEE30, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

uint64_t sub_2404F88E8()
{
  return sub_2404FA028(&qword_257000220, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

uint64_t sub_2404F8914()
{
  return sub_2404FA028(&qword_257000228, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t sub_2404F8940()
{
  return sub_2404FA028(&qword_257000230, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t sub_2404F896C()
{
  return sub_2404FA028(&qword_256FFEE48, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t sub_2404F8998()
{
  return sub_2404FA028(&qword_257000238, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t sub_2404F89C4()
{
  return sub_2404FA028(&qword_257000240, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

uint64_t sub_2404F89F0()
{
  return sub_2404FA028(&qword_257000248, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

uint64_t sub_2404F8A1C()
{
  return sub_2404FA028(&qword_256FFEE50, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

uint64_t sub_2404F8A48()
{
  return sub_2404FA028(&qword_257000250, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

uint64_t sub_2404F8A74()
{
  return sub_2404FA028(&qword_257000258, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

uint64_t sub_2404F8AA0()
{
  return sub_2404FA028(&qword_256FFEE38, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

uint64_t sub_2404F8ACC()
{
  return sub_2404FA028(&qword_256FFEE40, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

uint64_t sub_2404F8AF8()
{
  return sub_2404FA028(&qword_257000260, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

uint64_t sub_2404F8B24()
{
  return sub_2404FA028(&qword_257000268, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

uint64_t sub_2404F8B50()
{
  return sub_2404FA028(&qword_257000270, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

uint64_t sub_2404F8B7C()
{
  return sub_2404FA028(&qword_256FFEE60, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

uint64_t sub_2404F8BA8()
{
  return sub_2404FA028(&qword_257000278, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

uint64_t sub_2404F8BD4()
{
  return sub_2404FA028(&qword_257000280, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t sub_2404F8C00()
{
  return sub_2404FA028(&qword_257000288, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t sub_2404F8C2C()
{
  return sub_2404FA028(&qword_256FFEE70, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t sub_2404F8C58()
{
  return sub_2404FA028(&qword_257000290, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t sub_2404F8C84()
{
  return sub_2404FA028(&qword_257000298, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

uint64_t sub_2404F8CB0()
{
  return sub_2404FA028(&qword_2570002A0, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

uint64_t sub_2404F8CDC()
{
  return sub_2404FA028(&qword_256FFEE88, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

uint64_t sub_2404F8D08()
{
  return sub_2404FA028(&qword_2570002A8, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

uint64_t sub_2404F8D34()
{
  return sub_2404FA028(&qword_2570002B0, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

uint64_t sub_2404F8D60()
{
  return sub_2404FA028(&qword_2570002B8, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

uint64_t sub_2404F8D8C()
{
  return sub_2404FA028(&qword_256FFEE98, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

uint64_t sub_2404F8DB8()
{
  return sub_2404FA028(&qword_2570002C0, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

uint64_t sub_2404F8DE4()
{
  return sub_2404FA028(&qword_2570002C8, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_2404F8E10()
{
  return sub_2404FA028(&qword_256FFEE90, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_2404F8E3C()
{
  return sub_2404FA028(&qword_256FFEEA0, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_2404F8E68()
{
  return sub_2404FA028(&qword_2570002D0, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_2404F8E94()
{
  return sub_2404FA028(&qword_2570002D8, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

uint64_t sub_2404F8EC0()
{
  return sub_2404FA028(&qword_256FFE918, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

uint64_t sub_2404F8EEC()
{
  return sub_2404FA028(&qword_256FFEEA8, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

uint64_t sub_2404F8F18()
{
  return sub_2404FA028(&qword_2570002E0, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

uint64_t sub_2404F8F44()
{
  return sub_2404FA028(&qword_2570002E8, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404F8F70()
{
  return sub_2404FA028(&qword_2570002F0, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404F8F9C()
{
  return sub_2404FA028(&qword_256FFEEB0, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404F8FC8()
{
  return sub_2404FA028(&qword_2570002F8, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404F8FF4()
{
  return sub_2404FA028(&qword_257000300, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404F9020()
{
  return sub_2404FA028(&qword_257000308, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404F904C()
{
  return sub_2404FA028(&qword_256FFEEB8, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404F9078()
{
  return sub_2404FA028(&qword_257000310, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404F90A4()
{
  return sub_2404FA028(&qword_257000318, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404F90D0()
{
  return sub_2404FA028(&qword_257000320, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404F90FC()
{
  return sub_2404FA028(&qword_256FFEEC0, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404F9128()
{
  return sub_2404FA028(&qword_257000328, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404F9154()
{
  return sub_2404FA028(&qword_257000330, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t sub_2404F9180()
{
  return sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t sub_2404F91AC()
{
  return sub_2404FA028(&qword_256FFECE0, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t sub_2404F91D8()
{
  return sub_2404FA028(&qword_257000338, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t sub_2404F9204()
{
  return sub_2404FA028(&qword_257000340, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

uint64_t sub_2404F9230()
{
  return sub_2404FA028(&qword_257000348, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

uint64_t sub_2404F925C()
{
  return sub_2404FA028(&qword_256FFEEC8, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

uint64_t sub_2404F9288()
{
  return sub_2404FA028(&qword_257000350, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

uint64_t sub_2404F92B4()
{
  return sub_2404FA028(&qword_257000358, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

uint64_t sub_2404F92E0()
{
  return sub_2404FA028(&qword_257000360, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

uint64_t sub_2404F930C()
{
  return sub_2404FA028(&qword_256FFEED8, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

uint64_t sub_2404F9338()
{
  return sub_2404FA028(&qword_257000368, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

uint64_t sub_2404F9364()
{
  return sub_2404FA028(&qword_257000370, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t sub_2404F9390()
{
  return sub_2404FA028(&qword_257000378, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t sub_2404F93BC()
{
  return sub_2404FA028(&qword_256FFEEE0, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t sub_2404F93E8()
{
  return sub_2404FA028(&qword_257000380, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t sub_2404F9414()
{
  return sub_2404FA028(&qword_257000388, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_2404F9440()
{
  return sub_2404FA028(&qword_257000390, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_2404F946C()
{
  return sub_2404FA028(&qword_256FFEEE8, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_2404F9498()
{
  return sub_2404FA028(&qword_257000398, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_2404F94C4()
{
  return sub_2404FA028(&qword_2570003A0, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404F94F0()
{
  return sub_2404FA028(&qword_2570003A8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404F951C()
{
  return sub_2404FA028(&qword_256FFEEF0, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404F9548()
{
  return sub_2404FA028(&qword_2570003B0, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404F9574()
{
  return sub_2404FA028(&qword_2570003B8, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_2404F95A0()
{
  return sub_2404FA028(&qword_2570003C0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_2404F95CC()
{
  return sub_2404FA028(&qword_256FFEF00, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_2404F95F8()
{
  return sub_2404FA028(&qword_2570003C8, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_2404F9624()
{
  return sub_2404FA028(&qword_2570003D0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_2404F9650()
{
  return sub_2404FA028(&qword_2570003D8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_2404F967C()
{
  return sub_2404FA028(&qword_256FFEF08, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_2404F96A8()
{
  return sub_2404FA028(&qword_2570003E0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_2404F96D4()
{
  return sub_2404FA028(&qword_2570003E8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t sub_2404F9700()
{
  return sub_2404FA028(&qword_2570003F0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t sub_2404F972C()
{
  return sub_2404FA028(&qword_256FFEF10, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t sub_2404F9758()
{
  return sub_2404FA028(&qword_2570003F8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t sub_2404F9784()
{
  return sub_2404FA028(&qword_257000400, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t sub_2404F97B0()
{
  return sub_2404FA028(&qword_257000408, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t sub_2404F97DC()
{
  return sub_2404FA028(&qword_256FFEF18, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t sub_2404F9808()
{
  return sub_2404FA028(&qword_257000410, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t sub_2404F9834()
{
  return sub_2404FA028(&qword_257000418, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t sub_2404F9860()
{
  return sub_2404FA028(&qword_257000420, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t sub_2404F988C()
{
  return sub_2404FA028(&qword_256FFEF28, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t sub_2404F98B8()
{
  return sub_2404FA028(&qword_257000428, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t sub_2404F98E4()
{
  return sub_2404FA028(&qword_257000430, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t sub_2404F9910()
{
  return sub_2404FA028(&qword_257000438, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t sub_2404F993C()
{
  return sub_2404FA028(&qword_256FFEF30, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t sub_2404F9968()
{
  return sub_2404FA028(&qword_257000440, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t sub_2404F9994()
{
  return sub_2404FA028(&qword_257000448, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t sub_2404F99C0()
{
  return sub_2404FA028(&qword_257000450, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t sub_2404F99EC()
{
  return sub_2404FA028(&qword_256FFEF38, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t sub_2404F9A18()
{
  return sub_2404FA028(&qword_257000458, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t sub_2404F9A44()
{
  return sub_2404FA028(&qword_257000460, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t sub_2404F9A70()
{
  return sub_2404FA028(&qword_257000468, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t sub_2404F9A9C()
{
  return sub_2404FA028(&qword_256FFEF48, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t sub_2404F9AC8()
{
  return sub_2404FA028(&qword_257000470, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t sub_2404F9AF4()
{
  return sub_2404FA028(&qword_257000478, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t sub_2404F9B20()
{
  return sub_2404FA028(&qword_257000480, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t sub_2404F9B4C()
{
  return sub_2404FA028(&qword_256FFEF50, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t sub_2404F9B78()
{
  return sub_2404FA028(&qword_257000488, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t sub_2404F9BA4()
{
  return sub_2404FA028(&qword_257000490, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

uint64_t sub_2404F9BD0()
{
  return sub_2404FA028(&qword_257000498, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

uint64_t sub_2404F9BFC()
{
  return sub_2404FA028(&qword_256FFEF58, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

uint64_t sub_2404F9C28()
{
  return sub_2404FA028(&qword_2570004A0, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

uint64_t sub_2404F9C54()
{
  return sub_2404FA028(&qword_2570004A8, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_2404F9C80()
{
  return sub_2404FA028(&qword_2570004B0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_2404F9CAC()
{
  return sub_2404FA028(&qword_256FFEF60, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_2404F9CD8()
{
  return sub_2404FA028(&qword_2570004B8, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_2404F9D04()
{
  return sub_2404FA028(&qword_2570004C0, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

uint64_t sub_2404F9D30()
{
  return sub_2404FA028(&qword_2570004C8, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

uint64_t sub_2404F9D5C()
{
  return sub_2404FA028(&qword_256FFEF68, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

uint64_t sub_2404F9D88()
{
  return sub_2404FA028(&qword_2570004D0, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

uint64_t sub_2404F9DB4()
{
  return sub_2404FA028(&qword_2570004D8, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_2404F9DE0()
{
  return sub_2404FA028(&qword_2570004E0, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_2404F9E0C()
{
  return sub_2404FA028(&qword_256FFEF70, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_2404F9E38()
{
  return sub_2404FA028(&qword_2570004E8, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_2404F9E64()
{
  return sub_2404FA028(&qword_2570004F0, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
}

uint64_t sub_2404F9E90()
{
  return sub_2404FA028(&qword_2570004F8, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
}

uint64_t sub_2404F9EBC()
{
  return sub_2404FA028(&qword_256FFEF78, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
}

uint64_t sub_2404F9EE8()
{
  return sub_2404FA028(&qword_257000500, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
}

uint64_t sub_2404F9F14(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_2404F9F30(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_2404F9F4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2404F9F70(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_2404F9F88(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_2404F9FA0()
{
  unint64_t result;

  result = qword_257000FF0;
  if (!qword_257000FF0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseDialogPresentationHint, &type metadata for TranscriptProtoResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_257000FF0);
  }
  return result;
}

unint64_t sub_2404F9FE4()
{
  unint64_t result;

  result = qword_2570010D8;
  if (!qword_2570010D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPlanSource, &type metadata for TranscriptProtoPlanSource);
    atomic_store(result, (unint64_t *)&qword_2570010D8);
  }
  return result;
}

uint64_t sub_2404FA028(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x242684578](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TranscriptProtoContextPrewarmRequest.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoContextPrewarmCompleted.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoActionResult.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoActionStepResult.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoActionOutcome.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoQuery.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoUnableToGenerate.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoSuppressed.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoActionResponse.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoSafetyModeRelease.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoSystemQuery.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoASTFlatExprContinuePlanningVariant.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoASTFlatExprGetMentionedApps.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoNoMatchingToolExpression.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoContinuePlanningExpression.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoEndOfPlanExpression.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoGetMentionedAppsExpression.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoASTExprNoMatchingToolVariant.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoASTExprContinuePlanningVariant.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoASTExprGetMentionedApps.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t TranscriptProtoContinuePlanning.traverse<A>(visitor:)()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

id sub_2404FA374()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataBiomeEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DataBiomeEvent()
{
  return objc_opt_self();
}

char *sub_2404FA3D8(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  uint64_t v8;
  char v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v18[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v7 = *a2;
    v8 = (uint64_t)a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_240420930(*a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *((_QWORD *)a1 + 1) = v8;
    a1[16] = v9;
    v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
    v11 = v10[7];
    v12 = &a1[v11];
    v13 = (char *)a2 + v11;
    v14 = sub_2408E5C6C();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v19 = v10[8];
    v20 = &a1[v19];
    v21 = (char *)a2 + v19;
    v64 = v15;
    if (v16((char *)a2 + v19, 1, v14))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v21, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    }
    *(_QWORD *)&a1[v10[9]] = *(char **)((char *)a2 + v10[9]);
    v23 = v10[10];
    v24 = &a1[v23];
    v25 = (uint64_t)a2 + v23;
    v26 = *((unsigned __int8 *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)v24 = *(_QWORD *)v25;
    if (v26 == 255)
    {
      v24[8] = *(_BYTE *)(v25 + 8);
    }
    else
    {
      v24[8] = v26;
      swift_bridgeObjectRetain();
    }
    v27 = v10[11];
    v28 = &a1[v27];
    v29 = (char **)((char *)a2 + v27);
    if (*v29)
    {
      v30 = v29[1];
      *(_QWORD *)v28 = *v29;
      *((_QWORD *)v28 + 1) = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    *(_QWORD *)&a1[v10[12]] = *(char **)((char *)a2 + v10[12]);
    v65 = a3;
    v31 = *(int *)(a3 + 20);
    v32 = &a1[v31];
    v33 = (uint64_t)a2 + v31;
    v34 = *(char **)((char *)a2 + v31);
    v35 = *(uint64_t *)((char *)a2 + v31 + 8);
    v36 = *((_BYTE *)a2 + v31 + 16);
    swift_bridgeObjectRetain();
    sub_240420930(v34, v35, v36);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    v32[16] = v36;
    v37 = v10[7];
    v38 = &v32[v37];
    v39 = (const void *)(v33 + v37);
    if (v16((char *)(v33 + v37), 1, v14))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v64 + 16))(v38, v39, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v38, 0, 1, v14);
    }
    v41 = v10[8];
    v42 = &v32[v41];
    v43 = (const void *)(v33 + v41);
    if (v16((char *)(v33 + v41), 1, v14))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v64 + 16))(v42, v43, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v42, 0, 1, v14);
    }
    *(_QWORD *)&v32[v10[9]] = *(_QWORD *)(v33 + v10[9]);
    v45 = v10[10];
    v46 = &v32[v45];
    v47 = v33 + v45;
    v48 = *(unsigned __int8 *)(v33 + v45 + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)v46 = *(_QWORD *)v47;
    if (v48 == 255)
    {
      v46[8] = *(_BYTE *)(v47 + 8);
    }
    else
    {
      v46[8] = v48;
      swift_bridgeObjectRetain();
    }
    v49 = v10[11];
    v50 = &v32[v49];
    v51 = (_QWORD *)(v33 + v49);
    if (*v51)
    {
      v52 = v51[1];
      *(_QWORD *)v50 = *v51;
      *((_QWORD *)v50 + 1) = v52;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
    }
    *(_QWORD *)&v32[v10[12]] = *(_QWORD *)(v33 + v10[12]);
    v53 = *(int *)(v65 + 24);
    v54 = (uint64_t *)&a1[v53];
    v55 = (uint64_t)a2 + v53;
    v56 = *(uint64_t *)((char *)a2 + v53);
    v57 = *(unint64_t *)((char *)a2 + v53 + 8);
    swift_bridgeObjectRetain();
    sub_240360070(v56, v57);
    *v54 = v56;
    v54[1] = v57;
    v54[2] = *(_QWORD *)(v55 + 16);
    v58 = *(int *)(type metadata accessor for DillSession(0) + 24);
    v59 = (char *)v54 + v58;
    v60 = v55 + v58;
    v61 = sub_2408E57A4();
    v62 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    swift_bridgeObjectRetain();
    v62(v59, v60, v61);
    *(_QWORD *)&a1[*(int *)(v65 + 28)] = *(char **)((char *)a2 + *(int *)(v65 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_2404FA81C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_240420B24(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v5 = a1 + v4[7];
  v6 = sub_2408E5C6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + v4[8];
  if (!v8(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + v4[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v4[11]))
    swift_release();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 20);
  sub_240420B24(*(void **)v10, *(_QWORD *)(v10 + 8), *(_BYTE *)(v10 + 16));
  v11 = v10 + v4[7];
  if (!v8(v11, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  v12 = v10 + v4[8];
  if (!v8(v12, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v10 + v4[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + v4[11]))
    swift_release();
  swift_bridgeObjectRelease();
  v13 = a1 + *(int *)(a2 + 24);
  sub_240363D58(*(_QWORD *)v13, *(_QWORD *)(v13 + 8));
  swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(type metadata accessor for DillSession(0) + 24);
  v15 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_release();
}

uint64_t sub_2404FAA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_240420930(*(void **)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v10 = v9[7];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_2408E5C6C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = v9[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v62 = v14;
  if (v15((const void *)(a2 + v17), 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  *(_QWORD *)(a1 + v9[9]) = *(_QWORD *)(a2 + v9[9]);
  v21 = v9[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int8 *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v22 = *(_QWORD *)v23;
  if (v24 == 255)
  {
    *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  }
  else
  {
    *(_BYTE *)(v22 + 8) = v24;
    swift_bridgeObjectRetain();
  }
  v25 = v9[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
  v63 = a3;
  v29 = *(int *)(a3 + 20);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(void **)(a2 + v29);
  v33 = *(_QWORD *)(a2 + v29 + 8);
  v34 = *(_BYTE *)(a2 + v29 + 16);
  swift_bridgeObjectRetain();
  sub_240420930(v32, v33, v34);
  *(_QWORD *)v30 = v32;
  *(_QWORD *)(v30 + 8) = v33;
  *(_BYTE *)(v30 + 16) = v34;
  v35 = v9[7];
  v36 = (void *)(v30 + v35);
  v37 = (const void *)(v31 + v35);
  if (v15((const void *)(v31 + v35), 1, v13))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v36, v37, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v36, 0, 1, v13);
  }
  v39 = v9[8];
  v40 = (void *)(v30 + v39);
  v41 = (const void *)(v31 + v39);
  if (v15((const void *)(v31 + v39), 1, v13))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v40, v41, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v40, 0, 1, v13);
  }
  *(_QWORD *)(v30 + v9[9]) = *(_QWORD *)(v31 + v9[9]);
  v43 = v9[10];
  v44 = v30 + v43;
  v45 = v31 + v43;
  v46 = *(unsigned __int8 *)(v31 + v43 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v44 = *(_QWORD *)v45;
  if (v46 == 255)
  {
    *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  }
  else
  {
    *(_BYTE *)(v44 + 8) = v46;
    swift_bridgeObjectRetain();
  }
  v47 = v9[11];
  v48 = (_QWORD *)(v30 + v47);
  v49 = (_QWORD *)(v31 + v47);
  if (*v49)
  {
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  *(_QWORD *)(v30 + v9[12]) = *(_QWORD *)(v31 + v9[12]);
  v51 = *(int *)(v63 + 24);
  v52 = (uint64_t *)(a1 + v51);
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51);
  v55 = *(_QWORD *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  sub_240360070(v54, v55);
  *v52 = v54;
  v52[1] = v55;
  v52[2] = *(_QWORD *)(v53 + 16);
  v56 = *(int *)(type metadata accessor for DillSession(0) + 24);
  v57 = (char *)v52 + v56;
  v58 = v53 + v56;
  v59 = sub_2408E57A4();
  v60 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
  swift_bridgeObjectRetain();
  v60(v57, v58, v59);
  *(_QWORD *)(a1 + *(int *)(v63 + 28)) = *(_QWORD *)(a2 + *(int *)(v63 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_2404FAE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  void *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int v66;
  int v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_240420930(*(void **)a2, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_240420B24(v9, v10, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v13 = v12[7];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_2408E5C6C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = v12[8];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = v18((void *)(a1 + v22), 1, v16);
  v26 = v18(v24, 1, v16);
  v90 = v17;
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v23, v24, v16);
LABEL_13:
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v12[10];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *(unsigned __int8 *)(a1 + v28 + 8);
  v32 = *(unsigned __int8 *)(a2 + v28 + 8);
  if (v31 == 255)
  {
    if (v32 == 255)
    {
      v34 = *v30;
      *(_BYTE *)(v29 + 8) = *((_BYTE *)v30 + 8);
      *(_QWORD *)v29 = v34;
    }
    else
    {
      *(_QWORD *)v29 = *v30;
      *(_BYTE *)(v29 + 8) = v32;
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 255)
  {
    sub_240421518(v29);
    v33 = *((_BYTE *)v30 + 8);
    *(_QWORD *)v29 = *v30;
    *(_BYTE *)(v29 + 8) = v33;
  }
  else
  {
    *(_QWORD *)v29 = *v30;
    *(_BYTE *)(v29 + 8) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v35 = v12[11];
  v36 = (_QWORD *)(a1 + v35);
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a1 + v35);
  v39 = *(_QWORD *)(a2 + v35);
  if (v38)
  {
    if (v39)
    {
      v40 = *(_QWORD *)(v37 + 8);
      *v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v39)
  {
    v41 = *(_QWORD *)(v37 + 8);
    *v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_29:
  *(_QWORD *)(a1 + v12[12]) = *(_QWORD *)(a2 + v12[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v89 = a3;
  v42 = *(int *)(a3 + 20);
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(void **)(a2 + v42);
  v46 = *(_QWORD *)(a2 + v42 + 8);
  v47 = *(_BYTE *)(a2 + v42 + 16);
  sub_240420930(v45, v46, v47);
  v48 = *(void **)v43;
  v49 = *(_QWORD *)(v43 + 8);
  v50 = *(_BYTE *)(v43 + 16);
  *(_QWORD *)v43 = v45;
  *(_QWORD *)(v43 + 8) = v46;
  *(_BYTE *)(v43 + 16) = v47;
  sub_240420B24(v48, v49, v50);
  v51 = v12[7];
  v52 = (void *)(v43 + v51);
  v53 = (void *)(v44 + v51);
  v54 = v18((void *)(v43 + v51), 1, v16);
  v55 = v18(v53, 1, v16);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v90 + 16))(v52, v53, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v52, 0, 1, v16);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v90 + 8))(v52, v16);
LABEL_34:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, void *, uint64_t))(v90 + 24))(v52, v53, v16);
LABEL_35:
  v57 = v12[8];
  v58 = (void *)(v43 + v57);
  v59 = (void *)(v44 + v57);
  v60 = v18((void *)(v43 + v57), 1, v16);
  v61 = v18(v59, 1, v16);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, void *, uint64_t))(v90 + 16))(v58, v59, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v58, 0, 1, v16);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v90 + 8))(v58, v16);
LABEL_40:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v90 + 24))(v58, v59, v16);
LABEL_41:
  *(_QWORD *)(v43 + v12[9]) = *(_QWORD *)(v44 + v12[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = v12[10];
  v64 = v43 + v63;
  v65 = (uint64_t *)(v44 + v63);
  v66 = *(unsigned __int8 *)(v43 + v63 + 8);
  v67 = *(unsigned __int8 *)(v44 + v63 + 8);
  if (v66 == 255)
  {
    if (v67 == 255)
    {
      v69 = *v65;
      *(_BYTE *)(v64 + 8) = *((_BYTE *)v65 + 8);
      *(_QWORD *)v64 = v69;
    }
    else
    {
      *(_QWORD *)v64 = *v65;
      *(_BYTE *)(v64 + 8) = v67;
      swift_bridgeObjectRetain();
    }
  }
  else if (v67 == 255)
  {
    sub_240421518(v64);
    v68 = *((_BYTE *)v65 + 8);
    *(_QWORD *)v64 = *v65;
    *(_BYTE *)(v64 + 8) = v68;
  }
  else
  {
    *(_QWORD *)v64 = *v65;
    *(_BYTE *)(v64 + 8) = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v70 = v12[11];
  v71 = (_QWORD *)(v43 + v70);
  v72 = v44 + v70;
  v73 = *(_QWORD *)(v43 + v70);
  v74 = *(_QWORD *)(v44 + v70);
  if (!v73)
  {
    if (v74)
    {
      v76 = *(_QWORD *)(v72 + 8);
      *v71 = v74;
      v71[1] = v76;
      swift_retain();
      goto LABEL_57;
    }
LABEL_56:
    *(_OWORD *)v71 = *(_OWORD *)v72;
    goto LABEL_57;
  }
  if (!v74)
  {
    swift_release();
    goto LABEL_56;
  }
  v75 = *(_QWORD *)(v72 + 8);
  *v71 = v74;
  v71[1] = v75;
  swift_retain();
  swift_release();
LABEL_57:
  *(_QWORD *)(v43 + v12[12]) = *(_QWORD *)(v44 + v12[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v77 = *(int *)(v89 + 24);
  v78 = (uint64_t *)(a1 + v77);
  v79 = a2 + v77;
  v80 = *(_QWORD *)(a2 + v77);
  v81 = *(_QWORD *)(a2 + v77 + 8);
  sub_240360070(v80, v81);
  v82 = *v78;
  v83 = v78[1];
  *v78 = v80;
  v78[1] = v81;
  sub_240363D58(v82, v83);
  v78[2] = *(_QWORD *)(v79 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = *(int *)(type metadata accessor for DillSession(0) + 24);
  v85 = (char *)v78 + v84;
  v86 = v79 + v84;
  v87 = sub_2408E57A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 24))(v85, v86, v87);
  *(_QWORD *)(a1 + *(int *)(v89 + 28)) = *(_QWORD *)(a2 + *(int *)(v89 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2404FB4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v7 = v6[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2408E5C6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v18 = v6[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = v6[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  v53 = a3;
  v26 = *(int *)(a3 + 20);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_OWORD *)v27 = *(_OWORD *)(a2 + v26);
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(a2 + v26 + 16);
  v29 = v6[7];
  v30 = (void *)(v27 + v29);
  v31 = (const void *)(v28 + v29);
  if (v12((const void *)(v28 + v29), 1, v10))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v30, v31, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
  }
  v33 = v6[8];
  v34 = (void *)(v27 + v33);
  v35 = (const void *)(v28 + v33);
  if (v12((const void *)(v28 + v33), 1, v10))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v34, v35, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
  }
  *(_QWORD *)(v27 + v6[9]) = *(_QWORD *)(v28 + v6[9]);
  v37 = v6[10];
  v38 = v27 + v37;
  v39 = v28 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  v40 = v6[11];
  v41 = (_QWORD *)(v27 + v40);
  v42 = (uint64_t *)(v28 + v40);
  v43 = *v42;
  if (*v42)
  {
    v44 = v42[1];
    *v41 = v43;
    v41[1] = v44;
  }
  else
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  *(_QWORD *)(v27 + v6[12]) = *(_QWORD *)(v28 + v6[12]);
  v45 = *(int *)(v53 + 24);
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_OWORD *)v46 = *(_OWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(a2 + v45 + 16);
  v48 = *(int *)(type metadata accessor for DillSession(0) + 24);
  v49 = v46 + v48;
  v50 = v47 + v48;
  v51 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  *(_QWORD *)(a1 + *(int *)(v53 + 28)) = *(_QWORD *)(a2 + *(int *)(v53 + 28));
  return a1;
}

uint64_t sub_2404FB864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  char v9;
  int *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  void *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_240420B24(v7, v8, v9);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v11 = v10[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2408E5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = v10[8];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = v16((void *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  v77 = v15;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
LABEL_13:
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_bridgeObjectRelease();
  v26 = v10[10];
  v27 = a1 + v26;
  v28 = a2 + v26;
  if (*(unsigned __int8 *)(a1 + v26 + 8) != 255)
  {
    v29 = *(unsigned __int8 *)(v28 + 8);
    if (v29 != 255)
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_BYTE *)(v27 + 8) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_240421518(v27);
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
LABEL_18:
  v30 = v10[11];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  v34 = *(_QWORD *)(a2 + v30);
  if (v33)
  {
    if (v34)
    {
      v35 = *(_QWORD *)(v32 + 8);
      *v31 = v34;
      v31[1] = v35;
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = *(_QWORD *)(v32 + 8);
    *v31 = v34;
    v31[1] = v36;
    goto LABEL_25;
  }
  *(_OWORD *)v31 = *(_OWORD *)v32;
LABEL_25:
  *(_QWORD *)(a1 + v10[12]) = *(_QWORD *)(a2 + v10[12]);
  swift_bridgeObjectRelease();
  v76 = a3;
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = (_OWORD *)(a2 + v37);
  LOBYTE(v37) = *(_BYTE *)(a2 + v37 + 16);
  v40 = *(void **)v38;
  v41 = *(_QWORD *)(v38 + 8);
  v42 = *(_BYTE *)(v38 + 16);
  *(_OWORD *)v38 = *v39;
  *(_BYTE *)(v38 + 16) = v37;
  sub_240420B24(v40, v41, v42);
  v43 = v10[7];
  v44 = (void *)(v38 + v43);
  v45 = (char *)v39 + v43;
  v46 = v16((void *)(v38 + v43), 1, v14);
  v47 = v16(v45, 1, v14);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v44, v45, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v44, 0, 1, v14);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v77 + 8))(v44, v14);
LABEL_30:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v77 + 40))(v44, v45, v14);
LABEL_31:
  v49 = v10[8];
  v50 = (void *)(v38 + v49);
  v51 = (char *)v39 + v49;
  v52 = v16((void *)(v38 + v49), 1, v14);
  v53 = v16(v51, 1, v14);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v50, v51, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v50, 0, 1, v14);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v77 + 8))(v50, v14);
LABEL_36:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v77 + 40))(v50, v51, v14);
LABEL_37:
  *(_QWORD *)(v38 + v10[9]) = *(_QWORD *)((char *)v39 + v10[9]);
  swift_bridgeObjectRelease();
  v55 = v10[10];
  v56 = v38 + v55;
  v57 = (char *)v39 + v55;
  if (*(unsigned __int8 *)(v38 + v55 + 8) != 255)
  {
    v58 = v57[8];
    if (v58 != 255)
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *(_BYTE *)(v56 + 8) = v58;
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_240421518(v56);
  }
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = v57[8];
LABEL_42:
  v59 = v10[11];
  v60 = (_QWORD *)(v38 + v59);
  v61 = (char *)v39 + v59;
  v62 = *(_QWORD *)(v38 + v59);
  v63 = *(_QWORD *)((char *)v39 + v59);
  if (!v62)
  {
    if (v63)
    {
      v65 = *((_QWORD *)v61 + 1);
      *v60 = v63;
      v60[1] = v65;
      goto LABEL_49;
    }
LABEL_48:
    *(_OWORD *)v60 = *(_OWORD *)v61;
    goto LABEL_49;
  }
  if (!v63)
  {
    swift_release();
    goto LABEL_48;
  }
  v64 = *((_QWORD *)v61 + 1);
  *v60 = v63;
  v60[1] = v64;
  swift_release();
LABEL_49:
  *(_QWORD *)(v38 + v10[12]) = *(_QWORD *)((char *)v39 + v10[12]);
  swift_bridgeObjectRelease();
  v66 = *(int *)(v76 + 24);
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)(a1 + v66);
  v70 = *(_QWORD *)(a1 + v66 + 8);
  *(_OWORD *)(a1 + v66) = *(_OWORD *)(a2 + v66);
  sub_240363D58(v69, v70);
  *(_QWORD *)(v67 + 16) = *(_QWORD *)(v68 + 16);
  swift_bridgeObjectRelease();
  v71 = *(int *)(type metadata accessor for DillSession(0) + 24);
  v72 = v67 + v71;
  v73 = v68 + v71;
  v74 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  *(_QWORD *)(a1 + *(int *)(v76 + 28)) = *(_QWORD *)(a2 + *(int *)(v76 + 28));
  swift_release();
  return a1;
}

uint64_t sub_2404FBE20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2404FBE2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_257001428);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for DillSession(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_2404FBF00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2404FBF0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_257001428);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for DillSession(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for BiomeProvisionalUploader()
{
  uint64_t result;

  result = qword_257001488;
  if (!qword_257001488)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2404FC018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  sub_2404FC0A8(319, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    type metadata accessor for DillSession(319);
    if (v5 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2404FC0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_257001498[0])
  {
    v4 = type metadata accessor for IngestConfig(0, (uint64_t)&type metadata for DillInner, a3, a4);
    if (!v5)
      atomic_store(v4, qword_257001498);
  }
}

uint64_t sub_2404FC0FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2408E5C6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  sub_24042A8E0(v2 + *(int *)(v12 + 32), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2404FD52C((uint64_t)v7);
    sub_240360070(a1, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    a1 = sub_2404FC4AC();
    a2 = v13;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (a2 >> 60 == 15)
      return a1;
  }
  sub_240360070(a1, a2);
  v14 = v2 + *(int *)(v12 + 40);
  v15 = *(unsigned __int8 *)(v14 + 8);
  if (v15 == 255)
  {
    sub_2403C2424(a1, a2);
  }
  else
  {
    v16 = *(_QWORD *)v14;
    v17 = swift_bridgeObjectRetain();
    v18 = sub_2404FC800(v17, v15, a1, a2);
    sub_2403C2424(a1, a2);
    sub_24042BAC8(v16, v15);
    sub_240363D58(a1, a2);
    return v18;
  }
  return a1;
}

uint64_t sub_2404FC2CC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2408E5C6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_24042A8E0(v3 + *(int *)(v14 + 32), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2404FD52C((uint64_t)v9);
    sub_240360070(a1, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    a1 = sub_2404FC4AC();
    a2 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a2 >> 60 == 15)
      return a1;
  }
  sub_240360070(a1, a2);
  v16 = v3 + *(int *)(v14 + 40);
  v17 = *(unsigned __int8 *)(v16 + 8);
  if (v17 == 255)
  {
    sub_2403C2424(a1, a2);
  }
  else
  {
    v18 = *(_QWORD *)v16;
    v19 = swift_bridgeObjectRetain();
    v20 = sub_2404FC800(v19, v17, a1, a2);
    sub_2403C2424(a1, a2);
    sub_24042BAC8(v18, v17);
    sub_240363D58(a1, a2);
    return v20;
  }
  return a1;
}

uint64_t sub_2404FC49C(uint64_t a1, unint64_t a2)
{
  return sub_2404FC2CC(a1, a2, &qword_254355C80);
}

uint64_t sub_2404FC4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  int v12;
  _QWORD v14[3];

  v0 = sub_2408E5C6C();
  v14[2] = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2408E5C84();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v14 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v14 - v9;
  sub_2404FD56C();
  sub_2408E5E7C();
  v11 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v11(v10, v8, v1);
  v11(v5, v10, v1);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v12 == *MEMORY[0x24BE2BD40] || v12 == *MEMORY[0x24BE2BD48])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v5, v1);
    return *(_QWORD *)v5;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
}

uint64_t sub_2404FC800(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3;
  if (a2)
  {
    if (a2 != 1)
    {
      sub_240360070(a3, a4);
      return v4;
    }
    v5 = sub_2408E5E58();
  }
  else
  {
    v5 = sub_2408E5E64();
  }
  v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2404FCA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_257001408);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257001408);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_2404FCABC(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  unint64_t v21;
  void (*v22)(__int128 *__return_ptr, uint64_t, unint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE *v31;
  uint64_t v32;
  __int128 v33;

  v7 = type metadata accessor for DillSessionEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v32 - v12;
  v14 = type metadata accessor for BiomeProvisionalUploader();
  v15 = sub_2404FC2CC(a1, a2, &qword_257001420);
  if (v16 >> 60 == 15)
  {
    if (qword_256FF9788 != -1)
      swift_once();
    v17 = sub_2408E5C48();
    __swift_project_value_buffer(v17, (uint64_t)qword_257001408);
    v18 = sub_2408E5C3C();
    v19 = sub_2408E5E94();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_240347000, v18, v19, "Skipping event missing data body", v20, 2u);
      MEMORY[0x242684668](v20, -1, -1);
    }

  }
  else
  {
    v21 = v16;
    v32 = v15;
    v22 = *(void (**)(__int128 *__return_ptr, uint64_t, unint64_t))(v3
                                                                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257001420)
                                                                                            + 44));
    if (v22)
    {
      swift_retain();
      _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
      *(double *)v13 = a3;
      v22(&v33, v32, v21);
      sub_2404FD458((uint64_t)v22);
      *(_OWORD *)(v13 + 8) = v33;
      v13[24] = 0;
      sub_2404FD468((uint64_t)v13, (uint64_t)v11);
      v23 = v3 + *(int *)(v14 + 24);
      v24 = *(_QWORD *)(v23 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_24050ABE0(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
        v24 = sub_24050ABE0(v25 > 1, v26 + 1, 1, v24);
      *(_QWORD *)(v24 + 16) = v26 + 1;
      sub_2404FD4AC((uint64_t)v11, v24+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v26);
      sub_2403C2424(v32, v21);
      *(_QWORD *)(v23 + 16) = v24;
      sub_2404FD4F0((uint64_t)v13);
    }
    else
    {
      if (qword_256FF9788 != -1)
        swift_once();
      v27 = sub_2408E5C48();
      __swift_project_value_buffer(v27, (uint64_t)qword_257001408);
      v28 = sub_2408E5C3C();
      v29 = sub_2408E5EAC();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_240347000, v28, v29, "Missing innerTypeBuilder in config", v30, 2u);
        MEMORY[0x242684668](v30, -1, -1);
      }

      sub_2404FD3D0();
      swift_allocError();
      *v31 = 2;
      swift_willThrow();
      sub_2403C2424(v32, v21);
    }
  }
}

uint64_t sub_2404FCE64()
{
  uint64_t v0;
  _QWORD *v1;

  v1[4] = v0;
  v1[5] = type metadata accessor for DillSession(0);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

id sub_2404FCEEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;

  *(_DWORD *)(v0 + 96) = *(_DWORD *)(type metadata accessor for BiomeProvisionalUploader() + 24);
  sub_2404FA028(&qword_2570014E0, type metadata accessor for DillSession, (uint64_t)&unk_24091E268);
  v1 = sub_2408E5990();
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v2;
  v3 = v1;
  v4 = v2;
  v5 = (objc_class *)type metadata accessor for DillProvisional();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = (uint64_t *)&v6[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_dillData];
  *v7 = v3;
  v7[1] = v4;
  v8 = &v6[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_eventId];
  *(_QWORD *)v8 = 0xD00000000000001CLL;
  *((_QWORD *)v8 + 1) = 0x8000000240927C80;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_version] = 9;
  sub_240360070(v3, v4);
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v5;
  result = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  *(_QWORD *)(v0 + 72) = result;
  if (result)
  {
    v10 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_240900470;
    *(_QWORD *)(v11 + 32) = v10;
    v16 = v11;
    sub_2408E5DB0();
    *(_QWORD *)(v0 + 80) = v16;
    v12 = MEMORY[0x24BE90950];
    v13 = (int)*MEMORY[0x24BE90950];
    v14 = v10;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v15;
    *v15 = v0;
    v15[1] = sub_2404FD144;
    return (id)((uint64_t (*)(uint64_t))(v13 + v12))(v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404FD144()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2404FD1CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(uint64_t **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v19 = *(void **)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 32) + *(int *)(v0 + 96);
  v4 = sub_2408E566C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = swift_task_alloc();
  sub_2408E5660();
  *(_QWORD *)(v0 + 100) = sub_2408E5654();
  *(_BYTE *)(v0 + 108) = v7;
  *(_BYTE *)(v0 + 109) = v8;
  *(_BYTE *)(v0 + 110) = v9;
  *(_BYTE *)(v0 + 111) = v10;
  *(_BYTE *)(v0 + 112) = v11;
  *(_BYTE *)(v0 + 113) = v12;
  *(_BYTE *)(v0 + 114) = v13;
  *(_BYTE *)(v0 + 115) = v14;
  v15 = sub_2408D7A1C((_BYTE *)(v0 + 100), 16);
  v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_240363D58(v3, v1);

  *v2 = v15;
  v2[1] = v17;
  v2[2] = MEMORY[0x24BEE4AF8];
  swift_task_dealloc();
  sub_2404FD414((uint64_t)v2, v20);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2404FD378(uint64_t a1, unint64_t a2, double a3)
{
  sub_2404FCABC(a1, a2, a3);
}

uint64_t sub_2404FD38C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2403B0350;
  return sub_2404FCE64();
}

unint64_t sub_2404FD3D0()
{
  unint64_t result;

  result = qword_2570014E8;
  if (!qword_2570014E8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for BiomeUploadProcessorError, &type metadata for BiomeUploadProcessorError);
    atomic_store(result, (unint64_t *)&qword_2570014E8);
  }
  return result;
}

uint64_t sub_2404FD414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DillSession(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404FD458(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2404FD468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DillSessionEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404FD4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DillSessionEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404FD4F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DillSessionEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2404FD52C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2404FD56C()
{
  unint64_t result;

  result = qword_256FFCA70;
  if (!qword_256FFCA70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFCA70);
  }
  return result;
}

Swift::Bool __swiftcall AllDemands.meetsDemand()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return 1;
  v2 = *(_QWORD *)v0 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_2403AE340(v2, (uint64_t)v7);
    v3 = v8;
    v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    if ((v5 & 1) == 0)
      break;
    v2 += 40;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

ValueMetadata *type metadata accessor for AllDemands()
{
  return &type metadata for AllDemands;
}

uint64_t sub_2404FD66C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  _BOOL4 v102;
  uint64_t v103;
  uint64_t v104;
  uint8_t *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char **v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char isUniquelyReferenced_nonNull_native;
  void (*v139)(uint64_t *, _QWORD);
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int64_t v149;
  unint64_t v150;
  int64_t v151;
  _QWORD *v152;
  void (*v153)(uint64_t *, _QWORD);
  uint64_t v154;
  char **v155;
  uint64_t (*v156)();
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(_QWORD, _QWORD);
  int v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  _BOOL8 v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  _QWORD *v185;
  uint64_t v186;
  BOOL v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)();
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t (*v225)();
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t (*v232)(uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t (*v239)();
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  char v248;
  unint64_t v249;
  unint64_t v250;
  _QWORD *v251;
  uint64_t (*v252)(uint64_t);
  uint64_t v253;
  uint64_t (*v254)();
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  char v263;
  unint64_t v264;
  unint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  uint64_t (*v268)(uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t (*v271)();
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  NSObject *v279;
  os_log_type_t v280;
  uint8_t *v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint8_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  char v307;
  unint64_t v308;
  unint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t (*v314)();
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t (*v318)();
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  char *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  char *v342;
  char *v343;
  char *v344;
  char *v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t *v360;
  uint64_t *v361;
  uint64_t *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  int64_t v387;
  uint64_t (*v388)();
  char **v389;
  char **v390;
  void (*v391)(uint64_t *, _QWORD);
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t *v396;
  uint64_t (*v397)(uint64_t, uint64_t, uint64_t);
  char **v398;
  char *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;

  v382 = a3;
  v365 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v364 = *(_QWORD *)(v365 - 8);
  v7 = MEMORY[0x24BDAC7A8](v365);
  v9 = (char *)&v322 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v350 = (uint64_t)&v322 - v10;
  v354 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v354);
  v360 = (uint64_t *)((char *)&v322 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v12);
  v355 = (uint64_t)&v322 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v353 = (uint64_t)&v322 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v349 = (uint64_t)&v322 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v356 = (uint64_t)&v322 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v357 = (uint64_t)&v322 - v21;
  v352 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v352);
  v358 = (uint64_t)&v322 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v23);
  v362 = (uint64_t *)((char *)&v322 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v25);
  v361 = (uint64_t *)((char *)&v322 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  MEMORY[0x24BDAC7A8](v27);
  v333 = (char *)&v322 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA380);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v328 = (char *)&v322 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v342 = (char *)&v322 - v32;
  v324 = type metadata accessor for TranscriptProtoExecutorError(0);
  v33 = MEMORY[0x24BDAC7A8](v324);
  v330 = (char *)&v322 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v338 = (char *)&v322 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA378);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v327 = (char *)&v322 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v341 = (char *)&v322 - v39;
  v323 = type metadata accessor for TranscriptProtoPlannerError(0);
  v40 = MEMORY[0x24BDAC7A8](v323);
  v329 = (char *)&v322 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v337 = (char *)&v322 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v326 = (char *)&v322 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v322 - v46;
  v325 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  v48 = MEMORY[0x24BDAC7A8](v325);
  v332 = (char *)&v322 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v336 = (char *)&v322 - v50;
  v335 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v334 = *(_QWORD *)(v335 - 8);
  v51 = MEMORY[0x24BDAC7A8](v335);
  v359 = (char *)&v322 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v331 = (char *)&v322 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v322 = (char *)&v322 - v56;
  MEMORY[0x24BDAC7A8](v55);
  v343 = (char *)&v322 - v57;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  v59 = MEMORY[0x24BDAC7A8](v58);
  v347 = (uint64_t)&v322 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v59);
  v363 = (uint64_t)&v322 - v61;
  v339 = type metadata accessor for TranscriptProtoSessionError(0);
  v62 = MEMORY[0x24BDAC7A8](v339);
  v348 = (uint64_t)&v322 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v366 = (uint64_t)&v322 - v64;
  v377 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v376 = *(_QWORD *)(v377 - 8);
  v65 = MEMORY[0x24BDAC7A8](v377);
  v368 = (uint64_t)&v322 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v65);
  v370 = (uint64_t)&v322 - v67;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v69 = MEMORY[0x24BDAC7A8](v68);
  v373 = (uint64_t)&v322 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v69);
  v369 = (uint64_t)&v322 - v71;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v73 = MEMORY[0x24BDAC7A8](v72);
  v374 = (uint64_t)&v322 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v73);
  v367 = (uint64_t)&v322 - v75;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001500);
  v77 = MEMORY[0x24BDAC7A8](v76);
  v346 = (char *)&v322 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = MEMORY[0x24BDAC7A8](v77);
  v345 = (char *)&v322 - v80;
  MEMORY[0x24BDAC7A8](v79);
  v371 = (uint64_t)&v322 - v81;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  v83 = MEMORY[0x24BDAC7A8](v82);
  v379 = (uint64_t)&v322 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v83);
  v398 = (char **)((char *)&v322 - v85);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  v87 = MEMORY[0x24BDAC7A8](v86);
  v372 = (uint64_t *)((char *)&v322 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v87);
  v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v322 - v89);
  v381 = type metadata accessor for ParticipantInfo(0);
  v380 = *(_QWORD *)(v381 - 8);
  v91 = MEMORY[0x24BDAC7A8](v381);
  v393 = (uint64_t)&v322 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = MEMORY[0x24BDAC7A8](v91);
  v378 = (char **)((char *)&v322 - v94);
  MEMORY[0x24BDAC7A8](v93);
  v399 = (char *)&v322 - v95;
  v384 = type metadata accessor for TranscriptProtoEvent(0);
  MEMORY[0x24BDAC7A8](v384);
  v97 = (char *)&v322 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254355DF0 != -1)
    swift_once();
  v98 = sub_2408E5C48();
  v99 = __swift_project_value_buffer(v98, (uint64_t)qword_254356428);
  v385 = a1;
  sub_2403AE1A4(a1, (uint64_t)v97, type metadata accessor for TranscriptProtoEvent);
  v351 = v99;
  v100 = sub_2408E5C3C();
  v101 = sub_2408E5EA0();
  v102 = os_log_type_enabled(v100, v101);
  v383 = a4;
  v396 = a2;
  v103 = v382;
  v344 = v47;
  v340 = v9;
  if (v102)
  {
    v104 = swift_slowAlloc();
    v397 = v90;
    v105 = (uint8_t *)v104;
    v106 = swift_slowAlloc();
    v401 = v106;
    *(_DWORD *)v105 = 136315138;
    v108 = *((_QWORD *)v97 + 6);
    v107 = *((_QWORD *)v97 + 7);
    swift_bridgeObjectRetain();
    v109 = v383;
    v400 = sub_2403B3ED0(v108, v107, &v401);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_240388AE4((uint64_t)v97, type metadata accessor for TranscriptProtoEvent);
    _os_log_impl(&dword_240347000, v100, v101, "Producing features from events for clientSessionID: %s", v105, 0xCu);
    swift_arrayDestroy();
    v110 = v382;
    MEMORY[0x242684668](v106, -1, -1);
    v111 = v105;
    v90 = v397;
    MEMORY[0x242684668](v111, -1, -1);

    v112 = v110;
  }
  else
  {
    sub_240388AE4((uint64_t)v97, type metadata accessor for TranscriptProtoEvent);

    v112 = v103;
    v109 = a4;
  }
  swift_bridgeObjectRetain();
  v113 = (uint64_t)sub_2408DB7CC(&v401, v112, v109);
  v115 = v114;
  v116 = type metadata accessor for SessionData(0);
  v375 = *(_QWORD *)(v116 - 8);
  v117 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v375 + 48);
  v118 = v117(v115, 1, v116);
  v394 = v116;
  v397 = v117;
  if (!v118)
  {
    sub_2403A9210(v385 + *(int *)(v384 + 60), (uint64_t)v90, &qword_256FFA4A8);
    v120 = type metadata accessor for TranscriptProtoParticipantID(0);
    v121 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 48))(v90, 1, v120);
    v391 = (void (*)(uint64_t *, _QWORD))v113;
    if (v121 == 1)
    {
      sub_2403A97FC((uint64_t)v90, &qword_256FFA4A8);
      v395 = 0;
      v392 = 0;
    }
    else
    {
      v122 = *((_QWORD *)v90 + 1);
      v395 = *(_QWORD *)v90;
      v392 = v122;
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v90, type metadata accessor for TranscriptProtoParticipantID);
    }
    v123 = v398;
    v124 = sub_2408E5624();
    v398 = &v322;
    v125 = *(_QWORD *)(v124 - 8);
    MEMORY[0x24BDAC7A8](v124);
    v127 = (char *)&v322 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
    v128 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
    MEMORY[0x24BDAC7A8](v128);
    v130 = (char *)&v322 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2403A9210(v385 + *(int *)(v384 + 56), (uint64_t)v123, &qword_256FFA498);
    v131 = sub_2408E5750();
    v132 = *(_QWORD *)(v131 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v132 + 48))(v123, 1, v131) == 1)
    {
      sub_2403A97FC((uint64_t)v123, &qword_256FFA498);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v130, 1, 1, v124);
    }
    else
    {
      sub_2408E5744();
      (*(void (**)(char **, uint64_t))(v132 + 8))(v123, v131);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v130, 0, 1, v124);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v130, 1, v124) != 1)
      {
        v133 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
        v133(v127, v130, v124);
        goto LABEL_16;
      }
    }
    sub_2408E5594();
    sub_2403A97FC((uint64_t)v130, qword_254356330);
    v133 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
LABEL_16:
    v109 = v383;
    v134 = v399;
    v135 = v392;
    *(_QWORD *)v399 = v395;
    *((_QWORD *)v134 + 1) = v135;
    v133(&v134[*(int *)(v381 + 20)], v127, v124);
    v136 = v115 + *(int *)(v394 + 20);
    v113 = *(int *)(type metadata accessor for SessionSignature(0) + 44);
    v137 = *(_QWORD *)(v136 + v113);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v136 + v113) = v137;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v137 = sub_24050ABF4(0, *(_QWORD *)(v137 + 16) + 1, 1, v137);
      *(_QWORD *)(v136 + v113) = v137;
    }
    v139 = v391;
    v141 = *(_QWORD *)(v137 + 16);
    v140 = *(_QWORD *)(v137 + 24);
    if (v141 >= v140 >> 1)
    {
      v137 = sub_24050ABF4(v140 > 1, v141 + 1, 1, v137);
      *(_QWORD *)(v136 + v113) = v137;
    }
    v119 = v394;
    *(_QWORD *)(v137 + 16) = v141 + 1;
    sub_2403A91CC((uint64_t)v399, v137+ ((*(unsigned __int8 *)(v380 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v380 + 80))+ *(_QWORD *)(v380 + 72) * v141, type metadata accessor for ParticipantInfo);
    v139(&v401, 0);
    v112 = v382;
    goto LABEL_21;
  }
  v119 = v116;
  ((void (*)(uint64_t *, _QWORD))v113)(&v401, 0);
LABEL_21:
  swift_bridgeObjectRelease();
  v142 = *(_QWORD *)(v385 + 80);
  v143 = *(_QWORD *)(v142 + 64);
  v386 = v142 + 64;
  v144 = 1 << *(_BYTE *)(v142 + 32);
  v145 = -1;
  if (v144 < 64)
    v145 = ~(-1 << v144);
  v146 = v145 & v143;
  v387 = (unint64_t)(v144 + 63) >> 6;
  v395 = v142;
  swift_bridgeObjectRetain();
  v147 = 0;
  while (1)
  {
    if (v146)
    {
      v399 = (char *)((v146 - 1) & v146);
      v148 = __clz(__rbit64(v146)) | (v147 << 6);
      goto LABEL_42;
    }
    v149 = v147 + 1;
    if (__OFADD__(v147, 1))
    {
      __break(1u);
LABEL_134:
      __break(1u);
      JUMPOUT(0x2404FFA00);
    }
    if (v149 >= v387)
      goto LABEL_59;
    v150 = *(_QWORD *)(v386 + 8 * v149);
    ++v147;
    if (!v150)
    {
      v147 = v149 + 1;
      if (v149 + 1 >= v387)
        goto LABEL_59;
      v150 = *(_QWORD *)(v386 + 8 * v147);
      if (!v150)
      {
        v147 = v149 + 2;
        if (v149 + 2 >= v387)
          goto LABEL_59;
        v150 = *(_QWORD *)(v386 + 8 * v147);
        if (!v150)
          break;
      }
    }
LABEL_41:
    v399 = (char *)((v150 - 1) & v150);
    v148 = __clz(__rbit64(v150)) + (v147 << 6);
LABEL_42:
    v152 = (_QWORD *)(*(_QWORD *)(v395 + 48) + 16 * v148);
    v153 = (void (*)(uint64_t *, _QWORD))*v152;
    v154 = v152[1];
    v155 = *(char ***)(*(_QWORD *)(v395 + 56) + 8 * v148);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v113 = v112;
    v156 = sub_2408DB7CC(&v401, v112, v109);
    v158 = v157;
    if (v397(v157, 1, v119))
    {
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, _QWORD))v156)(&v401, 0);
      v112 = v113;
      goto LABEL_25;
    }
    v391 = v153;
    v392 = v147;
    v398 = v155;
    v388 = v156;
    v159 = sub_2408E5624();
    v390 = &v322;
    v160 = *(_QWORD *)(v159 - 8);
    MEMORY[0x24BDAC7A8](v159);
    v162 = (char *)&v322 - ((v161 + 15) & 0xFFFFFFFFFFFFFFF0);
    v163 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
    v389 = &v322;
    MEMORY[0x24BDAC7A8](v163);
    v165 = (char *)&v322 - ((v164 + 15) & 0xFFFFFFFFFFFFFFF0);
    v166 = v379;
    sub_2403A9210(v385 + *(int *)(v384 + 56), v379, &qword_256FFA498);
    v167 = sub_2408E5750();
    v168 = *(_QWORD *)(v167 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v166, 1, v167) == 1)
    {
      sub_2403A97FC(v166, &qword_256FFA498);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v165, 1, 1, v159);
      v169 = (void (*)(_QWORD, _QWORD))v391;
LABEL_46:
      sub_2408E5594();
      sub_2403A97FC((uint64_t)v165, qword_254356330);
      v171 = *(void (**)(char *, char *, uint64_t))(v160 + 32);
      goto LABEL_48;
    }
    sub_2408E5744();
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v166, v167);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v165, 0, 1, v159);
    v170 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 48))(v165, 1, v159);
    v169 = (void (*)(_QWORD, _QWORD))v391;
    if (v170 == 1)
      goto LABEL_46;
    v171 = *(void (**)(char *, char *, uint64_t))(v160 + 32);
    v171(v162, v165, v159);
LABEL_48:
    v147 = v392;
    v172 = (uint64_t)v378;
    *v378 = v169;
    *(_QWORD *)(v172 + 8) = v154;
    v171((char *)(v172 + *(int *)(v381 + 20)), v162, v159);
    v173 = v158 + *(int *)(v394 + 20);
    v174 = *(int *)(type metadata accessor for SessionSignature(0) + 32);
    sub_2403A91CC(v172, v393, type metadata accessor for ParticipantInfo);
    v175 = swift_isUniquelyReferenced_nonNull_native();
    v400 = *(_QWORD *)(v173 + v174);
    v176 = v400;
    *(_QWORD *)(v173 + v174) = 0x8000000000000000;
    v178 = sub_240509F54((uint64_t)v398);
    v179 = *(_QWORD *)(v176 + 16);
    v180 = (v177 & 1) == 0;
    v181 = v179 + v180;
    v109 = v383;
    if (__OFADD__(v179, v180))
      goto LABEL_134;
    v182 = v177;
    if (*(_QWORD *)(v176 + 24) >= v181)
    {
      if ((v175 & 1) == 0)
        sub_2403AD578();
      v113 = (uint64_t)v398;
      v185 = (_QWORD *)v400;
      if ((v182 & 1) == 0)
      {
LABEL_52:
        v185[(v178 >> 6) + 8] |= 1 << v178;
        *(_QWORD *)(v185[6] + 8 * v178) = v113;
        sub_2403A91CC(v393, v185[7] + *(_QWORD *)(v380 + 72) * v178, type metadata accessor for ParticipantInfo);
        v186 = v185[2];
        v187 = __OFADD__(v186, 1);
        v188 = v186 + 1;
        if (v187)
        {
          __break(1u);
LABEL_136:
          TranscriptProtoStatementOutcomeEnum.description.getter();
          v300 = v299;
          v301 = v182;
          v303 = v302;
          v304 = v113 + *(int *)(v301 + 20);
          v305 = *(int *)(type metadata accessor for SessionSignature(0) + 40);
          v306 = *(_QWORD **)(v304 + v305);
          v307 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v304 + v305) = v306;
          if ((v307 & 1) == 0)
          {
            v306 = sub_24050A538(0, v306[2] + 1, 1, v306);
            *(_QWORD *)(v304 + v305) = v306;
          }
          v309 = v306[2];
          v308 = v306[3];
          if (v309 >= v308 >> 1)
          {
            v306 = sub_24050A538((_QWORD *)(v308 > 1), v309 + 1, 1, v306);
            *(_QWORD *)(v304 + v305) = v306;
          }
          v297 = v382;
          v237 = v360;
          v306[2] = v309 + 1;
          v310 = &v306[2 * v309];
          v310[4] = v300;
          v310[5] = v303;
          ((void (*)(uint64_t *, _QWORD))v178)(&v401, 0);
          v182 = v394;
          goto LABEL_141;
        }
        v185[2] = v188;
        goto LABEL_58;
      }
    }
    else
    {
      sub_2403AB7D8(v181, v175);
      v113 = (uint64_t)v398;
      v183 = sub_240509F54((uint64_t)v398);
      if ((v182 & 1) != (v184 & 1))
      {
        sub_2408E61B8();
        __break(1u);
        JUMPOUT(0x240500DC0);
      }
      v178 = v183;
      v185 = (_QWORD *)v400;
      if ((v182 & 1) == 0)
        goto LABEL_52;
    }
    sub_24050157C(v393, v185[7] + *(_QWORD *)(v380 + 72) * v178);
LABEL_58:
    *(_QWORD *)(v173 + v174) = v185;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, _QWORD))v388)(&v401, 0);
    v112 = v382;
    v119 = v394;
LABEL_25:
    swift_bridgeObjectRelease();
    v146 = (uint64_t)v399;
  }
  v151 = v149 + 3;
  if (v151 < v387)
  {
    v150 = *(_QWORD *)(v386 + 8 * v151);
    if (!v150)
    {
      while (1)
      {
        v147 = v151 + 1;
        if (__OFADD__(v151, 1))
          break;
        if (v147 >= v387)
          goto LABEL_59;
        v150 = *(_QWORD *)(v386 + 8 * v147);
        ++v151;
        if (v150)
          goto LABEL_41;
      }
      __break(1u);
LABEL_147:
      sub_240388AE4(v146, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v317 = v383;
      swift_bridgeObjectRetain();
      v318 = sub_2408DB7CC(&v401, v147, v317);
      v320 = v319;
      v321 = v394;
      if (!v397(v319, 1, v394))
        *(_BYTE *)(v320 + *(int *)(v321 + 20) + 1) = 0;
      ((void (*)(uint64_t *, _QWORD))v318)(&v401, 0);
      swift_bridgeObjectRelease();
      v252 = type metadata accessor for TranscriptProtoStatementResult;
      v267 = v113;
LABEL_106:
      sub_240388AE4(v267, v252);
      v268 = type metadata accessor for TranscriptProtoPayloadEnum;
      v269 = v370;
      return sub_240388AE4(v269, v268);
    }
    v147 = v151;
    goto LABEL_41;
  }
LABEL_59:
  swift_release();
  v189 = *v396;
  if (*(_QWORD *)(*v396 + 16))
  {
    swift_bridgeObjectRetain();
    v190 = sub_240509E28(v112, v109);
    if ((v191 & 1) != 0)
    {
      v192 = *(_QWORD *)(v189 + 56);
      v193 = v375;
      v194 = v371;
      sub_2403AE1A4(v192 + *(_QWORD *)(v375 + 72) * v190, v371, type metadata accessor for SessionData);
      v195 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v193 + 56);
      v196 = v194;
      v195(v194, 0, 1, v119);
    }
    else
    {
      v196 = v371;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 56))(v371, 1, 1, v119);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v196 = v371;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v375 + 56))(v371, 1, 1, v119);
  }
  v197 = v385;
  if (v397(v196, 1, v119))
  {
    v198 = v112;
    sub_2403A97FC(v196, &qword_257001500);
  }
  else
  {
    v199 = v196;
    v200 = v196 + *(int *)(v119 + 20);
    v201 = (uint64_t *)(v200 + *(int *)(type metadata accessor for SessionSignature(0) + 48));
    v203 = *v201;
    v202 = v201[1];
    swift_bridgeObjectRetain();
    v204 = v199;
    v198 = v112;
    sub_2403A97FC(v204, &qword_257001500);
    swift_bridgeObjectRelease();
    v205 = HIBYTE(v202) & 0xF;
    if ((v202 & 0x2000000000000000) == 0)
      v205 = v203 & 0xFFFFFFFFFFFFLL;
    if (v205)
    {
      v206 = v383;
      swift_bridgeObjectRetain();
      v207 = sub_2408DB7CC(&v401, v112, v206);
      if (!v397(v208, 1, v394))
        sub_2408E5D50();
      ((void (*)(uint64_t *, _QWORD))v207)(&v401, 0);
      swift_bridgeObjectRelease();
      v198 = v112;
    }
  }
  v209 = v384;
  v210 = v372;
  sub_2403A9210(v197 + *(int *)(v384 + 60), (uint64_t)v372, &qword_256FFA4A8);
  v211 = type metadata accessor for TranscriptProtoParticipantID(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 48))(v210, 1, v211) == 1)
  {
    sub_2403A97FC((uint64_t)v210, &qword_256FFA4A8);
    goto LABEL_84;
  }
  v212 = v198;
  v213 = (uint64_t)v210;
  v215 = *v210;
  v214 = v210[1];
  swift_bridgeObjectRetain();
  sub_240388AE4(v213, type metadata accessor for TranscriptProtoParticipantID);
  v401 = v215;
  v402 = v214;
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v216 = v197;
  v218 = v401;
  v217 = v402;
  v219 = v369;
  sub_2403A9210(v216 + *(int *)(v209 + 44), v369, &qword_256FFA490);
  v220 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 48))(v219, 1, v220) == 1)
  {
    v221 = &qword_256FFA490;
    goto LABEL_79;
  }
  v222 = v219;
  v223 = v219;
  v219 = v367;
  sub_2403A9210(v222, v367, &qword_256FFA488);
  sub_240388AE4(v223, type metadata accessor for TranscriptProtoPayload);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v376 + 48))(v219, 1, v377) == 1)
  {
    v221 = &qword_256FFA488;
LABEL_79:
    sub_2403A97FC(v219, v221);
  }
  else
  {
    TranscriptProtoPayloadEnum.eventTypeString.getter();
    sub_240388AE4(v219, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  v401 = v218;
  v402 = v217;
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v224 = v383;
  swift_bridgeObjectRetain();
  v225 = sub_2408DB7CC(&v401, v212, v224);
  if (!v397(v226, 1, v394))
  {
    type metadata accessor for SessionSignature(0);
    sub_2408E5D50();
  }
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, _QWORD))v225)(&v401, 0);
  swift_bridgeObjectRelease();
  v209 = v384;
  v197 = v385;
  v198 = v212;
LABEL_84:
  v227 = v373;
  sub_2403A9210(v197 + *(int *)(v209 + 44), v373, &qword_256FFA490);
  v228 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 48))(v227, 1, v228) != 1)
  {
    v146 = v374;
    sub_2403A9210(v227, v374, &qword_256FFA488);
    sub_240388AE4(v227, type metadata accessor for TranscriptProtoPayload);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v376 + 48))(v146, 1, v377) == 1)
      goto LABEL_87;
    v232 = type metadata accessor for TranscriptProtoPayloadEnum;
    v233 = v146;
    v234 = v370;
    sub_2403A91CC(v233, v370, type metadata accessor for TranscriptProtoPayloadEnum);
    v235 = v234;
    v236 = v368;
    sub_2403AE1A4(v235, v368, type metadata accessor for TranscriptProtoPayloadEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 5u:
        v237 = v361;
        sub_2403A91CC(v236, (uint64_t)v361, type metadata accessor for TranscriptProtoAction);
        v238 = v383;
        swift_bridgeObjectRetain();
        v239 = sub_2408DB7CC(&v401, v198, v238);
        v241 = v240;
        v242 = v394;
        if (!v397(v240, 1, v394))
        {
          v244 = *v237;
          v243 = v237[1];
          v245 = v241 + *(int *)(v242 + 20);
          v246 = *(int *)(type metadata accessor for SessionSignature(0) + 36);
          v247 = *(_QWORD **)(v245 + v246);
          swift_bridgeObjectRetain();
          v248 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v245 + v246) = v247;
          if ((v248 & 1) == 0)
          {
            v247 = sub_24050A538(0, v247[2] + 1, 1, v247);
            *(_QWORD *)(v245 + v246) = v247;
          }
          v250 = v247[2];
          v249 = v247[3];
          if (v250 >= v249 >> 1)
          {
            v247 = sub_24050A538((_QWORD *)(v249 > 1), v250 + 1, 1, v247);
            *(_QWORD *)(v245 + v246) = v247;
          }
          v237 = v361;
          v247[2] = v250 + 1;
          v251 = &v247[2 * v250];
          v251[4] = v244;
          v251[5] = v243;
        }
        ((void (*)(uint64_t *, _QWORD))v239)(&v401, 0);
        swift_bridgeObjectRelease();
        v252 = type metadata accessor for TranscriptProtoAction;
        goto LABEL_105;
      case 6u:
        v237 = v362;
        sub_2403A91CC(v236, (uint64_t)v362, type metadata accessor for TranscriptProtoClientAction);
        v253 = v383;
        swift_bridgeObjectRetain();
        v254 = sub_2408DB7CC(&v401, v198, v253);
        v256 = v255;
        v257 = v394;
        if (!v397(v255, 1, v394))
        {
          v259 = *v237;
          v258 = v237[1];
          v260 = v256 + *(int *)(v257 + 20);
          v261 = *(int *)(type metadata accessor for SessionSignature(0) + 36);
          v262 = *(_QWORD **)(v260 + v261);
          swift_bridgeObjectRetain();
          v263 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v260 + v261) = v262;
          if ((v263 & 1) == 0)
          {
            v262 = sub_24050A538(0, v262[2] + 1, 1, v262);
            *(_QWORD *)(v260 + v261) = v262;
          }
          v265 = v262[2];
          v264 = v262[3];
          if (v265 >= v264 >> 1)
          {
            v262 = sub_24050A538((_QWORD *)(v264 > 1), v265 + 1, 1, v262);
            *(_QWORD *)(v260 + v261) = v262;
          }
          v237 = v362;
          v262[2] = v265 + 1;
          v266 = &v262[2 * v265];
          v266[4] = v259;
          v266[5] = v258;
        }
        ((void (*)(uint64_t *, _QWORD))v254)(&v401, 0);
        swift_bridgeObjectRelease();
        v252 = type metadata accessor for TranscriptProtoClientAction;
        goto LABEL_105;
      case 0xAu:
        sub_2403A91CC(v236, v366, type metadata accessor for TranscriptProtoSessionError);
        v270 = v383;
        swift_bridgeObjectRetain();
        v271 = sub_2408DB7CC(&v401, v198, v270);
        v273 = v272;
        v274 = v394;
        if (!v397(v272, 1, v394))
          *(_BYTE *)(v273 + *(int *)(v274 + 20) + 1) = 1;
        ((void (*)(uint64_t *, _QWORD))v271)(&v401, 0);
        swift_bridgeObjectRelease();
        v275 = v366;
        v276 = v363;
        sub_2403A9210(v366, v363, &qword_256FFA388);
        v277 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v277 - 8) + 48))(v276, 1, v277) != 1)
        {
          sub_2403A9210(v276, v347, &qword_256FFA388);
          v292 = (char *)&loc_2404FF5F0 + dword_240500E24[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v278 = v348;
        sub_2403AE1A4(v275, v348, type metadata accessor for TranscriptProtoSessionError);
        v279 = sub_2408E5C3C();
        v280 = sub_2408E5EA0();
        if (os_log_type_enabled(v279, v280))
        {
          v281 = (uint8_t *)swift_slowAlloc();
          v282 = swift_slowAlloc();
          v401 = v282;
          *(_DWORD *)v281 = 136315138;
          sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
          v283 = sub_2408E599C();
          v400 = sub_2403B3ED0(v283, v284, &v401);
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          sub_240388AE4(v278, type metadata accessor for TranscriptProtoSessionError);
          _os_log_impl(&dword_240347000, v279, v280, "Unrecognized error from sessionError: %s", v281, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242684668](v282, -1, -1);
          v285 = v281;
          v276 = v363;
          MEMORY[0x242684668](v285, -1, -1);

        }
        else
        {

          sub_240388AE4(v278, type metadata accessor for TranscriptProtoSessionError);
        }
        sub_240388AE4(v275, type metadata accessor for TranscriptProtoSessionError);
        sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
        v229 = &qword_256FFA388;
        v230 = v276;
        return sub_2403A97FC(v230, v229);
      case 0x1Cu:
        v237 = v360;
        sub_2403A91CC(v236, (uint64_t)v360, type metadata accessor for TranscriptProtoSystemResponse);
        v286 = v353;
        sub_2403A9210((uint64_t)v237 + *(int *)(v354 + 28), v353, &qword_256FFA3E8);
        v287 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 48))(v286, 1, v287) == 1)
        {
          sub_2403A97FC(v286, &qword_256FFA3E8);
          v288 = v356;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v364 + 56))(v356, 1, 1, v365);
        }
        else
        {
          v288 = v356;
          sub_2403A9210(v286, v356, &qword_256FFA3E0);
          sub_240388AE4(v286, type metadata accessor for TranscriptProtoStatementOutcome);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v364 + 48))(v288, 1, v365) != 1)
          {
            sub_2403A91CC(v288, v350, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            v296 = v383;
            swift_bridgeObjectRetain();
            v297 = v198;
            v178 = (unint64_t)sub_2408DB7CC(&v401, v198, v296);
            v113 = v298;
            v182 = v394;
            if (!v397(v298, 1, v394))
              goto LABEL_136;
            ((void (*)(uint64_t *, _QWORD))v178)(&v401, 0);
LABEL_141:
            v311 = v383;
            swift_bridgeObjectRelease();
            v312 = v350;
            v313 = (uint64_t)v340;
            sub_2403AE1A4(v350, (uint64_t)v340, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            if (!swift_getEnumCaseMultiPayload())
            {
              sub_240388AE4(v313, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
              swift_bridgeObjectRetain();
              v314 = sub_2408DB7CC(&v401, v297, v311);
              v316 = v315;
              if (!v397(v315, 1, v182))
                *(_BYTE *)(v316 + *(int *)(v182 + 20) + 1) = 0;
              ((void (*)(uint64_t *, _QWORD))v314)(&v401, 0);
              swift_bridgeObjectRelease();
              sub_240388AE4(v350, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
              v252 = type metadata accessor for TranscriptProtoSystemResponse;
LABEL_105:
              v267 = (uint64_t)v237;
              goto LABEL_106;
            }
            v232 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
            sub_240388AE4(v312, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            sub_240388AE4((uint64_t)v237, type metadata accessor for TranscriptProtoSystemResponse);
            sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
            v269 = v313;
LABEL_108:
            v268 = v232;
            return sub_240388AE4(v269, v268);
          }
        }
        sub_240388AE4((uint64_t)v237, type metadata accessor for TranscriptProtoSystemResponse);
        sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
        v229 = &qword_256FFA3E0;
        v230 = v288;
        return sub_2403A97FC(v230, v229);
      case 0x1Du:
        v147 = v198;
        v113 = v358;
        sub_2403A91CC(v236, v358, type metadata accessor for TranscriptProtoStatementResult);
        v289 = v355;
        sub_2403A9210(v113 + *(int *)(v352 + 24), v355, &qword_256FFA420);
        v290 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v290 - 8) + 48))(v289, 1, v290) == 1)
        {
          sub_2403A97FC(v289, &qword_256FFA420);
          v291 = v365;
          v146 = v357;
        }
        else
        {
          v293 = v349;
          sub_2403A9210(v289, v349, &qword_256FFA3E8);
          sub_240388AE4(v289, type metadata accessor for TranscriptProtoStatementResultPayload);
          v294 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v295 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v294 - 8) + 48))(v293, 1, v294);
          v291 = v365;
          v146 = v357;
          if (v295 != 1)
          {
            sub_2403A9210(v293, v357, &qword_256FFA3E0);
            sub_240388AE4(v293, type metadata accessor for TranscriptProtoStatementOutcome);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v364 + 48))(v146, 1, v291) != 1)
            {
              if (!swift_getEnumCaseMultiPayload())
                goto LABEL_147;
              sub_240388AE4(v113, type metadata accessor for TranscriptProtoStatementResult);
              sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
              v268 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
              v269 = v146;
              return sub_240388AE4(v269, v268);
            }
LABEL_125:
            sub_240388AE4(v113, type metadata accessor for TranscriptProtoStatementResult);
            sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
            v229 = &qword_256FFA3E0;
            goto LABEL_88;
          }
          sub_2403A97FC(v293, &qword_256FFA3E8);
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v364 + 56))(v146, 1, 1, v291);
        goto LABEL_125;
      default:
        sub_240388AE4(v370, type metadata accessor for TranscriptProtoPayloadEnum);
        v269 = v236;
        goto LABEL_108;
    }
  }
  sub_2403A97FC(v227, &qword_256FFA490);
  v146 = v374;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v376 + 56))(v374, 1, 1, v377);
LABEL_87:
  v229 = &qword_256FFA488;
LABEL_88:
  v230 = v146;
  return sub_2403A97FC(v230, v229);
}

uint64_t sub_240500E34@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v48 = a5;
  v51 = a3;
  v52 = a4;
  v56 = a6;
  v57 = a1;
  v7 = type metadata accessor for ParticipantInfo(0);
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v49 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v45 - v17;
  v19 = type metadata accessor for AttributionTraits(0);
  v55 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v45 - v24;
  v50 = *a2;
  v22[2] = 0;
  v22[3] = 0;
  v26 = (uint64_t)v22 + *(int *)(v23 + 24);
  v27 = sub_2408E566C();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v58 = v19;
  v29 = (_QWORD *)((char *)v22 + *(int *)(v19 + 28));
  *v22 = 0;
  v22[1] = 0;
  *v29 = 0;
  v29[1] = 0;
  sub_2403A97FC(v26, &qword_256FFA660);
  v28(v26, 1, 1, v27);
  swift_bridgeObjectRelease();
  *v29 = 0;
  v29[1] = 0;
  v30 = (uint64_t)v25;
  v31 = v57;
  sub_2403A91CC((uint64_t)v22, v30, type metadata accessor for AttributionTraits);
  v32 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(v31 + *(int *)(v32 + 44), (uint64_t)v10, &qword_256FFA490);
  v33 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v10, 1, v33) == 1)
  {
    sub_2403A97FC((uint64_t)v10, &qword_256FFA490);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v13, 1, 1, v54);
LABEL_4:
    sub_2403A97FC((uint64_t)v13, &qword_256FFA488);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v56, 1, 1, v58);
    return sub_240388AE4(v30, type metadata accessor for AttributionTraits);
  }
  v35 = v50;
  v34 = v51;
  v36 = v52;
  v46 = v18;
  sub_2403A9210((uint64_t)v10, (uint64_t)v13, &qword_256FFA488);
  sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoPayload);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v13, 1, v54) == 1)
    goto LABEL_4;
  v37 = (uint64_t)v46;
  sub_2403A91CC((uint64_t)v13, (uint64_t)v46, type metadata accessor for TranscriptProtoPayloadEnum);
  v38 = v49;
  sub_2403AE1A4(v37, v49, type metadata accessor for TranscriptProtoPayloadEnum);
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    v39 = v58;
    v40 = (_QWORD *)(v30 + *(int *)(v58 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v40 = v34;
    v40[1] = v36;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    MEMORY[0x24BDAC7A8](v41);
    v43 = (char *)&v45 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2408E5630();
    sub_2403C25A0((uint64_t)v43, v30 + *(int *)(v39 + 24), &qword_256FFA660);
    __asm { BR              X9 }
  }
  sub_240388AE4(v37, type metadata accessor for TranscriptProtoPayloadEnum);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v56, 1, 1, v58);
  sub_240388AE4(v38, type metadata accessor for TranscriptProtoPayloadEnum);
  return sub_240388AE4(v30, type metadata accessor for AttributionTraits);
}

uint64_t sub_24050157C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParticipantInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2405015C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257001508;
  if (!qword_257001508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FFA7D8);
    result = MEMORY[0x242684578](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257001508);
  }
  return result;
}

void *sub_24050160C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001510);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF58);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  v9 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2405018C8(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, updated) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFCF58);
    return 0;
  }
  else
  {
    sub_240501910((uint64_t)v7, (uint64_t)v11);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DA8]), sel_init);
    v12 = v13;
    v28 = MEMORY[0x24BEE4AF8];
    v14 = *(_QWORD *)v11;
    v15 = *(_QWORD *)(*(_QWORD *)v11 + 16);
    if (v15)
    {
      v26 = v13;
      v27 = v11;
      v16 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
      v17 = *(_QWORD *)(v16 - 8);
      v18 = v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = *(_QWORD *)(v17 + 72);
      v25 = v14;
      swift_bridgeObjectRetain();
      do
      {
        sub_240501954(v18, (uint64_t)v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
        v20 = sub_2408AFADC((uint64_t)v4);
        sub_2403A97FC((uint64_t)v4, &qword_257001510);
        if (v20)
        {
          v21 = v20;
          MEMORY[0x242683B40]();
          if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2408E5DBC();
          sub_2408E5DD4();
          sub_2408E5DB0();

        }
        v18 += v19;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      v12 = v26;
      v11 = v27;
    }
    if (v12)
    {
      sub_2405019D4();
      v22 = v12;
      v23 = (void *)sub_2408E5D8C();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setUpdates_, v23);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_240501998((uint64_t)v11);
  }
  return v12;
}

uint64_t sub_2405018C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240501910(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_240501954(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_240501998(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

unint64_t sub_2405019D4()
{
  unint64_t result;

  result = qword_257001518;
  if (!qword_257001518)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257001518);
  }
  return result;
}

void UsageMetricsDefinitions.clientId.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t UsageMetricsDefinitions.clientSessionId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UsageMetricsDefinitions.clientSessionId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UsageMetricsDefinitions.clientSessionId.modify())()
{
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.dateStamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 20);
  v4 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UsageMetricsDefinitions()
{
  uint64_t result;

  result = qword_2570015B0;
  if (!qword_2570015B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t UsageMetricsDefinitions.dateStamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 20);
  v4 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UsageMetricsDefinitions.dateStamp.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.useCase.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UsageMetricsDefinitions.useCase.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*UsageMetricsDefinitions.useCase.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.completionStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UsageMetricsDefinitions();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t UsageMetricsDefinitions.completionStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for UsageMetricsDefinitions();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*UsageMetricsDefinitions.completionStatus.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.errorMessage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UsageMetricsDefinitions.errorMessage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*UsageMetricsDefinitions.errorMessage.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.attribution.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UsageMetricsDefinitions.attribution.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*UsageMetricsDefinitions.attribution.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.planGenerationLatency.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 40));
}

uint64_t UsageMetricsDefinitions.planGenerationLatency.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UsageMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*UsageMetricsDefinitions.planGenerationLatency.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.actionGenerationLatency.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 44));
}

uint64_t UsageMetricsDefinitions.actionGenerationLatency.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UsageMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*UsageMetricsDefinitions.actionGenerationLatency.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t UsageMetricsDefinitions.executionLatency.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 48));
}

uint64_t UsageMetricsDefinitions.executionLatency.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UsageMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*UsageMetricsDefinitions.executionLatency.modify())()
{
  type metadata accessor for UsageMetricsDefinitions();
  return nullsub_1;
}

uint64_t sub_240501F58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_240501F98 + 4 * byte_240900510[a1]))(0x6553746E65696C63, 0xEF64496E6F697373);
}

uint64_t sub_240501F98()
{
  return 0x6D61745365746164;
}

uint64_t sub_240501FB4()
{
  return 0x65736143657375;
}

unint64_t sub_240501FCC()
{
  return 0xD000000000000010;
}

uint64_t sub_240502070()
{
  unsigned __int8 *v0;

  return sub_240501F58(*v0);
}

uint64_t sub_240502078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240503400(a1, a2);
  *a3 = result;
  return result;
}

void sub_24050209C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2405020A8()
{
  sub_2405023A0();
  return sub_2408E6278();
}

uint64_t sub_2405020D0()
{
  sub_2405023A0();
  return sub_2408E6284();
}

uint64_t UsageMetricsDefinitions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001520);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2405023A0();
  sub_2408E626C();
  v11[15] = 0;
  sub_2408E6140();
  if (!v2)
  {
    v9 = type metadata accessor for UsageMetricsDefinitions();
    v11[14] = 1;
    sub_2408E5624();
    sub_240502914(&qword_257001530, MEMORY[0x24BDCE928]);
    sub_2408E6164();
    v11[13] = 2;
    sub_2408E6140();
    v11[12] = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v11[11] = 3;
    sub_2405023E4();
    sub_2408E6164();
    v11[10] = 4;
    sub_2408E6140();
    v11[9] = 5;
    sub_2408E6140();
    v11[8] = 6;
    sub_2408E6158();
    v11[7] = 7;
    sub_2408E6158();
    v11[6] = 8;
    sub_2408E6158();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2405023A0()
{
  unint64_t result;

  result = qword_257001528;
  if (!qword_257001528)
  {
    result = MEMORY[0x242684578](&unk_2409006FC, &type metadata for UsageMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257001528);
  }
  return result;
}

unint64_t sub_2405023E4()
{
  unint64_t result;

  result = qword_257001538;
  if (!qword_257001538)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TaskCompletionStatus, &type metadata for TaskCompletionStatus);
    atomic_store(result, (unint64_t *)&qword_257001538);
  }
  return result;
}

uint64_t UsageMetricsDefinitions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001540);
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for UsageMetricsDefinitions();
  MEMORY[0x24BDAC7A8](v33);
  v9 = (_QWORD *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2405023A0();
  sub_2408E6254();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v10 = v5;
  v31 = a2;
  v43 = 0;
  v11 = (uint64_t)v9;
  *v9 = sub_2408E60D4();
  v9[1] = v12;
  v13 = sub_2408E5624();
  v30[1] = v30;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = 1;
  sub_240502914(&qword_257001548, MEMORY[0x24BDCE968]);
  sub_2408E60F8();
  v30[0] = v10;
  v17 = (int *)v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v11 + *(int *)(v33 + 20), v16, v13);
  v41 = 2;
  v18 = v32;
  v19 = sub_2408E60D4();
  v20 = (uint64_t *)(v11 + v17[6]);
  *v20 = v19;
  v20[1] = v21;
  v39 = 3;
  sub_240502954();
  sub_2408E60F8();
  *(_BYTE *)(v11 + v17[7]) = v40;
  v38 = 4;
  v22 = sub_2408E60D4();
  v23 = (uint64_t *)(v11 + v17[8]);
  *v23 = v22;
  v23[1] = v24;
  v37 = 5;
  v25 = sub_2408E60D4();
  v26 = (uint64_t *)(v11 + v17[9]);
  *v26 = v25;
  v26[1] = v27;
  v36 = 6;
  *(_QWORD *)(v11 + v17[10]) = sub_2408E60EC();
  v35 = 7;
  *(_QWORD *)(v11 + v17[11]) = sub_2408E60EC();
  v34 = 8;
  v28 = sub_2408E60EC();
  (*(void (**)(char *, uint64_t))(v30[0] + 8))(v7, v18);
  *(_QWORD *)(v11 + v17[12]) = v28;
  sub_240502998(v11, v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2405029DC(v11);
}

uint64_t sub_240502914(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2408E5624();
    result = MEMORY[0x242684578](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240502954()
{
  unint64_t result;

  result = qword_257001550;
  if (!qword_257001550)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TaskCompletionStatus, &type metadata for TaskCompletionStatus);
    atomic_store(result, (unint64_t *)&qword_257001550);
  }
  return result;
}

uint64_t sub_240502998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UsageMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2405029DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UsageMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240502A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240502A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_240502A98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UsageMetricsDefinitions.init(from:)(a1, a2);
}

uint64_t sub_240502AAC(_QWORD *a1)
{
  return UsageMetricsDefinitions.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for UsageMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2408E5624();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v18 = a3[8];
    v19 = a3[9];
    v20 = (_QWORD *)((char *)v4 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)((char *)v4 + v19);
    v24 = (_QWORD *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v26) = *(_QWORD *)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for UsageMetricsDefinitions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for UsageMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E5624();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v17 = a3[8];
  v18 = a3[9];
  v19 = (_QWORD *)((char *)a1 + v17);
  v20 = (_QWORD *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)((char *)a1 + v18);
  v23 = (_QWORD *)((char *)a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UsageMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  return a1;
}

_OWORD *initializeWithTake for UsageMetricsDefinitions(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *assignWithTake for UsageMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UsageMetricsDefinitions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24050303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UsageMetricsDefinitions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2405030C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_240503138()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UsageMetricsDefinitions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2405032A8 + 4 * byte_24090051E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2405032DC + 4 * byte_240900519[v4]))();
}

uint64_t sub_2405032DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2405032E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2405032ECLL);
  return result;
}

uint64_t sub_2405032F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240503300);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_240503304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24050330C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UsageMetricsDefinitions.CodingKeys()
{
  return &type metadata for UsageMetricsDefinitions.CodingKeys;
}

unint64_t sub_24050332C()
{
  unint64_t result;

  result = qword_257001608;
  if (!qword_257001608)
  {
    result = MEMORY[0x242684578](&unk_2409006D4, &type metadata for UsageMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257001608);
  }
  return result;
}

unint64_t sub_240503374()
{
  unint64_t result;

  result = qword_257001610;
  if (!qword_257001610)
  {
    result = MEMORY[0x242684578](&unk_240900644, &type metadata for UsageMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257001610);
  }
  return result;
}

unint64_t sub_2405033BC()
{
  unint64_t result;

  result = qword_257001618;
  if (!qword_257001618)
  {
    result = MEMORY[0x242684578](&unk_24090066C, &type metadata for UsageMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257001618);
  }
  return result;
}

uint64_t sub_240503400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D61745365746164 && a2 == 0xE900000000000070 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736143657375 && a2 == 0xE700000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000240927CC0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73654D726F727265 && a2 == 0xEC00000065676173 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEB000000006E6F69 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000240927CE0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000240927D00 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000240927D20)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2405037E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257001620);
  __swift_project_value_buffer(v0, (uint64_t)qword_257001620);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "UNKNOWN";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "VOICE_ONLY";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "VOICE_FORWARD";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "DISPLAY_FORWARD";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "DISPLAY_ONLY";
  *(_QWORD *)(v16 + 8) = 12;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ResponseGenerationProtoResponseMode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9790, (uint64_t)qword_257001620, a1);
}

uint64_t sub_240503A04@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9790, (uint64_t)qword_257001620, a1);
}

unint64_t static ResponseGenerationProtoResponseGenerationInput.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_240503A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257001638);
  __swift_project_value_buffer(v0, (uint64_t)qword_257001638);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "client_request_id";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "utterance";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "response_mode";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "response_locale";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "statement_result_digests";
  *(_QWORD *)(v16 + 8) = 24;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ResponseGenerationProtoResponseGenerationInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9798, (uint64_t)qword_257001638, a1);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_5;
        case 3:
          sub_24050532C();
          v4 = v3;
          sub_2408E58A0();
          goto LABEL_5;
        case 5:
          type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
          sub_2404FA028(&qword_257001670, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
          v4 = v3;
          sub_2408E5960();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (!*(_BYTE *)(v0 + 32) || (sub_24050532C(), result = sub_2408E59E4(), !v1))
      {
        v7 = *(_QWORD *)(v0 + 48);
        v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0)
          v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
        if (!v8 || (result = sub_2408E5A38(), !v1))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v0 + 56) + 16)
            || (type metadata accessor for ResponseGenerationProtoStatementResultDigest(0),
                sub_2404FA028(&qword_257001670, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest), result = sub_2408E5A5C(), !v1))
          {
            type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
            return sub_2408E578C();
          }
        }
      }
    }
  }
  return result;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ResponseGenerationProtoResponseGenerationInput, &qword_257001678, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_240503F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240503FD8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_240503FF4()
{
  return ResponseGenerationProtoResponseGenerationInput.decodeMessage<A>(decoder:)();
}

uint64_t sub_240504008()
{
  return ResponseGenerationProtoResponseGenerationInput.traverse<A>(visitor:)();
}

uint64_t sub_24050401C()
{
  sub_2404FA028(&qword_2570016C8, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
  return sub_2408E5828();
}

uint64_t sub_24050406C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9798, (uint64_t)qword_257001638, a1);
}

uint64_t sub_240504088()
{
  sub_2404FA028(&qword_2570016A0, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
  return sub_2408E599C();
}

uint64_t sub_2405040C8()
{
  sub_2404FA028(&qword_2570016A0, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
  return sub_2408E59A8();
}

unint64_t static ResponseGenerationProtoStatementResultDigest.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_240504138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257001650);
  __swift_project_value_buffer(v0, (uint64_t)qword_257001650);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "tool_definition";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "action_created";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statement_outcome";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "undo_operation";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "response_manifest";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "return_value_type_display_representation";
  *((_QWORD *)v19 + 1) = 40;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ResponseGenerationProtoStatementResultDigest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97A0, (uint64_t)qword_257001650, a1);
}

uint64_t ResponseGenerationProtoStatementResultDigest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
          v4 = v3;
          sub_2408E596C();
          goto LABEL_5;
        case 2:
          v4 = v3;
          sub_240504510();
          goto LABEL_5;
        case 3:
          v4 = v3;
          sub_2405045A4();
          goto LABEL_5;
        case 4:
          v4 = v3;
          sub_240504638();
          goto LABEL_5;
        case 5:
          v4 = v3;
          sub_2405046AC();
          goto LABEL_5;
        case 6:
          v4 = v3;
          sub_240504740();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240504510()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  type metadata accessor for TranscriptProtoAction(0);
  sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_2408E596C();
}

uint64_t sub_2405045A4()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  type metadata accessor for TranscriptProtoStatementOutcome(0);
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_2408E596C();
}

uint64_t sub_240504638()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2404EF8D0();
  return sub_2408E5894();
}

uint64_t sub_2405046AC()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_2408E596C();
}

uint64_t sub_240504740()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  return sub_2408E596C();
}

uint64_t ResponseGenerationProtoStatementResultDigest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2405048F4(v3, a1, a2, a3);
  if (!v4)
  {
    sub_240504A5C(v3, a1, a2, a3);
    sub_240504BD0(v3, a1, a2, a3);
    sub_240504D44(v3);
    sub_240504DD0(v3, a1, a2, a3);
    sub_240504F44(v3, a1, a2, a3);
    type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2405048F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFA468);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA468);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_240504A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_2570012B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_2570012B8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoAction);
  sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAction);
}

uint64_t sub_240504BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3E8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t sub_240504D44(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28)) != 2)
  {
    sub_2404EF8D0();
    return sub_2408E59E4();
  }
  return result;
}

uint64_t sub_240504DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA418);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseManifest);
  sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t sub_240504F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_256FFBDC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFBDC0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t ResponseGenerationProtoStatementResultDigest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ResponseGenerationProtoStatementResultDigest, &qword_257001680, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_2405050D8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = a2 + a1[5];
  v6 = type metadata accessor for TranscriptProtoAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a2 + a1[6];
  v8 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  v10 = a2 + v9;
  v11 = type metadata accessor for TranscriptProtoResponseManifest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a2 + a1[9];
  v13 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2405051E8()
{
  return 0xD000000000000028;
}

uint64_t sub_240505204()
{
  return ResponseGenerationProtoStatementResultDigest.decodeMessage<A>(decoder:)();
}

uint64_t sub_240505218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResponseGenerationProtoStatementResultDigest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24050522C()
{
  sub_2404FA028(&qword_2570016C0, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
  return sub_2408E5828();
}

uint64_t sub_24050527C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97A0, (uint64_t)qword_257001650, a1);
}

uint64_t sub_240505298()
{
  sub_2404FA028(&qword_257001670, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
  return sub_2408E599C();
}

uint64_t sub_2405052D8()
{
  sub_2404FA028(&qword_257001670, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
  return sub_2408E59A8();
}

unint64_t sub_24050532C()
{
  unint64_t result;

  result = qword_257001668;
  if (!qword_257001668)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ResponseGenerationProtoResponseMode, &type metadata for ResponseGenerationProtoResponseMode);
    atomic_store(result, (unint64_t *)&qword_257001668);
  }
  return result;
}

uint64_t _s23LighthouseDataProcessor44ResponseGenerationProtoStatementResultDigestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t *v57;
  uint64_t v58;
  char v59;
  int *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  _QWORD *v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  int v91;
  int v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t *v100;
  uint64_t *v101;
  char v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;

  v155 = a2;
  v156 = a1;
  v124 = sub_2408E57A4();
  v123 = *(_QWORD *)(v124 - 8);
  v2 = MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v121 = (char *)&v120 - v4;
  v128 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v120 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016D0);
  MEMORY[0x24BDAC7A8](v126);
  v131 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v140 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v130 = (uint64_t)&v120 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v139 = (char *)&v120 - v12;
  v147 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v133 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v125 = (uint64_t *)((char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001200);
  MEMORY[0x24BDAC7A8](v132);
  v136 = (uint64_t)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v129 = (uint64_t *)((char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v135 = (uint64_t)&v120 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v148 = (uint64_t)&v120 - v20;
  v145 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v142 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v134 = (uint64_t)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD8);
  MEMORY[0x24BDAC7A8](v141);
  v146 = (uint64_t)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v137 = (uint64_t)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v143 = (uint64_t)&v120 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v144 = (uint64_t)&v120 - v28;
  v29 = type metadata accessor for TranscriptProtoAction(0);
  v151 = *(_QWORD *)(v29 - 8);
  v152 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v138 = (char *)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016D8);
  MEMORY[0x24BDAC7A8](v150);
  v153 = (uint64_t)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v149 = (uint64_t *)((char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v120 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v154 = (int *)((char *)&v120 - v38);
  v39 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v120 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CC0);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v120 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v120 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v47);
  v52 = (char *)&v120 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v120 - v53;
  sub_2403A9210(v156, (uint64_t)&v120 - v53, &qword_256FFA468);
  sub_2403A9210(v155, (uint64_t)v52, &qword_256FFA468);
  v55 = (uint64_t)&v45[*(int *)(v43 + 48)];
  sub_2403A9210((uint64_t)v54, (uint64_t)v45, &qword_256FFA468);
  sub_2403A9210((uint64_t)v52, v55, &qword_256FFA468);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  if (v56((uint64_t)v45, 1, v39) == 1)
  {
    sub_2403A97FC((uint64_t)v52, &qword_256FFA468);
    sub_2403A97FC((uint64_t)v54, &qword_256FFA468);
    if (v56(v55, 1, v39) == 1)
    {
      sub_2403A97FC((uint64_t)v45, &qword_256FFA468);
      goto LABEL_8;
    }
LABEL_6:
    v57 = &qword_257000CC0;
    v58 = (uint64_t)v45;
LABEL_41:
    sub_2403A97FC(v58, v57);
    goto LABEL_42;
  }
  sub_2403A9210((uint64_t)v45, (uint64_t)v49, &qword_256FFA468);
  if (v56(v55, 1, v39) == 1)
  {
    sub_2403A97FC((uint64_t)v52, &qword_256FFA468);
    sub_2403A97FC((uint64_t)v54, &qword_256FFA468);
    sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    goto LABEL_6;
  }
  sub_2403A91CC(v55, (uint64_t)v42, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  v59 = static ToolKitProtoToolDefinition.Version1.== infix(_:_:)(v49, v42);
  sub_240388AE4((uint64_t)v42, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2403A97FC((uint64_t)v52, &qword_256FFA468);
  sub_2403A97FC((uint64_t)v54, &qword_256FFA468);
  sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2403A97FC((uint64_t)v45, &qword_256FFA468);
  if ((v59 & 1) == 0)
    goto LABEL_42;
LABEL_8:
  v60 = (int *)type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  v61 = v156;
  v62 = v154;
  sub_2403A9210(v156 + v60[5], (uint64_t)v154, &qword_2570012B8);
  v63 = v155;
  sub_2403A9210(v155 + v60[5], (uint64_t)v37, &qword_2570012B8);
  v64 = v153;
  v65 = v153 + *(int *)(v150 + 48);
  sub_2403A9210((uint64_t)v62, v153, &qword_2570012B8);
  sub_2403A9210((uint64_t)v37, v65, &qword_2570012B8);
  v66 = v152;
  v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48);
  if (v67(v64, 1, v152) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_2570012B8);
    sub_2403A97FC((uint64_t)v62, &qword_2570012B8);
    if (v67(v65, 1, v66) == 1)
    {
      sub_2403A97FC(v64, &qword_2570012B8);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v68 = v149;
  sub_2403A9210(v64, (uint64_t)v149, &qword_2570012B8);
  if (v67(v65, 1, v66) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_2570012B8);
    sub_2403A97FC((uint64_t)v154, &qword_2570012B8);
    sub_240388AE4((uint64_t)v68, type metadata accessor for TranscriptProtoAction);
LABEL_13:
    v57 = &qword_2570016D8;
    v58 = v64;
    goto LABEL_41;
  }
  v69 = v138;
  sub_2403A91CC(v65, (uint64_t)v138, type metadata accessor for TranscriptProtoAction);
  v70 = _s23LighthouseDataProcessor21TranscriptProtoActionV2eeoiySbAC_ACtFZ_0(v68, v69);
  sub_240388AE4((uint64_t)v69, type metadata accessor for TranscriptProtoAction);
  sub_2403A97FC((uint64_t)v37, &qword_2570012B8);
  sub_2403A97FC((uint64_t)v154, &qword_2570012B8);
  sub_240388AE4((uint64_t)v68, type metadata accessor for TranscriptProtoAction);
  sub_2403A97FC(v64, &qword_2570012B8);
  if ((v70 & 1) == 0)
    goto LABEL_42;
LABEL_15:
  v71 = v144;
  sub_2403A9210(v61 + v60[6], v144, &qword_256FFA3E8);
  v154 = v60;
  v72 = v143;
  sub_2403A9210(v63 + v60[6], v143, &qword_256FFA3E8);
  v73 = v146;
  v74 = v146 + *(int *)(v141 + 48);
  sub_2403A9210(v71, v146, &qword_256FFA3E8);
  sub_2403A9210(v72, v74, &qword_256FFA3E8);
  v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
  v76 = v145;
  if (v75(v73, 1, v145) == 1)
  {
    sub_2403A97FC(v72, &qword_256FFA3E8);
    sub_2403A97FC(v71, &qword_256FFA3E8);
    v77 = v75(v74, 1, v76);
    v79 = (uint64_t)v139;
    v78 = v140;
    v80 = v147;
    v81 = v148;
    if (v77 == 1)
    {
      sub_2403A97FC(v73, &qword_256FFA3E8);
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  v82 = v137;
  sub_2403A9210(v73, v137, &qword_256FFA3E8);
  v83 = v75(v74, 1, v76);
  v84 = v147;
  v85 = v148;
  if (v83 == 1)
  {
    sub_2403A97FC(v72, &qword_256FFA3E8);
    sub_2403A97FC(v71, &qword_256FFA3E8);
    sub_240388AE4(v82, type metadata accessor for TranscriptProtoStatementOutcome);
LABEL_20:
    v57 = &qword_257000CD8;
    v58 = v73;
    goto LABEL_41;
  }
  v86 = v134;
  sub_2403A91CC(v74, v134, type metadata accessor for TranscriptProtoStatementOutcome);
  v87 = _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0(v82, v86);
  sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC(v72, &qword_256FFA3E8);
  sub_2403A97FC(v71, &qword_256FFA3E8);
  v88 = v82;
  v79 = (uint64_t)v139;
  v78 = v140;
  sub_240388AE4(v88, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC(v73, &qword_256FFA3E8);
  v80 = v84;
  v81 = v85;
  v61 = v156;
  if ((v87 & 1) == 0)
    goto LABEL_42;
LABEL_22:
  v89 = v154;
  v90 = v154[7];
  v91 = *(unsigned __int8 *)(v61 + v90);
  v92 = *(unsigned __int8 *)(v63 + v90);
  if (v91 == 2)
  {
    if (v92 != 2)
      goto LABEL_42;
LABEL_27:
    v94 = (uint64_t)v78;
    sub_2403A9210(v61 + v154[8], v81, &qword_256FFA418);
    v95 = v135;
    sub_2403A9210(v63 + v89[8], v135, &qword_256FFA418);
    v96 = v136;
    v97 = v136 + *(int *)(v132 + 48);
    sub_2403A9210(v81, v136, &qword_256FFA418);
    v98 = v96;
    sub_2403A9210(v95, v97, &qword_256FFA418);
    v99 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
    if (v99(v98, 1, v80) == 1)
    {
      sub_2403A97FC(v95, &qword_256FFA418);
      v98 = v136;
      sub_2403A97FC(v81, &qword_256FFA418);
      if (v99(v97, 1, v80) == 1)
      {
        sub_2403A97FC(v98, &qword_256FFA418);
LABEL_34:
        v103 = v154;
        sub_2403A9210(v61 + v154[9], v79, &qword_256FFBDC0);
        v104 = v130;
        sub_2403A9210(v63 + v103[9], v130, &qword_256FFBDC0);
        v105 = v131;
        v106 = v131 + *(int *)(v126 + 48);
        sub_2403A9210(v79, v131, &qword_256FFBDC0);
        v98 = v105;
        sub_2403A9210(v104, v106, &qword_256FFBDC0);
        v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
        v108 = v128;
        if (v107(v98, 1, v128) == 1)
        {
          sub_2403A97FC(v104, &qword_256FFBDC0);
          v98 = v131;
          sub_2403A97FC(v79, &qword_256FFBDC0);
          if (v107(v106, 1, v108) == 1)
          {
            sub_2403A97FC(v98, &qword_256FFBDC0);
LABEL_45:
            v112 = v61 + v103[10];
            v113 = v123;
            v114 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
            v115 = v121;
            v116 = v124;
            v114(v121, v112, v124);
            v117 = v63 + v103[10];
            v118 = v122;
            v114(v122, v117, v116);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v93 = sub_2408E5CD8();
            v119 = *(void (**)(char *, uint64_t))(v113 + 8);
            v119(v118, v116);
            v119(v115, v116);
            return v93 & 1;
          }
          goto LABEL_39;
        }
        sub_2403A9210(v98, v94, &qword_256FFBDC0);
        if (v107(v106, 1, v108) == 1)
        {
          sub_2403A97FC(v130, &qword_256FFBDC0);
          sub_2403A97FC(v79, &qword_256FFBDC0);
          sub_240388AE4(v94, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
LABEL_39:
          v57 = &qword_2570016D0;
          goto LABEL_40;
        }
        v110 = v120;
        sub_2403A91CC(v106, v120, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
        v111 = _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v94, v110);
        sub_240388AE4(v110, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
        sub_2403A97FC(v130, &qword_256FFBDC0);
        sub_2403A97FC(v79, &qword_256FFBDC0);
        sub_240388AE4(v94, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
        sub_2403A97FC(v98, &qword_256FFBDC0);
        if ((v111 & 1) != 0)
          goto LABEL_45;
LABEL_42:
        v93 = 0;
        return v93 & 1;
      }
    }
    else
    {
      v100 = v129;
      sub_2403A9210(v98, (uint64_t)v129, &qword_256FFA418);
      if (v99(v97, 1, v80) != 1)
      {
        v101 = v125;
        sub_2403A91CC(v97, (uint64_t)v125, type metadata accessor for TranscriptProtoResponseManifest);
        v102 = _s23LighthouseDataProcessor31TranscriptProtoResponseManifestV2eeoiySbAC_ACtFZ_0(v100, v101);
        sub_240388AE4((uint64_t)v101, type metadata accessor for TranscriptProtoResponseManifest);
        sub_2403A97FC(v135, &qword_256FFA418);
        sub_2403A97FC(v148, &qword_256FFA418);
        sub_240388AE4((uint64_t)v100, type metadata accessor for TranscriptProtoResponseManifest);
        sub_2403A97FC(v98, &qword_256FFA418);
        if ((v102 & 1) == 0)
          goto LABEL_42;
        goto LABEL_34;
      }
      sub_2403A97FC(v135, &qword_256FFA418);
      sub_2403A97FC(v148, &qword_256FFA418);
      sub_240388AE4((uint64_t)v100, type metadata accessor for TranscriptProtoResponseManifest);
    }
    v57 = &qword_257001200;
LABEL_40:
    v58 = v98;
    goto LABEL_41;
  }
  v93 = 0;
  if (v92 != 2 && ((v92 ^ v91) & 1) == 0)
    goto LABEL_27;
  return v93 & 1;
}

uint64_t _s23LighthouseDataProcessor023ResponseGenerationProtodE5InputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
        goto LABEL_17;
      if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
        || (v12 = 0, (sub_2408E617C() & 1) != 0))
      {
        if ((sub_2408C23CC(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)) & 1) != 0)
        {
          v14 = type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
          v15 = a1 + *(int *)(v14 + 36);
          v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
          v16(v10, v15, v4);
          v16(v8, a2 + *(int *)(v14 + 36), v4);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v12 = sub_2408E5CD8();
          v17 = *(void (**)(char *, uint64_t))(v5 + 8);
          v17(v8, v4);
          v17(v10, v4);
          return v12 & 1;
        }
LABEL_17:
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

unint64_t sub_2405064B0()
{
  unint64_t result;

  result = qword_257001688;
  if (!qword_257001688)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ResponseGenerationProtoResponseMode, &type metadata for ResponseGenerationProtoResponseMode);
    atomic_store(result, (unint64_t *)&qword_257001688);
  }
  return result;
}

unint64_t sub_2405064F8()
{
  unint64_t result;

  result = qword_257001690;
  if (!qword_257001690)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ResponseGenerationProtoResponseMode, &type metadata for ResponseGenerationProtoResponseMode);
    atomic_store(result, (unint64_t *)&qword_257001690);
  }
  return result;
}

uint64_t sub_24050653C()
{
  return sub_2404FA028(&qword_257001698, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_240506568()
{
  return sub_2404FA028(&qword_2570016A0, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_240506594()
{
  return sub_2404FA028(&qword_257001678, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2405065C0()
{
  return sub_2404FA028(&qword_2570016A8, type metadata accessor for ResponseGenerationProtoResponseGenerationInput, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2405065EC()
{
  return sub_2404FA028(&qword_2570016B0, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_240506618()
{
  return sub_2404FA028(&qword_257001670, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_240506644()
{
  return sub_2404FA028(&qword_257001680, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_240506670()
{
  return sub_2404FA028(&qword_2570016B8, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t)&protocol conformance descriptor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t getFailureInfo(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v59 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D8);
  MEMORY[0x24BDAC7A8](v1);
  v53 = (uint64_t)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v51 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v50 - v6;
  v7 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v12 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  v56 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_2403A9210(v59 + *(int *)(v31 + 24), (uint64_t)v26, &qword_256FFA420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    v32 = &qword_256FFA420;
    v33 = (uint64_t)v26;
LABEL_15:
    sub_2403A97FC(v33, v32);
    return 0;
  }
  v35 = v56;
  v34 = (uint64_t)v57;
  v36 = (uint64_t)v23;
  v37 = (uint64_t)v58;
  sub_2403A91CC((uint64_t)v26, (uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
  sub_2403A9210((uint64_t)v30, (uint64_t)v19, &qword_256FFA3E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
    v32 = &qword_256FFA3E8;
LABEL_14:
    v33 = (uint64_t)v19;
    goto LABEL_15;
  }
  sub_2403A91CC((uint64_t)v19, v36, type metadata accessor for TranscriptProtoStatementOutcome);
  v19 = (char *)v34;
  sub_2403A9210(v36, v34, &qword_256FFA3E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v34, 1, v55) == 1)
  {
    sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
    sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
    v32 = &qword_256FFA3E0;
    goto LABEL_14;
  }
  sub_2403A91CC(v34, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  v38 = v54;
  sub_2403AE1A4((uint64_t)v16, v54, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    v39 = v37;
    sub_2403A91CC(v38, v37, type metadata accessor for TranscriptProtoActionFailure);
    v40 = v53;
    sub_2403A9210(v37, v53, &qword_256FFA3D8);
    v41 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41) == 1)
    {
      sub_2403A97FC(v40, &qword_256FFA3D8);
      v42 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
      v19 = v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v52, 1, 1, v42);
    }
    else
    {
      v19 = v52;
      sub_2403A9210(v40, (uint64_t)v52, &qword_256FFA3D0);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoActionFailureFailure);
      v43 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v19, 1, v43) != 1)
      {
        v48 = v51;
        sub_2403A9210((uint64_t)v19, v51, &qword_256FFA3D0);
        v49 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 16, v49))
        {
          type metadata accessor for FailureInfo();
          v46 = swift_allocObject();
          *(_WORD *)(v46 + 16) = 9477;
          *(_BYTE *)(v46 + 18) = 40;
          *(_QWORD *)(v46 + 32) = 0;
          *(_QWORD *)(v46 + 40) = 0;
          *(_QWORD *)(v46 + 24) = 0;
          swift_bridgeObjectRelease();
          sub_240388AE4(v39, type metadata accessor for TranscriptProtoActionFailure);
          sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_240388AE4(v48, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
          sub_2403A97FC((uint64_t)v19, &qword_256FFA3D0);
          return v46;
        }
        sub_240388AE4(v39, type metadata accessor for TranscriptProtoActionFailure);
        sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
        sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
        v44 = type metadata accessor for TranscriptProtoActionFailureFailureEnum;
        v45 = v48;
        goto LABEL_13;
      }
    }
    sub_240388AE4(v37, type metadata accessor for TranscriptProtoActionFailure);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
    v44 = type metadata accessor for TranscriptProtoStatementResultPayload;
    v45 = (uint64_t)v30;
LABEL_13:
    sub_240388AE4(v45, v44);
    v32 = &qword_256FFA3D0;
    goto LABEL_14;
  }
  sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoStatementResultPayload);
  sub_240388AE4(v38, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  return 0;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;

  v2 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoExecutorError(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v29 - v13;
  sub_2403A9210(a1, (uint64_t)v29 - v13, &qword_256FFA388);
  v15 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v14, (uint64_t)v12, &qword_256FFA388);
    v23 = (char *)&loc_2405070A0 + 4 * byte_240900AA0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (qword_254355DF0 != -1)
    swift_once();
  v16 = sub_2408E5C48();
  __swift_project_value_buffer(v16, (uint64_t)qword_254356428);
  sub_2403AE1A4(a1, (uint64_t)v4, type metadata accessor for TranscriptProtoSessionError);
  v17 = sub_2408E5C3C();
  v18 = sub_2408E5EA0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v30 = v20;
    *(_DWORD *)v19 = 136315138;
    v29[1] = v19 + 4;
    sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
    v21 = sub_2408E599C();
    v29[2] = sub_2403B3ED0(v21, v22, &v30);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionError);
    _os_log_impl(&dword_240347000, v17, v18, "Unrecognized error from criticalError: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v20, -1, -1);
    MEMORY[0x242684668](v19, -1, -1);
  }
  else
  {
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionError);
  }

  sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  v24 = sub_2408E599C();
  v26 = v25;
  type metadata accessor for FailureInfo();
  v27 = swift_allocObject();
  *(_WORD *)(v27 + 16) = 10497;
  *(_BYTE *)(v27 + 18) = 41;
  *(_QWORD *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 32) = v24;
  *(_QWORD *)(v27 + 40) = v26;
  swift_bridgeObjectRelease();
  sub_2403A97FC((uint64_t)v14, &qword_256FFA388);
  return v27;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  sub_2403A9210(a1, (uint64_t)&v18 - v12, &qword_256FFA370);
  v14 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14) != 1)
  {
    sub_2403A9210((uint64_t)v13, (uint64_t)v11, &qword_256FFA370);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2403AE1A4((uint64_t)v7, (uint64_t)v5, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    type metadata accessor for PNRError();
    v15 = swift_allocObject();
    sub_240508AD8(v5);
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  sub_2403A97FC((uint64_t)v13, &qword_256FFA370);
  type metadata accessor for FailureInfo();
  v16 = swift_allocObject();
  *(_WORD *)(v16 + 16) = 10498;
  *(_BYTE *)(v16 + 18) = 41;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 24) = v15;
  swift_bridgeObjectRelease();
  return v16;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v23 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA380);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  sub_2403A9210(a1, (uint64_t)&v23 - v13, &qword_256FFA380);
  v15 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    type metadata accessor for FailureInfo();
    v16 = swift_allocObject();
    v17 = v16;
    *(_WORD *)(v16 + 16) = 10500;
    *(_BYTE *)(v16 + 18) = 41;
    *(_QWORD *)(v16 + 40) = 0;
    *(_QWORD *)(v16 + 24) = 0;
LABEL_5:
    *(_QWORD *)(v16 + 32) = 0;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_2403A9210((uint64_t)v14, (uint64_t)v12, &qword_256FFA380);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
  {
    type metadata accessor for PNRError();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_BYTE *)(v18 + 40) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v18 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError, 1, 1, v2);
    *(_OWORD *)(v18 + 16) = xmmword_240900F20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 32) = 0;
    *(_BYTE *)(v18 + 40) = 1;
    type metadata accessor for FailureInfo();
    v16 = swift_allocObject();
    v17 = v16;
    *(_WORD *)(v16 + 16) = 10500;
    *(_BYTE *)(v16 + 18) = 41;
    *(_QWORD *)(v16 + 40) = 0;
    *(_QWORD *)(v16 + 24) = v18;
    goto LABEL_5;
  }
  sub_2403A91CC((uint64_t)v12, (uint64_t)v8, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_2403AE1A4((uint64_t)v8, (uint64_t)v6, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  type metadata accessor for PNRError();
  v19 = swift_allocObject();
  sub_240508AD8(v6);
  if (*v8 == 0xD000000000000024 && v8[1] == 0x8000000240927EE0 || (sub_2408E617C() & 1) != 0)
  {
    type metadata accessor for FailureInfo();
    v20 = swift_allocObject();
    v17 = v20;
    *(_WORD *)(v20 + 16) = 10500;
    v21 = 41;
  }
  else
  {
    type metadata accessor for FailureInfo();
    v20 = swift_allocObject();
    v17 = v20;
    *(_WORD *)(v20 + 16) = 9477;
    v21 = 39;
  }
  *(_BYTE *)(v20 + 18) = v21;
  *(_QWORD *)(v20 + 32) = 0;
  *(_QWORD *)(v20 + 40) = 0;
  *(_QWORD *)(v20 + 24) = v19;
  swift_bridgeObjectRelease();
  sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoIntelligenceFlowError);
LABEL_12:
  sub_2403A97FC((uint64_t)v14, &qword_256FFA380);
  return v17;
}

uint64_t type metadata accessor for FailureInfo()
{
  return objc_opt_self();
}

uint64_t updatePlannerFailureSubtype(of:for:using:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  int64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;

  v4 = a1;
  if (!a1 || *(_BYTE *)(a1 + 16) != 3)
    return swift_retain();
  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = 0;
  v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v66 = v4;
  while (1)
  {
    while (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      if (*(_QWORD *)(a3 + 16))
        goto LABEL_23;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_75;
    if (v15 >= v11)
      goto LABEL_32;
    v16 = *(_QWORD *)(v7 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v11)
        goto LABEL_32;
      v16 = *(_QWORD *)(v7 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v11)
          goto LABEL_32;
        v16 = *(_QWORD *)(v7 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_22:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_23:
      v3 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v14);
      sub_240509F54(v3);
      if ((v18 & 1) != 0)
      {
        v19 = sub_240509F54(v3);
        if ((v20 & 1) != 0)
        {
          v21 = v4;
          v4 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v19);
          *(_BYTE *)(v21 + 17) = *(_BYTE *)(v4 + 17);
          v77 = v3;
          v78 = v4;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA618);
          v22 = (_QWORD *)sub_2408E605C();
          v23 = v3;
          v3 = v4;
          v24 = sub_240509F54(v23);
          if ((v25 & 1) != 0)
            goto LABEL_78;
          v22[(v24 >> 6) + 8] |= 1 << v24;
          v26 = 8 * v24;
          *(_QWORD *)(v22[6] + v26) = v23;
          *(_QWORD *)(v22[7] + v26) = v4;
          v27 = v22[2];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (v28)
            goto LABEL_79;
          v22[2] = v29;
          swift_retain_n();
          swift_retain();
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2570016E8);
          swift_arrayDestroy();
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v68 = sub_24050A644(0, v68[2] + 1, 1, v68);
          v31 = v68[2];
          v30 = v68[3];
          v3 = v31 + 1;
          if (v31 >= v30 >> 1)
            v68 = sub_24050A644((_QWORD *)(v30 > 1), v31 + 1, 1, v68);
          v68[2] = v3;
          v68[v31 + 4] = v22;
          swift_release();
          v4 = v66;
        }
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v11)
    goto LABEL_32;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      goto LABEL_77;
    if (v12 >= v11)
      break;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_32:
  swift_release();
  v32 = v68[2];
  if (v32 < 2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_retain();
  }
  v76 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_24050AF9C(0, v32, 0);
  v33 = 0;
  v34 = v76;
  v67 = v32;
  while (1)
  {
    if (v33 == v32)
      goto LABEL_76;
    v69 = v33;
    v35 = v68[v33 + 4];
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
      break;
    swift_bridgeObjectRetain();
    v37 = MEMORY[0x24BEE4AF8];
LABEL_59:
    v74[0] = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
    v4 = sub_2405015C0();
    v3 = sub_2408E5CC0();
    v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v76 = v34;
    v57 = *(_QWORD *)(v34 + 16);
    v56 = *(_QWORD *)(v34 + 24);
    if (v57 >= v56 >> 1)
    {
      sub_24050AF9C(v56 > 1, v57 + 1, 1);
      v34 = v76;
    }
    v33 = v69 + 1;
    *(_QWORD *)(v34 + 16) = v57 + 1;
    v58 = v34 + 16 * v57;
    *(_QWORD *)(v58 + 32) = v3;
    *(_QWORD *)(v58 + 40) = v55;
    if (v69 + 1 == v32)
    {
      swift_bridgeObjectRelease_n();
      v74[0] = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
      v3 = sub_2408E5CC0();
      v4 = v60;
      swift_bridgeObjectRelease();
      if (qword_256FFA0A8 != -1)
        goto LABEL_80;
      goto LABEL_66;
    }
  }
  v75 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_24050AF9C(0, v36, 0);
  v37 = v75;
  v3 = sub_24050B31C(v35);
  v4 = v38;
  v39 = 0;
  v40 = v35 + 64;
  v41 = *(_BYTE *)(v35 + 32);
  v70 = v36;
  v71 = v38;
  v72 = v35 + 64;
  while (2)
  {
    if ((v3 & 0x8000000000000000) == 0 && v3 < 1 << v41)
    {
      v45 = (unint64_t)v3 >> 6;
      if ((*(_QWORD *)(v40 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0)
        goto LABEL_70;
      if (*(_DWORD *)(v35 + 36) != (_DWORD)v4)
        goto LABEL_71;
      v74[0] = 0x203A64496E617053;
      v74[1] = 0xE800000000000000;
      v73 = v39;
      swift_retain();
      sub_2408E6170();
      sub_2408E5D50();
      swift_bridgeObjectRelease();
      sub_2408E5D50();
      sub_240509A88();
      sub_2408E5D50();
      swift_release();
      swift_bridgeObjectRelease();
      v75 = v37;
      v47 = *(_QWORD *)(v37 + 16);
      v46 = *(_QWORD *)(v37 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_24050AF9C(v46 > 1, v47 + 1, 1);
        v37 = v75;
      }
      *(_QWORD *)(v37 + 16) = v47 + 1;
      v48 = v37 + 16 * v47;
      *(_QWORD *)(v48 + 32) = 0x203A64496E617053;
      *(_QWORD *)(v48 + 40) = 0xE800000000000000;
      v41 = *(_BYTE *)(v35 + 32);
      v42 = 1 << v41;
      if (v3 >= 1 << v41)
        goto LABEL_72;
      v40 = v35 + 64;
      v49 = *(_QWORD *)(v72 + 8 * v45);
      if ((v49 & (1 << v3)) == 0)
        goto LABEL_73;
      if (*(_DWORD *)(v35 + 36) != (_DWORD)v4)
        goto LABEL_74;
      v50 = v49 & (-2 << (v3 & 0x3F));
      if (v50)
      {
        v42 = __clz(__rbit64(v50)) | v3 & 0xFFFFFFFFFFFFFFC0;
        v43 = v70;
        v44 = v73;
      }
      else
      {
        v51 = v45 + 1;
        v52 = (v42 + 63) >> 6;
        v43 = v70;
        v44 = v73;
        if (v45 + 1 < v52)
        {
          v53 = *(_QWORD *)(v72 + 8 * v51);
          if (v53)
            goto LABEL_51;
          v51 = v45 + 2;
          if (v45 + 2 < v52)
          {
            v53 = *(_QWORD *)(v72 + 8 * v51);
            if (v53)
            {
LABEL_51:
              v42 = __clz(__rbit64(v53)) + (v51 << 6);
            }
            else
            {
              while (v52 - 3 != v45)
              {
                v53 = *(_QWORD *)(v35 + 88 + 8 * v45++);
                if (v53)
                {
                  v51 = v45 + 2;
                  goto LABEL_51;
                }
              }
            }
          }
        }
      }
      v39 = v44 + 1;
      v4 = v71;
      v3 = v42;
      if (v39 == v43)
      {
        v32 = v67;
        goto LABEL_59;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  swift_once();
LABEL_66:
  v61 = sub_2408E5C48();
  __swift_project_value_buffer(v61, (uint64_t)qword_257072498);
  swift_bridgeObjectRetain();
  v62 = sub_2408E5C3C();
  v63 = sub_2408E5EA0();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v74[0] = v65;
    *(_DWORD *)v64 = 136315138;
    swift_bridgeObjectRetain();
    v76 = sub_2403B3ED0(v3, v4, v74);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v62, v63, "In updatePlannerFailureSubtype - Found multiple spans with failures, which is unexpected.\n    %s", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v65, -1, -1);
    MEMORY[0x242684668](v64, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease_n();
  }
  return swift_retain();
}

uint64_t getPlannerFailureInfo(from:iferror:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2408E5B64();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v14 = sub_2408E5AB0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x24BE585B8])
  {
    v19 = 8;
    v20 = 13;
  }
  else if (v18 == *MEMORY[0x24BE585A8])
  {
    v19 = 8;
    v20 = 14;
  }
  else if (v18 == *MEMORY[0x24BE585A0])
  {
    v19 = 8;
    v20 = 15;
  }
  else if (v18 == *MEMORY[0x24BE585F0])
  {
    v19 = 7;
    v20 = 16;
  }
  else if (v18 == *MEMORY[0x24BE58608])
  {
    v19 = 7;
    v20 = 17;
  }
  else if (v18 == *MEMORY[0x24BE585D8])
  {
    v19 = 8;
    v20 = 18;
  }
  else if (v18 == *MEMORY[0x24BE585E8])
  {
    v19 = 8;
    v20 = 19;
  }
  else if (v18 == *MEMORY[0x24BE585B0])
  {
    v19 = 8;
    v20 = 20;
  }
  else if (v18 == *MEMORY[0x24BE585C0])
  {
    v19 = 8;
    v20 = 21;
  }
  else if (v18 == *MEMORY[0x24BE58680])
  {
    v19 = 11;
    v20 = 32;
  }
  else if (v18 == *MEMORY[0x24BE58688])
  {
    v19 = 11;
    v20 = 33;
  }
  else if (v18 == *MEMORY[0x24BE586B8])
  {
    v19 = 11;
    v20 = 34;
  }
  else if (v18 == *MEMORY[0x24BE585C8])
  {
    v19 = 9;
    v20 = 22;
  }
  else if (v18 == *MEMORY[0x24BE585E0])
  {
    v19 = 9;
    v20 = 23;
  }
  else if (v18 == *MEMORY[0x24BE58620])
  {
    v19 = 10;
    v20 = 24;
  }
  else if (v18 == *MEMORY[0x24BE58628])
  {
    v19 = 10;
    v20 = 25;
  }
  else if (v18 == *MEMORY[0x24BE58690])
  {
    v19 = 10;
    v20 = 26;
  }
  else if (v18 == *MEMORY[0x24BE58638])
  {
    v19 = 10;
    v20 = 27;
  }
  else if (v18 == *MEMORY[0x24BE58678])
  {
    v19 = 10;
    v20 = 28;
  }
  else if (v18 == *MEMORY[0x24BE58670])
  {
    v19 = 10;
    v20 = 29;
  }
  else if (v18 == *MEMORY[0x24BE586A0])
  {
    v19 = 10;
    v20 = 30;
  }
  else if (v18 == *MEMORY[0x24BE58658])
  {
    v19 = 10;
    v20 = 31;
  }
  else if (v18 == *MEMORY[0x24BE58600])
  {
    v19 = 12;
    v20 = 35;
  }
  else if (v18 == *MEMORY[0x24BE58618])
  {
    v19 = 12;
    v20 = 36;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v20 = 41;
    v19 = 41;
  }
  sub_2403A9210(a2, (uint64_t)v6, &qword_2570016F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2403A97FC((uint64_t)v6, &qword_2570016F8);
    v21 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for PNRError();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 24) = 0;
    *(_QWORD *)(v21 + 32) = 0;
    *(_QWORD *)(v21 + 16) = 0;
    *(_BYTE *)(v21 + 40) = 1;
    v22 = v21 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError;
    v23 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(_QWORD *)(v21 + 16) = sub_2408E5B58();
    *(_QWORD *)(v21 + 24) = v24;
    swift_bridgeObjectRelease();
    v25 = sub_2408E5B4C();
    if ((v25 & 0x100000000) != 0)
    {
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v11, v7);
      v28(v13, v7);
    }
    else
    {
      v26 = v25;
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v27(v11, v7);
      *(_QWORD *)(v21 + 32) = v26;
      *(_BYTE *)(v21 + 40) = 0;
      v27(v13, v7);
    }
  }
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_2408E5F84();
  swift_bridgeObjectRelease();
  v33 = 0xD000000000000013;
  v34 = 0x8000000240927F10;
  sub_2408E5AA4();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v29 = v33;
  v30 = v34;
  type metadata accessor for FailureInfo();
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = 3;
  *(_BYTE *)(v31 + 17) = v19;
  *(_BYTE *)(v31 + 18) = v20;
  *(_QWORD *)(v31 + 24) = v21;
  *(_QWORD *)(v31 + 32) = v29;
  *(_QWORD *)(v31 + 40) = v30;
  swift_bridgeObjectRelease();
  return v31;
}

LighthouseDataProcessor::FailureTypeEnum_optional __swiftcall FailureTypeEnum.init(rawValue:)(Swift::Int64 rawValue)
{
  char *v1;
  char v2;

  if (rawValue <= 520300)
  {
    if (rawValue > 5400)
    {
      if (rawValue <= 520101)
      {
        switch(rawValue)
        {
          case 5401:
            *v1 = 37;
            return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
          case 5402:
            *v1 = 38;
            return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
          case 520101:
            *v1 = 13;
            return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
      }
      else if (rawValue > 520200)
      {
        if (rawValue == 520201)
        {
          *v1 = 16;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
        if (rawValue == 520202)
        {
          *v1 = 17;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
      }
      else
      {
        if (rawValue == 520102)
        {
          *v1 = 14;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
        if (rawValue == 520103)
        {
          *v1 = 15;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
      }
      goto LABEL_66;
    }
    switch(rawValue)
    {
      case 5201:
        *v1 = 6;
        break;
      case 5202:
        *v1 = 7;
        break;
      case 5203:
        *v1 = 8;
        break;
      case 5204:
        *v1 = 9;
        break;
      case 5205:
        *v1 = 10;
        break;
      case 5206:
        *v1 = 11;
        break;
      case 5207:
        *v1 = 12;
        break;
      default:
        v2 = 0;
        switch(rawValue)
        {
          case 0:
            goto LABEL_18;
          case 50:
            v2 = 1;
LABEL_18:
            *v1 = v2;
            break;
          case 51:
            *v1 = 2;
            break;
          case 52:
            *v1 = 3;
            break;
          case 53:
            *v1 = 4;
            break;
          case 54:
            *v1 = 5;
            break;
          default:
            goto LABEL_66;
        }
        break;
    }
  }
  else
  {
    if (rawValue > 520500)
    {
      if (rawValue <= 520700)
      {
        switch(rawValue)
        {
          case 520501:
            *v1 = 24;
            break;
          case 520502:
            *v1 = 25;
            break;
          case 520503:
            *v1 = 26;
            break;
          case 520504:
            *v1 = 27;
            break;
          case 520505:
            *v1 = 28;
            break;
          case 520506:
            *v1 = 29;
            break;
          case 520507:
            *v1 = 30;
            break;
          case 520508:
            *v1 = 31;
            break;
          case 520601:
            *v1 = 32;
            break;
          case 520602:
            *v1 = 33;
            break;
          case 520603:
            *v1 = 34;
            break;
          default:
            goto LABEL_66;
        }
        return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
      }
      if (rawValue > 540100)
      {
        if (rawValue == 540101)
        {
          *v1 = 39;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
        if (rawValue == 540102)
        {
          *v1 = 40;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
      }
      else
      {
        if (rawValue == 520701)
        {
          *v1 = 35;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
        if (rawValue == 520702)
        {
          *v1 = 36;
          return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
        }
      }
LABEL_66:
      *v1 = 41;
      return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
    }
    switch(rawValue)
    {
      case 520301:
        *v1 = 18;
        break;
      case 520302:
        *v1 = 19;
        break;
      case 520303:
        *v1 = 20;
        break;
      case 520304:
        *v1 = 21;
        break;
      default:
        if (rawValue == 520401)
        {
          *v1 = 22;
        }
        else
        {
          if (rawValue != 520402)
            goto LABEL_66;
          *v1 = 23;
        }
        break;
    }
  }
  return (LighthouseDataProcessor::FailureTypeEnum_optional)rawValue;
}

uint64_t FailureTypeEnum.rawValue.getter()
{
  char *v0;

  return qword_240900DD0[*v0];
}

BOOL sub_2405089CC(char *a1, char *a2)
{
  return qword_240900DD0[*a1] == qword_240900DD0[*a2];
}

uint64_t sub_2405089F0()
{
  sub_2408E6218();
  sub_2408E6230();
  return sub_2408E623C();
}

uint64_t sub_240508A3C()
{
  return sub_2408E6230();
}

uint64_t sub_240508A70()
{
  sub_2408E6218();
  sub_2408E6230();
  return sub_2408E623C();
}

LighthouseDataProcessor::FailureTypeEnum_optional sub_240508AB8(Swift::Int64 *a1)
{
  return FailureTypeEnum.init(rawValue:)(*a1);
}

void sub_240508AC0(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_240900DD0[*v1];
}

uint64_t sub_240508AD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  v6 = v1 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError;
  v7 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = a1[1];
  *(_QWORD *)(v1 + 16) = *a1;
  *(_QWORD *)(v1 + 24) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1[2];
  *(_BYTE *)(v1 + 40) = 0;
  sub_2403A91CC((uint64_t)a1, (uint64_t)v5, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  v8((uint64_t)v5, 0, 1, v7);
  swift_beginAccess();
  sub_24050BE9C((uint64_t)v5, v6);
  swift_endAccess();
  return v1;
}

uint64_t sub_240508C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  v8 = *(_QWORD *)(v0 + 32);
  if (*(_BYTE *)(v0 + 40))
    v8 = 0;
  v12[3] = v8;
  sub_2408E6170();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v9 = v12[0];
  v10 = v0 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError;
  swift_beginAccess();
  sub_2403A9210(v10, (uint64_t)v3, &qword_2570011A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_2403A97FC((uint64_t)v3, &qword_2570011A8);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2403A91CC((uint64_t)v3, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    v9 = sub_2408E599C();
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  return v9;
}

void *sub_240508E0C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSageErrorInfo), sel_init);
  v2 = v1;
  if (v1)
  {
    if (*(_QWORD *)(v0 + 24))
    {
      v3 = v1;
      swift_bridgeObjectRetain();
      v4 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = v1;
      v4 = 0;
    }
    objc_msgSend(v2, sel_setErrorDomain_, v4);

    if (*(_BYTE *)(v0 + 40))
      v6 = 0;
    else
      v6 = *(_QWORD *)(v0 + 32);
    objc_msgSend(v2, sel_setErrorCode_, v6);
  }
  return v2;
}

unint64_t sub_240508EC8()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  __int128 v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA668);
  inited = swift_initStackObject();
  v2 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_2408EADC0;
  *(_QWORD *)(inited + 32) = 0x6E69616D6F64;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v3 = *(_QWORD *)(v0 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 16);
    v11 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v10 = v4;
    *((_QWORD *)&v10 + 1) = v3;
    sub_2403A9254(&v10, (_OWORD *)(inited + 48));
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v2[9] = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    v2[6] = v5;
  }
  v2[10] = 1701080931;
  v2[11] = 0xE400000000000000;
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v2[15] = sub_240422180(0, (unint64_t *)&qword_257001700);
    swift_bridgeObjectRetain();
LABEL_7:
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(v0 + 32);
  v7 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_initWithLongLong_, v6);
  v2[15] = sub_240422180(0, (unint64_t *)&qword_257001700);
  if (!v8)
    goto LABEL_7;
LABEL_8:
  v2[12] = v8;
  return sub_2403A8518((uint64_t)v2);
}

uint64_t PNRError.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2403A97FC(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError, &qword_2570011A8);
  return v0;
}

uint64_t PNRError.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2403A97FC(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor8PNRError_transcriptIFError, &qword_2570011A8);
  return swift_deallocClassInstance();
}

uint64_t sub_2405090C8(_BYTE *a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  char v8;

  v7 = *a2;
  v8 = *a3;
  *(_BYTE *)(v6 + 16) = *a1;
  *(_BYTE *)(v6 + 17) = v7;
  *(_BYTE *)(v6 + 18) = v8;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_240509104()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;

  if (*(_BYTE *)(v0 + 16) != 41)
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSageFailureInfo), sel_init);
    if (v1)
    {
      v2 = v1;
      sub_2408E6170();
      v3 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setFailureType_, v3);

    }
    __asm { BR              X11 }
  }
  return 0;
}

uint64_t sub_240509490()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(char *)(v0 + 16);
  if (v1 != 41)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95888]), sel_init);
    if (v2)
      objc_msgSend(v2, sel_setFailureType_, qword_240900DD0[v1]);
    __asm { BR              X10 }
  }
  return 0;
}

unint64_t sub_240509730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v18;
  uint64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA668);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EB740;
  *(_QWORD *)(inited + 32) = 0x546572756C696166;
  *(_QWORD *)(inited + 40) = 0xEB00000000657079;
  v3 = MEMORY[0x24BEE0D00];
  if (*(_BYTE *)(v0 + 16) == 41)
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    *(_QWORD *)(inited + 72) = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    *(_QWORD *)(inited + 48) = v4;
  }
  else
  {
    v19 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v18 = sub_2408E5D38();
    *((_QWORD *)&v18 + 1) = v5;
    sub_2403A9254(&v18, (_OWORD *)(inited + 48));
  }
  strcpy((char *)(inited + 80), "failureSubType");
  *(_BYTE *)(inited + 95) = -18;
  if (*(_BYTE *)(v0 + 17) == 41)
  {
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    *(_QWORD *)(inited + 120) = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    *(_QWORD *)(inited + 96) = v6;
  }
  else
  {
    LOBYTE(v18) = *(_BYTE *)(v0 + 17);
    v7 = sub_2408E5D38();
    v19 = v3;
    *(_QWORD *)&v18 = v7;
    *((_QWORD *)&v18 + 1) = v8;
    sub_2403A9254(&v18, (_OWORD *)(inited + 96));
  }
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  *(_QWORD *)(inited + 136) = 0x8000000240927F30;
  if (*(_BYTE *)(v0 + 18) == 41)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    *(_QWORD *)(inited + 168) = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    *(_QWORD *)(inited + 144) = v9;
  }
  else
  {
    LOBYTE(v18) = *(_BYTE *)(v0 + 18);
    v10 = sub_2408E5D38();
    v19 = v3;
    *(_QWORD *)&v18 = v10;
    *((_QWORD *)&v18 + 1) = v11;
    sub_2403A9254(&v18, (_OWORD *)(inited + 144));
  }
  *(_QWORD *)(inited + 176) = 0x726F727265;
  *(_QWORD *)(inited + 184) = 0xE500000000000000;
  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    v12 = sub_240508EC8();
    swift_release();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA678);
    *(_QWORD *)&v18 = v12;
    sub_2403A9254(&v18, (_OWORD *)(inited + 192));
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    *(_QWORD *)(inited + 216) = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    *(_QWORD *)(inited + 192) = v13;
  }
  *(_QWORD *)(inited + 224) = 0x666E496775626564;
  *(_QWORD *)(inited + 232) = 0xE90000000000006FLL;
  v14 = *(_QWORD *)(v0 + 40);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + 32);
    v19 = v3;
    *(_QWORD *)&v18 = v15;
    *((_QWORD *)&v18 + 1) = v14;
    sub_2403A9254(&v18, (_OWORD *)(inited + 240));
  }
  else
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    *(_QWORD *)(inited + 264) = sub_240422180(0, (unint64_t *)&qword_256FFA670);
    *(_QWORD *)(inited + 240) = v16;
  }
  swift_bridgeObjectRetain();
  return sub_2403A8518(inited);
}

uint64_t sub_240509A88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = 0xE000000000000000;
  if (*(_BYTE *)(v0 + 16) == 41)
  {
    v2 = 0;
  }
  else
  {
    sub_2408E5F84();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "\nfailureType: ");
    HIBYTE(v4[1]) = -18;
    sub_2408E6170();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    sub_2408E5D50();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257001708);
    sub_2408E5D38();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    v2 = v4[0];
    v1 = v4[1];
  }
  if (*(_BYTE *)(v0 + 17) != 41)
  {
    sub_2408E5F84();
    swift_bridgeObjectRelease();
    v4[0] = v2;
    v4[1] = v1;
    sub_2408E5D50();
    sub_2408E6170();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    sub_2408E5D50();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257001708);
    sub_2408E5D38();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v0 + 18) != 41)
  {
    sub_2408E5F84();
    swift_bridgeObjectRelease();
    v4[0] = v2;
    v4[1] = v1;
    sub_2408E5D50();
    sub_2408E6170();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    sub_2408E5D50();
    sub_2408E5D38();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 24))
  {
    v4[0] = v2;
    v4[1] = v1;
    swift_retain();
    sub_2408E5D50();
    sub_240508C0C();
    sub_2408E5D50();
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 40))
  {
    v4[0] = v2;
    v4[1] = v1;
    swift_bridgeObjectRetain();
    sub_2408E5D50();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t FailureInfo.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FailureInfo.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_240509E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2408E6218();
  sub_2408E5D44();
  v4 = sub_2408E623C();
  return sub_240509FF0(a1, a2, v4);
}

unint64_t sub_240509E8C(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x242683FC0](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_24050A0D0(a1, v3);
}

unint64_t sub_240509EC0(uint64_t a1)
{
  return sub_240509ED8(a1, &qword_257001A30);
}

unint64_t sub_240509ECC(uint64_t a1)
{
  return sub_240509ED8(a1, &qword_257001A20);
}

unint64_t sub_240509ED8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = sub_2408E5CA8();
  return sub_24050A16C(a1, v4, a2);
}

unint64_t sub_240509F54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2408E620C();
  return sub_24050A234(a1, v2);
}

unint64_t sub_240509F84(uint64_t a1)
{
  uint64_t v2;

  sub_2408E5AB0();
  sub_2404FA028((unint64_t *)&qword_256FFA698, (uint64_t (*)(uint64_t))MEMORY[0x24BE586C8], MEMORY[0x24BE586D8]);
  v2 = sub_2408E5CA8();
  return sub_24050A2D0(a1, v2);
}

unint64_t sub_240509FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2408E617C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2408E617C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24050A0D0(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24050A16C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    do
    {
      if ((sub_2408E5CD8() & 1) != 0)
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_24050A234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24050A2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_2408E5AB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_2404FA028(&qword_2570019D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE586C8], MEMORY[0x24BE586E0]);
      v14 = sub_2408E5CD8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

_QWORD *sub_24050A410(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257001A28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 280);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[35 * v8 + 4])
          memmove(v12, a4 + 4, 280 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24050B780(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24050A538(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC360);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24050B690(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24050A644(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257001A08);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24050B870(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24050A750(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257001A18);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 656);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[82 * v8 + 4])
          memmove(v12, a4 + 4, 656 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24050B978(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24050A878(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2570019E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24050BA68(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24050A998(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019B0, type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_24050A9AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019E0, (uint64_t (*)(_QWORD))type metadata accessor for IETranscriptEventWrapper);
}

uint64_t sub_24050A9C0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2408E6020();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24050BD84(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24050ABCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019D8, type metadata accessor for IFSELFMessageEventWrapper);
}

uint64_t sub_24050ABE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019A8, type metadata accessor for DillSessionEvent);
}

uint64_t sub_24050ABF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019B8, type metadata accessor for ParticipantInfo);
}

uint64_t sub_24050AC08(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570019F8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257001A00) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_2408E6020();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257001A00) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24050BB74(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_24050AE18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2570019F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 320);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[40 * v8 + 4])
          memmove(v12, a4 + 4, 320 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24050BC90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24050AF38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019C0, (uint64_t (*)(_QWORD))MEMORY[0x24BE587A0]);
}

uint64_t sub_24050AF4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24050A9C0(a1, a2, a3, a4, &qword_2570019C8, (uint64_t (*)(_QWORD))type metadata accessor for AppIntentMetricsDefinitions);
}

uint64_t type metadata accessor for PNRError()
{
  uint64_t result;

  result = qword_257001740;
  if (!qword_257001740)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24050AF9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24050AFD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24050AFB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24050B13C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24050AFD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC360);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050B13C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570019C0);
  v10 = *(_QWORD *)(sub_2408E5B10() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_2408E5B10() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050B31C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_24050B3A8()
{
  unint64_t result;

  result = qword_257001710;
  if (!qword_257001710)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for FailureTypeEnum, &type metadata for FailureTypeEnum);
    atomic_store(result, (unint64_t *)&qword_257001710);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FailureTypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD8)
    goto LABEL_17;
  if (a2 + 40 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 40) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 40;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 40;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 40;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x29;
  v8 = v6 - 41;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FailureTypeEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 40 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 40) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD7)
    return ((uint64_t (*)(void))((char *)&loc_24050B4C8 + 4 * byte_240900BA6[v4]))();
  *a1 = a2 + 40;
  return ((uint64_t (*)(void))((char *)sub_24050B4FC + 4 * byte_240900BA1[v4]))();
}

uint64_t sub_24050B4FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24050B504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24050B50CLL);
  return result;
}

uint64_t sub_24050B518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24050B520);
  *(_BYTE *)result = a2 + 40;
  return result;
}

uint64_t sub_24050B524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24050B52C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FailureTypeEnum()
{
  return &type metadata for FailureTypeEnum;
}

uint64_t sub_24050B548()
{
  return type metadata accessor for PNRError();
}

void sub_24050B550()
{
  unint64_t v0;

  sub_24050B600();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PNRError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PNRError.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PNRError.toProvisionalSELFMessage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PNRError.dictionary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

void sub_24050B600()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257001750)
  {
    type metadata accessor for TranscriptProtoIntelligenceFlowError(255);
    v0 = sub_2408E5F24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257001750);
  }
}

uint64_t method lookup function for FailureInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FailureInfo.getProvisionalSELFMessage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of FailureInfo.getSELFMessage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of FailureInfo.dictionary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of FailureInfo.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t sub_24050B690(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050B780(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 280 * a1 + 32;
    v6 = a3 + 280 * v4;
    if (v5 >= v6 || v5 + 280 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050B870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257001A10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050B978(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 656 * a1 + 32;
    v6 = a3 + 656 * v4;
    if (v5 >= v6 || v5 + 656 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050BA68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256FFCDB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050BB74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257001A00) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050BC90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 320 * a1 + 32;
    v6 = a3 + 320 * v4;
    if (v5 >= v6 || v5 + 320 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050BD84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_24050BE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_24050BEE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  char **v11;
  id result;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  _QWORD v33[3];
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - v9;
  v11 = &selRef_setHasNumActionsExecuted_;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95060]), sel_init);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, sel_setExists_, 1);
    sub_24050C3B0();
    v14 = v13;
    v15 = (void *)sub_2408E5D8C();
    objc_msgSend(v14, sel_setItems_, v15);

    v11 = &selRef_setHasNumActionsExecuted_;
    result = v13;
  }
  v16 = *a1;
  v17 = *(_QWORD *)(*a1 + 16);
  if (v17)
  {
    v33[2] = v4;
    v34 = result;
    v18 = type metadata accessor for ToolKitProtoTypedValue(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v35 = v19;
    v36 = *(_QWORD *)(v19 + 72);
    v37 = v18;
    v33[1] = v16;
    swift_bridgeObjectRetain();
    v21 = type metadata accessor for ToolKitProtoTypedValue.CollectionValue;
    do
    {
      v22 = v21;
      sub_2403AE1A4(v20, (uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
      v23 = v35;
      v24 = v37;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v10, 0, 1, v37);
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95050]), v11[81]);
      sub_24042274C((uint64_t)v10, (uint64_t)v8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v24) == 1)
      {
        sub_2403B83A0((uint64_t)v8);
      }
      else
      {
        v26 = *v8;
        sub_240422794(*v8);
        sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
        if ((~v26 & 0xF000000000000007) != 0)
          __asm { BR              X9 }
      }
      sub_2403B83A0((uint64_t)v10);
      if (v25)
      {
        if (v34)
        {
          v27 = v34;
          v28 = objc_msgSend(v27, sel_items);
          if (v28)
          {
            v29 = v28;
            sub_24050C3B0();
            v30 = sub_2408E5D98();

            v38 = v30;
            v31 = v25;
            MEMORY[0x242683B40]();
            if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2408E5DBC();
            sub_2408E5DD4();
            sub_2408E5DB0();
            if (v38)
            {
              v32 = (void *)sub_2408E5D8C();
              swift_bridgeObjectRelease();
            }
            else
            {
              v32 = 0;
            }
            v11 = &selRef_setHasNumActionsExecuted_;
            v21 = v22;
            objc_msgSend(v27, sel_setItems_, v32);

          }
          else
          {
            objc_msgSend(v27, sel_setItems_, 0);
            swift_bridgeObjectRelease();

          }
        }
        else
        {

        }
      }
      v20 += v36;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    return v34;
  }
  return result;
}

unint64_t sub_24050C3B0()
{
  unint64_t result;

  result = qword_257001A38;
  if (!qword_257001A38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257001A38);
  }
  return result;
}

id sub_24050C3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for TranscriptProtoAppRequirement(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E08]), sel_init);
  v9 = v8;
  if (v8)
    objc_msgSend(v8, sel_setExists_, 1);
  sub_24050C720(a1, (uint64_t)v7);
  v10 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10) != 1)
  {
    v11 = (char *)&loc_24050C570 + 4 * byte_240900F30[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return v9;
}

uint64_t sub_24050C720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UsageMetricsProducer.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000024;
  *(_QWORD *)(result + 24) = 0x80000002409280D0;
  return result;
}

uint64_t UsageMetricsProducer.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0xD000000000000024;
  *(_QWORD *)(v0 + 24) = 0x80000002409280D0;
  return result;
}

void sub_24050C7C8(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001A00);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UsageMetricsDefinitions();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a2 & 1) != 0)
  {
    if (qword_256FFA0A8 != -1)
      swift_once();
    v12 = sub_2408E5C48();
    __swift_project_value_buffer(v12, (uint64_t)qword_257072498);
    v24 = sub_2408E5C3C();
    v13 = sub_2408E5EA0();
    if (os_log_type_enabled((os_log_t)v24, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_240347000, (os_log_t)v24, v13, "Implement SELF for reporting", v14, 2u);
      MEMORY[0x242684668](v14, -1, -1);
    }

  }
  else
  {
    if (qword_256FFA0A8 != -1)
      swift_once();
    v15 = sub_2408E5C48();
    __swift_project_value_buffer(v15, (uint64_t)qword_257072498);
    v16 = sub_2408E5C3C();
    v17 = sub_2408E5EA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_240347000, v16, v17, "Using CoreAnalytics for reporting", v18, 2u);
      MEMORY[0x242684668](v18, -1, -1);
    }

    v19 = *(_QWORD *)(a1 + 16);
    if (v19)
    {
      v20 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v21 = a1;
      v22 = *(_QWORD *)(v5 + 72);
      v23 = v21;
      swift_bridgeObjectRetain();
      do
      {
        sub_2403A9210(v20, (uint64_t)v7, &qword_257001A00);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        {
          sub_2403A97FC((uint64_t)v7, &qword_257001A00);
        }
        else
        {
          sub_2403A91CC((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UsageMetricsDefinitions);
          type metadata accessor for CoreAnalyticsEmitter();
          swift_initStaticObject();
          CoreAnalyticsEmitter.sendSageMetrics(eventCategory:eventPayload:)(*(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24), (uint64_t)v11);
          sub_240388AE4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UsageMetricsDefinitions);
        }
        v20 += v22;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_24050CAC8(uint64_t a1, char *a2)
{
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;
  char v12;

  v3 = *a2;
  if (qword_256FFA0A8 != -1)
    swift_once();
  v4 = sub_2408E5C48();
  __swift_project_value_buffer(v4, (uint64_t)qword_257072498);
  v5 = sub_2408E5C3C();
  v6 = sub_2408E5EA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_240347000, v5, v6, "UsageMetricsProducer producing metrics", v7, 2u);
    MEMORY[0x242684668](v7, -1, -1);
  }

  v8 = sub_24050CD20(a1);
  if (*(_QWORD *)(v8 + 16))
  {
    v12 = v3;
    sub_24050C7C8(v8, &v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    oslog = sub_2408E5C3C();
    v9 = sub_2408E5EA0();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_240347000, oslog, v9, "No metrics formulated for reporting", v10, 2u);
      MEMORY[0x242684668](v10, -1, -1);
    }

  }
}

uint64_t UsageMetricsProducer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UsageMetricsProducer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_24050CCB8(uint64_t *a1, _BYTE *a2)
{
  sub_24050C7C8(*a1, a2);
}

uint64_t sub_24050CCDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_24050CD20(a1);
  *a2 = result;
  return result;
}

void sub_24050CD00(uint64_t a1, char *a2)
{
  sub_24050CAC8(a1, a2);
}

uint64_t sub_24050CD20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  unint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t *v68;
  char *v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  _QWORD v76[2];
  __int128 v77;
  uint64_t *v78;
  uint64_t v79;
  int64_t v80;
  uint64_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  int64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001A00);
  v89 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v88 = (uint64_t)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UsageMetricsDefinitions();
  v86 = *(_QWORD *)(v4 - 8);
  v87 = (int *)v4;
  MEMORY[0x24BDAC7A8](v4);
  v103 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (int *)type metadata accessor for PerfMetricsDefinitions();
  MEMORY[0x24BDAC7A8](v85);
  v104 = (uint64_t)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SessionData(0);
  v84 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v76 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v82 = (uint64_t)v76 - v17;
  v18 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  v19 = *(_QWORD *)(v18 + 64);
  v79 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v80 = (unint64_t)(v20 + 63) >> 6;
  v78 = &v106;
  v90 = v18;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v26 = 136315138;
  v77 = v26;
  v76[1] = MEMORY[0x24BEE4AD8] + 8;
  v81 = (uint64_t *)v8;
  v92 = v10;
  v83 = v13;
  v91 = v16;
  if (!v22)
    goto LABEL_5;
LABEL_4:
  v27 = __clz(__rbit64(v22));
  v28 = (v22 - 1) & v22;
  for (i = v27 | (v24 << 6); ; i = __clz(__rbit64(v31)) + (v24 << 6))
  {
    v33 = v82;
    sub_2403AE1A4(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v84 + 72) * i, v82, type metadata accessor for SessionData);
    sub_2403A91CC(v33, (uint64_t)v16, type metadata accessor for SessionData);
    if (qword_256FFA0A8 != -1)
      swift_once();
    v34 = sub_2408E5C48();
    __swift_project_value_buffer(v34, (uint64_t)qword_257072498);
    sub_2403AE1A4((uint64_t)v16, (uint64_t)v13, type metadata accessor for SessionData);
    v35 = sub_2408E5C3C();
    v36 = sub_2408E5EA0();
    v37 = os_log_type_enabled(v35, v36);
    v101 = v24;
    v102 = v25;
    v100 = v28;
    if (v37)
    {
      v38 = (uint64_t)v13;
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_DWORD *)v39 = v77;
      v106 = v40;
      v41 = (uint64_t *)(v38 + *(int *)(v10 + 24));
      v43 = *v41;
      v42 = v41[1];
      swift_bridgeObjectRetain();
      v44 = v43;
      v10 = v92;
      v105 = sub_2403B3ED0(v44, v42, &v106);
      v16 = v91;
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      sub_240388AE4(v38, type metadata accessor for SessionData);
      _os_log_impl(&dword_240347000, v35, v36, "Formulating metrics from sessionId:  %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v40, -1, -1);
      MEMORY[0x242684668](v39, -1, -1);
    }
    else
    {
      sub_240388AE4((uint64_t)v13, type metadata accessor for SessionData);
    }

    v45 = v81;
    sub_24072BC88((uint64_t)v16, v104);
    v46 = &v16[*(int *)(v10 + 20)];
    v47 = type metadata accessor for SessionSignature(0);
    v48 = v47;
    if (v46[1] != 1)
    {
      v51 = *(_QWORD *)&v46[*(int *)(v47 + 48)];
      v50 = *(_QWORD *)&v46[*(int *)(v47 + 48) + 8];
      v93 = v51;
      v94 = v50;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
    sub_2403A9210((uint64_t)&v46[*(int *)(v47 + 28)], (uint64_t)v45, &qword_2570014F8);
    v49 = type metadata accessor for AttributionTraits(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v45, 1, v49) == 1)
    {
      sub_2403A97FC((uint64_t)v45, &qword_2570014F8);
    }
    else
    {
      v53 = *v45;
      v52 = v45[1];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v45, type metadata accessor for AttributionTraits);
      if (v52)
      {
        v93 = v53;
        v94 = v52;
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    v93 = 0x6E776F6E6B6E75;
    v94 = 0xE700000000000000;
LABEL_33:
    v54 = &v16[*(int *)(v10 + 24)];
    v55 = *((_QWORD *)v54 + 1);
    v98 = *(_QWORD *)v54;
    v56 = sub_2408E5624();
    v99 = v76;
    v57 = *(_QWORD *)(v56 - 8);
    MEMORY[0x24BDAC7A8](v56);
    v59 = (char *)v76 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v59, v16, v56);
    v60 = *(_QWORD **)&v46[*(int *)(v48 + 36)];
    if (v60[2])
    {
      v61 = v60[5];
      v97 = v60[4];
      swift_bridgeObjectRetain();
    }
    else
    {
      v61 = 0xE300000000000000;
      v97 = 6369134;
    }
    v62 = v46[1];
    v63 = v103;
    v64 = *(_QWORD *)(v104 + v85[7]);
    v96 = *(_QWORD *)(v104 + v85[8]);
    v95 = *(_QWORD *)(v104 + v85[9]);
    v65 = *((_QWORD *)v46 + 1);
    v66 = *((_QWORD *)v46 + 2);
    *(_QWORD *)v103 = v98;
    *((_QWORD *)v63 + 1) = v55;
    v98 = v55;
    v67 = v87;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v63[v87[5]], v59, v56);
    v68 = (uint64_t *)&v63[v67[6]];
    *v68 = v97;
    v68[1] = v61;
    v63[v67[7]] = v62;
    v69 = &v63[v67[8]];
    *(_QWORD *)v69 = v65;
    *((_QWORD *)v69 + 1) = v66;
    v70 = (uint64_t *)&v63[v67[9]];
    v71 = v94;
    *v70 = v93;
    v70[1] = v71;
    *(_QWORD *)&v63[v67[10]] = v64;
    *(_QWORD *)&v63[v67[11]] = v96;
    *(_QWORD *)&v63[v67[12]] = v95;
    v72 = (uint64_t)v63;
    v73 = v88;
    sub_2403AE1A4(v72, v88, (uint64_t (*)(_QWORD))type metadata accessor for UsageMetricsDefinitions);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v86 + 56))(v73, 0, 1, v67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_24050AC08(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    v16 = v91;
    v10 = v92;
    v75 = *(_QWORD *)(v25 + 16);
    v74 = *(_QWORD *)(v25 + 24);
    if (v75 >= v74 >> 1)
      v25 = sub_24050AC08(v74 > 1, v75 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v75 + 1;
    sub_24050D628(v73, v25+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v75);
    sub_240388AE4((uint64_t)v103, (uint64_t (*)(_QWORD))type metadata accessor for UsageMetricsDefinitions);
    sub_240388AE4(v104, (uint64_t (*)(_QWORD))type metadata accessor for PerfMetricsDefinitions);
    result = sub_240388AE4((uint64_t)v16, type metadata accessor for SessionData);
    v13 = v83;
    v22 = v100;
    v24 = v101;
    if (v100)
      goto LABEL_4;
LABEL_5:
    v30 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v30 >= v80)
      goto LABEL_42;
    v31 = *(_QWORD *)(v79 + 8 * v30);
    ++v24;
    if (!v31)
    {
      v24 = v30 + 1;
      if (v30 + 1 >= v80)
        goto LABEL_42;
      v31 = *(_QWORD *)(v79 + 8 * v24);
      if (!v31)
      {
        v24 = v30 + 2;
        if (v30 + 2 >= v80)
          goto LABEL_42;
        v31 = *(_QWORD *)(v79 + 8 * v24);
        if (!v31)
        {
          v24 = v30 + 3;
          if (v30 + 3 >= v80)
            goto LABEL_42;
          v31 = *(_QWORD *)(v79 + 8 * v24);
          if (!v31)
            break;
        }
      }
    }
LABEL_20:
    v28 = (v31 - 1) & v31;
  }
  v32 = v30 + 4;
  if (v32 >= v80)
  {
LABEL_42:
    swift_release();
    return v25;
  }
  v31 = *(_QWORD *)(v79 + 8 * v32);
  if (v31)
  {
    v24 = v32;
    goto LABEL_20;
  }
  while (1)
  {
    v24 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v24 >= v80)
      goto LABEL_42;
    v31 = *(_QWORD *)(v79 + 8 * v24);
    ++v32;
    if (v31)
      goto LABEL_20;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UsageMetricsProducer()
{
  return objc_opt_self();
}

uint64_t method lookup function for UsageMetricsProducer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UsageMetricsProducer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UsageMetricsProducer.produceMetricsFor(results:reportTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of UsageMetricsProducer.produce(from:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of UsageMetricsProducer.formulateMetrics(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_24050D628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CollectionPolicy.init(demands:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

Swift::Bool __swiftcall CollectionPolicy.canCollect()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return 1;
  v2 = *(_QWORD *)v0 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_2403AE340(v2, (uint64_t)v7);
    v3 = v8;
    v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    if ((v5 & 1) == 0)
      break;
    v2 += 40;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t dispatch thunk of PolicyDemand.meetsDemand()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for CollectionPolicy()
{
  return &type metadata for CollectionPolicy;
}

id sub_24050D740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24050D8B8(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24050D900((uint64_t)v4);
    return 0;
  }
  else
  {
    sub_24050D940((uint64_t)v4, (uint64_t)v8);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FF0]), sel_init);
    v9 = v10;
    if (v10)
    {
      v11 = v10;
      v12 = (void *)sub_2403BAF44((uint64_t)v8);
      objc_msgSend(v11, sel_setOutcome_, v12);

      v13 = (uint64_t)&v8[*(int *)(v5 + 20)];
      v14 = v11;
      v15 = sub_2403B1270(v13);
      objc_msgSend(v14, sel_setResponse_, v15);

    }
    sub_24050D984((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_24050D8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24050D900(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24050D940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24050D984(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24050D9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  unsigned int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC40);
  MEMORY[0x24BDAC7A8](v3);
  v59 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v5 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v60 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (unsigned int *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v63 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v56 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA88);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TranscriptProtoRequest(0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v24, &qword_256FFCA88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) != 1)
  {
    sub_2403A91CC((uint64_t)v24, (uint64_t)v28, type metadata accessor for TranscriptProtoRequest);
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F98]), sel_init);
    sub_2403A9210((uint64_t)&v28[*(int *)(v25 + 20)], (uint64_t)v15, &qword_256FFA350);
    v32 = type metadata accessor for TranscriptProtoRequestContent(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v15, 1, v32) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA350);
      v33 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v21, 1, 1, v33);
    }
    else
    {
      sub_2403A9210((uint64_t)v15, (uint64_t)v21, &qword_256FFA348);
      sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoRequestContent);
      v34 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v21, 1, v34) != 1)
      {
        sub_2403A9210((uint64_t)v21, (uint64_t)v19, &qword_256FFA348);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v48 = v60;
          sub_2403A91CC((uint64_t)v19, v60, type metadata accessor for TranscriptProtoSystemPromptResolution);
          if (v31)
          {
            v49 = v59;
            sub_2403AE1A4(v48, v59, type metadata accessor for TranscriptProtoSystemPromptResolution);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v49, 0, 1, v57);
            v50 = v31;
            v51 = sub_2403B841C(v49);
            sub_2403A97FC(v49, &qword_256FFAC40);
            objc_msgSend(v50, sel_setPromptResolution_, v51);

          }
          sub_240388AE4(v48, type metadata accessor for TranscriptProtoSystemPromptResolution);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {

            sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoRequest);
            v35 = type metadata accessor for TranscriptProtoRequestContentEnum;
            v36 = (uint64_t)v19;
            goto LABEL_7;
          }
          v39 = v63;
          sub_2403A91CC((uint64_t)v19, v63, type metadata accessor for TranscriptProtoRequestContentTextContent);
          v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FA0]), sel_init);
          v41 = v62;
          if (v40)
          {
            v42 = v39 + *(int *)(v62 + 20);
            v43 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
            v44 = v40;
            v45 = objc_msgSend(v43, sel_init);
            v46 = v58;
            sub_2403A9210(v42, (uint64_t)v58, &qword_256FFA300);
            v47 = type metadata accessor for TranscriptProtoStatementID(0);
            if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47) == 1)
            {
              sub_2403A97FC((uint64_t)v46, &qword_256FFA300);
            }
            else
            {
              v52 = *v46;
              sub_240388AE4((uint64_t)v46, type metadata accessor for TranscriptProtoStatementID);
              objc_msgSend(v45, sel_setIndex_, v52);
            }
            objc_msgSend(v44, sel_setStatementId_, v45);

          }
          v53 = v64;
          sub_2403AE1A4(v39, v64, type metadata accessor for TranscriptProtoRequestContentTextContent);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v53, 0, 1, v41);
          sub_2408DB2F4(v53, v65);
          v55 = v54;
          sub_2403A97FC(v53, &qword_257000F80);
          objc_msgSend(v40, sel_setLinkId_, v55);
          objc_msgSend(v31, sel_setText_, v40);

          sub_240388AE4(v39, type metadata accessor for TranscriptProtoRequestContentTextContent);
        }
        sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoRequest);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA348);
        return v31;
      }
    }

    v35 = type metadata accessor for TranscriptProtoRequest;
    v36 = (uint64_t)v28;
LABEL_7:
    sub_240388AE4(v36, v35);
    v29 = &qword_256FFA348;
    v30 = (uint64_t)v21;
    goto LABEL_8;
  }
  v29 = &qword_256FFCA88;
  v30 = (uint64_t)v24;
LABEL_8:
  sub_2403A97FC(v30, v29);
  return 0;
}

uint64_t ExecutionGrainLatencyCalculator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ExecutionGrainLatencyCalculator.init()()
{
  uint64_t v0;

  return v0;
}

void sub_24050E068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD **a10)
{
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE __src[328];

  if (qword_256FFA0A8 != -1)
    swift_once();
  v18 = sub_2408E5C48();
  __swift_project_value_buffer(v18, (uint64_t)qword_257072498);
  v19 = sub_2408E5C3C();
  v20 = sub_2408E5EC4();
  if (os_log_type_enabled(v19, v20))
  {
    v34 = a1;
    v21 = a2;
    v22 = a3;
    v23 = a4;
    v24 = a5;
    v25 = a6;
    v26 = a7;
    v27 = a8;
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_240347000, v19, v20, "ExecutionGrainLatencyCalculator - building latency record", v28, 2u);
    v29 = v28;
    a8 = v27;
    a7 = v26;
    a6 = v25;
    a5 = v24;
    a4 = v23;
    a3 = v22;
    a2 = v21;
    a1 = v34;
    MEMORY[0x242684668](v29, -1, -1);
  }

  if (a1)
  {
    sub_24050EBE8(a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)__src);
    swift_beginAccess();
    v30 = *a10;
    sub_240510F88((uint64_t)__src);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a10 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_24050AE18(0, v30[2] + 1, 1, v30);
      *a10 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_24050AE18((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *a10 = v30;
    }
    v30[2] = v33 + 1;
    memcpy(&v30[40 * v33 + 4], __src, 0x140uLL);
    swift_endAccess();
    sub_240511064((uint64_t)__src);
  }
}

uint64_t ExecutionGrainLatencyCalculator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExecutionGrainLatencyCalculator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24050E2B0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;

  v3 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  if ((sub_24050F97C((uint64_t)a1) & 1) != 0)
  {
    v21 = a1[12];
    v1[8] = a1[11];
    v1[9] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22 = a1[9];
    v1[6] = a1[8];
    v1[7] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v23 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210((uint64_t)a1 + *(int *)(v23 + 44), (uint64_t)v14, &qword_256FFA490);
  v24 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v14, &qword_256FFA490);
    v25 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  }
  else
  {
    sub_2403A9210((uint64_t)v14, (uint64_t)v20, &qword_256FFA488);
    sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoPayload);
    v26 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) != 1)
    {
      sub_2403A9210((uint64_t)v20, (uint64_t)v18, &qword_256FFA488);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 5u:
          sub_2403A91CC((uint64_t)v18, (uint64_t)v11, type metadata accessor for TranscriptProtoAction);
          v27 = a1[1];
          v1[2] = *a1;
          v1[3] = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v28 = v11[1];
          v1[10] = *v11;
          v1[11] = v28;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v29 = (_QWORD *)((char *)v11 + *(int *)(v9 + 32));
          v30 = v29[1];
          v1[12] = *v29;
          v1[13] = v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v31 = v1[14];
          v32 = __OFADD__(v31, 1);
          v33 = v31 + 1;
          if (v32)
          {
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            JUMPOUT(0x24050E6F4);
          }
          v1[14] = v33;
          sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAction);
          return sub_2403A97FC((uint64_t)v20, &qword_256FFA488);
        case 7u:
          v34 = a1[1];
          v1[4] = *a1;
          v1[5] = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v35 = v1[15];
          v32 = __OFADD__(v35, 1);
          v36 = v35 + 1;
          if (v32)
            goto LABEL_21;
          v1[15] = v36;
          goto LABEL_15;
        case 0xAu:
          sub_2403A91CC((uint64_t)v18, (uint64_t)v5, type metadata accessor for TranscriptProtoSessionError);
          v37 = v1[18];
          v32 = __OFADD__(v37, 1);
          v38 = v37 + 1;
          if (v32)
            goto LABEL_22;
          v1[18] = v38;
          v39 = getFailureInfo(from:)((uint64_t)v5);
          v40 = type metadata accessor for TranscriptProtoSessionError;
          v41 = (uint64_t)v5;
          goto LABEL_18;
        case 0xFu:
          v42 = v1[16];
          v32 = __OFADD__(v42, 1);
          v43 = v42 + 1;
          if (v32)
            goto LABEL_23;
          v1[16] = v43;
LABEL_15:
          sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
          break;
        case 0x1Du:
          sub_2403A91CC((uint64_t)v18, (uint64_t)v8, type metadata accessor for TranscriptProtoStatementResult);
          v44 = v1[17];
          v32 = __OFADD__(v44, 1);
          v45 = v44 + 1;
          if (v32)
            goto LABEL_24;
          v1[17] = v45;
          v39 = getFailureInfo(from:)((uint64_t)v8);
          v40 = type metadata accessor for TranscriptProtoStatementResult;
          v41 = (uint64_t)v8;
LABEL_18:
          sub_240388AE4(v41, v40);
          v1[19] = v39;
          swift_release();
          break;
        default:
          goto LABEL_15;
      }
    }
  }
  return sub_2403A97FC((uint64_t)v20, &qword_256FFA488);
}

uint64_t sub_24050E758()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24050E7A4()
{
  sub_24050E758();
  return swift_deallocClassInstance();
}

double sub_24050E7C4()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[8] = 0u;
  v0[9] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t sub_24050E7E4(_QWORD *a1)
{
  return sub_24050E2B0(a1);
}

uint64_t sub_24050E804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD v37[5];
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[5];
  uint64_t v42[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_24050F638(a1);
  if ((result & 1) == 0)
    return result;
  v8 = *(_QWORD *)(a1 + 80);
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  swift_beginAccess();
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v17 >= v13)
      goto LABEL_24;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_24;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_24;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v13)
            goto LABEL_24;
          v18 = *(_QWORD *)(v9 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_23:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    result = sub_240518204(v42, *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16));
  }
  v19 = v17 + 4;
  if (v19 < v13)
  {
    v18 = *(_QWORD *)(v9 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v14 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (v14 >= v13)
          goto LABEL_24;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        ++v19;
        if (v18)
          goto LABEL_23;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v14 = v19;
    goto LABEL_23;
  }
LABEL_24:
  swift_endAccess();
  swift_release();
  v20 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v20 + 64), (uint64_t)v6, &qword_256FFA4B0);
  v21 = type metadata accessor for TranscriptProtoSpanID(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v6, 1, v21) == 1)
  {
    sub_2403A97FC((uint64_t)v6, &qword_256FFA4B0);
  }
  else
  {
    v22 = *v6;
    sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoSpanID);
    swift_beginAccess();
    sub_240518204(v42, v22);
    swift_endAccess();
  }
  v36 = xmmword_2408EB470;
  v23 = *(_QWORD *)(v1 + 16);
  v37[3] = type metadata accessor for ExecutionGrainDimensionsSpec();
  v37[4] = &off_2510A9C58;
  v37[0] = v23;
  v24 = *(_QWORD *)(v2 + 24);
  v39 = type metadata accessor for LatencyIntervalSpec();
  v40 = &off_2510A8600;
  v38[0] = v24;
  v25 = *(_QWORD *)(v2 + 32);
  v41[3] = v39;
  v41[4] = &off_2510A8600;
  v41[0] = v25;
  sub_2403AE340((uint64_t)v37, (uint64_t)v33);
  v26 = v34;
  v27 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v28(a1, v26, v27);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  if ((unint64_t)v36 < 2)
    goto LABEL_33;
  sub_2403AE340((uint64_t)v38, (uint64_t)v33);
  v29 = v34;
  v30 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 8))(a1, v29, v30);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  if ((unint64_t)v36 >= 3)
  {
    sub_2403AE340((uint64_t)v41, (uint64_t)v33);
    v31 = v34;
    v32 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 8))(a1, v31, v32);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257001EF8);
    return swift_arrayDestroy();
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_24050EBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char v39;
  char v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char v43;
  char v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v10 = v9;
  v98 = a6;
  v99 = a4;
  v95 = a3;
  v96 = a5;
  v100 = a2;
  v94 = a1;
  v75 = sub_2408E5AB0();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD **)(v9 + 16);
  v17 = v16[19];
  if (a8)
  {
    swift_beginAccess();
    v18 = *(_QWORD *)(v9 + 40);
    swift_beginAccess();
    v19 = *(_QWORD *)(a8 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = updatePlannerFailureSubtype(of:for:using:)(v17, v18, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v17 = v20;
  }
  else
  {
    swift_retain();
  }
  v21 = v16[5];
  v88 = v16[6];
  v103 = v16[7];
  v87 = v16[8];
  v102 = v16[9];
  v86 = v16[2];
  v101 = v16[3];
  v93 = v16[4];
  v22 = v16[11];
  v91 = v16[10];
  v89 = v16[12];
  v104 = v16[13];
  v23 = a7 + *(int *)(type metadata accessor for RequestData(0) + 32);
  if (*(_QWORD *)(v23 + 40))
  {
    v24 = *(_QWORD *)(v23 + 16);
    v25 = *(unsigned __int8 *)(v23 + 24);
    v83 = *(_QWORD *)(v23 + 8);
    v85 = v24;
    v84 = v25;
    sub_2403ADAA8(v83, v24, v25);
  }
  else
  {
    v85 = 0;
    v84 = 2;
    v83 = 3;
  }
  v97 = v17;
  v82 = (char *)(a9 + 256);
  v81 = v16[14];
  v80 = v16[15];
  v79 = v16[16];
  v78 = v16[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v92 = v21;
  swift_bridgeObjectRetain();
  v90 = v22;
  swift_bridgeObjectRetain();
  v77 = sub_2403B8ABC();
  v76 = v26;
  v28 = sub_2403B8ABC();
  if (a8)
  {
    v72 = v27;
    v29 = *MEMORY[0x24BE58648];
    v30 = v74;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 104);
    v32 = v75;
    v73 = v28;
    v31(v15, v29, v75);
    v33 = v31;
    swift_beginAccess();
    v34 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    v71 = sub_2408DEEAC((uint64_t)v15, v34);
    v36 = v35;
    swift_bridgeObjectRelease();
    v70 = v36 & 1;
    v37 = *(void (**)(char *, uint64_t))(v30 + 8);
    v37(v15, v32);
    v33(v15, *MEMORY[0x24BE58650], v32);
    v38 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    v74 = sub_2408DEEAC((uint64_t)v15, v38);
    v40 = v39;
    swift_bridgeObjectRelease();
    v69 = v40 & 1;
    v37(v15, v32);
    v41 = v33;
    v33(v15, *MEMORY[0x24BE58660], v32);
    v42 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    v68 = sub_2408DEEAC((uint64_t)v15, v42);
    v44 = v43;
    swift_bridgeObjectRelease();
    v67 = v44 & 1;
    v37(v15, v32);
    v41(v15, *MEMORY[0x24BE58668], v32);
    v45 = v41;
    v46 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    v66 = sub_2408DEEAC((uint64_t)v15, v46);
    v48 = v47;
    swift_bridgeObjectRelease();
    LOBYTE(v38) = v48 & 1;
    v37(v15, v32);
    v45(v15, *MEMORY[0x24BE58698], v32);
    v49 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    v50 = sub_2408DEEAC((uint64_t)v15, v49);
    v52 = v51;
    swift_bridgeObjectRelease();
    v53 = v52 & 1;
    v37(v15, v32);
    v54 = v38;
    v55 = v66;
    v56 = v67;
    v57 = v68;
    v58 = v69;
    v59 = v74;
    v60 = v70;
    v61 = v71;
    LOBYTE(v27) = v72;
    v28 = v73;
  }
  else
  {
    v50 = 0;
    v55 = 0;
    v57 = 0;
    v59 = 0;
    v61 = 0;
    v53 = 1;
    v54 = 1;
    v56 = 1;
    v58 = 1;
    v60 = 1;
  }
  *(_QWORD *)a9 = v94;
  *(_QWORD *)(a9 + 16) = v95;
  *(_QWORD *)(a9 + 32) = v96;
  *(_QWORD *)(a9 + 48) = v88;
  *(_QWORD *)(a9 + 56) = v103;
  *(_QWORD *)(a9 + 64) = v87;
  *(_QWORD *)(a9 + 72) = v102;
  *(_QWORD *)(a9 + 80) = v86;
  v62 = v100;
  *(_QWORD *)(a9 + 88) = v101;
  *(_QWORD *)(a9 + 8) = v62;
  v63 = v98;
  *(_QWORD *)(a9 + 24) = v99;
  *(_QWORD *)(a9 + 40) = v63;
  *(_QWORD *)(a9 + 96) = v93;
  *(_QWORD *)(a9 + 104) = v92;
  *(_QWORD *)(a9 + 112) = v91;
  *(_QWORD *)(a9 + 120) = v90;
  *(_QWORD *)(a9 + 128) = v89;
  *(_QWORD *)(a9 + 136) = v104;
  *(_QWORD *)(a9 + 144) = v83;
  *(_QWORD *)(a9 + 152) = v85;
  *(_BYTE *)(a9 + 160) = v84;
  *(_QWORD *)(a9 + 168) = v81;
  *(_QWORD *)(a9 + 176) = v80;
  *(_QWORD *)(a9 + 184) = v79;
  *(_QWORD *)(a9 + 192) = v78;
  *(_QWORD *)(a9 + 200) = v77;
  *(_BYTE *)(a9 + 208) = v76 & 1;
  *(_QWORD *)(a9 + 216) = v28;
  *(_BYTE *)(a9 + 224) = v27 & 1;
  *(_QWORD *)(a9 + 232) = v61;
  *(_BYTE *)(a9 + 240) = v60;
  *(_QWORD *)(a9 + 248) = v59;
  v64 = v82;
  *v82 = v58;
  *(_QWORD *)(a9 + 264) = v57;
  v64[16] = v56;
  *(_QWORD *)(a9 + 280) = v55;
  v64[32] = v54;
  *(_QWORD *)(a9 + 296) = v50;
  v64[48] = v53;
  *(_QWORD *)(a9 + 312) = v97;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24050F290()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_24050F2CC()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  _QWORD *v14;
  _BYTE v15[40];
  _QWORD v16[3];
  uint64_t v17;
  _UNKNOWN **v18;

  type metadata accessor for ExecutionGrainDimensionsSpec();
  v1 = (_OWORD *)swift_allocObject();
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[5] = 0u;
  v1[6] = 0u;
  v1[7] = 0u;
  v1[8] = 0u;
  v1[9] = 0u;
  *(_QWORD *)(v0 + 16) = v1;
  type metadata accessor for LatencyIntervalSpec();
  v2 = (_OWORD *)swift_allocObject();
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[1] = 0u;
  type metadata accessor for Next(0);
  v3 = swift_allocObject();
  v4 = v3 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
  v5 = type metadata accessor for TranscriptProtoEvent(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A69C8;
  v7 = type metadata accessor for EventFilter(0);
  v17 = v7;
  v18 = &off_2510A85E8;
  v16[0] = v3;
  sub_2403B80A4((uint64_t)v16, (uint64_t)v15, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v15, (uint64_t)(v2 + 1));
  swift_endAccess();
  v8 = swift_allocObject();
  v6(v8 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A69F0;
  v17 = v7;
  v18 = &off_2510A85E8;
  v16[0] = v8;
  sub_2403B80A4((uint64_t)v16, (uint64_t)v15, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v15, (uint64_t)v2 + 56);
  swift_endAccess();
  v14[3] = v2;
  v9 = (_OWORD *)swift_allocObject();
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[1] = 0u;
  v10 = swift_allocObject();
  v6(v10 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6A18;
  v17 = v7;
  v18 = &off_2510A85E8;
  v16[0] = v10;
  sub_2403B80A4((uint64_t)v16, (uint64_t)v15, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v15, (uint64_t)(v9 + 1));
  swift_endAccess();
  v11 = swift_allocObject();
  v6(v11 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6A40;
  v17 = v7;
  v18 = &off_2510A85E8;
  v16[0] = v11;
  sub_2403B80A4((uint64_t)v16, (uint64_t)v15, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v15, (uint64_t)v9 + 56);
  swift_endAccess();
  v12 = MEMORY[0x24BEE4B08];
  result = v14;
  v14[4] = v9;
  v14[5] = v12;
  return result;
}

uint64_t sub_24050F618(uint64_t a1)
{
  return sub_24050E804(a1);
}

uint64_t sub_24050F638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v14 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v14 + 44), (uint64_t)v7, &qword_256FFA490);
  v15 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFA490);
    v16 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
LABEL_4:
    v18 = 0;
    goto LABEL_5;
  }
  sub_2403A9210((uint64_t)v7, (uint64_t)v13, &qword_256FFA488);
  sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
  v17 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17) == 1)
    goto LABEL_4;
  sub_2403A9210((uint64_t)v13, (uint64_t)v11, &qword_256FFA488);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:
    case 7u:
    case 0xFu:
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
      v18 = 1;
      break;
    case 0x1Du:
      sub_2403A9210(a1 + *(int *)(v14 + 60), (uint64_t)v4, &qword_256FFA4A8);
      v20 = type metadata accessor for TranscriptProtoParticipantID(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v4, 1, v20) == 1)
      {
        sub_2403A97FC((uint64_t)v4, &qword_256FFA4A8);
        v18 = 0;
      }
      else
      {
        v22 = *v4;
        v21 = v4[1];
        swift_bridgeObjectRetain();
        sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoParticipantID);
        if (v22 == 0x726F747563657865 && v21 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          v18 = 1;
        }
        else
        {
          v18 = sub_2408E617C();
          swift_bridgeObjectRelease();
        }
      }
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
      break;
    default:
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
      goto LABEL_4;
  }
LABEL_5:
  sub_2403A97FC((uint64_t)v13, &qword_256FFA488);
  return v18 & 1;
}

uint64_t sub_24050F97C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v11 + 44), (uint64_t)v4, &qword_256FFA490);
  v12 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v4, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA490);
    v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
LABEL_8:
    v16 = 0;
    goto LABEL_9;
  }
  sub_2403A9210((uint64_t)v4, (uint64_t)v10, &qword_256FFA488);
  sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayload);
  v14 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) == 1)
    goto LABEL_8;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_256FFA488);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7 && EnumCaseMultiPayload != 5)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoPayloadEnum);
    goto LABEL_8;
  }
  sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoPayloadEnum);
  v16 = 1;
LABEL_9:
  sub_2403A97FC((uint64_t)v10, &qword_256FFA488);
  return v16;
}

_QWORD *sub_24050FB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83[3];
  _QWORD *v84[2];

  v70 = a8;
  v71 = a4;
  v73 = a6;
  v74 = a7;
  v72 = a5;
  v68 = a2;
  v69 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v64 = (uint64_t)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v60 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v61 = (uint64_t)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v81 = (char *)v60 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v80 = (uint64_t)v60 - v19;
  v82 = type metadata accessor for TranscriptProtoEvent(0);
  v20 = *(_QWORD *)(v82 - 8);
  v21 = MEMORY[0x24BDAC7A8](v82);
  v23 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v60 - v24;
  v26 = type metadata accessor for RequestData(0);
  MEMORY[0x24BDAC7A8](v26);
  v84[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
  v67 = (uint64_t)v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, v67, v28);
  v29 = *(_QWORD *)(a1 + *(int *)(v26 + 28));
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v31 = v29 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v79 = *(_QWORD *)(v20 + 72);
    v60[1] = v29;
    swift_bridgeObjectRetain();
    v32 = 0;
    *(_QWORD *)&v33 = 136315138;
    v63 = v33;
    v62 = MEMORY[0x24BEE4AD8] + 8;
    v34 = (uint64_t)v81;
    v78 = v13;
    v75 = v23;
    while (1)
    {
      sub_2403AE1A4(v31, (uint64_t)v25, type metadata accessor for TranscriptProtoEvent);
      sub_2403A9210((uint64_t)&v25[*(int *)(v82 + 44)], (uint64_t)v13, &qword_256FFA490);
      v35 = type metadata accessor for TranscriptProtoPayload(0);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48);
      if (v36(v13, 1, v35) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA490);
        v37 = type metadata accessor for TranscriptProtoPayloadEnum(0);
        v38 = v80;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v80, 1, 1, v37);
        goto LABEL_17;
      }
      v38 = v80;
      sub_2403A9210((uint64_t)v13, v80, &qword_256FFA488);
      sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoPayload);
      v39 = type metadata accessor for TranscriptProtoPayloadEnum(0);
      v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
      if (v77(v38, 1, v39) == 1)
        goto LABEL_17;
      sub_2403A9210(v38, v34, &qword_256FFA488);
      if ((swift_getEnumCaseMultiPayload() | 2) != 7)
      {
        sub_240388AE4(v34, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_17:
        sub_2403A97FC(v38, &qword_256FFA488);
        if (!v32)
          goto LABEL_6;
        goto LABEL_5;
      }
      sub_240388AE4(v34, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_2403A97FC(v38, &qword_256FFA488);
      v40 = swift_retain();
      sub_24050E068(v40, v68, v69, v71, v72, v73, v74, v67, v70, v84);
      swift_release();
      type metadata accessor for ExecutionGrainSpec();
      v76 = swift_allocObject();
      sub_24050F2CC();
      swift_release();
      if (qword_256FFA0A8 != -1)
        swift_once();
      v41 = sub_2408E5C48();
      __swift_project_value_buffer(v41, (uint64_t)qword_257072498);
      v42 = (uint64_t)v75;
      sub_2403AE1A4((uint64_t)v25, (uint64_t)v75, type metadata accessor for TranscriptProtoEvent);
      v43 = sub_2408E5C3C();
      v44 = sub_2408E5EA0();
      if (os_log_type_enabled(v43, (os_log_type_t)v44))
        break;
      sub_240388AE4(v42, type metadata accessor for TranscriptProtoEvent);
LABEL_4:

      v32 = v76;
LABEL_5:
      swift_retain();
      sub_24050E804((uint64_t)v25);
      swift_release();
LABEL_6:
      v13 = v78;
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoEvent);
      v31 += v79;
      --v30;
      v34 = (uint64_t)v81;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    v66 = v44;
    v45 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v83[0] = v65;
    *(_DWORD *)v45 = v63;
    v46 = v42 + *(int *)(v82 + 44);
    v47 = v64;
    v48 = &qword_256FFA490;
    sub_2403A9210(v46, v64, &qword_256FFA490);
    if (v36((char *)v47, 1, v35) == 1)
    {
      v49 = v47;
    }
    else
    {
      v50 = v61;
      v48 = &qword_256FFA488;
      sub_2403A9210(v47, v61, &qword_256FFA488);
      sub_240388AE4(v47, type metadata accessor for TranscriptProtoPayload);
      if (v77(v50, 1, v39) != 1)
      {
        TranscriptProtoPayloadEnum.eventTypeString.getter();
        v52 = v53;
        v51 = v54;
        sub_240388AE4(v50, type metadata accessor for TranscriptProtoPayloadEnum);
        goto LABEL_23;
      }
      v49 = v50;
    }
    sub_2403A97FC(v49, v48);
    v51 = 0xE300000000000000;
    v52 = 7104878;
LABEL_23:
    *(_QWORD *)(v45 + 4) = sub_2403B3ED0(v52, v51, v83);
    swift_bridgeObjectRelease();
    sub_240388AE4((uint64_t)v75, type metadata accessor for TranscriptProtoEvent);
    _os_log_impl(&dword_240347000, v43, (os_log_type_t)v66, "ExecutionGrainLatencyCalculator - starting new latency record for event: %s", (uint8_t *)v45, 0xCu);
    v55 = v65;
    swift_arrayDestroy();
    MEMORY[0x242684668](v55, -1, -1);
    MEMORY[0x242684668](v45, -1, -1);
    goto LABEL_4;
  }
LABEL_25:
  v56 = swift_retain();
  v57 = v67;
  sub_24050E068(v56, v68, v69, v71, v72, v73, v74, v67, v70, v84);
  swift_release();
  sub_240388AE4(v57, type metadata accessor for RequestData);
  swift_beginAccess();
  v58 = v84[0];
  swift_release();
  return v58;
}

uint64_t sub_240510280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v70;
  int64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  os_log_t v101;
  uint64_t v102;
  uint64_t result;
  int64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  uint64_t *v110;
  _QWORD *v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  os_log_t v129;
  char *v130;
  _BYTE v131[320];
  char *v132;
  _QWORD v133[40];
  uint64_t v134;
  _QWORD *v135;

  v2 = sub_2408E5B10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for RequestData(0);
  v116 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC10);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (int64_t *)((char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (int64_t *)((char *)&v104 - v12);
  v123 = type metadata accessor for SessionData(0);
  v107 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v125 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC18);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v111 = (int64_t *)((char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v110 = (int64_t *)((char *)&v104 - v18);
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v135 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  v21 = *(_QWORD *)(v20 + 64);
  v105 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & v21;
  v130 = v7;
  v120 = v7 + 8;
  v106 = (unint64_t)(v22 + 63) >> 6;
  v104 = v106 - 1;
  v108 = v20;
  swift_bridgeObjectRetain();
  v112 = 0;
  v118 = v11;
  v119 = v13;
LABEL_6:
  if (!v24)
  {
    v33 = v112 + 1;
    if (__OFADD__(v112, 1))
      goto LABEL_103;
    v32 = v110;
    v30 = (uint64_t)v111;
    if (v33 < v106)
    {
      v34 = *(_QWORD *)(v105 + 8 * v33);
      if (v34)
      {
LABEL_12:
        v112 = v33;
        v113 = (v34 - 1) & v34;
        v25 = __clz(__rbit64(v34)) + (v33 << 6);
        goto LABEL_8;
      }
      v35 = v112 + 2;
      ++v112;
      if (v33 + 1 < v106)
      {
        v34 = *(_QWORD *)(v105 + 8 * v35);
        if (v34)
        {
LABEL_15:
          v33 = v35;
          goto LABEL_12;
        }
        v112 = v33 + 1;
        if (v33 + 2 < v106)
        {
          v34 = *(_QWORD *)(v105 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_12;
          }
          v35 = v33 + 3;
          v112 = v33 + 2;
          if (v33 + 3 < v106)
          {
            v34 = *(_QWORD *)(v105 + 8 * v35);
            if (v34)
              goto LABEL_15;
            while (1)
            {
              v33 = v35 + 1;
              if (__OFADD__(v35, 1))
              {
                __break(1u);
LABEL_107:
                result = sub_2408E6068();
                __break(1u);
                return result;
              }
              if (v33 >= v106)
                break;
              v34 = *(_QWORD *)(v105 + 8 * v33);
              ++v35;
              if (v34)
                goto LABEL_12;
            }
            v112 = v104;
          }
        }
      }
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v30, 1, 1, v36);
    v113 = 0;
    goto LABEL_27;
  }
  v113 = (v24 - 1) & v24;
  v25 = __clz(__rbit64(v24)) | (v112 << 6);
LABEL_8:
  v26 = *(_QWORD *)(v108 + 56);
  v27 = (uint64_t *)(*(_QWORD *)(v108 + 48) + 16 * v25);
  v29 = *v27;
  v28 = v27[1];
  v129 = v28;
  v30 = (uint64_t)v111;
  *v111 = v29;
  *(_QWORD *)(v30 + 8) = v28;
  *(_QWORD *)&v128 = v26 + *(_QWORD *)(v107 + 72) * v25;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  sub_2403AE1A4(v128, v30 + *(int *)(v31 + 48), type metadata accessor for SessionData);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  swift_bridgeObjectRetain();
  v32 = v110;
LABEL_27:
  sub_2403B80A4(v30, (uint64_t)v32, &qword_256FFAC18);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v32, 1, v37) == 1)
  {
    swift_release();
    if (qword_256FFA0A8 == -1)
      goto LABEL_78;
    goto LABEL_105;
  }
  v122 = *v32;
  v124 = v32[1];
  v38 = (uint64_t)v32 + *(int *)(v37 + 48);
  v39 = v125;
  sub_2403A91CC(v38, v125, type metadata accessor for SessionData);
  v40 = *(_QWORD *)(v39 + *(int *)(v123 + 32));
  v41 = *(_QWORD *)(v40 + 64);
  v114 = v40 + 64;
  v42 = 1 << *(_BYTE *)(v40 + 32);
  if (v42 < 64)
    v43 = ~(-1 << v42);
  else
    v43 = -1;
  v44 = v43 & v41;
  v115 = (unint64_t)(v42 + 63) >> 6;
  v109 = v115 - 1;
  v117 = v40;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v128 = 0;
  while (1)
  {
    if (v44)
    {
      v129 = (os_log_t)((v44 - 1) & v44);
      v45 = __clz(__rbit64(v44)) | ((_QWORD)v128 << 6);
LABEL_36:
      v46 = *(_QWORD *)(v117 + 56);
      v47 = (_QWORD *)(*(_QWORD *)(v117 + 48) + 16 * v45);
      v48 = v47[1];
      *v11 = *v47;
      v11[1] = v48;
      v49 = v46 + *(_QWORD *)(v116 + 72) * v45;
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
      sub_2403AE1A4(v49, (uint64_t)v11 + *(int *)(v50 + 48), type metadata accessor for RequestData);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v11, 0, 1, v50);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    v51 = v128 + 1;
    if (__OFADD__((_QWORD)v128, 1))
      goto LABEL_101;
    if (v51 < v115)
    {
      v52 = *(_QWORD *)(v114 + 8 * v51);
      if (v52)
        goto LABEL_40;
      v53 = v128 + 2;
      *(_QWORD *)&v128 = v128 + 1;
      if (v51 + 1 < v115)
      {
        v52 = *(_QWORD *)(v114 + 8 * v53);
        if (v52)
          goto LABEL_43;
        *(_QWORD *)&v128 = v51 + 1;
        if (v51 + 2 < v115)
        {
          v52 = *(_QWORD *)(v114 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_40;
          }
          v53 = v51 + 3;
          *(_QWORD *)&v128 = v51 + 2;
          if (v51 + 3 < v115)
          {
            v52 = *(_QWORD *)(v114 + 8 * v53);
            if (v52)
            {
LABEL_43:
              v51 = v53;
LABEL_40:
              v129 = (os_log_t)((v52 - 1) & v52);
              v45 = __clz(__rbit64(v52)) + (v51 << 6);
              *(_QWORD *)&v128 = v51;
              goto LABEL_36;
            }
            while (1)
            {
              v51 = v53 + 1;
              if (__OFADD__(v53, 1))
                goto LABEL_104;
              if (v51 >= v115)
                break;
              v52 = *(_QWORD *)(v114 + 8 * v51);
              ++v53;
              if (v52)
                goto LABEL_40;
            }
            *(_QWORD *)&v128 = v109;
          }
        }
      }
    }
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v11, 1, 1, v54);
    v129 = 0;
LABEL_55:
    sub_2403B80A4((uint64_t)v11, (uint64_t)v13, &qword_256FFAC10);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v13, 1, v55) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_240388AE4(v125, type metadata accessor for SessionData);
      v24 = v113;
      goto LABEL_6;
    }
    v56 = *v13;
    v57 = v13[1];
    sub_2403A91CC((uint64_t)v13 + *(int *)(v55 + 48), (uint64_t)v130, type metadata accessor for RequestData);
    type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator();
    v58 = (_QWORD *)swift_allocObject();
    v59 = MEMORY[0x24BEE4B00];
    v58[2] = MEMORY[0x24BEE4B00];
    v58[3] = v59;
    v58[4] = MEMORY[0x24BEE4B08];
    v58[5] = 0;
    v60 = *(_QWORD *)&v120[*(int *)(v121 + 28)];
    v61 = *(_QWORD *)(v60 + 16);
    if (v61)
    {
      v126 = v56;
      v127 = v57;
      v62 = v60 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      swift_bridgeObjectRetain();
      v63 = *(_QWORD *)(v3 + 72);
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      do
      {
        v64(v5, v62, v2);
        sub_2408DBDF4((uint64_t)v5);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v62 += v63;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease();
      v19 = v135;
      v56 = v126;
      v57 = v127;
    }
    v65 = sub_24050FB78((uint64_t)v130, v122, v124, *(_QWORD *)(v125 + *(int *)(v123 + 28)), *(_QWORD *)(v125 + *(int *)(v123 + 28) + 8), v56, v57, (uint64_t)v58);
    swift_bridgeObjectRelease();
    v66 = v65[2];
    v67 = v19[2];
    v68 = v67 + v66;
    if (__OFADD__(v67, v66))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v70 = v19[3] >> 1, v70 < v68))
    {
      if (v67 <= v68)
        v71 = v67 + v66;
      else
        v71 = v67;
      v19 = sub_24050AE18(isUniquelyReferenced_nonNull_native, v71, 1, v19);
      v70 = v19[3] >> 1;
    }
    v13 = v119;
    if (v65[2])
    {
      v72 = v19[2];
      if (v70 - v72 < v66)
        goto LABEL_99;
      v73 = (unint64_t)&v19[40 * v72 + 4];
      if ((unint64_t)(v65 + 4) < v73 + 320 * v66 && v73 < (unint64_t)&v65[40 * v66 + 4])
        goto LABEL_107;
      swift_arrayInitWithCopy();
      if (v66)
      {
        v75 = v19[2];
        v76 = __OFADD__(v75, v66);
        v77 = v75 + v66;
        if (v76)
          goto LABEL_100;
        v19[2] = v77;
      }
    }
    else if (v66)
    {
      goto LABEL_98;
    }
    swift_bridgeObjectRelease();
    swift_release();
    v135 = v19;
    sub_240388AE4((uint64_t)v130, type metadata accessor for RequestData);
    v11 = v118;
    v44 = (unint64_t)v129;
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    swift_once();
LABEL_78:
    v78 = sub_2408E5C48();
    v79 = __swift_project_value_buffer(v78, (uint64_t)qword_257072498);
    v80 = v135;
    swift_bridgeObjectRetain();
    v81 = sub_2408E5C3C();
    v82 = sub_2408E5EC4();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v83 = 134217984;
      v133[0] = v80[2];
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v81, v82, "Found %ld ExecutionGrainLatency Results", v83, 0xCu);
      MEMORY[0x242684668](v83, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v134 = 0;
    swift_beginAccess();
    v84 = v135;
    v85 = v135[2];
    if (!v85)
      break;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    memcpy(v133, v84 + 4, sizeof(v133));
    v86 = v85 - 1;
    v87 = 44;
    *(_QWORD *)&v88 = 134218242;
    v128 = v88;
    v127 = 0x8000000240921790;
    v126 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      sub_240510F88((uint64_t)v133);
      sub_240510F88((uint64_t)v133);
      sub_240510F88((uint64_t)v133);
      v89 = sub_2408E5C3C();
      v90 = sub_2408E5EA0();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc();
        v130 = (char *)swift_slowAlloc();
        v132 = v130;
        *(_DWORD *)v91 = v128;
        *(_QWORD *)(v91 + 4) = v134;
        *(_WORD *)(v91 + 12) = 2080;
        memcpy(v131, v133, sizeof(v131));
        sub_240510F88((uint64_t)v133);
        v129 = v89;
        v92 = ExecutionGrainLatency.dictionary.getter();
        v93 = sub_2403AEB7C(v92, 1);
        v94 = v86;
        v95 = v84;
        v96 = v79;
        v98 = v97;
        swift_bridgeObjectRelease();
        v99 = v98 ? v93 : 0xD00000000000002ALL;
        v100 = v98 ? v98 : v127;
        v79 = v96;
        v84 = v95;
        v86 = v94;
        sub_240511064((uint64_t)v133);
        *(_QWORD *)(v91 + 14) = sub_2403B3ED0(v99, v100, (uint64_t *)&v132);
        swift_bridgeObjectRelease();
        sub_240511064((uint64_t)v133);
        sub_240511064((uint64_t)v133);
        v101 = v129;
        _os_log_impl(&dword_240347000, v129, v90, "ExecutionGrainLatency Result %ld: %s", (uint8_t *)v91, 0x16u);
        v102 = (uint64_t)v130;
        swift_arrayDestroy();
        MEMORY[0x242684668](v102, -1, -1);
        MEMORY[0x242684668](v91, -1, -1);

        sub_240511064((uint64_t)v133);
      }
      else
      {
        sub_240511064((uint64_t)v133);
        sub_240511064((uint64_t)v133);
        sub_240511064((uint64_t)v133);

      }
      if (__OFADD__(v134, 1))
        break;
      ++v134;
      if (!v86)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v135;
      }
      memcpy(v133, &v84[v87], sizeof(v133));
      v87 += 40;
      --v86;
    }
  }
  return (uint64_t)v84;
}

uint64_t type metadata accessor for ExecutionGrainLatencyCalculator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExecutionGrainLatencyCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExecutionGrainLatencyCalculator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ExecutionGrainLatencyCalculator.extractLatencies(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for ExecutionGrainDimensionsSpec()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ExecutionGrainSpec()
{
  return objc_opt_self();
}

uint64_t sub_240510F88(uint64_t a1)
{
  char v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 144);
  v2 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v5, v4, v2);
  swift_retain();
  return a1;
}

uint64_t sub_240511064(uint64_t a1)
{
  char v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 144);
  v2 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(v5, v4, v2);
  swift_release();
  return a1;
}

uint64_t sub_24051113C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD v9[4];

  v1 = sub_2408E5B7C();
  sub_24051A988();
  v2 = v1;
  sub_2408E5BC4();
  if (!v0)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4AF8];
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    swift_retain();
    sub_2408E5C60();
    swift_release();
    swift_release();
    if (qword_254355DF0 != -1)
      swift_once();
    v4 = sub_2408E5C48();
    __swift_project_value_buffer(v4, (uint64_t)qword_254356428);
    swift_retain();
    v5 = sub_2408E5C3C();
    v6 = sub_2408E5EA0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      swift_beginAccess();
      sub_2408E5F3C();
      swift_release();
      _os_log_impl(&dword_240347000, v5, v6, "%ld of events loaded from Biome stream", v7, 0xCu);
      MEMORY[0x242684668](v7, -1, -1);

    }
    else
    {

      swift_release();
    }
    swift_beginAccess();
    v2 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  return v2;
}

uint64_t sub_240511394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  void (*v18)(char *, uint64_t);
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2408E5B10();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = (_QWORD *)(a2 + 16);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12((char *)&v20 - v9, a1, v4);
  v12(v8, (uint64_t)v10, v4);
  swift_beginAccess();
  v13 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_24050A878(0, v13[2] + 1, 1, v13);
    *v11 = v13;
  }
  v16 = v13[2];
  v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    v13 = sub_24050A878((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
    *v11 = v13;
  }
  v21 = v4;
  v22 = MEMORY[0x24BE58790];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  v12((char *)boxed_opaque_existential_1, (uint64_t)v8, v4);
  v13[2] = v16 + 1;
  sub_24041D038(&v20, (uint64_t)&v13[5 * v16 + 4]);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  swift_endAccess();
  return ((uint64_t (*)(char *, uint64_t))v18)(v10, v4);
}

void sub_240511534(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_240511584(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2405115CC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_2408E5FF0();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x242683D68](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2408E5FD8();
        sub_2408E5FFC();
        sub_2408E6008();
        sub_2408E5FE4();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_2408E5FD8();
        sub_2408E5FFC();
        sub_2408E6008();
        sub_2408E5FE4();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2408E6038();
    swift_bridgeObjectRelease();
    sub_2408E5FF0();
    swift_bridgeObjectRetain();
    v2 = sub_2408E6038();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_2405117B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  _BYTE v24[40];
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570020C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2408E5B10();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_24050AFB8(0, v12, 0);
  if (!v12)
    return v25;
  v13 = a1 + 32;
  v23 = v9;
  while (1)
  {
    sub_2403AE340(v13, (uint64_t)v24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256FFCDB8);
    v14 = swift_dynamicCast();
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v14)
      break;
    v15(v4, 0, 1, v5);
    v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v11, v4, v5);
    v16(v9, v11, v5);
    v17 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24050AFB8(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v17 = v25;
    }
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_24050AFB8(v18 > 1, v19 + 1, 1);
      v17 = v25;
    }
    *(_QWORD *)(v17 + 16) = v19 + 1;
    v20 = v17
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(_QWORD *)(v6 + 72) * v19;
    v9 = v23;
    v16((char *)v20, v23, v5);
    v25 = v17;
    v13 += 40;
    if (!--v12)
      return v17;
  }
  v15(v4, 1, 1, v5);
  swift_release();
  sub_2403A97FC((uint64_t)v4, &qword_2570020C8);
  return 0;
}

uint64_t BiomeSessionBuilder.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  BiomeSessionBuilder.init()();
  return v0;
}

_QWORD *BiomeSessionBuilder.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  id v4;

  v0[3] = 0xD000000000000020;
  v0[4] = 0x8000000240928270;
  type metadata accessor for DataProcessorBookmarkProvider();
  v1 = (_QWORD *)swift_allocObject();
  v2 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v3 = (void *)sub_2408E5CE4();
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  v1[2] = v4;
  v1[3] = 0xD000000000000020;
  v1[4] = 0x8000000240928270;
  v1[5] = 0xD000000000000035;
  v1[6] = 0x80000002409282D0;
  v0[2] = v1;
  return v0;
}

uint64_t sub_240511AFC(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  if (qword_254355DF0 != -1)
    swift_once();
  v6 = sub_2408E5C48();
  __swift_project_value_buffer(v6, (uint64_t)qword_254356428);
  swift_bridgeObjectRetain_n();
  v7 = sub_2408E5C3C();
  v8 = sub_2408E5EA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_2403B3ED0(a1, a2, &v19);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v7, v8, "Updated user default to use custom bookmark: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v10, -1, -1);
    MEMORY[0x242684668](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = v3[3];
  v11 = v3[4];
  type metadata accessor for DataProcessorBookmarkProvider();
  v13 = (_QWORD *)swift_allocObject();
  v14 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (void *)sub_2408E5CE4();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithSuiteName_, v15);

  v13[2] = v16;
  v13[3] = v12;
  v13[4] = v11;
  v19 = v12;
  v20 = v11;
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  v17 = v20;
  v13[5] = v19;
  v13[6] = v17;
  v3[2] = v13;
  swift_release();
  return swift_retain();
}

uint64_t sub_240511D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for SessionViewConfigs();
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240511DC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  _QWORD *v11;

  v1 = v0[3];
  v2 = v0[4];
  v3 = sub_2408E5624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1, v3);
  v6 = swift_task_alloc();
  sub_2408E5618();
  if (v2 < 0)
    return sub_2408E6020();
  v8 = (int *)v0[6];
  v7 = v0[7];
  v9 = v0[4];
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v10(v7, v5, v3);
  v10(v7 + v8[5], v6, v3);
  *(_QWORD *)(v7 + v8[6]) = v9;
  *(_QWORD *)(v7 + v8[7]) = &unk_2510A6A98;
  swift_task_dealloc();
  swift_task_dealloc();
  v11 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_240511F3C;
  return sub_2405153FC(v0[2], v0[7]);
}

uint64_t sub_240511F3C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240511F90()
{
  uint64_t v0;

  sub_240388AE4(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240511FD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for SessionViewConfigs();
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240512030()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = v0[4];
  v1 = v0[5];
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.getter(v1);
  swift_release();
  sub_2408E5618();
  *(_QWORD *)(v1 + *(int *)(v2 + 24)) = 0;
  *(_QWORD *)(v1 + *(int *)(v2 + 28)) = &unk_2510A6AC0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_2405120D0;
  return sub_2405153FC(v0[2], v0[5]);
}

uint64_t sub_2405120D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240512124()
{
  uint64_t v0;

  sub_240388AE4(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240512168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for SessionViewConfigs();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2405121C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[3];
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.getter(v1);
  swift_release();
  sub_2408E5618();
  *(_QWORD *)(v1 + *(int *)(v2 + 24)) = 0;
  *(_QWORD *)(v1 + *(int *)(v2 + 28)) = v3;
  if (*(_QWORD *)(v3 + 16) == 1 && (*(_BYTE *)(v0[3] + 32) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)swift_task_alloc();
    v0[7] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_2405122D0;
    return sub_2405153FC(v0[2], v0[6]);
  }
  else
  {
    swift_bridgeObjectRetain();
    v4 = (_QWORD *)swift_task_alloc();
    v0[8] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = sub_240512368;
    return sub_240512700(v0[2], v0[6]);
  }
}

uint64_t sub_2405122D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240512324()
{
  uint64_t v0;

  sub_240388AE4(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240512368()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2405123BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = type metadata accessor for SessionViewConfigs();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240512420()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  _QWORD *v14;

  v1 = v0[3];
  v2 = v0[4];
  v3 = sub_2408E5624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1, v3);
  v6 = swift_task_alloc();
  sub_2408E5618();
  if (v2 < 0)
    return sub_2408E6020();
  v8 = (int *)v0[7];
  v7 = v0[8];
  v10 = v0[4];
  v9 = v0[5];
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v11(v7, v5, v3);
  v11(v7 + v8[5], v6, v3);
  *(_QWORD *)(v7 + v8[6]) = v10;
  *(_QWORD *)(v7 + v8[7]) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  if (*(_QWORD *)(v9 + 16) == 1 && (*(_BYTE *)(v0[5] + 32) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)swift_task_alloc();
    v0[9] = (uint64_t)v14;
    *v14 = v0;
    v14[1] = sub_240512614;
    return sub_2405153FC(v0[2], v0[8]);
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)swift_task_alloc();
    v0[10] = (uint64_t)v12;
    *v12 = v0;
    v12[1] = sub_2405126AC;
    return sub_240512700(v0[2], v0[8]);
  }
}

uint64_t sub_240512614()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240512668()
{
  uint64_t v0;

  sub_240388AE4(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2405126AC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240512700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020B8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for SessionViewConfigs();
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2405127A0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  if (qword_254355DF0 != -1)
    swift_once();
  v1 = sub_2408E5C48();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_254356428);
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_240347000, v2, v3, "Building SessionView from IF Transcript and IF Telemetry stream", v4, 2u);
    MEMORY[0x242684668](v4, -1, -1);
  }
  v5 = v0[17];
  v6 = v0[11];

  sub_2403AE1A4(v6, v5, (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  v7 = sub_2408E5C3C();
  v8 = sub_2408E5EA0();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[17];
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v37 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_2408E5624();
    sub_24041CF80();
    v13 = sub_2408E6170();
    v0[9] = sub_2403B3ED0(v13, v14, &v37);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_240388AE4(v10, (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
    _os_log_impl(&dword_240347000, v7, v8, "Bookmark: updating lastCollectionDate to current Date %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v12, -1, -1);
    MEMORY[0x242684668](v11, -1, -1);
  }
  else
  {
    sub_240388AE4(v10, (uint64_t (*)(_QWORD))type metadata accessor for SessionViewConfigs);
  }

  v15 = v0[16];
  v16 = v0[11];
  v35 = v0[12];
  v17 = v16 + *(int *)(v15 + 20);
  v18 = sub_2408E5624();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = swift_task_alloc();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v21(v20, v17, v18);
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.setter(v20);
  swift_release();
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v22 = swift_task_alloc();
  v21(v22, v16, v18);
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v23(v22, 0, 1, v18);
  v24 = swift_task_alloc();
  v21(v24, v17, v18);
  v23(v24, 0, 1, v18);
  if (*(_QWORD *)(v16 + *(int *)(v15 + 24)) >= 0x7FFFFFFFFFFFFFFFuLL)
    v25 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v25 = *(_QWORD *)(v16 + *(int *)(v15 + 24));
  sub_24051A8D0();
  v26 = sub_240728534(v22, v24, v25, 0, 0);
  v0[19] = v26;
  swift_task_dealloc();
  swift_task_dealloc();
  v27 = sub_24051113C();
  if (!v27 || (v28 = sub_2405117B0(v27), swift_bridgeObjectRelease(), !v28))
    v28 = MEMORY[0x24BEE4AF8];
  v0[20] = v28;
  v0[5] = v28;
  swift_bridgeObjectRetain();
  v29 = sub_2408E5C3C();
  v30 = sub_2408E5EA0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v31 = 134217984;
    v0[8] = *(_QWORD *)(v28 + 16);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v29, v30, "#BiomeSessionBuilder Number of IF Telemetry events events loaded: %ld", v31, 0xCu);
    MEMORY[0x242684668](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v32 = *MEMORY[0x24BE0C158];
  v0[21] = *(_QWORD *)(v35 + 16);
  v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2570020C0 + dword_2570020C0);
  swift_retain();
  v33 = (_QWORD *)swift_task_alloc();
  v0[22] = v33;
  *v33 = v0;
  v33[1] = sub_240512CA8;
  return v36(v32, (uint64_t)v26, 0xD000000000000020, 0x8000000240928400);
}

uint64_t sub_240512CA8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240512D0C()
{
  uint64_t v0;
  unint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(unint64_t);

  if (!*(_QWORD *)(v0 + 184)
    || (v1 = sub_2405115CC(*(_QWORD *)(v0 + 184)), *(_QWORD *)(v0 + 192) = v1, swift_bridgeObjectRelease(), !v1))
  {
    swift_bridgeObjectRelease();
    v6 = sub_2408E5C3C();
    v7 = sub_2408E5EA0();
    if (!os_log_type_enabled(v6, v7))
    {
LABEL_11:
      v10 = *(_QWORD *)(v0 + 80);

      v11 = type metadata accessor for SessionView(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "BiomeSessionBuilder loaded nil IF transcript events, exiting SessionView builder";
LABEL_10:
    _os_log_impl(&dword_240347000, v6, v7, v9, v8, 2u);
    MEMORY[0x242684668](v8, -1, -1);
    goto LABEL_11;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2408E6038();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_5;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = sub_2408E5C3C();
    v7 = sub_2408E5EA0();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_11;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "BiomeSessionBuilder loaded empty list of events, not updating SessionView";
    goto LABEL_10;
  }
LABEL_5:
  swift_bridgeObjectRetain_n();
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_2408E6038();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v5;
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v2, v3, "Number of Sage Transcript events: %ld", v4, 0xCu);
    MEMORY[0x242684668](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v15 = (uint64_t (*)(unint64_t))((char *)&dword_256FFCA08 + dword_256FFCA08);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v13;
  *v13 = v0;
  v13[1] = sub_240513024;
  return v15(v1);
}

uint64_t sub_240513024(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_240513088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_beginAccess();
  sub_240513294(v1, *(_QWORD *)(v0 + 40), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403A9210(v2, v3, &qword_2570020B8);
  v4 = sub_2408E5C3C();
  v5 = sub_2408E5EA0();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 112);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 104);
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    sub_2403A9210(v7, v8, &qword_2570020B8);
    v10 = type metadata accessor for SessionView(0);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
    v12 = *(_QWORD *)(v0 + 104);
    if (v11 == 1)
    {
      sub_2403A97FC(v12, &qword_2570020B8);
      v13 = -1;
    }
    else
    {
      v13 = *(_QWORD *)(v12 + *(int *)(v10 + 24));
      sub_240388AE4(v12, type metadata accessor for SessionView);
    }
    sub_2403A97FC(*(_QWORD *)(v0 + 112), &qword_2570020B8);
    *(_QWORD *)(v0 + 48) = v13;
    sub_2408E5F3C();
    _os_log_impl(&dword_240347000, v4, v5, "Formulated SessionView: num= %ld", v9, 0xCu);
    MEMORY[0x242684668](v9, -1, -1);
  }
  else
  {
    sub_2403A97FC(*(_QWORD *)(v0 + 112), &qword_2570020B8);
  }
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 80);

  sub_2403B80A4(v14, v15, &qword_2570020B8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240513294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(void (*)(void), char *, uint64_t);
  unint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t *v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  unint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  uint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t *v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  void (*v147)(void);
  uint64_t v148;
  char *v149;
  void (*v150)(uint64_t, char *, uint64_t);
  _QWORD *v151;
  unint64_t v152;
  char *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  char v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  unint64_t v175;
  uint64_t v176;
  _BOOL8 v177;
  uint64_t v178;
  char v179;
  unint64_t v180;
  char v181;
  uint64_t v182;
  void (*v183)(char *, char *, uint64_t);
  unint64_t v184;
  char v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char *v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  unint64_t v205;
  uint64_t v206;
  _BOOL8 v207;
  uint64_t v208;
  char v209;
  unint64_t v210;
  char v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  int *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char *v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  unint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  unint64_t v280;
  char *v281;
  char v282;
  unint64_t v283;
  char *v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  int *v288;
  uint64_t *v289;
  char **v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  char v299;
  unint64_t v300;
  uint64_t v301;
  _BOOL8 v302;
  uint64_t v303;
  char v304;
  unint64_t v305;
  char v306;
  _QWORD *v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t (**v312)(char *, uint64_t, uint64_t);
  int v313;
  uint64_t v314;
  NSObject *v315;
  os_log_type_t v316;
  uint8_t *v317;
  uint64_t v318;
  uint64_t result;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  void (*v326)(uint64_t, char *, uint64_t);
  uint64_t v327;
  int *v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD *v331;
  _QWORD *v332;
  _QWORD *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  _QWORD *v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  __int128 v361;
  char *v362;
  _QWORD *v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  uint64_t *v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370;
  __int128 v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  __int128 v377;
  uint64_t v378;
  uint64_t *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  void (*v385)(void);
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  __int128 v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  unsigned int v395;
  unsigned __int16 v396;
  uint64_t v397;

  v330 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  MEMORY[0x24BDAC7A8](v5);
  v348 = (uint64_t)&v329 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v359 = type metadata accessor for RequestData(0);
  v358 = *(_QWORD *)(v359 - 8);
  v7 = MEMORY[0x24BDAC7A8](v359);
  v381 = (uint64_t)&v329 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v380 = (uint64_t)&v329 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v352 = (uint64_t)&v329 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v351 = (uint64_t)&v329 - v13;
  v340 = type metadata accessor for AttributionTraits(0);
  v339 = *(_QWORD *)(v340 - 8);
  MEMORY[0x24BDAC7A8](v340);
  v341 = (char *)&v329 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  MEMORY[0x24BDAC7A8](v15);
  v338 = (uint64_t)&v329 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = type metadata accessor for SessionData(0);
  v17 = MEMORY[0x24BDAC7A8](v337);
  v335 = (uint64_t)&v329 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v387 = (uint64_t)&v329 - v19;
  v336 = type metadata accessor for SessionSignature(0);
  MEMORY[0x24BDAC7A8](v336);
  v343 = (uint64_t)&v329 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v355 = type metadata accessor for TranscriptProtoEvent(0);
  v356 = *(_QWORD *)(v355 - 8);
  v21 = MEMORY[0x24BDAC7A8](v355);
  v360 = (uint64_t)&v329 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v382 = (uint64_t)&v329 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v383 = (uint64_t)&v329 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v386 = (uint64_t)&v329 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257002098);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v365 = (char *)&v329 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v329 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570020A0);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v353 = (char *)&v329 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v329 - v36;
  v388 = sub_2408E5B10();
  v38 = MEMORY[0x24BDAC7A8](v388);
  v362 = (char *)&v329 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v384 = (char *)&v329 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v385 = (void (*)(void))((char *)&v329 - v43);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v329 - v45;
  v47 = (_QWORD *)MEMORY[0x24BEE4B00];
  *(_QWORD *)&v389 = MEMORY[0x24BEE4B00];
  v48 = *(_QWORD *)(a2 + 16);
  v49 = "extType";
  v366 = v44;
  v370 = a1;
  if (v48)
  {
    v50 = *(unsigned __int8 *)(v44 + 80);
    v51 = (v50 + 32) & ~v50;
    v52 = a2 + v51;
    v53 = *(_QWORD *)(v44 + 72);
    *(_QWORD *)&v377 = v51;
    v373 = v53 + v51;
    v372 = v50 | 7;
    v379 = *(uint64_t **)(v44 + 16);
    v369 = a2;
    swift_bridgeObjectRetain();
    v54 = (_QWORD *)MEMORY[0x24BEE4B00];
    v375 = (uint64_t)"iomeSessionBuilder";
    v371 = xmmword_2408EADA0;
    v378 = (uint64_t)v46;
    v374 = v37;
    v376 = v53;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v379)(v46, v52, v388);
      sub_2408E5AEC();
      v56 = sub_2408E5AE0();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v32, 1, v56) == 1)
      {
        sub_2403A97FC((uint64_t)v32, &qword_257002098);
        v58 = v375 | 0x8000000000000000;
        v59 = 0xD000000000000011;
      }
      else
      {
        v60 = v54;
        sub_2408E5AD4();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v56);
        v61 = sub_2408E5B40();
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v37, 1, v61) == 1)
        {
          sub_2403A97FC((uint64_t)v37, &qword_2570020A0);
          v58 = v375 | 0x8000000000000000;
          v59 = 0xD000000000000011;
        }
        else
        {
          v59 = sub_2408E5B28();
          v58 = v63;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v61);
        }
        v54 = v60;
        v46 = (char *)v378;
      }
      v65 = sub_240509E28(v59, v58);
      v66 = v54[2];
      v67 = (v64 & 1) == 0;
      v68 = v66 + v67;
      if (__OFADD__(v66, v67))
        goto LABEL_166;
      v69 = v64;
      if (v54[3] < v68)
      {
        sub_2403ABEB0(v68, 1);
        v54 = (_QWORD *)v389;
        v70 = sub_240509E28(v59, v58);
        if ((v69 & 1) != (v71 & 1))
        {
LABEL_172:
          result = sub_2408E61B8();
          __break(1u);
          return result;
        }
        v65 = v70;
      }
      if ((v69 & 1) != 0)
      {
        v72 = v32;
        swift_bridgeObjectRelease();
        v73 = v54;
        v74 = v54[7];
        v75 = *(void (**)(void (*)(void), char *, uint64_t))(v366 + 32);
        v75(v385, v46, v388);
        v76 = *(_QWORD *)(v74 + 8 * v65);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v74 + 8 * v65) = v76;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v76 = sub_24050AF38(0, *(_QWORD *)(v76 + 16) + 1, 1, v76);
          *(_QWORD *)(v74 + 8 * v65) = v76;
        }
        v79 = *(_QWORD *)(v76 + 16);
        v78 = *(_QWORD *)(v76 + 24);
        if (v79 >= v78 >> 1)
        {
          v76 = sub_24050AF38(v78 > 1, v79 + 1, 1, v76);
          *(_QWORD *)(v74 + 8 * v65) = v76;
        }
        v54 = v73;
        *(_QWORD *)(v76 + 16) = v79 + 1;
        v55 = v376;
        v75((void (*)(void))(v76 + v377 + v79 * v376), (char *)v385, v388);
        v32 = v72;
        v37 = v374;
        v46 = (char *)v378;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2570019C0);
        v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = v371;
        (*(void (**)(uint64_t, char *, uint64_t))(v366 + 32))(v80 + v377, v46, v388);
        v54[(v65 >> 6) + 8] |= 1 << v65;
        v81 = (unint64_t *)(v54[6] + 16 * v65);
        *v81 = v59;
        v81[1] = v58;
        *(_QWORD *)(v54[7] + 8 * v65) = v80;
        v82 = v54[2];
        v83 = __OFADD__(v82, 1);
        v84 = v82 + 1;
        if (v83)
          goto LABEL_168;
        v54[2] = v84;
        v55 = v376;
      }
      v52 += v55;
      if (!--v48)
      {
        swift_bridgeObjectRelease();
        v47 = (_QWORD *)MEMORY[0x24BEE4B00];
        a1 = v370;
        v49 = "ContextProtoContextType" + 16;
        goto LABEL_24;
      }
    }
  }
  v54 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_24:
  *(_QWORD *)&v389 = v47;
  v85 = *(_QWORD *)(a1 + 16);
  v346 = v54;
  if (v85)
  {
    v86 = *(unsigned __int8 *)(v356 + 80);
    v87 = (v86 + 32) & ~v86;
    v88 = a1 + v87;
    v89 = *(_QWORD *)(v356 + 72);
    v385 = (void (*)(void))v87;
    v378 = v86 | 7;
    v379 = (uint64_t *)(v89 + v87);
    swift_bridgeObjectRetain();
    v90 = (_QWORD *)MEMORY[0x24BEE4B00];
    v377 = *((_OWORD *)v49 + 218);
    do
    {
      v91 = v386;
      sub_2403AE1A4(v88, v386, type metadata accessor for TranscriptProtoEvent);
      v93 = *(_QWORD *)(v91 + 48);
      v92 = *(_QWORD *)(v91 + 56);
      swift_bridgeObjectRetain();
      v95 = sub_240509E28(v93, v92);
      v96 = v90[2];
      v97 = (v94 & 1) == 0;
      v98 = v96 + v97;
      if (__OFADD__(v96, v97))
        goto LABEL_167;
      v99 = v94;
      if (v90[3] < v98)
      {
        sub_2403ABEA4(v98, 1);
        v90 = (_QWORD *)v389;
        v100 = sub_240509E28(v93, v92);
        if ((v99 & 1) != (v101 & 1))
          goto LABEL_172;
        v95 = v100;
      }
      if ((v99 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v102 = v90[7];
        sub_2403A91CC(v386, v383, type metadata accessor for TranscriptProtoEvent);
        v103 = *(_QWORD *)(v102 + 8 * v95);
        v104 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v102 + 8 * v95) = v103;
        if ((v104 & 1) == 0)
        {
          v103 = sub_24050A998(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
          *(_QWORD *)(v102 + 8 * v95) = v103;
        }
        v106 = *(_QWORD *)(v103 + 16);
        v105 = *(_QWORD *)(v103 + 24);
        if (v106 >= v105 >> 1)
        {
          v103 = sub_24050A998(v105 > 1, v106 + 1, 1, v103);
          *(_QWORD *)(v102 + 8 * v95) = v103;
        }
        *(_QWORD *)(v103 + 16) = v106 + 1;
        sub_2403A91CC(v383, (uint64_t)v385 + v103 + v106 * v89, type metadata accessor for TranscriptProtoEvent);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2570019B0);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = v377;
        sub_2403A91CC(v386, (uint64_t)v385 + v107, type metadata accessor for TranscriptProtoEvent);
        v90[(v95 >> 6) + 8] |= 1 << v95;
        v108 = (uint64_t *)(v90[6] + 16 * v95);
        *v108 = v93;
        v108[1] = v92;
        *(_QWORD *)(v90[7] + 8 * v95) = v107;
        v109 = v90[2];
        v83 = __OFADD__(v109, 1);
        v110 = v109 + 1;
        if (v83)
          goto LABEL_169;
        v90[2] = v110;
      }
      v88 += v89;
      --v85;
    }
    while (v85);
    swift_bridgeObjectRelease();
  }
  else
  {
    v90 = v47;
  }
  v111 = swift_retain();
  v112 = sub_2405195F0(v111);
  swift_release();
  v113 = swift_retain();
  v114 = sub_2405195F0(v113);
  swift_release();
  *(_QWORD *)&v389 = v112;
  sub_2405180B4((uint64_t)v114);
  v115 = sub_24051A76C(v389);
  swift_bridgeObjectRelease();
  v116 = sub_24051950C(v115);
  swift_bridgeObjectRelease();
  v334 = v116[2];
  if (v334)
  {
    SessionSignature.init()(v343);
    v117 = 0;
    v333 = v116 + 4;
    v332 = v341 + 16;
    v361 = xmmword_2408EADA0;
    v357 = (unint64_t)"missing_sessionID";
    v118 = MEMORY[0x24BEE4B00];
    v347 = v90;
    v331 = v116;
    while (1)
    {
      if (v117 >= v116[2])
        goto LABEL_170;
      v345 = v118;
      v344 = v117;
      v123 = &v333[2 * v117];
      v124 = v123[1];
      v350 = *v123;
      v349 = v124;
      swift_bridgeObjectRetain();
      v125 = v387;
      sub_2408E5618();
      v126 = (int *)v337;
      v127 = v125 + *(int *)(v337 + 20);
      v128 = (int *)v336;
      v386 = v127 + *(int *)(v336 + 28);
      v385 = *(void (**)(void))(v339 + 56);
      v129 = v340;
      v385();
      *(_WORD *)v127 = 769;
      *(_QWORD *)(v127 + 8) = 0;
      *(_QWORD *)(v127 + 16) = 0xE000000000000000;
      *(_QWORD *)(v127 + v128[8]) = sub_2403A9060(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)(v127 + v128[9]) = &unk_2510A6A68;
      *(_QWORD *)(v127 + v128[10]) = MEMORY[0x24BEE4AF8];
      v130 = v332;
      *v332 = 0;
      v130[1] = 0;
      v131 = v341;
      v132 = (uint64_t)&v341[*(int *)(v129 + 24)];
      v133 = sub_2408E566C();
      v134 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56);
      v134(v132, 1, 1, v133);
      v135 = (_QWORD *)((char *)v131 + *(int *)(v129 + 28));
      *v131 = 0;
      v131[1] = 0;
      *v135 = 0;
      v135[1] = 0;
      sub_2403A97FC(v132, &qword_256FFA660);
      v134(v132, 1, 1, v133);
      swift_bridgeObjectRelease();
      *v135 = 0;
      v135[1] = 0;
      v136 = v350;
      v137 = (uint64_t)v131;
      v138 = v349;
      v139 = v338;
      sub_2403A91CC(v137, v338, type metadata accessor for AttributionTraits);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v385)(v139, 0, 1, v129);
      sub_24051A800(v139, v386);
      *(_QWORD *)(v127 + v128[11]) = MEMORY[0x24BEE4AF8];
      v140 = (_QWORD *)(v127 + v128[12]);
      *v140 = 0;
      v140[1] = 0xE000000000000000;
      v141 = (uint64_t *)(v125 + v126[6]);
      v142 = (_QWORD *)(v125 + v126[7]);
      *v142 = 0;
      v142[1] = 0xE000000000000000;
      v363 = v142;
      v143 = v126[8];
      v144 = (char *)MEMORY[0x24BEE4AF8];
      v145 = sub_2403A8CC4(MEMORY[0x24BEE4AF8]);
      v383 = v143;
      *(_QWORD *)(v125 + v143) = v145;
      *v141 = v136;
      v141[1] = v138;
      v146 = sub_2408E5624();
      v147 = *(void (**)(void))(v146 - 8);
      MEMORY[0x24BDAC7A8](v146);
      v364 = v148;
      v149 = (char *)&v329 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_bridgeObjectRetain();
      sub_2408E5618();
      v385 = v147;
      v150 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v147 + 5);
      v151 = v346;
      v386 = v146;
      v150(v125, v149, v146);
      sub_24051A848(v343, v127);
      if (v151[2])
      {
        swift_bridgeObjectRetain();
        v152 = sub_240509E28(v136, v138);
        v153 = v144;
        v154 = (uint64_t)v365;
        v155 = (_QWORD *)MEMORY[0x24BEE4B00];
        v156 = v138;
        if ((v157 & 1) != 0)
        {
          v153 = *(char **)(v151[7] + 8 * v152);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v153 = v144;
        v154 = (uint64_t)v365;
        v155 = (_QWORD *)MEMORY[0x24BEE4B00];
        v156 = v138;
      }
      v158 = v347;
      *(_QWORD *)&v389 = v155;
      v159 = *((_QWORD *)v153 + 2);
      if (v159)
      {
        v160 = *(unsigned __int8 *)(v366 + 80);
        v161 = (v160 + 32) & ~v160;
        v374 = v153;
        v162 = &v153[v161];
        *(_QWORD *)&v377 = *(_QWORD *)(v366 + 72);
        v378 = v161;
        v376 = v377 + v161;
        v375 = v160 | 7;
        v379 = *(uint64_t **)(v366 + 16);
        v163 = v155;
        ((void (*)(char *, char *, uint64_t))v379)(v384, &v153[v161], v388);
        while (1)
        {
          sub_2408E5AEC();
          v165 = sub_2408E5AE0();
          v166 = *(_QWORD *)(v165 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48))(v154, 1, v165) == 1)
          {
            sub_2403A97FC(v154, &qword_257002098);
            v167 = v357 | 0x8000000000000000;
            v168 = 0xD000000000000011;
          }
          else
          {
            v169 = v353;
            sub_2408E5AD4();
            v170 = (uint64_t)v169;
            (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v154, v165);
            v171 = sub_2408E5B40();
            v172 = *(_QWORD *)(v171 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171) == 1)
            {
              sub_2403A97FC(v170, &qword_2570020A0);
              v167 = v357 | 0x8000000000000000;
              v168 = 0xD000000000000011;
            }
            else
            {
              v168 = sub_2408E5B1C();
              v167 = v173;
              (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
            }
            v154 = (uint64_t)v365;
          }
          v175 = sub_240509E28(v168, v167);
          v176 = v163[2];
          v177 = (v174 & 1) == 0;
          v178 = v176 + v177;
          if (__OFADD__(v176, v177))
            break;
          v179 = v174;
          if (v163[3] < v178)
          {
            sub_2403ABEB0(v178, 1);
            v163 = (_QWORD *)v389;
            v180 = sub_240509E28(v168, v167);
            if ((v179 & 1) != (v181 & 1))
              goto LABEL_172;
            v175 = v180;
          }
          if ((v179 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v182 = v163[7];
            v183 = *(void (**)(char *, char *, uint64_t))(v366 + 32);
            v183(v362, v384, v388);
            v184 = *(_QWORD *)(v182 + 8 * v175);
            v185 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v182 + 8 * v175) = v184;
            if ((v185 & 1) == 0)
            {
              v184 = sub_24050AF38(0, *(_QWORD *)(v184 + 16) + 1, 1, v184);
              *(_QWORD *)(v182 + 8 * v175) = v184;
            }
            v187 = *(_QWORD *)(v184 + 16);
            v186 = *(_QWORD *)(v184 + 24);
            if (v187 >= v186 >> 1)
            {
              v184 = sub_24050AF38(v186 > 1, v187 + 1, 1, v184);
              *(_QWORD *)(v182 + 8 * v175) = v184;
            }
            v144 = (char *)MEMORY[0x24BEE4AF8];
            *(_QWORD *)(v184 + 16) = v187 + 1;
            v164 = v377;
            v183((char *)(v184 + v378 + v187 * v377), v362, v388);
            v154 = (uint64_t)v365;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2570019C0);
            v188 = swift_allocObject();
            *(_OWORD *)(v188 + 16) = v361;
            (*(void (**)(uint64_t, char *, uint64_t))(v366 + 32))(v188 + v378, v384, v388);
            v163[(v175 >> 6) + 8] |= 1 << v175;
            v189 = (unint64_t *)(v163[6] + 16 * v175);
            *v189 = v168;
            v189[1] = v167;
            *(_QWORD *)(v163[7] + 8 * v175) = v188;
            v190 = v163[2];
            v83 = __OFADD__(v190, 1);
            v191 = v190 + 1;
            if (v83)
              goto LABEL_163;
            v163[2] = v191;
            v164 = v377;
          }
          v162 += v164;
          if (!--v159)
          {
            swift_bridgeObjectRelease();
            v155 = (_QWORD *)MEMORY[0x24BEE4B00];
            v158 = v347;
            v156 = v349;
            goto LABEL_74;
          }
          ((void (*)(char *, char *, uint64_t))v379)(v384, v162, v388);
        }
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
        goto LABEL_171;
      }
      swift_bridgeObjectRelease();
      v163 = v155;
LABEL_74:
      v368 = v163;
      if (v158[2])
      {
        swift_bridgeObjectRetain();
        v192 = sub_240509E28(v350, v156);
        v193 = v144;
        if ((v194 & 1) != 0)
        {
          v193 = *(char **)(v158[7] + 8 * v192);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v193 = v144;
      }
      *(_QWORD *)&v389 = v155;
      v195 = *((_QWORD *)v193 + 2);
      if (v195)
      {
        v196 = *(unsigned __int8 *)(v356 + 80);
        v197 = (v196 + 32) & ~v196;
        *(_QWORD *)&v377 = v193;
        v198 = (uint64_t)&v193[v197];
        v199 = *(_QWORD *)(v356 + 72);
        v378 = v196 | 7;
        v379 = (uint64_t *)(v199 + v197);
        v200 = v155;
        do
        {
          v201 = v382;
          sub_2403AE1A4(v198, v382, type metadata accessor for TranscriptProtoEvent);
          v202 = *(_QWORD *)(v201 + 32);
          v203 = *(_QWORD *)(v201 + 40);
          swift_bridgeObjectRetain();
          v205 = sub_240509E28(v202, v203);
          v206 = v200[2];
          v207 = (v204 & 1) == 0;
          v208 = v206 + v207;
          if (__OFADD__(v206, v207))
            goto LABEL_161;
          v209 = v204;
          if (v200[3] < v208)
          {
            sub_2403ABEA4(v208, 1);
            v200 = (_QWORD *)v389;
            v210 = sub_240509E28(v202, v203);
            if ((v209 & 1) != (v211 & 1))
              goto LABEL_172;
            v205 = v210;
          }
          if ((v209 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v212 = v200[7];
            sub_2403A91CC(v382, v360, type metadata accessor for TranscriptProtoEvent);
            v213 = *(_QWORD *)(v212 + 8 * v205);
            v214 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v212 + 8 * v205) = v213;
            if ((v214 & 1) == 0)
            {
              v213 = sub_24050A998(0, *(_QWORD *)(v213 + 16) + 1, 1, v213);
              *(_QWORD *)(v212 + 8 * v205) = v213;
            }
            v216 = *(_QWORD *)(v213 + 16);
            v215 = *(_QWORD *)(v213 + 24);
            if (v216 >= v215 >> 1)
            {
              v213 = sub_24050A998(v215 > 1, v216 + 1, 1, v213);
              *(_QWORD *)(v212 + 8 * v205) = v213;
            }
            *(_QWORD *)(v213 + 16) = v216 + 1;
            sub_2403A91CC(v360, v213 + v197 + v216 * v199, type metadata accessor for TranscriptProtoEvent);
            v144 = (char *)MEMORY[0x24BEE4AF8];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2570019B0);
            v217 = swift_allocObject();
            *(_OWORD *)(v217 + 16) = v361;
            sub_2403A91CC(v382, v217 + v197, type metadata accessor for TranscriptProtoEvent);
            v200[(v205 >> 6) + 8] |= 1 << v205;
            v218 = (uint64_t *)(v200[6] + 16 * v205);
            *v218 = v202;
            v218[1] = v203;
            *(_QWORD *)(v200[7] + 8 * v205) = v217;
            v219 = v200[2];
            v83 = __OFADD__(v219, 1);
            v220 = v219 + 1;
            if (v83)
              goto LABEL_164;
            v200[2] = v220;
          }
          v198 += v199;
          --v195;
        }
        while (v195);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v200 = v155;
      }
      v221 = swift_retain();
      v222 = sub_2405195F0(v221);
      swift_release();
      v223 = swift_retain();
      v224 = sub_2405195F0(v223);
      swift_release();
      *(_QWORD *)&v389 = v222;
      sub_2405180B4((uint64_t)v224);
      v225 = v389;
      v226 = sub_2408E5E4C();
      v397 = v226;
      v227 = *(_QWORD *)(v225 + 16);
      if (v227)
      {
        v228 = (uint64_t *)(v225 + 40);
        do
        {
          v229 = *(v228 - 1);
          v230 = *v228;
          swift_bridgeObjectRetain();
          sub_2405182FC((uint64_t *)&v389, v229, v230);
          swift_bridgeObjectRelease();
          v228 += 2;
          --v227;
        }
        while (v227);
        swift_bridgeObjectRelease();
        v231 = v397;
      }
      else
      {
        v231 = v226;
        swift_bridgeObjectRelease();
      }
      v232 = sub_24051950C(v231);
      swift_bridgeObjectRelease();
      v233 = v232[2];
      if (v233)
        break;
LABEL_43:
      swift_release();
      v117 = v344 + 1;
      swift_release();
      swift_release();
      v119 = v387;
      v120 = v335;
      sub_2403AE1A4(v387, v335, type metadata accessor for SessionData);
      v121 = v345;
      v122 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v389 = v121;
      sub_2403AC84C(v120, v350, v349, v122);
      v118 = v389;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_240388AE4(v119, type metadata accessor for SessionData);
      v116 = v331;
      if (v117 == v334)
      {
        swift_release();
        swift_release();
        v320 = swift_release();
        v321 = v364;
        MEMORY[0x24BDAC7A8](v320);
        v322 = sub_2408E5618();
        MEMORY[0x24BDAC7A8](v322);
        v323 = (char *)&v329 - ((v321 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_2408E5618();
        v324 = *(_QWORD *)(v118 + 16);
        sub_240388AE4(v343, type metadata accessor for SessionSignature);
        v325 = v386;
        v326 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v385 + 4);
        v327 = v330;
        v326(v330, v323, v386);
        v328 = (int *)type metadata accessor for SessionView(0);
        v326(v327 + v328[5], v323, v325);
        *(_QWORD *)(v327 + v328[6]) = v324;
        *(_QWORD *)(v327 + v328[7]) = v118;
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v328 - 1) + 56))(v327, 0, 1, v328);
      }
    }
    v342 = v232;
    v234 = v232 + 5;
    while (1)
    {
      v235 = *(v234 - 1);
      v236 = *v234;
      v237 = v200[2];
      swift_bridgeObjectRetain();
      v369 = v233;
      if (!v237)
        goto LABEL_113;
      swift_bridgeObjectRetain();
      v238 = sub_240509E28(v235, v236);
      if ((v239 & 1) == 0)
        break;
      v240 = *(_QWORD *)(v200[7] + 8 * v238);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v240 + 16))
      {
        v241 = v356;
        v242 = v351;
        sub_2403AE1A4(v240 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80)), v351, type metadata accessor for TranscriptProtoEvent);
        v243 = 0;
      }
      else
      {
        v243 = 1;
        v242 = v351;
        v241 = v356;
      }
      v244 = v355;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v242, v243, 1, v355);
      swift_bridgeObjectRelease();
      v245 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 48))(v242, 1, v244);
      v246 = v242;
      if (v245 == 1)
      {
        sub_2403A97FC(v242, &qword_256FFAFF0);
        goto LABEL_113;
      }
      v247 = *(_QWORD *)(v242 + 16);
      v248 = *(_QWORD *)(v246 + 24);
      swift_bridgeObjectRetain();
      sub_240388AE4(v246, type metadata accessor for TranscriptProtoEvent);
LABEL_114:
      v249 = v363;
      swift_bridgeObjectRelease();
      *v249 = v247;
      v249[1] = v248;
      type metadata accessor for IERequestFeatureProvider(0);
      v250 = swift_allocObject();
      v251 = v250 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result;
      *(_BYTE *)v251 = 8;
      *(_QWORD *)(v251 + 8) = 0;
      *(_QWORD *)(v251 + 16) = 0xE000000000000000;
      v252 = (int *)type metadata accessor for RequestEventResult(0);
      v253 = v251 + v252[6];
      v254 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v254 - 8) + 56))(v253, 1, 1, v254);
      *(_QWORD *)(v251 + v252[7]) = 0;
      *(_QWORD *)(v251 + v252[8]) = 0;
      *(_QWORD *)(v251 + v252[9]) = 0;
      *(_QWORD *)(v251 + v252[10]) = 0;
      *(_QWORD *)(v251 + v252[11]) = 0;
      *(_QWORD *)(v251 + v252[12]) = 0;
      *(_QWORD *)(v251 + v252[13]) = 0;
      *(_QWORD *)(v251 + v252[14]) = 0;
      *(_QWORD *)(v251 + v252[15]) = 0;
      *(_QWORD *)(v251 + v252[16]) = 0;
      *(_QWORD *)(v251 + v252[17]) = 0;
      *(_QWORD *)(v251 + v252[18]) = v144;
      v255 = v251 + v252[19];
      v256 = type metadata accessor for TranscriptProtoStatementID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v256 - 8) + 56))(v255, 1, 1, v256);
      if (v200[2])
      {
        swift_bridgeObjectRetain();
        v257 = sub_240509E28(v235, v236);
        v258 = v144;
        if ((v259 & 1) != 0)
        {
          v258 = *(char **)(v200[7] + 8 * v257);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v258 = v144;
      }
      sub_240422808(v258, &v389);
      v260 = swift_bridgeObjectRelease();
      v379 = &v329;
      *(_QWORD *)&v377 = *((_QWORD *)&v389 + 1);
      v378 = v389;
      v376 = v390;
      v375 = v391;
      v374 = v392;
      v373 = v393;
      v372 = v394;
      v261 = v396;
      *(_QWORD *)&v371 = v395;
      MEMORY[0x24BDAC7A8](v260);
      v263 = (char *)&v329 - ((v262 + 15) & 0xFFFFFFFFFFFFFFF0);
      v264 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
      MEMORY[0x24BDAC7A8](v264);
      v266 = (char *)&v329 - ((v265 + 15) & 0xFFFFFFFFFFFFFFF0);
      v267 = v200[2];
      v370 = v250;
      if (!v267)
        goto LABEL_131;
      v367 = &v329;
      swift_bridgeObjectRetain();
      v268 = sub_240509E28(v235, v236);
      if ((v269 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_131:
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v385 + 7))(v266, 1, 1, v386);
LABEL_132:
        sub_2408E5618();
        sub_2403A97FC((uint64_t)v266, qword_254356330);
        goto LABEL_133;
      }
      v270 = *(_QWORD *)(v200[7] + 8 * v268);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v271 = *(_QWORD *)(v270 + 16);
      v354 = v261;
      if (v271)
      {
        v272 = v356;
        v273 = v352;
        sub_2403AE1A4(v270 + ((*(unsigned __int8 *)(v356 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v356 + 80)), v352, type metadata accessor for TranscriptProtoEvent);
        v274 = 0;
      }
      else
      {
        v274 = 1;
        v273 = v352;
        v272 = v356;
      }
      v275 = v355;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56))(v273, v274, 1, v355);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v273, 1, v275) == 1)
      {
        sub_2403A97FC(v273, &qword_256FFAFF0);
        v144 = (char *)MEMORY[0x24BEE4AF8];
LABEL_130:
        v261 = v354;
        goto LABEL_131;
      }
      v276 = v348;
      sub_2403A9210(v273 + *(int *)(v275 + 56), v348, &qword_256FFA498);
      sub_240388AE4(v273, type metadata accessor for TranscriptProtoEvent);
      v277 = sub_2408E5750();
      v278 = *(_QWORD *)(v277 - 8);
      v279 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v278 + 48))(v276, 1, v277);
      v144 = (char *)MEMORY[0x24BEE4AF8];
      if (v279 == 1)
      {
        sub_2403A97FC(v276, &qword_256FFA498);
        goto LABEL_130;
      }
      sub_2408E5744();
      (*(void (**)(uint64_t, uint64_t))(v278 + 8))(v276, v277);
      v312 = (uint64_t (**)(char *, uint64_t, uint64_t))v385;
      v311 = v386;
      (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v385 + 7))(v266, 0, 1, v386);
      v313 = v312[6](v266, 1, v311);
      v261 = v354;
      if (v313 == 1)
        goto LABEL_132;
      (*((void (**)(char *, char *, uint64_t))v385 + 4))(v263, v266, v386);
LABEL_133:
      if (v200[2])
      {
        swift_bridgeObjectRetain();
        v280 = sub_240509E28(v235, v236);
        v281 = v144;
        if ((v282 & 1) != 0)
        {
          v281 = *(char **)(v200[7] + 8 * v280);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v281 = v144;
      }
      if (v368[2])
      {
        swift_bridgeObjectRetain();
        v283 = sub_240509E28(v235, v236);
        v284 = v144;
        if ((v285 & 1) != 0)
        {
          v284 = *(char **)(v368[7] + 8 * v283);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v284 = v144;
      }
      v286 = v371 | (v261 << 32);
      v287 = v380;
      (*((void (**)(uint64_t, char *, uint64_t))v385 + 4))(v380, v263, v386);
      v288 = (int *)v359;
      v289 = (uint64_t *)(v287 + *(int *)(v359 + 20));
      *v289 = v235;
      v289[1] = v236;
      *(_QWORD *)(v287 + v288[6]) = v144;
      v290 = (char **)(v287 + v288[7]);
      *v290 = v281;
      v290[1] = v284;
      v291 = v287 + v288[8];
      v292 = v377;
      *(_QWORD *)v291 = v378;
      *(_QWORD *)(v291 + 8) = v292;
      v293 = v375;
      *(_QWORD *)(v291 + 16) = v376;
      *(_QWORD *)(v291 + 24) = v293;
      v294 = v373;
      *(_QWORD *)(v291 + 32) = v374;
      *(_QWORD *)(v291 + 40) = v294;
      *(_QWORD *)(v291 + 48) = v372;
      *(_WORD *)(v291 + 60) = WORD2(v286);
      *(_DWORD *)(v291 + 56) = v286;
      sub_2403AE1A4(v287, v381, type metadata accessor for RequestData);
      swift_bridgeObjectRetain();
      v295 = v387;
      v296 = v383;
      v297 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v389 = *(_QWORD *)(v295 + v296);
      v298 = v389;
      *(_QWORD *)(v295 + v296) = 0x8000000000000000;
      v300 = sub_240509E28(v235, v236);
      v301 = *(_QWORD *)(v298 + 16);
      v302 = (v299 & 1) == 0;
      v303 = v301 + v302;
      if (__OFADD__(v301, v302))
        goto LABEL_162;
      v304 = v299;
      if (*(_QWORD *)(v298 + 24) >= v303)
      {
        if ((v297 & 1) == 0)
          sub_2403AD7B8();
      }
      else
      {
        sub_2403ABB1C(v303, v297);
        v305 = sub_240509E28(v235, v236);
        if ((v304 & 1) != (v306 & 1))
          goto LABEL_172;
        v300 = v305;
      }
      v307 = (_QWORD *)v389;
      if ((v304 & 1) != 0)
      {
        sub_24051A88C(v381, *(_QWORD *)(v389 + 56) + *(_QWORD *)(v358 + 72) * v300);
      }
      else
      {
        *(_QWORD *)(v389 + 8 * (v300 >> 6) + 64) |= 1 << v300;
        v308 = (uint64_t *)(v307[6] + 16 * v300);
        *v308 = v235;
        v308[1] = v236;
        sub_2403A91CC(v381, v307[7] + *(_QWORD *)(v358 + 72) * v300, type metadata accessor for RequestData);
        v309 = v307[2];
        v83 = __OFADD__(v309, 1);
        v310 = v309 + 1;
        if (v83)
          goto LABEL_165;
        v307[2] = v310;
        swift_bridgeObjectRetain();
      }
      v234 += 2;
      *(_QWORD *)(v387 + v383) = v307;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_240388AE4(v380, type metadata accessor for RequestData);
      v233 = v369 - 1;
      if (v369 == 1)
        goto LABEL_43;
    }
    swift_bridgeObjectRelease();
LABEL_113:
    v247 = 0;
    v248 = 0xE000000000000000;
    goto LABEL_114;
  }
  swift_release();
  swift_release();
  swift_release();
  if (qword_254355DF0 != -1)
LABEL_171:
    swift_once();
  v314 = sub_2408E5C48();
  __swift_project_value_buffer(v314, (uint64_t)qword_254356428);
  v315 = sub_2408E5C3C();
  v316 = sub_2408E5EA0();
  if (os_log_type_enabled(v315, v316))
  {
    v317 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v317 = 0;
    _os_log_impl(&dword_240347000, v315, v316, "Empty sessionIDs, SessionView cannot be created", v317, 2u);
    MEMORY[0x242684668](v317, -1, -1);
  }

  v318 = type metadata accessor for SessionView(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v318 - 8) + 56))(v330, 1, 1, v318);
}

uint64_t sub_2405153FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = type metadata accessor for SessionView(0);
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240515470()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint8_t *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(void);
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;

  if (qword_254355DF0 != -1)
    swift_once();
  v1 = sub_2408E5C48();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_254356428);
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_240347000, v2, v3, "Running Lighthouse MLHost Extension", v4, 2u);
    MEMORY[0x242684668](v4, -1, -1);
  }

  v5 = sub_2408E5624();
  v0[14] = v5;
  v6 = *(_QWORD **)(v5 - 8);
  v0[15] = v6[8];
  v7 = swift_task_alloc();
  v0[16] = v7;
  v8 = (void (*)(void))v6[2];
  v8();
  v9 = swift_task_alloc();
  v39 = v7;
  v41 = v8;
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v9, v7, v5);
  v10 = sub_2408E5C3C();
  v11 = sub_2408E5EA0();
  v40 = v6;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v43 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_24041CF80();
    v14 = sub_2408E6170();
    v0[5] = sub_2403B3ED0(v14, v15, &v43);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v16 = (void (*)(uint64_t, uint64_t))v40[1];
    v16(v9, v5);
    _os_log_impl(&dword_240347000, v10, v11, "Bookmark: start collection date %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v13, -1, -1);
    v17 = v12;
    v18 = v16;
    MEMORY[0x242684668](v17, -1, -1);
  }
  else
  {
    v18 = (void (*)(uint64_t, uint64_t))v6[1];
    v18(v9, v5);
  }

  v0[17] = v18;
  v19 = v0[7];
  swift_task_dealloc();
  v20 = swift_task_alloc();
  v0[18] = v20;
  v21 = v19 + *(int *)(type metadata accessor for SessionViewConfigs() + 20);
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v20, v21, v5);
  v22 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v22, v20, v5);
  v23 = sub_2408E5C3C();
  v24 = sub_2408E5EA0();
  if (os_log_type_enabled(v23, v24))
  {
    v38 = v18;
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v43 = v26;
    *(_DWORD *)v25 = 136315138;
    sub_24041CF80();
    v27 = sub_2408E6170();
    v0[4] = sub_2403B3ED0(v27, v28, &v43);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v38(v22, v5);
    _os_log_impl(&dword_240347000, v23, v24, "Bookmark: updating lastCollectionDate to current Date %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v26, -1, -1);
    MEMORY[0x242684668](v25, -1, -1);
  }
  else
  {
    v18(v22, v5);
  }

  v29 = v0[8];
  swift_task_dealloc();
  v30 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v30, v20, v5);
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.setter(v30);
  swift_release();
  swift_task_dealloc();
  sub_24051A8D0();
  __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v31 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v31, v39, v5);
  v32 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v40[7];
  v32(v31, 0, 1, v5);
  v33 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v33, v20, v5);
  v32(v33, 0, 1, v5);
  v34 = sub_240728534(v31, v33, 0, 0, 0);
  v0[19] = v34;
  swift_task_dealloc();
  swift_task_dealloc();
  v35 = *MEMORY[0x24BE0C158];
  v0[20] = *(_QWORD *)(v29 + 16);
  v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2570020C0 + dword_2570020C0);
  swift_retain();
  v36 = (_QWORD *)swift_task_alloc();
  v0[21] = v36;
  *v36 = v0;
  v36[1] = sub_240515A04;
  return v42(v35, (uint64_t)v34, 0xD00000000000001ALL, 0x8000000240928430);
}

uint64_t sub_240515A04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240515A68()
{
  uint64_t v0;
  unint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)(unint64_t);

  if (!*(_QWORD *)(v0 + 176)
    || (v1 = sub_2405115CC(*(_QWORD *)(v0 + 176)), *(_QWORD *)(v0 + 184) = v1, swift_bridgeObjectRelease(), !v1))
  {
    v6 = sub_2408E5C3C();
    v7 = sub_2408E5EA0();
    if (!os_log_type_enabled(v6, v7))
    {
LABEL_11:
      v10 = *(_QWORD *)(v0 + 144);
      v11 = *(_QWORD *)(v0 + 128);
      v12 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
      v13 = *(_QWORD *)(v0 + 112);

      v12(v10, v13);
      v12(v11, v13);
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 72));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "BiomeSessionBuilder loaded nil events, exiting SessionView builder";
LABEL_10:
    _os_log_impl(&dword_240347000, v6, v7, v9, v8, 2u);
    MEMORY[0x242684668](v8, -1, -1);
    goto LABEL_11;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_2408E6038();
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_5;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v6 = sub_2408E5C3C();
    v7 = sub_2408E5EA0();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_11;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "BiomeSessionBuilder loaded empty list of events, not updating SessionView";
    goto LABEL_10;
  }
LABEL_5:
  swift_bridgeObjectRetain_n();
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_2408E6038();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = v5;
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v2, v3, "Number of Sage Transcript events: %ld", v4, 0xCu);
    MEMORY[0x242684668](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v17 = (uint64_t (*)(unint64_t))((char *)&dword_256FFCA08 + dword_256FFCA08);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v15;
  *v15 = v0;
  v15[1] = sub_240515D84;
  return v17(v1);
}

uint64_t sub_240515D84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_240515DE8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = swift_task_alloc();
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.getter(v7);
  swift_release();
  sub_240516010(v1, v6, v7, v4);
  swift_bridgeObjectRelease();
  v2(v7, v3);
  swift_task_dealloc();
  sub_2403AE1A4(v4, v5, type metadata accessor for SessionView);
  v8 = sub_2408E5C3C();
  v9 = sub_2408E5EA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 72);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    v13 = *(_QWORD *)(v10 + *(int *)(v11 + 24));
    sub_240388AE4(v10, type metadata accessor for SessionView);
    *(_QWORD *)(v0 + 16) = v13;
    sub_2408E5F3C();
    _os_log_impl(&dword_240347000, v8, v9, "Formulated SessionView: num= %ld", v12, 0xCu);
    MEMORY[0x242684668](v12, -1, -1);
  }
  else
  {
    sub_240388AE4(*(_QWORD *)(v0 + 88), type metadata accessor for SessionView);
  }
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 128);
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 48);

  v16(v14, v17);
  v16(v15, v17);
  sub_2403A91CC(v18, v19, type metadata accessor for SessionView);
  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 48), 0, 1, *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240516010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, int *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  unsigned int (*v76)(uint64_t, uint64_t, int *);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _OWORD *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unsigned int (**v111)(uint64_t, uint64_t, int *);
  unsigned int (*v112)(uint64_t, uint64_t, int *);
  uint64_t v113;
  uint64_t v114;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v116;
  unsigned int (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  uint64_t *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _OWORD *v140;
  uint64_t (*v141)();
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t (*v154)();
  uint64_t v155;
  uint64_t (*v156)();
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t result;
  uint64_t v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  int64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)();
  uint64_t v212;
  uint64_t (*v213)();
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  __int16 v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  int64_t v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  char *v234;
  uint64_t (*v235)(char *, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(uint64_t, char *, uint64_t);
  uint64_t v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t (*v263)(uint64_t, uint64_t, uint64_t);
  uint64_t v264;
  uint64_t *v265;
  unsigned int (*v266)(uint64_t, uint64_t, int *);
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  _QWORD *v272;
  uint64_t *v273;
  __int128 v274;
  uint64_t v275;
  unsigned int (*v276)(uint64_t, uint64_t, int *);
  _QWORD *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  int *v287;
  uint64_t v288;
  uint64_t v289;
  _OWORD v290[3];
  uint64_t v291;
  int v292;
  __int16 v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;

  v245 = a3;
  v244 = a2;
  v246 = a4;
  v275 = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC10);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v242 - v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v242 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v273 = (uint64_t *)((char *)&v242 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001500);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v270 = (uint64_t)&v242 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v253 = (uint64_t)&v242 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257002088);
  MEMORY[0x24BDAC7A8](v20);
  v249 = (uint64_t)&v242 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for SessionData(0);
  v286 = *((_QWORD *)v22 - 1);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v252 = (uint64_t)&v242 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v251 = (char *)&v242 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v256 = (uint64_t)&v242 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v250 = (uint64_t)&v242 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v268 = (uint64_t)&v242 - v31;
  v280 = type metadata accessor for RequestData(0);
  v32 = *(_QWORD *)(v280 - 8);
  v33 = MEMORY[0x24BDAC7A8](v280);
  v289 = (uint64_t)&v242 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v247 = (uint64_t)&v242 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v248 = (char *)&v242 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v269 = (uint64_t)&v242 - v39;
  v260 = type metadata accessor for TranscriptProtoEvent(0);
  v40 = *(_QWORD *)(v260 - 8);
  v41 = MEMORY[0x24BDAC7A8](v260);
  v243 = (uint64_t)&v242 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (uint64_t *)((char *)&v242 - v43);
  v45 = type metadata accessor for SessionSignature(0);
  MEMORY[0x24BDAC7A8](v45);
  v47 = MEMORY[0x24BEE4B00];
  v296 = MEMORY[0x24BEE4B00];
  v254 = (uint64_t)&v242 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  SessionSignature.init()(v254);
  v48 = *(_QWORD *)(a1 + 16);
  v283 = v8;
  v284 = v10;
  v272 = v14;
  v287 = v22;
  v279 = v32;
  if (!v48)
  {
    v164 = v47;
    goto LABEL_60;
  }
  v49 = *(unsigned __int8 *)(v40 + 80);
  v50 = (v49 + 32) & ~v49;
  v51 = a1 + v50;
  v52 = *(_QWORD *)(v40 + 72);
  v259 = v50;
  v267 = v52;
  v258 = v52 + v50;
  v257 = v49 | 7;
  v242 = a1;
  swift_bridgeObjectRetain();
  v274 = xmmword_2408EADA0;
  v53 = v286;
  v277 = v44;
  do
  {
    v278 = v48;
    v281 = v51;
    sub_2403AE1A4(v51, (uint64_t)v44, type metadata accessor for TranscriptProtoEvent);
    v54 = v44[6];
    v55 = v44[7];
    v56 = v44[3];
    v276 = (unsigned int (*)(uint64_t, uint64_t, int *))v44[2];
    v57 = v44[5];
    v285 = v44[4];
    v58 = v296;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v282 = v57;
    swift_bridgeObjectRetain();
    v59 = swift_bridgeObjectRetain();
    v288 = v54;
    v60 = v275;
    LOBYTE(v54) = sub_24051A474(v59, v54, v55);
    v275 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) == 0)
    {
      v262 = v55;
      v266 = (unsigned int (*)(uint64_t, uint64_t, int *))v56;
      v64 = sub_2408E5624();
      v265 = &v242;
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(_QWORD *)(v65 + 64);
      MEMORY[0x24BDAC7A8](v64);
      v67 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
      v271 = &v242;
      v68 = *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64);
      MEMORY[0x24BDAC7A8](v67);
      v264 = v69 + *(int *)(v260 + 56);
      v70 = v268;
      sub_2403A9210(v264, v268, &qword_256FFA498);
      v71 = sub_2408E5750();
      v72 = *(_QWORD *)(v71 - 8);
      v263 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      v73 = v263(v70, 1, v71);
      v255 = v72;
      if (v73 == 1)
      {
        sub_2403A97FC(v70, &qword_256FFA498);
        v261 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v261((char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v64);
        v74 = v285;
      }
      else
      {
        sub_2408E5744();
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v268, v71);
        v261 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v261((char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v64);
        v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))((char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v64);
        v74 = v285;
        if (v75 != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))((char *)&v242 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), v64);
          v55 = v262;
LABEL_22:
          __swift_instantiateConcreteTypeFromMangledName(&qword_2570019B0);
          v84 = swift_allocObject();
          *(_OWORD *)(v84 + 16) = v274;
          sub_2403AE1A4((uint64_t)v277, v84 + v259, type metadata accessor for TranscriptProtoEvent);
          v85 = v269;
          v271 = *(uint64_t **)(v65 + 32);
          v86 = ((uint64_t (*)(uint64_t, char *, uint64_t))v271)(v269, (char *)&v242 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0), v64);
          v87 = (int *)v280;
          v88 = (uint64_t *)(v85 + *(int *)(v280 + 20));
          v262 = v65;
          v89 = v282;
          *v88 = v74;
          v88[1] = v89;
          *(_QWORD *)(v85 + v87[6]) = v84;
          v90 = (_QWORD *)(v85 + v87[7]);
          v91 = MEMORY[0x24BEE4AF8];
          *v90 = MEMORY[0x24BEE4AF8];
          v90[1] = v91;
          v92 = (_OWORD *)(v85 + v87[8]);
          *(_OWORD *)((char *)v92 + 46) = 0u;
          v92[1] = 0u;
          v92[2] = 0u;
          *v92 = 0u;
          v265 = &v242;
          v93 = MEMORY[0x24BDAC7A8](v86);
          v94 = (char *)&v242 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x24BDAC7A8](v93);
          v95 = (char *)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
          v96 = v250;
          sub_2403A9210(v264, v250, &qword_256FFA498);
          LODWORD(v85) = v263(v96, 1, v71);
          swift_bridgeObjectRetain();
          if ((_DWORD)v85 == 1)
          {
            sub_2403A97FC(v96, &qword_256FFA498);
            v261(v95, 1, 1, v64);
            v22 = v287;
          }
          else
          {
            sub_2408E5744();
            (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v96, v71);
            v261(v95, 0, 1, v64);
            v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v262 + 48))(v95, 1, v64);
            v22 = v287;
            if (v97 != 1)
            {
              ((void (*)(char *, char *, uint64_t))v271)(v94, v95, v64);
              goto LABEL_27;
            }
          }
          sub_2408E5618();
          sub_2403A97FC((uint64_t)v95, qword_254356330);
LABEL_27:
          v98 = v285;
          __swift_instantiateConcreteTypeFromMangledName(&qword_257002090);
          v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA548);
          v100 = *(unsigned __int8 *)(*(_QWORD *)(v99 - 8) + 80);
          v101 = (v100 + 32) & ~v100;
          v102 = swift_allocObject();
          *(_OWORD *)(v102 + 16) = v274;
          v103 = (uint64_t *)(v102 + v101);
          v104 = v102 + v101 + *(int *)(v99 + 48);
          v105 = v282;
          *v103 = v98;
          v103[1] = v105;
          v106 = v269;
          sub_2403AE1A4(v269, v104, type metadata accessor for RequestData);
          swift_bridgeObjectRetain();
          v107 = sub_2403A8CC4(v102);
          v108 = (uint64_t)v251;
          ((void (*)(char *, char *, uint64_t))v271)(v251, v94, v64);
          sub_2403AE1A4(v254, v108 + v22[5], type metadata accessor for SessionSignature);
          v109 = (_QWORD *)(v108 + v22[6]);
          v110 = v288;
          *v109 = v288;
          v109[1] = v55;
          v111 = (unsigned int (**)(uint64_t, uint64_t, int *))(v108 + v22[7]);
          v112 = v266;
          *v111 = v276;
          v111[1] = v112;
          *(_QWORD *)(v108 + v22[8]) = v107;
          v113 = v252;
          sub_2403AE1A4(v108, v252, type metadata accessor for SessionData);
          swift_bridgeObjectRetain();
          v114 = v296;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v290[0] = v114;
          sub_2403AC84C(v113, v110, v55, isUniquelyReferenced_nonNull_native);
          v296 = *(_QWORD *)&v290[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_240388AE4(v108, type metadata accessor for SessionData);
          sub_240388AE4(v106, type metadata accessor for RequestData);
          v10 = v284;
          v53 = v286;
          v32 = v279;
          v44 = v277;
          goto LABEL_28;
        }
      }
      v55 = v262;
      sub_2408E5618();
      sub_2403A97FC((uint64_t)&v242 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), qword_254356330);
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v58 + 16))
    {
      swift_bridgeObjectRetain();
      v61 = sub_240509E28(v288, v55);
      v62 = v253;
      if ((v63 & 1) != 0)
      {
        sub_2403AE1A4(*(_QWORD *)(v58 + 56) + *(_QWORD *)(v53 + 72) * v61, v253, type metadata accessor for SessionData);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v53 + 56))(v62, 0, 1, v22);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v253, 1, 1, v22);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = v253;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v253, 1, 1, v22);
    }
    v76 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v53 + 48);
    if (v76(v62, 1, v22))
    {
      sub_2403A97FC(v62, &qword_257001500);
      v77 = v249;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v249, 1, 1, v280);
      goto LABEL_33;
    }
    v78 = *(_QWORD *)(v62 + v22[8]);
    v79 = v280;
    if (*(_QWORD *)(v78 + 16))
    {
      v80 = v282;
      swift_bridgeObjectRetain();
      v81 = sub_240509E28(v285, v80);
      if ((v82 & 1) != 0)
      {
        v83 = *(_QWORD *)(v78 + 56) + *(_QWORD *)(v32 + 72) * v81;
        v77 = v249;
        sub_2403AE1A4(v83, v249, type metadata accessor for RequestData);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v77, 0, 1, v79);
      }
      else
      {
        v77 = v249;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v249, 1, 1, v79);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v77 = v249;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v249, 1, 1, v280);
    }
    sub_2403A97FC(v62, &qword_257001500);
    v117 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    if (v117(v77, 1, v79) != 1)
    {
      sub_2403A97FC(v77, &qword_257002088);
      swift_bridgeObjectRetain();
      v154 = sub_2408DB7CC(v290, v288, v55);
      if (v76(v155, 1, v22))
        goto LABEL_51;
      v156 = sub_2408DB83C(&v295, v285, v282);
      v158 = v157;
      if (v117(v157, 1, v79))
      {
        ((void (*)(uint64_t *, _QWORD))v156)(&v295, 0);
LABEL_51:
        swift_bridgeObjectRelease();
        ((void (*)(_OWORD *, _QWORD))v154)(v290, 0);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_2403AE1A4((uint64_t)v44, v243, type metadata accessor for TranscriptProtoEvent);
        v159 = *(int *)(v79 + 24);
        v160 = *(_QWORD *)(v158 + v159);
        v161 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v158 + v159) = v160;
        if ((v161 & 1) == 0)
        {
          v160 = sub_24050A998(0, *(_QWORD *)(v160 + 16) + 1, 1, v160);
          *(_QWORD *)(v158 + v159) = v160;
        }
        v163 = *(_QWORD *)(v160 + 16);
        v162 = *(_QWORD *)(v160 + 24);
        if (v163 >= v162 >> 1)
        {
          v160 = sub_24050A998(v162 > 1, v163 + 1, 1, v160);
          *(_QWORD *)(v158 + v159) = v160;
        }
        *(_QWORD *)(v160 + 16) = v163 + 1;
        sub_2403A91CC(v243, v160 + v259 + v163 * v267, type metadata accessor for TranscriptProtoEvent);
        ((void (*)(uint64_t *, _QWORD))v156)(&v295, 0);
        swift_bridgeObjectRelease();
        ((void (*)(_OWORD *, _QWORD))v154)(v290, 0);
        swift_bridgeObjectRelease();
        v22 = v287;
      }
      v53 = v286;
      v32 = v279;
LABEL_28:
      v116 = v278;
      goto LABEL_41;
    }
LABEL_33:
    v276 = v76;
    sub_2403A97FC(v77, &qword_257002088);
    v118 = sub_2408E5624();
    v271 = &v242;
    v119 = v44;
    v120 = *(_QWORD *)(v118 - 8);
    MEMORY[0x24BDAC7A8](v118);
    v122 = (char *)&v242 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
    v123 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
    MEMORY[0x24BDAC7A8](v123);
    v125 = (char *)&v242 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
    v126 = (uint64_t)v119 + *(int *)(v260 + 56);
    v127 = v256;
    sub_2403A9210(v126, v256, &qword_256FFA498);
    v128 = sub_2408E5750();
    v129 = *(_QWORD *)(v128 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128) == 1)
    {
      sub_2403A97FC(v127, &qword_256FFA498);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v125, 1, 1, v118);
      v130 = v285;
    }
    else
    {
      sub_2408E5744();
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v256, v128);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v125, 0, 1, v118);
      v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48))(v125, 1, v118);
      v130 = v285;
      if (v131 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v122, v125, v118);
        goto LABEL_38;
      }
    }
    sub_2408E5618();
    sub_2403A97FC((uint64_t)v125, qword_254356330);
LABEL_38:
    v53 = v286;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2570019B0);
    v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = v274;
    sub_2403AE1A4((uint64_t)v277, v132 + v259, type metadata accessor for TranscriptProtoEvent);
    v133 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
    v134 = (uint64_t)v248;
    v133(v248, v122, v118);
    v135 = (int *)v280;
    v136 = (uint64_t *)(v134 + *(int *)(v280 + 20));
    v137 = v282;
    *v136 = v130;
    v136[1] = v137;
    *(_QWORD *)(v134 + v135[6]) = v132;
    v138 = (_QWORD *)(v134 + v135[7]);
    v139 = MEMORY[0x24BEE4AF8];
    *v138 = MEMORY[0x24BEE4AF8];
    v138[1] = v139;
    v140 = (_OWORD *)(v134 + v135[8]);
    *(_OWORD *)((char *)v140 + 46) = 0u;
    v140[1] = 0u;
    v140[2] = 0u;
    *v140 = 0u;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v141 = sub_2408DB7CC(v290, v288, v55);
    v143 = v142;
    v22 = v287;
    if (!v276(v142, 1, v287))
    {
      v144 = v137;
      v145 = v287[8];
      v146 = v247;
      sub_2403AE1A4(v134, v247, type metadata accessor for RequestData);
      v147 = swift_isUniquelyReferenced_nonNull_native();
      v295 = *(_QWORD *)(v143 + v145);
      *(_QWORD *)(v143 + v145) = 0x8000000000000000;
      sub_2403AC838(v146, v285, v144, v147);
      *(_QWORD *)(v143 + v145) = v295;
      v22 = v287;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    ((void (*)(_OWORD *, _QWORD))v141)(v290, 0);
    v10 = v284;
    v116 = v278;
    swift_bridgeObjectRelease();
    sub_240388AE4(v134, type metadata accessor for RequestData);
    v32 = v279;
    v44 = v277;
LABEL_41:
    v148 = v296;
    if (*(_QWORD *)(v296 + 16))
    {
      swift_bridgeObjectRetain();
      v149 = sub_240509E28(v288, v55);
      if ((v150 & 1) != 0)
      {
        v151 = *(_QWORD *)(v148 + 56) + *(_QWORD *)(v53 + 72) * v149;
        v152 = v270;
        sub_2403AE1A4(v151, v270, type metadata accessor for SessionData);
        v153 = 0;
      }
      else
      {
        v153 = 1;
        v152 = v270;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v152, v153, 1, v22);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v53 + 48))(v152, 1, v22) != 1)
      {
        sub_2403A97FC(v152, &qword_257001500);
        sub_2404FD66C((uint64_t)v44, &v296, v288, v55);
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      v152 = v270;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v270, 1, 1, v22);
    }
    swift_bridgeObjectRelease();
    sub_2403A97FC(v152, &qword_257001500);
LABEL_4:
    sub_240388AE4((uint64_t)v44, type metadata accessor for TranscriptProtoEvent);
    v51 = v281 + v267;
    v48 = v116 - 1;
  }
  while (v48);
  swift_bridgeObjectRelease();
  v164 = v296;
  v8 = v283;
  v14 = v272;
LABEL_60:
  v165 = *(_QWORD *)(v164 + 64);
  v269 = v164 + 64;
  v166 = 1 << *(_BYTE *)(v164 + 32);
  if (v166 < 64)
    v167 = ~(-1 << v166);
  else
    v167 = -1;
  v168 = v167 & v165;
  v270 = (unint64_t)(v166 + 63) >> 6;
  v268 = v270 - 1;
  v271 = (uint64_t *)v164;
  result = swift_bridgeObjectRetain();
  v170 = 0;
  v171 = &qword_256FFAC28;
  while (2)
  {
    if (v168)
    {
      v277 = (_QWORD *)((v168 - 1) & v168);
      v276 = (unsigned int (*)(uint64_t, uint64_t, int *))v170;
      v172 = __clz(__rbit64(v168)) | (v170 << 6);
      goto LABEL_67;
    }
    v178 = v170 + 1;
    if (__OFADD__(v170, 1))
    {
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    if (v178 >= v270)
      goto LABEL_78;
    v179 = *(_QWORD *)(v269 + 8 * v178);
    if (!v179)
    {
      v170 += 2;
      if (v178 + 1 >= v270)
      {
LABEL_124:
        v276 = (unsigned int (*)(uint64_t, uint64_t, int *))v178;
        goto LABEL_79;
      }
      v179 = *(_QWORD *)(v269 + 8 * v170);
      if (v179)
      {
LABEL_74:
        v178 = v170;
        goto LABEL_71;
      }
      if (v178 + 2 < v270)
      {
        v179 = *(_QWORD *)(v269 + 8 * (v178 + 2));
        if (v179)
        {
          v178 += 2;
          goto LABEL_71;
        }
        v170 = v178 + 3;
        if (v178 + 3 < v270)
        {
          v179 = *(_QWORD *)(v269 + 8 * v170);
          if (v179)
            goto LABEL_74;
          while (1)
          {
            v178 = v170 + 1;
            if (__OFADD__(v170, 1))
              goto LABEL_129;
            if (v178 >= v270)
              break;
            v179 = *(_QWORD *)(v269 + 8 * v178);
            ++v170;
            if (v179)
              goto LABEL_71;
          }
          v178 = v268;
          goto LABEL_124;
        }
        v276 = (unsigned int (*)(uint64_t, uint64_t, int *))(v178 + 2);
LABEL_79:
        v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v14, 1, 1, v180);
        v277 = 0;
        goto LABEL_80;
      }
LABEL_78:
      v276 = (unsigned int (*)(uint64_t, uint64_t, int *))v170;
      goto LABEL_79;
    }
LABEL_71:
    v277 = (_QWORD *)((v179 - 1) & v179);
    v172 = __clz(__rbit64(v179)) + (v178 << 6);
    v276 = (unsigned int (*)(uint64_t, uint64_t, int *))v178;
LABEL_67:
    v173 = v271[7];
    v174 = (_QWORD *)(v271[6] + 16 * v172);
    v175 = v174[1];
    *v14 = *v174;
    v14[1] = v175;
    v176 = v173 + *(_QWORD *)(v286 + 72) * v172;
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
    sub_2403AE1A4(v176, (uint64_t)v14 + *(int *)(v177 + 48), type metadata accessor for SessionData);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v14, 0, 1, v177);
    swift_bridgeObjectRetain();
LABEL_80:
    v181 = v273;
    sub_2403B80A4((uint64_t)v14, (uint64_t)v273, &qword_256FFAC18);
    v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 48))(v181, 1, v182) == 1)
    {
      swift_release();
      v231 = sub_2408E5624();
      v232 = *(_QWORD **)(v231 - 8);
      v233 = v232[8];
      MEMORY[0x24BDAC7A8](v231);
      v234 = (char *)&v242 - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0);
      v235 = (uint64_t (*)(char *, uint64_t, uint64_t))v232[2];
      v236 = v235(v234, v244, v231);
      MEMORY[0x24BDAC7A8](v236);
      v235(v234, v245, v231);
      v237 = v296;
      v238 = *(_QWORD *)(v296 + 16);
      sub_240388AE4(v254, type metadata accessor for SessionSignature);
      v239 = (void (*)(uint64_t, char *, uint64_t))v232[4];
      v240 = v246;
      v239(v246, v234, v231);
      v241 = (int *)type metadata accessor for SessionView(0);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v239)(v240 + v241[5], (char *)&v242 - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0), v231);
      *(_QWORD *)(v240 + v241[6]) = v238;
      *(_QWORD *)(v240 + v241[7]) = v237;
      return result;
    }
    v285 = *v181;
    v288 = v181[1];
    v183 = (uint64_t)v181 + *(int *)(v182 + 48);
    v184 = *(_QWORD *)(v183 + v22[8]);
    swift_bridgeObjectRetain();
    result = sub_240388AE4(v183, type metadata accessor for SessionData);
    v185 = 0;
    v186 = *(_QWORD *)(v184 + 64);
    v278 = v184 + 64;
    v282 = v184;
    v187 = 1 << *(_BYTE *)(v184 + 32);
    if (v187 < 64)
      v188 = ~(-1 << v187);
    else
      v188 = -1;
    v189 = v188 & v186;
    v281 = (unint64_t)(v187 + 63) >> 6;
    *(_QWORD *)&v274 = v281 - 1;
LABEL_87:
    if (v189)
    {
      v190 = __clz(__rbit64(v189));
      v189 &= v189 - 1;
      v191 = v190 | (v185 << 6);
      goto LABEL_89;
    }
    v197 = v185 + 1;
    if (__OFADD__(v185, 1))
    {
      __break(1u);
      goto LABEL_127;
    }
    if (v197 >= v281)
      goto LABEL_98;
    v198 = *(_QWORD *)(v278 + 8 * v197);
    if (v198)
    {
LABEL_93:
      v189 = (v198 - 1) & v198;
      v191 = __clz(__rbit64(v198)) + (v197 << 6);
      v185 = v197;
LABEL_89:
      v192 = *(_QWORD *)(v282 + 56);
      v193 = (_QWORD *)(*(_QWORD *)(v282 + 48) + 16 * v191);
      v194 = v193[1];
      *v8 = *v193;
      v8[1] = v194;
      v195 = v192 + *(_QWORD *)(v32 + 72) * v191;
      v196 = __swift_instantiateConcreteTypeFromMangledName(v171);
      sub_2403AE1A4(v195, (uint64_t)v8 + *(int *)(v196 + 48), type metadata accessor for RequestData);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v8, 0, 1, v196);
      swift_bridgeObjectRetain();
LABEL_99:
      sub_2403B80A4((uint64_t)v8, (uint64_t)v10, &qword_256FFAC10);
      v200 = __swift_instantiateConcreteTypeFromMangledName(v171);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 48))(v10, 1, v200) == 1)
      {
        swift_bridgeObjectRelease();
        result = swift_release();
        v14 = v272;
        v22 = v287;
        v170 = (uint64_t)v276;
        v168 = (unint64_t)v277;
        continue;
      }
      v201 = v171;
      v203 = *v10;
      v202 = v10[1];
      sub_2403A91CC((uint64_t)v10 + *(int *)(v200 + 48), v289, type metadata accessor for RequestData);
      type metadata accessor for IERequestFeatureProvider(0);
      v204 = swift_allocObject() + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result;
      *(_BYTE *)v204 = 8;
      *(_QWORD *)(v204 + 8) = 0;
      *(_QWORD *)(v204 + 16) = 0xE000000000000000;
      v205 = (int *)type metadata accessor for RequestEventResult(0);
      v206 = v204 + v205[6];
      v207 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 56))(v206, 1, 1, v207);
      *(_QWORD *)(v204 + v205[7]) = 0;
      *(_QWORD *)(v204 + v205[8]) = 0;
      *(_QWORD *)(v204 + v205[9]) = 0;
      *(_QWORD *)(v204 + v205[10]) = 0;
      *(_QWORD *)(v204 + v205[11]) = 0;
      *(_QWORD *)(v204 + v205[12]) = 0;
      *(_QWORD *)(v204 + v205[13]) = 0;
      *(_QWORD *)(v204 + v205[14]) = 0;
      *(_QWORD *)(v204 + v205[15]) = 0;
      *(_QWORD *)(v204 + v205[16]) = 0;
      *(_QWORD *)(v204 + v205[17]) = 0;
      *(_QWORD *)(v204 + v205[18]) = MEMORY[0x24BEE4AF8];
      v208 = v204 + v205[19];
      v209 = type metadata accessor for TranscriptProtoStatementID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v208, 1, 1, v209);
      v210 = v288;
      swift_bridgeObjectRetain();
      v211 = sub_2408DB7CC(&v295, v285, v210);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v286 + 48))(v212, 1, v287))
      {
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t *, _QWORD))v211)(&v295, 0);
      }
      else
      {
        v213 = sub_2408DB83C(&v294, v203, v202);
        v215 = v214;
        v216 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
        v217 = v280;
        if (!v216(v214, 1, v280))
        {
          sub_240422808(*(char **)(v289 + *(int *)(v217 + 24)), v290);
          v218 = v291;
          v219 = v293;
          v220 = v292;
          v221 = v215 + *(int *)(v217 + 32);
          v222 = *(_QWORD *)v221;
          v223 = *(_QWORD *)(v221 + 8);
          v224 = *(_QWORD *)(v221 + 16);
          v225 = *(_QWORD *)(v221 + 24);
          v226 = *(_QWORD *)(v221 + 32);
          v227 = *(_QWORD *)(v221 + 40);
          v228 = v290[1];
          v229 = v290[2];
          *(_OWORD *)v221 = v290[0];
          *(_OWORD *)(v221 + 16) = v228;
          *(_OWORD *)(v221 + 32) = v229;
          *(_QWORD *)(v221 + 48) = v218;
          v221 += 56;
          *(_DWORD *)v221 = v220;
          *(_WORD *)(v221 + 4) = v219;
          sub_24051A728(v222, v223, v224, v225, v226, v227);
        }
        ((void (*)(uint64_t *, _QWORD))v213)(&v294, 0);
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t *, _QWORD))v211)(&v295, 0);
        v32 = v279;
      }
      swift_release();
      swift_bridgeObjectRelease();
      result = sub_240388AE4(v289, type metadata accessor for RequestData);
      v8 = v283;
      v10 = v284;
      v171 = v201;
      goto LABEL_87;
    }
    break;
  }
  v185 += 2;
  if (v197 + 1 >= v281)
  {
    v185 = v197;
LABEL_98:
    v199 = __swift_instantiateConcreteTypeFromMangledName(v171);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 56))(v8, 1, 1, v199);
    v189 = 0;
    goto LABEL_99;
  }
  v198 = *(_QWORD *)(v278 + 8 * v185);
  if (v198)
  {
    ++v197;
    goto LABEL_93;
  }
  if (v197 + 2 >= v281)
    goto LABEL_98;
  v198 = *(_QWORD *)(v278 + 8 * (v197 + 2));
  if (v198)
  {
    v197 += 2;
    goto LABEL_93;
  }
  v230 = v197 + 3;
  if (v197 + 3 >= v281)
  {
    v185 = v197 + 2;
    goto LABEL_98;
  }
  v198 = *(_QWORD *)(v278 + 8 * v230);
  if (v198)
  {
    v197 += 3;
    goto LABEL_93;
  }
  while (1)
  {
    v197 = v230 + 1;
    if (__OFADD__(v230, 1))
      break;
    if (v197 >= v281)
    {
      v185 = v274;
      goto LABEL_98;
    }
    v198 = *(_QWORD *)(v278 + 8 * v197);
    ++v230;
    if (v198)
      goto LABEL_93;
  }
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
  return result;
}

uint64_t BiomeSessionBuilder.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BiomeSessionBuilder.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_240517DD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2403B0644;
  return sub_240511FD4(a1);
}

uint64_t sub_240517E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2403B0644;
  return sub_240512168(a1, a2);
}

uint64_t type metadata accessor for BiomeSessionBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BiomeSessionBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSessionBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BiomeSessionBuilder.useManagedBookmarkFor(clientApplicationDomain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BiomeSessionBuilder.buildSessionView(startDate:maxEvents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 160)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 160));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2403B0644;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of BiomeSessionBuilder.buildSessionView()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 168) + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2403B0644;
  return v6(a1);
}

uint64_t dispatch thunk of BiomeSessionBuilder.buildSessionView(streams:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 176) + *(_QWORD *)(*(_QWORD *)v2 + 176));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2403B0350;
  return v8(a1, a2);
}

uint64_t dispatch thunk of BiomeSessionBuilder.buildSessionView(startDate:maxEvents:streams:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 184)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 184));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_2403B0644;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_2405180B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_24050A538(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t sub_240518204(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_2408E620C();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_240518A04(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2405182FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2408E6218();
  swift_bridgeObjectRetain();
  sub_2408E5D44();
  v8 = sub_2408E623C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2408E617C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2408E617C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_240518B24(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2405184A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020B0);
  result = sub_2408E5F78();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_2408E620C();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_240518728()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020A8);
  v3 = sub_2408E5F78();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2408E6218();
      sub_2408E5D44();
      result = sub_2408E623C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_240518A04(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2405184A8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_240518CBC();
      goto LABEL_14;
    }
    sub_240519000();
  }
  v8 = *v3;
  result = sub_2408E620C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_2408E61AC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_240518B24(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_240518728();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_240518E50();
      goto LABEL_22;
    }
    sub_240519260();
  }
  v11 = *v4;
  sub_2408E6218();
  sub_2408E5D44();
  result = sub_2408E623C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2408E617C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2408E61AC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2408E617C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_240518CBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020B0);
  v2 = *v0;
  v3 = sub_2408E5F6C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_240518E50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020A8);
  v2 = *v0;
  v3 = sub_2408E5F6C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_240519000()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020B0);
  result = sub_2408E5F78();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_2408E620C();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240519260()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2570020A8);
  v3 = sub_2408E5F78();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2408E6218();
    swift_bridgeObjectRetain();
    sub_2408E5D44();
    result = sub_2408E623C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

_QWORD *sub_24051950C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC360);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2405196D4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_240413CE4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2405195F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC360);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2405198D0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_240413CE4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_2405196D4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2405198D0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_240519ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[27] = a3;
  v4[28] = a4;
  v4[25] = a1;
  v4[26] = a2;
  return swift_task_switch();
}

uint64_t sub_240519B34()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  BOOL v57;
  void *v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[2];

  v70[1] = *MEMORY[0x24BDAC8D0];
  v1 = v0 + 23;
  v2 = (void *)v0[26];
  v3 = sub_2408E5624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = swift_task_alloc();
  v6 = objc_msgSend(v2, sel_startDate);
  __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v7 = swift_task_alloc();
  v8 = v7;
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v7, 1, 1, v3);
    goto LABEL_8;
  }
  v9 = swift_task_alloc();
  sub_2408E5600();

  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v10(v8, v9, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
LABEL_8:
    sub_2403A97FC(v8, qword_254356330);
    swift_task_dealloc();
    goto LABEL_11;
  }
  v10(v5, v8, v3);
  swift_task_dealloc();
  if (qword_254355DF0 != -1)
    swift_once();
  v11 = sub_2408E5C48();
  __swift_project_value_buffer(v11, (uint64_t)qword_254356428);
  v12 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v12, v5, v3);
  v13 = sub_2408E5C3C();
  v14 = sub_2408E5EA0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    v70[0] = v68;
    *(_DWORD *)v15 = 136315138;
    sub_24041CF80();
    v16 = sub_2408E6170();
    v0[24] = sub_2403B3ED0(v16, v17, v70);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v18(v12, v3);
    _os_log_impl(&dword_240347000, v13, v14, "Loading biome events with bookmark: collecting from %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v68, -1, -1);
    MEMORY[0x242684668](v15, -1, -1);

    v18(v5, v3);
    swift_task_dealloc();
  }
  else
  {

    v19 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v19(v12, v3);
    swift_task_dealloc();
    v19(v5, v3);
  }
  v1 = v0 + 23;
LABEL_11:
  v20 = v0[25];
  swift_task_dealloc();
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = MEMORY[0x24BEE4AF8];
  v21 = (_QWORD *)(v69 + 16);
  v22 = (id)BiomeLibrary();
  v0[23] = 0;
  v23 = objc_msgSend(v22, sel_streamWithIdentifier_error_, v20, v1);
  swift_unknownObjectRelease();
  v24 = (void *)v0[23];
  if (v23)
  {
    v25 = v0[26];
    v26 = v23;
    v27 = v24;
    v28 = (void *)sub_2408E5CE4();
    v29 = objc_msgSend(v26, sel_publisherWithUseCase_options_, v28, v25);

    v67 = v26;
    if (v29)
    {
      v31 = v0[27];
      v30 = v0[28];
      v32 = (void *)v0[25];
      v0[12] = nullsub_1;
      v0[13] = 0;
      v0[8] = MEMORY[0x24BDAC760];
      v0[9] = 1107296256;
      v0[10] = sub_240511534;
      v0[11] = &block_descriptor_1;
      v33 = _Block_copy(v0 + 8);
      v34 = (_QWORD *)swift_allocObject();
      v34[2] = v69;
      v34[3] = v31;
      v34[4] = v30;
      v34[5] = v32;
      v0[6] = sub_24051A97C;
      v0[7] = v34;
      v0[2] = MEMORY[0x24BDAC760];
      v0[3] = 1107296256;
      v0[4] = sub_240511584;
      v0[5] = &block_descriptor_20;
      v35 = _Block_copy(v0 + 2);
      v36 = v32;
      v37 = v29;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      v38 = objc_msgSend(v37, sel_sinkWithCompletion_receiveInput_, v33, v35);
      _Block_release(v35);
      _Block_release(v33);

    }
    if (qword_254355DF0 != -1)
      swift_once();
    v39 = (void *)v0[25];
    v40 = sub_2408E5C48();
    __swift_project_value_buffer(v40, (uint64_t)qword_254356428);
    v41 = v39;
    swift_retain();
    v42 = sub_2408E5C3C();
    v43 = sub_2408E5EA0();
    if (os_log_type_enabled(v42, v43))
    {
      v66 = v29;
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v70[0] = v45;
      *(_DWORD *)v44 = 134218242;
      swift_beginAccess();
      if (*v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v46 = sub_2408E6038();
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = *(_QWORD *)((*v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v47 = (void *)v0[25];
      v0[20] = v46;
      sub_2408E5F3C();
      swift_release();
      *(_WORD *)(v44 + 12) = 2080;
      v48 = sub_2408E5D08();
      v0[21] = sub_2403B3ED0(v48, v49, v70);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240347000, v42, v43, "%ld of events loaded from %s Biome stream", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v45, -1, -1);
      MEMORY[0x242684668](v44, -1, -1);

    }
    else
    {
      v63 = (void *)v0[25];
      swift_release();

    }
    swift_beginAccess();
    v64 = *(_QWORD *)(v69 + 16);
    swift_bridgeObjectRetain();

    swift_release();
  }
  else
  {
    v50 = v24;
    v51 = (void *)sub_2408E5534();

    swift_willThrow();
    if (qword_254355DF0 != -1)
      swift_once();
    v52 = (void *)v0[25];
    v53 = sub_2408E5C48();
    __swift_project_value_buffer(v53, (uint64_t)qword_254356428);
    v54 = v52;
    v55 = sub_2408E5C3C();
    v56 = sub_2408E5EAC();
    v57 = os_log_type_enabled(v55, v56);
    v58 = (void *)v0[25];
    if (v57)
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v70[0] = v60;
      *(_DWORD *)v59 = 136315138;
      v61 = sub_2408E5D08();
      v0[22] = sub_2403B3ED0(v61, v62, v70);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240347000, v55, v56, "Unable to create stream from BMLibrary identifer:  %s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v60, -1, -1);
      MEMORY[0x242684668](v59, -1, -1);
    }
    else
    {

    }
    swift_release();
    v64 = 0;
  }
  return ((uint64_t (*)(uint64_t))v0[1])(v64);
}

uint64_t sub_24051A474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a3;
  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  v4 = MEMORY[0x24BDAC7A8](v29);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v26 - v7);
  v9 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v28 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (v12)
  {
    v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v17 = v16 | (v14 << 6);
LABEL_22:
    v21 = *(_QWORD *)(a1 + 56);
    v22 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = type metadata accessor for SessionData(0);
    sub_2403AE1A4(v21 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, (uint64_t)v8 + *(int *)(v29 + 48), type metadata accessor for SessionData);
    *v8 = v24;
    v8[1] = v23;
    sub_2403B80A4((uint64_t)v8, (uint64_t)v6, &qword_256FFAC20);
    if (*v6 == v30 && v6[1] == v31)
    {
      swift_bridgeObjectRetain();
      sub_2403A97FC((uint64_t)v6, &qword_256FFAC20);
LABEL_25:
      swift_release();
      return 1;
    }
    v15 = sub_2408E617C();
    swift_bridgeObjectRetain();
    result = sub_2403A97FC((uint64_t)v6, &qword_256FFAC20);
    if ((v15 & 1) != 0)
      goto LABEL_25;
  }
  v18 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v28)
    goto LABEL_26;
  v19 = *(_QWORD *)(v27 + 8 * v18);
  ++v14;
  if (v19)
    goto LABEL_21;
  v14 = v18 + 1;
  if (v18 + 1 >= v28)
    goto LABEL_26;
  v19 = *(_QWORD *)(v27 + 8 * v14);
  if (v19)
    goto LABEL_21;
  v14 = v18 + 2;
  if (v18 + 2 >= v28)
    goto LABEL_26;
  v19 = *(_QWORD *)(v27 + 8 * v14);
  if (v19)
    goto LABEL_21;
  v14 = v18 + 3;
  if (v18 + 3 >= v28)
    goto LABEL_26;
  v19 = *(_QWORD *)(v27 + 8 * v14);
  if (v19)
    goto LABEL_21;
  v20 = v18 + 4;
  if (v20 >= v28)
  {
LABEL_26:
    swift_release();
    return 0;
  }
  v19 = *(_QWORD *)(v27 + 8 * v20);
  v14 = v20;
  if (v19)
  {
LABEL_21:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v28)
      goto LABEL_26;
    v19 = *(_QWORD *)(v27 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24051A728(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_2403ADB34(a2, a3, a4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24051A76C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_2408E5E4C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2405182FC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_24051A800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24051A848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionSignature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24051A88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RequestData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24051A8D0()
{
  unint64_t result;

  result = qword_2543563E8;
  if (!qword_2543563E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543563E8);
  }
  return result;
}

uint64_t sub_24051A90C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24051A948()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_24051A97C(uint64_t a1)
{
  uint64_t *v1;

  sub_24041A698(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_24051A988()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2570020D0;
  if (!qword_2570020D0)
  {
    v1 = sub_2408E5B7C();
    result = MEMORY[0x242684578](MEMORY[0x24BE59828], v1);
    atomic_store(result, (unint64_t *)&qword_2570020D0);
  }
  return result;
}

uint64_t sub_24051A9D0(uint64_t a1)
{
  uint64_t v1;

  return sub_240511394(a1, v1);
}

BOOL static JoinableStreams.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t JoinableStreams.debugDescription.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD00000000000001BLL;
}

uint64_t JoinableStreams.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t JoinableStreams.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

unint64_t sub_24051AAB4()
{
  unint64_t result;

  result = qword_2570020D8;
  if (!qword_2570020D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for JoinableStreams, &type metadata for JoinableStreams);
    atomic_store(result, (unint64_t *)&qword_2570020D8);
  }
  return result;
}

unint64_t sub_24051AAF8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD00000000000001BLL;
}

uint64_t storeEnumTagSinglePayload for JoinableStreams(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24051AB84 + 4 * byte_2409011D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24051ABB8 + 4 * byte_2409011D0[v4]))();
}

uint64_t sub_24051ABB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24051ABC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24051ABC8);
  return result;
}

uint64_t sub_24051ABD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24051ABDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24051ABE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24051ABE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JoinableStreams()
{
  return &type metadata for JoinableStreams;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5624();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_2408E5624();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2408E5624();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2408E5624();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2408E5624();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SessionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2408E5624();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24051AF48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24051AF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24051AFD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24051AFDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E5624();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SessionViewConfigs()
{
  uint64_t result;

  result = qword_257002138;
  if (!qword_257002138)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24051B090()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t TranscriptProtoEvent.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  a1[11] = 0;
  a1[12] = 0;
  v3 = (char *)a1 + v2[11];
  v4 = type metadata accessor for TranscriptProtoPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)((char *)a1 + v2[12]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (char *)a1 + v2[13];
  v7 = type metadata accessor for TranscriptProtoTimepoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a1 + v2[14];
  v9 = sub_2408E5750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a1 + v2[15];
  v11 = type metadata accessor for TranscriptProtoParticipantID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)a1 + v2[16];
  v13 = type metadata accessor for TranscriptProtoSpanID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  result = sub_240357018(MEMORY[0x24BEE4AF8]);
  a1[10] = result;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoEvent(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257002338);
}

uint64_t type metadata accessor for TranscriptProtoPayload(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257002420);
}

uint64_t type metadata accessor for TranscriptProtoTimepoint(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570025F8);
}

uint64_t type metadata accessor for TranscriptProtoParticipantID(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005368);
}

uint64_t type metadata accessor for TranscriptProtoSpanID(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570053F8);
}

LighthouseDataProcessor::TranscriptProtoCandidateSource __swiftcall TranscriptProtoCandidateSource.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoCandidateSource result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoCandidateSource_optional __swiftcall TranscriptProtoCandidateSource.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoCandidateSource_optional)rawValue;
}

LighthouseDataProcessor::TranscriptProtoSystemRequirement __swiftcall TranscriptProtoSystemRequirement.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoSystemRequirement result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoPlanSource __swiftcall TranscriptProtoPlanSource.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoPlanSource result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoPlanSource_optional __swiftcall TranscriptProtoPlanSource.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoPlanSource_optional)rawValue;
}

LighthouseDataProcessor::TranscriptProtoQueryOperator __swiftcall TranscriptProtoQueryOperator.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoQueryOperator result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoQueryOperator_optional __swiftcall TranscriptProtoQueryOperator.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 11;
  if ((unint64_t)rawValue < 0xB)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoQueryOperator_optional)rawValue;
}

LighthouseDataProcessor::TranscriptProtoResponseType __swiftcall TranscriptProtoResponseType.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoResponseType result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoResponseDialogPresentationHint __swiftcall TranscriptProtoResponseDialogPresentationHint.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoResponseDialogPresentationHint result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoASTUpdateKind __swiftcall TranscriptProtoASTUpdateKind.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoASTUpdateKind result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoPrefixExpression_PrefixOp __swiftcall TranscriptProtoPrefixExpression_PrefixOp.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoPrefixExpression_PrefixOp result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoPrefixExpression_PrefixOp_optional __swiftcall TranscriptProtoPrefixExpression_PrefixOp.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoPrefixExpression_PrefixOp_optional)rawValue;
}

LighthouseDataProcessor::TranscriptProtoInfixExpression_InfixOp __swiftcall TranscriptProtoInfixExpression_InfixOp.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoInfixExpression_InfixOp result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoInfixExpression_InfixOp_optional __swiftcall TranscriptProtoInfixExpression_InfixOp.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 19;
  if ((unint64_t)rawValue < 0x13)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoInfixExpression_InfixOp_optional)rawValue;
}

uint64_t TranscriptProtoInfixExpression_InfixOp.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

LighthouseDataProcessor::TranscriptProtoASTInfixOp __swiftcall TranscriptProtoASTInfixOp.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoASTInfixOp result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoASTPrefixOp __swiftcall TranscriptProtoASTPrefixOp.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoASTPrefixOp result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoUpdateParameterExpression_UpdateKind __swiftcall TranscriptProtoUpdateParameterExpression_UpdateKind.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoUpdateParameterExpression_UpdateKind result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::TranscriptProtoUpdateParameterExpression_UpdateKind_optional __swiftcall TranscriptProtoUpdateParameterExpression_UpdateKind.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (LighthouseDataProcessor::TranscriptProtoUpdateParameterExpression_UpdateKind_optional)rawValue;
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

LighthouseDataProcessor::TranscriptProtoUndoOperation __swiftcall TranscriptProtoUndoOperation.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoUndoOperation result;

  *v0 = 0;
  return result;
}

uint64_t TranscriptProtoEvent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TranscriptProtoEvent(0) + 68);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TranscriptProtoEvent.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TranscriptProtoEvent(0) + 68);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TranscriptProtoEvent.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPayload.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoPayloadEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPayload, a1);
}

uint64_t type metadata accessor for TranscriptProtoPayloadEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570024D0);
}

uint64_t TranscriptProtoPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPayload, a1);
}

uint64_t TranscriptProtoPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPayload);
}

uint64_t (*TranscriptProtoPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTranscript.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoTranscript(0);
  a1[3] = 0;
  a1[4] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for TranscriptProtoTranscript(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002560);
}

uint64_t TranscriptProtoTranscript.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoTranscript, a1);
}

uint64_t TranscriptProtoTranscript.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoTranscript);
}

uint64_t (*TranscriptProtoTranscript.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoTranscript(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTimepoint.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for TranscriptProtoTimepoint(0) + 28);
  v3 = sub_2408E5750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoTimepoint.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoTimepoint, a1);
}

uint64_t TranscriptProtoTimepoint.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoTimepoint);
}

uint64_t (*TranscriptProtoTimepoint.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoTimepoint(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSessionStart.init()@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoSessionStart(0);
  v3 = &a1[*(int *)(v2 + 20)];
  v4 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &a1[*(int *)(v2 + 24)];
  v6 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoSessionStart(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257002698);
}

uint64_t type metadata accessor for TranscriptProtoLocaleSettings(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700AF00);
}

uint64_t type metadata accessor for TranscriptProtoDeviceDetails(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700B028);
}

uint64_t TranscriptProtoSessionStart.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoSessionStart, a1);
}

uint64_t TranscriptProtoSessionStart.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoSessionStart);
}

uint64_t (*TranscriptProtoSessionStart.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSessionStart(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.init()@<X0>(_BYTE *a1@<X8>)
{
  int *v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoRequest(0);
  v3 = &a1[v2[5]];
  v4 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &a1[v2[6]];
  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &a1[v2[7]];
  *v7 = 0;
  v7[1] = 0;
  v8 = &a1[v2[8]];
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoRequest(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257002740);
}

uint64_t type metadata accessor for TranscriptProtoRequestContent(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570027F8);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlan(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257002CB8);
}

uint64_t type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002C20);
}

uint64_t TranscriptProtoRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoRequest, a1);
}

uint64_t TranscriptProtoRequest.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoRequest);
}

uint64_t (*TranscriptProtoRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContent.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoRequestContentEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContent, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestContentEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570028A8);
}

uint64_t TranscriptProtoRequestContent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRequestContent, a1);
}

uint64_t TranscriptProtoRequestContent.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRequestContent);
}

uint64_t (*TranscriptProtoRequestContent.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestContent(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestContentStopContent.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContentTextContent.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoRequestContentTextContent, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestContentTextContent(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570029C8);
}

uint64_t type metadata accessor for TranscriptProtoStatementID(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B0C8);
}

uint64_t TranscriptProtoRequestContentTextContent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestContentTextContent, a1);
}

uint64_t TranscriptProtoRequestContentTextContent.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestContentTextContent);
}

uint64_t (*TranscriptProtoRequestContentTextContent.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContentSpeechContent.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContentSpeechContent, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestContentSpeechContent(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002A60);
}

uint64_t TranscriptProtoRequestContentSpeechContent.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRequestContentSpeechContent, a1);
}

uint64_t TranscriptProtoRequestContentSpeechContent.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t (*TranscriptProtoRequestContentSpeechContent.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechRequestCandidate.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoSpeechRequestCandidate, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t sub_24051BA20@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  char *v5;
  uint64_t v6;
  uint64_t result;

  v5 = (char *)a3 + *(int *)(a1(0) + 20);
  v6 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoSpeechRequestCandidate(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002AF0);
}

uint64_t TranscriptProtoSpeechRequestCandidate.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoSpeechRequestCandidate, a1);
}

uint64_t TranscriptProtoSpeechRequestCandidate.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t (*TranscriptProtoSpeechRequestCandidate.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  v3 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v4 = (_QWORD *)(a1 + *(int *)(v3 + 20));
  *v4 = 0;
  v4[1] = 0;
  v5 = a1 + *(int *)(v3 + 24);
  v6 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t type metadata accessor for TranscriptProtoExternalAgentRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002B88);
}

uint64_t TranscriptProtoExternalAgentRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoExternalAgentRequest, a1);
}

uint64_t TranscriptProtoExternalAgentRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoExternalAgentRequest);
}

uint64_t (*TranscriptProtoExternalAgentRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051CC9C((void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, a1);
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t (*TranscriptProtoExternalAgentRequestRewriteMetadata.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlan.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlan, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002D68);
}

uint64_t TranscriptProtoRequestPrescribedPlan.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRequestPrescribedPlan, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlan.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t (*TranscriptProtoRequestPrescribedPlan.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051BD60((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002DF8);
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanSearchTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002E90);
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051BD60((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, a1);
}

uint64_t sub_24051BD60@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002F20);
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanTextTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051BD60((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257002FB8);
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanConvertTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051BD60((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003050);
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanDisplayTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051BD60((void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, a1);
}

uint64_t type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570030E8);
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanKnowledgeTool.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  return nullsub_1;
}

unint64_t TranscriptProtoAction.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoAction(0);
  v3 = a1 + v2[7];
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)(a1 + v2[8]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[9]);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a1 + v2[10]);
  *v7 = 0;
  v7[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  result = sub_2403A8A4C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoAction(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003180);
}

uint64_t TranscriptProtoAction.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for TranscriptProtoAction, a1);
}

uint64_t TranscriptProtoAction.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for TranscriptProtoAction);
}

uint64_t (*TranscriptProtoAction.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C1E0(type metadata accessor for TranscriptProtoToolParameterValue, type metadata accessor for TranscriptProtoActionParameterValue, type metadata accessor for TranscriptProtoPromptSelection, a1);
}

uint64_t type metadata accessor for TranscriptProtoToolParameterValue(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700AA98);
}

uint64_t type metadata accessor for TranscriptProtoActionParameterValue(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003228);
}

uint64_t type metadata accessor for TranscriptProtoPromptSelection(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003368);
}

uint64_t TranscriptProtoActionParameterValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoActionParameterValue, a1);
}

uint64_t TranscriptProtoActionParameterValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoActionParameterValue);
}

uint64_t (*TranscriptProtoActionParameterValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionCancellation.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051FAAC(type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoActionCancellation, a1);
}

uint64_t type metadata accessor for TranscriptProtoActionCancellation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570032D0);
}

uint64_t TranscriptProtoActionCancellation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoActionCancellation, a1);
}

uint64_t TranscriptProtoActionCancellation.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoActionCancellation);
}

uint64_t (*TranscriptProtoActionCancellation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionCancellation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPromptSelection.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C830((void (*)(_QWORD))type metadata accessor for TranscriptProtoPromptSelection, a1);
}

uint64_t TranscriptProtoPromptSelection.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPromptSelection, a1);
}

uint64_t TranscriptProtoPromptSelection.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPromptSelection);
}

uint64_t (*TranscriptProtoPromptSelection.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPromptSelection(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionConfirmation.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_24051FA10((void (*)(_QWORD))type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t (*)(_QWORD))sub_2403A8A68, a1);
}

uint64_t type metadata accessor for TranscriptProtoActionConfirmation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570033F8);
}

uint64_t TranscriptProtoActionConfirmation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoActionConfirmation, a1);
}

uint64_t TranscriptProtoActionConfirmation.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoActionConfirmation);
}

uint64_t (*TranscriptProtoActionConfirmation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionConfirmation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C1E0(type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoParameterValue, type metadata accessor for TranscriptProtoPromptSelection, a1);
}

uint64_t sub_24051C1E0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a4, 1, 1, v7);
  v8 = a4 + *(int *)(a2(0) + 20);
  v9 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t type metadata accessor for TranscriptProtoParameterValue(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003488);
}

uint64_t TranscriptProtoParameterValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoParameterValue, a1);
}

uint64_t TranscriptProtoParameterValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoParameterValue);
}

uint64_t (*TranscriptProtoParameterValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolDisambiguation.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051CB2C((void (*)(_QWORD))type metadata accessor for TranscriptProtoToolDisambiguation, a1);
}

uint64_t type metadata accessor for TranscriptProtoToolDisambiguation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003520);
}

uint64_t TranscriptProtoToolDisambiguation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoToolDisambiguation, a1);
}

uint64_t TranscriptProtoToolDisambiguation.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoToolDisambiguation);
}

uint64_t (*TranscriptProtoToolDisambiguation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoToolDisambiguation(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoContextPrewarmRequest.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoContextPrewarmCompleted.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentOutcome.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  v3 = (char *)a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 24);
  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for TranscriptProtoExternalAgentOutcome(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003768);
}

uint64_t type metadata accessor for TranscriptProtoStatementOutcome(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005070);
}

uint64_t TranscriptProtoExternalAgentOutcome.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoExternalAgentOutcome, a1);
}

uint64_t TranscriptProtoExternalAgentOutcome.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoExternalAgentOutcome);
}

uint64_t (*TranscriptProtoExternalAgentOutcome.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionStepResult.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResultPayload.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C1E0(type metadata accessor for TranscriptProtoStatementOutcome, type metadata accessor for TranscriptProtoStatementResultPayload, type metadata accessor for TranscriptProtoResponseManifest, a1);
}

uint64_t type metadata accessor for TranscriptProtoStatementResultPayload(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003898);
}

uint64_t type metadata accessor for TranscriptProtoResponseManifest(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006898);
}

uint64_t TranscriptProtoStatementResultPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoStatementResultPayload, a1);
}

uint64_t TranscriptProtoStatementResultPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoStatementResultPayload);
}

uint64_t (*TranscriptProtoStatementResultPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStatementResultPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.init()@<X0>(char *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);

  v2 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  v3 = &a1[v2[6]];
  v4 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &a1[v2[7]];
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(&a1[v2[8]], 1, 1, v6);
  v7(&a1[v2[9]], 1, 1, v6);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t type metadata accessor for TranscriptProtoStatementResult(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003938);
}

uint64_t TranscriptProtoStatementResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for TranscriptProtoStatementResult, a1);
}

uint64_t TranscriptProtoStatementResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for TranscriptProtoStatementResult);
}

uint64_t (*TranscriptProtoStatementResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseGenerationRequest.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseGenerationRequest, MEMORY[0x24BEE4AF8], a1);
}

uint64_t sub_24051C668@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = a2;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoResponseGenerationRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570039E8);
}

uint64_t TranscriptProtoResponseGenerationRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoResponseGenerationRequest, a1);
}

uint64_t TranscriptProtoResponseGenerationRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoResponseGenerationRequest);
}

uint64_t (*TranscriptProtoResponseGenerationRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCandidate.init()@<X0>(_BYTE *a1@<X8>)
{
  int *v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v3 = &a1[v2[5]];
  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &a1[v2[6]];
  v6 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &a1[v2[7]];
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoCandidate(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003A78);
}

uint64_t type metadata accessor for TranscriptProtoCandidatePromptStatus(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003B20);
}

uint64_t TranscriptProtoCandidate.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoCandidate, a1);
}

uint64_t TranscriptProtoCandidate.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoCandidate);
}

uint64_t (*TranscriptProtoCandidate.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCandidatePromptStatus.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C830((void (*)(_QWORD))type metadata accessor for TranscriptProtoCandidatePromptStatus, a1);
}

uint64_t sub_24051C830@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_WORD *)(a2 + 8) = 256;
  a1(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoCandidatePromptStatus.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoCandidatePromptStatus, a1);
}

uint64_t TranscriptProtoCandidatePromptStatus.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoCandidatePromptStatus);
}

uint64_t (*TranscriptProtoCandidatePromptStatus.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  return nullsub_1;
}

unint64_t TranscriptProtoClientAction.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v2 = type metadata accessor for TranscriptProtoClientAction(0);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  v3 = a1 + *(int *)(v2 + 36);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 16) = sub_2403A8C1C(MEMORY[0x24BEE4AF8]);
  result = sub_2403A8C38(v5);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoClientAction(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003BB0);
}

uint64_t TranscriptProtoClientAction.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for TranscriptProtoClientAction, a1);
}

uint64_t TranscriptProtoClientAction.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for TranscriptProtoClientAction);
}

uint64_t (*TranscriptProtoClientAction.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoClientAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoShimParameterResolution.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoShimParameterResolutionEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoShimParameterResolution, a1);
}

uint64_t type metadata accessor for TranscriptProtoShimParameterResolutionEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003D08);
}

uint64_t type metadata accessor for TranscriptProtoShimParameterResolution(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257003C58);
}

uint64_t TranscriptProtoShimParameterResolution.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoShimParameterResolution, a1);
}

uint64_t TranscriptProtoShimParameterResolution.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoShimParameterResolution);
}

uint64_t (*TranscriptProtoShimParameterResolution.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoShimParameterResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUnresolvedParameterValue.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DF94(type metadata accessor for TranscriptProtoUnresolvedParameterValue, type metadata accessor for ToolKitProtoTypedValue, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoUnresolvedParameterValue(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003D98);
}

uint64_t TranscriptProtoUnresolvedParameterValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoUnresolvedParameterValue, a1);
}

uint64_t TranscriptProtoUnresolvedParameterValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t (*TranscriptProtoUnresolvedParameterValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  return nullsub_1;
}

double TranscriptProtoClientCustom.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  type metadata accessor for TranscriptProtoClientCustom(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *(_OWORD *)a1 = xmmword_2408EB790;
  *(_OWORD *)(a1 + 16) = xmmword_2408EB790;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoClientCustom(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003E30);
}

uint64_t TranscriptProtoClientCustom.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoClientCustom, a1);
}

uint64_t TranscriptProtoClientCustom.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoClientCustom);
}

uint64_t (*TranscriptProtoClientCustom.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoClientCustom(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDecompositionResult.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051CB2C((void (*)(_QWORD))type metadata accessor for TranscriptProtoDecompositionResult, a1);
}

uint64_t sub_24051CB2C@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  a1(0);
  a2[1] = 0;
  a2[2] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for TranscriptProtoDecompositionResult(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003EC8);
}

uint64_t TranscriptProtoDecompositionResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoDecompositionResult, a1);
}

uint64_t TranscriptProtoDecompositionResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoDecompositionResult);
}

uint64_t (*TranscriptProtoDecompositionResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDecompositionResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterContext.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for TranscriptProtoActionParameterContext(0) + 24);
  v3 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoActionParameterContext(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003F60);
}

uint64_t TranscriptProtoActionParameterContext.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoActionParameterContext, a1);
}

uint64_t TranscriptProtoActionParameterContext.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoActionParameterContext);
}

uint64_t (*TranscriptProtoActionParameterContext.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionParameterContext(0);
  return nullsub_1;
}

uint64_t TranscriptProtoIntelligenceFlowError.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051CC9C((void (*)(_QWORD))type metadata accessor for TranscriptProtoIntelligenceFlowError, 0, a1);
}

uint64_t sub_24051CC9C@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = a2;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoIntelligenceFlowError(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257003FF8);
}

uint64_t TranscriptProtoIntelligenceFlowError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoIntelligenceFlowError, a1);
}

uint64_t TranscriptProtoIntelligenceFlowError.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

uint64_t (*TranscriptProtoIntelligenceFlowError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSessionError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSessionErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSessionError, a1);
}

uint64_t type metadata accessor for TranscriptProtoSessionErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004140);
}

uint64_t type metadata accessor for TranscriptProtoSessionError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004090);
}

uint64_t TranscriptProtoSessionError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSessionError, a1);
}

uint64_t TranscriptProtoSessionError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSessionError);
}

uint64_t (*TranscriptProtoSessionError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSessionError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSessionCoordinatorError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSessionCoordinatorError, a1);
}

uint64_t type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004280);
}

uint64_t type metadata accessor for TranscriptProtoSessionCoordinatorError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570041D0);
}

uint64_t TranscriptProtoSessionCoordinatorError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSessionCoordinatorError, a1);
}

uint64_t TranscriptProtoSessionCoordinatorError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSessionCoordinatorError);
}

uint64_t (*TranscriptProtoSessionCoordinatorError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExecutorError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoExecutorErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExecutorError, a1);
}

uint64_t type metadata accessor for TranscriptProtoExecutorErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570043C0);
}

uint64_t type metadata accessor for TranscriptProtoExecutorError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004310);
}

uint64_t TranscriptProtoExecutorError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoExecutorError, a1);
}

uint64_t TranscriptProtoExecutorError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoExecutorError);
}

uint64_t (*TranscriptProtoExecutorError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExecutorError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPlannerError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoPlannerErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlannerError, a1);
}

uint64_t type metadata accessor for TranscriptProtoPlannerErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570044D8);
}

uint64_t type metadata accessor for TranscriptProtoPlannerError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004428);
}

uint64_t TranscriptProtoPlannerError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPlannerError, a1);
}

uint64_t TranscriptProtoPlannerError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPlannerError);
}

uint64_t (*TranscriptProtoPlannerError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPlannerError(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionOutcome.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionRequirement.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoActionRequirementEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionRequirement, a1);
}

uint64_t type metadata accessor for TranscriptProtoActionRequirementEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004680);
}

uint64_t type metadata accessor for TranscriptProtoActionRequirement(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570045D0);
}

uint64_t TranscriptProtoActionRequirement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoActionRequirement, a1);
}

uint64_t TranscriptProtoActionRequirement.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoActionRequirement);
}

uint64_t (*TranscriptProtoActionRequirement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionRequirement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementMessage.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSystemRequirementMessageEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementMessage, a1);
}

uint64_t type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570047C0);
}

uint64_t type metadata accessor for TranscriptProtoSystemRequirementMessage(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004710);
}

uint64_t TranscriptProtoSystemRequirementMessage.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemRequirementMessage, a1);
}

uint64_t TranscriptProtoSystemRequirementMessage.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemRequirementMessage);
}

uint64_t (*TranscriptProtoSystemRequirementMessage.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, a1);
}

uint64_t sub_24051D044@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004850);
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, a1);
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t (*TranscriptProtoSystemRequirementProtectedAppRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, a1);
}

uint64_t type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004978);
}

uint64_t type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570048E0);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, a1);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t (*TranscriptProtoSystemRequirementAuthenticationRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051D1B0(2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, a1);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, a1);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t (*TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  return nullsub_1;
}

uint64_t TranscriptProtoAppRequirement.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051D1B0(3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoAppRequirement, a1);
}

uint64_t sub_24051D1B0@<X0>(char a1@<W0>, void (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  *a3 = a1;
  a2(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t type metadata accessor for TranscriptProtoAppRequirement(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004A08);
}

uint64_t TranscriptProtoAppRequirement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoAppRequirement, a1);
}

uint64_t TranscriptProtoAppRequirement.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoAppRequirement);
}

uint64_t (*TranscriptProtoAppRequirement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoAppRequirement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPermissionRequirement.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051D1B0(8, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPermissionRequirement, a1);
}

uint64_t type metadata accessor for TranscriptProtoPermissionRequirement(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004A98);
}

uint64_t TranscriptProtoPermissionRequirement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPermissionRequirement, a1);
}

uint64_t TranscriptProtoPermissionRequirement.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPermissionRequirement);
}

uint64_t (*TranscriptProtoPermissionRequirement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPermissionRequirement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailure.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoActionFailureFailure, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionFailure, a1);
}

uint64_t type metadata accessor for TranscriptProtoActionFailureFailure(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004BC0);
}

uint64_t type metadata accessor for TranscriptProtoActionFailure(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004B28);
}

uint64_t TranscriptProtoActionFailure.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoActionFailure, a1);
}

uint64_t TranscriptProtoActionFailure.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoActionFailure);
}

uint64_t (*TranscriptProtoActionFailure.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionFailure(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailureFailure.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoActionFailureFailureEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionFailureFailure, a1);
}

uint64_t type metadata accessor for TranscriptProtoActionFailureFailureEnum(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004C70);
}

uint64_t TranscriptProtoActionFailureFailure.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoActionFailureFailure, a1);
}

uint64_t TranscriptProtoActionFailureFailure.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoActionFailureFailure);
}

uint64_t (*TranscriptProtoActionFailureFailure.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionFailureFailure(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004CD8);
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, a1);
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t (*TranscriptProtoActionFailureDeveloperDefinedError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionSuccess.init()@<X0>(_WORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoActionSuccess(0);
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 28);
  v6 = type metadata accessor for TranscriptProtoUndoContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoActionSuccess(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257004D70);
}

uint64_t type metadata accessor for TranscriptProtoUndoContext(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004E18);
}

uint64_t TranscriptProtoActionSuccess.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoActionSuccess, a1);
}

uint64_t TranscriptProtoActionSuccess.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoActionSuccess);
}

uint64_t (*TranscriptProtoActionSuccess.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionSuccess(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUndoContext.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DB50((void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoContext, a1);
}

uint64_t TranscriptProtoUndoContext.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoUndoContext, a1);
}

uint64_t TranscriptProtoUndoContext.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoUndoContext);
}

uint64_t (*TranscriptProtoUndoContext.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUndoContext(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterConfirmation.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051F004(type metadata accessor for TranscriptProtoParameterConfirmation, type metadata accessor for ToolKitProtoTypedValue, a1);
}

uint64_t type metadata accessor for TranscriptProtoParameterConfirmation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004EB0);
}

uint64_t TranscriptProtoParameterConfirmation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoParameterConfirmation, a1);
}

uint64_t TranscriptProtoParameterConfirmation.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoParameterConfirmation);
}

uint64_t (*TranscriptProtoParameterConfirmation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterConfirmation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterDisambiguation.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for TranscriptProtoParameterDisambiguation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004F48);
}

uint64_t TranscriptProtoParameterDisambiguation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoParameterDisambiguation, a1);
}

uint64_t TranscriptProtoParameterDisambiguation.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoParameterDisambiguation);
}

uint64_t (*TranscriptProtoParameterDisambiguation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoValueDisambiguation.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoValueDisambiguation, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoValueDisambiguation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257004FE0);
}

uint64_t TranscriptProtoValueDisambiguation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoValueDisambiguation, a1);
}

uint64_t TranscriptProtoValueDisambiguation.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoValueDisambiguation);
}

uint64_t (*TranscriptProtoValueDisambiguation.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoValueDisambiguation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementOutcome.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementOutcomeEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementOutcome, a1);
}

uint64_t type metadata accessor for TranscriptProtoStatementOutcomeEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005118);
}

uint64_t TranscriptProtoStatementOutcome.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoStatementOutcome, a1);
}

uint64_t TranscriptProtoStatementOutcome.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t (*TranscriptProtoStatementOutcome.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStatementOutcome(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterNeedsValue.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterNeedsValue, a1);
}

uint64_t type metadata accessor for TranscriptProtoParameterNeedsValue(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570051A8);
}

uint64_t TranscriptProtoParameterNeedsValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoParameterNeedsValue, a1);
}

uint64_t TranscriptProtoParameterNeedsValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoParameterNeedsValue);
}

uint64_t (*TranscriptProtoParameterNeedsValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterNotAllowed.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051DE40(type metadata accessor for TranscriptProtoParameterNotAllowed, type metadata accessor for ToolKitProtoTypedValue, a1);
}

uint64_t type metadata accessor for TranscriptProtoParameterNotAllowed(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005238);
}

uint64_t TranscriptProtoParameterNotAllowed.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoParameterNotAllowed, a1);
}

uint64_t TranscriptProtoParameterNotAllowed.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoParameterNotAllowed);
}

uint64_t (*TranscriptProtoParameterNotAllowed.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  return nullsub_1;
}

LighthouseDataProcessor::TranscriptProtoParameterNotAllowed::Reason __swiftcall TranscriptProtoParameterNotAllowed.Reason.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::TranscriptProtoParameterNotAllowed::Reason result;

  *v0 = 0;
  return result;
}

uint64_t TranscriptProtoParameterCandidatesNotFound.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoParameterCandidatesNotFound, type metadata accessor for ToolKitProtoTypedValue, a1);
}

uint64_t type metadata accessor for TranscriptProtoParameterCandidatesNotFound(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570052D0);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoParameterCandidatesNotFound, a1);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t (*TranscriptProtoParameterCandidatesNotFound.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParticipantID.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoParticipantID, a1);
}

uint64_t TranscriptProtoParticipantID.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoParticipantID, a1);
}

uint64_t TranscriptProtoParticipantID.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoParticipantID);
}

uint64_t (*TranscriptProtoParticipantID.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParticipantID(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSpanID.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoSpanID, 0, a1);
}

uint64_t TranscriptProtoSpanID.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSpanID, a1);
}

uint64_t TranscriptProtoSpanID.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSpanID);
}

uint64_t (*TranscriptProtoSpanID.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSpanID(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPlan.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 5;
  type metadata accessor for TranscriptProtoPlan(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for TranscriptProtoPlan(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005488);
}

uint64_t TranscriptProtoPlan.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoPlan, a1);
}

uint64_t sub_24051D984@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t TranscriptProtoPlan.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoPlan);
}

uint64_t sub_24051D9DC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*TranscriptProtoPlan.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPlan(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRecoverableError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoRecoverableErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRecoverableError, a1);
}

uint64_t type metadata accessor for TranscriptProtoRecoverableErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570055D8);
}

uint64_t type metadata accessor for TranscriptProtoRecoverableError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257005528);
}

uint64_t TranscriptProtoRecoverableError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRecoverableError, a1);
}

uint64_t TranscriptProtoRecoverableError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRecoverableError);
}

uint64_t (*TranscriptProtoRecoverableError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRecoverableError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPlanGenerationError.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoPlanGenerationErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlanGenerationError, a1);
}

uint64_t type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570056F0);
}

uint64_t type metadata accessor for TranscriptProtoPlanGenerationError(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257005640);
}

uint64_t TranscriptProtoPlanGenerationError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPlanGenerationError, a1);
}

uint64_t TranscriptProtoPlanGenerationError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPlanGenerationError);
}

uint64_t (*TranscriptProtoPlanGenerationError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPlanGenerationError(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DB50((void (*)(_QWORD))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, a1);
}

uint64_t sub_24051DB50@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005758);
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, a1);
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t (*TranscriptProtoPlanGenerationModelOutputError.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoQuery.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryData.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoQueryDataEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryData, a1);
}

uint64_t type metadata accessor for TranscriptProtoQueryDataEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005930);
}

uint64_t type metadata accessor for TranscriptProtoQueryData(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257005880);
}

uint64_t TranscriptProtoQueryData.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryData, a1);
}

uint64_t TranscriptProtoQueryData.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryData);
}

uint64_t (*TranscriptProtoQueryData.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryData(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStringQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoStringQuery, a1);
}

uint64_t type metadata accessor for TranscriptProtoStringQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570059C0);
}

uint64_t TranscriptProtoStringQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoStringQuery, a1);
}

uint64_t TranscriptProtoStringQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoStringQuery);
}

uint64_t (*TranscriptProtoStringQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStringQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPropertyQuery.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoPropertyQueryEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPropertyQuery, a1);
}

uint64_t type metadata accessor for TranscriptProtoPropertyQueryEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005B00);
}

uint64_t type metadata accessor for TranscriptProtoPropertyQuery(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257005A50);
}

uint64_t TranscriptProtoPropertyQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPropertyQuery, a1);
}

uint64_t TranscriptProtoPropertyQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPropertyQuery);
}

uint64_t (*TranscriptProtoPropertyQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPropertyQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryPredicateList.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryPredicateList, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoQueryPredicateList(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005B90);
}

uint64_t TranscriptProtoQueryPredicateList.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryPredicateList, a1);
}

uint64_t TranscriptProtoQueryPredicateList.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryPredicateList);
}

uint64_t (*TranscriptProtoQueryPredicateList.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryPredicateList(0);
  return nullsub_1;
}

uint64_t TranscriptProtoIdentifierQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoIdentifierQuery, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoIdentifierQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005C20);
}

uint64_t TranscriptProtoIdentifierQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoIdentifierQuery, a1);
}

uint64_t TranscriptProtoIdentifierQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoIdentifierQuery);
}

uint64_t (*TranscriptProtoIdentifierQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoIdentifierQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryPredicate.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051DE40(type metadata accessor for TranscriptProtoQueryPredicate, type metadata accessor for ToolKitProtoTypedValue, a1);
}

uint64_t sub_24051DE40@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = a3 + *(int *)(a1(0) + 24);
  v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0xE000000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoQueryPredicate(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005CB0);
}

uint64_t TranscriptProtoQueryPredicate.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoQueryPredicate, a1);
}

uint64_t TranscriptProtoQueryPredicate.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoQueryPredicate);
}

uint64_t (*TranscriptProtoQueryPredicate.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryPredicate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryResults.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryResults, MEMORY[0x24BEE4AF8], a1);
}

uint64_t type metadata accessor for TranscriptProtoQueryResults(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005D48);
}

uint64_t TranscriptProtoQueryResults.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryResults, a1);
}

uint64_t TranscriptProtoQueryResults.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryResults);
}

uint64_t (*TranscriptProtoQueryResults.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryResults(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStep.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DF94(type metadata accessor for TranscriptProtoQueryStep, type metadata accessor for TranscriptProtoStatementID, MEMORY[0x24BEE4AF8], a1);
}

uint64_t sub_24051DF94@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v7;
  uint64_t v8;
  uint64_t result;

  v7 = (char *)a4 + *(int *)(a1(0) + 20);
  v8 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a3;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoQueryStep(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005DD8);
}

uint64_t TranscriptProtoQueryStep.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoQueryStep, a1);
}

uint64_t TranscriptProtoQueryStep.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoQueryStep);
}

uint64_t (*TranscriptProtoQueryStep.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryStep(0);
  return nullsub_1;
}

unint64_t TranscriptProtoParameterQuery.init()@<X0>(unint64_t *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t Data;
  _QWORD *v7;
  unint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoParameterQuery(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[6];
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Data - 8) + 56))(v5, 1, 1, Data);
  v7 = (unint64_t *)((char *)a1 + v2[7]);
  *v7 = 0;
  v7[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403A8EF4(MEMORY[0x24BEE4AF8]);
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for TranscriptProtoParameterQuery(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257005E70);
}

uint64_t TranscriptProtoParameterQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoParameterQuery, a1);
}

uint64_t TranscriptProtoParameterQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoParameterQuery);
}

uint64_t (*TranscriptProtoParameterQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStepResults.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for TranscriptProtoQueryStepResults(0) + 24);
  v3 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoQueryStepResults.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoQueryStepResults, a1);
}

uint64_t TranscriptProtoQueryStepResults.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoQueryStepResults);
}

uint64_t (*TranscriptProtoQueryStepResults.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryStepResults(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseDialog.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoResponseDialog(0);
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoResponseDialog.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoResponseDialog, a1);
}

uint64_t TranscriptProtoResponseDialog.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoResponseDialog);
}

uint64_t (*TranscriptProtoResponseDialog.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseDialog(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseOutput.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v7;

  v2 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for TranscriptProtoDialogType(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(a1 + *(int *)(v2 + 32), 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v7;
  return result;
}

uint64_t TranscriptProtoResponseOutput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoResponseOutput, a1);
}

uint64_t TranscriptProtoResponseOutput.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoResponseOutput);
}

uint64_t (*TranscriptProtoResponseOutput.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseOutput(0);
  return nullsub_1;
}

uint64_t TranscriptProtoVisualOutput.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoVisualOutputType, (void (*)(_QWORD))type metadata accessor for TranscriptProtoVisualOutput, a1);
}

uint64_t TranscriptProtoVisualOutput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoVisualOutput, a1);
}

uint64_t TranscriptProtoVisualOutput.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoVisualOutput);
}

uint64_t (*TranscriptProtoVisualOutput.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoVisualOutput(0);
  return nullsub_1;
}

uint64_t TranscriptProtoLiveActivityOutputPayload.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityOutputPayload, a1);
}

uint64_t TranscriptProtoLiveActivityOutputPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoLiveActivityOutputPayload, a1);
}

uint64_t TranscriptProtoLiveActivityOutputPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t (*TranscriptProtoLiveActivityOutputPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInAppResponseOutputPayload.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoInAppResponseOutputPayload, a1);
}

uint64_t TranscriptProtoInAppResponseOutputPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoInAppResponseOutputPayload, a1);
}

uint64_t TranscriptProtoInAppResponseOutputPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t (*TranscriptProtoInAppResponseOutputPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  return nullsub_1;
}

double TranscriptProtoSystemSnippetOutputPayload.init()@<D0>(_OWORD *a1@<X8>)
{
  return sub_24051EB04((void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, a1);
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, a1);
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
}

uint64_t (*TranscriptProtoSystemSnippetOutputPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  return nullsub_1;
}

double TranscriptProtoPluginSnippetOutputPayload.init()@<D0>(uint64_t a1@<X8>)
{
  return sub_24051EA70((void (*)(_QWORD))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, a1);
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, a1);
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t (*TranscriptProtoPluginSnippetOutputPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDialogType.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoDialogFormat, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDialogType, a1);
}

uint64_t TranscriptProtoDialogType.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoDialogType, a1);
}

uint64_t TranscriptProtoDialogType.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoDialogType);
}

uint64_t (*TranscriptProtoDialogType.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDialogType(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStaticText.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoStaticText, a1);
}

uint64_t TranscriptProtoStaticText.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoStaticText, a1);
}

uint64_t TranscriptProtoStaticText.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoStaticText);
}

uint64_t (*TranscriptProtoStaticText.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStaticText(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSonicText.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoSonicText, a1);
}

uint64_t TranscriptProtoSonicText.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSonicText, a1);
}

uint64_t TranscriptProtoSonicText.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSonicText);
}

uint64_t (*TranscriptProtoSonicText.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSonicText(0);
  return nullsub_1;
}

uint64_t TranscriptProtoGeneratedText.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoGeneratedText, a1);
}

uint64_t TranscriptProtoGeneratedText.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoGeneratedText, a1);
}

uint64_t TranscriptProtoGeneratedText.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoGeneratedText);
}

uint64_t (*TranscriptProtoGeneratedText.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoGeneratedText(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoUnableToGenerate.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSuppressed.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for TranscriptProtoResponseDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[6];
  v6 = type metadata accessor for TranscriptProtoResponseVisual(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)((char *)a1 + v2[7]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)((char *)a1 + v2[8]);
  *v8 = 0;
  v8[1] = 0;
  *((_BYTE *)a1 + v2[9]) = 2;
  *((_BYTE *)a1 + v2[10]) = 2;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t TranscriptProtoResponseManifest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for TranscriptProtoResponseManifest, a1);
}

uint64_t TranscriptProtoResponseManifest.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t (*TranscriptProtoResponseManifest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)(a1 + 16) = xmmword_2408EA6D0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 2;
  type metadata accessor for TranscriptProtoResponseParameter(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoResponseParameter.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for TranscriptProtoResponseParameter, a1);
}

uint64_t TranscriptProtoResponseParameter.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for TranscriptProtoResponseParameter);
}

uint64_t (*TranscriptProtoResponseParameter.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseParameter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseVisual.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051EDFC((void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseVisual, a1);
}

uint64_t TranscriptProtoResponseVisual.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoResponseVisual, a1);
}

uint64_t TranscriptProtoResponseVisual.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoResponseVisual);
}

uint64_t (*TranscriptProtoResponseVisual.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResponseVisual(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUIType.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoUitype, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUIType, a1);
}

uint64_t TranscriptProtoUIType.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoUIType, a1);
}

uint64_t TranscriptProtoUIType.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoUIType);
}

uint64_t (*TranscriptProtoUIType.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUIType(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUILabel.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoLabel, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUILabel, a1);
}

uint64_t TranscriptProtoUILabel.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoUILabel, a1);
}

uint64_t TranscriptProtoUILabel.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoUILabel);
}

uint64_t (*TranscriptProtoUILabel.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUILabel(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUIConfirmationLabel.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoUIConfirmationLabel.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoUIConfirmationLabel, a1);
}

uint64_t TranscriptProtoUIConfirmationLabel.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

uint64_t (*TranscriptProtoUIConfirmationLabel.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  return nullsub_1;
}

double TranscriptProtoArchiveViewPayload.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  a1[1] = 0u;
  a1[2] = 0u;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *a1 = xmmword_2408EB790;
  return result;
}

uint64_t TranscriptProtoArchiveViewPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoArchiveViewPayload, a1);
}

uint64_t TranscriptProtoArchiveViewPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoArchiveViewPayload);
}

uint64_t (*TranscriptProtoArchiveViewPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoLiveActivityPayload.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityPayload, a1);
}

uint64_t TranscriptProtoLiveActivityPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoLiveActivityPayload, a1);
}

uint64_t TranscriptProtoLiveActivityPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoLiveActivityPayload);
}

uint64_t (*TranscriptProtoLiveActivityPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  return nullsub_1;
}

double TranscriptProtoPluginSnippetPayload.init()@<D0>(uint64_t a1@<X8>)
{
  return sub_24051EA70((void (*)(_QWORD))type metadata accessor for TranscriptProtoPluginSnippetPayload, a1);
}

double sub_24051EA70@<D0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  double result;

  a1(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *(_OWORD *)a2 = xmmword_2408EB790;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoPluginSnippetPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoPluginSnippetPayload, a1);
}

uint64_t TranscriptProtoPluginSnippetPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoPluginSnippetPayload);
}

uint64_t (*TranscriptProtoPluginSnippetPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  return nullsub_1;
}

double TranscriptProtoControlPayload.init()@<D0>(_OWORD *a1@<X8>)
{
  return sub_24051EB04((void (*)(_QWORD))type metadata accessor for TranscriptProtoControlPayload, a1);
}

double sub_24051EB04@<D0>(void (*a1)(_QWORD)@<X0>, _OWORD *a2@<X8>)
{
  double result;

  a1(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *a2 = xmmword_2408EB790;
  return result;
}

uint64_t TranscriptProtoControlPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoControlPayload, a1);
}

uint64_t TranscriptProtoControlPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoControlPayload);
}

uint64_t (*TranscriptProtoControlPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoControlPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolution.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  a1[2] = 0;
  a1[3] = 0;
  v3 = (char *)a1 + v2[6];
  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[7];
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)a1 + v2[8];
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoSystemPromptResolution.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoSystemPromptResolution, a1);
}

uint64_t TranscriptProtoSystemPromptResolution.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoSystemPromptResolution);
}

uint64_t (*TranscriptProtoSystemPromptResolution.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolutionInput.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemPromptResolutionInput, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionInput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemPromptResolutionInput, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionInput.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t (*TranscriptProtoSystemPromptResolutionInput.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  v3 = a1 + *(int *)(v2 + 36);
  v4 = type metadata accessor for TranscriptProtoParameterSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + *(int *)(v2 + 40);
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
  *(_WORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 26) = 0;
  return result;
}

uint64_t TranscriptProtoActionResolverRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for TranscriptProtoActionResolverRequest, a1);
}

uint64_t TranscriptProtoActionResolverRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for TranscriptProtoActionResolverRequest);
}

uint64_t (*TranscriptProtoActionResolverRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoActionResolverRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoContextRetrieved.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051EDFC((void (*)(_QWORD))type metadata accessor for TranscriptProtoContextRetrieved, a1);
}

uint64_t sub_24051EDFC@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  return result;
}

uint64_t TranscriptProtoContextRetrieved.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoContextRetrieved, a1);
}

uint64_t TranscriptProtoContextRetrieved.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoContextRetrieved);
}

uint64_t (*TranscriptProtoContextRetrieved.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoContextRetrieved(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRetrievedContextStatement.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C1E0(type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoRetrievedContextStatement, type metadata accessor for ContextProtoRetrievedContext, a1);
}

uint64_t TranscriptProtoRetrievedContextStatement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoRetrievedContextStatement, a1);
}

uint64_t TranscriptProtoRetrievedContextStatement.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoRetrievedContextStatement);
}

uint64_t (*TranscriptProtoRetrievedContextStatement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051C1E0(type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, type metadata accessor for ContextProtoDynamicEnumerationEntity, a1);
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, a1);
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t (*TranscriptProtoDynamicEnumerationEntityStatement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoSafetyModeRelease.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSafetyModeException.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F478((void (*)(_QWORD))type metadata accessor for TranscriptProtoSafetyModeException, a1);
}

uint64_t TranscriptProtoSafetyModeException.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSafetyModeException, a1);
}

uint64_t TranscriptProtoSafetyModeException.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSafetyModeException);
}

uint64_t (*TranscriptProtoSafetyModeException.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSafetyModeException(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterSet.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterSet, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoParameterSet.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoParameterSet, a1);
}

uint64_t TranscriptProtoParameterSet.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoParameterSet);
}

uint64_t (*TranscriptProtoParameterSet.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameterSet(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameter.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051F004(type metadata accessor for TranscriptProtoParameter, type metadata accessor for TranscriptProtoCandidate, a1);
}

uint64_t sub_24051F004@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  v5 = a3 + *(int *)(a1(0) + 24);
  v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoParameter.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoParameter, a1);
}

uint64_t TranscriptProtoParameter.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoParameter);
}

uint64_t (*TranscriptProtoParameter.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoParameter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoClientInitiatedClientAction.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F2E8((void (*)(_QWORD))type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t (*)(_QWORD))sub_2403A8C1C, a1);
}

uint64_t TranscriptProtoClientInitiatedClientAction.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoClientInitiatedClientAction, a1);
}

uint64_t TranscriptProtoClientInitiatedClientAction.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t (*TranscriptProtoClientInitiatedClientAction.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemQuery.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t (*TranscriptProtoSystemPromptResolutionUserAction.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemPromptResolutionActionCancellation.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.init()@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t (*TranscriptProtoSystemPromptResolutionRequirementResolution.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoVariableSetter.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_240520C00(type metadata accessor for TranscriptProtoVariableSetter, type metadata accessor for ToolKitProtoTypedValue, (uint64_t (*)(_QWORD))sub_2403A8EF4, a1);
}

uint64_t TranscriptProtoVariableSetter.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoVariableSetter, a1);
}

uint64_t TranscriptProtoVariableSetter.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoVariableSetter);
}

uint64_t (*TranscriptProtoVariableSetter.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoVariableSetter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoVariableStep.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DF94(type metadata accessor for TranscriptProtoVariableStep, type metadata accessor for TranscriptProtoStatementID, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoVariableStep.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoVariableStep, a1);
}

uint64_t TranscriptProtoVariableStep.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoVariableStep);
}

uint64_t (*TranscriptProtoVariableStep.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoVariableStep(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprCallVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F2E8((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t (*)(_QWORD))sub_2403A8C54, a1);
}

uint64_t sub_24051F2E8@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  a1(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  result = a2(MEMORY[0x24BEE4AF8]);
  a3[2] = result;
  return result;
}

uint64_t TranscriptProtoASTFlatExprCallVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatExprCallVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprCallVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t (*TranscriptProtoASTFlatExprCallVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprSayVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSayVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTFlatExprSayVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprSayVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprSayVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t (*TranscriptProtoASTFlatExprSayVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPickVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoASTFlatExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, a1);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatExprPickVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t (*TranscriptProtoASTFlatExprPickVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t (*TranscriptProtoASTFlatExprConfirmVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F478((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, a1);
}

uint64_t sub_24051F478@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  a1(0);
  *a2 = 0;
  a2[1] = 0;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t (*TranscriptProtoASTFlatExprUndoVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t (*TranscriptProtoASTFlatExprRejectVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t (*TranscriptProtoASTFlatExprCancelVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatExprContinuePlanningVariant.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTPickType.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = -1;
  type metadata accessor for TranscriptProtoASTPickType(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoASTPickType.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTPickType, a1);
}

uint64_t TranscriptProtoASTPickType.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t (*TranscriptProtoASTPickType.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTPickType(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_240520180((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t (*TranscriptProtoASTFlatExprSearchVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateParametersVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatExprGetMentionedApps.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t updated;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  v3 = a1 + *(int *)(updated + 24);
  v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(a1 + *(int *)(updated + 28), 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t (*TranscriptProtoASTFlatExprPickOneVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t (*TranscriptProtoASTFlatExprResolveToolVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprDotVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoASTFlatExprDotVariant, type metadata accessor for TranscriptProtoASTFlatValue, a1);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatExprDotVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t (*TranscriptProtoASTFlatExprDotVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatAssignExpr.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoASTFlatAssignExpr, type metadata accessor for TranscriptProtoASTFlatExpr, a1);
}

uint64_t TranscriptProtoASTFlatAssignExpr.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatAssignExpr, a1);
}

uint64_t TranscriptProtoASTFlatAssignExpr.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t (*TranscriptProtoASTFlatAssignExpr.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatAssignExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExpr.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoAstflatExprEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExpr, a1);
}

uint64_t TranscriptProtoASTFlatExpr.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatExpr, a1);
}

uint64_t TranscriptProtoASTFlatExpr.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatExpr);
}

uint64_t (*TranscriptProtoASTFlatExpr.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoAstflatValueEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValue, a1);
}

uint64_t TranscriptProtoASTFlatValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatValue, a1);
}

uint64_t TranscriptProtoASTFlatValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t (*TranscriptProtoASTFlatValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, a1);
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t (*TranscriptProtoASTFlatValueArrayVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValueDictVariant.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_24051FA10((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t (*)(_QWORD))sub_2403A8C54, a1);
}

uint64_t sub_24051FA10@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  a1(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = a2(MEMORY[0x24BEE4AF8]);
  *a3 = result;
  return result;
}

uint64_t TranscriptProtoASTFlatValueDictVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTFlatValueDictVariant, a1);
}

uint64_t TranscriptProtoASTFlatValueDictVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t (*TranscriptProtoASTFlatValueDictVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051FAAC(type metadata accessor for TranscriptProtoASTFlatValue, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, a1);
}

uint64_t sub_24051FAAC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v5 = a1(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(a3, 1, 1, v5);
  v7 = a2(0);
  v6(a3 + *(int *)(v7 + 20), 1, 1, v5);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t (*TranscriptProtoASTFlatExprIndexVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FD28(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, type metadata accessor for TranscriptProtoASTFlatValue, a1);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t (*TranscriptProtoASTFlatExprInfixVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoExpressionEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExpression, a1);
}

uint64_t TranscriptProtoExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoExpression, a1);
}

uint64_t TranscriptProtoExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoExpression);
}

uint64_t (*TranscriptProtoExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoValueExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoValueExpressionEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoValueExpression, a1);
}

uint64_t TranscriptProtoValueExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoValueExpression, a1);
}

uint64_t TranscriptProtoValueExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoValueExpression);
}

uint64_t (*TranscriptProtoValueExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoValueExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoValueExpressionArrayVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoValueExpressionArrayVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoValueExpressionArrayVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoValueExpressionArrayVariant, a1);
}

uint64_t TranscriptProtoValueExpressionArrayVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t (*TranscriptProtoValueExpressionArrayVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPrefixExpression.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FE14(type metadata accessor for TranscriptProtoPrefixExpression, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t TranscriptProtoPrefixExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoPrefixExpression, a1);
}

uint64_t TranscriptProtoPrefixExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoPrefixExpression);
}

uint64_t (*TranscriptProtoPrefixExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPrefixExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInfixExpression.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FD28(type metadata accessor for TranscriptProtoInfixExpression, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t sub_24051FD28@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v5 = a1(0);
  v6 = &a3[*(int *)(v5 + 20)];
  v7 = a2(0);
  v8 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(&a3[*(int *)(v5 + 24)], 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  return result;
}

uint64_t TranscriptProtoInfixExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoInfixExpression, a1);
}

uint64_t TranscriptProtoInfixExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoInfixExpression);
}

uint64_t (*TranscriptProtoInfixExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoInfixExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FE14(type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, type metadata accessor for TranscriptProtoASTFlatValue, a1);
}

uint64_t sub_24051FE14@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;

  v5 = &a3[*(int *)(a1(0) + 20)];
  v6 = a2(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  return result;
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, a1);
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t (*TranscriptProtoASTFlatExprPrefixVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDotExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoDotExpression, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t TranscriptProtoDotExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoDotExpression, a1);
}

uint64_t TranscriptProtoDotExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoDotExpression);
}

uint64_t (*TranscriptProtoDotExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDotExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoIndexExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051FAAC(type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoIndexExpression, a1);
}

uint64_t TranscriptProtoIndexExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoIndexExpression, a1);
}

uint64_t TranscriptProtoIndexExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoIndexExpression);
}

uint64_t (*TranscriptProtoIndexExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoIndexExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParametersExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DF94(type metadata accessor for TranscriptProtoUpdateParametersExpression, type metadata accessor for TranscriptProtoStatementID, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoUpdateParametersExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoUpdateParametersExpression, a1);
}

uint64_t TranscriptProtoUpdateParametersExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoUpdateParametersExpression);
}

uint64_t (*TranscriptProtoUpdateParametersExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051DE40(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, a1);
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t (*TranscriptProtoUpdateParameterExpression_UpdateParameter.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCallExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F2E8((void (*)(_QWORD))type metadata accessor for TranscriptProtoCallExpression, (uint64_t (*)(_QWORD))sub_2403A8C70, a1);
}

uint64_t TranscriptProtoCallExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoCallExpression, a1);
}

uint64_t TranscriptProtoCallExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoCallExpression);
}

uint64_t (*TranscriptProtoCallExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoCallExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSayExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoSayExpression, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoSayExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoSayExpression, a1);
}

uint64_t TranscriptProtoSayExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoSayExpression);
}

uint64_t (*TranscriptProtoSayExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSayExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPickExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DF94(type metadata accessor for TranscriptProtoPickExpression, type metadata accessor for TranscriptProtoStatementID, 0, a1);
}

uint64_t TranscriptProtoPickExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoPickExpression, a1);
}

uint64_t TranscriptProtoPickExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoPickExpression);
}

uint64_t (*TranscriptProtoPickExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPickExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoConfirmExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoConfirmExpression, a1);
}

uint64_t TranscriptProtoConfirmExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoConfirmExpression, a1);
}

uint64_t TranscriptProtoConfirmExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoConfirmExpression);
}

uint64_t (*TranscriptProtoConfirmExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoConfirmExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSearchExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_240520180((void (*)(_QWORD))type metadata accessor for TranscriptProtoSearchExpression, a1);
}

uint64_t sub_240520180@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  a1(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_WORD *)(a2 + 16) = 0;
  return result;
}

uint64_t TranscriptProtoSearchExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoSearchExpression, a1);
}

uint64_t TranscriptProtoSearchExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoSearchExpression);
}

uint64_t (*TranscriptProtoSearchExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSearchExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPickOneExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPickOneExpression, a1);
}

uint64_t TranscriptProtoPickOneExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoPickOneExpression, a1);
}

uint64_t TranscriptProtoPickOneExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoPickOneExpression);
}

uint64_t (*TranscriptProtoPickOneExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoPickOneExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResolveToolExpression.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoResolveToolExpression, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoResolveToolExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoResolveToolExpression, a1);
}

uint64_t TranscriptProtoResolveToolExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoResolveToolExpression);
}

uint64_t (*TranscriptProtoResolveToolExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoResolveToolExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUndoExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoExpression, a1);
}

uint64_t TranscriptProtoUndoExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoUndoExpression, a1);
}

uint64_t TranscriptProtoUndoExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoUndoExpression);
}

uint64_t (*TranscriptProtoUndoExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUndoExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRejectExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRejectExpression, a1);
}

uint64_t TranscriptProtoRejectExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoRejectExpression, a1);
}

uint64_t TranscriptProtoRejectExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoRejectExpression);
}

uint64_t (*TranscriptProtoRejectExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoRejectExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCancelExpression.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCancelExpression, a1);
}

uint64_t TranscriptProtoCancelExpression.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoCancelExpression, a1);
}

uint64_t TranscriptProtoCancelExpression.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoCancelExpression);
}

uint64_t (*TranscriptProtoCancelExpression.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoCancelExpression(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoNoMatchingToolExpression.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoContinuePlanningExpression.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoEndOfPlanExpression.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoGetMentionedAppsExpression.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTProgram.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTProgram, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTProgram.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTProgram, a1);
}

uint64_t TranscriptProtoASTProgram.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTProgram);
}

uint64_t (*TranscriptProtoASTProgram.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTProgram(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTStmt.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_2405206C8((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTStmt, a1);
}

uint64_t TranscriptProtoASTStmt.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTStmt, a1);
}

uint64_t TranscriptProtoASTStmt.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTStmt);
}

uint64_t (*TranscriptProtoASTStmt.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTIfStmt.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2405212C0(type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTIfStmt, type metadata accessor for TranscriptProtoASTBlockStmt, a1);
}

uint64_t TranscriptProtoASTIfStmt.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTIfStmt, a1);
}

uint64_t TranscriptProtoASTIfStmt.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTIfStmt);
}

uint64_t (*TranscriptProtoASTIfStmt.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTIfStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTForInStmt.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_2405217D4(type metadata accessor for TranscriptProtoASTForInStmt, type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTBlockStmt, a1);
}

uint64_t TranscriptProtoASTForInStmt.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTForInStmt, a1);
}

uint64_t TranscriptProtoASTForInStmt.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTForInStmt);
}

uint64_t (*TranscriptProtoASTForInStmt.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTForInStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTBlockStmt.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTBlockStmt, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTBlockStmt.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTBlockStmt, a1);
}

uint64_t TranscriptProtoASTBlockStmt.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t (*TranscriptProtoASTBlockStmt.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTBlockStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTLiteral.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoAstliteralEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteral, a1);
}

uint64_t TranscriptProtoASTLiteral.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTLiteral, a1);
}

uint64_t TranscriptProtoASTLiteral.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTLiteral);
}

uint64_t (*TranscriptProtoASTLiteral.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTLiteral(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTLiteralArrayVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteralArrayVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTLiteralArrayVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTLiteralArrayVariant, a1);
}

uint64_t TranscriptProtoASTLiteralArrayVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t (*TranscriptProtoASTLiteralArrayVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTLiteralDictVariant.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_24051FA10((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t (*)(_QWORD))sub_2403A8C8C, a1);
}

uint64_t TranscriptProtoASTLiteralDictVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTLiteralDictVariant, a1);
}

uint64_t TranscriptProtoASTLiteralDictVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t (*TranscriptProtoASTLiteralDictVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExpr.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_2405206C8((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t sub_2405206C8@<X0>(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0xF000000000000007;
  a1(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoASTExpr.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t TranscriptProtoASTExpr.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t (*TranscriptProtoASTExpr.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPrefixVariant.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FE14(type metadata accessor for TranscriptProtoASTExprPrefixVariant, type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t TranscriptProtoASTExprPrefixVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprPrefixVariant, a1);
}

uint64_t TranscriptProtoASTExprPrefixVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t (*TranscriptProtoASTExprPrefixVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprInfixVariant.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FD28(type metadata accessor for TranscriptProtoASTExprInfixVariant, type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t TranscriptProtoASTExprInfixVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTExprInfixVariant, a1);
}

uint64_t TranscriptProtoASTExprInfixVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTExprInfixVariant);
}

uint64_t (*TranscriptProtoASTExprInfixVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprDotVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoASTExprDotVariant, type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t TranscriptProtoASTExprDotVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprDotVariant, a1);
}

uint64_t TranscriptProtoASTExprDotVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprDotVariant);
}

uint64_t (*TranscriptProtoASTExprDotVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprIndexVariant.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24051FAAC(type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTExprIndexVariant, a1);
}

uint64_t TranscriptProtoASTExprIndexVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprIndexVariant, a1);
}

uint64_t TranscriptProtoASTExprIndexVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprIndexVariant);
}

uint64_t (*TranscriptProtoASTExprIndexVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprCallVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F2E8((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t (*)(_QWORD))sub_2403A8C8C, a1);
}

uint64_t TranscriptProtoASTExprCallVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprCallVariant, a1);
}

uint64_t TranscriptProtoASTExprCallVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprCallVariant);
}

uint64_t (*TranscriptProtoASTExprCallVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprSayVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSayVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTExprSayVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprSayVariant, a1);
}

uint64_t TranscriptProtoASTExprSayVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprSayVariant);
}

uint64_t (*TranscriptProtoASTExprSayVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPickVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoASTExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, a1);
}

uint64_t TranscriptProtoASTExprPickVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprPickVariant, a1);
}

uint64_t TranscriptProtoASTExprPickVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprPickVariant);
}

uint64_t (*TranscriptProtoASTExprPickVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprConfirmVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprConfirmVariant, a1);
}

uint64_t TranscriptProtoASTExprConfirmVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprConfirmVariant, a1);
}

uint64_t TranscriptProtoASTExprConfirmVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t (*TranscriptProtoASTExprConfirmVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprUndoVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051F478((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprUndoVariant, a1);
}

uint64_t TranscriptProtoASTExprUndoVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprUndoVariant, a1);
}

uint64_t TranscriptProtoASTExprUndoVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprUndoVariant);
}

uint64_t (*TranscriptProtoASTExprUndoVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprCancelVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprCancelVariant, a1);
}

uint64_t TranscriptProtoASTExprCancelVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprCancelVariant, a1);
}

uint64_t TranscriptProtoASTExprCancelVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprCancelVariant);
}

uint64_t (*TranscriptProtoASTExprCancelVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprSearchVariant.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_240520180((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSearchVariant, a1);
}

uint64_t TranscriptProtoASTExprSearchVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoASTExprSearchVariant, a1);
}

uint64_t TranscriptProtoASTExprSearchVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoASTExprSearchVariant);
}

uint64_t (*TranscriptProtoASTExprSearchVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPickOneVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPickOneVariant, a1);
}

uint64_t TranscriptProtoASTExprPickOneVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprPickOneVariant, a1);
}

uint64_t TranscriptProtoASTExprPickOneVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t (*TranscriptProtoASTExprPickOneVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprNoMatchingToolVariant.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprRejectVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051D044((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprRejectVariant, a1);
}

uint64_t TranscriptProtoASTExprRejectVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprRejectVariant, a1);
}

uint64_t TranscriptProtoASTExprRejectVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprRejectVariant);
}

uint64_t (*TranscriptProtoASTExprRejectVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprResolveToolVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprResolveToolVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoASTExprResolveToolVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoASTExprResolveToolVariant, a1);
}

uint64_t TranscriptProtoASTExprResolveToolVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t (*TranscriptProtoASTExprResolveToolVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprContinuePlanningVariant.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_240520C00(type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, type metadata accessor for TranscriptProtoStatementID, (uint64_t (*)(_QWORD))sub_2403A8CA8, a1);
}

uint64_t sub_240520C00@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X8>)
{
  char *v7;
  uint64_t v8;
  uint64_t result;

  v7 = (char *)a4 + *(int *)(a1(0) + 20);
  v8 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = a3(MEMORY[0x24BEE4AF8]);
  *a4 = result;
  return result;
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, a1);
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t (*TranscriptProtoASTExprUpdateParametersVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprGetMentionedApps.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTUpdateExpr.init()@<X0>(_BYTE *a1@<X8>)
{
  return sub_24051FE14(type metadata accessor for TranscriptProtoASTUpdateExpr, type metadata accessor for TranscriptProtoASTExpr, a1);
}

uint64_t TranscriptProtoASTUpdateExpr.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoASTUpdateExpr, a1);
}

uint64_t TranscriptProtoASTUpdateExpr.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoASTUpdateExpr);
}

uint64_t (*TranscriptProtoASTUpdateExpr.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolParameterValue.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoToolParameterValueEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoToolParameterValue, a1);
}

uint64_t TranscriptProtoToolParameterValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoToolParameterValue, a1);
}

uint64_t TranscriptProtoToolParameterValue.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoToolParameterValue);
}

uint64_t (*TranscriptProtoToolParameterValue.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoToolParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEntitySpanMatchResult.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoEntitySpanMatchResult, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoEntitySpanMatchResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoEntitySpanMatchResult, a1);
}

uint64_t TranscriptProtoEntitySpanMatchResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t (*TranscriptProtoEntitySpanMatchResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolRetrievalResponse.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = v3;
  return result;
}

uint64_t TranscriptProtoToolRetrievalResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoToolRetrievalResponse, a1);
}

uint64_t TranscriptProtoToolRetrievalResponse.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoToolRetrievalResponse);
}

uint64_t (*TranscriptProtoToolRetrievalResponse.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  v2 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
  a1[3] = 0;
  a1[4] = 0;
  v3 = (char *)a1 + v2[7];
  v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[8];
  v6 = type metadata accessor for TranscriptProtoResponseOutput(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)a1 + v2[9];
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)((char *)a1 + v2[10]);
  *v9 = 0;
  v9[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t TranscriptProtoSystemResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for TranscriptProtoSystemResponse, a1);
}

uint64_t TranscriptProtoSystemResponse.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for TranscriptProtoSystemResponse);
}

uint64_t (*TranscriptProtoSystemResponse.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSystemResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  _QWORD *v8;

  v2 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  v3 = (int *)type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a1 + v3[6], 1, 1, v5);
  v7 = (_QWORD *)(a1 + v3[7]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(a1 + v3[8]);
  *v8 = 0;
  v8[1] = 0;
  v6(a1 + v3[9], 1, 1, v5);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoInterpretedStatementResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for TranscriptProtoInterpretedStatementResult, a1);
}

uint64_t TranscriptProtoInterpretedStatementResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoProgramStatement.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_240521594(type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoProgramStatement, type metadata accessor for TranscriptProtoExpression, type metadata accessor for ToolKitProtoTypeInstance, a1);
}

uint64_t TranscriptProtoProgramStatement.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoProgramStatement, a1);
}

uint64_t TranscriptProtoProgramStatement.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoProgramStatement);
}

uint64_t (*TranscriptProtoProgramStatement.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoProgramStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoLocaleSettings.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051DB50((void (*)(_QWORD))type metadata accessor for TranscriptProtoLocaleSettings, a1);
}

uint64_t TranscriptProtoLocaleSettings.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoLocaleSettings, a1);
}

uint64_t TranscriptProtoLocaleSettings.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoLocaleSettings);
}

uint64_t (*TranscriptProtoLocaleSettings.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoLocaleSettings(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.init()@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, a1);
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t (*TranscriptProtoDeviceDetailsDeviceType.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDeviceDetails.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051BA20(type metadata accessor for TranscriptProtoDeviceDetails, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, a1);
}

uint64_t TranscriptProtoDeviceDetails.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoDeviceDetails, a1);
}

uint64_t TranscriptProtoDeviceDetails.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoDeviceDetails);
}

uint64_t (*TranscriptProtoDeviceDetails.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementID.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoStatementID(0);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a1 = 0;
  return result;
}

uint64_t TranscriptProtoStatementID.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t TranscriptProtoStatementID.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t (*TranscriptProtoStatementID.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoStatementID(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolResolution.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2405212C0(type metadata accessor for ToolKitProtoToolDefinition.Version1, type metadata accessor for TranscriptProtoToolResolution, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t sub_2405212C0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a4, 1, 1, v7);
  v8 = a2(0);
  v9 = a4 + *(int *)(v8 + 20);
  v10 = a3(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v11(a4 + *(int *)(v8 + 24), 1, 1, v10);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoToolResolution.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoToolResolution, a1);
}

uint64_t TranscriptProtoToolResolution.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoToolResolution);
}

uint64_t (*TranscriptProtoToolResolution.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoToolResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUndoRedoRequest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(a1 + *(int *)(v2 + 32), 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t TranscriptProtoUndoRedoRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoUndoRedoRequest, a1);
}

uint64_t TranscriptProtoUndoRedoRequest.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoUndoRedoRequest);
}

uint64_t (*TranscriptProtoUndoRedoRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoClientUndoRedoRequest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  v3 = a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(a1 + *(int *)(v2 + 28), 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t TranscriptProtoClientUndoRedoRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoClientUndoRedoRequest, a1);
}

uint64_t TranscriptProtoClientUndoRedoRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t (*TranscriptProtoClientUndoRedoRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_240521594(type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoTypeConversionRequest, type metadata accessor for ToolKitProtoTypeInstance, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t sub_240521594@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a5, 1, 1, v9);
  v10 = a2(0);
  v11 = a5 + *(int *)(v10 + 20);
  v12 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a5 + *(int *)(v10 + 24);
  v14 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t TranscriptProtoTypeConversionRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoTypeConversionRequest, a1);
}

uint64_t TranscriptProtoTypeConversionRequest.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoTypeConversionRequest);
}

uint64_t (*TranscriptProtoTypeConversionRequest.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionResult.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2405212C0(type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoTypeConversionResult, type metadata accessor for TranscriptProtoStatementID, a1);
}

uint64_t TranscriptProtoTypeConversionResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoTypeConversionResult, a1);
}

uint64_t TranscriptProtoTypeConversionResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoTypeConversionResult);
}

uint64_t (*TranscriptProtoTypeConversionResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationResult.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t result;
  uint64_t v5;

  v2 = (char *)a1 + *(int *)(type metadata accessor for TranscriptProtoQueryDecorationResult(0) + 32);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8) + 56))(v2, 1, 1, DecorationToolRetrievalResponse);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v5 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v5;
  a1[2] = v5;
  a1[3] = v5;
  return result;
}

uint64_t TranscriptProtoQueryDecorationResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24051D984(type metadata accessor for TranscriptProtoQueryDecorationResult, a1);
}

uint64_t TranscriptProtoQueryDecorationResult.unknownFields.setter(uint64_t a1)
{
  return sub_24051D9DC(a1, type metadata accessor for TranscriptProtoQueryDecorationResult);
}

uint64_t (*TranscriptProtoQueryDecorationResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_2405217D4(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, a1);
}

uint64_t sub_2405217D4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  v7 = a1(0);
  v8 = (char *)a4 + *(int *)(v7 + 20);
  v9 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a4 + *(int *)(v7 + 24);
  v11 = a3(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResult.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_24051C668((void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, MEMORY[0x24BEE4AF8], a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayload.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTextQuery.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoTextQuery(0);
  v3 = a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(v2 + 28));
  *v5 = 0;
  v5[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t TranscriptProtoTextQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for TranscriptProtoTextQuery, a1);
}

uint64_t TranscriptProtoTextQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for TranscriptProtoTextQuery);
}

uint64_t (*TranscriptProtoTextQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoTextQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentTextQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  a1[2] = 0;
  a1[3] = 0;
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t TranscriptProtoExternalAgentTextQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoExternalAgentTextQuery, a1);
}

uint64_t TranscriptProtoExternalAgentTextQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t (*TranscriptProtoExternalAgentTextQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechQuery.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoSpeechQuery(0);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t TranscriptProtoSpeechQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoSpeechQuery, a1);
}

uint64_t TranscriptProtoSpeechQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoSpeechQuery);
}

uint64_t (*TranscriptProtoSpeechQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoSpeechQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  a1[1] = 0;
  a1[2] = 0;
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, a1);
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t (*TranscriptProtoExternalAgentSpeechQuery.unknownFields.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  return nullsub_1;
}

uint64_t (*TranscriptProtoContinuePlanning.unknownFields.modify())()
{
  return nullsub_1;
}

void *static TranscriptProtoCandidateSource.allCases.getter()
{
  return &unk_2510A6AE8;
}

LighthouseDataProcessor::TranscriptProtoCandidateSource_optional sub_240521DE8(Swift::Int *a1)
{
  return TranscriptProtoCandidateSource.init(rawValue:)(*a1);
}

uint64_t sub_240521DF0()
{
  sub_2404EF628();
  return sub_2408E5834();
}

void sub_240521E28(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6AE8;
}

void *static TranscriptProtoSystemRequirement.allCases.getter()
{
  return &unk_2510A6B10;
}

uint64_t sub_240521E44()
{
  sub_2406F9934();
  return sub_2408E5834();
}

void sub_240521E7C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6B38;
}

void *static TranscriptProtoPlanSource.allCases.getter()
{
  return &unk_2510A6B60;
}

LighthouseDataProcessor::TranscriptProtoPlanSource_optional sub_240521E98(Swift::Int *a1)
{
  return TranscriptProtoPlanSource.init(rawValue:)(*a1);
}

uint64_t sub_240521EA0()
{
  sub_2404F9FE4();
  return sub_2408E5834();
}

void sub_240521ED8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6B88;
}

void *static TranscriptProtoQueryOperator.allCases.getter()
{
  return &unk_2510A6BB0;
}

LighthouseDataProcessor::TranscriptProtoQueryOperator_optional sub_240521EF4(Swift::Int *a1)
{
  return TranscriptProtoQueryOperator.init(rawValue:)(*a1);
}

uint64_t sub_240521EFC()
{
  sub_2404EF6B0();
  return sub_2408E5834();
}

void sub_240521F34(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6BB0;
}

void *static TranscriptProtoResponseType.allCases.getter()
{
  return &unk_2510A6BE0;
}

uint64_t sub_240521F50()
{
  sub_2404EF6F4();
  return sub_2408E5834();
}

void sub_240521F88(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6C08;
}

void *static TranscriptProtoResponseDialogPresentationHint.allCases.getter()
{
  return &unk_2510A6C30;
}

uint64_t sub_240521FA4()
{
  sub_2404F9FA0();
  return sub_2408E5834();
}

void sub_240521FDC(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6C58;
}

void *static TranscriptProtoASTUpdateKind.allCases.getter()
{
  return &unk_2510A6C80;
}

uint64_t sub_240521FF8()
{
  sub_2404EF738();
  return sub_2408E5834();
}

void sub_240522030(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6CA8;
}

void *static TranscriptProtoPrefixExpression_PrefixOp.allCases.getter()
{
  return &unk_2510A6CD0;
}

LighthouseDataProcessor::TranscriptProtoPrefixExpression_PrefixOp_optional sub_24052204C(Swift::Int *a1)
{
  return TranscriptProtoPrefixExpression_PrefixOp.init(rawValue:)(*a1);
}

uint64_t sub_240522054()
{
  sub_2404EF7C0();
  return sub_2408E5834();
}

void sub_24052208C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6CF8;
}

void *static TranscriptProtoInfixExpression_InfixOp.allCases.getter()
{
  return &unk_2510A6D20;
}

LighthouseDataProcessor::TranscriptProtoInfixExpression_InfixOp_optional sub_2405220A8(Swift::Int *a1)
{
  return TranscriptProtoInfixExpression_InfixOp.init(rawValue:)(*a1);
}

uint64_t sub_2405220B0()
{
  sub_2404EF804();
  return sub_2408E5834();
}

void sub_2405220E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6D20;
}

void *static TranscriptProtoASTInfixOp.allCases.getter()
{
  return &unk_2510A6D58;
}

uint64_t sub_240522104()
{
  sub_2404EF77C();
  return sub_2408E5834();
}

void sub_24052213C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6D58;
}

void *static TranscriptProtoASTPrefixOp.allCases.getter()
{
  return &unk_2510A6D90;
}

uint64_t sub_240522158()
{
  sub_2404EF848();
  return sub_2408E5834();
}

void sub_240522190(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6DB8;
}

void *static TranscriptProtoUpdateParameterExpression_UpdateKind.allCases.getter()
{
  return &unk_2510A6DE0;
}

_QWORD *sub_2405221AC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_2405221CC()
{
  sub_2404EF88C();
  return sub_2408E5834();
}

void sub_240522204(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6E08;
}

void *static TranscriptProtoUndoOperation.allCases.getter()
{
  return &unk_2510A6E30;
}

uint64_t sub_240522220()
{
  sub_2404EF8D0();
  return sub_2408E5834();
}

void sub_240522258(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6E58;
}

uint64_t (*TranscriptProtoEvent.rawID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoEvent.rawSessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.clientRequestID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.clientRequestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TranscriptProtoEvent.clientRequestID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.clientSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.clientSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*TranscriptProtoEvent.clientSessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.clientApplicationID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.clientApplicationID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*TranscriptProtoEvent.clientApplicationID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.rawInitiatedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoEvent.rawInitiatedSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*TranscriptProtoEvent.rawInitiatedSpans.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.rawQueryEventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.rawQueryEventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*TranscriptProtoEvent.rawQueryEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.rawPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 44), a1, &qword_256FFA490);
}

uint64_t TranscriptProtoEvent.rawPayload.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 44), &qword_256FFA490);
}

uint64_t (*TranscriptProtoEvent.rawPayload.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.clientGroupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoEvent(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoEvent.clientGroupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TranscriptProtoEvent(0) + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoEvent.clientGroupID.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.timepoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 52), a1, &qword_256FFA4A0);
}

uint64_t TranscriptProtoEvent.timepoint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 52), &qword_256FFA4A0);
}

uint64_t (*TranscriptProtoEvent.timepoint.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.rawTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 56), a1, &qword_256FFA498);
}

uint64_t TranscriptProtoEvent.rawTimestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 56), &qword_256FFA498);
}

uint64_t (*TranscriptProtoEvent.rawTimestamp.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 60), a1, &qword_256FFA4A8);
}

uint64_t TranscriptProtoEvent.sender.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 60), &qword_256FFA4A8);
}

uint64_t (*TranscriptProtoEvent.sender.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.postingSpan.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 64), a1, &qword_256FFA4B0);
}

uint64_t TranscriptProtoEvent.postingSpan.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoEvent(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 64), &qword_256FFA4B0);
}

uint64_t (*TranscriptProtoEvent.postingSpan.modify())()
{
  type metadata accessor for TranscriptProtoEvent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoEvent.init(rawID:rawSessionID:rawQueryEventID:rawPayload:clientRequestID:clientSessionID:clientApplicationID:clientGroupID:timepoint:rawTimestamp:sender:postingSpan:rawInitiatedSpans:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;

  v22 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  v23 = a9 + v22[11];
  v24 = type metadata accessor for TranscriptProtoPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = (_QWORD *)(a9 + v22[12]);
  *v25 = 0;
  v25[1] = 0;
  v26 = a9 + v22[13];
  v27 = type metadata accessor for TranscriptProtoTimepoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = a9 + v22[14];
  v29 = sub_2408E5750();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = a9 + v22[15];
  v31 = type metadata accessor for TranscriptProtoParticipantID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = a9 + v22[16];
  v33 = type metadata accessor for TranscriptProtoSpanID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 88) = a5;
  *(_QWORD *)(a9 + 96) = a6;
  sub_2403C25A0(a7, v23, &qword_256FFA490);
  *(_QWORD *)(a9 + 32) = a8;
  *(_OWORD *)(a9 + 40) = a10;
  *(_OWORD *)(a9 + 56) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  swift_bridgeObjectRelease();
  *v25 = a13;
  v25[1] = a14;
  sub_2403C25A0(a15, v26, &qword_256FFA4A0);
  sub_2403C25A0(a16, v28, &qword_256FFA498);
  sub_2403C25A0(a17, v30, &qword_256FFA4A8);
  result = sub_2403C25A0(a18, v32, &qword_256FFA4B0);
  *(_QWORD *)(a9 + 80) = a19;
  return result;
}

uint64_t TranscriptProtoPayload.payloadValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA488);
}

uint64_t TranscriptProtoPayload.payloadValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA488);
}

uint64_t (*TranscriptProtoPayload.payloadValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTranscript.sessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoTranscript.sessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoTranscript.sessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTranscript.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoTranscript.events.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TranscriptProtoTranscript.events.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTranscript.clientSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*TranscriptProtoTranscript.clientSessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTranscript.init(sessionID:clientSessionID:events:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoTranscript(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = a1;
  a6[1] = a2;
  a6[3] = a3;
  a6[4] = a4;
  a6[2] = a5;
  return result;
}

uint64_t (*TranscriptProtoTimepoint.suspendingClockInstantNs.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTimepoint.continuousClockInstantNs.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TranscriptProtoTimepoint.continuousClockInstantNs.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*TranscriptProtoTimepoint.continuousClockInstantNs.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoTimepoint.rawBootSessionUuid.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTimepoint.rawDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoTimepoint, &qword_256FFA498, a1);
}

uint64_t TranscriptProtoTimepoint.rawDate.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoTimepoint, &qword_256FFA498);
}

uint64_t (*TranscriptProtoTimepoint.rawDate.modify())()
{
  type metadata accessor for TranscriptProtoTimepoint(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTimepoint.init(rawDate:suspendingClockInstantNs:continuousClockInstantNs:rawBootSessionUuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v12 = (uint64_t)a6 + *(int *)(type metadata accessor for TranscriptProtoTimepoint(0) + 28);
  v13 = sub_2408E5750();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v12, &qword_256FFA498);
  *a6 = a2;
  a6[1] = a3;
  a6[2] = a4;
  a6[3] = a5;
  return result;
}

uint64_t (*TranscriptProtoSessionStart.originatingDeviceWasLocal.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSessionStart.initialLocaleSettings.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoSessionStart, &qword_256FFA310, a1);
}

uint64_t TranscriptProtoSessionStart.initialLocaleSettings.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoSessionStart, &qword_256FFA310);
}

uint64_t (*TranscriptProtoSessionStart.initialLocaleSettings.modify())()
{
  type metadata accessor for TranscriptProtoSessionStart(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSessionStart.originatingDevice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoSessionStart, &qword_256FFA320, a1);
}

uint64_t TranscriptProtoSessionStart.originatingDevice.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoSessionStart, &qword_256FFA320);
}

uint64_t (*TranscriptProtoSessionStart.originatingDevice.modify())()
{
  type metadata accessor for TranscriptProtoSessionStart(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSessionStart.init(initialLocaleSettings:originatingDevice:originatingDeviceWasLocal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = type metadata accessor for TranscriptProtoSessionStart(0);
  v9 = (uint64_t)&a4[*(int *)(v8 + 20)];
  v10 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (uint64_t)&a4[*(int *)(v8 + 24)];
  v12 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v9, &qword_256FFA310);
  result = sub_2403C25A0(a2, v11, &qword_256FFA320);
  *a4 = a3;
  return result;
}

uint64_t TranscriptProtoRequest.safetyMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TranscriptProtoRequest.safetyMode.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptProtoRequest.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoRequest, &qword_256FFA350, a1);
}

uint64_t TranscriptProtoRequest.content.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoRequest, &qword_256FFA350);
}

uint64_t (*TranscriptProtoRequest.content.modify())()
{
  type metadata accessor for TranscriptProtoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.prescribedPlan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoRequest, &qword_256FFA360, a1);
}

uint64_t TranscriptProtoRequest.prescribedPlan.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoRequest, &qword_256FFA360);
}

uint64_t (*TranscriptProtoRequest.prescribedPlan.modify())()
{
  type metadata accessor for TranscriptProtoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.rawRewriteMetadataEventID.getter()
{
  return sub_240526454(type metadata accessor for TranscriptProtoRequest);
}

uint64_t TranscriptProtoRequest.rawRewriteMetadataEventID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2405264A0(a1, a2, type metadata accessor for TranscriptProtoRequest);
}

uint64_t (*TranscriptProtoRequest.rawRewriteMetadataEventID.modify())()
{
  type metadata accessor for TranscriptProtoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.rewriteMetadataInlined.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoRequest, &qword_256FFA368, a1);
}

uint64_t TranscriptProtoRequest.rewriteMetadataInlined.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoRequest, &qword_256FFA368);
}

uint64_t (*TranscriptProtoRequest.rewriteMetadataInlined.modify())()
{
  type metadata accessor for TranscriptProtoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequest.init(content:safetyMode:prescribedPlan:rawRewriteMetadataEventID:rewriteMetadataInlined:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v12 = (int *)type metadata accessor for TranscriptProtoRequest(0);
  v13 = (uint64_t)&a7[v12[5]];
  v14 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (uint64_t)&a7[v12[6]];
  v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &a7[v12[7]];
  *v17 = 0;
  v17[1] = 0;
  v18 = (uint64_t)&a7[v12[8]];
  v19 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v13, &qword_256FFA350);
  *a7 = a2;
  sub_2403C25A0(a3, v15, &qword_256FFA360);
  swift_bridgeObjectRelease();
  *v17 = a4;
  v17[1] = a5;
  return sub_2403C25A0(a6, v18, &qword_256FFA368);
}

uint64_t TranscriptProtoRequestContent.requestContentValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA348);
}

uint64_t TranscriptProtoRequestContent.requestContentValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA348);
}

uint64_t (*TranscriptProtoRequestContent.requestContentValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestContentTextContent.text.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContentTextContent.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoRequestContentTextContent, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoRequestContentTextContent.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoRequestContentTextContent, &qword_256FFA300);
}

uint64_t (*TranscriptProtoRequestContentTextContent.statementID.modify())()
{
  type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContentTextContent.init(text:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoRequestContentTextContent, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a4);
}

uint64_t TranscriptProtoRequestContentSpeechContent.candidates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoRequestContentSpeechContent.candidates.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TranscriptProtoRequestContentSpeechContent.candidates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestContentSpeechContent.init(candidates:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContentSpeechContent, a2);
}

uint64_t (*TranscriptProtoSpeechRequestCandidate.recognition.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechRequestCandidate.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoSpeechRequestCandidate.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256FFA300);
}

uint64_t (*TranscriptProtoSpeechRequestCandidate.statementID.modify())()
{
  type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechRequestCandidate.init(recognition:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoSpeechRequestCandidate, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a4);
}

uint64_t sub_240523360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;

  v13 = (uint64_t)a7 + *(int *)(a4(0) + 20);
  v14 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a7 = a1;
  a7[1] = a2;
  return sub_2403C25A0(a3, v13, a6);
}

uint64_t TranscriptProtoExternalAgentRequest.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA350);
}

uint64_t TranscriptProtoExternalAgentRequest.content.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA350);
}

uint64_t (*TranscriptProtoExternalAgentRequest.content.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequest.rawRewriteMetadataEventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoExternalAgentRequest.rawRewriteMetadataEventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequest(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoExternalAgentRequest.rawRewriteMetadataEventID.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequest.rewriteMetadataInlined.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoExternalAgentRequest, &qword_256FFA368, a1);
}

uint64_t TranscriptProtoExternalAgentRequest.rewriteMetadataInlined.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoExternalAgentRequest, &qword_256FFA368);
}

uint64_t (*TranscriptProtoExternalAgentRequest.rewriteMetadataInlined.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequest.init(content:rawRewriteMetadataEventID:rewriteMetadataInlined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v10 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v12 = (_QWORD *)(a5 + *(int *)(v11 + 20));
  *v12 = 0;
  v12[1] = 0;
  v13 = a5 + *(int *)(v11 + 24);
  v14 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a5, &qword_256FFA350);
  swift_bridgeObjectRelease();
  *v12 = a2;
  v12[1] = a3;
  return sub_2403C25A0(a4, v13, &qword_256FFA368);
}

uint64_t (*TranscriptProtoExternalAgentRequestRewriteMetadata.originalRequest.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoExternalAgentRequestRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.init(originalRequest:rewrites:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, a4);
}

uint64_t TranscriptProtoRequestPrescribedPlan.requestPrescribedPlanValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA358);
}

uint64_t TranscriptProtoRequestPrescribedPlan.requestPrescribedPlanValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA358);
}

uint64_t (*TranscriptProtoRequestPrescribedPlan.requestPrescribedPlanValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanSearchTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanSearchTool.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.init(query:isLowConfidenceKnowledge:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_240523734(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, a4);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init(query:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, a3);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanTextTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanTextTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.init(query:isExplicit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_240523734(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, a4);
}

uint64_t sub_240523734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  a4(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  return result;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanConvertTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanConvertTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.init(query:isExplicit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_240523734(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, a4);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanDisplayTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanDisplayTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.init(query:isExplicit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_240523734(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, a4);
}

uint64_t (*TranscriptProtoRequestPrescribedPlanKnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoRequestPrescribedPlanKnowledgeTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.init(query:isExplicit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_240523734(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, a4);
}

uint64_t (*TranscriptProtoAction.toolID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoAction.isConfirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TranscriptProtoAction.isConfirmed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TranscriptProtoAction.isConfirmed.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoAction.parameterValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoAction.parameterValues.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*TranscriptProtoAction.parameterValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoAction.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoAction, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoAction.statementID.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoAction, &qword_256FFA300);
}

uint64_t (*TranscriptProtoAction.statementID.modify())()
{
  type metadata accessor for TranscriptProtoAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoAction.bundleID.getter()
{
  return sub_240526CB4(type metadata accessor for TranscriptProtoAction);
}

uint64_t TranscriptProtoAction.bundleID.setter(uint64_t a1, uint64_t a2)
{
  return sub_240526D00(a1, a2, type metadata accessor for TranscriptProtoAction);
}

uint64_t (*TranscriptProtoAction.bundleID.modify())()
{
  type metadata accessor for TranscriptProtoAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoAction.deviceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TranscriptProtoAction(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoAction.deviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TranscriptProtoAction(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoAction.deviceID.modify())()
{
  type metadata accessor for TranscriptProtoAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoAction.planEventID.getter()
{
  return sub_2403BD798(type metadata accessor for TranscriptProtoAction);
}

uint64_t TranscriptProtoAction.planEventID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2403BD7E4(a1, a2, type metadata accessor for TranscriptProtoAction);
}

uint64_t (*TranscriptProtoAction.planEventID.modify())()
{
  type metadata accessor for TranscriptProtoAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoAction.init(statementID:toolID:bundleID:deviceID:isConfirmed:parameterValues:planEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t result;

  v17 = (int *)type metadata accessor for TranscriptProtoAction(0);
  v18 = a9 + v17[7];
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)(a9 + v17[8]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (_QWORD *)(a9 + v17[9]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)(a9 + v17[10]);
  *v22 = 0;
  v22[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v18, &qword_256FFA300);
  *(_QWORD *)a9 = a2;
  *(_QWORD *)(a9 + 8) = a3;
  swift_bridgeObjectRelease();
  *v20 = a4;
  v20[1] = a5;
  swift_bridgeObjectRelease();
  *v21 = a6;
  v21[1] = a7;
  *(_BYTE *)(a9 + 16) = a8;
  *(_QWORD *)(a9 + 24) = a10;
  result = swift_bridgeObjectRelease();
  *v22 = a11;
  v22[1] = a12;
  return result;
}

uint64_t TranscriptProtoActionParameterValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_257001220);
}

uint64_t TranscriptProtoActionParameterValue.value.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_257001220);
}

uint64_t (*TranscriptProtoActionParameterValue.value.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterValue.promptSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoActionParameterValue, &qword_257001210, a1);
}

uint64_t TranscriptProtoActionParameterValue.promptSelection.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoActionParameterValue, &qword_257001210);
}

uint64_t (*TranscriptProtoActionParameterValue.promptSelection.modify())()
{
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterValue.init(value:promptSelection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240523E28(a1, a2, type metadata accessor for TranscriptProtoToolParameterValue, type metadata accessor for TranscriptProtoActionParameterValue, &qword_257001220, a3);
}

uint64_t (*TranscriptProtoActionCancellation.cancelledActionStatementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionCancellation.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoActionCancellation, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoActionCancellation.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoActionCancellation, &qword_256FFA300);
}

uint64_t (*TranscriptProtoActionCancellation.statementID.modify())()
{
  type metadata accessor for TranscriptProtoActionCancellation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionCancellation.init(cancelledActionStatementID:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240528708(a1, a2, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoActionCancellation, &qword_256FFA300, a3);
}

void TranscriptProtoPromptSelection.promptSelectionValues.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

uint64_t (*TranscriptProtoPromptSelection.promptSelectionValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoPromptSelectionEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t sub_240523CD8(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t (*TranscriptProtoActionConfirmation.parameterValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionConfirmation.init(parameterValues:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionConfirmation, a2);
}

uint64_t sub_240523D30@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  a2(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = a1;
  return result;
}

uint64_t TranscriptProtoParameterValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3A8);
}

uint64_t TranscriptProtoParameterValue.value.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoParameterValue.value.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterValue.promptSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoParameterValue, &qword_257001210, a1);
}

uint64_t TranscriptProtoParameterValue.promptSelection.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoParameterValue, &qword_257001210);
}

uint64_t (*TranscriptProtoParameterValue.promptSelection.modify())()
{
  type metadata accessor for TranscriptProtoParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterValue.init(value:promptSelection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240523E28(a1, a2, type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoParameterValue, &qword_256FFA3A8, a3);
}

uint64_t sub_240523E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a6, 1, 1, v11);
  v12 = a6 + *(int *)(a4(0) + 20);
  v13 = type metadata accessor for TranscriptProtoPromptSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a6, a5);
  return sub_2403C25A0(a2, v12, &qword_257001210);
}

uint64_t (*TranscriptProtoToolDisambiguation.tools.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoToolDisambiguation.assistantSchemaKind.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoToolDisambiguation.init(assistantSchemaKind:tools:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524C34(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoToolDisambiguation, a4);
}

uint64_t (*TranscriptProtoExternalAgentOutcome.responseText.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentOutcome.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoExternalAgentOutcome.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256FFA300);
}

uint64_t (*TranscriptProtoExternalAgentOutcome.statementID.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentOutcome.statementOutcome.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256FFA3E8, a1);
}

uint64_t TranscriptProtoExternalAgentOutcome.statementOutcome.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256FFA3E8);
}

uint64_t (*TranscriptProtoExternalAgentOutcome.statementOutcome.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentOutcome.init(responseText:statementID:statementOutcome:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  v9 = (uint64_t)a4 + *(int *)(v8 + 20);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (uint64_t)a4 + *(int *)(v8 + 24);
  v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a1;
  sub_2403C25A0(a2, v9, &qword_256FFA300);
  return sub_2403C25A0(a3, v11, &qword_256FFA3E8);
}

uint64_t TranscriptProtoStatementResultPayload.outcome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3E8);
}

uint64_t TranscriptProtoStatementResultPayload.outcome.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3E8);
}

uint64_t (*TranscriptProtoStatementResultPayload.outcome.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResultPayload.response.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoStatementResultPayload, &qword_256FFA418, a1);
}

uint64_t TranscriptProtoStatementResultPayload.response.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoStatementResultPayload, &qword_256FFA418);
}

uint64_t (*TranscriptProtoStatementResultPayload.response.modify())()
{
  type metadata accessor for TranscriptProtoStatementResultPayload(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResultPayload.init(outcome:response:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  v7 = a3 + *(int *)(type metadata accessor for TranscriptProtoStatementResultPayload(0) + 20);
  v8 = type metadata accessor for TranscriptProtoResponseManifest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a3, &qword_256FFA3E8);
  return sub_2403C25A0(a2, v7, &qword_256FFA418);
}

uint64_t TranscriptProtoStatementResult.actionEventID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoStatementResult.actionEventID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoStatementResult.actionEventID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoStatementResult.toolID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA420, a1);
}

uint64_t TranscriptProtoStatementResult.payload.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA420);
}

uint64_t (*TranscriptProtoStatementResult.payload.modify())()
{
  type metadata accessor for TranscriptProtoStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.resultStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoStatementResult.resultStatementID.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoStatementResult.resultStatementID.modify())()
{
  type metadata accessor for TranscriptProtoStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.originProgramStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoStatementResult.originProgramStatementID.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoStatementResult.originProgramStatementID.modify())()
{
  type metadata accessor for TranscriptProtoStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.originTaskStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2405248B4(type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoStatementResult.originTaskStatementID.setter(uint64_t a1)
{
  return sub_240524910(a1, type metadata accessor for TranscriptProtoStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoStatementResult.originTaskStatementID.modify())()
{
  type metadata accessor for TranscriptProtoStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoStatementResult.init(actionEventID:toolID:payload:resultStatementID:originProgramStatementID:originTaskStatementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v12 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
  v13 = (uint64_t)a9 + v12[6];
  v14 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (uint64_t)a9 + v12[7];
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v18 = (uint64_t)a9 + v12[8];
  v17(v18, 1, 1, v16);
  v19 = (uint64_t)a9 + v12[9];
  v17(v19, 1, 1, v16);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_2403C25A0(a5, v13, &qword_256FFA420);
  sub_2403C25A0(a6, v15, &qword_256FFA300);
  sub_2403C25A0(a7, v18, &qword_256FFA300);
  return sub_2403C25A0(a8, v19, &qword_256FFA300);
}

uint64_t (*TranscriptProtoResponseGenerationRequest.statementResults.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseGenerationRequest.init(statementResults:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseGenerationRequest, a2);
}

void TranscriptProtoCandidate.source.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t (*TranscriptProtoCandidate.source.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoCandidate.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoCandidate, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoCandidate.value.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoCandidate, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoCandidate.value.modify())()
{
  type metadata accessor for TranscriptProtoCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCandidate.promptStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoCandidate, &qword_256FFA7B0, a1);
}

uint64_t TranscriptProtoCandidate.promptStatus.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoCandidate, &qword_256FFA7B0);
}

uint64_t (*TranscriptProtoCandidate.promptStatus.modify())()
{
  type metadata accessor for TranscriptProtoCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCandidate.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoCandidate, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoCandidate.statementID.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoCandidate, &qword_256FFA300);
}

uint64_t (*TranscriptProtoCandidate.statementID.modify())()
{
  type metadata accessor for TranscriptProtoCandidate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoCandidate.init(value:source:promptStatus:statementID:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = *a2;
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = (uint64_t)&a5[v10[5]];
  v12 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)&a5[v10[6]];
  v14 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (uint64_t)&a5[v10[7]];
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v11, &qword_256FFA3A8);
  *a5 = v9;
  sub_2403C25A0(a3, v13, &qword_256FFA7B0);
  return sub_2403C25A0(a4, v15, &qword_256FFA300);
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoPromptSelectionV06promptG6ValuesAA0defG4EnumOSgvs_0(uint64_t result)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_BYTE *)(result + 9);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 9) = v3;
  return result;
}

uint64_t (*TranscriptProtoCandidatePromptStatus.candidatePromptStatusValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoCandidatePromptStatusEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t (*TranscriptProtoClientAction.toolID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoClientAction.parameters.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoClientAction.shimParameterResolution.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientAction.clientQueryID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*TranscriptProtoClientAction.clientQueryID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientAction.planEventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*TranscriptProtoClientAction.planEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientAction.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2405248B4(type metadata accessor for TranscriptProtoClientAction, &qword_256FFA300, a1);
}

uint64_t sub_2405248B4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 36), a3, a2);
}

uint64_t TranscriptProtoClientAction.statementID.setter(uint64_t a1)
{
  return sub_240524910(a1, type metadata accessor for TranscriptProtoClientAction, &qword_256FFA300);
}

uint64_t sub_240524910(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 36), a3);
}

uint64_t (*TranscriptProtoClientAction.statementID.modify())()
{
  type metadata accessor for TranscriptProtoClientAction(0);
  return nullsub_1;
}

uint64_t TranscriptProtoClientAction.init(toolID:parameters:clientQueryID:planEventID:shimParameterResolution:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;

  v17 = (uint64_t)a9 + *(int *)(type metadata accessor for TranscriptProtoClientAction(0) + 36);
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a9 = a1;
  a9[1] = a2;
  a9[4] = a4;
  a9[5] = a5;
  a9[6] = a6;
  a9[7] = a7;
  a9[2] = a3;
  a9[3] = a8;
  return sub_2403C25A0(a10, v17, &qword_256FFA300);
}

uint64_t TranscriptProtoShimParameterResolution.shimParameterResolutionValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFE810);
}

uint64_t TranscriptProtoShimParameterResolution.shimParameterResolutionValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFE810);
}

uint64_t (*TranscriptProtoShimParameterResolution.shimParameterResolutionValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUnresolvedParameterValue.candidates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUnresolvedParameterValue.raw.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoUnresolvedParameterValue, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoUnresolvedParameterValue.raw.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoUnresolvedParameterValue, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoUnresolvedParameterValue.raw.modify())()
{
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUnresolvedParameterValue.init(raw:candidates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoUnresolvedParameterValue, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFA3A8, a3);
}

uint64_t TranscriptProtoClientCustom.tag.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_240360070(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t TranscriptProtoClientCustom.tag.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_240363D58(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*TranscriptProtoClientCustom.tag.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientCustom.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_240360070(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t TranscriptProtoClientCustom.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_240527018(a1, a2, sub_240363D58);
}

uint64_t (*TranscriptProtoClientCustom.value.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoClientCustom.debugDescription_p.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientCustom.init(tag:value:debugDescription_p:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_24052564C(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for TranscriptProtoClientCustom, a7);
}

uint64_t (*TranscriptProtoDecompositionResult.queries.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoDecompositionResult.prompt.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoDecompositionResult.init(prompt:queries:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524C34(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDecompositionResult, a4);
}

uint64_t sub_240524C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;

  a4(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a5[1] = a1;
  a5[2] = a2;
  *a5 = a3;
  return result;
}

uint64_t (*TranscriptProtoActionParameterContext.toolID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionParameterContext.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterContext.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoActionParameterContext, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoActionParameterContext.statementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoActionParameterContext, &qword_256FFA300);
}

uint64_t (*TranscriptProtoActionParameterContext.statementID.modify())()
{
  type metadata accessor for TranscriptProtoActionParameterContext(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionParameterContext.init(statementID:toolID:parameterID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v12 = (uint64_t)a6 + *(int *)(type metadata accessor for TranscriptProtoActionParameterContext(0) + 24);
  v13 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v12, &qword_256FFA300);
  *a6 = a2;
  a6[1] = a3;
  a6[2] = a4;
  a6[3] = a5;
  return result;
}

uint64_t (*TranscriptProtoIntelligenceFlowError.domain.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoIntelligenceFlowError.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TranscriptProtoIntelligenceFlowError.code.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*TranscriptProtoIntelligenceFlowError.code.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoIntelligenceFlowError.init(domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoIntelligenceFlowError, a4);
}

uint64_t sub_240524DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;

  a4(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  return result;
}

uint64_t TranscriptProtoSessionError.sessionErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA388);
}

uint64_t TranscriptProtoSessionError.sessionErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA388);
}

uint64_t (*TranscriptProtoSessionError.sessionErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSessionCoordinatorError.sessionCoordinatorErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA370);
}

uint64_t TranscriptProtoSessionCoordinatorError.sessionCoordinatorErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA370);
}

uint64_t (*TranscriptProtoSessionCoordinatorError.sessionCoordinatorErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExecutorError.executorErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA380);
}

uint64_t TranscriptProtoExecutorError.executorErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA380);
}

uint64_t (*TranscriptProtoExecutorError.executorErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoExecutorErrorEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_24052FE2C(a1, a2, type metadata accessor for TranscriptProtoExecutorErrorEnum, &qword_25700BD98) & 1;
}

uint64_t TranscriptProtoPlannerError.plannerErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA378);
}

uint64_t TranscriptProtoPlannerError.plannerErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA378);
}

uint64_t (*TranscriptProtoPlannerError.plannerErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoPlannerErrorEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_24052FE2C(a1, a2, type metadata accessor for TranscriptProtoPlannerErrorEnum, &qword_25700BD90) & 1;
}

uint64_t TranscriptProtoActionRequirement.actionRequirementValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3C8);
}

uint64_t TranscriptProtoActionRequirement.actionRequirementValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3C8);
}

uint64_t (*TranscriptProtoActionRequirement.actionRequirementValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementMessage.systemRequirementMessageValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3C0);
}

uint64_t TranscriptProtoSystemRequirementMessage.systemRequirementMessageValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3C0);
}

uint64_t (*TranscriptProtoSystemRequirementMessage.systemRequirementMessageValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemRequirementProtectedAppRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.init(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, a3);
}

uint64_t sub_2405250AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  a3(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a1;
  a4[1] = a2;
  return result;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.authenticationLevel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3B8);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.authenticationLevel.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3B8);
}

uint64_t (*TranscriptProtoSystemRequirementAuthenticationRequest.authenticationLevel.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.init(authenticationLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, &qword_256FFA3B8, a2);
}

void TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.systemRequirementAuthenticationRequestAuthenticationLevelValues.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.systemRequirementAuthenticationRequestAuthenticationLevelValues.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.systemRequirementAuthenticationRequestAuthenticationLevelValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum.hash(into:)()
{
  return sub_2408E6224();
}

BOOL static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

uint64_t (*TranscriptProtoAppRequirement.appRequirementValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoAppRequirementEnum.hash(into:)()
{
  return sub_2408E6224();
}

BOOL static TranscriptProtoAppRequirementEnum.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t (*TranscriptProtoPermissionRequirement.permissionRequirementValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailure.failure.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3D8);
}

uint64_t TranscriptProtoActionFailure.failure.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3D8);
}

uint64_t (*TranscriptProtoActionFailure.failure.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailure.init(failure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoActionFailureFailure, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionFailure, &qword_256FFA3D8, a2);
}

uint64_t sub_2405252E8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;

  v9 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a5, 1, 1, v9);
  a3(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  return sub_2403C25A0(a1, a5, a4);
}

uint64_t TranscriptProtoActionFailureFailure.actionFailureFailureValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3D0);
}

uint64_t TranscriptProtoActionFailureFailure.actionFailureFailureValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3D0);
}

uint64_t (*TranscriptProtoActionFailureFailure.actionFailureFailureValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionFailureDeveloperDefinedError.localizedString.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionFailureDeveloperDefinedError.domain.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.code.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*TranscriptProtoActionFailureDeveloperDefinedError.code.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.init(localizedString:domain:code:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t (*TranscriptProtoActionSuccess.appLaunched.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionSuccess.didShowInAppResult.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t TranscriptProtoActionSuccess.didShowInAppResult.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*TranscriptProtoActionSuccess.didShowInAppResult.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionSuccess.returnValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoActionSuccess, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoActionSuccess.returnValue.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoActionSuccess, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoActionSuccess.returnValue.modify())()
{
  type metadata accessor for TranscriptProtoActionSuccess(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionSuccess.undoContext.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoActionSuccess, &qword_256FFA3B0, a1);
}

uint64_t TranscriptProtoActionSuccess.undoContext.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoActionSuccess, &qword_256FFA3B0);
}

uint64_t (*TranscriptProtoActionSuccess.undoContext.modify())()
{
  type metadata accessor for TranscriptProtoActionSuccess(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionSuccess.init(returnValue:appLaunched:undoContext:didShowInAppResult:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, _BYTE *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v10 = type metadata accessor for TranscriptProtoActionSuccess(0);
  v11 = (uint64_t)&a5[*(int *)(v10 + 24)];
  v12 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)&a5[*(int *)(v10 + 28)];
  v14 = type metadata accessor for TranscriptProtoUndoContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v11, &qword_256FFA3A8);
  *a5 = a2;
  result = sub_2403C25A0(a3, v13, &qword_256FFA3B0);
  a5[1] = a4;
  return result;
}

uint64_t (*TranscriptProtoUndoContext.token.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUndoContext.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUndoContext.actionDescription.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUndoContext.init(token:bundleIdentifier:actionDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_24052564C(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoContext, a7);
}

uint64_t sub_24052564C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(_QWORD)@<X6>, _QWORD *a8@<X8>)
{
  uint64_t result;

  a7(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  return result;
}

uint64_t (*TranscriptProtoParameterConfirmation.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoParameterConfirmation.parameterIndex.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterConfirmation.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoParameterConfirmation, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoParameterConfirmation.item.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoParameterConfirmation, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoParameterConfirmation.item.modify())()
{
  type metadata accessor for TranscriptProtoParameterConfirmation(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterConfirmation.init(parameterID:parameterIndex:item:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_240527D24(a1, a2, a3, a4, a5, type metadata accessor for TranscriptProtoParameterConfirmation, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFA3A8, a6);
}

uint64_t (*TranscriptProtoParameterDisambiguation.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoParameterDisambiguation.items.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterDisambiguation.parameterIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t TranscriptProtoParameterDisambiguation.parameterIndex.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*TranscriptProtoParameterDisambiguation.parameterIndex.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterDisambiguation.init(parameterID:parameterIndex:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 32) = a4 & 1;
  *(_QWORD *)(a6 + 16) = a5;
  *(_QWORD *)(a6 + 24) = a3;
  return result;
}

uint64_t (*TranscriptProtoValueDisambiguation.items.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoValueDisambiguation.init(items:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoValueDisambiguation, a2);
}

uint64_t TranscriptProtoStatementOutcome.statementOutcomeValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3E0);
}

uint64_t TranscriptProtoStatementOutcome.statementOutcomeValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3E0);
}

uint64_t (*TranscriptProtoStatementOutcome.statementOutcomeValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoParameterNeedsValue.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterNeedsValue.init(parameterID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterNeedsValue, a3);
}

uint64_t (*TranscriptProtoParameterNotAllowed.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoParameterNotAllowed.reason.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterNotAllowed.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoParameterNotAllowed, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoParameterNotAllowed.value.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoParameterNotAllowed, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoParameterNotAllowed.value.modify())()
{
  type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  return nullsub_1;
}

void *static TranscriptProtoParameterNotAllowed.Reason.allCases.getter()
{
  return &unk_2510A6E80;
}

uint64_t sub_240525904()
{
  sub_2404EF66C();
  return sub_2408E5834();
}

void sub_24052593C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6EA8;
}

uint64_t TranscriptProtoParameterNotAllowed.init(parameterID:value:reason:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v9 = *a4;
  v10 = a5 + *(int *)(type metadata accessor for TranscriptProtoParameterNotAllowed(0) + 24);
  v11 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  result = sub_2403C25A0(a3, v10, &qword_256FFA3A8);
  *(_BYTE *)(a5 + 16) = v9;
  return result;
}

uint64_t (*TranscriptProtoParameterCandidatesNotFound.parameterID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterCandidatesNotFound.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoParameterCandidatesNotFound, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.value.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoParameterCandidatesNotFound.value.modify())()
{
  type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterCandidatesNotFound.init(parameterID:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFA3A8, a4);
}

uint64_t (*TranscriptProtoParticipantID.name.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParticipantID.init(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParticipantID, a3);
}

uint64_t TranscriptProtoSpanID.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TranscriptProtoSpanID.value.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptProtoSpanID.value.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSpanID.init(value:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSpanID, a2);
}

uint64_t (*TranscriptProtoPlan.prompt.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPlan.promptResponse.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoPlan.promptResponse.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TranscriptProtoPlan.promptResponse.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPlan.statements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoPlan.statements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*TranscriptProtoPlan.statements.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPlan.overrideID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoPlan.overrideID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TranscriptProtoPlan.overrideID.modify())()
{
  return nullsub_1;
}

void TranscriptProtoPlan.planSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

_BYTE *TranscriptProtoPlan.planSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *result;
  return result;
}

uint64_t (*TranscriptProtoPlan.planSource.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPlan.init(prompt:promptResponse:statements:overrideID:planSource:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v17;
  uint64_t result;

  v17 = *a8;
  type metadata accessor for TranscriptProtoPlan(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = v17;
  return result;
}

uint64_t TranscriptProtoRecoverableError.recoverableErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA398);
}

uint64_t TranscriptProtoRecoverableError.recoverableErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA398);
}

uint64_t (*TranscriptProtoRecoverableError.recoverableErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoRecoverableErrorEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_240525DA4(a1, a2, type metadata accessor for TranscriptProtoPlanGenerationError, &qword_2570010C0, type metadata accessor for TranscriptProtoRecoverableErrorEnum, (uint64_t (*)(char *, uint64_t))_s23LighthouseDataProcessor34TranscriptProtoPlanGenerationErrorV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_240525D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240525EDC(a1, a2, a3, a4, type metadata accessor for TranscriptProtoPlanGenerationError, &qword_2570010C0, type metadata accessor for TranscriptProtoRecoverableErrorEnum, (uint64_t (*)(char *, uint64_t))static TranscriptProtoPlanGenerationError.== infix(_:_:));
}

uint64_t TranscriptProtoPlanGenerationError.planGenerationErrorValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA390);
}

uint64_t TranscriptProtoPlanGenerationError.planGenerationErrorValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA390);
}

uint64_t (*TranscriptProtoPlanGenerationError.planGenerationErrorValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoPlanGenerationErrorEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_240525DA4(a1, a2, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, &qword_2570010A8, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum, (uint64_t (*)(char *, uint64_t))sub_2404D88FC);
}

uint64_t sub_240525DA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v12 = a3(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v18, a5);
  sub_2403AE1A4(a2, v19, a5);
  sub_2403A91CC((uint64_t)v18, (uint64_t)v14, a3);
  LOBYTE(a6) = a6(v14, v19);
  sub_240388AE4(v19, a3);
  sub_240388AE4((uint64_t)v14, a3);
  return a6 & 1;
}

uint64_t sub_240525EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240525EDC(a1, a2, a3, a4, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, &qword_2570010A8, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum, (uint64_t (*)(char *, uint64_t))static TranscriptProtoPlanGenerationModelOutputError.== infix(_:_:));
}

uint64_t sub_240525EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t *a6, uint64_t (*a7)(_QWORD), uint64_t (*a8)(char *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v14 = a5(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v20, a7);
  sub_2403AE1A4(a2, v21, a7);
  sub_2403A91CC((uint64_t)v20, (uint64_t)v16, a5);
  LOBYTE(a8) = a8(v16, v21);
  sub_240388AE4(v21, a5);
  sub_240388AE4((uint64_t)v16, a5);
  return a8 & 1;
}

uint64_t (*TranscriptProtoPlanGenerationModelOutputError.rawModelOutput.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoPlanGenerationModelOutputError.prompt.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoPlanGenerationModelOutputError.errorDescription.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.init(rawModelOutput:prompt:errorDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_24052564C(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, a7);
}

uint64_t TranscriptProtoQueryData.queryDataValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFE948);
}

uint64_t TranscriptProtoQueryData.queryDataValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFE948);
}

uint64_t (*TranscriptProtoQueryData.queryDataValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoStringQuery.searchString.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStringQuery.init(searchString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStringQuery, a3);
}

uint64_t TranscriptProtoPropertyQuery.propertyQueryValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFE960);
}

uint64_t TranscriptProtoPropertyQuery.propertyQueryValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFE960);
}

uint64_t (*TranscriptProtoPropertyQuery.propertyQueryValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoQueryPredicateList.predicates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryPredicateList.init(predicates:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryPredicateList, a2);
}

uint64_t (*TranscriptProtoIdentifierQuery.identifiers.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoIdentifierQuery.init(identifiers:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoIdentifierQuery, a2);
}

uint64_t (*TranscriptProtoQueryPredicate.parameterID.modify())()
{
  return nullsub_1;
}

void TranscriptProtoQueryPredicate.op.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *TranscriptProtoQueryPredicate.op.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TranscriptProtoQueryPredicate.op.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryPredicate.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoQueryPredicate, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoQueryPredicate.value.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoQueryPredicate, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoQueryPredicate.value.modify())()
{
  type metadata accessor for TranscriptProtoQueryPredicate(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryPredicate.init(parameterID:op:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *a3;
  v10 = a5 + *(int *)(type metadata accessor for TranscriptProtoQueryPredicate(0) + 24);
  v11 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v9;
  return sub_2403C25A0(a4, v10, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoQueryResults.candidates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryResults.init(candidates:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryResults, a2);
}

uint64_t (*TranscriptProtoQueryStep.queries.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStep.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoQueryStep, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoQueryStep.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoQueryStep, &qword_256FFA300);
}

uint64_t (*TranscriptProtoQueryStep.statementID.modify())()
{
  type metadata accessor for TranscriptProtoQueryStep(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStep.init(statementID:queries:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoQueryStep, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a3);
}

uint64_t sub_2405262FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v11 = (uint64_t)a6 + *(int *)(a3(0) + 20);
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v11, a5);
  *a6 = a2;
  return result;
}

uint64_t (*TranscriptProtoParameterQuery.dependencies.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterQuery.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoParameterQuery, &qword_256FFAFF8, a1);
}

uint64_t TranscriptProtoParameterQuery.context.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoParameterQuery, &qword_256FFAFF8);
}

uint64_t (*TranscriptProtoParameterQuery.context.modify())()
{
  type metadata accessor for TranscriptProtoParameterQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterQuery.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoParameterQuery, &qword_257001060, a1);
}

uint64_t TranscriptProtoParameterQuery.data.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoParameterQuery, &qword_257001060);
}

uint64_t (*TranscriptProtoParameterQuery.data.modify())()
{
  type metadata accessor for TranscriptProtoParameterQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterQuery.deviceID.getter()
{
  return sub_240526454(type metadata accessor for TranscriptProtoParameterQuery);
}

uint64_t sub_240526454(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TranscriptProtoParameterQuery.deviceID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2405264A0(a1, a2, type metadata accessor for TranscriptProtoParameterQuery);
}

uint64_t sub_2405264A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 28));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoParameterQuery.deviceID.modify())()
{
  type metadata accessor for TranscriptProtoParameterQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameterQuery.init(context:data:dependencies:deviceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Data;
  _QWORD *v17;
  uint64_t result;

  v12 = (int *)type metadata accessor for TranscriptProtoParameterQuery(0);
  v13 = (uint64_t)a6 + v12[5];
  v14 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (uint64_t)a6 + v12[6];
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Data - 8) + 56))(v15, 1, 1, Data);
  v17 = (_QWORD *)((char *)a6 + v12[7]);
  *v17 = 0;
  v17[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v13, &qword_256FFAFF8);
  sub_2403C25A0(a2, v15, &qword_257001060);
  *a6 = a3;
  result = swift_bridgeObjectRelease();
  *v17 = a4;
  v17[1] = a5;
  return result;
}

uint64_t (*TranscriptProtoQueryStepResults.queryResults.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStepResults.rawQueryEventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoQueryStepResults.rawQueryEventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TranscriptProtoQueryStepResults.rawQueryEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStepResults.originStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoQueryStepResults, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoQueryStepResults.originStatementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoQueryStepResults, &qword_256FFA300);
}

uint64_t (*TranscriptProtoQueryStepResults.originStatementID.modify())()
{
  type metadata accessor for TranscriptProtoQueryStepResults(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryStepResults.init(queryResults:originStatementID:rawQueryEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v10 = (uint64_t)a5 + *(int *)(type metadata accessor for TranscriptProtoQueryStepResults(0) + 24);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a5 = a1;
  result = sub_2403C25A0(a2, v10, &qword_256FFA300);
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

uint64_t (*TranscriptProtoResponseDialog.fullPrint.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoResponseDialog.fullSpeak.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoResponseDialog.supportingPrint.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoResponseDialog.supportingSpeak.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseDialog.init(fullPrint:fullSpeak:supportingPrint:supportingSpeak:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoResponseDialog(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t (*TranscriptProtoResponseOutput.visualOutput.modify())()
{
  return nullsub_1;
}

void TranscriptProtoResponseOutput.responseType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *TranscriptProtoResponseOutput.responseType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*TranscriptProtoResponseOutput.responseType.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoResponseOutput.resultStatementIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseOutput.printedDialogOutput.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFA3F8, a1);
}

uint64_t TranscriptProtoResponseOutput.printedDialogOutput.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFA3F8);
}

uint64_t (*TranscriptProtoResponseOutput.printedDialogOutput.modify())()
{
  type metadata accessor for TranscriptProtoResponseOutput(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseOutput.spokenDialogOutput.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFA3F8, a1);
}

uint64_t TranscriptProtoResponseOutput.spokenDialogOutput.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFA3F8);
}

uint64_t (*TranscriptProtoResponseOutput.spokenDialogOutput.modify())()
{
  type metadata accessor for TranscriptProtoResponseOutput(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:responseType:resultStatementIds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;

  v10 = *a4;
  v11 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v12 = a6 + *(int *)(v11 + 28);
  v13 = type metadata accessor for TranscriptProtoDialogType(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v15 = a6 + *(int *)(v11 + 32);
  v14(v15, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a6 = a1;
  sub_2403C25A0(a2, v12, &qword_256FFA3F8);
  result = sub_2403C25A0(a3, v15, &qword_256FFA3F8);
  *(_BYTE *)(a6 + 8) = v10;
  *(_QWORD *)(a6 + 16) = a5;
  return result;
}

uint64_t TranscriptProtoVisualOutput.visualOutputType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFE9F8);
}

uint64_t TranscriptProtoVisualOutput.visualOutputType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFE9F8);
}

uint64_t (*TranscriptProtoVisualOutput.visualOutputType.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoLiveActivityOutputPayload.sessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoLiveActivityOutputPayload.init(sessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityOutputPayload, a3);
}

uint64_t (*TranscriptProtoInAppResponseOutputPayload.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoInAppResponseOutputPayload.init(bundleID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInAppResponseOutputPayload, a3);
}

uint64_t (*TranscriptProtoSystemSnippetOutputPayload.snippetPayload.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.init(snippetPayload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, a3);
}

uint64_t (*TranscriptProtoPluginSnippetOutputPayload.pluginModelData.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoPluginSnippetOutputPayload.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.init(pluginModelData:bundleID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_2405272FC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, a5);
}

uint64_t TranscriptProtoDialogType.dialogFormat.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA3F0);
}

uint64_t TranscriptProtoDialogType.dialogFormat.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA3F0);
}

uint64_t (*TranscriptProtoDialogType.dialogFormat.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoStaticText.text.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStaticText.init(text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStaticText, a3);
}

uint64_t (*TranscriptProtoSonicText.text.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSonicText.init(text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSonicText, a3);
}

uint64_t (*TranscriptProtoGeneratedText.text.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoGeneratedText.init(text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoGeneratedText, a3);
}

uint64_t (*TranscriptProtoResponseManifest.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.dialog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFA408, a1);
}

uint64_t TranscriptProtoResponseManifest.dialog.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFA408);
}

uint64_t (*TranscriptProtoResponseManifest.dialog.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.visual.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFA410, a1);
}

uint64_t TranscriptProtoResponseManifest.visual.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFA410);
}

uint64_t (*TranscriptProtoResponseManifest.visual.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.templateID.getter()
{
  return sub_240526454(type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t TranscriptProtoResponseManifest.templateID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2405264A0(a1, a2, type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t (*TranscriptProtoResponseManifest.templateID.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.templateLocation.getter()
{
  return sub_240526CB4(type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t sub_240526CB4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t TranscriptProtoResponseManifest.templateLocation.setter(uint64_t a1, uint64_t a2)
{
  return sub_240526D00(a1, a2, type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t sub_240526D00(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 32));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoResponseManifest.templateLocation.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.useTemplateAsFallback.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TranscriptProtoResponseManifest(0) + 36));
}

uint64_t TranscriptProtoResponseManifest.useTemplateAsFallback.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*TranscriptProtoResponseManifest.useTemplateAsFallback.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.dialogPresentationHint.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t TranscriptProtoResponseManifest.dialogPresentationHint.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*TranscriptProtoResponseManifest.dialogPresentationHint.modify())()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoResponseManifest.init(parameters:dialog:visual:templateID:templateLocation:useTemplateAsFallback:dialogPresentationHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, char *a10)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v26;

  v26 = *a10;
  v13 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v14 = (uint64_t)a9 + v13[5];
  v15 = type metadata accessor for TranscriptProtoResponseDialog(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (uint64_t)a9 + v13[6];
  v17 = type metadata accessor for TranscriptProtoResponseVisual(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (_QWORD *)((char *)a9 + v13[7]);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)((char *)a9 + v13[8]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v13[9];
  *((_BYTE *)a9 + v20) = 2;
  v21 = v13[10];
  *((_BYTE *)a9 + v21) = 2;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a9 = a1;
  sub_2403C25A0(a2, v14, &qword_256FFA408);
  sub_2403C25A0(a3, v16, &qword_256FFA410);
  swift_bridgeObjectRelease();
  *v18 = a4;
  v18[1] = a5;
  result = swift_bridgeObjectRelease();
  *v19 = a6;
  v19[1] = a7;
  *((_BYTE *)a9 + v20) = a8;
  *((_BYTE *)a9 + v21) = v26;
  return result;
}

uint64_t (*TranscriptProtoResponseParameter.key.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_2403C2410(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t TranscriptProtoResponseParameter.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_240527018(a1, a2, sub_2403C2424);
}

uint64_t sub_240527018(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t result;

  result = a3(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return result;
}

uint64_t (*TranscriptProtoResponseParameter.value.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoResponseParameter.type.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t TranscriptProtoResponseParameter.required.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*TranscriptProtoResponseParameter.required.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.format.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptProtoResponseParameter.format.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*TranscriptProtoResponseParameter.format.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.profanityFilter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t TranscriptProtoResponseParameter.profanityFilter.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*TranscriptProtoResponseParameter.profanityFilter.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseParameter.init(key:value:type:required:format:profanityFilter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoResponseParameter(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  return result;
}

uint64_t (*TranscriptProtoResponseVisual.views.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseVisual.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoResponseVisual.labels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*TranscriptProtoResponseVisual.labels.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResponseVisual.init(views:labels:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405279B8(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseVisual, a3);
}

uint64_t TranscriptProtoUIType.uitype.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFEA88);
}

uint64_t TranscriptProtoUIType.uitype.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFEA88);
}

uint64_t (*TranscriptProtoUIType.uitype.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUILabel.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_257000FA8);
}

uint64_t TranscriptProtoUILabel.label.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_257000FA8);
}

uint64_t (*TranscriptProtoUILabel.label.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUIConfirmationLabel.affirmative.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUIConfirmationLabel.negative.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUIConfirmationLabel.init(affirmative:negative:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_2405272FC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUIConfirmationLabel, a5);
}

uint64_t sub_2405272FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(_QWORD)@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;

  a5(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  return result;
}

uint64_t (*TranscriptProtoArchiveViewPayload.viewData.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoArchiveViewPayload.containerBundleID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoArchiveViewPayload.targetBundleID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoArchiveViewPayload.init(viewData:containerBundleID:targetBundleID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t (*TranscriptProtoLiveActivityPayload.sessionID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoLiveActivityPayload.init(sessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityPayload, a3);
}

uint64_t (*TranscriptProtoPluginSnippetPayload.pluginModelData.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoPluginSnippetPayload.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPluginSnippetPayload.init(pluginModelData:bundleID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_2405272FC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPluginSnippetPayload, a5);
}

uint64_t (*TranscriptProtoControlPayload.controlMetadata.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoControlPayload.init(controlMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoControlPayload, a3);
}

uint64_t (*TranscriptProtoSystemPromptResolution.systemResponseEventID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemPromptResolution.actionEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolution.userAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA330, a1);
}

uint64_t TranscriptProtoSystemPromptResolution.userAction.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA330);
}

uint64_t (*TranscriptProtoSystemPromptResolution.userAction.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolution.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoSystemPromptResolution.statementID.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA300);
}

uint64_t (*TranscriptProtoSystemPromptResolution.statementID.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolution.input.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA340, a1);
}

uint64_t TranscriptProtoSystemPromptResolution.input.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFA340);
}

uint64_t (*TranscriptProtoSystemPromptResolution.input.modify())()
{
  type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolution.init(actionEventID:userAction:systemResponseEventID:statementID:input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v14 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v15 = (uint64_t)a8 + v14[6];
  v16 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (uint64_t)a8 + v14[7];
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (uint64_t)a8 + v14[8];
  v20 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a8[2] = a1;
  a8[3] = a2;
  sub_2403C25A0(a3, v15, &qword_256FFA330);
  *a8 = a4;
  a8[1] = a5;
  sub_2403C25A0(a6, v17, &qword_256FFA300);
  return sub_2403C25A0(a7, v19, &qword_256FFA340);
}

uint64_t TranscriptProtoSystemPromptResolutionInput.systemPromptResolutionInputValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA338);
}

uint64_t TranscriptProtoSystemPromptResolutionInput.systemPromptResolutionInputValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA338);
}

uint64_t (*TranscriptProtoSystemPromptResolutionInput.systemPromptResolutionInputValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionResolverRequest.toolID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoActionResolverRequest.unresolvedParameterSets.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.isClientAction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t TranscriptProtoActionResolverRequest.isClientAction.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*TranscriptProtoActionResolverRequest.isClientAction.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.isConfirmed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t TranscriptProtoActionResolverRequest.isConfirmed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*TranscriptProtoActionResolverRequest.isConfirmed.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.isAuthenticated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t TranscriptProtoActionResolverRequest.isAuthenticated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 26) = result;
  return result;
}

uint64_t (*TranscriptProtoActionResolverRequest.isAuthenticated.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.resolvedParameters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2405248B4(type metadata accessor for TranscriptProtoActionResolverRequest, &qword_256FFA3A0, a1);
}

uint64_t TranscriptProtoActionResolverRequest.resolvedParameters.setter(uint64_t a1)
{
  return sub_240524910(a1, type metadata accessor for TranscriptProtoActionResolverRequest, &qword_256FFA3A0);
}

uint64_t (*TranscriptProtoActionResolverRequest.resolvedParameters.modify())()
{
  type metadata accessor for TranscriptProtoActionResolverRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 40), a1, &qword_256FFA300);
}

uint64_t TranscriptProtoActionResolverRequest.statementID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 40), &qword_256FFA300);
}

uint64_t (*TranscriptProtoActionResolverRequest.statementID.modify())()
{
  type metadata accessor for TranscriptProtoActionResolverRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoActionResolverRequest.init(toolID:resolvedParameters:unresolvedParameterSets:isClientAction:isConfirmed:statementID:isAuthenticated:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v16 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  v17 = a9 + *(int *)(v16 + 36);
  v18 = type metadata accessor for TranscriptProtoParameterSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = a9 + *(int *)(v16 + 40);
  v20 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  sub_2403C25A0(a3, v17, &qword_256FFA3A0);
  *(_QWORD *)(a9 + 16) = a4;
  *(_BYTE *)(a9 + 24) = a5;
  *(_BYTE *)(a9 + 25) = a6;
  result = sub_2403C25A0(a7, v19, &qword_256FFA300);
  *(_BYTE *)(a9 + 26) = a8;
  return result;
}

uint64_t (*TranscriptProtoContextRetrieved.requiredContext.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoContextRetrieved.utteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoContextRetrieved.init(requiredContext:utteranceContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405279B8(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoContextRetrieved, a3);
}

uint64_t sub_2405279B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  a3(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a1;
  a4[1] = a2;
  return result;
}

uint64_t (*TranscriptProtoRetrievedContextStatement.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRetrievedContextStatement.retrievedContext.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoRetrievedContextStatement, &qword_257000F68, a1);
}

uint64_t TranscriptProtoRetrievedContextStatement.retrievedContext.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoRetrievedContextStatement, &qword_257000F68);
}

uint64_t (*TranscriptProtoRetrievedContextStatement.retrievedContext.modify())()
{
  type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoRetrievedContextStatement.init(statementID:retrievedContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  v7 = a3 + *(int *)(type metadata accessor for TranscriptProtoRetrievedContextStatement(0) + 20);
  v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a3, &qword_256FFA300);
  return sub_2403C25A0(a2, v7, &qword_257000F68);
}

uint64_t (*TranscriptProtoDynamicEnumerationEntityStatement.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.dynamicEnumerationEntity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, &qword_257000F50, a1);
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.dynamicEnumerationEntity.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, &qword_257000F50);
}

uint64_t (*TranscriptProtoDynamicEnumerationEntityStatement.dynamicEnumerationEntity.modify())()
{
  type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.init(statementID:dynamicEnumerationEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  v7 = a3 + *(int *)(type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0) + 20);
  v8 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a3, &qword_256FFA300);
  return sub_2403C25A0(a2, v7, &qword_257000F50);
}

uint64_t (*TranscriptProtoSafetyModeException.clientQueryID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSafetyModeException.init(clientQueryID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSafetyModeException, a3);
}

uint64_t (*TranscriptProtoParameterSet.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameterSet.init(parameters:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterSet, a2);
}

uint64_t (*TranscriptProtoParameter.key.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameter.collectionIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TranscriptProtoParameter.collectionIndex.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*TranscriptProtoParameter.collectionIndex.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoParameter.candidate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoParameter, &qword_256FFA7B8, a1);
}

uint64_t TranscriptProtoParameter.candidate.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoParameter, &qword_256FFA7B8);
}

uint64_t (*TranscriptProtoParameter.candidate.modify())()
{
  type metadata accessor for TranscriptProtoParameter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoParameter.init(key:collectionIndex:candidate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_240527D24(a1, a2, a3, a4, a5, type metadata accessor for TranscriptProtoParameter, type metadata accessor for TranscriptProtoCandidate, &qword_256FFA7B8, a6);
}

uint64_t sub_240527D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t (*a7)(_QWORD)@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  uint64_t v18;

  v17 = a9 + *(int *)(a6(0) + 24);
  v18 = a7(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  return sub_2403C25A0(a5, v17, a8);
}

uint64_t (*TranscriptProtoClientInitiatedClientAction.toolID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoClientInitiatedClientAction.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientInitiatedClientAction.init(toolID:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoClientInitiatedClientAction, a4);
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.systemPromptResolutionUserActionValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA328);
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.systemPromptResolutionUserActionValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA328);
}

uint64_t (*TranscriptProtoSystemPromptResolutionUserAction.systemPromptResolutionUserActionValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.isRequirementSatisfied.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.isRequirementSatisfied.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptProtoSystemPromptResolutionRequirementResolution.isRequirementSatisfied.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.init(isRequirementSatisfied:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = a1;
  return result;
}

uint64_t (*TranscriptProtoVariableSetter.dependencies.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoVariableSetter.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoVariableSetter, &qword_256FFA3A8, a1);
}

uint64_t TranscriptProtoVariableSetter.value.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoVariableSetter, &qword_256FFA3A8);
}

uint64_t (*TranscriptProtoVariableSetter.value.modify())()
{
  type metadata accessor for TranscriptProtoVariableSetter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoVariableSetter.init(value:dependencies:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoVariableSetter, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFA3A8, a3);
}

uint64_t (*TranscriptProtoVariableStep.setters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoVariableStep.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoVariableStep, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoVariableStep.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoVariableStep, &qword_256FFA300);
}

uint64_t (*TranscriptProtoVariableStep.statementID.modify())()
{
  type metadata accessor for TranscriptProtoVariableStep(0);
  return nullsub_1;
}

uint64_t TranscriptProtoVariableStep.init(setters:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = (uint64_t)a3 + *(int *)(type metadata accessor for TranscriptProtoVariableStep(0) + 20);
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = a1;
  return sub_2403C25A0(a2, v6, &qword_256FFA300);
}

uint64_t (*TranscriptProtoASTFlatExprCallVariant.fn.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatExprCallVariant.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprCallVariant.init(fn:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprCallVariant, a4);
}

uint64_t (*TranscriptProtoASTFlatExprSayVariant.rawEventIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprSayVariant.init(rawEventIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSayVariant, a2);
}

uint64_t (*TranscriptProtoASTFlatExprPickVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPickVariant.pickType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatExprPickVariant, &qword_257000D08, a1);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.pickType.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, &qword_257000D08);
}

uint64_t (*TranscriptProtoASTFlatExprPickVariant.pickType.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPickVariant.init(rawEventID:pickType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, &qword_257000D08, a4);
}

uint64_t (*TranscriptProtoASTFlatExprConfirmVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, a3);
}

uint64_t (*TranscriptProtoASTFlatExprUndoVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, a3);
}

uint64_t (*TranscriptProtoASTFlatExprRejectVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, a3);
}

uint64_t (*TranscriptProtoASTFlatExprCancelVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, a3);
}

void TranscriptProtoASTPickType.astpickTypeValues.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t TranscriptProtoASTPickType.astpickTypeValues.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*TranscriptProtoASTPickType.astpickTypeValues.modify())()
{
  return nullsub_1;
}

uint64_t static TranscriptProtoAstpickTypeEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = ((*(_QWORD *)a1 & 1) == 0) ^ *(_QWORD *)a2;
  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
    v2 = 0;
  if (*(_BYTE *)(a1 + 8) != 1)
    v2 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~*(_BYTE *)(a2 + 8);
  return v2 & 1;
}

uint64_t sub_2405281D8(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = ((*(_QWORD *)a1 & 1) == 0) ^ *(_QWORD *)a2;
  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
    v2 = 0;
  if (*(_BYTE *)(a1 + 8) != 1)
    v2 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~*(_BYTE *)(a2 + 8);
  return v2 & 1;
}

uint64_t (*TranscriptProtoASTFlatExprSearchVariant.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatExprSearchVariant.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatExprSearchVariant.pickOne.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.init(query:isLowConfidenceKnowledge:pickOne:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_24052911C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, a5);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateParametersVariant.updates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.init(updates:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, a2);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateVariant.path.modify())()
{
  return nullsub_1;
}

void TranscriptProtoASTFlatExprUpdateVariant.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *TranscriptProtoASTFlatExprUpdateVariant.kind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*TranscriptProtoASTFlatExprUpdateVariant.kind.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.lhs.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateVariant.lhs.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.value.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprUpdateVariant.value.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.init(lhs:path:value:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t updated;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t result;

  v9 = *a4;
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  v11 = a5 + *(int *)(updated + 24);
  v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v14 = a5 + *(int *)(updated + 28);
  v13(v14, 1, 1, v12);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v11, &qword_257000DF8);
  *(_QWORD *)a5 = a2;
  result = sub_2403C25A0(a3, v14, &qword_257000DF8);
  *(_BYTE *)(a5 + 8) = v9;
  return result;
}

uint64_t (*TranscriptProtoASTFlatExprPickOneVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, a3);
}

uint64_t (*TranscriptProtoASTFlatExprResolveToolVariant.toolIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.init(toolIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, a2);
}

uint64_t (*TranscriptProtoASTFlatExprDotVariant.index.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprDotVariant.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatExprDotVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.lhs.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprDotVariant.lhs.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprDotVariant.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240528D1C(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_257000DF8, a4);
}

uint64_t (*TranscriptProtoASTFlatAssignExpr.name.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatAssignExpr.expr.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatAssignExpr, &qword_257000F20, a1);
}

uint64_t TranscriptProtoASTFlatAssignExpr.expr.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatAssignExpr, &qword_257000F20);
}

uint64_t (*TranscriptProtoASTFlatAssignExpr.expr.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatAssignExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatAssignExpr.init(name:expr:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatAssignExpr, type metadata accessor for TranscriptProtoASTFlatExpr, &qword_257000F20, a4);
}

uint64_t TranscriptProtoASTFlatExpr.astflatExprValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFEC20);
}

uint64_t TranscriptProtoASTFlatExpr.astflatExprValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFEC20);
}

uint64_t (*TranscriptProtoASTFlatExpr.astflatExprValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValue.astflatValueValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFEC30);
}

uint64_t TranscriptProtoASTFlatValue.astflatValueValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFEC30);
}

uint64_t (*TranscriptProtoASTFlatValue.astflatValueValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTFlatValueArrayVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, a2);
}

uint64_t (*TranscriptProtoASTFlatValueDictVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatValueDictVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValueDictVariant, a2);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_257000DF8);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.lhs.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprIndexVariant.lhs.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.index.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.index.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprIndexVariant.index.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240528708(a1, a2, type metadata accessor for TranscriptProtoASTFlatValue, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, &qword_257000DF8, a3);
}

uint64_t sub_240528708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v11 = a3(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(a6, 1, 1, v11);
  v13 = a6 + *(int *)(a4(0) + 20);
  v12(v13, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a6, a5);
  return sub_2403C25A0(a2, v13, a5);
}

uint64_t (*TranscriptProtoASTFlatExprInfixVariant.first.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.second.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.second.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprInfixVariant.second.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.third.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.third.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprInfixVariant.third.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.init(first:second:third:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_240528AB0(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_257000DF8, a4);
}

uint64_t TranscriptProtoExpression.expressionValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFCF98);
}

uint64_t TranscriptProtoExpression.expressionValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFCF98);
}

uint64_t (*TranscriptProtoExpression.expressionValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoValueExpression.valueExpressionValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFEC68);
}

uint64_t TranscriptProtoValueExpression.valueExpressionValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFEC68);
}

uint64_t (*TranscriptProtoValueExpression.valueExpressionValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoValueExpressionArrayVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoValueExpressionArrayVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoValueExpressionArrayVariant, a2);
}

uint64_t (*TranscriptProtoPrefixExpression.prefixOp.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPrefixExpression.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoPrefixExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoPrefixExpression.value.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoPrefixExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoPrefixExpression.value.modify())()
{
  type metadata accessor for TranscriptProtoPrefixExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPrefixExpression.init(prefixOp:value:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_240528C04(a1, a2, type metadata accessor for TranscriptProtoPrefixExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a3);
}

uint64_t (*TranscriptProtoInfixExpression.infixOp.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoInfixExpression.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoInfixExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoInfixExpression.lhs.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoInfixExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoInfixExpression.lhs.modify())()
{
  type metadata accessor for TranscriptProtoInfixExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInfixExpression.rhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoInfixExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoInfixExpression.rhs.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoInfixExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoInfixExpression.rhs.modify())()
{
  type metadata accessor for TranscriptProtoInfixExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInfixExpression.init(infixOp:lhs:rhs:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_240528AB0(a1, a2, a3, type metadata accessor for TranscriptProtoInfixExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a4);
}

uint64_t sub_240528AB0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, _BYTE *a7@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v12 = *a1;
  v13 = a4(0);
  v14 = (uint64_t)&a7[*(int *)(v13 + 20)];
  v15 = a5(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)&a7[*(int *)(v13 + 24)];
  v16(v17, 1, 1, v15);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a7 = v12;
  sub_2403C25A0(a2, v14, a6);
  return sub_2403C25A0(a3, v17, a6);
}

uint64_t (*TranscriptProtoASTFlatExprPrefixVariant.first.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.second.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, &qword_257000DF8, a1);
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.second.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, &qword_257000DF8);
}

uint64_t (*TranscriptProtoASTFlatExprPrefixVariant.second.modify())()
{
  type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.init(first:second:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_240528C04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_257000DF8, a3);
}

uint64_t sub_240528C04@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, _BYTE *a6@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  v11 = (uint64_t)&a6[*(int *)(a3(0) + 20)];
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = v10;
  return sub_2403C25A0(a2, v11, a5);
}

uint64_t (*TranscriptProtoDotExpression.index.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoDotExpression.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoDotExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoDotExpression.lhs.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoDotExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoDotExpression.lhs.modify())()
{
  type metadata accessor for TranscriptProtoDotExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDotExpression.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240528D1C(a1, a2, a3, type metadata accessor for TranscriptProtoDotExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a4);
}

uint64_t sub_240528D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v13 = (uint64_t)a7 + *(int *)(a4(0) + 20);
  v14 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v13, a6);
  *a7 = a2;
  a7[1] = a3;
  return result;
}

uint64_t (*TranscriptProtoIndexExpression.lhs.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoIndexExpression.index.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoIndexExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoIndexExpression.index.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoIndexExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoIndexExpression.index.modify())()
{
  type metadata accessor for TranscriptProtoIndexExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoIndexExpression.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240528708(a1, a2, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoIndexExpression, &qword_256FFA300, a3);
}

uint64_t (*TranscriptProtoUpdateParametersExpression.updates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParametersExpression.callStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoUpdateParametersExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoUpdateParametersExpression.callStatementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoUpdateParametersExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoUpdateParametersExpression.callStatementID.modify())()
{
  type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParametersExpression.init(callStatementID:updates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoUpdateParametersExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a3);
}

uint64_t (*TranscriptProtoUpdateParameterExpression_UpdateParameter.parameterID.modify())()
{
  return nullsub_1;
}

void TranscriptProtoUpdateParameterExpression_UpdateParameter.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *TranscriptProtoUpdateParameterExpression_UpdateParameter.kind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TranscriptProtoUpdateParameterExpression_UpdateParameter.kind.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.value.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, &qword_256FFA300);
}

uint64_t (*TranscriptProtoUpdateParameterExpression_UpdateParameter.value.modify())()
{
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.init(parameterID:kind:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *a3;
  v10 = a5 + *(int *)(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0) + 24);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v9;
  return sub_2403C25A0(a4, v10, &qword_256FFA300);
}

uint64_t (*TranscriptProtoCallExpression.fn.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoCallExpression.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoCallExpression.init(fn:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCallExpression, a4);
}

uint64_t (*TranscriptProtoSayExpression.statementIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSayExpression.init(statementIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSayExpression, a2);
}

uint64_t (*TranscriptProtoPickExpression.index.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPickExpression.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoPickExpression, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoPickExpression.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoPickExpression, &qword_256FFA300);
}

uint64_t (*TranscriptProtoPickExpression.statementID.modify())()
{
  type metadata accessor for TranscriptProtoPickExpression(0);
  return nullsub_1;
}

uint64_t TranscriptProtoPickExpression.init(statementID:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoPickExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a3);
}

uint64_t (*TranscriptProtoConfirmExpression.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoConfirmExpression.init(statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoConfirmExpression, &qword_256FFA300, a2);
}

uint64_t (*TranscriptProtoSearchExpression.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSearchExpression.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSearchExpression.pickOne.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t TranscriptProtoSearchExpression.pickOne.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*TranscriptProtoSearchExpression.pickOne.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSearchExpression.init(query:isLowConfidenceKnowledge:pickOne:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_24052911C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSearchExpression, a5);
}

uint64_t sub_24052911C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, void (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t result;

  a5(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 17) = a4;
  return result;
}

uint64_t (*TranscriptProtoPickOneExpression.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoPickOneExpression.init(statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPickOneExpression, &qword_256FFA300, a2);
}

uint64_t (*TranscriptProtoResolveToolExpression.toolIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoResolveToolExpression.init(toolIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResolveToolExpression, a2);
}

uint64_t TranscriptProtoUndoExpression.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA300);
}

uint64_t TranscriptProtoUndoExpression.statementID.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA300);
}

uint64_t (*TranscriptProtoUndoExpression.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUndoExpression.init(statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoExpression, &qword_256FFA300, a2);
}

uint64_t (*TranscriptProtoRejectExpression.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoRejectExpression.init(statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRejectExpression, &qword_256FFA300, a2);
}

uint64_t (*TranscriptProtoCancelExpression.statementID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoCancelExpression.init(statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2405252E8(a1, type metadata accessor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCancelExpression, &qword_256FFA300, a2);
}

uint64_t (*TranscriptProtoASTProgram.stmts.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTProgram.init(stmts:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTProgram, a2);
}

uint64_t TranscriptProtoASTStmt.aststmtValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_2404F9F70(v2);
}

uint64_t TranscriptProtoASTStmt.aststmtValues.setter(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = sub_2404F9F88(*v1);
  *v1 = v2;
  return result;
}

uint64_t (*TranscriptProtoASTStmt.aststmtValues.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTIfStmt.condition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_257000CF8);
}

uint64_t TranscriptProtoASTIfStmt.condition.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTIfStmt.condition.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTIfStmt.thenBlock.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTIfStmt, &qword_257000DD8, a1);
}

uint64_t TranscriptProtoASTIfStmt.thenBlock.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTIfStmt, &qword_257000DD8);
}

uint64_t (*TranscriptProtoASTIfStmt.thenBlock.modify())()
{
  type metadata accessor for TranscriptProtoASTIfStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTIfStmt.elseBlock.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoASTIfStmt, &qword_257000DD8, a1);
}

uint64_t TranscriptProtoASTIfStmt.elseBlock.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoASTIfStmt, &qword_257000DD8);
}

uint64_t (*TranscriptProtoASTIfStmt.elseBlock.modify())()
{
  type metadata accessor for TranscriptProtoASTIfStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTIfStmt.init(condition:thenBlock:elseBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = a4 + *(int *)(v9 + 24);
  v12(v13, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a4, &qword_257000CF8);
  sub_2403C25A0(a2, v10, &qword_257000DD8);
  return sub_2403C25A0(a3, v13, &qword_257000DD8);
}

uint64_t (*TranscriptProtoASTForInStmt.elementIdent.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTForInStmt.iterable.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTForInStmt, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTForInStmt.iterable.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTForInStmt, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTForInStmt.iterable.modify())()
{
  type metadata accessor for TranscriptProtoASTForInStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTForInStmt.block.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoASTForInStmt, &qword_257000DD8, a1);
}

uint64_t TranscriptProtoASTForInStmt.block.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoASTForInStmt, &qword_257000DD8);
}

uint64_t (*TranscriptProtoASTForInStmt.block.modify())()
{
  type metadata accessor for TranscriptProtoASTForInStmt(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTForInStmt.init(elementIdent:iterable:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  v12 = type metadata accessor for TranscriptProtoASTExpr(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)a5 + *(int *)(v10 + 24);
  v14 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a5 = a1;
  a5[1] = a2;
  sub_2403C25A0(a3, v11, &qword_257000CF8);
  return sub_2403C25A0(a4, v13, &qword_257000DD8);
}

uint64_t (*TranscriptProtoASTBlockStmt.stmts.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTBlockStmt.init(stmts:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTBlockStmt, a2);
}

uint64_t TranscriptProtoASTLiteral.astliteralValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFED88);
}

uint64_t TranscriptProtoASTLiteral.astliteralValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFED88);
}

uint64_t (*TranscriptProtoASTLiteral.astliteralValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTLiteralArrayVariant.exprs.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTLiteralArrayVariant.init(exprs:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteralArrayVariant, a2);
}

uint64_t (*TranscriptProtoASTLiteralDictVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTLiteralDictVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteralDictVariant, a2);
}

uint64_t TranscriptProtoASTExpr.astexprValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_2404F9F14(v2);
}

uint64_t TranscriptProtoASTExpr.astexprValues.setter(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = sub_2404F9F30(*v1);
  *v1 = v2;
  return result;
}

uint64_t (*TranscriptProtoASTExpr.astexprValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprPrefixVariant.first.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPrefixVariant.second.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprPrefixVariant, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTExprPrefixVariant.second.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprPrefixVariant, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTExprPrefixVariant.second.modify())()
{
  type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPrefixVariant.init(first:second:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_240528C04(a1, a2, type metadata accessor for TranscriptProtoASTExprPrefixVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_257000CF8, a3);
}

uint64_t (*TranscriptProtoASTExprInfixVariant.first.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprInfixVariant.second.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTExprInfixVariant.second.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTExprInfixVariant.second.modify())()
{
  type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprInfixVariant.third.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTExprInfixVariant.third.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTExprInfixVariant.third.modify())()
{
  type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprInfixVariant.init(first:second:third:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_240528AB0(a1, a2, a3, type metadata accessor for TranscriptProtoASTExprInfixVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_257000CF8, a4);
}

uint64_t (*TranscriptProtoASTExprDotVariant.index.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprDotVariant.lhs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprDotVariant, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTExprDotVariant.lhs.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprDotVariant, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTExprDotVariant.lhs.modify())()
{
  type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprDotVariant.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240528D1C(a1, a2, a3, type metadata accessor for TranscriptProtoASTExprDotVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_257000CF8, a4);
}

uint64_t (*TranscriptProtoASTExprIndexVariant.lhs.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprIndexVariant.index.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprIndexVariant, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTExprIndexVariant.index.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprIndexVariant, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTExprIndexVariant.index.modify())()
{
  type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprIndexVariant.init(lhs:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240528708(a1, a2, type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTExprIndexVariant, &qword_257000CF8, a3);
}

uint64_t (*TranscriptProtoASTExprCallVariant.fn.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprCallVariant.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprCallVariant.init(fn:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240524DD4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprCallVariant, a4);
}

uint64_t (*TranscriptProtoASTExprSayVariant.rawEventIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprSayVariant.init(rawEventIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSayVariant, a2);
}

uint64_t (*TranscriptProtoASTExprPickVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPickVariant.pickType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprPickVariant, &qword_257000D08, a1);
}

uint64_t TranscriptProtoASTExprPickVariant.pickType.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprPickVariant, &qword_257000D08);
}

uint64_t (*TranscriptProtoASTExprPickVariant.pickType.modify())()
{
  type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPickVariant.init(rawEventID:pickType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoASTExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, &qword_257000D08, a4);
}

uint64_t (*TranscriptProtoASTExprConfirmVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprConfirmVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprConfirmVariant, a3);
}

uint64_t (*TranscriptProtoASTExprUndoVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprUndoVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprUndoVariant, a3);
}

uint64_t (*TranscriptProtoASTExprCancelVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprCancelVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprCancelVariant, a3);
}

uint64_t (*TranscriptProtoASTExprSearchVariant.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprSearchVariant.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoASTExprSearchVariant.pickOne.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprSearchVariant.init(query:isLowConfidenceKnowledge:pickOne:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_24052911C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSearchVariant, a5);
}

uint64_t (*TranscriptProtoASTExprPickOneVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprPickOneVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPickOneVariant, a3);
}

uint64_t (*TranscriptProtoASTExprRejectVariant.rawEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprRejectVariant.init(rawEventID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405250AC(a1, a2, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprRejectVariant, a3);
}

uint64_t (*TranscriptProtoASTExprResolveToolVariant.toolIds.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprResolveToolVariant.init(toolIds:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprResolveToolVariant, a2);
}

uint64_t (*TranscriptProtoASTExprUpdateParametersVariant.parameters.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, &qword_256FFA300);
}

uint64_t (*TranscriptProtoASTExprUpdateParametersVariant.statementID.modify())()
{
  type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.init(statementID:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_2405262FC(a1, a2, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, type metadata accessor for TranscriptProtoStatementID, &qword_256FFA300, a3);
}

void TranscriptProtoASTUpdateExpr.kind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TranscriptProtoASTUpdateExpr.kind.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TranscriptProtoASTUpdateExpr.kind.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoASTUpdateExpr.expr.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoASTUpdateExpr, &qword_257000CF8, a1);
}

uint64_t TranscriptProtoASTUpdateExpr.expr.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoASTUpdateExpr, &qword_257000CF8);
}

uint64_t (*TranscriptProtoASTUpdateExpr.expr.modify())()
{
  type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  return nullsub_1;
}

uint64_t TranscriptProtoASTUpdateExpr.init(kind:expr:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = (uint64_t)&a3[*(int *)(type metadata accessor for TranscriptProtoASTUpdateExpr(0) + 20)];
  v7 = type metadata accessor for TranscriptProtoASTExpr(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = v5;
  return sub_2403C25A0(a2, v6, &qword_257000CF8);
}

uint64_t TranscriptProtoToolParameterValue.toolParameterValueValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFEE58);
}

uint64_t TranscriptProtoToolParameterValue.toolParameterValueValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFEE58);
}

uint64_t (*TranscriptProtoToolParameterValue.toolParameterValueValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoEntitySpanMatchResult.entities.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoEntitySpanMatchResult.init(entities:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoEntitySpanMatchResult, a2);
}

uint64_t (*TranscriptProtoToolRetrievalResponse.originalSubQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoToolRetrievalResponse.rewrittenQuery.modify())()
{
  return nullsub_1;
}

float TranscriptProtoToolRetrievalResponse.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void TranscriptProtoToolRetrievalResponse.confidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*TranscriptProtoToolRetrievalResponse.confidence.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoToolRetrievalResponse.retrievedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoToolRetrievalResponse.retrievedTools.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*TranscriptProtoToolRetrievalResponse.retrievedTools.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoToolRetrievalResponse.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptProtoToolRetrievalResponse.types.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*TranscriptProtoToolRetrievalResponse.types.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoToolRetrievalResponse.init(originalSubQuery:rewrittenQuery:confidence:retrievedTools:types:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, float a8@<S0>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(float *)(a7 + 32) = a8;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t (*TranscriptProtoSystemResponse.toolID.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemResponse.interpretedStatementResults.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoSystemResponse.actionEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.outcome.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA3E8, a1);
}

uint64_t TranscriptProtoSystemResponse.outcome.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA3E8);
}

uint64_t (*TranscriptProtoSystemResponse.outcome.modify())()
{
  type metadata accessor for TranscriptProtoSystemResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.responseOutput.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA400, a1);
}

uint64_t TranscriptProtoSystemResponse.responseOutput.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA400);
}

uint64_t (*TranscriptProtoSystemResponse.responseOutput.modify())()
{
  type metadata accessor for TranscriptProtoSystemResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2405248B4(type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoSystemResponse.statementID.setter(uint64_t a1)
{
  return sub_240524910(a1, type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFA300);
}

uint64_t (*TranscriptProtoSystemResponse.statementID.modify())()
{
  type metadata accessor for TranscriptProtoSystemResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.clientQueryID.getter()
{
  return sub_2403BD798(type metadata accessor for TranscriptProtoSystemResponse);
}

uint64_t TranscriptProtoSystemResponse.clientQueryID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2403BD7E4(a1, a2, type metadata accessor for TranscriptProtoSystemResponse);
}

uint64_t (*TranscriptProtoSystemResponse.clientQueryID.modify())()
{
  type metadata accessor for TranscriptProtoSystemResponse(0);
  return nullsub_1;
}

uint64_t TranscriptProtoSystemResponse.init(actionEventID:toolID:outcome:responseOutput:statementID:clientQueryID:interpretedStatementResults:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v16 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
  v17 = (uint64_t)a9 + v16[7];
  v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (uint64_t)a9 + v16[8];
  v20 = type metadata accessor for TranscriptProtoResponseOutput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = (uint64_t)a9 + v16[9];
  v22 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = (_QWORD *)((char *)a9 + v16[10]);
  *v23 = 0;
  v23[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a9[3] = a1;
  a9[4] = a2;
  *a9 = a3;
  a9[1] = a4;
  sub_2403C25A0(a5, v17, &qword_256FFA3E8);
  sub_2403C25A0(a6, v19, &qword_256FFA400);
  sub_2403C25A0(a7, v21, &qword_256FFA300);
  result = swift_bridgeObjectRelease();
  *v23 = a8;
  v23[1] = a10;
  a9[2] = a11;
  return result;
}

uint64_t (*TranscriptProtoInterpretedStatementResult.outcome.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.resultStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoInterpretedStatementResult.resultStatementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.resultStatementID.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.originProgramStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoInterpretedStatementResult.originProgramStatementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.originProgramStatementID.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.actionEventID.getter()
{
  return sub_240526454(type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t TranscriptProtoInterpretedStatementResult.actionEventID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2405264A0(a1, a2, type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.actionEventID.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.toolID.getter()
{
  return sub_240526CB4(type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t TranscriptProtoInterpretedStatementResult.toolID.setter(uint64_t a1, uint64_t a2)
{
  return sub_240526D00(a1, a2, type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.toolID.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.originTaskStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2405248B4(type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoInterpretedStatementResult.originTaskStatementID.setter(uint64_t a1)
{
  return sub_240524910(a1, type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoInterpretedStatementResult.originTaskStatementID.modify())()
{
  type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoInterpretedStatementResult.init(outcome:resultStatementID:originProgramStatementID:actionEventID:toolID:originTaskStatementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a9, 1, 1, v11);
  v12 = (int *)type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  v13 = a9 + v12[5];
  v14 = type metadata accessor for TranscriptProtoStatementID(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = a9 + v12[6];
  v15(v16, 1, 1, v14);
  v17 = (_QWORD *)(a9 + v12[7]);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(a9 + v12[8]);
  *v18 = 0;
  v18[1] = 0;
  v19 = a9 + v12[9];
  v15(v19, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a9, &qword_256FFA3E8);
  sub_2403C25A0(a2, v13, &qword_256FFA300);
  sub_2403C25A0(a3, v16, &qword_256FFA300);
  swift_bridgeObjectRelease();
  *v17 = a4;
  v17[1] = a5;
  swift_bridgeObjectRelease();
  *v18 = a6;
  v18[1] = a7;
  return sub_2403C25A0(a8, v19, &qword_256FFA300);
}

uint64_t (*TranscriptProtoProgramStatement.id.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoProgramStatement.expression.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoProgramStatement, &qword_256FFCFA0, a1);
}

uint64_t TranscriptProtoProgramStatement.expression.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoProgramStatement, &qword_256FFCFA0);
}

uint64_t (*TranscriptProtoProgramStatement.expression.modify())()
{
  type metadata accessor for TranscriptProtoProgramStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoProgramStatement.targetType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoProgramStatement, &qword_256FFA428, a1);
}

uint64_t TranscriptProtoProgramStatement.targetType.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoProgramStatement, &qword_256FFA428);
}

uint64_t (*TranscriptProtoProgramStatement.targetType.modify())()
{
  type metadata accessor for TranscriptProtoProgramStatement(0);
  return nullsub_1;
}

uint64_t TranscriptProtoProgramStatement.init(id:expression:targetType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = type metadata accessor for TranscriptProtoProgramStatement(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = type metadata accessor for TranscriptProtoExpression(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a4 + *(int *)(v9 + 24);
  v13 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a4, &qword_256FFA300);
  sub_2403C25A0(a2, v10, &qword_256FFCFA0);
  return sub_2403C25A0(a3, v12, &qword_256FFA428);
}

uint64_t (*TranscriptProtoLocaleSettings.deviceLocale.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoLocaleSettings.userLocale.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoLocaleSettings.responseLocale.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoLocaleSettings.init(deviceLocale:userLocale:responseLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_24052564C(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLocaleSettings, a7);
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptProtoDeviceDetailsDeviceType.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.init(rawValue:)@<X0>(int a1@<W0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = a1;
  return result;
}

uint64_t (*TranscriptProtoDeviceDetails.deviceIdsID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoDeviceDetails.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoDeviceDetails, &qword_256FFA318, a1);
}

uint64_t TranscriptProtoDeviceDetails.type.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoDeviceDetails, &qword_256FFA318);
}

uint64_t (*TranscriptProtoDeviceDetails.type.modify())()
{
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  return nullsub_1;
}

uint64_t TranscriptProtoDeviceDetails.init(deviceIdsID:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_240523360(a1, a2, a3, type metadata accessor for TranscriptProtoDeviceDetails, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, &qword_256FFA318, a4);
}

uint64_t TranscriptProtoStatementID.index.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TranscriptProtoStatementID.index.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptProtoStatementID.index.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStatementID.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*TranscriptProtoStatementID.name.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoStatementID.init(index:name:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoStatementID(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t TranscriptProtoToolResolution.tool.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA468);
}

uint64_t TranscriptProtoToolResolution.tool.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA468);
}

uint64_t (*TranscriptProtoToolResolution.tool.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoToolResolution.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoToolResolution, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoToolResolution.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoToolResolution, &qword_256FFA300);
}

uint64_t (*TranscriptProtoToolResolution.statementID.modify())()
{
  type metadata accessor for TranscriptProtoToolResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolResolution.originProgramStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoToolResolution, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoToolResolution.originProgramStatementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoToolResolution, &qword_256FFA300);
}

uint64_t (*TranscriptProtoToolResolution.originProgramStatementID.modify())()
{
  type metadata accessor for TranscriptProtoToolResolution(0);
  return nullsub_1;
}

uint64_t TranscriptProtoToolResolution.init(tool:statementID:originProgramStatementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24052AF08(a1, a2, a3, type metadata accessor for ToolKitProtoToolDefinition.Version1, type metadata accessor for TranscriptProtoToolResolution, &qword_256FFA468, a4);
}

uint64_t (*TranscriptProtoUndoRedoRequest.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUndoRedoRequest.operation.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoUndoRedoRequest.token.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoUndoRedoRequest.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoUndoRedoRequest.statementID.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256FFA300);
}

uint64_t (*TranscriptProtoUndoRedoRequest.statementID.modify())()
{
  type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUndoRedoRequest.statementIDToUndo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoUndoRedoRequest.statementIDToUndo.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256FFA300);
}

uint64_t (*TranscriptProtoUndoRedoRequest.statementIDToUndo.modify())()
{
  type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoUndoRedoRequest.init(bundleIdentifier:token:operation:statementID:statementIDToUndo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v12 = *a5;
  v13 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  v14 = a8 + *(int *)(v13 + 28);
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = a8 + *(int *)(v13 + 32);
  v16(v17, 1, 1, v15);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 24) = a3;
  *(_QWORD *)(a8 + 32) = a4;
  *(_BYTE *)(a8 + 16) = v12;
  sub_2403C25A0(a6, v14, &qword_256FFA300);
  return sub_2403C25A0(a7, v17, &qword_256FFA300);
}

uint64_t (*TranscriptProtoClientUndoRedoRequest.token.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoClientUndoRedoRequest.operation.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoClientUndoRedoRequest.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoClientUndoRedoRequest.statementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256FFA300);
}

uint64_t (*TranscriptProtoClientUndoRedoRequest.statementID.modify())()
{
  type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoClientUndoRedoRequest.statementIDToUndo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoClientUndoRedoRequest.statementIDToUndo.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256FFA300);
}

uint64_t (*TranscriptProtoClientUndoRedoRequest.statementIDToUndo.modify())()
{
  type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoClientUndoRedoRequest.init(token:operation:statementID:statementIDToUndo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v10 = *a3;
  v11 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  v12 = a6 + *(int *)(v11 + 24);
  v13 = type metadata accessor for TranscriptProtoStatementID(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v15 = a6 + *(int *)(v11 + 28);
  v14(v15, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = v10;
  sub_2403C25A0(a4, v12, &qword_256FFA300);
  return sub_2403C25A0(a5, v15, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTypeConversionRequest.value.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionRequest.target.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256FFA428, a1);
}

uint64_t TranscriptProtoTypeConversionRequest.target.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256FFA428);
}

uint64_t (*TranscriptProtoTypeConversionRequest.target.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionRequest.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoTypeConversionRequest.statementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTypeConversionRequest.statementID.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionRequest.init(value:target:statementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a4 + *(int *)(v9 + 24);
  v13 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a4, &qword_256FFA3A8);
  sub_2403C25A0(a2, v10, &qword_256FFA428);
  return sub_2403C25A0(a3, v12, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTypeConversionResult.value.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionResult.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoTypeConversionResult.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTypeConversionResult.statementID.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionResult.originStatementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoTypeConversionResult.originStatementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTypeConversionResult.originStatementID.modify())()
{
  type metadata accessor for TranscriptProtoTypeConversionResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTypeConversionResult.init(value:statementID:originStatementID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24052AF08(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFA3A8, a4);
}

uint64_t sub_24052AF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v13 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a7, 1, 1, v13);
  v14 = a5(0);
  v15 = a7 + *(int *)(v14 + 20);
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v18 = a7 + *(int *)(v14 + 24);
  v17(v18, 1, 1, v16);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a7, a6);
  sub_2403C25A0(a2, v15, &qword_256FFA300);
  return sub_2403C25A0(a3, v18, &qword_256FFA300);
}

uint64_t (*TranscriptProtoQueryDecorationResult.spans.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoQueryDecorationResult.requiredContext.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoQueryDecorationResult.utteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoQueryDecorationResult.dynamicEnumerationEntities.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationResult.toolRetrievalResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for TranscriptProtoQueryDecorationResult, &qword_256FFA470, a1);
}

uint64_t TranscriptProtoQueryDecorationResult.toolRetrievalResponse.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for TranscriptProtoQueryDecorationResult, &qword_256FFA470);
}

uint64_t (*TranscriptProtoQueryDecorationResult.toolRetrievalResponse.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationResult.init(spans:requiredContext:utteranceContext:toolRetrievalResponse:dynamicEnumerationEntities:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t result;

  v12 = (uint64_t)a6 + *(int *)(type metadata accessor for TranscriptProtoQueryDecorationResult(0) + 32);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8) + 56))(v12, 1, 1, DecorationToolRetrievalResponse);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  result = sub_2403C25A0(a4, v12, &qword_256FFA470);
  a6[3] = a5;
  return result;
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResult.dataSource.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.statementID.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256FFA300);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResult.statementID.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256FFA480, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.payload.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256FFA480);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResult.payload.modify())()
{
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.init(statementID:dataSource:payload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t DecorationPrePlannerResult;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t DecorationPrePlannerResultPayload;

  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  v11 = (uint64_t)a5 + *(int *)(DecorationPrePlannerResult + 20);
  v12 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)a5 + *(int *)(DecorationPrePlannerResult + 24);
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload - 8) + 56))(v13, 1, 1, DecorationPrePlannerResultPayload);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v11, &qword_256FFA300);
  *a5 = a2;
  a5[1] = a3;
  return sub_2403C25A0(a4, v13, &qword_256FFA480);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, a2);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, a2);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, a2);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, a2);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, a2);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.values.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init(values:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240523D30(a1, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, a2);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.queryDecorationPrePlannerPayloadValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA478);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.queryDecorationPrePlannerPayloadValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA478);
}

uint64_t (*TranscriptProtoQueryDecorationPrePlannerResultPayload.queryDecorationPrePlannerPayloadValues.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoTextQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoTextQuery.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoTextQuery.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoTextQuery, &qword_256FFA300, a1);
}

uint64_t TranscriptProtoTextQuery.statementID.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoTextQuery, &qword_256FFA300);
}

uint64_t (*TranscriptProtoTextQuery.statementID.modify())()
{
  type metadata accessor for TranscriptProtoTextQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTextQuery.clientQueryID.getter()
{
  return sub_240526454(type metadata accessor for TranscriptProtoTextQuery);
}

uint64_t TranscriptProtoTextQuery.clientQueryID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2405264A0(a1, a2, type metadata accessor for TranscriptProtoTextQuery);
}

uint64_t (*TranscriptProtoTextQuery.clientQueryID.modify())()
{
  type metadata accessor for TranscriptProtoTextQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoTextQuery.init(query:safetyMode:statementID:clientQueryID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;

  v14 = type metadata accessor for TranscriptProtoTextQuery(0);
  v15 = a7 + *(int *)(v14 + 24);
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (_QWORD *)(a7 + *(int *)(v14 + 28));
  *v17 = 0;
  v17[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3;
  sub_2403C25A0(a4, v15, &qword_256FFA300);
  result = swift_bridgeObjectRelease();
  *v17 = a5;
  v17[1] = a6;
  return result;
}

uint64_t (*TranscriptProtoExternalAgentTextQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoExternalAgentTextQuery.queryRewriteMetadataEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentTextQuery.queryRewriteMetadataInlined.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoExternalAgentTextQuery, &qword_256FFA368, a1);
}

uint64_t TranscriptProtoExternalAgentTextQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoExternalAgentTextQuery, &qword_256FFA368);
}

uint64_t (*TranscriptProtoExternalAgentTextQuery.queryRewriteMetadataInlined.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentTextQuery.init(query:queryRewriteMetadataEventID:queryRewriteMetadataInlined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;

  v12 = (uint64_t)a6 + *(int *)(type metadata accessor for TranscriptProtoExternalAgentTextQuery(0) + 24);
  v13 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  return sub_2403C25A0(a5, v12, &qword_256FFA368);
}

uint64_t (*TranscriptProtoSpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechQuery.safetyMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t TranscriptProtoSpeechQuery.safetyMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*TranscriptProtoSpeechQuery.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechQuery.clientQueryID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*TranscriptProtoSpeechQuery.clientQueryID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoSpeechQuery.init(candidates:safetyMode:clientQueryID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptProtoSpeechQuery(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t (*TranscriptProtoExternalAgentSpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

uint64_t (*TranscriptProtoExternalAgentSpeechQuery.queryRewriteMetadataEventID.modify())()
{
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.queryRewriteMetadataInlined.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, &qword_256FFA368, a1);
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.queryRewriteMetadataInlined.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, &qword_256FFA368);
}

uint64_t (*TranscriptProtoExternalAgentSpeechQuery.queryRewriteMetadataInlined.modify())()
{
  type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  return nullsub_1;
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.init(candidates:queryRewriteMetadataEventID:queryRewriteMetadataInlined:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  v10 = (uint64_t)a5 + *(int *)(type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0) + 24);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  return sub_2403C25A0(a4, v10, &qword_256FFA368);
}

void _s23LighthouseDataProcessor51TranscriptProtoQueryDecorationPrePlannerPayloadEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v32 = a2;
  DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v30 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v29 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v28 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v27 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v26 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v25 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v9 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BCF8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&DecorationPrePlannerResultPayloadRepeatedStringVariant
      + *(int *)(v15 + 48)
      - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v31, (uint64_t)&DecorationPrePlannerResultPayloadRepeatedStringVariant - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  sub_2403AE1A4(v32, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  v18 = (char *)sub_24052BB44 + 4 * byte_2409012C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052BB44()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD **v5;

  sub_2403AE1A4(v1, (uint64_t)v0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    sub_2403A97FC(v1, &qword_25700BCF8);
  }
  else
  {
    v5 = *(_QWORD ***)(v3 - 144);
    sub_2403A91CC(v2, (uint64_t)v5, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    if ((sub_2408BAD50(*v0, *v5) & 1) != 0)
    {
      sub_2408E57A4();
      sub_2406F9978();
      if ((sub_2408E5CD8() & 1) != 0)
      {
        sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
        sub_240388AE4((uint64_t)v0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
        sub_240388AE4(v1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
        return 1;
      }
    }
    sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    sub_240388AE4((uint64_t)v0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  }
  return 0;
}

void _s23LighthouseDataProcessor46TranscriptProtoSystemPromptResolutionInputEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v13 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v13);
  v4 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD38);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  sub_2403AE1A4(a2, (uint64_t)v10, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  v11 = (char *)sub_24052C220 + 4 * byte_2409012C6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052C220()
{
  uint64_t v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_2403A97FC(v0, &qword_25700BD38);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v3, (uint64_t)v1, type metadata accessor for TranscriptProtoRequestContentTextContent);
    v4 = static TranscriptProtoRequestContentTextContent.== infix(_:_:)(v2, v1);
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  }
  return v4 & 1;
}

void _s23LighthouseDataProcessor43TranscriptProtoSystemRequirementMessageEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[2];

  v4 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD80);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v14 + *(int *)(v10 + 48) - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  sub_2403AE1A4(a2, (uint64_t)v12, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  v13 = (char *)sub_24052C590 + 4 * byte_2409012CA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052C590()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  BOOL v6;

  sub_2403AE1A4(v0, (uint64_t)v1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    sub_2403A97FC(v0, &qword_25700BD80);
  }
  else
  {
    v5 = *(_QWORD **)(v3 - 88);
    sub_2403A91CC(v2, (uint64_t)v5, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    v6 = *v1 == *v5 && v1[1] == v5[1];
    if (v6 || (sub_2408E617C() & 1) != 0)
    {
      sub_2408E57A4();
      sub_2406F9978();
      if ((sub_2408E5CD8() & 1) != 0)
      {
        sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
        sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
        sub_240388AE4(v0, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
        v4 = 1;
        return v4 & 1;
      }
    }
    sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  }
  v4 = 0;
  return v4 & 1;
}

uint64_t _s23LighthouseDataProcessor42TranscriptProtoShimParameterResolutionEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDB0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v19, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  sub_2403AE1A4(a2, v20, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403AE1A4((uint64_t)v19, (uint64_t)v13, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A91CC(v20, (uint64_t)v6, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      v21 = sub_2404CDC64(v13, v6);
      sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for TranscriptProtoUnresolvedParameterValue;
LABEL_9:
      sub_240388AE4(v22, v23);
      sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      return v21 & 1;
    }
    v24 = type metadata accessor for TranscriptProtoUnresolvedParameterValue;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2403AE1A4((uint64_t)v19, (uint64_t)v15, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2403A91CC(v20, (uint64_t)v9, type metadata accessor for ToolKitProtoTypedValue);
      v21 = static ToolKitProtoTypedValue.== infix(_:_:)(v15, v9);
      sub_240388AE4((uint64_t)v9, type metadata accessor for ToolKitProtoTypedValue);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for ToolKitProtoTypedValue;
      goto LABEL_9;
    }
    v24 = type metadata accessor for ToolKitProtoTypedValue;
    v25 = (uint64_t)v15;
  }
  sub_240388AE4(v25, v24);
  sub_2403A97FC((uint64_t)v19, &qword_25700BDB0);
  v21 = 0;
  return v21 & 1;
}

uint64_t _s23LighthouseDataProcessor42TranscriptProtoSessionCoordinatorErrorEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;

  v36 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v4 = MEMORY[0x24BDAC7A8](v36);
  v35 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v34 = (uint64_t *)((char *)&v33 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v33 - v8);
  v10 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v33 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v33 - v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDA0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v22, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  sub_2403AE1A4(a2, v23, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2403AE1A4((uint64_t)v22, (uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = v34;
        sub_2403A91CC(v23, (uint64_t)v34, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        v26 = *v16 == *v25 && v16[1] == v25[1];
        if ((v26 || (sub_2408E617C() & 1) != 0) && v16[2] == v25[2])
        {
          sub_2408E57A4();
          sub_2406F9978();
          if ((sub_2408E5CD8() & 1) != 0)
          {
            sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoIntelligenceFlowError);
            v27 = (uint64_t)v16;
LABEL_35:
            sub_240388AE4(v27, type metadata accessor for TranscriptProtoIntelligenceFlowError);
            sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
            return 1;
          }
        }
        sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        v30 = (uint64_t)v16;
        goto LABEL_37;
      }
      v13 = v16;
    }
    else
    {
      sub_2403AE1A4((uint64_t)v22, (uint64_t)v13, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v28 = v35;
        sub_2403A91CC(v23, (uint64_t)v35, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        v29 = *v13 == *v28 && v13[1] == v28[1];
        if ((v29 || (sub_2408E617C() & 1) != 0) && v13[2] == v28[2])
        {
          sub_2408E57A4();
          sub_2406F9978();
          if ((sub_2408E5CD8() & 1) != 0)
          {
            sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoIntelligenceFlowError);
            v27 = (uint64_t)v13;
            goto LABEL_35;
          }
        }
        sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        v30 = (uint64_t)v13;
        goto LABEL_37;
      }
    }
  }
  else
  {
    sub_2403AE1A4((uint64_t)v22, (uint64_t)v18, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2403A91CC(v23, (uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v31 = *v18 == *v9 && v18[1] == v9[1];
      if ((v31 || (sub_2408E617C() & 1) != 0) && v18[2] == v9[2])
      {
        sub_2408E57A4();
        sub_2406F9978();
        if ((sub_2408E5CD8() & 1) != 0)
        {
          sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
          v27 = (uint64_t)v18;
          goto LABEL_35;
        }
      }
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v30 = (uint64_t)v18;
LABEL_37:
      sub_240388AE4(v30, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      return 0;
    }
    v13 = v18;
  }
  sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_2403A97FC((uint64_t)v22, &qword_25700BDA0);
  return 0;
}

void _s23LighthouseDataProcessor51TranscriptProtoSystemPromptResolutionUserActionEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v2 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  MEMORY[0x24BDAC7A8](v2);
  v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v23 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v25 = (char *)&v20 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD30);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v20 + *(int *)(v16 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v26, (uint64_t)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  sub_2403AE1A4(v27, (uint64_t)v18, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  v19 = (char *)sub_24052D15C + 4 * byte_2409012D1[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052D15C()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  char v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2403A97FC(v0, &qword_25700BD30);
    v4 = 0;
  }
  else
  {
    v3 = *v2 ^ *v1;
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void _s23LighthouseDataProcessor40TranscriptProtoRequestPrescribedPlanEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a1;
  v32 = a2;
  v23 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  MEMORY[0x24BDAC7A8](v21);
  v28 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  MEMORY[0x24BDAC7A8](v20);
  v27 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  MEMORY[0x24BDAC7A8](v19);
  v25 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDB8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v19 + *(int *)(v15 + 48) - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v31, (uint64_t)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  sub_2403AE1A4(v32, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  v18 = (char *)sub_24052D79C + 4 * byte_2409012D9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052D79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2403AE1A4(v2, v0, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    sub_2403A97FC(v2, &qword_25700BDB8);
  }
  else
  {
    v4 = v1;
    v5 = *(_QWORD *)(v3 - 144);
    sub_2403A91CC(v4, v5, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    if ((*(_QWORD *)v0 == *(_QWORD *)v5 && *(_QWORD *)(v0 + 8) == *(_QWORD *)(v5 + 8) || (sub_2408E617C() & 1) != 0)
      && *(unsigned __int8 *)(v0 + 16) == *(unsigned __int8 *)(v5 + 16))
    {
      sub_2408E57A4();
      sub_2406F9978();
      if ((sub_2408E5CD8() & 1) != 0)
      {
        sub_240388AE4(v5, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
        sub_240388AE4(v0, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
        sub_240388AE4(v2, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
        return 1;
      }
    }
    sub_240388AE4(v5, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    sub_240388AE4(v2, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  }
  return 0;
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoToolParameterValueEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v24 - v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD00);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v16[*(int *)(v14 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  sub_2403AE1A4(a2, (uint64_t)v17, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403AE1A4((uint64_t)v16, (uint64_t)v12, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    v20 = *v12;
    v19 = v12[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v20 == *(_QWORD *)v17 && v19 == *((_QWORD *)v17 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v22 = sub_2408E617C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
          goto LABEL_8;
        }
      }
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      v18 = 1;
      return v18 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    sub_2403A97FC((uint64_t)v16, &qword_25700BD00);
LABEL_8:
    v18 = 0;
    return v18 & 1;
  }
  sub_2403AE1A4((uint64_t)v16, (uint64_t)v10, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_7;
  }
  sub_2403A91CC((uint64_t)v17, (uint64_t)v6, type metadata accessor for ToolKitProtoTypedValue);
  v18 = static ToolKitProtoTypedValue.== infix(_:_:)(v10, v6);
  sub_240388AE4((uint64_t)v6, type metadata accessor for ToolKitProtoTypedValue);
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
  sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  return v18 & 1;
}

void _s23LighthouseDataProcessor36TranscriptProtoActionRequirementEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v16 = a2;
  v3 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  MEMORY[0x24BDAC7A8](v3);
  v15 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for TranscriptProtoAppRequirement(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD88);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoActionRequirementEnum);
  sub_2403AE1A4(v16, (uint64_t)v13, type metadata accessor for TranscriptProtoActionRequirementEnum);
  v14 = (char *)sub_24052E220 + 4 * byte_2409012DF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052E220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, v3, type metadata accessor for TranscriptProtoActionRequirementEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v3, type metadata accessor for TranscriptProtoAppRequirement);
    sub_2403A97FC(v0, &qword_25700BD88);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v1, v2, type metadata accessor for TranscriptProtoAppRequirement);
    v4 = ((uint64_t (*)(uint64_t, uint64_t))static TranscriptProtoAppRequirement.== infix(_:_:))(v3, v2);
    sub_240388AE4(v2, type metadata accessor for TranscriptProtoAppRequirement);
    sub_240388AE4(v3, type metadata accessor for TranscriptProtoAppRequirement);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoActionRequirementEnum);
  }
  return v4 & 1;
}

void _s23LighthouseDataProcessor35TranscriptProtoStatementOutcomeEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;

  v64 = a1;
  v44 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v14);
  v52 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v16);
  v51 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v47);
  v53 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v20);
  v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v59 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v62 = (char *)&v44 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v58 = (char *)&v44 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v61 = (char *)&v44 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v60 = (char *)&v44 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v63 = (char *)&v44 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  MEMORY[0x24BDAC7A8](v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD70);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v44 + *(int *)(v40 + 48) - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v64, (uint64_t)&v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  sub_2403AE1A4(a2, (uint64_t)v42, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  v43 = (char *)sub_24052E898 + 4 * word_2409012E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052E898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = v0;
  sub_2403AE1A4(v0, v1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoActionSuccess);
    sub_2403A97FC(v0, &qword_25700BD70);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 240);
    sub_2403A91CC(v2, v6, type metadata accessor for TranscriptProtoActionSuccess);
    v5 = ((uint64_t (*)(uint64_t, uint64_t))static TranscriptProtoActionSuccess.== infix(_:_:))(v1, v6);
    sub_240388AE4(v6, type metadata accessor for TranscriptProtoActionSuccess);
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoActionSuccess);
    sub_240388AE4(v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  }
  return v5 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoPropertyQueryEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Predicate;
  uint64_t v8;
  char *v9;
  uint64_t Enum;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t *v29;
  char PredicateV2eeoiySbAC_ACtFZ_0;
  uint64_t v31;
  uint64_t v33;
  uint64_t *v34;
  uint64_t PredicateList;
  uint64_t *v36;

  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  v4 = MEMORY[0x24BDAC7A8](PredicateList);
  v34 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t *)((char *)&v33 - v6);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  MEMORY[0x24BDAC7A8](Predicate);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v11 = MEMORY[0x24BDAC7A8](Enum);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v33 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD60);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v22, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  sub_2403AE1A4(a2, v23, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2403AE1A4((uint64_t)v22, (uint64_t)v18, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2403A91CC(v23, (uint64_t)v9, type metadata accessor for TranscriptProtoQueryPredicate);
      PredicateV2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor29TranscriptProtoQueryPredicateV2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v9);
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      return PredicateV2eeoiySbAC_ACtFZ_0 & 1;
    }
    v27 = type metadata accessor for TranscriptProtoQueryPredicate;
    v28 = (uint64_t)v18;
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_2403AE1A4((uint64_t)v22, (uint64_t)v13, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v29 = v34;
      sub_2403A91CC(v23, (uint64_t)v34, type metadata accessor for TranscriptProtoQueryPredicateList);
      if ((sub_2408BC930(*v13, *v29) & 1) != 0)
      {
        sub_2408E57A4();
        sub_2406F9978();
        if ((sub_2408E5CD8() & 1) != 0)
        {
          sub_240388AE4((uint64_t)v29, type metadata accessor for TranscriptProtoQueryPredicateList);
          v26 = (uint64_t)v13;
          goto LABEL_13;
        }
      }
      sub_240388AE4((uint64_t)v29, type metadata accessor for TranscriptProtoQueryPredicateList);
      v31 = (uint64_t)v13;
      goto LABEL_20;
    }
    v27 = type metadata accessor for TranscriptProtoQueryPredicateList;
    v28 = (uint64_t)v13;
LABEL_16:
    sub_240388AE4(v28, v27);
    sub_2403A97FC((uint64_t)v22, &qword_25700BD60);
LABEL_21:
    PredicateV2eeoiySbAC_ACtFZ_0 = 0;
    return PredicateV2eeoiySbAC_ACtFZ_0 & 1;
  }
  sub_2403AE1A4((uint64_t)v22, (uint64_t)v16, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v27 = type metadata accessor for TranscriptProtoQueryPredicateList;
    v28 = (uint64_t)v16;
    goto LABEL_16;
  }
  v25 = v36;
  sub_2403A91CC(v23, (uint64_t)v36, type metadata accessor for TranscriptProtoQueryPredicateList);
  if ((sub_2408BC930(*v16, *v25) & 1) == 0 || (sub_2408E57A4(), sub_2406F9978(), (sub_2408E5CD8() & 1) == 0))
  {
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoQueryPredicateList);
    v31 = (uint64_t)v16;
LABEL_20:
    sub_240388AE4(v31, type metadata accessor for TranscriptProtoQueryPredicateList);
    sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    goto LABEL_21;
  }
  sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoQueryPredicateList);
  v26 = (uint64_t)v16;
LABEL_13:
  sub_240388AE4(v26, type metadata accessor for TranscriptProtoQueryPredicateList);
  sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  PredicateV2eeoiySbAC_ACtFZ_0 = 1;
  return PredicateV2eeoiySbAC_ACtFZ_0 & 1;
}

uint64_t sub_24052F39C(uint64_t a1, uint64_t a2)
{
  return sub_24052FE2C(a1, a2, type metadata accessor for TranscriptProtoExecutorErrorEnum, &qword_25700BD98);
}

void _s23LighthouseDataProcessor31TranscriptProtoVisualOutputTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v22 = a2;
  v15 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  MEMORY[0x24BDAC7A8](v17);
  v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD58);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoVisualOutputType);
  sub_2403AE1A4(v22, (uint64_t)v13, type metadata accessor for TranscriptProtoVisualOutputType);
  v14 = (char *)sub_24052F5E0 + 4 * byte_2409012FA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052F5E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_2403AE1A4(v0, (uint64_t)v3, type metadata accessor for TranscriptProtoVisualOutputType);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    sub_2403A97FC(v0, &qword_25700BD58);
  }
  else
  {
    sub_2403A91CC(v1, (uint64_t)v2, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    if (*v3 == *v2 && v3[1] == v2[1] || (sub_2408E617C() & 1) != 0)
    {
      sub_2408E57A4();
      sub_2406F9978();
      if ((sub_2408E5CD8() & 1) != 0)
      {
        sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
        sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
        sub_240388AE4(v0, type metadata accessor for TranscriptProtoVisualOutputType);
        return 1;
      }
    }
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoVisualOutputType);
  }
  return 0;
}

void _s23LighthouseDataProcessor31TranscriptProtoSessionErrorEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v2 = type metadata accessor for TranscriptProtoExecutorError(0);
  MEMORY[0x24BDAC7A8](v2);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoPlannerError(0);
  MEMORY[0x24BDAC7A8](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDA8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v18, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoSessionErrorEnum);
  sub_2403AE1A4(v19, (uint64_t)v15, type metadata accessor for TranscriptProtoSessionErrorEnum);
  v16 = (char *)sub_24052FBF4 + 4 * byte_2409012FE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24052FBF4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoSessionErrorEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2403A97FC(v0, &qword_25700BDA8);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v1, (uint64_t)v3, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    v4 = _s23LighthouseDataProcessor36TranscriptProtoIntelligenceFlowErrorV2eeoiySbAC_ACtFZ_0(v2, v3);
    sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoSessionErrorEnum);
  }
  return v4 & 1;
}

uint64_t sub_24052FE18(uint64_t a1, uint64_t a2)
{
  return sub_24052FE2C(a1, a2, type metadata accessor for TranscriptProtoPlannerErrorEnum, &qword_25700BD90);
}

uint64_t sub_24052FE2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  BOOL v22;
  uint64_t v23;

  v8 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a3(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v23 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v18, a3);
  sub_2403AE1A4(a2, v19, a3);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v20((uint64_t)v18, 1, v8) == 1)
  {
    if (v20(v19, 1, v8) == 1)
    {
LABEL_3:
      sub_240388AE4((uint64_t)v18, a3);
      return 1;
    }
    goto LABEL_6;
  }
  sub_2403AE1A4((uint64_t)v18, (uint64_t)v14, a3);
  if (v20(v19, 1, v8) == 1)
  {
    sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoIntelligenceFlowError);
LABEL_6:
    sub_2403A97FC((uint64_t)v18, a4);
    return 0;
  }
  sub_2403A91CC(v19, (uint64_t)v11, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  v22 = *v14 == *v11 && v14[1] == v11[1];
  if ((v22 || (sub_2408E617C() & 1) != 0) && v14[2] == v11[2])
  {
    sub_2408E57A4();
    sub_2406F9978();
    if ((sub_2408E5CD8() & 1) != 0)
    {
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      goto LABEL_3;
    }
  }
  sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_240388AE4((uint64_t)v18, a3);
  return 0;
}

void _s23LighthouseDataProcessor31TranscriptProtoAstflatValueEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;

  v36 = a1;
  v37 = a2;
  v2 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v26 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)&v26 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v33 = (char *)&v26 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD20);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v26 + *(int *)(v21 + 48) - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v36, (uint64_t)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoAstflatValueEnum);
  v24 = (uint64_t)v37;
  v37 = v23;
  sub_2403AE1A4(v24, (uint64_t)v23, type metadata accessor for TranscriptProtoAstflatValueEnum);
  v25 = (char *)sub_240530350 + 4 * byte_240901302[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240530350()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  char v5;

  sub_2403AE1A4(v0, (uint64_t)v1, type metadata accessor for TranscriptProtoAstflatValueEnum);
  v3 = *(_BYTE **)(v2 - 88);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2403A97FC(v0, &qword_25700BD20);
    v5 = 0;
  }
  else
  {
    v4 = *v1 ^ *v3;
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

void _s23LighthouseDataProcessor30TranscriptProtoAstflatExprEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t MentionedApps;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t updated;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;

  v104 = a2;
  v105 = (char *)a1;
  MentionedApps = type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(0);
  MEMORY[0x24BDAC7A8](MentionedApps);
  v90 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  MEMORY[0x24BDAC7A8](updated);
  v91 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  MEMORY[0x24BDAC7A8](v74);
  v89 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  MEMORY[0x24BDAC7A8](v72);
  v88 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  MEMORY[0x24BDAC7A8](v68);
  v86 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  MEMORY[0x24BDAC7A8](v71);
  v85 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  MEMORY[0x24BDAC7A8](v70);
  v83 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  MEMORY[0x24BDAC7A8](v67);
  v80 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  MEMORY[0x24BDAC7A8](v66);
  v81 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  MEMORY[0x24BDAC7A8](v20);
  v78 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  MEMORY[0x24BDAC7A8](v22);
  v77 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  MEMORY[0x24BDAC7A8](v24);
  v76 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  MEMORY[0x24BDAC7A8](v26);
  v75 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v28);
  v73 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v100 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v102 = (char *)&v65 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v97 = (char *)&v65 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v103 = (char *)&v65 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v101 = (char *)&v65 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v98 = (char *)&v65 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v94 = (char *)&v65 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v99 = (char *)&v65 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v92 = (char *)&v65 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v96 = (char *)&v65 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v93 = (char *)&v65 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v95 = (char *)&v65 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v59 = MEMORY[0x24BDAC7A8](v58);
  MEMORY[0x24BDAC7A8](v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD28);
  v61 = MEMORY[0x24BDAC7A8](v60);
  v63 = (char *)&v65 + *(int *)(v61 + 48) - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4((uint64_t)v105, (uint64_t)&v65 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoAstflatExprEnum);
  v105 = v63;
  sub_2403AE1A4(v104, (uint64_t)v63, type metadata accessor for TranscriptProtoAstflatExprEnum);
  v64 = (char *)sub_240530F98 + 4 * word_24090130E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240530F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = v0;
  sub_2403AE1A4(v0, v1, type metadata accessor for TranscriptProtoAstflatExprEnum);
  v4 = *(_QWORD *)(v2 - 96);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_2403A97FC(v3, &qword_25700BD28);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v2 - 352);
    sub_2403A91CC(v4, v6, type metadata accessor for TranscriptProtoASTFlatValue);
    v5 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v1, v6);
    sub_240388AE4(v6, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_240388AE4(v3, type metadata accessor for TranscriptProtoAstflatExprEnum);
  }
  return v5 & 1;
}

void _s23LighthouseDataProcessor27TranscriptProtoDialogFormatO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v2 = type metadata accessor for TranscriptProtoSuppressed(0);
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoUnableToGenerate(0);
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptProtoGeneratedText(0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoSonicText(0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoStaticText(0);
  MEMORY[0x24BDAC7A8](v19);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD50);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v18 + *(int *)(v14 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v26, (uint64_t)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoDialogFormat);
  sub_2403AE1A4(v27, (uint64_t)v16, type metadata accessor for TranscriptProtoDialogFormat);
  v17 = (char *)sub_240531F10 + 4 * byte_240901336[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240531F10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoDialogFormat);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoStaticText);
    sub_2403A97FC(v0, &qword_25700BD50);
LABEL_9:
    v4 = 0;
    return v4 & 1;
  }
  sub_2403A91CC(v1, (uint64_t)v3, type metadata accessor for TranscriptProtoStaticText);
  if ((*v2 != *v3 || v2[1] != v3[1]) && (sub_2408E617C() & 1) == 0
    || (sub_2408E57A4(), sub_2406F9978(), (sub_2408E5CD8() & 1) == 0))
  {
    sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoStaticText);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoStaticText);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoDialogFormat);
    goto LABEL_9;
  }
  sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoStaticText);
  sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoStaticText);
  sub_240388AE4(v0, type metadata accessor for TranscriptProtoDialogFormat);
  v4 = 1;
  return v4 & 1;
}

void _s23LighthouseDataProcessor33TranscriptProtoRequestContentEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v2 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  MEMORY[0x24BDAC7A8](v2);
  v19 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v4);
  v17 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v17);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v20, (uint64_t)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoRequestContentEnum);
  sub_2403AE1A4(v21, (uint64_t)v14, type metadata accessor for TranscriptProtoRequestContentEnum);
  v15 = (char *)sub_240532580 + 4 * byte_24090133B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240532580()
{
  uint64_t v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_2403A97FC(v0, &qword_25700BDC0);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v3, (uint64_t)v1, type metadata accessor for TranscriptProtoRequestContentTextContent);
    v4 = static TranscriptProtoRequestContentTextContent.== infix(_:_:)(v2, v1);
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoRequestContentEnum);
  }
  return v4 & 1;
}

uint64_t _s23LighthouseDataProcessor26TranscriptProtoAststmtEnumO2eeoiySbAC_ACtFZ_0(_QWORD *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v4 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v35 - v8;
  v10 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v35 - v14;
  v16 = type metadata accessor for TranscriptProtoASTExpr(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)&v35 - v20);
  v22 = *a2;
  v23 = *a1 >> 62;
  if ((_DWORD)v23)
  {
    if ((_DWORD)v23 == 1)
    {
      if (v22 >> 62 == 1)
      {
        v24 = swift_projectBox();
        v25 = swift_projectBox();
        v26 = type metadata accessor for TranscriptProtoASTIfStmt;
        sub_2403AE1A4(v24, (uint64_t)v15, type metadata accessor for TranscriptProtoASTIfStmt);
        sub_2403AE1A4(v25, (uint64_t)v13, type metadata accessor for TranscriptProtoASTIfStmt);
        swift_retain();
        swift_retain();
        v27 = _s23LighthouseDataProcessor24TranscriptProtoASTIfStmtV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v13);
        sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoASTIfStmt);
        v28 = (uint64_t)v15;
LABEL_9:
        v31 = v26;
        goto LABEL_10;
      }
    }
    else if (v22 >> 62 == 2)
    {
      v32 = swift_projectBox();
      v33 = swift_projectBox();
      v26 = type metadata accessor for TranscriptProtoASTForInStmt;
      sub_2403AE1A4(v32, (uint64_t)v9, type metadata accessor for TranscriptProtoASTForInStmt);
      sub_2403AE1A4(v33, (uint64_t)v7, type metadata accessor for TranscriptProtoASTForInStmt);
      swift_retain();
      swift_retain();
      v27 = _s23LighthouseDataProcessor27TranscriptProtoASTForInStmtV2eeoiySbAC_ACtFZ_0(v9, v7);
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTForInStmt);
      v28 = (uint64_t)v9;
      goto LABEL_9;
    }
LABEL_11:
    v27 = 0;
    return v27 & 1;
  }
  if (v22 >> 62)
    goto LABEL_11;
  v29 = swift_projectBox();
  v30 = swift_projectBox();
  sub_2403AE1A4(v29, (uint64_t)v21, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403AE1A4(v30, (uint64_t)v19, type metadata accessor for TranscriptProtoASTExpr);
  swift_retain();
  swift_retain();
  v27 = static TranscriptProtoASTExpr.== infix(_:_:)(v21, v19);
  sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoASTExpr);
  v28 = (uint64_t)v21;
  v31 = type metadata accessor for TranscriptProtoASTExpr;
LABEL_10:
  sub_240388AE4(v28, v31);
  swift_release();
  swift_release();
  return v27 & 1;
}

void _s23LighthouseDataProcessor29TranscriptProtoAstliteralEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  v19 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v19 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD08);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v19 + *(int *)(v15 + 48) - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoAstliteralEnum);
  sub_2403AE1A4(a2, (uint64_t)v17, type metadata accessor for TranscriptProtoAstliteralEnum);
  v18 = (char *)sub_240532D4C + 4 * byte_24090133F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240532D4C()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  char v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v1, type metadata accessor for TranscriptProtoAstliteralEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2403A97FC(v0, &qword_25700BD08);
    v4 = 0;
  }
  else
  {
    v3 = *v1 ^ *v2;
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoAstliteralEnum);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void _s23LighthouseDataProcessor26TranscriptProtoAstexprEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t MentionedApps;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;

  v102 = a1;
  v103 = a2;
  MentionedApps = type metadata accessor for TranscriptProtoASTExprGetMentionedApps(0);
  v3 = MEMORY[0x24BDAC7A8](MentionedApps);
  v101 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v100 = (char *)&v65 - v5;
  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v97 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v96 = (char *)&v65 - v9;
  v10 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v94 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v65 - v13;
  v71 = type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  v14 = MEMORY[0x24BDAC7A8](v71);
  v98 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v99 = (char *)&v65 - v16;
  v70 = type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  v17 = MEMORY[0x24BDAC7A8](v70);
  v93 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v95 = (char *)&v65 - v19;
  v67 = type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  v20 = MEMORY[0x24BDAC7A8](v67);
  v90 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v91 = (char *)&v65 - v22;
  v23 = type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v87 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v86 = (char *)&v65 - v26;
  v27 = type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v85 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v84 = (char *)&v65 - v30;
  v69 = type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  v31 = MEMORY[0x24BDAC7A8](v69);
  v88 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v89 = (char *)&v65 - v33;
  v34 = type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v81 = (char *)&v65 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v80 = (char *)&v65 - v37;
  v38 = type metadata accessor for TranscriptProtoStatementID(0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v79 = (char *)&v65 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v78 = (char *)&v65 - v41;
  v68 = type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  v42 = MEMORY[0x24BDAC7A8](v68);
  v82 = (char *)&v65 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v83 = (char *)&v65 - v44;
  v45 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v73 = (char *)&v65 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v72 = (char *)&v65 - v48;
  v66 = type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  v49 = MEMORY[0x24BDAC7A8](v66);
  v74 = (char *)&v65 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v75 = (char *)&v65 - v51;
  v65 = type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  v52 = MEMORY[0x24BDAC7A8](v65);
  v76 = (char *)&v65 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v77 = (char *)&v65 - v54;
  v55 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  v56 = MEMORY[0x24BDAC7A8](v55);
  MEMORY[0x24BDAC7A8](v56);
  v57 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  v58 = MEMORY[0x24BDAC7A8](v57);
  MEMORY[0x24BDAC7A8](v58);
  v59 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  v60 = MEMORY[0x24BDAC7A8](v59);
  MEMORY[0x24BDAC7A8](v60);
  v61 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  v62 = MEMORY[0x24BDAC7A8](v61);
  MEMORY[0x24BDAC7A8](v62);
  v63 = type metadata accessor for TranscriptProtoASTLiteral(0);
  v64 = MEMORY[0x24BDAC7A8](v63);
  MEMORY[0x24BDAC7A8](v64);
  __asm { BR              X12 }
}

uint64_t sub_240533824@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  if ((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    v2 = 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 16) != *(_QWORD *)(a1 + 16) || *(_QWORD *)(v1 + 24) != *(_QWORD *)(a1 + 24))
      return sub_2408E617C();
    v2 = 1;
  }
  return v2 & 1;
}

void _s23LighthouseDataProcessor21TranscriptProtoUitypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v23 = a2;
  v18 = type metadata accessor for TranscriptProtoControlPayload(0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for TranscriptProtoUitype(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD48);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoUitype);
  sub_2403AE1A4(v23, (uint64_t)v14, type metadata accessor for TranscriptProtoUitype);
  v15 = (char *)sub_240534AAC + 4 * byte_240901372[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240534AAC()
{
  uint64_t v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v1, type metadata accessor for TranscriptProtoUitype);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoArchiveViewPayload);
    sub_2403A97FC(v0, &qword_25700BD48);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v3, (uint64_t)v2, type metadata accessor for TranscriptProtoArchiveViewPayload);
    v4 = _s23LighthouseDataProcessor33TranscriptProtoArchiveViewPayloadV2eeoiySbAC_ACtFZ_0(v1, v2);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoArchiveViewPayload);
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoArchiveViewPayload);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoUitype);
  }
  return v4 & 1;
}

BOOL _s23LighthouseDataProcessor20TranscriptProtoLabelO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  _BOOL8 v17;
  uint64_t v19;

  v4 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v19 - v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD40);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v13, type metadata accessor for TranscriptProtoLabel);
  sub_2403AE1A4(a2, v14, type metadata accessor for TranscriptProtoLabel);
  sub_2403A91CC((uint64_t)v13, (uint64_t)v9, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_2403A91CC(v14, (uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  v15 = *v9 == *v7 && v9[1] == v7[1];
  v17 = 0;
  if (v15 || (sub_2408E617C() & 1) != 0)
  {
    v16 = v9[2] == v7[2] && v9[3] == v7[3];
    if (v16 || (sub_2408E617C() & 1) != 0)
    {
      sub_2408E57A4();
      sub_2406F9978();
      if ((sub_2408E5CD8() & 1) != 0)
        v17 = 1;
    }
  }
  sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  return v17;
}

void _s23LighthouseDataProcessor34TranscriptProtoValueExpressionEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v18 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v20 = (char *)&v17 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD10);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoValueExpressionEnum);
  sub_2403AE1A4(a2, (uint64_t)v15, type metadata accessor for TranscriptProtoValueExpressionEnum);
  v16 = (char *)sub_2405351E0 + 4 * byte_240901376[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2405351E0()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  char v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v2, type metadata accessor for TranscriptProtoValueExpressionEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2403A97FC(v0, &qword_25700BD10);
    v4 = 0;
  }
  else
  {
    v3 = *v2 ^ *v1;
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoValueExpressionEnum);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void _s23LighthouseDataProcessor29TranscriptProtoExpressionEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t MentionedAppsExpression;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t updated;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;

  v121 = a2;
  v122 = (char *)a1;
  MentionedAppsExpression = type metadata accessor for TranscriptProtoGetMentionedAppsExpression(0);
  MEMORY[0x24BDAC7A8](MentionedAppsExpression);
  v105 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoEndOfPlanExpression(0);
  MEMORY[0x24BDAC7A8](v4);
  v104 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoContinuePlanningExpression(0);
  MEMORY[0x24BDAC7A8](v6);
  v103 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoNoMatchingToolExpression(0);
  MEMORY[0x24BDAC7A8](v8);
  v102 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoCancelExpression(0);
  MEMORY[0x24BDAC7A8](v10);
  v101 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRejectExpression(0);
  MEMORY[0x24BDAC7A8](v12);
  v100 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoUndoExpression(0);
  MEMORY[0x24BDAC7A8](v14);
  v98 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x24BDAC7A8](v84);
  v99 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  MEMORY[0x24BDAC7A8](v17);
  v97 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoSearchExpression(0);
  MEMORY[0x24BDAC7A8](v19);
  v96 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  MEMORY[0x24BDAC7A8](v21);
  v94 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TranscriptProtoPickExpression(0);
  MEMORY[0x24BDAC7A8](v23);
  v92 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for TranscriptProtoSayExpression(0);
  MEMORY[0x24BDAC7A8](v83);
  v93 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TranscriptProtoCallExpression(0);
  MEMORY[0x24BDAC7A8](v82);
  v95 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  MEMORY[0x24BDAC7A8](updated);
  v91 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for TranscriptProtoIndexExpression(0);
  MEMORY[0x24BDAC7A8](v29);
  v90 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TranscriptProtoDotExpression(0);
  MEMORY[0x24BDAC7A8](v31);
  v89 = (char *)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TranscriptProtoInfixExpression(0);
  MEMORY[0x24BDAC7A8](v33);
  v88 = (char *)&v82 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  MEMORY[0x24BDAC7A8](v35);
  v87 = (char *)&v82 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v37);
  v86 = (char *)&v82 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for TranscriptProtoValueExpression(0);
  MEMORY[0x24BDAC7A8](v39);
  v85 = (char *)&v82 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v120 = (char *)&v82 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v119 = (char *)&v82 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v118 = (char *)&v82 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v117 = (char *)&v82 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v115 = (char *)&v82 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v113 = (char *)&v82 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v112 = (char *)&v82 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v116 = (char *)&v82 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v110 = (char *)&v82 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v109 = (char *)&v82 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v108 = (char *)&v82 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v107 = (char *)&v82 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v111 = (char *)&v82 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v114 = (char *)&v82 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v106 = (char *)&v82 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v73 = MEMORY[0x24BDAC7A8](v72);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v75 = MEMORY[0x24BDAC7A8](v74);
  v76 = MEMORY[0x24BDAC7A8](v75);
  MEMORY[0x24BDAC7A8](v76);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD18);
  v78 = MEMORY[0x24BDAC7A8](v77);
  v80 = (char *)&v82 + *(int *)(v78 + 48) - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4((uint64_t)v122, (uint64_t)&v82 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoExpressionEnum);
  v122 = v80;
  sub_2403AE1A4(v121, (uint64_t)v80, type metadata accessor for TranscriptProtoExpressionEnum);
  v81 = (char *)sub_240535D14 + 4 * word_24090137E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240535D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;

  v3 = v0;
  sub_2403AE1A4(v0, v1, type metadata accessor for TranscriptProtoExpressionEnum);
  v4 = *(_QWORD *)(v2 - 96);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoValueExpression);
    sub_2403A97FC(v3, &qword_25700BD18);
    v5 = 0;
  }
  else
  {
    v7 = v4;
    v8 = *(_QWORD *)(v2 - 392);
    sub_2403A91CC(v7, v8, type metadata accessor for TranscriptProtoValueExpression);
    v5 = _s23LighthouseDataProcessor30TranscriptProtoValueExpressionV2eeoiySbAC_ACtFZ_0(v1, v8);
    sub_240388AE4(v8, type metadata accessor for TranscriptProtoValueExpression);
    sub_240388AE4(v1, type metadata accessor for TranscriptProtoValueExpression);
    sub_240388AE4(v3, type metadata accessor for TranscriptProtoExpressionEnum);
  }
  return v5 & 1;
}

void _s23LighthouseDataProcessor028TranscriptProtoActionFailureG4EnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD78);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v10, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  sub_2403AE1A4(a2, v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  v12 = (char *)sub_2405369E8
      + 4 * byte_2409013A8[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 16, v4)];
  __asm { BR              X10 }
}

uint64_t sub_2405369E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  char v6;

  sub_2403AE1A4(v0, (uint64_t)v4, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  if (v5(v3, 16, v1))
  {
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_2403A97FC(v0, &qword_25700BD78);
    v6 = 0;
  }
  else
  {
    sub_2403A91CC(v3, (uint64_t)v2, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    v6 = _s23LighthouseDataProcessor49TranscriptProtoActionFailureDeveloperDefinedErrorV2eeoiySbAC_ACtFZ_0(v4, v2);
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  }
  return v6 & 1;
}

void _s23LighthouseDataProcessor020TranscriptProtoQueryB4EnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t DataEnum;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v3 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  MEMORY[0x24BDAC7A8](v3);
  v17[1] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TranscriptProtoStringQuery(0);
  v5 = MEMORY[0x24BDAC7A8](v18);
  v17[3] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v17[2] = (char *)v17 - v7;
  v17[0] = type metadata accessor for TranscriptProtoIdentifierQuery(0);
  MEMORY[0x24BDAC7A8](v17[0]);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v9 = MEMORY[0x24BDAC7A8](DataEnum);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD68);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptProtoQueryDataEnum);
  sub_2403AE1A4(v19, (uint64_t)v15, type metadata accessor for TranscriptProtoQueryDataEnum);
  v16 = (char *)sub_240536E90 + 4 * byte_2409013B9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240536E90()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD **v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, (uint64_t)v1, type metadata accessor for TranscriptProtoQueryDataEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoIdentifierQuery);
    sub_2403A97FC(v0, &qword_25700BD68);
LABEL_7:
    v4 = 0;
    return v4 & 1;
  }
  sub_2403A91CC(v3, (uint64_t)v2, type metadata accessor for TranscriptProtoIdentifierQuery);
  if ((sub_2408BAD50(*v1, *v2) & 1) == 0 || (sub_2408E57A4(), sub_2406F9978(), (sub_2408E5CD8() & 1) == 0))
  {
    sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoIdentifierQuery);
    sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoIdentifierQuery);
    sub_240388AE4(v0, type metadata accessor for TranscriptProtoQueryDataEnum);
    goto LABEL_7;
  }
  sub_240388AE4((uint64_t)v2, type metadata accessor for TranscriptProtoIdentifierQuery);
  sub_240388AE4((uint64_t)v1, type metadata accessor for TranscriptProtoIdentifierQuery);
  sub_240388AE4(v0, type metadata accessor for TranscriptProtoQueryDataEnum);
  v4 = 1;
  return v4 & 1;
}

void _s23LighthouseDataProcessor26TranscriptProtoPayloadEnumO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationPrePlannerResult;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t DecorationResult;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t StepResults;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t Step;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t matched;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;

  v249 = a1;
  v250 = (char *)a2;
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v199 = (char *)&v166 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  MEMORY[0x24BDAC7A8](v4);
  v198 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x24BDAC7A8](DecorationResult);
  v211 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x24BDAC7A8](v8);
  v197 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x24BDAC7A8](v10);
  v196 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v12);
  v209 = (char *)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v14);
  v208 = (char *)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoToolResolution(0);
  MEMORY[0x24BDAC7A8](v16);
  v207 = (char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v167);
  v210 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x24BDAC7A8](v19);
  v206 = (char *)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x24BDAC7A8](v21);
  v195 = (char *)&v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v23);
  v194 = (char *)&v166 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x24BDAC7A8](v25);
  v193 = (char *)&v166 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v27);
  v192 = (char *)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v29);
  v191 = (char *)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](v31);
  v205 = (char *)&v166 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x24BDAC7A8](v33);
  v189 = (char *)&v166 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x24BDAC7A8](v166);
  v190 = (char *)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x24BDAC7A8](matched);
  v188 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  MEMORY[0x24BDAC7A8](v168);
  v187 = (char *)&v166 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x24BDAC7A8](v38);
  v186 = (char *)&v166 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  MEMORY[0x24BDAC7A8](v40);
  v185 = (char *)&v166 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  MEMORY[0x24BDAC7A8](v42);
  v184 = (char *)&v166 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  MEMORY[0x24BDAC7A8](v44);
  v183 = (char *)&v166 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x24BDAC7A8](v46);
  v182 = (char *)&v166 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  MEMORY[0x24BDAC7A8](v48);
  v181 = (char *)&v166 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TranscriptProtoActionResponse(0);
  MEMORY[0x24BDAC7A8](v50);
  v204 = (char *)&v166 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x24BDAC7A8](StepResults);
  v180 = (char *)&v166 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x24BDAC7A8](v54);
  v203 = (char *)&v166 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v56);
  v179 = (char *)&v166 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x24BDAC7A8](v58);
  v202 = (char *)&v166 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x24BDAC7A8](v60);
  v201 = (char *)&v166 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v62);
  v178 = (char *)&v166 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x24BDAC7A8](v64);
  v177 = (char *)&v166 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x24BDAC7A8](Step);
  v176 = (char *)&v166 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v68);
  v175 = (char *)&v166 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v70);
  v174 = (char *)&v166 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x24BDAC7A8](v72);
  v200 = (char *)&v166 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v74);
  v173 = (char *)&v166 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v76);
  v172 = (char *)&v166 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x24BDAC7A8](v78);
  v171 = (char *)&v166 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x24BDAC7A8](v80);
  v170 = (char *)&v166 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v82 = MEMORY[0x24BDAC7A8](v248);
  v235 = (char *)&v166 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BDAC7A8](v82);
  v236 = (char *)&v166 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v246 = (char *)&v166 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v234 = (char *)&v166 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v233 = (char *)&v166 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v245 = (char *)&v166 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  v244 = (char *)&v166 - v95;
  v96 = MEMORY[0x24BDAC7A8](v94);
  v243 = (char *)&v166 - v97;
  v98 = MEMORY[0x24BDAC7A8](v96);
  v247 = (char *)&v166 - v99;
  v100 = MEMORY[0x24BDAC7A8](v98);
  v242 = (char *)&v166 - v101;
  v102 = MEMORY[0x24BDAC7A8](v100);
  v232 = (char *)&v166 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  v230 = (char *)&v166 - v105;
  v106 = MEMORY[0x24BDAC7A8](v104);
  v229 = (char *)&v166 - v107;
  v108 = MEMORY[0x24BDAC7A8](v106);
  v228 = (char *)&v166 - v109;
  v110 = MEMORY[0x24BDAC7A8](v108);
  v226 = (char *)&v166 - v111;
  v112 = MEMORY[0x24BDAC7A8](v110);
  v241 = (char *)&v166 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v224 = (char *)&v166 - v115;
  v116 = MEMORY[0x24BDAC7A8](v114);
  v231 = (char *)&v166 - v117;
  v118 = MEMORY[0x24BDAC7A8](v116);
  v227 = (char *)&v166 - v119;
  v120 = MEMORY[0x24BDAC7A8](v118);
  v225 = (char *)&v166 - v121;
  v122 = MEMORY[0x24BDAC7A8](v120);
  v222 = (char *)&v166 - v123;
  v124 = MEMORY[0x24BDAC7A8](v122);
  v223 = (char *)&v166 - v125;
  v126 = MEMORY[0x24BDAC7A8](v124);
  v221 = (char *)&v166 - v127;
  v128 = MEMORY[0x24BDAC7A8](v126);
  v220 = (char *)&v166 - v129;
  v130 = MEMORY[0x24BDAC7A8](v128);
  v219 = (char *)&v166 - v131;
  v132 = MEMORY[0x24BDAC7A8](v130);
  v218 = (char *)&v166 - v133;
  v134 = MEMORY[0x24BDAC7A8](v132);
  v240 = (char *)&v166 - v135;
  v136 = MEMORY[0x24BDAC7A8](v134);
  v217 = (char *)&v166 - v137;
  v138 = MEMORY[0x24BDAC7A8](v136);
  v239 = (char *)&v166 - v139;
  v140 = MEMORY[0x24BDAC7A8](v138);
  v216 = (char *)&v166 - v141;
  v142 = MEMORY[0x24BDAC7A8](v140);
  v238 = (char *)&v166 - v143;
  v144 = MEMORY[0x24BDAC7A8](v142);
  v237 = (char *)&v166 - v145;
  v146 = MEMORY[0x24BDAC7A8](v144);
  v215 = (char *)&v166 - v147;
  v148 = MEMORY[0x24BDAC7A8](v146);
  v149 = MEMORY[0x24BDAC7A8](v148);
  v214 = (char *)&v166 - v150;
  v151 = MEMORY[0x24BDAC7A8](v149);
  v213 = (char *)&v166 - v152;
  v153 = MEMORY[0x24BDAC7A8](v151);
  v212 = (char *)&v166 - v154;
  v155 = MEMORY[0x24BDAC7A8](v153);
  v156 = MEMORY[0x24BDAC7A8](v155);
  v157 = MEMORY[0x24BDAC7A8](v156);
  v158 = MEMORY[0x24BDAC7A8](v157);
  v159 = MEMORY[0x24BDAC7A8](v158);
  MEMORY[0x24BDAC7A8](v159);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDC8);
  v161 = MEMORY[0x24BDAC7A8](v160);
  v163 = (char *)&v166 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = (uint64_t)&v163[*(int *)(v161 + 48)];
  sub_2403AE1A4(v249, (uint64_t)v163, type metadata accessor for TranscriptProtoPayloadEnum);
  v249 = v164;
  sub_2403AE1A4((uint64_t)v250, v164, type metadata accessor for TranscriptProtoPayloadEnum);
  v250 = v163;
  v165 = (char *)sub_240538288 + 4 * word_2409013BE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240538288()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char started;
  uint64_t v6;
  unsigned __int8 *v7;

  v2 = *(_QWORD *)(v1 - 96);
  sub_2403AE1A4(v2, (uint64_t)v0, type metadata accessor for TranscriptProtoPayloadEnum);
  v3 = *(_QWORD *)(v1 - 104);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4((uint64_t)v0, type metadata accessor for TranscriptProtoSessionStart);
    sub_2403A97FC(v2, &qword_25700BDC8);
    started = 0;
  }
  else
  {
    v6 = v3;
    v7 = *(unsigned __int8 **)(v1 - 736);
    sub_2403A91CC(v6, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
    started = _s23LighthouseDataProcessor27TranscriptProtoSessionStartV2eeoiySbAC_ACtFZ_0(v0, v7);
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
    sub_240388AE4((uint64_t)v0, type metadata accessor for TranscriptProtoSessionStart);
    sub_240388AE4(v2, type metadata accessor for TranscriptProtoPayloadEnum);
  }
  return started & 1;
}

uint64_t type metadata accessor for TranscriptProtoQueryStepResults(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005F20);
}

uint64_t type metadata accessor for TranscriptProtoResponseDialog(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257005FB8);
}

uint64_t type metadata accessor for TranscriptProtoResponseOutput(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006058);
}

uint64_t type metadata accessor for TranscriptProtoDialogType(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006488);
}

uint64_t type metadata accessor for TranscriptProtoVisualOutputType(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570061B0);
}

uint64_t type metadata accessor for TranscriptProtoVisualOutput(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006100);
}

uint64_t type metadata accessor for TranscriptProtoLiveActivityOutputPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006240);
}

uint64_t type metadata accessor for TranscriptProtoInAppResponseOutputPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570062D0);
}

uint64_t type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006360);
}

uint64_t type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570063F0);
}

uint64_t type metadata accessor for TranscriptProtoDialogFormat(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006538);
}

uint64_t type metadata accessor for TranscriptProtoStaticText(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570065C8);
}

uint64_t type metadata accessor for TranscriptProtoSonicText(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006658);
}

uint64_t type metadata accessor for TranscriptProtoGeneratedText(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570066E8);
}

uint64_t type metadata accessor for TranscriptProtoResponseVisual(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570069F8);
}

uint64_t type metadata accessor for TranscriptProtoResponseParameter(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006950);
}

uint64_t type metadata accessor for TranscriptProtoUitype(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006B40);
}

uint64_t type metadata accessor for TranscriptProtoUIType(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006A90);
}

uint64_t type metadata accessor for TranscriptProtoLabel(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006C80);
}

uint64_t type metadata accessor for TranscriptProtoUILabel(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006BD0);
}

uint64_t type metadata accessor for TranscriptProtoUIConfirmationLabel(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006CE8);
}

uint64_t type metadata accessor for TranscriptProtoArchiveViewPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006D80);
}

uint64_t type metadata accessor for TranscriptProtoLiveActivityPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006E18);
}

uint64_t type metadata accessor for TranscriptProtoPluginSnippetPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006EA8);
}

uint64_t type metadata accessor for TranscriptProtoControlPayload(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257006F40);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolution(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257006FD0);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007850);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionInput(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007080);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007130);
}

uint64_t type metadata accessor for TranscriptProtoActionResolverRequest(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007250);
}

uint64_t type metadata accessor for TranscriptProtoParameterSet(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570075F8);
}

uint64_t type metadata accessor for TranscriptProtoContextRetrieved(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007300);
}

uint64_t type metadata accessor for TranscriptProtoRetrievedContextStatement(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007398);
}

uint64_t type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007438);
}

uint64_t type metadata accessor for TranscriptProtoSafetyModeException(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007568);
}

uint64_t type metadata accessor for TranscriptProtoParameter(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007688);
}

uint64_t type metadata accessor for TranscriptProtoClientInitiatedClientAction(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007728);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007900);
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007A20);
}

uint64_t type metadata accessor for TranscriptProtoVariableSetter(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007AB0);
}

uint64_t type metadata accessor for TranscriptProtoVariableStep(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007B48);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprCallVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007BE0);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprSayVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007C78);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprPickVariant(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257007D08);
}

uint64_t type metadata accessor for TranscriptProtoASTPickType(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008078);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007DA8);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007E38);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007EC8);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007F58);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008108);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570081A0);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570082C0);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatValue(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257008700);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008368);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570083F8);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprDotVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008488);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatAssignExpr(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257008520);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExpr(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2570085C0);
}

uint64_t type metadata accessor for TranscriptProtoAstflatExprEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008670);
}

uint64_t type metadata accessor for TranscriptProtoAstflatValueEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570087B0);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008840);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatValueDictVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570088D0);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008960);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570089F8);
}

uint64_t type metadata accessor for TranscriptProtoExpressionEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008B40);
}

uint64_t type metadata accessor for TranscriptProtoExpression(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257008A90);
}

uint64_t type metadata accessor for TranscriptProtoValueExpressionEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008C80);
}

uint64_t type metadata accessor for TranscriptProtoValueExpression(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257008BD0);
}

uint64_t type metadata accessor for TranscriptProtoValueExpressionArrayVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008D10);
}

uint64_t type metadata accessor for TranscriptProtoPrefixExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008DA0);
}

uint64_t type metadata accessor for TranscriptProtoInfixExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008E38);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008ED0);
}

uint64_t type metadata accessor for TranscriptProtoDotExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008F68);
}

uint64_t type metadata accessor for TranscriptProtoIndexExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009000);
}

uint64_t type metadata accessor for TranscriptProtoUpdateParametersExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009098);
}

uint64_t type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009130);
}

uint64_t type metadata accessor for TranscriptProtoCallExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570091C8);
}

uint64_t type metadata accessor for TranscriptProtoSayExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009260);
}

uint64_t type metadata accessor for TranscriptProtoPickExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570092F0);
}

uint64_t type metadata accessor for TranscriptProtoConfirmExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009388);
}

uint64_t type metadata accessor for TranscriptProtoSearchExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009418);
}

uint64_t type metadata accessor for TranscriptProtoPickOneExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570094B0);
}

uint64_t type metadata accessor for TranscriptProtoResolveToolExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009540);
}

uint64_t type metadata accessor for TranscriptProtoUndoExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570095D0);
}

uint64_t type metadata accessor for TranscriptProtoRejectExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009660);
}

uint64_t type metadata accessor for TranscriptProtoCancelExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570096F0);
}

uint64_t type metadata accessor for TranscriptProtoASTProgram(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570099C0);
}

uint64_t type metadata accessor for TranscriptProtoASTStmt(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009A50);
}

uint64_t type metadata accessor for TranscriptProtoASTExpr(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009F10);
}

uint64_t type metadata accessor for TranscriptProtoASTIfStmt(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257009AE0);
}

uint64_t type metadata accessor for TranscriptProtoASTBlockStmt(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009C20);
}

uint64_t type metadata accessor for TranscriptProtoASTForInStmt(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009B88);
}

uint64_t type metadata accessor for TranscriptProtoAstliteralEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009D60);
}

uint64_t type metadata accessor for TranscriptProtoASTLiteral(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257009CB0);
}

uint64_t type metadata accessor for TranscriptProtoASTLiteralArrayVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009DF0);
}

uint64_t type metadata accessor for TranscriptProtoASTLiteralDictVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009E80);
}

uint64_t type metadata accessor for TranscriptProtoASTExprPrefixVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009FA0);
}

uint64_t type metadata accessor for TranscriptProtoASTExprInfixVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A038);
}

uint64_t type metadata accessor for TranscriptProtoASTExprDotVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A0D0);
}

uint64_t type metadata accessor for TranscriptProtoASTExprIndexVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A168);
}

uint64_t type metadata accessor for TranscriptProtoASTExprCallVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A200);
}

uint64_t type metadata accessor for TranscriptProtoASTExprSayVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A298);
}

uint64_t type metadata accessor for TranscriptProtoASTExprPickVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A328);
}

uint64_t type metadata accessor for TranscriptProtoASTExprConfirmVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A3C0);
}

uint64_t type metadata accessor for TranscriptProtoASTExprUndoVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A450);
}

uint64_t type metadata accessor for TranscriptProtoASTExprCancelVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A4E0);
}

uint64_t type metadata accessor for TranscriptProtoASTExprSearchVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A570);
}

uint64_t type metadata accessor for TranscriptProtoASTExprPickOneVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A608);
}

uint64_t type metadata accessor for TranscriptProtoASTExprRejectVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A728);
}

uint64_t type metadata accessor for TranscriptProtoASTExprResolveToolVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A7B8);
}

uint64_t type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A8D8);
}

uint64_t type metadata accessor for TranscriptProtoASTUpdateExpr(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700AA00);
}

uint64_t type metadata accessor for TranscriptProtoToolParameterValueEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700AB48);
}

uint64_t type metadata accessor for TranscriptProtoEntitySpanMatchResult(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700ABD8);
}

uint64_t type metadata accessor for TranscriptProtoToolRetrievalResponse(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700AC68);
}

uint64_t type metadata accessor for TranscriptProtoSystemResponse(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700AD08);
}

uint64_t type metadata accessor for TranscriptProtoInterpretedStatementResult(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700ADB8);
}

uint64_t type metadata accessor for TranscriptProtoProgramStatement(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700AE60);
}

uint64_t type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700AF98);
}

uint64_t type metadata accessor for TranscriptProtoToolResolution(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700B160);
}

uint64_t type metadata accessor for TranscriptProtoUndoRedoRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B200);
}

uint64_t type metadata accessor for TranscriptProtoClientUndoRedoRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B2A0);
}

uint64_t type metadata accessor for TranscriptProtoTypeConversionRequest(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B340);
}

uint64_t type metadata accessor for TranscriptProtoTypeConversionResult(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B3D8);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationResult(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B470);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700B510);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700B910);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B5B0);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B640);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B6D0);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B760);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B7F0);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B880);
}

uint64_t type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700B9C0);
}

uint64_t type metadata accessor for TranscriptProtoTextQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700BA50);
}

uint64_t type metadata accessor for TranscriptProtoExternalAgentTextQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700BAF0);
}

uint64_t type metadata accessor for TranscriptProtoSpeechQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700BB88);
}

uint64_t type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700BC20);
}

unint64_t sub_24053A378()
{
  unint64_t result;

  result = qword_257002178;
  if (!qword_257002178)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoCandidateSource, &type metadata for TranscriptProtoCandidateSource);
    atomic_store(result, (unint64_t *)&qword_257002178);
  }
  return result;
}

uint64_t sub_24053A3BC()
{
  return sub_2403C2930(&qword_257002180, &qword_257002188);
}

unint64_t sub_24053A3E4()
{
  unint64_t result;

  result = qword_257002190;
  if (!qword_257002190)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_257002190);
  }
  return result;
}

uint64_t sub_24053A428()
{
  return sub_2403C2930(&qword_257002198, &qword_2570021A0);
}

unint64_t sub_24053A450()
{
  unint64_t result;

  result = qword_2570021A8;
  if (!qword_2570021A8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPlanSource, &type metadata for TranscriptProtoPlanSource);
    atomic_store(result, (unint64_t *)&qword_2570021A8);
  }
  return result;
}

uint64_t sub_24053A494()
{
  return sub_2403C2930(&qword_2570021B0, &qword_2570021B8);
}

unint64_t sub_24053A4BC()
{
  unint64_t result;

  result = qword_2570021C0;
  if (!qword_2570021C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoQueryOperator, &type metadata for TranscriptProtoQueryOperator);
    atomic_store(result, (unint64_t *)&qword_2570021C0);
  }
  return result;
}

uint64_t sub_24053A500()
{
  return sub_2403C2930(&qword_2570021C8, &qword_2570021D0);
}

unint64_t sub_24053A528()
{
  unint64_t result;

  result = qword_2570021D8;
  if (!qword_2570021D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseType, &type metadata for TranscriptProtoResponseType);
    atomic_store(result, (unint64_t *)&qword_2570021D8);
  }
  return result;
}

uint64_t sub_24053A56C()
{
  return sub_2403C2930(&qword_2570021E0, &qword_2570021E8);
}

unint64_t sub_24053A594()
{
  unint64_t result;

  result = qword_2570021F0;
  if (!qword_2570021F0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoResponseDialogPresentationHint, &type metadata for TranscriptProtoResponseDialogPresentationHint);
    atomic_store(result, (unint64_t *)&qword_2570021F0);
  }
  return result;
}

uint64_t sub_24053A5D8()
{
  return sub_2403C2930(&qword_2570021F8, &qword_257002200);
}

unint64_t sub_24053A600()
{
  unint64_t result;

  result = qword_257002208;
  if (!qword_257002208)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTUpdateKind, &type metadata for TranscriptProtoASTUpdateKind);
    atomic_store(result, (unint64_t *)&qword_257002208);
  }
  return result;
}

uint64_t sub_24053A644()
{
  return sub_2403C2930(&qword_257002210, &qword_257002218);
}

unint64_t sub_24053A66C()
{
  unint64_t result;

  result = qword_257002220;
  if (!qword_257002220)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPrefixExpression_PrefixOp, &type metadata for TranscriptProtoPrefixExpression_PrefixOp);
    atomic_store(result, (unint64_t *)&qword_257002220);
  }
  return result;
}

uint64_t sub_24053A6B0()
{
  return sub_2403C2930(&qword_257002228, &qword_257002230);
}

unint64_t sub_24053A6D8()
{
  unint64_t result;

  result = qword_257002238;
  if (!qword_257002238)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoInfixExpression_InfixOp, &type metadata for TranscriptProtoInfixExpression_InfixOp);
    atomic_store(result, (unint64_t *)&qword_257002238);
  }
  return result;
}

uint64_t sub_24053A71C()
{
  return sub_2403C2930(&qword_257002240, &qword_257002248);
}

unint64_t sub_24053A744()
{
  unint64_t result;

  result = qword_257002250;
  if (!qword_257002250)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTInfixOp, &type metadata for TranscriptProtoASTInfixOp);
    atomic_store(result, (unint64_t *)&qword_257002250);
  }
  return result;
}

uint64_t sub_24053A788()
{
  return sub_2403C2930(&qword_257002258, &qword_257002260);
}

unint64_t sub_24053A7B0()
{
  unint64_t result;

  result = qword_257002268;
  if (!qword_257002268)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoASTPrefixOp, &type metadata for TranscriptProtoASTPrefixOp);
    atomic_store(result, (unint64_t *)&qword_257002268);
  }
  return result;
}

uint64_t sub_24053A7F4()
{
  return sub_2403C2930(&qword_257002270, &qword_257002278);
}

unint64_t sub_24053A81C()
{
  unint64_t result;

  result = qword_257002280;
  if (!qword_257002280)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateKind, &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind);
    atomic_store(result, (unint64_t *)&qword_257002280);
  }
  return result;
}

uint64_t sub_24053A860()
{
  return sub_2403C2930(&qword_257002288, &qword_257002290);
}

unint64_t sub_24053A888()
{
  unint64_t result;

  result = qword_257002298;
  if (!qword_257002298)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoUndoOperation, &type metadata for TranscriptProtoUndoOperation);
    atomic_store(result, (unint64_t *)&qword_257002298);
  }
  return result;
}

uint64_t sub_24053A8CC()
{
  return sub_2403C2930(&qword_2570022A0, &qword_2570022A8);
}

unint64_t sub_24053A8F4()
{
  unint64_t result;

  result = qword_2570022B0;
  if (!qword_2570022B0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum, &type metadata for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum);
    atomic_store(result, (unint64_t *)&qword_2570022B0);
  }
  return result;
}

unint64_t sub_24053A93C()
{
  unint64_t result;

  result = qword_2570022B8;
  if (!qword_2570022B8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoAppRequirementEnum, &type metadata for TranscriptProtoAppRequirementEnum);
    atomic_store(result, (unint64_t *)&qword_2570022B8);
  }
  return result;
}

unint64_t sub_24053A984()
{
  unint64_t result;

  result = qword_2570022C0;
  if (!qword_2570022C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPermissionRequirementEnum, &type metadata for TranscriptProtoPermissionRequirementEnum);
    atomic_store(result, (unint64_t *)&qword_2570022C0);
  }
  return result;
}

unint64_t sub_24053A9CC()
{
  unint64_t result;

  result = qword_2570022C8;
  if (!qword_2570022C8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoParameterNotAllowed.Reason, &type metadata for TranscriptProtoParameterNotAllowed.Reason);
    atomic_store(result, (unint64_t *)&qword_2570022C8);
  }
  return result;
}

uint64_t sub_24053AA10()
{
  return sub_2403C2930(&qword_2570022D0, &qword_2570022D8);
}

ValueMetadata *type metadata accessor for TranscriptProtoCandidateSource()
{
  return &type metadata for TranscriptProtoCandidateSource;
}

ValueMetadata *type metadata accessor for TranscriptProtoSystemRequirement()
{
  return &type metadata for TranscriptProtoSystemRequirement;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24053AAAC + 4 * byte_24090141F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24053AAE0 + 4 * byte_24090141A[v4]))();
}

uint64_t sub_24053AAE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053AAE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24053AAF0);
  return result;
}

uint64_t sub_24053AAFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24053AB04);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24053AB08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053AB10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoPlanSource()
{
  return &type metadata for TranscriptProtoPlanSource;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryOperator(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryOperator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_24053AC08 + 4 * byte_240901429[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_24053AC3C + 4 * byte_240901424[v4]))();
}

uint64_t sub_24053AC3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053AC44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24053AC4CLL);
  return result;
}

uint64_t sub_24053AC58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24053AC60);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_24053AC64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053AC6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoQueryOperator()
{
  return &type metadata for TranscriptProtoQueryOperator;
}

ValueMetadata *type metadata accessor for TranscriptProtoResponseType()
{
  return &type metadata for TranscriptProtoResponseType;
}

ValueMetadata *type metadata accessor for TranscriptProtoResponseDialogPresentationHint()
{
  return &type metadata for TranscriptProtoResponseDialogPresentationHint;
}

ValueMetadata *type metadata accessor for TranscriptProtoASTUpdateKind()
{
  return &type metadata for TranscriptProtoASTUpdateKind;
}

ValueMetadata *type metadata accessor for TranscriptProtoPrefixExpression_PrefixOp()
{
  return &type metadata for TranscriptProtoPrefixExpression_PrefixOp;
}

ValueMetadata *type metadata accessor for TranscriptProtoInfixExpression_InfixOp()
{
  return &type metadata for TranscriptProtoInfixExpression_InfixOp;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoInfixExpression_InfixOpOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoInfixExpression_InfixOpOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_24053ADC0 + 4 * byte_240901433[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_24053ADF4 + 4 * byte_24090142E[v4]))();
}

uint64_t sub_24053ADF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053ADFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24053AE04);
  return result;
}

uint64_t sub_24053AE10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24053AE18);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_24053AE1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24053AE24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoASTInfixOp()
{
  return &type metadata for TranscriptProtoASTInfixOp;
}

ValueMetadata *type metadata accessor for TranscriptProtoASTPrefixOp()
{
  return &type metadata for TranscriptProtoASTPrefixOp;
}

ValueMetadata *type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateKind()
{
  return &type metadata for TranscriptProtoUpdateParameterExpression_UpdateKind;
}

ValueMetadata *type metadata accessor for TranscriptProtoUndoOperation()
{
  return &type metadata for TranscriptProtoUndoOperation;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unsigned int (**v53)(const void *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  void (*v62)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(_QWORD *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(_QWORD *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t Step;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(_QWORD *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(_QWORD *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  void (*v114)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(uint64_t *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t StepResults;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(_QWORD *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(_QWORD *, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  void (*v150)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v151;
  _BYTE *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  void (*v161)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  void (*v169)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  uint64_t v176;
  void (*v177)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  uint64_t v184;
  void (*v185)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unsigned int (*v191)(_BYTE *, uint64_t, uint64_t);
  uint64_t v192;
  _BYTE *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _BYTE *v198;
  _BYTE *v199;
  uint64_t v200;
  void (*v201)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  uint64_t v213;
  int *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  unsigned int (*v221)(char *, uint64_t, uint64_t);
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  unsigned int (*v231)(_QWORD *, uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  unsigned int (*v234)(_QWORD *, uint64_t, uint64_t);
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _BYTE *v239;
  int *v240;
  uint64_t v241;
  _QWORD *v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  unsigned int (*v246)(_QWORD *, uint64_t, uint64_t);
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _BYTE *v250;
  _BYTE *v251;
  uint64_t v252;
  void (*v253)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v254;
  _BYTE *v255;
  uint64_t v256;
  uint64_t v257;
  unsigned int (**v258)(_BYTE *, uint64_t, uint64_t);
  uint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int (*v268)(_QWORD *, uint64_t, uint64_t);
  uint64_t v269;
  uint64_t v270;
  int *v271;
  uint64_t v272;
  _QWORD *v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  unsigned int (*v277)(_BYTE *, uint64_t, uint64_t);
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _BYTE *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _BYTE *v286;
  uint64_t v287;
  _BYTE *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  _QWORD *v293;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v295;
  unsigned int (*v296)(_QWORD *, uint64_t, uint64_t);
  uint64_t v297;
  uint64_t v298;
  int *DecorationPrePlannerResult;
  uint64_t v300;
  _QWORD *v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int (*v305)(_QWORD *, uint64_t, uint64_t);
  uint64_t v306;
  int *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void (*v313)(char *, char *, uint64_t);
  uint64_t v314;
  _QWORD *v315;
  _QWORD *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  void (*v325)(char *, char *, uint64_t);
  uint64_t v326;
  _QWORD *v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  _BYTE *v331;
  _BYTE *v332;
  uint64_t v333;
  void (*v334)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  void (*v343)(char *, char *, uint64_t);
  uint64_t v344;
  _QWORD *v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  _QWORD *v353;
  _QWORD *v354;
  uint64_t v355;
  uint64_t v356;
  _BYTE *v357;
  _BYTE *v358;
  uint64_t v359;
  void (*v360)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  char *v365;
  uint64_t v366;
  void (*v367)(char *, char *, uint64_t);
  uint64_t v368;
  _BYTE *v369;
  _BYTE *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  void (*v377)(char *, char *, uint64_t);
  char *v378;
  uint64_t v379;
  _BYTE *v380;
  _BYTE *v381;
  uint64_t v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _BYTE *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  void (*v396)(char *, char *, uint64_t);
  char *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  void (*v402)(char *, char *, uint64_t);
  char *v403;
  uint64_t v404;
  _QWORD *v405;
  _QWORD *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _BYTE *v412;
  _BYTE *v413;
  uint64_t v414;
  void (*v415)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  _BYTE *v421;
  _QWORD *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  unsigned int (**v427)(const void *, uint64_t, uint64_t);
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  void (*v435)(char *, char *, uint64_t);
  uint64_t v436;
  uint64_t v437;
  _BYTE *v438;
  _BYTE *v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  int *v445;
  char *v446;
  char *v447;
  uint64_t v448;
  void (*v449)(char *, char *, uint64_t);
  char *v450;
  uint64_t v451;
  char *v452;
  char *v453;
  uint64_t v454;
  unsigned int (**v455)(const void *, uint64_t, uint64_t);
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  _BYTE *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t *v466;
  uint64_t v467;
  uint64_t v468;
  unsigned int (*v469)(uint64_t *, uint64_t, uint64_t);
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  char *v473;
  _BYTE *v474;
  uint64_t v475;
  void (*v476)(char *, char *, uint64_t);
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  _QWORD *v480;
  _BYTE *v481;
  _QWORD *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  char *v486;
  uint64_t v487;
  void (*v488)(char *, char *, uint64_t);
  char *v489;
  uint64_t v490;
  _QWORD *v491;
  _QWORD *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  _BYTE *v496;
  _BYTE *v497;
  uint64_t v498;
  int *v499;
  uint64_t v500;
  _QWORD *v501;
  uint64_t *v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _BYTE *v508;
  _BYTE *v509;
  uint64_t v510;
  int *v511;
  uint64_t v512;
  _QWORD *v513;
  _QWORD *v514;
  uint64_t v515;
  uint64_t v516;
  unsigned int (*v517)(_BYTE *, uint64_t, uint64_t);
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t v524;
  void (*v525)(char *, char *, uint64_t);
  uint64_t v526;
  _BYTE *v527;
  _BYTE *v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  int *v532;
  char *v533;
  char *v534;
  uint64_t v535;
  void (*v536)(char *, char *, uint64_t);
  char *v537;
  uint64_t v538;
  char *v539;
  char *v540;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  _DWORD *v546;
  _DWORD *v547;
  uint64_t v548;
  uint64_t v549;
  unsigned int (*v550)(_DWORD *, uint64_t, uint64_t);
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  char *v555;
  uint64_t v556;
  void (*v557)(char *, char *, uint64_t);
  char *v558;
  uint64_t v559;
  _BYTE *v560;
  _BYTE *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  char *v565;
  char *v566;
  uint64_t v567;
  uint64_t v568;
  void (*v569)(char *, char *, uint64_t);
  char *v570;
  uint64_t v571;
  _BYTE *v572;
  _BYTE *v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  char *v579;
  char *v580;
  uint64_t v581;
  uint64_t v582;
  void (*v583)(char *, char *, uint64_t);
  char *v584;
  uint64_t v585;
  _BYTE *v586;
  _BYTE *v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  uint64_t v593;
  uint64_t v594;
  void (*v595)(char *, char *, uint64_t);
  char *v596;
  uint64_t v597;
  _BYTE *v598;
  _BYTE *v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  char *v603;
  char *v604;
  uint64_t v605;
  uint64_t v606;
  _QWORD *v607;
  _QWORD *v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  char *v614;
  char *v615;
  uint64_t v616;
  void (*v617)(char *, char *, uint64_t);
  char *v618;
  uint64_t v619;
  _QWORD *v620;
  _QWORD *v621;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  char *v627;
  uint64_t v628;
  void (*v629)(char *, char *, uint64_t);
  char *v630;
  uint64_t v631;
  _BYTE *v632;
  _BYTE *v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  uint64_t v638;
  char *v639;
  uint64_t v640;
  void (*v641)(char *, char *, uint64_t);
  char *v642;
  char *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  void (*v649)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v650;
  uint64_t v651;
  _BYTE *v652;
  _BYTE *v653;
  uint64_t v654;
  uint64_t v655;
  _BYTE *v656;
  _BYTE *v657;
  uint64_t v658;
  int EnumCaseMultiPayload;
  uint64_t v660;
  uint64_t v661;
  char *v662;
  char *v663;
  uint64_t v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  char *v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  char *v672;
  uint64_t v673;
  _BYTE *v674;
  int *v675;
  uint64_t v676;
  _BYTE *v677;
  _QWORD *v678;
  _QWORD *v679;
  uint64_t v680;
  uint64_t v681;
  _QWORD *v682;
  _QWORD *v683;
  uint64_t v684;
  _QWORD *v685;
  unsigned int (*v686)(_QWORD *, uint64_t, uint64_t);
  uint64_t v687;
  uint64_t v688;
  char *v689;
  char *v690;
  uint64_t v691;
  uint64_t v692;
  char *v693;
  char *v694;
  uint64_t v695;
  uint64_t v696;
  _BYTE *v697;
  _BYTE *v698;
  uint64_t v699;
  char *v700;
  char *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  _QWORD *v708;
  uint64_t v709;
  uint64_t v710;
  char *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  char *v716;
  uint64_t v717;
  uint64_t v718;
  char *v719;
  char *v720;
  uint64_t v721;
  uint64_t v722;
  _QWORD *v723;
  _QWORD *v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  char *v731;
  uint64_t v732;
  uint64_t v733;
  void (*v734)(char *, char *, uint64_t);
  uint64_t v735;
  _QWORD *v736;
  _QWORD *v737;
  uint64_t v738;
  unsigned int (**v739)(_QWORD *, uint64_t, uint64_t);
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  int v744;
  _QWORD *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  _QWORD *v749;
  _QWORD *v750;
  _QWORD *v751;
  uint64_t v752;
  uint64_t v753;
  char *v754;
  uint64_t v755;
  uint64_t v756;
  void (*v757)(char *, char *, uint64_t);
  uint64_t v758;
  void (**v759)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v760;
  char *v761;
  char *v762;
  uint64_t v763;
  uint64_t v764;
  char *v765;
  char *v766;
  uint64_t v767;
  uint64_t v768;
  _QWORD *v769;
  _QWORD *v770;
  uint64_t v771;
  uint64_t v772;
  _QWORD *v773;
  _QWORD *v774;
  uint64_t v775;
  uint64_t v776;
  unsigned int (*v777)(_QWORD *, uint64_t, uint64_t);
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  char *v782;
  char *v783;
  uint64_t v784;
  void (*v785)(char *, char *, uint64_t);
  uint64_t v786;
  _QWORD *v787;
  _QWORD *v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  int v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  void (*v802)(char *, char *, uint64_t);
  uint64_t v803;
  char *v804;
  char *v805;
  uint64_t v806;
  uint64_t v807;
  _QWORD *v808;
  _QWORD *v809;
  uint64_t v810;
  uint64_t v811;
  unsigned int (*v812)(_QWORD, _QWORD, _QWORD);
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  _QWORD *v819;
  uint64_t v820;
  unsigned int (*v821)(_QWORD *, uint64_t, uint64_t);
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  char *v825;
  char *v826;
  uint64_t v827;
  uint64_t v828;
  char *v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  _QWORD *v833;
  _QWORD *v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  _QWORD *v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  char *v846;
  char *v847;
  uint64_t v848;
  uint64_t v849;
  char *v850;
  char *v851;
  uint64_t v852;
  uint64_t v853;
  _BYTE *v854;
  _BYTE *v855;
  uint64_t v856;
  uint64_t v857;
  _QWORD *v858;
  _QWORD *v859;
  uint64_t v860;
  uint64_t v861;
  unsigned int (*v862)(_BYTE *, uint64_t, uint64_t);
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  uint64_t v867;
  uint64_t v868;
  void (*v869)(char *, char *, uint64_t);
  char *v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  char *v876;
  uint64_t v877;
  uint64_t v878;
  void (*v879)(char *, char *, uint64_t);
  char *v880;
  uint64_t v881;
  _BYTE *v882;
  _BYTE *v883;
  uint64_t v884;
  uint64_t v885;
  char *v886;
  char *v887;
  uint64_t v888;
  uint64_t v889;
  _BYTE *v890;
  _BYTE *v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  void (*v896)(char *, char *, uint64_t);
  uint64_t v897;
  char *v898;
  char *v899;
  uint64_t v900;
  char *v901;
  uint64_t v902;
  char *v903;
  char *v904;
  uint64_t v905;
  uint64_t v906;
  _BYTE *v907;
  _BYTE *v908;
  uint64_t v909;
  uint64_t v910;
  _BYTE *v911;
  _BYTE *v912;
  uint64_t v913;
  uint64_t v914;
  char *v915;
  char *v916;
  char *v917;
  uint64_t v918;
  uint64_t v919;
  char *v920;
  char *v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  char *v927;
  uint64_t v928;
  char *v929;
  char *v930;
  uint64_t v931;
  uint64_t v932;
  _QWORD *v933;
  _QWORD *v934;
  uint64_t v935;
  uint64_t v936;
  _QWORD *v937;
  _QWORD *v938;
  uint64_t v939;
  uint64_t v940;
  unsigned int (*v941)(_QWORD *, uint64_t, uint64_t);
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  char *v945;
  uint64_t v946;
  void (*v947)(char *, char *, uint64_t);
  uint64_t v948;
  uint64_t v949;
  _BYTE *v950;
  _BYTE *v951;
  uint64_t v952;
  uint64_t v953;
  _BYTE *v954;
  _BYTE *v955;
  uint64_t v956;
  int *v957;
  uint64_t v958;
  _QWORD *v959;
  _QWORD *v960;
  uint64_t v961;
  uint64_t v962;
  _QWORD *v963;
  _QWORD *v964;
  uint64_t v965;
  uint64_t v966;
  unsigned int (*v967)(_QWORD *, uint64_t, uint64_t);
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  char *v971;
  uint64_t v972;
  uint64_t v973;
  void (*v974)(char *, char *, uint64_t);
  uint64_t v975;
  uint64_t v976;
  _BYTE *v977;
  _BYTE *v978;
  uint64_t v979;
  uint64_t v980;
  char *v981;
  char *v982;
  uint64_t v983;
  uint64_t v984;
  _QWORD *v985;
  _QWORD *v986;
  int *v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  char *v991;
  char *v992;
  uint64_t v993;
  unsigned int (*v994)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v995)(_QWORD, _QWORD, _QWORD);
  char *v996;
  uint64_t v997;
  char *v998;
  uint64_t v999;
  uint64_t v1000;
  char *v1001;
  uint64_t v1002;
  char *v1003;
  uint64_t v1004;
  char *v1005;
  uint64_t v1006;
  char *v1007;
  uint64_t v1008;
  char *v1009;
  char *v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  char *v1014;
  char *v1015;
  uint64_t v1016;
  char *v1017;
  uint64_t v1018;
  char *v1019;
  uint64_t v1020;
  uint64_t v1021;
  char *v1022;
  char *v1023;
  uint64_t v1024;
  uint64_t v1025;
  _QWORD *v1026;
  _BYTE *v1027;
  _QWORD *v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  char *v1034;
  uint64_t v1035;
  void (*v1036)(char *, char *, uint64_t);
  uint64_t v1037;
  _QWORD *v1038;
  _BYTE *v1039;
  _QWORD *v1040;
  uint64_t v1041;
  uint64_t v1042;
  _BYTE *v1043;
  _BYTE *v1044;
  uint64_t v1045;
  void (*v1046)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v1047;
  uint64_t v1048;
  char *v1049;
  char *v1050;
  uint64_t v1051;
  uint64_t v1052;
  _BYTE *v1053;
  _BYTE *v1054;
  uint64_t v1055;
  uint64_t v1056;
  _BYTE *v1057;
  _BYTE *v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  _QWORD *v1062;
  _QWORD *v1063;
  uint64_t v1064;
  _QWORD *v1065;
  _QWORD *v1066;
  uint64_t v1067;
  uint64_t v1068;
  unsigned int (*v1069)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  char *v1073;
  char *v1074;
  uint64_t v1075;
  uint64_t v1076;
  unsigned int (*v1077)(char *, uint64_t, uint64_t);
  uint64_t v1078;
  uint64_t v1079;
  char *v1080;
  char *v1081;
  uint64_t v1082;
  uint64_t v1083;
  char *v1084;
  char *v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  _QWORD *v1090;
  _QWORD *v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  uint64_t v1096;
  _QWORD *v1097;
  char *v1098;
  char *v1099;
  uint64_t v1100;
  void (*v1101)(char *, char *, uint64_t);
  uint64_t v1102;
  uint64_t v1103;
  _QWORD *v1104;
  _QWORD *v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  char *v1110;
  char *v1111;
  uint64_t v1112;
  uint64_t v1113;
  char *v1114;
  char *v1115;
  uint64_t v1116;
  uint64_t v1118;
  uint64_t v1119;
  char *v1120;
  char *v1121;
  uint64_t v1122;
  char *v1123;
  uint64_t v1124;
  char *v1125;
  char *v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  int *v1130;
  uint64_t v1131;
  char *v1132;
  char *v1133;
  uint64_t v1134;
  uint64_t (*v1135)(char *, uint64_t, uint64_t);
  uint64_t v1136;
  int v1137;
  _QWORD *v1138;
  int *v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  void (*v1147)(char *, char *, uint64_t);
  uint64_t v1148;
  char *v1149;
  char *v1150;
  _QWORD *v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  char *v1157;
  uint64_t v1158;
  void (*v1159)(char *, char *, uint64_t);
  uint64_t v1160;
  char *v1161;
  _QWORD *v1162;
  char *v1163;
  uint64_t v1164;
  uint64_t v1165;
  char *v1166;
  _QWORD *v1167;
  uint64_t v1168;
  uint64_t v1169;
  char *v1170;
  uint64_t v1171;
  void (*v1172)(char *, char *, uint64_t);
  uint64_t v1173;
  char *v1174;
  char *v1175;
  uint64_t v1176;
  int *v1177;
  uint64_t v1178;
  _QWORD *v1179;
  _QWORD *v1180;
  uint64_t v1181;
  unsigned int (*v1182)(_BYTE *, uint64_t, uint64_t);
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  char *v1187;
  uint64_t v1188;
  uint64_t v1189;
  void (*v1190)(char *, char *, uint64_t);
  char *v1191;
  uint64_t v1192;
  _QWORD *v1193;
  _QWORD *v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  char *v1199;
  uint64_t v1200;
  uint64_t v1201;
  void (*v1202)(char *, char *, uint64_t);
  char *v1203;
  uint64_t v1204;
  _QWORD *v1205;
  _QWORD *v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  char *v1210;
  uint64_t v1211;
  char *v1212;
  uint64_t v1213;
  uint64_t v1214;
  void (*v1215)(char *, char *, uint64_t);
  char *v1216;
  uint64_t v1217;
  _BYTE *v1218;
  _BYTE *v1219;
  uint64_t v1220;
  char *v1221;
  char *v1222;
  _QWORD *v1223;
  _QWORD *v1224;
  char *v1225;
  uint64_t v1226;
  uint64_t v1227;
  unsigned int (**v1228)(const void *, uint64_t, uint64_t);
  _QWORD *v1229;
  _QWORD *v1230;
  _QWORD *v1231;
  char *v1232;
  char *v1233;
  void (**v1234)(char *, _QWORD, uint64_t, int *);
  void *v1235;
  void *v1236;
  char *v1237;
  _QWORD *v1238;
  _QWORD *v1239;
  void *v1240;
  int *__src;
  unsigned int (*__srcd)(_QWORD *, uint64_t, uint64_t);
  void *__srca;
  char *__srce;
  void *__srcb;
  unsigned int (*__srcf)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__srcc;
  char *__srcg;
  char *v1249;
  uint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  uint64_t v1253;
  uint64_t v1254;
  char *v1255;
  char *v1256;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstj;
  unsigned int (**__dstc)(const void *, uint64_t, uint64_t);
  _BYTE *__dstk;
  void *__dstd;
  char *__dstl;
  char *__dstm;
  unsigned int (**__dste)(const void *, uint64_t, uint64_t);
  _BYTE *__dstn;
  void *__dstf;
  unsigned int (*__dstg)(_QWORD *, uint64_t, uint64_t);
  char *__dsto;
  char *__dstp;
  char *__dstq;
  char *__dsth;
  char *__dstr;
  void *__dsti;
  uint64_t v1276;
  _BYTE *v1277;
  int *v1278;
  _BYTE *v1279;
  _BYTE *v1280;
  _BYTE *v1281;
  uint64_t v1282;
  int *v1283;
  int *v1284;
  uint64_t v1285;
  uint64_t DecorationResult;
  char *v1287;
  int *v1288;
  char *v1289;
  int *v1290;
  char *v1291;
  int *v1292;
  int *v1293;
  char *v1294;
  int *v1295;
  _BYTE *v1296;
  char *v1297;
  char *v1298;
  int *v1299;
  char *v1300;
  uint64_t v1301;
  uint64_t v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  _BYTE *v1322;
  _BYTE *v1323;
  _BYTE *v1324;
  _BYTE *v1325;
  _BYTE *v1326;
  _BYTE *v1327;
  _BYTE *v1328;
  _BYTE *v1329;
  _BYTE *v1330;
  _BYTE *v1331;
  _BYTE *v1332;
  _BYTE *v1333;
  _BYTE *v1334;
  _BYTE *v1335;
  _BYTE *v1336;
  _BYTE *v1337;
  _BYTE *v1338;
  _BYTE *v1339;
  _BYTE *v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  uint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  unsigned int (*v1371)(_BYTE *, uint64_t, uint64_t);
  uint64_t v1372;
  _BYTE *v1373;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v16 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return v16;
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = a3[11];
  v1373 = (char *)a1 + v11;
  v12 = (char *)a2 + v11;
  a1[12] = a2[12];
  v13 = type metadata accessor for TranscriptProtoPayload(0);
  v14 = *(_QWORD *)(v13 - 8);
  v1371 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v1371(v12, 1, v13))
  {
    v20 = v1373;
    v1370 = v14;
    v21 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v1372 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1372 + 48))(v12, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v17 = a2;
      v16 = a1;
      v18 = a3;
LABEL_295:
      v1056 = *(int *)(v13 + 20);
      v1057 = &v20[v1056];
      v1058 = &v12[v1056];
      v1059 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1059 - 8) + 16))(v1057, v1058, v1059);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_296;
    }
    v17 = a2;
    v16 = a1;
    v18 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v1341 = v21;
        v1301 = v13;
        *v1373 = *v12;
        v23 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v24 = v23[5];
        v25 = &v1373[v24];
        v1322 = v12;
        v26 = &v12[v24];
        v27 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v307 = v23;
          v308 = v26[1];
          *v25 = *v26;
          v25[1] = v308;
          v309 = v26[3];
          v25[2] = v26[2];
          v25[3] = v309;
          v310 = v26[5];
          v25[4] = v26[4];
          v25[5] = v310;
          v311 = *(int *)(v27 + 28);
          __dstj = (char *)v26 + v311;
          v1287 = (char *)v25 + v311;
          v312 = sub_2408E57A4();
          v313 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v312 - 8) + 16);
          v23 = v307;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v313(v1287, __dstj, v312);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v314 = v23[6];
        v20 = v1373;
        v315 = &v1373[v314];
        v12 = v1322;
        v316 = &v1322[v314];
        v317 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        v318 = *(_QWORD *)(v317 - 8);
        v21 = v1341;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v318 + 48))(v316, 1, v317))
        {
          v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
          memcpy(v315, v316, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
        }
        else
        {
          v1292 = v23;
          v544 = v316[1];
          *v315 = *v316;
          v315[1] = v544;
          v545 = *(int *)(v317 + 20);
          v546 = (_DWORD *)((char *)v315 + v545);
          v547 = (_DWORD *)((char *)v316 + v545);
          v548 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          v549 = *(_QWORD *)(v548 - 8);
          v550 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v549 + 48);
          swift_bridgeObjectRetain();
          if (v550(v547, 1, v548))
          {
            v551 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
            memcpy(v546, v547, *(_QWORD *)(*(_QWORD *)(v551 - 8) + 64));
          }
          else
          {
            *v546 = *v547;
            v688 = *(int *)(v548 + 20);
            v689 = (char *)v546 + v688;
            v690 = (char *)v547 + v688;
            v691 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v691 - 8) + 16))(v689, v690, v691);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v549 + 56))(v546, 0, 1, v548);
          }
          v21 = v1341;
          v14 = v1370;
          v692 = *(int *)(v317 + 24);
          v693 = (char *)v315 + v692;
          v694 = (char *)v316 + v692;
          v695 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v695 - 8) + 16))(v693, v694, v695);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v318 + 56))(v315, 0, 1, v317);
          v20 = v1373;
          v12 = v1322;
          v23 = v1292;
        }
        v696 = v23[7];
        v697 = &v20[v696];
        v698 = &v12[v696];
        v699 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v699 - 8) + 16))(v697, v698, v699);
        goto LABEL_290;
      case 1u:
        v1342 = v21;
        v1302 = v13;
        v30 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v30;
        v1373[16] = v12[16];
        v31 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v32 = v31[6];
        v33 = &v1373[v32];
        v1323 = v12;
        v34 = &v12[v32];
        v35 = type metadata accessor for TranscriptProtoStatementID(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48);
        swift_bridgeObjectRetain();
        if (v37(v34, 1, v35))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v33 = *(_DWORD *)v34;
          v320 = v34[2];
          v33[1] = v34[1];
          v33[2] = v320;
          v321 = *(int *)(v35 + 24);
          v322 = (char *)v33 + v321;
          v323 = (char *)v34 + v321;
          v324 = sub_2408E57A4();
          v325 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 16);
          swift_bridgeObjectRetain();
          v325(v322, v323, v324);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v17 = a2;
        v326 = v31[7];
        v327 = &v1373[v326];
        v328 = &v1323[v326];
        v329 = v328[1];
        *v327 = *v328;
        v327[1] = v329;
        v330 = v31[8];
        v331 = &v1373[v330];
        v332 = &v1323[v330];
        v333 = sub_2408E57A4();
        v334 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v333 - 8) + 16);
        swift_bridgeObjectRetain();
        v335 = v333;
        v12 = v1323;
        v20 = v1373;
        v334(v331, v332, v335);
        v21 = v1342;
        goto LABEL_82;
      case 2u:
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        v1373[8] = v12[8];
        v39 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v39;
        v40 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v1303 = v13;
        v41 = &v1373[v40];
        v1343 = v21;
        v42 = &v12[v40];
        v43 = sub_2408E57A4();
        v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = v41;
        v13 = v1303;
        v46 = v42;
        v21 = v1343;
        v47 = v43;
        v16 = a1;
        v44(v45, v46, v47);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 3u:
        *v1373 = *v12;
        v48 = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v49 = v48[5];
        v50 = &v1373[v49];
        v51 = &v12[v49];
        v52 = type metadata accessor for TranscriptProtoRequestContent(0);
        v53 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v52 - 8);
        v1304 = v13;
        v1324 = v12;
        v1344 = v21;
        if (v53[6](v51, 1, v52))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          __dstc = v53;
          v336 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          v1288 = v48;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v336 - 8) + 48))(v51, 1, v336))
          {
            v643 = (char *)&loc_24053DDD4 + 4 * word_2409014F6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
          v914 = *(int *)(v52 + 20);
          v915 = v50;
          v916 = &v50[v914];
          v917 = &v51[v914];
          v918 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v918 - 8) + 16))(v916, v917, v918);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v915, 0, 1, v52);
          v48 = v1288;
        }
        v919 = v48[6];
        v920 = &v1373[v919];
        v921 = &v12[v919];
        v922 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        v923 = *(_QWORD *)(v922 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v923 + 48))(v921, 1, v922))
        {
          v924 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
          memcpy(v920, v921, *(_QWORD *)(*(_QWORD *)(v924 - 8) + 64));
        }
        else
        {
          v1299 = v48;
          v925 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v925 - 8) + 48))(v921, 1, v925))
          {
            v927 = (char *)&loc_240541DAC + 4 * byte_2409014FE[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v926 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
          memcpy(v920, v921, *(_QWORD *)(*(_QWORD *)(v926 - 8) + 64));
          v928 = *(int *)(v922 + 20);
          v929 = &v920[v928];
          v930 = &v921[v928];
          v931 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v931 - 8) + 16))(v929, v930, v931);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v923 + 56))(v920, 0, 1, v922);
          v48 = v1299;
        }
        v932 = v48[7];
        v933 = &v1373[v932];
        v934 = &v12[v932];
        v935 = v934[1];
        *v933 = *v934;
        v933[1] = v935;
        v936 = v48[8];
        v937 = &v1373[v936];
        v938 = &v12[v936];
        v939 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v940 = *(_QWORD *)(v939 - 8);
        v941 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v940 + 48);
        swift_bridgeObjectRetain();
        v17 = a2;
        if (v941(v938, 1, v939))
        {
          v942 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v937, v938, *(_QWORD *)(*(_QWORD *)(v942 - 8) + 64));
        }
        else
        {
          v943 = v938[1];
          *v937 = *v938;
          v937[1] = v943;
          v937[2] = v938[2];
          v944 = *(int *)(v939 + 24);
          __dstq = (char *)v937 + v944;
          v945 = (char *)v938 + v944;
          v946 = sub_2408E57A4();
          v947 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v946 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v948 = v946;
          v17 = a2;
          v947(__dstq, v945, v948);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v940 + 56))(v937, 0, 1, v939);
        }
        v18 = a3;
        v949 = v48[9];
        v20 = v1373;
        v950 = &v1373[v949];
        v12 = v1324;
        v951 = &v1324[v949];
        v952 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v952 - 8) + 16))(v950, v951, v952);
        v21 = v1344;
        swift_storeEnumTagMultiPayload();
        v13 = v1304;
        goto LABEL_270;
      case 4u:
        v55 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v55;
        v56 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v56;
        v57 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1373 + 4) = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1373 + 5) = v57;
        *((_QWORD *)v1373 + 6) = *((_QWORD *)v12 + 6);
        v1373[56] = v12[56];
        v58 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v59 = &v1373[v58];
        v60 = &v12[v58];
        v61 = sub_2408E57A4();
        v62 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = v59;
        v64 = v60;
        v16 = a1;
        v18 = a3;
        v65 = v61;
        v17 = a2;
        v62(v63, v64, v65);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 5u:
        v1345 = v21;
        v1302 = v13;
        v66 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v66;
        v1373[16] = v12[16];
        *((_QWORD *)v1373 + 3) = *((_QWORD *)v12 + 3);
        v67 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v68 = v67[7];
        v69 = &v1373[v68];
        v1325 = v12;
        v70 = &v12[v68];
        v71 = type metadata accessor for TranscriptProtoStatementID(0);
        v72 = *(_QWORD *)(v71 - 8);
        v73 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v72 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v73(v70, 1, v71))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v69 = *(_DWORD *)v70;
          v338 = v70[2];
          v69[1] = v70[1];
          v69[2] = v338;
          v339 = *(int *)(v71 + 24);
          v340 = (char *)v69 + v339;
          v341 = (char *)v70 + v339;
          v342 = sub_2408E57A4();
          v343 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 16);
          swift_bridgeObjectRetain();
          v343(v340, v341, v342);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
        }
        v17 = a2;
        v344 = v67[8];
        v345 = &v1373[v344];
        v346 = &v1325[v344];
        v347 = v346[1];
        *v345 = *v346;
        v345[1] = v347;
        v348 = v67[9];
        v349 = &v1373[v348];
        v350 = &v1325[v348];
        v351 = v350[1];
        *v349 = *v350;
        v349[1] = v351;
        v352 = v67[10];
        v353 = &v1373[v352];
        v354 = &v1325[v352];
        v355 = v354[1];
        *v353 = *v354;
        v353[1] = v355;
        v356 = v67[11];
        v357 = &v1373[v356];
        v358 = &v1325[v356];
        v359 = sub_2408E57A4();
        v360 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v359 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v361 = v357;
        v12 = v1325;
        v20 = v1373;
        v360(v361, v358, v359);
        v21 = v1345;
LABEL_82:
        swift_storeEnumTagMultiPayload();
        v18 = a3;
        goto LABEL_288;
      case 6u:
        v1346 = v21;
        v1301 = v13;
        v75 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v75;
        v76 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v76;
        v77 = v12;
        v78 = *((_QWORD *)v12 + 4);
        v79 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1373 + 4) = v78;
        *((_QWORD *)v1373 + 5) = v79;
        v80 = *((_QWORD *)v77 + 7);
        *((_QWORD *)v1373 + 6) = *((_QWORD *)v77 + 6);
        *((_QWORD *)v1373 + 7) = v80;
        v81 = type metadata accessor for TranscriptProtoClientAction(0);
        v82 = *(int *)(v81 + 36);
        __dst = &v1373[v82];
        v1276 = v81;
        v1326 = v77;
        v83 = &v77[v82];
        v84 = type metadata accessor for TranscriptProtoStatementID(0);
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v86(v83, 1, v84))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v83;
          v362 = v83[2];
          __dst[1] = v83[1];
          __dst[2] = v362;
          v363 = *(int *)(v84 + 24);
          v364 = (char *)__dst + v363;
          v365 = (char *)v83 + v363;
          v366 = sub_2408E57A4();
          v367 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 16);
          swift_bridgeObjectRetain();
          v367(v364, v365, v366);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
        }
        v20 = v1373;
        v17 = a2;
        v18 = a3;
        v14 = v1370;
        v368 = *(int *)(v1276 + 40);
        v369 = &v1373[v368];
        v12 = v1326;
        v370 = &v1326[v368];
        v371 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v369, v370, v371);
        v21 = v1346;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 7u:
        v1347 = v21;
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        v89 = *(int *)(Step + 20);
        v90 = &v1373[v89];
        v1327 = v12;
        v91 = &v12[v89];
        v92 = type metadata accessor for TranscriptProtoStatementID(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        if (v94(v91, 1, v92))
          goto LABEL_22;
        goto LABEL_85;
      case 8u:
        v1347 = v21;
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
        v96 = *(int *)(Step + 20);
        v90 = &v1373[v96];
        v1327 = v12;
        v91 = &v12[v96];
        v92 = type metadata accessor for TranscriptProtoStatementID(0);
        v93 = *(_QWORD *)(v92 - 8);
        v97 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        if (v97(v91, 1, v92))
        {
LABEL_22:
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
LABEL_85:
          *(_DWORD *)v90 = *(_DWORD *)v91;
          v372 = v91[2];
          v90[1] = v91[1];
          v90[2] = v372;
          v373 = *(int *)(v92 + 24);
          v374 = (char *)v90 + v373;
          v1309 = v13;
          v375 = (char *)v91 + v373;
          v376 = sub_2408E57A4();
          v377 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 16);
          swift_bridgeObjectRetain();
          v378 = v375;
          v13 = v1309;
          v377(v374, v378, v376);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        }
        v20 = v1373;
        v17 = a2;
        v14 = v1370;
        v379 = *(int *)(Step + 24);
        v380 = &v1373[v379];
        v12 = v1327;
        v381 = &v1327[v379];
        v382 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v380, v381, v382);
        v21 = v1347;
        goto LABEL_256;
      case 9u:
        v98 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v98;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0xAu:
        v99 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v12, 1, v99))
        {
          v383 = (char *)&loc_24053C9B8 + 4 * word_2409014EE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
        memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        v910 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v911 = &v1373[v910];
        v912 = &v12[v910];
        v913 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v913 - 8) + 16))(v911, v912, v913);
        goto LABEL_256;
      case 0xBu:
        v101 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        v102 = *(_QWORD *)(v101 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v102 + 48))(v12, 1, v101))
        {
          v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          v17 = a2;
        }
        else
        {
          v384 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          v385 = *(_QWORD *)(v384 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v385 + 48))(v12, 1, v384))
          {
            v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
            memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v386 - 8) + 64));
          }
          else
          {
            v644 = *((_QWORD *)v12 + 1);
            *(_QWORD *)v1373 = *(_QWORD *)v12;
            *((_QWORD *)v1373 + 1) = v644;
            v645 = *((_QWORD *)v12 + 3);
            *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
            *((_QWORD *)v1373 + 3) = v645;
            v1319 = v13;
            v646 = *((_QWORD *)v12 + 5);
            *((_QWORD *)v1373 + 4) = *((_QWORD *)v12 + 4);
            *((_QWORD *)v1373 + 5) = v646;
            v647 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            __dstn = &v12[v647];
            v1296 = &v1373[v647];
            v1338 = v12;
            v648 = sub_2408E57A4();
            v649 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v648 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v13 = v1319;
            swift_bridgeObjectRetain();
            v650 = v648;
            v12 = v1338;
            v649(v1296, __dstn, v650);
            v20 = v1373;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v385 + 56))(v1373, 0, 1, v384);
          }
          v18 = a3;
          v651 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v652 = &v20[v651];
          v653 = &v12[v651];
          v654 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v654 - 8) + 16))(v652, v653, v654);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v20, 0, 1, v101);
          v17 = a2;
          v14 = v1370;
        }
        v655 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v656 = &v20[v655];
        v657 = &v12[v655];
        v658 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v658 - 8) + 16))(v656, v657, v658);
        swift_storeEnumTagMultiPayload();
        goto LABEL_293;
      case 0xCu:
        v104 = *(_QWORD *)v12;
        v105 = *((_QWORD *)v12 + 1);
        sub_240360070(*(_QWORD *)v12, v105);
        *(_QWORD *)v1373 = v104;
        *((_QWORD *)v1373 + 1) = v105;
        v106 = *((_QWORD *)v12 + 2);
        v107 = *((_QWORD *)v12 + 3);
        sub_240360070(v106, v107);
        *((_QWORD *)v1373 + 2) = v106;
        *((_QWORD *)v1373 + 3) = v107;
        v108 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1373 + 4) = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1373 + 5) = v108;
        v109 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v1277 = &v1373[v109];
        v1348 = v21;
        v110 = v13;
        v111 = &v12[v109];
        v112 = v12;
        v113 = sub_2408E57A4();
        v114 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        v115 = v111;
        v13 = v110;
        v21 = v1348;
        v116 = v113;
        v12 = v112;
        v16 = a1;
        v114(v1277, v115, v116);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0xDu:
        v1349 = v21;
        v1301 = v13;
        v117 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v117;
        v118 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v118;
        v119 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v120 = v119[6];
        v121 = &v1373[v120];
        v122 = (uint64_t *)&v12[v120];
        v123 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        v124 = *(_QWORD *)(v123 - 8);
        v125 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v124 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1278 = v119;
        if (v125(v122, 1, v123))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
          v14 = v1370;
          goto LABEL_194;
        }
        v387 = v12;
        v388 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        v389 = *(_QWORD *)(v388 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v389 + 48))(v122, 1, v388))
        {
          v390 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v390 - 8) + 64));
          v14 = v1370;
          goto LABEL_193;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 6)
        {
          v713 = sub_2408E57A4();
          (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v713 - 8) + 16))(v121, v122, v713);
        }
        else
        {
          __dstf = (void *)v388;
          if (EnumCaseMultiPayload != 5)
          {
            if (EnumCaseMultiPayload == 1)
            {
              v660 = *v122;
              if ((~*v122 & 0xF000000000000007) != 0)
                swift_retain();
              *v121 = v660;
              v661 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              v662 = (char *)v121 + v661;
              v663 = (char *)v122 + v661;
              v664 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v664 - 8) + 16))(v662, v663, v664);
              v388 = (uint64_t)__dstf;
              swift_storeEnumTagMultiPayload();
              v20 = v1373;
              v14 = v1370;
            }
            else
            {
              memcpy(v121, v122, *(_QWORD *)(v389 + 64));
              v14 = v1370;
            }
LABEL_192:
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v389 + 56))(v121, 0, 1, v388);
LABEL_193:
            v718 = *(int *)(v123 + 20);
            v719 = (char *)v121 + v718;
            v720 = (char *)v122 + v718;
            v721 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v721 - 8) + 16))(v719, v720, v721);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
            v12 = v387;
            v119 = v1278;
LABEL_194:
            v722 = v119[7];
            v723 = &v20[v722];
            v1339 = v12;
            v724 = &v12[v722];
            v725 = type metadata accessor for TranscriptProtoStatementID(0);
            v726 = *(_QWORD *)(v725 - 8);
            __dstg = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v726 + 48);
            v1251 = v726;
            if (__dstg(v724, 1, v725))
            {
              v727 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v723, v724, *(_QWORD *)(*(_QWORD *)(v727 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v723 = *(_DWORD *)v724;
              v728 = v724[2];
              v723[1] = v724[1];
              v723[2] = v728;
              v729 = *(int *)(v725 + 24);
              v730 = (char *)v723 + v729;
              v731 = (char *)v724 + v729;
              v732 = sub_2408E57A4();
              v733 = v14;
              v734 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v732 - 8) + 16);
              swift_bridgeObjectRetain();
              v734(v730, v731, v732);
              v14 = v733;
              v119 = v1278;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v726 + 56))(v723, 0, 1, v725);
            }
            v735 = v119[8];
            v736 = &v20[v735];
            v12 = v1339;
            v737 = &v1339[v735];
            v738 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            v739 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v738 - 8);
            if (v739[6](v737, 1, v738))
            {
              v740 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
              memcpy(v736, v737, *(_QWORD *)(*(_QWORD *)(v740 - 8) + 64));
              v18 = a3;
              v21 = v1349;
              goto LABEL_255;
            }
            v741 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            v742 = *(_QWORD *)(v741 - 8);
            __srca = v739;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v742 + 48))(v737, 1, v741))
            {
              v743 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
              memcpy(v736, v737, *(_QWORD *)(*(_QWORD *)(v743 - 8) + 64));
              v18 = a3;
LABEL_254:
              v21 = v1349;
              v902 = *(int *)(v738 + 20);
              v903 = (char *)v736 + v902;
              v904 = (char *)v737 + v902;
              v905 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v905 - 8) + 16))(v903, v904, v905);
              (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__srca + 7))(v736, 0, 1, v738);
LABEL_255:
              v906 = v1278[9];
              v907 = &v20[v906];
              v908 = &v12[v906];
              v909 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v909 - 8) + 16))(v907, v908, v909);
              swift_storeEnumTagMultiPayload();
              v17 = a2;
LABEL_292:
              v13 = v1301;
LABEL_293:
              v16 = a1;
LABEL_294:
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1372 + 56))(v20, 0, 1, v21);
              goto LABEL_295;
            }
            v1236 = (void *)v742;
            v744 = swift_getEnumCaseMultiPayload();
            if (v744 == 1)
            {
              *v736 = *v737;
              v753 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v754 = (char *)v736 + v753;
              __dsto = (char *)v737 + v753;
              v755 = sub_2408E57A4();
              v756 = v14;
              v757 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v755 - 8) + 16);
              swift_bridgeObjectRetain();
              v758 = v755;
              v12 = v1339;
              v757(v754, __dsto, v758);
              v14 = v756;
              swift_storeEnumTagMultiPayload();
              v18 = a3;
            }
            else
            {
              if (v744)
              {
                v759 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v742;
                memcpy(v736, v737, *(_QWORD *)(v742 + 64));
                v18 = a3;
LABEL_253:
                v759[7](v736, 0, 1, v741);
                goto LABEL_254;
              }
              v745 = v736;
              v746 = v737[1];
              *v745 = *v737;
              v745[1] = v746;
              v747 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v748 = *(int *)(v747 + 20);
              v749 = v745;
              v750 = (_QWORD *)((char *)v745 + v748);
              v751 = (_QWORD *)((char *)v737 + v748);
              swift_bridgeObjectRetain();
              if (__dstg(v751, 1, v725))
              {
                v752 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v750, v751, *(_QWORD *)(*(_QWORD *)(v752 - 8) + 64));
              }
              else
              {
                *(_DWORD *)v750 = *(_DWORD *)v751;
                v893 = v751[2];
                v750[1] = v751[1];
                v750[2] = v893;
                v894 = *(int *)(v725 + 24);
                __dstp = (char *)v750 + v894;
                v1232 = (char *)v751 + v894;
                v895 = sub_2408E57A4();
                v896 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v895 - 8) + 16);
                swift_bridgeObjectRetain();
                v896(__dstp, v1232, v895);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1251 + 56))(v750, 0, 1, v725);
              }
              v897 = *(int *)(v747 + 24);
              v898 = (char *)v749 + v897;
              v899 = (char *)v737 + v897;
              v900 = sub_2408E57A4();
              v901 = v898;
              v736 = v749;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v900 - 8) + 16))(v901, v899, v900);
              swift_storeEnumTagMultiPayload();
              v18 = a3;
              v20 = v1373;
              v12 = v1339;
              v14 = v1370;
            }
            v759 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1236;
            goto LABEL_253;
          }
          *(_BYTE *)v121 = *(_BYTE *)v122;
          v714 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v715 = (char *)v121 + v714;
          v716 = (char *)v122 + v714;
          v717 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v717 - 8) + 16))(v715, v716, v717);
          v388 = (uint64_t)__dstf;
        }
        swift_storeEnumTagMultiPayload();
        v14 = v1370;
        goto LABEL_192;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v154 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v1373, v12, v154);
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0xFu:
        v1350 = v21;
        v127 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v127;
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
        v129 = *(int *)(StepResults + 24);
        v130 = &v1373[v129];
        v1328 = v12;
        v131 = &v12[v129];
        v132 = type metadata accessor for TranscriptProtoStatementID(0);
        v133 = *(_QWORD *)(v132 - 8);
        v134 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v133 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v134(v131, 1, v132))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v130 = *(_DWORD *)v131;
          v391 = v131[2];
          v130[1] = v131[1];
          v130[2] = v391;
          v392 = *(int *)(v132 + 24);
          v393 = (char *)v130 + v392;
          v1310 = v13;
          v394 = (char *)v131 + v392;
          v395 = sub_2408E57A4();
          v396 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 16);
          swift_bridgeObjectRetain();
          v397 = v394;
          v13 = v1310;
          v396(v393, v397, v395);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        goto LABEL_105;
      case 0x11u:
        v1351 = v21;
        v136 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v136;
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        v1373[24] = v12[24];
        *(_WORD *)(v1373 + 25) = *(_WORD *)(v12 + 25);
        v137 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v138 = v137[9];
        v139 = &v1373[v138];
        v1329 = v12;
        v140 = &v12[v138];
        v141 = type metadata accessor for TranscriptProtoParameterSet(0);
        v142 = *(_QWORD *)(v141 - 8);
        v143 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v142 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v143(v140, 1, v141))
        {
          v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        }
        else
        {
          *v139 = *v140;
          v398 = *(int *)(v141 + 20);
          v399 = (char *)v139 + v398;
          v1311 = v13;
          v400 = (char *)v140 + v398;
          v401 = sub_2408E57A4();
          v402 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v401 - 8) + 16);
          swift_bridgeObjectRetain();
          v403 = v400;
          v13 = v1311;
          v402(v399, v403, v401);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
        }
        v404 = v137[10];
        v405 = &v1373[v404];
        v406 = &v1329[v404];
        v407 = type metadata accessor for TranscriptProtoStatementID(0);
        v408 = *(_QWORD *)(v407 - 8);
        v14 = v1370;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v408 + 48))(v406, 1, v407))
        {
          v409 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v405, v406, *(_QWORD *)(*(_QWORD *)(v409 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v405 = *(_DWORD *)v406;
          v552 = v406[2];
          v405[1] = v406[1];
          v405[2] = v552;
          v553 = *(int *)(v407 + 24);
          v554 = (char *)v405 + v553;
          v1315 = v13;
          v555 = (char *)v406 + v553;
          v556 = sub_2408E57A4();
          v557 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v556 - 8) + 16);
          swift_bridgeObjectRetain();
          v558 = v555;
          v13 = v1315;
          v557(v554, v558, v556);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v408 + 56))(v405, 0, 1, v407);
        }
        v20 = v1373;
        v17 = a2;
        v559 = v137[11];
        v560 = &v1373[v559];
        v12 = v1329;
        v561 = &v1329[v559];
        v562 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v562 - 8) + 16))(v560, v561, v562);
        v21 = v1351;
        goto LABEL_256;
      case 0x12u:
        v145 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v145;
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        v146 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v1305 = v13;
        v147 = &v1373[v146];
        v1352 = v21;
        v148 = &v12[v146];
        v149 = sub_2408E57A4();
        v150 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v151 = v147;
        v13 = v1305;
        v152 = v148;
        v21 = v1352;
        v153 = v149;
        v16 = a1;
        v150(v151, v152, v153);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x16u:
        v155 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v155;
        v156 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v1279 = &v1373[v156];
        v1353 = v21;
        v157 = v13;
        v158 = &v12[v156];
        v159 = v12;
        v160 = sub_2408E57A4();
        v161 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
        swift_bridgeObjectRetain();
        v162 = v158;
        v13 = v157;
        v21 = v1353;
        v163 = v160;
        v12 = v159;
        v16 = a1;
        v161(v1279, v162, v163);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x17u:
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        v164 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v1280 = &v1373[v164];
        v1354 = v21;
        v165 = v13;
        v166 = &v12[v164];
        v167 = v12;
        v168 = sub_2408E57A4();
        v169 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v168 - 8) + 16);
        swift_bridgeObjectRetain();
        v170 = v166;
        v13 = v165;
        v21 = v1354;
        v171 = v168;
        v12 = v167;
        v16 = a1;
        v169(v1280, v170, v171);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x18u:
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        v172 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v1281 = &v1373[v172];
        v1355 = v21;
        v173 = v13;
        v174 = &v12[v172];
        v175 = v12;
        v176 = sub_2408E57A4();
        v177 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
        swift_bridgeObjectRetain();
        v178 = v174;
        v13 = v173;
        v21 = v1355;
        v179 = v176;
        v12 = v175;
        v16 = a1;
        v177(v1281, v178, v179);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x19u:
        v180 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v180;
        v181 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v1306 = v13;
        v182 = &v1373[v181];
        v1356 = v21;
        v183 = &v12[v181];
        v184 = sub_2408E57A4();
        v185 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v186 = v182;
        v13 = v1306;
        v187 = v183;
        v21 = v1356;
        v188 = v184;
        v16 = a1;
        v185(v186, v187, v188);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x1Au:
        v1357 = v21;
        v189 = type metadata accessor for TranscriptProtoStatementID(0);
        v190 = *(_QWORD *)(v189 - 8);
        v191 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v190 + 48);
        v1282 = v190;
        if (v191(v12, 1, v189))
        {
          v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          v193 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
        }
        else
        {
          v193 = v1373;
          *(_DWORD *)v1373 = *(_DWORD *)v12;
          v410 = *((_QWORD *)v12 + 2);
          *((_QWORD *)v1373 + 1) = *((_QWORD *)v12 + 1);
          *((_QWORD *)v1373 + 2) = v410;
          v411 = *(int *)(v189 + 24);
          __dstk = &v1373[v411];
          v1312 = v13;
          v412 = &v12[v411];
          v413 = v12;
          v414 = sub_2408E57A4();
          v415 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v414 - 8) + 16);
          swift_bridgeObjectRetain();
          v416 = v412;
          v13 = v1312;
          v417 = v414;
          v12 = v413;
          v415(__dstk, v416, v417);
          v14 = v1370;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v1373, 0, 1, v189);
        }
        v418 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v419 = *(int *)(v418 + 20);
        v420 = &v193[v419];
        v421 = v12;
        v422 = &v12[v419];
        if (v191(v422, 1, v189))
        {
          v423 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v420, v422, *(_QWORD *)(*(_QWORD *)(v423 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v420 = *(_DWORD *)v422;
          v563 = v422[2];
          v420[1] = v422[1];
          v420[2] = v563;
          v564 = *(int *)(v189 + 24);
          v565 = (char *)v420 + v564;
          v1316 = v13;
          v566 = (char *)v422 + v564;
          v567 = sub_2408E57A4();
          v568 = v14;
          v569 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v567 - 8) + 16);
          swift_bridgeObjectRetain();
          v570 = v566;
          v13 = v1316;
          v569(v565, v570, v567);
          v14 = v568;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1282 + 56))(v420, 0, 1, v189);
        }
        v16 = a1;
        v571 = *(int *)(v418 + 24);
        v20 = v1373;
        v572 = &v1373[v571];
        v12 = v421;
        v573 = &v421[v571];
        v574 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v574 - 8) + 16))(v572, v573, v574);
        v21 = v1357;
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v18 = a3;
        goto LABEL_294;
      case 0x1Bu:
        v194 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v194;
        v195 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v195;
        *((_DWORD *)v1373 + 8) = *((_DWORD *)v12 + 8);
        v1358 = v21;
        v196 = *((_QWORD *)v12 + 6);
        *((_QWORD *)v1373 + 5) = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1373 + 6) = v196;
        v197 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v198 = &v1373[v197];
        v199 = &v12[v197];
        v200 = sub_2408E57A4();
        v201 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = v1358;
        swift_bridgeObjectRetain();
        v202 = v198;
        v203 = v199;
        v16 = a1;
        v18 = a3;
        v204 = v200;
        v17 = a2;
        v201(v202, v203, v204);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x1Cu:
        v1302 = v13;
        v205 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v205;
        v206 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v206;
        *((_QWORD *)v1373 + 4) = *((_QWORD *)v12 + 4);
        v207 = type metadata accessor for TranscriptProtoSystemResponse(0);
        v208 = *(int *)(v207 + 28);
        __dsta = &v1373[v208];
        v1283 = (int *)v207;
        v209 = &v12[v208];
        v210 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v211 = *(_QWORD *)(v210 - 8);
        v212 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1359 = v21;
        if (v212(v209, 1, v210))
        {
          v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(__dsta, v209, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
          v214 = v1283;
        }
        else
        {
          v424 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v424 - 8) + 48))(v209, 1, v424))
          {
            v665 = (char *)&loc_24053E060 + 4 * word_2409014CE[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v425 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(__dsta, v209, *(_QWORD *)(*(_QWORD *)(v425 - 8) + 64));
          v214 = v1283;
          v980 = *(int *)(v210 + 20);
          v981 = &__dsta[v980];
          v982 = &v209[v980];
          v983 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v983 - 8) + 16))(v981, v982, v983);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(__dsta, 0, 1, v210);
        }
        v984 = v214[8];
        v985 = &v1373[v984];
        v986 = &v12[v984];
        v987 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
        v988 = *((_QWORD *)v987 - 1);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v988 + 48))(v986, 1, v987))
        {
          v989 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
          memcpy(v985, v986, *(_QWORD *)(*(_QWORD *)(v989 - 8) + 64));
        }
        else
        {
          v1254 = v988;
          __dsth = (char *)v985;
          v1340 = v12;
          *v985 = *v986;
          *((_BYTE *)v985 + 8) = *((_BYTE *)v986 + 8);
          v985[2] = v986[2];
          v990 = v987[7];
          v991 = (char *)v985 + v990;
          v992 = (char *)v986 + v990;
          v993 = type metadata accessor for TranscriptProtoDialogType(0);
          __srcc = *(_QWORD **)(v993 - 8);
          v994 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))__srcc[6];
          swift_bridgeObjectRetain();
          v995 = v994;
          v996 = v992;
          swift_bridgeObjectRetain();
          if (v995(v992, 1, v993))
          {
            v997 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v991, v992, *(_QWORD *)(*(_QWORD *)(v997 - 8) + 64));
            v998 = __dsth;
          }
          else
          {
            v999 = type metadata accessor for TranscriptProtoDialogFormat(0);
            v1240 = v995;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v999 - 8) + 48))(v992, 1, v999))
            {
              v1001 = (char *)&loc_240542AC8 + 4 * byte_2409014E4[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1000 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v991, v992, *(_QWORD *)(*(_QWORD *)(v1000 - 8) + 64));
            v998 = __dsth;
            v1002 = *(int *)(v993 + 20);
            v1003 = &v991[v1002];
            v1004 = v993;
            v1005 = &v996[v1002];
            v1006 = sub_2408E57A4();
            v1007 = v1005;
            v993 = v1004;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1006 - 8) + 16))(v1003, v1007, v1006);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srcc[7])(v991, 0, 1, v1004);
            v995 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1240;
          }
          v1008 = v987[8];
          v1009 = &v998[v1008];
          v1010 = (char *)v986 + v1008;
          if (v995((char *)v986 + v1008, 1, v993))
          {
            v1011 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1009, v1010, *(_QWORD *)(*(_QWORD *)(v1011 - 8) + 64));
            v12 = v1340;
          }
          else
          {
            v1012 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1012 - 8) + 48))(v1010, 1, v1012))
            {
              v1015 = (char *)&loc_240542CEC + 4 * byte_2409014E9[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1013 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1009, v1010, *(_QWORD *)(*(_QWORD *)(v1013 - 8) + 64));
            v12 = v1340;
            v1014 = v1010;
            v1016 = *(int *)(v993 + 20);
            v1017 = &v1009[v1016];
            v1018 = v993;
            v1019 = &v1014[v1016];
            v1020 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1020 - 8) + 16))(v1017, v1019, v1020);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srcc[7])(v1009, 0, 1, v1018);
          }
          v1021 = v987[9];
          v1022 = &v998[v1021];
          v1023 = (char *)v986 + v1021;
          v1024 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1024 - 8) + 16))(v1022, v1023, v1024);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v1254 + 56))(v998, 0, 1, v987);
        }
        v1025 = v214[9];
        v1026 = &v1373[v1025];
        v1027 = v12;
        v1028 = &v12[v1025];
        v1029 = type metadata accessor for TranscriptProtoStatementID(0);
        v1030 = *(_QWORD *)(v1029 - 8);
        v17 = a2;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1030 + 48))(v1028, 1, v1029))
        {
          v1031 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1026, v1028, *(_QWORD *)(*(_QWORD *)(v1031 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1026 = *(_DWORD *)v1028;
          v1032 = v1028[2];
          v1026[1] = v1028[1];
          v1026[2] = v1032;
          v1033 = *(int *)(v1029 + 24);
          v1034 = (char *)v1026 + v1033;
          __dstr = (char *)v1028 + v1033;
          v1035 = sub_2408E57A4();
          v1036 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1035 - 8) + 16);
          swift_bridgeObjectRetain();
          v1036(v1034, __dstr, v1035);
          v214 = v1283;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1030 + 56))(v1026, 0, 1, v1029);
        }
        v18 = a3;
        v1037 = v214[10];
        v1038 = &v1373[v1037];
        v1039 = v1027;
        v1040 = &v1027[v1037];
        v1041 = v1040[1];
        *v1038 = *v1040;
        v1038[1] = v1041;
        v1042 = v214[11];
        v1043 = &v1373[v1042];
        v1044 = &v1027[v1042];
        v1045 = sub_2408E57A4();
        v1046 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1045 - 8) + 16);
        swift_bridgeObjectRetain();
        v1047 = v1045;
        v12 = v1039;
        v20 = v1373;
        v1046(v1043, v1044, v1047);
        v21 = v1359;
        swift_storeEnumTagMultiPayload();
LABEL_288:
        v13 = v1302;
        v14 = v1370;
        goto LABEL_293;
      case 0x1Du:
        v215 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v215;
        v216 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v216;
        v217 = type metadata accessor for TranscriptProtoStatementResult(0);
        v218 = *(int *)(v217 + 24);
        __dstb = &v1373[v218];
        v1284 = (int *)v217;
        v1249 = &v12[v218];
        v219 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        v220 = *(_QWORD **)(v219 - 8);
        v221 = (unsigned int (*)(char *, uint64_t, uint64_t))v220[6];
        swift_bridgeObjectRetain();
        v222 = v1249;
        swift_bridgeObjectRetain();
        v1330 = v12;
        v1360 = v21;
        if (v221(v1249, 1, v219))
        {
          v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
          memcpy(__dstb, v1249, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          v14 = v1370;
        }
        else
        {
          v1234 = (void (**)(char *, _QWORD, uint64_t, int *))v220;
          __src = (int *)v219;
          v426 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v427 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v426 - 8);
          if (v427[6](v1249, 1, v426))
          {
            v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            v429 = __dstb;
            memcpy(__dstb, v1249, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
            v14 = v1370;
          }
          else
          {
            v666 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v14 = v1370;
            v1228 = v427;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v666 - 8) + 48))(v1249, 1, v666))
            {
              v711 = (char *)&loc_24053E6A4 + 4 * word_2409014B8[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v667 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            v429 = __dstb;
            memcpy(__dstb, v1249, *(_QWORD *)(*(_QWORD *)(v667 - 8) + 64));
            v1118 = *(int *)(v426 + 20);
            v1119 = v426;
            v1120 = &__dstb[v1118];
            v1121 = &v1249[v1118];
            v1122 = sub_2408E57A4();
            v1123 = v1121;
            v222 = v1249;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1122 - 8) + 16))(v1120, v1123, v1122);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1228[7])(__dstb, 0, 1, v1119);
          }
          v1124 = __src[5];
          v1125 = &v429[v1124];
          v1126 = &v222[v1124];
          v1127 = type metadata accessor for TranscriptProtoResponseManifest(0);
          v1128 = *(_QWORD *)(v1127 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1128 + 48))(v1126, 1, v1127))
          {
            v1129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
            memcpy(v1125, v1126, *(_QWORD *)(*(_QWORD *)(v1129 - 8) + 64));
            v1130 = __src;
          }
          else
          {
            *(_QWORD *)v1125 = *(_QWORD *)v1126;
            v1131 = *(int *)(v1127 + 20);
            v1227 = v1128;
            v1233 = v1125;
            v1132 = &v1125[v1131];
            v1133 = &v1126[v1131];
            v1134 = type metadata accessor for TranscriptProtoResponseDialog(0);
            v1224 = *(_QWORD **)(v1134 - 8);
            v1135 = (uint64_t (*)(char *, uint64_t, uint64_t))v1224[6];
            swift_bridgeObjectRetain();
            v1136 = v1134;
            v1137 = v1135(v1133, 1, v1134);
            v1138 = v1126;
            v1139 = (int *)v1127;
            v1321 = v13;
            if (v1137)
            {
              v1140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
              memcpy(v1132, v1133, *(_QWORD *)(*(_QWORD *)(v1140 - 8) + 64));
            }
            else
            {
              v1141 = *((_QWORD *)v1133 + 1);
              *(_QWORD *)v1132 = *(_QWORD *)v1133;
              *((_QWORD *)v1132 + 1) = v1141;
              v1142 = *((_QWORD *)v1133 + 3);
              *((_QWORD *)v1132 + 2) = *((_QWORD *)v1133 + 2);
              *((_QWORD *)v1132 + 3) = v1142;
              v1143 = *((_QWORD *)v1133 + 5);
              *((_QWORD *)v1132 + 4) = *((_QWORD *)v1133 + 4);
              *((_QWORD *)v1132 + 5) = v1143;
              v1144 = *((_QWORD *)v1133 + 7);
              *((_QWORD *)v1132 + 6) = *((_QWORD *)v1133 + 6);
              *((_QWORD *)v1132 + 7) = v1144;
              v1145 = *(int *)(v1136 + 32);
              v1221 = &v1133[v1145];
              v1222 = &v1132[v1145];
              v1146 = sub_2408E57A4();
              v1147 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1146 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1147(v1222, v1221, v1146);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1224[7])(v1132, 0, 1, v1136);
            }
            v1148 = v1139[6];
            v1149 = v1233;
            v1150 = &v1233[v1148];
            v1151 = (_QWORD *)((char *)v1138 + v1148);
            v1152 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v1153 = *(_QWORD *)(v1152 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1153 + 48))(v1151, 1, v1152))
            {
              v1154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
              memcpy(v1150, v1151, *(_QWORD *)(*(_QWORD *)(v1154 - 8) + 64));
            }
            else
            {
              v1155 = v1151[1];
              *(_QWORD *)v1150 = *v1151;
              *((_QWORD *)v1150 + 1) = v1155;
              v1156 = *(int *)(v1152 + 24);
              v1225 = &v1150[v1156];
              v1157 = (char *)v1151 + v1156;
              v1158 = sub_2408E57A4();
              v1159 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1158 - 8) + 16);
              v1149 = v1233;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1159(v1225, v1157, v1158);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1153 + 56))(v1150, 0, 1, v1152);
            }
            v20 = v1373;
            v21 = v1360;
            v1130 = __src;
            v1160 = v1139[7];
            v1161 = &v1149[v1160];
            v1162 = (_QWORD *)((char *)v1138 + v1160);
            v1163 = v1149;
            v1164 = v1162[1];
            *(_QWORD *)v1161 = *v1162;
            *((_QWORD *)v1161 + 1) = v1164;
            v1165 = v1139[8];
            v1166 = &v1163[v1165];
            v1167 = (_QWORD *)((char *)v1138 + v1165);
            v1168 = v1167[1];
            *(_QWORD *)v1166 = *v1167;
            *((_QWORD *)v1166 + 1) = v1168;
            v1163[v1139[9]] = *((_BYTE *)v1138 + v1139[9]);
            v1163[v1139[10]] = *((_BYTE *)v1138 + v1139[10]);
            v1169 = v1139[11];
            __srcg = &v1163[v1169];
            v1170 = (char *)v1138 + v1169;
            v1171 = sub_2408E57A4();
            v1172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1171 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1172(__srcg, v1170, v1171);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v1227 + 56))(v1163, 0, 1, v1139);
            v13 = v1321;
            v12 = v1330;
            v14 = v1370;
            v222 = v1249;
          }
          v1173 = v1130[6];
          v1174 = &__dstb[v1173];
          v1175 = &v222[v1173];
          v1176 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1176 - 8) + 16))(v1174, v1175, v1176);
          v1234[7](__dstb, 0, 1, v1130);
        }
        v1177 = v1284;
        v1178 = v1284[7];
        v1179 = &v20[v1178];
        v1180 = &v12[v1178];
        v1181 = type metadata accessor for TranscriptProtoStatementID(0);
        v1182 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v1181 - 8) + 48);
        __dsti = *(void **)(v1181 - 8);
        if (v1182(v1180, 1, v1181))
        {
          v1183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1179, v1180, *(_QWORD *)(*(_QWORD *)(v1183 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1179 = *(_DWORD *)v1180;
          v1184 = v1180[2];
          v1179[1] = v1180[1];
          v1179[2] = v1184;
          v1185 = *(int *)(v1181 + 24);
          v1255 = (char *)v1179 + v1185;
          v1186 = v13;
          v1187 = (char *)v1180 + v1185;
          v1188 = sub_2408E57A4();
          v1189 = v14;
          v1190 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1188 - 8) + 16);
          v1177 = v1284;
          swift_bridgeObjectRetain();
          v1191 = v1187;
          v13 = v1186;
          v21 = v1360;
          v1190(v1255, v1191, v1188);
          v14 = v1189;
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dsti + 7))(v1179, 0, 1, v1181);
        }
        v1192 = v1177[8];
        v1193 = &v20[v1192];
        v1194 = &v1330[v1192];
        if (v1182(&v1330[v1192], 1, v1181))
        {
          v1195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1193, v1194, *(_QWORD *)(*(_QWORD *)(v1195 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1193 = *(_DWORD *)v1194;
          v1196 = v1194[2];
          v1193[1] = v1194[1];
          v1193[2] = v1196;
          v1197 = *(int *)(v1181 + 24);
          v1256 = (char *)v1193 + v1197;
          v1198 = v13;
          v1199 = (char *)v1194 + v1197;
          v1200 = sub_2408E57A4();
          v1201 = v14;
          v1202 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1200 - 8) + 16);
          v1177 = v1284;
          swift_bridgeObjectRetain();
          v1203 = v1199;
          v13 = v1198;
          v21 = v1360;
          v1202(v1256, v1203, v1200);
          v14 = v1201;
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dsti + 7))(v1193, 0, 1, v1181);
        }
        v1204 = v1177[9];
        v1205 = &v20[v1204];
        v1206 = &v1330[v1204];
        if (v1182(&v1330[v1204], 1, v1181))
        {
          v1207 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1205, v1206, *(_QWORD *)(*(_QWORD *)(v1207 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1205 = *(_DWORD *)v1206;
          v1208 = v1206[2];
          v1205[1] = v1206[1];
          v1205[2] = v1208;
          v1209 = *(int *)(v1181 + 24);
          v1210 = (char *)v1205 + v1209;
          v1211 = v13;
          v1212 = (char *)v1206 + v1209;
          v1213 = sub_2408E57A4();
          v1214 = v14;
          v1215 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1213 - 8) + 16);
          v1177 = v1284;
          swift_bridgeObjectRetain();
          v1216 = v1212;
          v13 = v1211;
          v21 = v1360;
          v1215(v1210, v1216, v1213);
          v14 = v1214;
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dsti + 7))(v1205, 0, 1, v1181);
        }
        v17 = a2;
        v16 = a1;
        v1217 = v1177[10];
        v1218 = &v20[v1217];
        v12 = v1330;
        v1219 = &v1330[v1217];
        v1220 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1220 - 8) + 16))(v1218, v1219, v1220);
        swift_storeEnumTagMultiPayload();
        v18 = a3;
        goto LABEL_294;
      case 0x1Eu:
        v1350 = v21;
        v224 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v224;
        v225 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1373 + 3) = v225;
        StepResults = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v226 = *(int *)(StepResults + 24);
        v227 = &v1373[v226];
        v1328 = v12;
        v228 = &v12[v226];
        v229 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v230 = *(_QWORD *)(v229 - 8);
        v231 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v230 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v231(v228, 1, v229))
          goto LABEL_53;
        goto LABEL_104;
      case 0x1Fu:
        v1350 = v21;
        v232 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v232;
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        StepResults = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v233 = *(int *)(StepResults + 24);
        v227 = &v1373[v233];
        v1328 = v12;
        v228 = &v12[v233];
        v229 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v230 = *(_QWORD *)(v229 - 8);
        v234 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v230 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v234(v228, 1, v229))
        {
LABEL_53:
          v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
        }
        else
        {
LABEL_104:
          v430 = v228[1];
          *v227 = *v228;
          v227[1] = v430;
          v227[2] = v228[2];
          v431 = *(int *)(v229 + 24);
          v432 = (char *)v227 + v431;
          v1289 = (char *)v228 + v431;
          v433 = v13;
          v434 = sub_2408E57A4();
          v435 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v436 = v434;
          v13 = v433;
          v435(v432, v1289, v436);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
        }
LABEL_105:
        v20 = v1373;
        v17 = a2;
        v14 = v1370;
        v437 = *(int *)(StepResults + 28);
        v438 = &v1373[v437];
        v12 = v1328;
        v439 = &v1328[v437];
        v440 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v440 - 8) + 16))(v438, v439, v440);
        v21 = v1350;
        goto LABEL_256;
      case 0x20u:
        v236 = type metadata accessor for TranscriptProtoRequestContent(0);
        v237 = *(_QWORD *)(v236 - 8);
        v1331 = v12;
        v1361 = v21;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v237 + 48))(v12, 1, v236))
        {
          v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          v239 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          v441 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v441 - 8) + 48))(v12, 1, v441))
          {
            v668 = (char *)&loc_24053E158 + 4 * word_2409014B0[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          v239 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v442 - 8) + 64));
          v953 = *(int *)(v236 + 20);
          v954 = &v1373[v953];
          v955 = &v12[v953];
          v956 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v956 - 8) + 16))(v954, v955, v956);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v1373, 0, 1, v236);
        }
        v957 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        v958 = v957[5];
        v959 = &v239[v958];
        v960 = &v12[v958];
        v961 = v960[1];
        *v959 = *v960;
        v959[1] = v961;
        v962 = v957[6];
        v963 = &v239[v962];
        v964 = &v12[v962];
        v965 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v966 = *(_QWORD *)(v965 - 8);
        v967 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v966 + 48);
        swift_bridgeObjectRetain();
        if (v967(v964, 1, v965))
        {
          v968 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v963, v964, *(_QWORD *)(*(_QWORD *)(v968 - 8) + 64));
        }
        else
        {
          v969 = v964[1];
          *v963 = *v964;
          v963[1] = v969;
          v963[2] = v964[2];
          v970 = *(int *)(v965 + 24);
          v971 = (char *)v963 + v970;
          v1300 = (char *)v964 + v970;
          v972 = v13;
          v973 = sub_2408E57A4();
          v974 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v973 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v975 = v973;
          v13 = v972;
          v974(v971, v1300, v975);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v966 + 56))(v963, 0, 1, v965);
        }
        v20 = v1373;
        v17 = a2;
        v976 = v957[7];
        v977 = &v1373[v976];
        v12 = v1331;
        v978 = &v1331[v976];
        v979 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v979 - 8) + 16))(v977, v978, v979);
        v21 = v1361;
        swift_storeEnumTagMultiPayload();
        v18 = a3;
LABEL_270:
        v16 = a1;
        v14 = v1370;
        goto LABEL_294;
      case 0x21u:
        v1362 = v21;
        v1301 = v13;
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        v240 = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v241 = v240[5];
        v242 = &v1373[v241];
        v1332 = v12;
        v243 = &v12[v241];
        v244 = type metadata accessor for TranscriptProtoStatementID(0);
        v245 = *(_QWORD *)(v244 - 8);
        v246 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v245 + 48);
        swift_bridgeObjectRetain();
        if (v246(v243, 1, v244))
        {
          v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v242 = *(_DWORD *)v243;
          v443 = v243[2];
          v242[1] = v243[1];
          v242[2] = v443;
          v444 = *(int *)(v244 + 24);
          v445 = v240;
          v446 = (char *)v242 + v444;
          v447 = (char *)v243 + v444;
          v448 = sub_2408E57A4();
          v449 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v448 - 8) + 16);
          swift_bridgeObjectRetain();
          v450 = v446;
          v240 = v445;
          v449(v450, v447, v448);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v245 + 56))(v242, 0, 1, v244);
        }
        v451 = v240[6];
        v452 = &v1373[v451];
        v12 = v1332;
        v453 = &v1332[v451];
        v454 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v455 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v454 - 8);
        v21 = v1362;
        v14 = v1370;
        if (v455[6](v453, 1, v454))
        {
          v456 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v452, v453, *(_QWORD *)(*(_QWORD *)(v456 - 8) + 64));
        }
        else
        {
          v1250 = v454;
          v575 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          __dste = v455;
          v1293 = v240;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v575 - 8) + 48))(v453, 1, v575))
          {
            v700 = (char *)&loc_24053E3C8 + 4 * word_24090149A[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v576 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v452, v453, *(_QWORD *)(*(_QWORD *)(v576 - 8) + 64));
          v1048 = *(int *)(v1250 + 20);
          v1049 = &v452[v1048];
          v1050 = &v453[v1048];
          v1051 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1051 - 8) + 16))(v1049, v1050, v1051);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dste[7])(v452, 0, 1, v1250);
          v240 = v1293;
        }
        v1052 = v240[7];
        v20 = v1373;
        v1053 = &v1373[v1052];
        v1054 = &v1332[v1052];
        v1055 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1055 - 8) + 16))(v1053, v1054, v1055);
        goto LABEL_290;
      case 0x22u:
        v248 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v248;
        *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
        v249 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v1307 = v13;
        v250 = &v1373[v249];
        v1363 = v21;
        v251 = &v12[v249];
        v252 = sub_2408E57A4();
        v253 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v252 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v254 = v250;
        v13 = v1307;
        v255 = v251;
        v21 = v1363;
        v256 = v252;
        v16 = a1;
        v253(v254, v255, v256);
        v14 = v1370;
        swift_storeEnumTagMultiPayload();
        goto LABEL_294;
      case 0x23u:
        v257 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v258 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v257 - 8);
        v1333 = v12;
        v1364 = v21;
        if (v258[6](v12, 1, v257))
        {
          v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
          v260 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
        }
        else
        {
          __dstd = v258;
          v1313 = v13;
          v457 = *((_QWORD *)v12 + 1);
          *(_QWORD *)v1373 = *(_QWORD *)v12;
          *((_QWORD *)v1373 + 1) = v457;
          v458 = *((_QWORD *)v12 + 3);
          *((_QWORD *)v1373 + 2) = *((_QWORD *)v12 + 2);
          *((_QWORD *)v1373 + 3) = v458;
          v1373[32] = v12[32];
          v459 = v12;
          v460 = *((_QWORD *)v12 + 5);
          v461 = *((_QWORD *)v12 + 6);
          *((_QWORD *)v1373 + 5) = v460;
          *((_QWORD *)v1373 + 6) = v461;
          v462 = *((_QWORD *)v459 + 8);
          *((_QWORD *)v1373 + 7) = *((_QWORD *)v459 + 7);
          *((_QWORD *)v1373 + 8) = v462;
          *((_QWORD *)v1373 + 9) = *((_QWORD *)v459 + 9);
          v1373[80] = v459[80];
          v463 = *((_QWORD *)v459 + 12);
          *((_QWORD *)v1373 + 11) = *((_QWORD *)v459 + 11);
          *((_QWORD *)v1373 + 12) = v463;
          v464 = *((_QWORD *)v459 + 14);
          *((_QWORD *)v1373 + 13) = *((_QWORD *)v459 + 13);
          *((_QWORD *)v1373 + 14) = v464;
          v1290 = (int *)v257;
          v465 = *(int *)(v257 + 68);
          v1223 = &v1373[v465];
          v466 = (uint64_t *)&v459[v465];
          v467 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v468 = *(_QWORD *)(v467 - 8);
          v469 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v468 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v469(v466, 1, v467))
          {
            v470 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v1223, v466, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
          }
          else
          {
            v669 = *v466;
            if ((~*v466 & 0xF000000000000007) != 0)
              swift_retain();
            *v1223 = v669;
            v670 = *(int *)(v467 + 20);
            v671 = (char *)v1223 + v670;
            v672 = (char *)v466 + v670;
            v673 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v673 - 8) + 16))(v671, v672, v673);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v468 + 56))(v1223, 0, 1, v467);
          }
          v674 = v1333;
          v675 = v1290;
          v676 = v1290[18];
          v677 = v1373;
          v678 = &v1373[v676];
          v679 = &v1333[v676];
          v680 = v679[1];
          *v678 = *v679;
          v678[1] = v680;
          v681 = v1290[19];
          v682 = &v1373[v681];
          v683 = &v1333[v681];
          v684 = type metadata accessor for ToolKitProtoAppDefinition(0);
          v685 = *(_QWORD **)(v684 - 8);
          v686 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v685[6];
          swift_bridgeObjectRetain();
          if (v686(v683, 1, v684))
          {
            v687 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
            memcpy(v682, v683, *(_QWORD *)(*(_QWORD *)(v687 - 8) + 64));
          }
          else
          {
            v1235 = v685;
            v702 = v683[1];
            *v682 = *v683;
            v682[1] = v702;
            v703 = v683[3];
            v682[2] = v683[2];
            v682[3] = v703;
            v704 = v683[5];
            v682[4] = v683[4];
            v682[5] = v704;
            v705 = v683[7];
            v682[6] = v683[6];
            v682[7] = v705;
            v706 = v683[9];
            v682[8] = v683[8];
            v682[9] = v706;
            *((_BYTE *)v682 + 80) = *((_BYTE *)v683 + 80);
            v707 = *(int *)(v684 + 40);
            v1229 = (_QWORD *)((char *)v682 + v707);
            v708 = (_QWORD *)((char *)v683 + v707);
            v709 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v1226 = *(_QWORD *)(v709 - 8);
            __srcd = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1226 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__srcd(v708, 1, v709))
            {
              v710 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(v1229, v708, *(_QWORD *)(*(_QWORD *)(v710 - 8) + 64));
              v674 = v1333;
            }
            else
            {
              v712 = v708[1];
              if (v712 == 1)
              {
                *(_OWORD *)v1229 = *(_OWORD *)v708;
              }
              else
              {
                *v1229 = *v708;
                v1229[1] = v712;
                swift_bridgeObjectRetain();
              }
              v760 = *(int *)(v709 + 20);
              v761 = (char *)v1229 + v760;
              v762 = (char *)v708 + v760;
              v763 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v763 - 8) + 16))(v761, v762, v763);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1226 + 56))(v1229, 0, 1, v709);
              v674 = v1333;
              v675 = v1290;
            }
            v764 = *(int *)(v684 + 44);
            v765 = (char *)v682 + v764;
            v766 = (char *)v683 + v764;
            v767 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v767 - 8) + 16))(v765, v766, v767);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1235 + 7))(v682, 0, 1, v684);
            v677 = v1373;
          }
          v768 = v675[20];
          v769 = &v677[v768];
          v770 = &v674[v768];
          v771 = v770[1];
          *v769 = *v770;
          v769[1] = v771;
          v772 = v675[21];
          v773 = &v677[v772];
          v774 = &v674[v772];
          v775 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          v776 = *(_QWORD *)(v775 - 8);
          v777 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v776 + 48);
          swift_bridgeObjectRetain();
          if (v777(v774, 1, v775))
          {
            v778 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v773, v774, *(_QWORD *)(*(_QWORD *)(v778 - 8) + 64));
          }
          else
          {
            v779 = v774[1];
            *v773 = *v774;
            v773[1] = v779;
            v780 = v774[3];
            v773[2] = v774[2];
            v773[3] = v780;
            v781 = *(int *)(v775 + 24);
            v782 = (char *)v773 + v781;
            v783 = (char *)v774 + v781;
            v784 = sub_2408E57A4();
            v785 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v784 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v785(v782, v783, v784);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v776 + 56))(v773, 0, 1, v775);
          }
          v786 = v675[22];
          v260 = v1373;
          v787 = &v1373[v786];
          v12 = v1333;
          v788 = &v1333[v786];
          v789 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          v790 = *(_QWORD *)(v789 - 8);
          v14 = v1370;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v790 + 48))(v788, 1, v789))
          {
            v791 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
            memcpy(v787, v788, *(_QWORD *)(*(_QWORD *)(v791 - 8) + 64));
          }
          else
          {
            v792 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v793 = *(_QWORD *)(v792 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v793 + 48))(v788, 1, v792))
            {
              v794 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
              memcpy(v787, v788, *(_QWORD *)(*(_QWORD *)(v794 - 8) + 64));
            }
            else
            {
              v795 = v792;
              v796 = swift_getEnumCaseMultiPayload();
              v797 = v788[1];
              *v787 = *v788;
              v787[1] = v797;
              if (v796 == 1)
              {
                *((_BYTE *)v787 + 16) = *((_BYTE *)v788 + 16);
                v798 = v788[4];
                v787[3] = v788[3];
                v787[4] = v798;
                v799 = v788[6];
                v787[5] = v788[5];
                v787[6] = v799;
                v800 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v1237 = (char *)v788 + v800;
                __srce = (char *)v787 + v800;
                v801 = sub_2408E57A4();
                v802 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v801 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v802(__srce, v1237, v801);
              }
              else
              {
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v793 + 56))(v787, 0, 1, v795);
              v12 = v1333;
              v14 = v1370;
              v675 = v1290;
            }
            v803 = *(int *)(v789 + 20);
            v804 = (char *)v787 + v803;
            v805 = (char *)v788 + v803;
            v806 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v806 - 8) + 16))(v804, v805, v806);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v790 + 56))(v787, 0, 1, v789);
            v260 = v1373;
          }
          v807 = v675[23];
          v808 = &v260[v807];
          v809 = &v12[v807];
          v810 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v811 = *(_QWORD *)(v810 - 8);
          v812 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v811 + 48);
          v13 = v1313;
          if (v812(v809, 1, v810))
          {
            v813 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v808, v809, *(_QWORD *)(*(_QWORD *)(v813 - 8) + 64));
          }
          else
          {
            __srcb = v812;
            v1252 = v811;
            v814 = v809[1];
            *v808 = *v809;
            v808[1] = v814;
            v815 = v809[3];
            v808[2] = v809[2];
            v808[3] = v815;
            *((_WORD *)v808 + 16) = *((_WORD *)v809 + 16);
            v816 = v809[6];
            v808[5] = v809[5];
            v808[6] = v816;
            v817 = v809[8];
            v808[7] = v809[7];
            v808[8] = v817;
            v818 = *(int *)(v810 + 40);
            v1238 = (_QWORD *)((char *)v808 + v818);
            v819 = (_QWORD *)((char *)v809 + v818);
            v820 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1230 = *(_QWORD **)(v820 - 8);
            v821 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1230[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v821(v819, 1, v820))
            {
              v822 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1238, v819, *(_QWORD *)(*(_QWORD *)(v822 - 8) + 64));
            }
            else
            {
              v823 = v819[1];
              if (v823 == 1)
              {
                *(_OWORD *)v1238 = *(_OWORD *)v819;
              }
              else
              {
                *v1238 = *v819;
                v1238[1] = v823;
                swift_bridgeObjectRetain();
              }
              v824 = *(int *)(v820 + 20);
              v825 = (char *)v1238 + v824;
              v826 = (char *)v819 + v824;
              v827 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v827 - 8) + 16))(v825, v826, v827);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1230[7])(v1238, 0, 1, v820);
            }
            v13 = v1313;
            v12 = v1333;
            v14 = v1370;
            v675 = v1290;
            v828 = *(int *)(v810 + 44);
            v829 = (char *)v808 + v828;
            v830 = (char *)v809 + v828;
            v831 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v831 - 8) + 16))(v829, v830, v831);
            v811 = v1252;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1252 + 56))(v808, 0, 1, v810);
            v260 = v1373;
            v812 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))__srcb;
          }
          v832 = v675[24];
          v833 = &v260[v832];
          v834 = &v12[v832];
          if (v812(&v12[v832], 1, v810))
          {
            v835 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v833, v834, *(_QWORD *)(*(_QWORD *)(v835 - 8) + 64));
          }
          else
          {
            v1253 = v811;
            v836 = v834[1];
            *v833 = *v834;
            v833[1] = v836;
            v837 = v834[3];
            v833[2] = v834[2];
            v833[3] = v837;
            *((_WORD *)v833 + 16) = *((_WORD *)v834 + 16);
            v838 = v834[6];
            v833[5] = v834[5];
            v833[6] = v838;
            v839 = v834[8];
            v833[7] = v834[7];
            v833[8] = v839;
            v840 = *(int *)(v810 + 40);
            v1239 = (_QWORD *)((char *)v833 + v840);
            v841 = (_QWORD *)((char *)v834 + v840);
            v842 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1231 = *(_QWORD **)(v842 - 8);
            __srcf = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1231[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__srcf(v841, 1, v842))
            {
              v843 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1239, v841, *(_QWORD *)(*(_QWORD *)(v843 - 8) + 64));
              v13 = v1313;
              v12 = v1333;
              v14 = v1370;
            }
            else
            {
              v844 = v841[1];
              if (v844 == 1)
              {
                *(_OWORD *)v1239 = *(_OWORD *)v841;
              }
              else
              {
                *v1239 = *v841;
                v1239[1] = v844;
                swift_bridgeObjectRetain();
              }
              v845 = *(int *)(v842 + 20);
              v846 = (char *)v1239 + v845;
              v847 = (char *)v841 + v845;
              v848 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v848 - 8) + 16))(v846, v847, v848);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1231[7])(v1239, 0, 1, v842);
              v13 = v1313;
              v12 = v1333;
              v14 = v1370;
              v675 = v1290;
            }
            v849 = *(int *)(v810 + 44);
            v850 = (char *)v833 + v849;
            v851 = (char *)v834 + v849;
            v852 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v852 - 8) + 16))(v850, v851, v852);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1253 + 56))(v833, 0, 1, v810);
            v260 = v1373;
          }
          v853 = v675[25];
          v854 = &v260[v853];
          v855 = &v12[v853];
          v856 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v856 - 8) + 16))(v854, v855, v856);
          (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))__dstd + 7))(v260, 0, 1, v675);
        }
        v511 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v857 = v511[5];
        v858 = &v260[v857];
        v859 = &v12[v857];
        v860 = type metadata accessor for TranscriptProtoStatementID(0);
        v861 = *(_QWORD *)(v860 - 8);
        v862 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v861 + 48);
        if (v862(v859, 1, v860))
        {
          v863 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v858, v859, *(_QWORD *)(*(_QWORD *)(v863 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v858 = *(_DWORD *)v859;
          v864 = v859[2];
          v858[1] = v859[1];
          v858[2] = v864;
          v865 = *(int *)(v860 + 24);
          v1297 = (char *)v858 + v865;
          v1320 = v13;
          v866 = (char *)v859 + v865;
          v867 = sub_2408E57A4();
          v868 = v14;
          v869 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v867 - 8) + 16);
          swift_bridgeObjectRetain();
          v870 = v866;
          v13 = v1320;
          v869(v1297, v870, v867);
          v14 = v868;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v861 + 56))(v858, 0, 1, v860);
        }
        v871 = v511[6];
        v620 = &v1373[v871];
        v621 = &v1333[v871];
        if (v862(&v1333[v871], 1, v860))
          goto LABEL_245;
        *(_DWORD *)v620 = *(_DWORD *)v621;
        v873 = v621[2];
        v620[1] = v621[1];
        v620[2] = v873;
        v874 = *(int *)(v860 + 24);
        v1298 = (char *)v620 + v874;
        v875 = v13;
        v876 = (char *)v621 + v874;
        v877 = sub_2408E57A4();
        v878 = v14;
        v879 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v877 - 8) + 16);
        swift_bridgeObjectRetain();
        v880 = v876;
        v13 = v875;
        v879(v1298, v880, v877);
        v14 = v878;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v861 + 56))(v620, 0, 1, v860);
        goto LABEL_247;
      case 0x24u:
        v1365 = v21;
        v1308 = v13;
        v261 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v261;
        v1373[16] = v12[16];
        v262 = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1373 + 3) = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 4) = v262;
        v1285 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v263 = *(int *)(v1285 + 28);
        v264 = &v1373[v263];
        v265 = &v12[v263];
        v266 = type metadata accessor for TranscriptProtoStatementID(0);
        v267 = *(_QWORD *)(v266 - 8);
        v268 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v267 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v268(v265, 1, v266))
        {
          v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v264 = *(_DWORD *)v265;
          v471 = v265[2];
          v264[1] = v265[1];
          v264[2] = v471;
          v472 = *(int *)(v266 + 24);
          __dstl = (char *)v264 + v472;
          v473 = (char *)v265 + v472;
          v474 = v12;
          v475 = sub_2408E57A4();
          v476 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 16);
          swift_bridgeObjectRetain();
          v477 = v475;
          v12 = v474;
          v476(__dstl, v473, v477);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v267 + 56))(v264, 0, 1, v266);
        }
        v478 = v1285;
        v479 = *(int *)(v1285 + 32);
        v480 = &v1373[v479];
        v481 = v12;
        v482 = &v12[v479];
        v16 = a1;
        if (v268(v482, 1, v266))
        {
          v483 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v480, v482, *(_QWORD *)(*(_QWORD *)(v483 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v480 = *(_DWORD *)v482;
          v577 = v482[2];
          v480[1] = v482[1];
          v480[2] = v577;
          v578 = *(int *)(v266 + 24);
          v579 = (char *)v480 + v578;
          v580 = (char *)v482 + v578;
          v581 = sub_2408E57A4();
          v582 = v14;
          v583 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v581 - 8) + 16);
          swift_bridgeObjectRetain();
          v584 = v580;
          v16 = a1;
          v583(v579, v584, v581);
          v14 = v582;
          v478 = v1285;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v267 + 56))(v480, 0, 1, v266);
        }
        v18 = a3;
        v13 = v1308;
        v585 = *(int *)(v478 + 36);
        v20 = v1373;
        v586 = &v1373[v585];
        v12 = v481;
        v587 = &v481[v585];
        v588 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v588 - 8) + 16))(v586, v587, v588);
        v21 = v1365;
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        goto LABEL_294;
      case 0x25u:
        v1366 = v21;
        v270 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v270;
        v1373[16] = v12[16];
        v271 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v272 = v271[6];
        v273 = &v1373[v272];
        v1334 = v12;
        v274 = &v12[v272];
        v275 = type metadata accessor for TranscriptProtoStatementID(0);
        v276 = *(_QWORD *)(v275 - 8);
        v277 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v276 + 48);
        swift_bridgeObjectRetain();
        if (v277(v274, 1, v275))
        {
          v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v273 = *(_DWORD *)v274;
          v484 = v274[2];
          v273[1] = v274[1];
          v273[2] = v484;
          v485 = *(int *)(v275 + 24);
          v1291 = (char *)v273 + v485;
          v1314 = v13;
          v486 = (char *)v274 + v485;
          v487 = sub_2408E57A4();
          v488 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 16);
          swift_bridgeObjectRetain();
          v489 = v486;
          v13 = v1314;
          v488(v1291, v489, v487);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
        }
        v490 = v271[7];
        v491 = &v1373[v490];
        v492 = &v1334[v490];
        if (v277(&v1334[v490], 1, v275))
        {
          v493 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v491, v492, *(_QWORD *)(*(_QWORD *)(v493 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v491 = *(_DWORD *)v492;
          v589 = v492[2];
          v491[1] = v492[1];
          v491[2] = v589;
          v590 = *(int *)(v275 + 24);
          v1294 = (char *)v491 + v590;
          v591 = v13;
          v592 = (char *)v492 + v590;
          v593 = sub_2408E57A4();
          v594 = v14;
          v595 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v593 - 8) + 16);
          swift_bridgeObjectRetain();
          v596 = v592;
          v13 = v591;
          v595(v1294, v596, v593);
          v14 = v594;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v491, 0, 1, v275);
        }
        v18 = a3;
        v597 = v271[8];
        v20 = v1373;
        v598 = &v1373[v597];
        v12 = v1334;
        v599 = &v1334[v597];
        v600 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v600 - 8) + 16))(v598, v599, v600);
        v21 = v1366;
        goto LABEL_248;
      case 0x26u:
        v1367 = v21;
        v279 = type metadata accessor for ToolKitProtoTypedValue(0);
        v280 = *(_QWORD *)(v279 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v280 + 48))(v12, 1, v279))
        {
          v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v282 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
        }
        else
        {
          v494 = *(_QWORD *)v12;
          if ((~*(_QWORD *)v12 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1373 = v494;
          v495 = *(int *)(v279 + 20);
          v496 = &v1373[v495];
          v497 = &v12[v495];
          v498 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v498 - 8) + 16))(v496, v497, v498);
          v282 = v1373;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v1373, 0, 1, v279);
        }
        v499 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v500 = v499[5];
        v501 = &v282[v500];
        v1337 = v12;
        v502 = (uint64_t *)&v12[v500];
        v503 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v504 = *(_QWORD *)(v503 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v504 + 48))(v502, 1, v503))
        {
          v505 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v505 - 8) + 64));
        }
        else
        {
          v601 = *v502;
          if ((~*v502 & 0xF000000000000007) != 0)
            swift_retain();
          *v501 = v601;
          v602 = *(int *)(v503 + 20);
          v603 = (char *)v501 + v602;
          v604 = (char *)v502 + v602;
          v605 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v605 - 8) + 16))(v603, v604, v605);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v504 + 56))(v501, 0, 1, v503);
        }
        v606 = v499[6];
        v607 = &v1373[v606];
        v608 = &v1337[v606];
        v609 = type metadata accessor for TranscriptProtoStatementID(0);
        v610 = *(_QWORD *)(v609 - 8);
        v14 = v1370;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v610 + 48))(v608, 1, v609))
        {
          v611 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v607, v608, *(_QWORD *)(*(_QWORD *)(v611 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v607 = *(_DWORD *)v608;
          v624 = v608[2];
          v607[1] = v608[1];
          v607[2] = v624;
          v625 = *(int *)(v609 + 24);
          v626 = (char *)v607 + v625;
          v1318 = v13;
          v627 = (char *)v608 + v625;
          v628 = sub_2408E57A4();
          v629 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v628 - 8) + 16);
          swift_bridgeObjectRetain();
          v630 = v627;
          v13 = v1318;
          v629(v626, v630, v628);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v610 + 56))(v607, 0, 1, v609);
        }
        v20 = v1373;
        v17 = a2;
        v631 = v499[7];
        v632 = &v1373[v631];
        v12 = v1337;
        v633 = &v1337[v631];
        v634 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v634 - 8) + 16))(v632, v633, v634);
        v21 = v1367;
LABEL_256:
        swift_storeEnumTagMultiPayload();
        v16 = a1;
        v18 = a3;
        goto LABEL_294;
      case 0x27u:
        v1364 = v21;
        v283 = type metadata accessor for ToolKitProtoTypedValue(0);
        v284 = *(_QWORD *)(v283 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v284 + 48))(v12, 1, v283))
        {
          v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v286 = v1373;
          memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          v506 = *(_QWORD *)v12;
          if ((~*(_QWORD *)v12 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1373 = v506;
          v507 = *(int *)(v283 + 20);
          v508 = &v1373[v507];
          v509 = &v12[v507];
          v510 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v510 - 8) + 16))(v508, v509, v510);
          v286 = v1373;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v284 + 56))(v1373, 0, 1, v283);
        }
        v511 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v512 = v511[5];
        v513 = &v286[v512];
        v1333 = v12;
        v514 = &v12[v512];
        v515 = type metadata accessor for TranscriptProtoStatementID(0);
        v516 = *(_QWORD *)(v515 - 8);
        v517 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v516 + 48);
        if (v517(v514, 1, v515))
        {
          v518 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v513, v514, *(_QWORD *)(*(_QWORD *)(v518 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v513 = *(_DWORD *)v514;
          v612 = v514[2];
          v513[1] = v514[1];
          v513[2] = v612;
          v613 = *(int *)(v515 + 24);
          v614 = (char *)v513 + v613;
          v1317 = v13;
          v615 = (char *)v514 + v613;
          v616 = sub_2408E57A4();
          v617 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v616 - 8) + 16);
          swift_bridgeObjectRetain();
          v618 = v615;
          v13 = v1317;
          v617(v614, v618, v616);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v516 + 56))(v513, 0, 1, v515);
        }
        v619 = v511[6];
        v620 = &v1373[v619];
        v621 = &v1333[v619];
        v14 = v1370;
        if (v517(&v1333[v619], 1, v515))
        {
LABEL_245:
          v872 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v620, v621, *(_QWORD *)(*(_QWORD *)(v872 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v620 = *(_DWORD *)v621;
          v635 = v621[2];
          v620[1] = v621[1];
          v620[2] = v635;
          v636 = *(int *)(v515 + 24);
          v637 = (char *)v620 + v636;
          v638 = v13;
          v639 = (char *)v621 + v636;
          v640 = sub_2408E57A4();
          v641 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v640 - 8) + 16);
          swift_bridgeObjectRetain();
          v642 = v639;
          v13 = v638;
          v641(v637, v642, v640);
          v14 = v1370;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v516 + 56))(v620, 0, 1, v515);
        }
LABEL_247:
        v18 = a3;
        v881 = v511[7];
        v20 = v1373;
        v882 = &v1373[v881];
        v12 = v1333;
        v883 = &v1333[v881];
        v884 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v884 - 8) + 16))(v882, v883, v884);
        v21 = v1364;
LABEL_248:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v16 = a1;
        goto LABEL_294;
      case 0x28u:
        v1368 = v21;
        v1301 = v13;
        v287 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v287;
        v288 = v12;
        v289 = *((_QWORD *)v12 + 2);
        v290 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1373 + 2) = v289;
        *((_QWORD *)v1373 + 3) = v290;
        DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v291 = *(int *)(DecorationResult + 32);
        v292 = &v1373[v291];
        v1335 = v288;
        v293 = &v288[v291];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        v295 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
        v296 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v295 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v296(v293, 1, DecorationToolRetrievalResponse))
        {
          v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
          memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
        }
        else
        {
          v519 = v293[1];
          *v292 = *v293;
          v292[1] = v519;
          v520 = v293[3];
          v292[2] = v293[2];
          v292[3] = v520;
          *((_DWORD *)v292 + 8) = *((_DWORD *)v293 + 8);
          v521 = v293[6];
          v292[5] = v293[5];
          v292[6] = v521;
          v522 = *(int *)(DecorationToolRetrievalResponse + 36);
          v523 = (char *)v292 + v522;
          __dstm = (char *)v293 + v522;
          v524 = sub_2408E57A4();
          v525 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v524 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v525(v523, __dstm, v524);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v295 + 56))(v292, 0, 1, DecorationToolRetrievalResponse);
        }
        v20 = v1373;
        v17 = a2;
        v14 = v1370;
        v526 = *(int *)(DecorationResult + 36);
        v527 = &v1373[v526];
        v12 = v1335;
        v528 = &v1335[v526];
        v529 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v529 - 8) + 16))(v527, v528, v529);
        v21 = v1368;
        swift_storeEnumTagMultiPayload();
        goto LABEL_291;
      case 0x2Au:
        v1369 = v21;
        v1301 = v13;
        v298 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1373 = *(_QWORD *)v12;
        *((_QWORD *)v1373 + 1) = v298;
        DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v300 = DecorationPrePlannerResult[5];
        v301 = &v1373[v300];
        v1336 = v12;
        v302 = &v12[v300];
        v303 = type metadata accessor for TranscriptProtoStatementID(0);
        v304 = *(_QWORD *)(v303 - 8);
        v305 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v304 + 48);
        swift_bridgeObjectRetain();
        if (v305(v302, 1, v303))
        {
          v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v301 = *(_DWORD *)v302;
          v530 = v302[2];
          v301[1] = v302[1];
          v301[2] = v530;
          v531 = *(int *)(v303 + 24);
          v532 = DecorationPrePlannerResult;
          v533 = (char *)v301 + v531;
          v534 = (char *)v302 + v531;
          v535 = sub_2408E57A4();
          v536 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 16);
          swift_bridgeObjectRetain();
          v537 = v533;
          DecorationPrePlannerResult = v532;
          v536(v537, v534, v535);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v304 + 56))(v301, 0, 1, v303);
        }
        v538 = DecorationPrePlannerResult[6];
        v20 = v1373;
        v539 = &v1373[v538];
        v12 = v1336;
        v540 = &v1336[v538];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        v542 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
        v21 = v1369;
        v14 = v1370;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v542 + 48))(v540, 1, DecorationPrePlannerResultPayload))
        {
          v543 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
          memcpy(v539, v540, *(_QWORD *)(*(_QWORD *)(v543 - 8) + 64));
        }
        else
        {
          v1295 = DecorationPrePlannerResult;
          DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                     - 8)
                                                                         + 48))(v540, 1, DecorationPrePlannerPayloadEnum))
          {
            v701 = (char *)&loc_24053E46C + 4 * word_24090148E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v623 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
          memcpy(v539, v540, *(_QWORD *)(*(_QWORD *)(v623 - 8) + 64));
          v885 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v886 = &v539[v885];
          v887 = &v540[v885];
          v888 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v888 - 8) + 16))(v886, v887, v888);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v542 + 56))(v539, 0, 1, DecorationPrePlannerResultPayload);
          DecorationPrePlannerResult = v1295;
        }
        v889 = DecorationPrePlannerResult[7];
        v890 = &v1373[v889];
        v891 = &v1336[v889];
        v892 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v892 - 8) + 16))(v890, v891, v892);
LABEL_290:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
LABEL_291:
        v18 = a3;
        goto LABEL_292;
      default:
        memcpy(v1373, v12, *(_QWORD *)(v1372 + 64));
        goto LABEL_294;
    }
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  memcpy(v1373, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  v17 = a2;
  v16 = a1;
  v18 = a3;
LABEL_296:
  v1060 = v18[12];
  v1061 = v18[13];
  v1062 = (_QWORD *)((char *)v16 + v1060);
  v1063 = (_QWORD *)((char *)v17 + v1060);
  v1064 = v1063[1];
  *v1062 = *v1063;
  v1062[1] = v1064;
  v1065 = (_QWORD *)((char *)v16 + v1061);
  v1066 = (_QWORD *)((char *)v17 + v1061);
  v1067 = type metadata accessor for TranscriptProtoTimepoint(0);
  v1068 = *(_QWORD *)(v1067 - 8);
  v1069 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1068 + 48);
  swift_bridgeObjectRetain();
  if (v1069(v1066, 1, v1067))
  {
    v1070 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v1065, v1066, *(_QWORD *)(*(_QWORD *)(v1070 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v1065 = *(_OWORD *)v1066;
    v1071 = v1066[3];
    v1065[2] = v1066[2];
    v1065[3] = v1071;
    v1072 = *(int *)(v1067 + 28);
    v1073 = (char *)v1065 + v1072;
    v1074 = (char *)v1066 + v1072;
    v1075 = sub_2408E5750();
    v1076 = *(_QWORD *)(v1075 - 8);
    v1077 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1076 + 48);
    swift_bridgeObjectRetain();
    if (v1077(v1074, 1, v1075))
    {
      v1078 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v1073, v1074, *(_QWORD *)(*(_QWORD *)(v1078 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1076 + 16))(v1073, v1074, v1075);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1076 + 56))(v1073, 0, 1, v1075);
    }
    v1079 = *(int *)(v1067 + 32);
    v1080 = (char *)v1065 + v1079;
    v1081 = (char *)v1066 + v1079;
    v1082 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1082 - 8) + 16))(v1080, v1081, v1082);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1068 + 56))(v1065, 0, 1, v1067);
    v17 = a2;
    v16 = a1;
    v18 = a3;
  }
  v1083 = v18[14];
  v1084 = (char *)v16 + v1083;
  v1085 = (char *)v17 + v1083;
  v1086 = sub_2408E5750();
  v1087 = *(_QWORD *)(v1086 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1087 + 48))(v1085, 1, v1086))
  {
    v1088 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v1084, v1085, *(_QWORD *)(*(_QWORD *)(v1088 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1087 + 16))(v1084, v1085, v1086);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1087 + 56))(v1084, 0, 1, v1086);
  }
  v1089 = v18[15];
  v1090 = (_QWORD *)((char *)v16 + v1089);
  v1091 = (_QWORD *)((char *)v17 + v1089);
  v1092 = type metadata accessor for TranscriptProtoParticipantID(0);
  v1093 = *(_QWORD *)(v1092 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1093 + 48))(v1091, 1, v1092))
  {
    v1094 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v1090, v1091, *(_QWORD *)(*(_QWORD *)(v1094 - 8) + 64));
  }
  else
  {
    v1095 = v1091[1];
    *v1090 = *v1091;
    v1090[1] = v1095;
    v1096 = *(int *)(v1092 + 20);
    v1097 = v16;
    v1098 = (char *)v1090 + v1096;
    v1099 = (char *)v1091 + v1096;
    v1100 = sub_2408E57A4();
    v1101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1100 - 8) + 16);
    swift_bridgeObjectRetain();
    v1102 = v1100;
    v18 = a3;
    v1101(v1098, v1099, v1102);
    v16 = v1097;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1093 + 56))(v1090, 0, 1, v1092);
  }
  v1103 = v18[16];
  v1104 = (_QWORD *)((char *)v16 + v1103);
  v1105 = (_QWORD *)((char *)v17 + v1103);
  v1106 = type metadata accessor for TranscriptProtoSpanID(0);
  v1107 = *(_QWORD *)(v1106 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1107 + 48))(v1105, 1, v1106))
  {
    v1108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v1104, v1105, *(_QWORD *)(*(_QWORD *)(v1108 - 8) + 64));
  }
  else
  {
    *v1104 = *v1105;
    v1109 = *(int *)(v1106 + 20);
    v1110 = (char *)v1104 + v1109;
    v1111 = (char *)v1105 + v1109;
    v1112 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1112 - 8) + 16))(v1110, v1111, v1112);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1107 + 56))(v1104, 0, 1, v1106);
  }
  v1113 = v18[17];
  v1114 = (char *)v16 + v1113;
  v1115 = (char *)v17 + v1113;
  v1116 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1116 - 8) + 16))(v1114, v1115, v1116);
  return v16;
}

uint64_t destroy for TranscriptProtoEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *StepResults;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *DecorationResult;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Step;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  int *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v126;
  int *v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  _QWORD *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  unsigned int (*v191)(uint64_t, uint64_t, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int (*v210)(uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int (*v245)(uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  int EnumCaseMultiPayload;
  uint64_t v261;
  uint64_t v262;
  int *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  int *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unsigned int (*v359)(uint64_t, uint64_t, uint64_t);
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  int v368;
  uint64_t v369;
  uint64_t v370;
  int v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  unsigned int (*v415)(uint64_t, uint64_t, uint64_t);
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  int v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  int *v449;
  uint64_t v450;
  uint64_t v451;
  unsigned int (*v452)(uint64_t, uint64_t, uint64_t);
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  int *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  unsigned int (*v518)(uint64_t, uint64_t, uint64_t);
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  int *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  int *v527;
  int *v528;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[11];
  v5 = type metadata accessor for TranscriptProtoPayload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
LABEL_460:
      v487 = v4 + *(int *)(v5 + 20);
      v488 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v488 - 8) + 8))(v487, v488);
      goto LABEL_461;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        StepResults = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v9 = v4 + StepResults[5];
        v10 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v9 + *(int *)(v10 + 28);
          v12 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        }
        v13 = v4 + StepResults[6];
        v14 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
          goto LABEL_458;
        swift_bridgeObjectRelease();
        v15 = v13 + *(int *)(v14 + 20);
        v16 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        {
          v17 = v15 + *(int *)(v16 + 20);
          v18 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        }
        v19 = *(int *)(v14 + 24);
        goto LABEL_456;
      case 1u:
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for TranscriptProtoTextQuery(0);
        v21 = v4 + *(int *)(v20 + 24);
        v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
        {
          swift_bridgeObjectRelease();
          v23 = v21 + *(int *)(v22 + 24);
          v24 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        }
        swift_bridgeObjectRelease();
        v25 = *(int *)(v20 + 32);
        goto LABEL_459;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        goto LABEL_459;
      case 3u:
        DecorationResult = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v27 = v4 + DecorationResult[5];
        v28 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
        {
          v29 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v27, 1, v29))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v30 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v31 = v27 + *(int *)(v30 + 20);
                v32 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
                {
                  swift_bridgeObjectRelease();
                  v33 = v31 + *(int *)(v32 + 24);
                  v34 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
                }
                v35 = *(int *)(v30 + 24);
                goto LABEL_366;
              case 1u:
                swift_bridgeObjectRelease();
                v35 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_366;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v523 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v257 = (_QWORD *)(v27 + v523[6]);
                v258 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v258 - 8) + 48))(v257, 1, v258))
                {
                  goto LABEL_353;
                }
                v259 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v259 - 8) + 48))(v257, 1, v259))
                {
                  goto LABEL_352;
                }
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 6)
                {
                  v373 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v373 - 8) + 8))(v257, v373);
                }
                else
                {
                  if (EnumCaseMultiPayload == 5)
                  {
                    v261 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (EnumCaseMultiPayload != 1)
                      goto LABEL_352;
                    if ((~*v257 & 0xF000000000000007) != 0)
                      swift_release();
                    v261 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v374 = (char *)v257 + *(int *)(v261 + 20);
                  v375 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v375 - 8) + 8))(v374, v375);
                }
LABEL_352:
                v376 = (char *)v257 + *(int *)(v258 + 20);
                v377 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v377 - 8) + 8))(v376, v377);
LABEL_353:
                v378 = v27 + v523[7];
                v379 = type metadata accessor for TranscriptProtoStatementID(0);
                v518 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v379 - 8) + 48);
                if (!v518(v378, 1, v379))
                {
                  swift_bridgeObjectRelease();
                  v380 = v378 + *(int *)(v379 + 24);
                  v381 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v381 - 8) + 8))(v380, v381);
                }
                v382 = v27 + v523[8];
                v519 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v519 - 8) + 48))(v382, 1))
                  goto LABEL_365;
                v383 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                v517 = v382;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v383 - 8) + 48))(v382, 1, v383))
                {
                  goto LABEL_364;
                }
                v384 = swift_getEnumCaseMultiPayload();
                if (v384 == 1)
                {
                  swift_bridgeObjectRelease();
                  v389 = v382
                       + *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v384)
                    goto LABEL_364;
                  swift_bridgeObjectRelease();
                  v385 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v386 = v517 + *(int *)(v385 + 20);
                  if (!v518(v386, 1, v379))
                  {
                    swift_bridgeObjectRelease();
                    v387 = v386 + *(int *)(v379 + 24);
                    v388 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v388 - 8) + 8))(v387, v388);
                  }
                  v389 = v517 + *(int *)(v385 + 24);
                }
                v390 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v390 - 8) + 8))(v389, v390);
LABEL_364:
                v391 = v517 + *(int *)(v519 + 20);
                v392 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v392 - 8) + 8))(v391, v392);
LABEL_365:
                v35 = v523[9];
LABEL_366:
                v393 = v27 + v35;
                v394 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v394 - 8) + 8))(v393, v394);
                break;
              case 3u:
                v262 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 8))(v27, v262);
                break;
              default:
                break;
            }
          }
          v395 = v27 + *(int *)(v28 + 20);
          v396 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v396 - 8) + 8))(v395, v396);
        }
        v397 = v4 + DecorationResult[6];
        v398 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v398 - 8) + 48))(v397, 1, v398))
        {
          v399 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v399 - 8) + 48))(v397, 1, v399))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v400 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
                goto LABEL_377;
              case 1u:
                swift_bridgeObjectRelease();
                v401 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                              + 20);
                goto LABEL_378;
              case 2u:
                swift_bridgeObjectRelease();
                v400 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
                goto LABEL_377;
              case 3u:
                swift_bridgeObjectRelease();
                v400 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
                goto LABEL_377;
              case 4u:
                swift_bridgeObjectRelease();
                v400 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
                goto LABEL_377;
              case 5u:
                swift_bridgeObjectRelease();
                v400 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_377:
                v401 = *(int *)(v400 + 24);
LABEL_378:
                v402 = v397 + v401;
                v403 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v403 - 8) + 8))(v402, v403);
                break;
              default:
                break;
            }
          }
          v404 = v397 + *(int *)(v398 + 20);
          v405 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v405 - 8) + 8))(v404, v405);
        }
        swift_bridgeObjectRelease();
        v215 = v4 + DecorationResult[8];
        v406 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v406 - 8) + 48))(v215, 1, v406))
          goto LABEL_384;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = *(int *)(v406 + 24);
        goto LABEL_382;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        goto LABEL_459;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = type metadata accessor for TranscriptProtoAction(0);
        v37 = v4 + *(int *)(v36 + 28);
        v38 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
        {
          swift_bridgeObjectRelease();
          v39 = v37 + *(int *)(v38 + 24);
          v40 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(v36 + 44);
        goto LABEL_459;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = (int *)type metadata accessor for TranscriptProtoClientAction(0);
        v42 = v4 + v41[9];
        v43 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
          goto LABEL_338;
        swift_bridgeObjectRelease();
        v44 = v42 + *(int *)(v43 + 24);
        goto LABEL_337;
      case 7u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        goto LABEL_29;
      case 8u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
LABEL_29:
        v46 = Step;
        v47 = v4 + *(int *)(Step + 20);
        v48 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          swift_bridgeObjectRelease();
          v49 = v47 + *(int *)(v48 + 24);
          v50 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
        }
        v25 = *(int *)(v46 + 24);
        goto LABEL_459;
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_460;
      case 0xAu:
        v51 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v4, 1, v51))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              v52 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
              goto LABEL_192;
            case 1u:
              v224 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 48))(v4, 1, v224)&& swift_getEnumCaseMultiPayload() <= 2)
              {
                swift_bridgeObjectRelease();
                v225 = v4 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
                v226 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 8))(v225, v226);
              }
              v227 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
              goto LABEL_191;
            case 2u:
              v228 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 48))(v4, 1, v228))
              {
                v229 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 48))(v4, 1, v229))
                {
                  swift_bridgeObjectRelease();
                  v230 = v4 + *(int *)(v229 + 24);
                  v231 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 8))(v230, v231);
                }
              }
              v227 = type metadata accessor for TranscriptProtoPlannerError(0);
              goto LABEL_191;
            case 3u:
              v232 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 48))(v4, 1, v232))
              {
                v233 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 48))(v4, 1, v233))
                {
                  swift_bridgeObjectRelease();
                  v234 = v4 + *(int *)(v233 + 24);
                  v235 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v235 - 8) + 8))(v234, v235);
                }
              }
              v227 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_191:
              v52 = *(int *)(v227 + 20);
LABEL_192:
              v236 = v4 + v52;
              v237 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 8))(v236, v237);
              break;
            default:
              break;
          }
        }
        v25 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        goto LABEL_459;
      case 0xBu:
        v53 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v4, 1, v53))
        {
          v54 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v4, 1, v54))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v55 = v4 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v56 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
          }
          v57 = v4 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v58 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
        }
        v25 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        goto LABEL_459;
      case 0xCu:
        sub_240363D58(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
        sub_240363D58(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        goto LABEL_459;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v59 = (_QWORD *)(v4 + DecorationResult[6]);
        v60 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v59, 1, v60))
          goto LABEL_198;
        v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v59, 1, v61))
          goto LABEL_197;
        v62 = swift_getEnumCaseMultiPayload();
        if (v62 == 6)
        {
          v238 = sub_2408E57A4();
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v238 - 8) + 8))(v59, v238);
        }
        else
        {
          if (v62 == 5)
          {
            v63 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
          }
          else
          {
            if (v62 != 1)
              goto LABEL_197;
            if ((~*v59 & 0xF000000000000007) != 0)
              swift_release();
            v63 = type metadata accessor for ToolKitProtoTypedValue(0);
          }
          v239 = (char *)v59 + *(int *)(v63 + 20);
          v240 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v240 - 8) + 8))(v239, v240);
        }
LABEL_197:
        v241 = (char *)v59 + *(int *)(v60 + 20);
        v242 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v242 - 8) + 8))(v241, v242);
LABEL_198:
        v243 = v4 + DecorationResult[7];
        v244 = type metadata accessor for TranscriptProtoStatementID(0);
        v245 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 48);
        if (!v245(v243, 1, v244))
        {
          swift_bridgeObjectRelease();
          v246 = v243 + *(int *)(v244 + 24);
          v247 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v247 - 8) + 8))(v246, v247);
        }
        v215 = v4 + DecorationResult[8];
        v248 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v248 - 8) + 48))(v215, 1, v248))
          goto LABEL_384;
        v249 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v249 - 8) + 48))(v215, 1, v249))
          goto LABEL_209;
        v250 = swift_getEnumCaseMultiPayload();
        if (v250 == 1)
        {
          swift_bridgeObjectRelease();
          v254 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        }
        else
        {
          if (v250)
            goto LABEL_209;
          swift_bridgeObjectRelease();
          v522 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v251 = v215 + *(int *)(v522 + 20);
          if (!v245(v251, 1, v244))
          {
            swift_bridgeObjectRelease();
            v252 = v251 + *(int *)(v244 + 24);
            v253 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 8))(v252, v253);
          }
          v254 = *(int *)(v522 + 24);
        }
        v255 = v215 + v254;
        v256 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v256 - 8) + 8))(v255, v256);
LABEL_209:
        v217 = *(int *)(v248 + 20);
LABEL_382:
        v187 = v215 + v217;
LABEL_383:
        v407 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v407 - 8) + 8))(v187, v407);
LABEL_384:
        v25 = DecorationResult[9];
        goto LABEL_459;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v7 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
        goto LABEL_460;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
        v64 = StepResults[6];
        goto LABEL_160;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v65 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v66 = v4 + v65[9];
        v67 = type metadata accessor for TranscriptProtoParameterSet(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v66, 1, v67))
        {
          swift_bridgeObjectRelease();
          v68 = v66 + *(int *)(v67 + 20);
          v69 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v68, v69);
        }
        v70 = v4 + v65[10];
        v71 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v70, 1, v71))
        {
          swift_bridgeObjectRelease();
          v72 = v70 + *(int *)(v71 + 24);
          v73 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
        }
        v25 = v65[11];
        goto LABEL_459;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        goto LABEL_459;
      case 0x16u:
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        goto LABEL_459;
      case 0x17u:
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        goto LABEL_459;
      case 0x18u:
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        goto LABEL_459;
      case 0x19u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        goto LABEL_459;
      case 0x1Au:
        v74 = type metadata accessor for TranscriptProtoStatementID(0);
        v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48);
        if (!v75(v4, 1, v74))
        {
          swift_bridgeObjectRelease();
          v76 = v4 + *(int *)(v74 + 24);
          v77 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
        }
        v78 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v79 = v4 + *(int *)(v78 + 20);
        if (!v75(v79, 1, v74))
        {
          swift_bridgeObjectRelease();
          v80 = v79 + *(int *)(v74 + 24);
          v81 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v80, v81);
        }
        v25 = *(int *)(v78 + 24);
        goto LABEL_459;
      case 0x1Bu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        goto LABEL_459;
      case 0x1Cu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v82 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v83 = v4 + v82[7];
        v84 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v83, 1, v84))
          goto LABEL_423;
        v85 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v83, 1, v85))
          goto LABEL_422;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v86 = v82;
            v87 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v88 = (_QWORD *)(v83 + v87[6]);
            v89 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
            {
              if ((~*v88 & 0xF000000000000007) != 0)
                swift_release();
              v90 = (char *)v88 + *(int *)(v89 + 20);
              v91 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
            }
            v92 = v83 + v87[7];
            v93 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v92, 1, v93))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v94 = v92 + *(int *)(v93 + 28);
              v95 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v94, v95);
            }
            v96 = v87[8];
            goto LABEL_250;
          case 1u:
            swift_bridgeObjectRelease();
            v270 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_420;
          case 2u:
            swift_bridgeObjectRelease();
            v270 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_420;
          case 3u:
            v86 = v82;
            swift_bridgeObjectRelease();
            v271 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_240;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v272 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_421;
          case 5u:
            v86 = v82;
            swift_bridgeObjectRelease();
            v271 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_240:
            v273 = v271;
            v274 = (_QWORD *)(v83 + *(int *)(v271 + 24));
            v275 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v275 - 8) + 48))(v274, 1, v275))
            {
              if ((~*v274 & 0xF000000000000007) != 0)
                swift_release();
              v276 = (char *)v274 + *(int *)(v275 + 20);
              v277 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v277 - 8) + 8))(v276, v277);
            }
            v96 = *(int *)(v273 + 28);
            goto LABEL_250;
          case 6u:
            v86 = v82;
            swift_bridgeObjectRelease();
            v278 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v279 = (_QWORD *)(v83 + *(int *)(v278 + 20));
            v280 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v280 - 8) + 48))(v279, 1, v280))
            {
              if ((~*v279 & 0xF000000000000007) != 0)
                swift_release();
              v281 = (char *)v279 + *(int *)(v280 + 20);
              v282 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v282 - 8) + 8))(v281, v282);
            }
            v96 = *(int *)(v278 + 24);
LABEL_250:
            v283 = v83 + v96;
            v284 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v284 - 8) + 8))(v283, v284);
            v82 = v86;
            goto LABEL_422;
          case 7u:
            v285 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 48))(v83, 1, v285))
            {
              goto LABEL_419;
            }
            v286 = swift_getEnumCaseMultiPayload();
            if (v286 != 2)
            {
              if (v286 == 1)
              {
                v287 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v286)
                  goto LABEL_419;
                v287 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_418:
              v442 = v83 + *(int *)(v287 + 20);
              v443 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v443 - 8) + 8))(v442, v443);
LABEL_419:
              v270 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_420:
              v272 = *(int *)(v270 + 20);
LABEL_421:
              v444 = v83 + v272;
              v445 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v445 - 8) + 8))(v444, v445);
LABEL_422:
              v446 = v83 + *(int *)(v84 + 20);
              v447 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v447 - 8) + 8))(v446, v447);
LABEL_423:
              v448 = v4 + v82[8];
              v449 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v449 - 1) + 48))(v448, 1, v449))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v450 = v448 + v449[7];
                v451 = type metadata accessor for TranscriptProtoDialogType(0);
                v452 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v451 - 8) + 48);
                if (!v452(v450, 1, v451))
                {
                  v528 = v82;
                  v453 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v453 - 8) + 48))(v450, 1, v453))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v455 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_431;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v455 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_431;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v455 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_431:
                        v456 = v450 + *(int *)(v455 + 20);
                        v457 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v457 - 8) + 8))(v456, v457);
                        break;
                      case 3u:
                      case 4u:
                        v454 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v454 - 8) + 8))(v450, v454);
                        break;
                      default:
                        break;
                    }
                  }
                  v458 = v450 + *(int *)(v451 + 20);
                  v459 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v459 - 8) + 8))(v458, v459);
                  v82 = v528;
                }
                v460 = v448 + v449[8];
                if (!v452(v460, 1, v451))
                {
                  v461 = v82;
                  v462 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v462 - 8) + 48))(v460, 1, v462))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v464 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_440;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v464 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_440;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v464 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_440:
                        v465 = v460 + *(int *)(v464 + 20);
                        v466 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v466 - 8) + 8))(v465, v466);
                        break;
                      case 3u:
                      case 4u:
                        v463 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v463 - 8) + 8))(v460, v463);
                        break;
                      default:
                        break;
                    }
                  }
                  v467 = v460 + *(int *)(v451 + 20);
                  v468 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v468 - 8) + 8))(v467, v468);
                  v82 = v461;
                }
                v469 = v448 + v449[9];
                v470 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v470 - 8) + 8))(v469, v470);
              }
              v471 = v4 + v82[9];
              v472 = type metadata accessor for TranscriptProtoStatementID(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v472 - 8) + 48))(v471, 1, v472))
              {
                swift_bridgeObjectRelease();
                v473 = v471 + *(int *)(v472 + 24);
                v474 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v474 - 8) + 8))(v473, v474);
              }
              swift_bridgeObjectRelease();
              v25 = v82[11];
LABEL_459:
              v485 = v4 + v25;
              v486 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v486 - 8) + 8))(v485, v486);
              goto LABEL_460;
            }
            v367 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v367 - 8) + 48))(v83, 1, v367))
            {
              goto LABEL_417;
            }
            v368 = swift_getEnumCaseMultiPayload();
            if (v368 == 1)
            {
              v437 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v437 - 8) + 48))(v83, 1, v437))
              {
                v438 = v83 + *(int *)(v437 + 20);
                v439 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v439 - 8) + 8))(v438, v439);
              }
              v369 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            }
            else
            {
              if (v368)
              {
LABEL_417:
                v287 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_418;
              }
              swift_bridgeObjectRelease();
              v369 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
            }
            v440 = v83 + *(int *)(v369 + 20);
            v441 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v441 - 8) + 8))(v440, v441);
            goto LABEL_417;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v272 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_421;
          case 9u:
            v288 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v288 - 8) + 48))(v83, 1, v288))
            {
              v289 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v289 - 8) + 48))(v83, 1, v289))
              {
                v290 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v290 - 8) + 48))(v83, 16, v290))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v291 = v83 + *(int *)(v290 + 28);
                  v292 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v292 - 8) + 8))(v291, v292);
                }
              }
              v293 = v83 + *(int *)(v288 + 20);
              v294 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v294 - 8) + 8))(v293, v294);
            }
            v270 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_420;
          case 0xAu:
            swift_bridgeObjectRelease();
            v270 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
            goto LABEL_420;
          default:
            goto LABEL_422;
        }
      case 0x1Du:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        v97 = v4 + v41[6];
        v98 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v97, 1, v98))
          goto LABEL_331;
        v99 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v97, 1, v99))
          goto LABEL_324;
        v100 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48))(v97, 1, v100))
          goto LABEL_323;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v101 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v521 = v97;
            v102 = (_QWORD *)(v97 + v101[6]);
            v103 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103))
            {
              if ((~*v102 & 0xF000000000000007) != 0)
                swift_release();
              v104 = (char *)v102 + *(int *)(v103 + 20);
              v105 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v104, v105);
            }
            v106 = v521 + v101[7];
            v107 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v108 = v106 + *(int *)(v107 + 28);
              v109 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v108, v109);
            }
            v110 = v101[8];
            v97 = v521;
            goto LABEL_321;
          case 1u:
            swift_bridgeObjectRelease();
            v316 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_320;
          case 2u:
            swift_bridgeObjectRelease();
            v316 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_320;
          case 3u:
            swift_bridgeObjectRelease();
            v317 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_297;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v110 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_321;
          case 5u:
            swift_bridgeObjectRelease();
            v317 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_297:
            v318 = v317;
            v524 = v97;
            v319 = (_QWORD *)(v97 + *(int *)(v317 + 24));
            v320 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v320 - 8) + 48))(v319, 1, v320))
            {
              if ((~*v319 & 0xF000000000000007) != 0)
                swift_release();
              v321 = (char *)v319 + *(int *)(v320 + 20);
              v322 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v322 - 8) + 8))(v321, v322);
            }
            v110 = *(int *)(v318 + 28);
            v97 = v524;
            goto LABEL_321;
          case 6u:
            swift_bridgeObjectRelease();
            v323 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v525 = v97;
            v324 = (_QWORD *)(v97 + *(int *)(v323 + 20));
            v325 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v325 - 8) + 48))(v324, 1, v325))
            {
              if ((~*v324 & 0xF000000000000007) != 0)
                swift_release();
              v326 = (char *)v324 + *(int *)(v325 + 20);
              v327 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v327 - 8) + 8))(v326, v327);
            }
            v110 = *(int *)(v323 + 24);
            v97 = v525;
            goto LABEL_321;
          case 7u:
            v328 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v328 - 8) + 48))(v97, 1, v328))
            {
              goto LABEL_478;
            }
            v329 = swift_getEnumCaseMultiPayload();
            if (v329 != 2)
            {
              if (v329 == 1)
              {
                v330 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v329)
                  goto LABEL_478;
                v330 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_477:
              v515 = v97 + *(int *)(v330 + 20);
              v516 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v516 - 8) + 8))(v515, v516);
LABEL_478:
              v339 = v97 + *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
LABEL_322:
              v340 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v340 - 8) + 8))(v339, v340);
LABEL_323:
              v341 = v97 + *(int *)(v99 + 20);
              v342 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v342 - 8) + 8))(v341, v342);
LABEL_324:
              v343 = v97 + *(int *)(v98 + 20);
              v344 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v344 - 1) + 48))(v343, 1, v344))
              {
                v526 = v97;
                swift_bridgeObjectRelease();
                v345 = v343 + v344[5];
                v346 = type metadata accessor for TranscriptProtoResponseDialog(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v346 - 8) + 48))(v345, 1, v346))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v347 = v345 + *(int *)(v346 + 32);
                  v348 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v348 - 8) + 8))(v347, v348);
                }
                v349 = v343 + v344[6];
                v350 = type metadata accessor for TranscriptProtoResponseVisual(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v350 - 8) + 48))(v349, 1, v350))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v351 = v349 + *(int *)(v350 + 24);
                  v352 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v352 - 8) + 8))(v351, v352);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v353 = v343 + v344[11];
                v354 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v354 - 8) + 8))(v353, v354);
                v97 = v526;
              }
              v355 = v97 + *(int *)(v98 + 24);
              v356 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v356 - 8) + 8))(v355, v356);
LABEL_331:
              v357 = v4 + v41[7];
              v358 = type metadata accessor for TranscriptProtoStatementID(0);
              v359 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v358 - 8) + 48);
              if (!v359(v357, 1, v358))
              {
                swift_bridgeObjectRelease();
                v360 = v357 + *(int *)(v358 + 24);
                v361 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v361 - 8) + 8))(v360, v361);
              }
              v362 = v4 + v41[8];
              if (!v359(v362, 1, v358))
              {
                swift_bridgeObjectRelease();
                v363 = v362 + *(int *)(v358 + 24);
                v364 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v364 - 8) + 8))(v363, v364);
              }
              v365 = v4 + v41[9];
              if (!v359(v365, 1, v358))
              {
                swift_bridgeObjectRelease();
                v44 = v365 + *(int *)(v358 + 24);
LABEL_337:
                v366 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v366 - 8) + 8))(v44, v366);
              }
LABEL_338:
              v25 = v41[10];
              goto LABEL_459;
            }
            v434 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v434 - 8) + 48))(v97, 1, v434))
            {
              goto LABEL_476;
            }
            v435 = swift_getEnumCaseMultiPayload();
            if (v435 == 1)
            {
              v510 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v510 - 8) + 48))(v97, 1, v510))
              {
                v511 = v97 + *(int *)(v510 + 20);
                v512 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v512 - 8) + 8))(v511, v512);
              }
              v436 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            }
            else
            {
              if (v435)
              {
LABEL_476:
                v330 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_477;
              }
              swift_bridgeObjectRelease();
              v436 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
            }
            v513 = v97 + *(int *)(v436 + 20);
            v514 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v514 - 8) + 8))(v513, v514);
            goto LABEL_476;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v110 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_321;
          case 9u:
            v331 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            v332 = v97;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v331 - 8) + 48))(v97, 1, v331))
            {
              v333 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v333 - 8) + 48))(v97, 1, v333))
              {
                v334 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v334 - 8) + 48))(v332, 16, v334))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v335 = v332 + *(int *)(v334 + 28);
                  v336 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v336 - 8) + 8))(v335, v336);
                }
              }
              v337 = v332 + *(int *)(v331 + 20);
              v338 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v338 - 8) + 8))(v337, v338);
            }
            v97 = v332;
            v339 = v332 + *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            goto LABEL_322;
          case 0xAu:
            swift_bridgeObjectRelease();
            v316 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_320:
            v110 = *(int *)(v316 + 20);
LABEL_321:
            v339 = v97 + v110;
            goto LABEL_322;
          default:
            goto LABEL_323;
        }
      case 0x1Eu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        goto LABEL_90;
      case 0x1Fu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
LABEL_90:
        StepResults = (int *)v111;
        v112 = *(int *)(v111 + 24);
        goto LABEL_405;
      case 0x20u:
        v113 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v4, 1, v113))
        {
          v114 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v4, 1, v114))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v115 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v116 = v4 + *(int *)(v115 + 20);
                v117 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 48))(v116, 1, v117))
                {
                  swift_bridgeObjectRelease();
                  v118 = v116 + *(int *)(v117 + 24);
                  v119 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
                }
                v120 = *(int *)(v115 + 24);
                goto LABEL_402;
              case 1u:
                swift_bridgeObjectRelease();
                v120 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_402;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v263 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v264 = (_QWORD *)(v4 + v263[6]);
                v265 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 48))(v264, 1, v265))
                {
                  goto LABEL_389;
                }
                v266 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v266 - 8) + 48))(v264, 1, v266))
                {
                  goto LABEL_388;
                }
                v267 = swift_getEnumCaseMultiPayload();
                if (v267 == 6)
                {
                  v408 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v408 - 8) + 8))(v264, v408);
                }
                else
                {
                  if (v267 == 5)
                  {
                    v268 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (v267 != 1)
                      goto LABEL_388;
                    if ((~*v264 & 0xF000000000000007) != 0)
                      swift_release();
                    v268 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v409 = (char *)v264 + *(int *)(v268 + 20);
                  v410 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v410 - 8) + 8))(v409, v410);
                }
LABEL_388:
                v411 = (char *)v264 + *(int *)(v265 + 20);
                v412 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v412 - 8) + 8))(v411, v412);
LABEL_389:
                v413 = v4 + v263[7];
                v414 = type metadata accessor for TranscriptProtoStatementID(0);
                v415 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v414 - 8) + 48);
                if (!v415(v413, 1, v414))
                {
                  swift_bridgeObjectRelease();
                  v416 = v413 + *(int *)(v414 + 24);
                  v417 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v417 - 8) + 8))(v416, v417);
                }
                v527 = v263;
                v418 = v4 + v263[8];
                v419 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v419 - 8) + 48))(v418, 1, v419))
                {
                  goto LABEL_401;
                }
                v420 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v420 - 8) + 48))(v418, 1, v420))
                {
                  goto LABEL_400;
                }
                v421 = swift_getEnumCaseMultiPayload();
                if (v421 == 1)
                {
                  swift_bridgeObjectRelease();
                  v425 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v421)
                    goto LABEL_400;
                  swift_bridgeObjectRelease();
                  v520 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v422 = v418 + *(int *)(v520 + 20);
                  if (!v415(v422, 1, v414))
                  {
                    swift_bridgeObjectRelease();
                    v423 = v422 + *(int *)(v414 + 24);
                    v424 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v424 - 8) + 8))(v423, v424);
                  }
                  v425 = *(int *)(v520 + 24);
                }
                v426 = v418 + v425;
                v427 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v427 - 8) + 8))(v426, v427);
LABEL_400:
                v428 = v418 + *(int *)(v419 + 20);
                v429 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v429 - 8) + 8))(v428, v429);
LABEL_401:
                v120 = v527[9];
LABEL_402:
                v430 = v4 + v120;
                v431 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v431 - 8) + 8))(v430, v431);
                break;
              case 3u:
                v269 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 8))(v4, v269);
                break;
              default:
                break;
            }
          }
          v432 = v4 + *(int *)(v113 + 20);
          v433 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v433 - 8) + 8))(v432, v433);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        swift_bridgeObjectRelease();
        v112 = StepResults[6];
LABEL_405:
        v13 = v4 + v112;
        v204 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 48))(v13, 1, v204))
          goto LABEL_458;
        swift_bridgeObjectRelease();
LABEL_407:
        swift_bridgeObjectRelease();
        v19 = *(int *)(v204 + 24);
        goto LABEL_456;
      case 0x21u:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v121 = v4 + StepResults[5];
        v122 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v121, 1, v122))
        {
          swift_bridgeObjectRelease();
          v123 = v121 + *(int *)(v122 + 24);
          v124 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v123, v124);
        }
        v13 = v4 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v13, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_458;
        }
        v126 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 48))(v13, 1, v126))
          goto LABEL_455;
        break;
      case 0x22u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        goto LABEL_459;
      case 0x23u:
        v137 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v137 - 1) + 48))(v4, 1, v137))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v138 = (_QWORD *)(v4 + v137[17]);
          v139 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 48))(v138, 1, v139))
          {
            if ((~*v138 & 0xF000000000000007) != 0)
              swift_release();
            v140 = (char *)v138 + *(int *)(v139 + 20);
            v141 = sub_2408E57A4();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v141 - 8) + 8))(v140, v141);
          }
          swift_bridgeObjectRelease();
          v142 = v4 + v137[19];
          v143 = type metadata accessor for ToolKitProtoAppDefinition(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 48))(v142, 1, v143))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v144 = v142 + *(int *)(v143 + 40);
            v145 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 48))(v144, 1, v145))
            {
              if (*(_QWORD *)(v144 + 8) != 1)
                swift_bridgeObjectRelease();
              v146 = v144 + *(int *)(v145 + 20);
              v147 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 8))(v146, v147);
            }
            v148 = v142 + *(int *)(v143 + 44);
            v149 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 8))(v148, v149);
          }
          swift_bridgeObjectRelease();
          v150 = v4 + v137[21];
          v151 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 48))(v150, 1, v151))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v152 = v150 + *(int *)(v151 + 24);
            v153 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 8))(v152, v153);
          }
          v154 = v4 + v137[22];
          v155 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 48))(v154, 1, v155))
          {
            v156 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 48))(v154, 1, v156))
            {
              v157 = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (v157 == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v158 = v154
                     + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v159 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 8))(v158, v159);
              }
            }
            v160 = v154 + *(int *)(v155 + 20);
            v161 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 8))(v160, v161);
          }
          v162 = v4 + v137[23];
          v163 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v164 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 48);
          if (!v164(v162, 1, v163))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v165 = v162 + *(int *)(v163 + 40);
            v166 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 48))(v165, 1, v166))
            {
              if (*(_QWORD *)(v165 + 8) != 1)
                swift_bridgeObjectRelease();
              v167 = v165 + *(int *)(v166 + 20);
              v168 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 8))(v167, v168);
            }
            v169 = v162 + *(int *)(v163 + 44);
            v170 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 8))(v169, v170);
          }
          v171 = v4 + v137[24];
          if (!v164(v171, 1, v163))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v172 = v171 + *(int *)(v163 + 40);
            v173 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 48))(v172, 1, v173))
            {
              if (*(_QWORD *)(v172 + 8) != 1)
                swift_bridgeObjectRelease();
              v174 = v172 + *(int *)(v173 + 20);
              v175 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 8))(v174, v175);
            }
            v176 = v171 + *(int *)(v163 + 44);
            v177 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 8))(v176, v177);
          }
          v178 = v4 + v137[25];
          v179 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 8))(v178, v179);
        }
        v180 = type metadata accessor for TranscriptProtoToolResolution(0);
        goto LABEL_167;
      case 0x24u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v181 = v4 + DecorationResult[7];
        v182 = type metadata accessor for TranscriptProtoStatementID(0);
        v183 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 48);
        if (!v183(v181, 1, v182))
        {
          swift_bridgeObjectRelease();
          v184 = v181 + *(int *)(v182 + 24);
          v185 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 8))(v184, v185);
        }
        v186 = v4 + DecorationResult[8];
        if (v183(v186, 1, v182))
          goto LABEL_384;
        swift_bridgeObjectRelease();
        v187 = v186 + *(int *)(v182 + 24);
        goto LABEL_383;
      case 0x25u:
        swift_bridgeObjectRelease();
        v188 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v189 = v4 + v188[6];
        v190 = type metadata accessor for TranscriptProtoStatementID(0);
        v191 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 48);
        if (!v191(v189, 1, v190))
        {
          swift_bridgeObjectRelease();
          v192 = v189 + *(int *)(v190 + 24);
          v193 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 8))(v192, v193);
        }
        v194 = v4 + v188[7];
        if (!v191(v194, 1, v190))
        {
          swift_bridgeObjectRelease();
          v195 = v194 + *(int *)(v190 + 24);
          v196 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 8))(v195, v196);
        }
        v25 = v188[8];
        goto LABEL_459;
      case 0x26u:
        v197 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 48))(v4, 1, v197))
        {
          if ((~*(_QWORD *)v4 & 0xF000000000000007) != 0)
            swift_release();
          v198 = v4 + *(int *)(v197 + 20);
          v199 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v198, v199);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v200 = (_QWORD *)(v4 + StepResults[5]);
        v201 = type metadata accessor for ToolKitProtoTypeInstance(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 48))(v200, 1, v201))
        {
          if ((~*v200 & 0xF000000000000007) != 0)
            swift_release();
          v202 = (char *)v200 + *(int *)(v201 + 20);
          v203 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v203 - 8) + 8))(v202, v203);
        }
        v64 = StepResults[6];
LABEL_160:
        v13 = v4 + v64;
        v204 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 48))(v13, 1, v204))
          goto LABEL_407;
        goto LABEL_458;
      case 0x27u:
        v205 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 48))(v4, 1, v205))
        {
          if ((~*(_QWORD *)v4 & 0xF000000000000007) != 0)
            swift_release();
          v206 = v4 + *(int *)(v205 + 20);
          v207 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 8))(v206, v207);
        }
        v180 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
LABEL_167:
        StepResults = (int *)v180;
        v208 = v4 + *(int *)(v180 + 20);
        v209 = type metadata accessor for TranscriptProtoStatementID(0);
        v210 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 48);
        if (!v210(v208, 1, v209))
        {
          swift_bridgeObjectRelease();
          v211 = v208 + *(int *)(v209 + 24);
          v212 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 8))(v211, v212);
        }
        v213 = v4 + StepResults[6];
        if (v210(v213, 1, v209))
          goto LABEL_458;
        swift_bridgeObjectRelease();
        v214 = v213 + *(int *)(v209 + 24);
        goto LABEL_457;
      case 0x28u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v215 = v4 + DecorationResult[8];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8)
                                                                       + 48))(v215, 1, DecorationToolRetrievalResponse))
        {
          goto LABEL_384;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = *(int *)(DecorationToolRetrievalResponse + 36);
        goto LABEL_382;
      case 0x2Au:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v218 = v4 + StepResults[5];
        v219 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 48))(v218, 1, v219))
        {
          swift_bridgeObjectRelease();
          v220 = v218 + *(int *)(v219 + 24);
          v221 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 8))(v220, v221);
        }
        v13 = v4 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v13, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_458;
        }
        DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                        + 48))(v13, 1, DecorationPrePlannerPayloadEnum))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
              goto LABEL_453;
            case 1u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
              goto LABEL_453;
            case 2u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
              goto LABEL_453;
            case 3u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
              goto LABEL_453;
            case 4u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
              goto LABEL_453;
            case 5u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
              goto LABEL_453;
            default:
              goto LABEL_455;
          }
        }
        goto LABEL_455;
      default:
        goto LABEL_460;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v127 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v128 = (_QWORD *)(v13 + v127[6]);
        v129 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 48))(v128, 1, v129))
        {
          if ((~*v128 & 0xF000000000000007) != 0)
            swift_release();
          v130 = (char *)v128 + *(int *)(v129 + 20);
          v131 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(v130, v131);
        }
        v132 = v13 + v127[7];
        v133 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 48))(v132, 1, v133))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v134 = v132 + *(int *)(v133 + 28);
          v135 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 8))(v134, v135);
        }
        v136 = v127[8];
        goto LABEL_454;
      case 1u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_453;
      case 2u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_453;
      case 3u:
        swift_bridgeObjectRelease();
        v295 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_269;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v136 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_454;
      case 5u:
        swift_bridgeObjectRelease();
        v295 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_269:
        v296 = v295;
        v297 = (_QWORD *)(v13 + *(int *)(v295 + 24));
        v298 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v298 - 8) + 48))(v297, 1, v298))
        {
          if ((~*v297 & 0xF000000000000007) != 0)
            swift_release();
          v299 = (char *)v297 + *(int *)(v298 + 20);
          v300 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v300 - 8) + 8))(v299, v300);
        }
        v136 = *(int *)(v296 + 28);
        goto LABEL_454;
      case 6u:
        swift_bridgeObjectRelease();
        v301 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v302 = (_QWORD *)(v13 + *(int *)(v301 + 20));
        v303 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v303 - 8) + 48))(v302, 1, v303))
        {
          if ((~*v302 & 0xF000000000000007) != 0)
            swift_release();
          v304 = (char *)v302 + *(int *)(v303 + 20);
          v305 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v305 - 8) + 8))(v304, v305);
        }
        v136 = *(int *)(v301 + 24);
        goto LABEL_454;
      case 7u:
        v306 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 48))(v13, 1, v306))
          goto LABEL_452;
        v307 = swift_getEnumCaseMultiPayload();
        if (v307 != 2)
        {
          if (v307 == 1)
          {
            v308 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (v307)
              goto LABEL_452;
            v308 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_451:
          v480 = v13 + *(int *)(v308 + 20);
          v481 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v481 - 8) + 8))(v480, v481);
LABEL_452:
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_453:
          v136 = *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
LABEL_454:
          v482 = v13 + v136;
          v483 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v483 - 8) + 8))(v482, v483);
LABEL_455:
          v19 = *(int *)(DecorationPrePlannerResultPayload + 20);
LABEL_456:
          v214 = v13 + v19;
LABEL_457:
          v484 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v484 - 8) + 8))(v214, v484);
LABEL_458:
          v25 = StepResults[7];
          goto LABEL_459;
        }
        v370 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v370 - 8) + 48))(v13, 1, v370))
          goto LABEL_450;
        v371 = swift_getEnumCaseMultiPayload();
        if (v371 == 1)
        {
          v475 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v475 - 8) + 48))(v13, 1, v475))
          {
            v476 = v13 + *(int *)(v475 + 20);
            v477 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v477 - 8) + 8))(v476, v477);
          }
          v372 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v371)
          {
LABEL_450:
            v308 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_451;
          }
          swift_bridgeObjectRelease();
          v372 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v478 = v13 + *(int *)(v372 + 20);
        v479 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v479 - 8) + 8))(v478, v479);
        goto LABEL_450;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v136 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_454;
      case 9u:
        v309 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v309 - 8) + 48))(v13, 1, v309))
        {
          v310 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v310 - 8) + 48))(v13, 1, v310))
          {
            v311 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v311 - 8) + 48))(v13, 16, v311))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v312 = v13 + *(int *)(v311 + 28);
              v313 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v313 - 8) + 8))(v312, v313);
            }
          }
          v314 = v13 + *(int *)(v309 + 20);
          v315 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v315 - 8) + 8))(v314, v315);
        }
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_453;
      case 0xAu:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_453;
      default:
        goto LABEL_455;
    }
  }
LABEL_461:
  swift_bridgeObjectRelease();
  v489 = a1 + a2[13];
  v490 = type metadata accessor for TranscriptProtoTimepoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v490 - 8) + 48))(v489, 1, v490))
  {
    swift_bridgeObjectRelease();
    v491 = v489 + *(int *)(v490 + 28);
    v492 = sub_2408E5750();
    v493 = *(_QWORD *)(v492 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v493 + 48))(v491, 1, v492))
      (*(void (**)(uint64_t, uint64_t))(v493 + 8))(v491, v492);
    v494 = v489 + *(int *)(v490 + 32);
    v495 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v495 - 8) + 8))(v494, v495);
  }
  v496 = a1 + a2[14];
  v497 = sub_2408E5750();
  v498 = *(_QWORD *)(v497 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v498 + 48))(v496, 1, v497))
    (*(void (**)(uint64_t, uint64_t))(v498 + 8))(v496, v497);
  v499 = a1 + a2[15];
  v500 = type metadata accessor for TranscriptProtoParticipantID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v500 - 8) + 48))(v499, 1, v500))
  {
    swift_bridgeObjectRelease();
    v501 = v499 + *(int *)(v500 + 20);
    v502 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v502 - 8) + 8))(v501, v502);
  }
  v503 = a1 + a2[16];
  v504 = type metadata accessor for TranscriptProtoSpanID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v504 - 8) + 48))(v503, 1, v504))
  {
    v505 = v503 + *(int *)(v504 + 20);
    v506 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v506 - 8) + 8))(v505, v506);
  }
  v507 = a1 + a2[17];
  v508 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v508 - 8) + 8))(v507, v508);
}

_QWORD *initializeWithCopy for TranscriptProtoEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  int *DecorationPrePlannerResult;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v59)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(_QWORD *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(_QWORD *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t Step;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(_QWORD *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(_QWORD *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  void (*v112)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(_BYTE *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  int *StepResults;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(_QWORD *, uint64_t, uint64_t);
  uint64_t v133;
  int *v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int (*v140)(_QWORD *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  _BYTE *v145;
  uint64_t v146;
  void (*v147)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  void (*v159)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  void (*v168)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  uint64_t v176;
  void (*v177)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  uint64_t v184;
  void (*v185)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unsigned int (*v191)(_BYTE *, uint64_t, uint64_t);
  uint64_t v192;
  _BYTE *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _BYTE *v198;
  _BYTE *v199;
  uint64_t v200;
  void (*v201)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int (*v212)(char *, uint64_t, uint64_t);
  uint64_t v213;
  _BYTE *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  _QWORD *v221;
  unsigned int (*v222)(char *, uint64_t, uint64_t);
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  unsigned int (*v232)(_QWORD *, uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  unsigned int (*v235)(_QWORD *, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int *v239;
  uint64_t v240;
  _QWORD *v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int (*v245)(_QWORD *, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  _BYTE *v250;
  uint64_t v251;
  void (*v252)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v253;
  _BYTE *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int (**v257)(_BYTE *, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int *v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  unsigned int (*v267)(_QWORD *, uint64_t, uint64_t);
  uint64_t v268;
  uint64_t v269;
  int *v270;
  uint64_t v271;
  _QWORD *v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  unsigned int (*v276)(_BYTE *, uint64_t, uint64_t);
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _BYTE *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _BYTE *v285;
  uint64_t v286;
  _BYTE *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  _QWORD *v292;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v294;
  unsigned int (*v295)(_QWORD *, uint64_t, uint64_t);
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD *v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int (*v303)(_QWORD *, uint64_t, uint64_t);
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  void (*v311)(char *, char *, uint64_t);
  uint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  void (*v323)(char *, char *, uint64_t);
  uint64_t v324;
  _QWORD *v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  _BYTE *v329;
  _BYTE *v330;
  uint64_t v331;
  void (*v332)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  void (*v341)(char *, char *, uint64_t);
  uint64_t v342;
  _QWORD *v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  _QWORD *v348;
  uint64_t v349;
  uint64_t v350;
  _QWORD *v351;
  _QWORD *v352;
  uint64_t v353;
  uint64_t v354;
  _BYTE *v355;
  _BYTE *v356;
  uint64_t v357;
  void (*v358)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  void (*v365)(char *, char *, uint64_t);
  uint64_t v366;
  _BYTE *v367;
  _BYTE *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  void (*v375)(char *, char *, uint64_t);
  char *v376;
  uint64_t v377;
  _BYTE *v378;
  _BYTE *v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  _BYTE *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  void (*v393)(char *, char *, uint64_t);
  char *v394;
  uint64_t v395;
  _QWORD *v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  _BYTE *v403;
  _BYTE *v404;
  _BYTE *v405;
  uint64_t v406;
  void (*v407)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD *v412;
  _BYTE *v413;
  _QWORD *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  void (*v429)(char *, char *, uint64_t);
  uint64_t v430;
  char *v431;
  char *v432;
  uint64_t v433;
  unsigned int (**v434)(const void *, uint64_t, uint64_t);
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  _BYTE *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t *v445;
  uint64_t v446;
  uint64_t v447;
  unsigned int (*v448)(uint64_t *, uint64_t, uint64_t);
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  _BYTE *v453;
  uint64_t v454;
  void (*v455)(char *, char *, uint64_t);
  uint64_t v456;
  uint64_t v457;
  _QWORD *v458;
  _BYTE *v459;
  _QWORD *v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  char *v465;
  uint64_t v466;
  void (*v467)(char *, char *, uint64_t);
  char *v468;
  uint64_t v469;
  _QWORD *v470;
  _QWORD *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  _BYTE *v475;
  _BYTE *v476;
  uint64_t v477;
  uint64_t v478;
  _QWORD *v479;
  uint64_t *v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  _BYTE *v486;
  _BYTE *v487;
  uint64_t v488;
  int *v489;
  uint64_t v490;
  _QWORD *v491;
  _QWORD *v492;
  uint64_t v493;
  uint64_t v494;
  unsigned int (*v495)(_BYTE *, uint64_t, uint64_t);
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  void (*v503)(char *, char *, uint64_t);
  uint64_t v504;
  _BYTE *v505;
  _BYTE *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  char *v511;
  uint64_t v512;
  void (*v513)(char *, char *, uint64_t);
  uint64_t v514;
  char *v515;
  char *v516;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  _DWORD *v522;
  _DWORD *v523;
  uint64_t v524;
  unsigned int (*v525)(_DWORD *, uint64_t, uint64_t);
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  char *v530;
  uint64_t v531;
  void (*v532)(char *, char *, uint64_t);
  char *v533;
  uint64_t v534;
  _BYTE *v535;
  _BYTE *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  uint64_t v542;
  void (*v543)(char *, char *, uint64_t);
  char *v544;
  uint64_t v545;
  _BYTE *v546;
  _BYTE *v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  char *v553;
  char *v554;
  uint64_t v555;
  void (*v556)(char *, char *, uint64_t);
  char *v557;
  uint64_t v558;
  _BYTE *v559;
  _BYTE *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  char *v564;
  uint64_t v565;
  char *v566;
  uint64_t v567;
  void (*v568)(char *, char *, uint64_t);
  char *v569;
  uint64_t v570;
  _BYTE *v571;
  _BYTE *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  char *v583;
  char *v584;
  uint64_t v585;
  void (*v586)(char *, char *, uint64_t);
  char *v587;
  uint64_t v588;
  _QWORD *v589;
  _QWORD *v590;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  char *v595;
  char *v596;
  uint64_t v597;
  void (*v598)(char *, char *, uint64_t);
  char *v599;
  char *v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  void (*v606)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v607;
  uint64_t v608;
  _BYTE *v609;
  _BYTE *v610;
  uint64_t v611;
  uint64_t v612;
  _BYTE *v613;
  _BYTE *v614;
  uint64_t v615;
  int EnumCaseMultiPayload;
  uint64_t v617;
  uint64_t v618;
  _BYTE *v619;
  _BYTE *v620;
  uint64_t v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  char *v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char *v629;
  uint64_t v630;
  _BYTE *v631;
  int *v632;
  uint64_t v633;
  _BYTE *v634;
  _QWORD *v635;
  _QWORD *v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  _QWORD *v640;
  uint64_t v641;
  _QWORD *v642;
  unsigned int (*v643)(_QWORD *, uint64_t, uint64_t);
  uint64_t v644;
  uint64_t v645;
  char *v646;
  _DWORD *v647;
  char *v648;
  uint64_t v649;
  uint64_t v650;
  char *v651;
  char *v652;
  uint64_t v653;
  char *v654;
  char *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  _QWORD *v662;
  uint64_t v663;
  unsigned int (*v664)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v665;
  uint64_t v666;
  void (**v667)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  _BYTE *v673;
  _BYTE *v674;
  uint64_t v675;
  _BYTE *v676;
  uint64_t v677;
  _BYTE *v678;
  _BYTE *v679;
  uint64_t v680;
  uint64_t v681;
  _QWORD *v682;
  _QWORD *v683;
  uint64_t v684;
  uint64_t v685;
  unsigned int (*v686)(_QWORD *, uint64_t, uint64_t);
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  char *v690;
  char *v691;
  uint64_t v692;
  void (*v693)(char *, char *, uint64_t);
  uint64_t v694;
  _QWORD *v695;
  _QWORD *v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  void *v701;
  uint64_t v702;
  int v703;
  _QWORD *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  _QWORD *v708;
  _QWORD *v709;
  _QWORD *v710;
  uint64_t v711;
  uint64_t v712;
  char *v713;
  char *v714;
  uint64_t v715;
  void (*v716)(char *, char *, uint64_t);
  uint64_t v717;
  void *v718;
  uint64_t v719;
  char *v720;
  char *v721;
  uint64_t v722;
  uint64_t v723;
  char *v724;
  char *v725;
  uint64_t v726;
  uint64_t v727;
  _QWORD *v728;
  _QWORD *v729;
  uint64_t v730;
  uint64_t v731;
  _QWORD *v732;
  _QWORD *v733;
  uint64_t v734;
  uint64_t v735;
  unsigned int (*v736)(_QWORD *, uint64_t, uint64_t);
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  char *v741;
  char *v742;
  uint64_t v743;
  void (*v744)(char *, char *, uint64_t);
  uint64_t v745;
  _QWORD *v746;
  _QWORD *v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  int v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  void (*v760)(char *, char *, uint64_t);
  uint64_t v761;
  char *v762;
  char *v763;
  uint64_t v764;
  uint64_t v765;
  _QWORD *v766;
  _QWORD *v767;
  uint64_t v768;
  uint64_t v769;
  unsigned int (*v770)(_QWORD, _QWORD, _QWORD);
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  _QWORD *v777;
  uint64_t v778;
  unsigned int (*v779)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  char *v784;
  char *v785;
  uint64_t v786;
  uint64_t v787;
  char *v788;
  char *v789;
  uint64_t v790;
  uint64_t v791;
  _QWORD *v792;
  _QWORD *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  _QWORD *v800;
  uint64_t v801;
  unsigned int (*v802)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  char *v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  char *v811;
  char *v812;
  uint64_t v813;
  uint64_t v814;
  _BYTE *v815;
  _BYTE *v816;
  uint64_t v817;
  uint64_t v818;
  _QWORD *v819;
  _QWORD *v820;
  unsigned int (*v821)(_BYTE *, uint64_t, uint64_t);
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  char *v825;
  char *v826;
  uint64_t v827;
  void (*v828)(char *, char *, uint64_t);
  char *v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  char *v834;
  uint64_t v835;
  char *v836;
  uint64_t v837;
  void (*v838)(char *, char *, uint64_t);
  char *v839;
  uint64_t v840;
  _BYTE *v841;
  _BYTE *v842;
  uint64_t v843;
  uint64_t v844;
  char *v845;
  char *v846;
  uint64_t v847;
  uint64_t v848;
  _BYTE *v849;
  _BYTE *v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  void (*v855)(char *, char *, uint64_t);
  uint64_t v856;
  char *v857;
  char *v858;
  uint64_t v859;
  char *v860;
  uint64_t v861;
  char *v862;
  char *v863;
  uint64_t v864;
  uint64_t v865;
  _BYTE *v866;
  _BYTE *v867;
  uint64_t v868;
  uint64_t v869;
  _BYTE *v870;
  _BYTE *v871;
  uint64_t v872;
  uint64_t v873;
  char *v874;
  char *v875;
  char *v876;
  uint64_t v877;
  char *v878;
  uint64_t v879;
  char *v880;
  char *v881;
  int *v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  char *v886;
  uint64_t v887;
  unsigned int (*v888)(char *, uint64_t, uint64_t);
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  char *v897;
  char *v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  char *v904;
  uint64_t v905;
  void (*v906)(char *, char *, uint64_t);
  uint64_t v907;
  char *v908;
  char *v909;
  uint64_t v910;
  uint64_t v911;
  char *v912;
  char *v913;
  uint64_t v914;
  uint64_t v915;
  char *v916;
  char *v917;
  int *v918;
  uint64_t v919;
  void (*v920)(char *, char *, uint64_t);
  uint64_t v921;
  char *v922;
  char *v923;
  uint64_t v924;
  int *v925;
  uint64_t v926;
  _QWORD *v927;
  _QWORD *v928;
  uint64_t v929;
  unsigned int (*v930)(_BYTE *, uint64_t, uint64_t);
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  char *v936;
  uint64_t v937;
  _BYTE *v938;
  void (*v939)(char *, char *, uint64_t);
  char *v940;
  uint64_t v941;
  _QWORD *v942;
  _QWORD *v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  char *v949;
  uint64_t v950;
  _BYTE *v951;
  void (*v952)(char *, char *, uint64_t);
  char *v953;
  uint64_t v954;
  _QWORD *v955;
  _QWORD *v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  char *v960;
  uint64_t v961;
  uint64_t v962;
  char *v963;
  uint64_t v964;
  _BYTE *v965;
  void (*v966)(char *, char *, uint64_t);
  char *v967;
  uint64_t v968;
  _BYTE *v969;
  _BYTE *v970;
  uint64_t v971;
  uint64_t v972;
  char *v973;
  char *v974;
  char *v975;
  uint64_t v976;
  uint64_t v977;
  char *v978;
  char *v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  char *v985;
  uint64_t v986;
  char *v987;
  char *v988;
  uint64_t v989;
  uint64_t v990;
  _QWORD *v991;
  _QWORD *v992;
  uint64_t v993;
  uint64_t v994;
  _QWORD *v995;
  _QWORD *v996;
  uint64_t v997;
  uint64_t v998;
  unsigned int (*v999)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  char *v1003;
  uint64_t v1004;
  void (*v1005)(char *, char *, uint64_t);
  uint64_t v1006;
  uint64_t v1007;
  _BYTE *v1008;
  _BYTE *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _BYTE *v1012;
  _BYTE *v1013;
  uint64_t v1014;
  uint64_t v1015;
  _QWORD *v1016;
  _QWORD *v1017;
  uint64_t v1018;
  uint64_t v1019;
  unsigned int (*v1020)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  char *v1024;
  uint64_t v1025;
  uint64_t v1026;
  void (*v1027)(char *, char *, uint64_t);
  uint64_t v1028;
  uint64_t v1029;
  _BYTE *v1030;
  _BYTE *v1031;
  uint64_t v1032;
  uint64_t v1033;
  char *v1034;
  char *v1035;
  uint64_t v1036;
  uint64_t v1037;
  _QWORD *v1038;
  _QWORD *v1039;
  int *v1040;
  unsigned int (**v1041)(_QWORD *, uint64_t, int *);
  uint64_t v1042;
  uint64_t v1043;
  char *v1044;
  char *v1045;
  uint64_t v1046;
  unsigned int (*v1047)(char *, uint64_t, uint64_t);
  char *v1048;
  uint64_t v1049;
  void (**v1050)(_QWORD *, _QWORD, uint64_t, int *);
  char *v1051;
  uint64_t v1052;
  uint64_t v1053;
  char *v1054;
  char *v1055;
  uint64_t v1056;
  char *v1057;
  char *v1058;
  uint64_t v1059;
  uint64_t v1060;
  char *v1061;
  char *v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  char *v1066;
  uint64_t v1067;
  char *v1068;
  char *v1069;
  uint64_t v1070;
  uint64_t v1071;
  char *v1072;
  char *v1073;
  uint64_t v1074;
  uint64_t v1075;
  _BYTE *v1076;
  _QWORD *v1077;
  _BYTE *v1078;
  _QWORD *v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  char *v1085;
  uint64_t v1086;
  void (*v1087)(char *, char *, uint64_t);
  uint64_t v1088;
  _BYTE *v1089;
  _QWORD *v1090;
  _BYTE *v1091;
  _QWORD *v1092;
  uint64_t v1093;
  uint64_t v1094;
  _BYTE *v1095;
  _BYTE *v1096;
  uint64_t v1097;
  void (*v1098)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v1099;
  uint64_t v1100;
  char *v1101;
  char *v1102;
  uint64_t v1103;
  uint64_t v1104;
  _BYTE *v1105;
  _BYTE *v1106;
  uint64_t v1107;
  uint64_t v1108;
  _BYTE *v1109;
  _BYTE *v1110;
  uint64_t v1111;
  _QWORD *v1112;
  uint64_t v1113;
  uint64_t v1114;
  _QWORD *v1115;
  _QWORD *v1116;
  uint64_t v1117;
  _QWORD *v1118;
  _QWORD *v1119;
  uint64_t v1120;
  uint64_t v1121;
  unsigned int (*v1122)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  char *v1126;
  char *v1127;
  uint64_t v1128;
  uint64_t v1129;
  unsigned int (*v1130)(char *, uint64_t, uint64_t);
  uint64_t v1131;
  uint64_t v1132;
  char *v1133;
  char *v1134;
  uint64_t v1135;
  uint64_t v1136;
  char *v1137;
  char *v1138;
  uint64_t v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  _QWORD *v1143;
  _QWORD *v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  uint64_t v1149;
  char *v1150;
  char *v1151;
  uint64_t v1152;
  _QWORD *v1153;
  void (*v1154)(char *, char *, uint64_t);
  uint64_t v1155;
  uint64_t v1156;
  _QWORD *v1157;
  _QWORD *v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  char *v1163;
  char *v1164;
  uint64_t v1165;
  uint64_t v1166;
  char *v1167;
  char *v1168;
  uint64_t v1169;
  void (*v1171)(char *, char *, uint64_t);
  char *v1172;
  char *v1173;
  _QWORD *v1174;
  _QWORD *v1175;
  char *v1176;
  char *__src;
  char *__srca;
  uint64_t v1179;
  char *v1180;
  uint64_t v1181;
  char *v1182;
  uint64_t v1183;
  _QWORD *v1184;
  void *v1185;
  char *v1186;
  _QWORD *v1187;
  _QWORD *v1188;
  char *v1189;
  void (**v1190)(char *, _QWORD, uint64_t, uint64_t);
  void *v1191;
  void *v1192;
  void *v1193;
  _QWORD *v1194;
  uint64_t v1195;
  unsigned int (*v1196)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  char *v1200;
  char *v1201;
  char *v1202;
  uint64_t v1203;
  _QWORD *__dst;
  char *__dsta;
  void *__dstb;
  char *__dstg;
  unsigned int (**__dstc)(const void *, uint64_t, uint64_t);
  _BYTE *__dsth;
  int *__dstd;
  void *__dste;
  void *__dstf;
  char *__dsti;
  uint64_t v1214;
  int *v1215;
  int *v1216;
  uint64_t DecorationResult;
  char *v1218;
  uint64_t v1219;
  int *v1220;
  char *v1221;
  uint64_t v1222;
  char *v1223;
  _BYTE *v1224;
  uint64_t v1225;
  uint64_t v1226;
  char *v1227;
  char *v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  _BYTE *v1247;
  _BYTE *v1248;
  _BYTE *v1249;
  _BYTE *v1250;
  _BYTE *v1251;
  _BYTE *v1252;
  _BYTE *v1253;
  _BYTE *v1254;
  _BYTE *v1255;
  _BYTE *v1256;
  _BYTE *v1257;
  _BYTE *v1258;
  _BYTE *v1259;
  _BYTE *v1260;
  _BYTE *v1261;
  _BYTE *v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  uint64_t v1272;
  uint64_t v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;
  unsigned int (*v1291)(_BYTE *, uint64_t, uint64_t);
  uint64_t v1292;
  _BYTE *v1293;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a3[11];
  v1293 = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  a1[12] = a2[12];
  v11 = type metadata accessor for TranscriptProtoPayload(0);
  v12 = *(_QWORD *)(v11 - 8);
  v1291 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1291(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v15 = a2;
    v14 = a3;
  }
  else
  {
    v1290 = v12;
    v16 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v1292 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1292 + 48))(v10, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      v18 = v1293;
      memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v15 = a2;
      v14 = a3;
      v19 = v1290;
    }
    else
    {
      v15 = a2;
      v14 = a3;
      v19 = v12;
      v18 = v1293;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v1263 = v16;
          v1229 = v11;
          *v1293 = *v10;
          DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
          v21 = DecorationPrePlannerResult[5];
          v22 = &v1293[v21];
          v1247 = v10;
          v23 = &v10[v21];
          v24 = type metadata accessor for TranscriptProtoLocaleSettings(0);
          v25 = *(_QWORD *)(v24 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
          {
            v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          }
          else
          {
            v305 = v23[1];
            *v22 = *v23;
            v22[1] = v305;
            v306 = v23[3];
            v22[2] = v23[2];
            v22[3] = v306;
            v307 = v23[5];
            v22[4] = v23[4];
            v22[5] = v307;
            v308 = *(int *)(v24 + 28);
            v309 = (char *)v22 + v308;
            v1218 = (char *)v23 + v308;
            v310 = sub_2408E57A4();
            v311 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v311(v309, v1218, v310);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          }
          v312 = DecorationPrePlannerResult[6];
          v18 = v1293;
          v313 = &v1293[v312];
          v10 = v1247;
          v314 = &v1247[v312];
          v315 = type metadata accessor for TranscriptProtoDeviceDetails(0);
          v316 = *(_QWORD *)(v315 - 8);
          v16 = v1263;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v316 + 48))(v314, 1, v315))
          {
            v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
            memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
          }
          else
          {
            v520 = v314[1];
            *v313 = *v314;
            v313[1] = v520;
            v521 = *(int *)(v315 + 20);
            v522 = (_DWORD *)((char *)v313 + v521);
            v523 = (_DWORD *)((char *)v314 + v521);
            v524 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
            v1222 = *(_QWORD *)(v524 - 8);
            v525 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1222 + 48);
            swift_bridgeObjectRetain();
            if (v525(v523, 1, v524))
            {
              v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
              memcpy(v522, v523, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
            }
            else
            {
              *v522 = *v523;
              v645 = *(int *)(v524 + 20);
              v646 = (char *)v522 + v645;
              v647 = v522;
              v648 = (char *)v523 + v645;
              v649 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v649 - 8) + 16))(v646, v648, v649);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1222 + 56))(v647, 0, 1, v524);
            }
            v16 = v1263;
            v650 = *(int *)(v315 + 24);
            v651 = (char *)v313 + v650;
            v652 = (char *)v314 + v650;
            v653 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v653 - 8) + 16))(v651, v652, v653);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v313, 0, 1, v315);
            v18 = v1293;
            v10 = v1247;
          }
          goto LABEL_244;
        case 1u:
          v1264 = v16;
          v1229 = v11;
          v27 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v27;
          v1293[16] = v10[16];
          v28 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
          v29 = v28[6];
          v30 = &v1293[v29];
          v1248 = v10;
          v31 = &v10[v29];
          v32 = type metadata accessor for TranscriptProtoStatementID(0);
          v33 = *(_QWORD *)(v32 - 8);
          v34 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48);
          swift_bridgeObjectRetain();
          if (v34(v31, 1, v32))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v30 = *(_DWORD *)v31;
            v318 = v31[2];
            v30[1] = v31[1];
            v30[2] = v318;
            v319 = *(int *)(v32 + 24);
            v320 = (char *)v30 + v319;
            v321 = (char *)v31 + v319;
            v322 = sub_2408E57A4();
            v323 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 16);
            swift_bridgeObjectRetain();
            v323(v320, v321, v322);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          }
          v15 = a2;
          v324 = v28[7];
          v325 = &v1293[v324];
          v326 = &v1248[v324];
          v327 = v326[1];
          *v325 = *v326;
          v325[1] = v327;
          v328 = v28[8];
          v329 = &v1293[v328];
          v330 = &v1248[v328];
          v331 = sub_2408E57A4();
          v332 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v331 - 8) + 16);
          swift_bridgeObjectRetain();
          v333 = v331;
          v10 = v1248;
          v332(v329, v330, v333);
          v18 = v1293;
          v16 = v1264;
          goto LABEL_80;
        case 2u:
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          v1293[8] = v10[8];
          v36 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v36;
          v37 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
          v1230 = v11;
          v38 = &v1293[v37];
          v1265 = v16;
          v39 = &v10[v37];
          v40 = sub_2408E57A4();
          v41 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v42 = v38;
          v11 = v1230;
          v43 = v39;
          v16 = v1265;
          v44 = v40;
          v19 = v1290;
          v41(v42, v43, v44);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 3u:
          *v1293 = *v10;
          v45 = (int *)type metadata accessor for TranscriptProtoRequest(0);
          v46 = v45[5];
          v47 = &v1293[v46];
          v48 = &v10[v46];
          v49 = type metadata accessor for TranscriptProtoRequestContent(0);
          v50 = *(_QWORD *)(v49 - 8);
          v1229 = v11;
          v1249 = v10;
          v1266 = v16;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          {
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v1219 = v50;
            v334 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v334 - 8) + 48))(v48, 1, v334))
            {
              v600 = (char *)&loc_24054A80C + 4 * word_24090168E[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v335 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
            v972 = *(int *)(v49 + 20);
            v973 = &v47[v972];
            v974 = v47;
            v975 = &v48[v972];
            v976 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v976 - 8) + 16))(v973, v975, v976);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1219 + 56))(v974, 0, 1, v49);
          }
          v977 = v45[6];
          v978 = &v1293[v977];
          v979 = &v10[v977];
          v980 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          v981 = *(_QWORD *)(v980 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v981 + 48))(v979, 1, v980))
          {
            v982 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
            memcpy(v978, v979, *(_QWORD *)(*(_QWORD *)(v982 - 8) + 64));
          }
          else
          {
            v983 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v983 - 8) + 48))(v979, 1, v983))
            {
              v985 = (char *)&loc_24054EF28 + 4 * byte_240901696[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v984 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
            memcpy(v978, v979, *(_QWORD *)(*(_QWORD *)(v984 - 8) + 64));
            v986 = *(int *)(v980 + 20);
            v987 = &v978[v986];
            v988 = &v979[v986];
            v989 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v989 - 8) + 16))(v987, v988, v989);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v981 + 56))(v978, 0, 1, v980);
          }
          v990 = v45[7];
          v991 = &v1293[v990];
          v992 = &v10[v990];
          v993 = v992[1];
          *v991 = *v992;
          v991[1] = v993;
          v994 = v45[8];
          v995 = &v1293[v994];
          v996 = &v10[v994];
          v997 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v998 = *(_QWORD *)(v997 - 8);
          v999 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v998 + 48);
          swift_bridgeObjectRetain();
          v15 = a2;
          if (v999(v996, 1, v997))
          {
            v1000 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v995, v996, *(_QWORD *)(*(_QWORD *)(v1000 - 8) + 64));
          }
          else
          {
            v1001 = v996[1];
            *v995 = *v996;
            v995[1] = v1001;
            v995[2] = v996[2];
            v1002 = *(int *)(v997 + 24);
            v1227 = (char *)v995 + v1002;
            v1003 = (char *)v996 + v1002;
            v1004 = sub_2408E57A4();
            v1005 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1004 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1006 = v1004;
            v15 = a2;
            v1005(v1227, v1003, v1006);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v998 + 56))(v995, 0, 1, v997);
          }
          v14 = a3;
          v1007 = v45[9];
          v18 = v1293;
          v1008 = &v1293[v1007];
          v10 = v1249;
          v1009 = &v1249[v1007];
          v1010 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1010 - 8) + 16))(v1008, v1009, v1010);
          v16 = v1266;
          goto LABEL_303;
        case 4u:
          v52 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v52;
          v53 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v53;
          v54 = *((_QWORD *)v10 + 5);
          *((_QWORD *)v1293 + 4) = *((_QWORD *)v10 + 4);
          *((_QWORD *)v1293 + 5) = v54;
          *((_QWORD *)v1293 + 6) = *((_QWORD *)v10 + 6);
          v1293[56] = v10[56];
          v55 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
          v56 = &v1293[v55];
          v57 = &v10[v55];
          v58 = sub_2408E57A4();
          v59 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v60 = v56;
          v19 = v1290;
          v61 = v57;
          v62 = v58;
          v15 = a2;
          v14 = a3;
          v59(v60, v61, v62);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 5u:
          v1267 = v16;
          v1229 = v11;
          v63 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v63;
          v1293[16] = v10[16];
          *((_QWORD *)v1293 + 3) = *((_QWORD *)v10 + 3);
          v64 = (int *)type metadata accessor for TranscriptProtoAction(0);
          v65 = v64[7];
          v66 = &v1293[v65];
          v1250 = v10;
          v67 = &v10[v65];
          v68 = type metadata accessor for TranscriptProtoStatementID(0);
          v69 = *(_QWORD *)(v68 - 8);
          v70 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v69 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v70(v67, 1, v68))
          {
            v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v66 = *(_DWORD *)v67;
            v336 = v67[2];
            v66[1] = v67[1];
            v66[2] = v336;
            v337 = *(int *)(v68 + 24);
            v338 = (char *)v66 + v337;
            v339 = (char *)v67 + v337;
            v340 = sub_2408E57A4();
            v341 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v340 - 8) + 16);
            swift_bridgeObjectRetain();
            v341(v338, v339, v340);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
          }
          v15 = a2;
          v342 = v64[8];
          v343 = &v1293[v342];
          v344 = &v1250[v342];
          v345 = v344[1];
          *v343 = *v344;
          v343[1] = v345;
          v346 = v64[9];
          v347 = &v1293[v346];
          v348 = &v1250[v346];
          v349 = v348[1];
          *v347 = *v348;
          v347[1] = v349;
          v350 = v64[10];
          v351 = &v1293[v350];
          v352 = &v1250[v350];
          v353 = v352[1];
          *v351 = *v352;
          v351[1] = v353;
          v354 = v64[11];
          v355 = &v1293[v354];
          v356 = &v1250[v354];
          v357 = sub_2408E57A4();
          v358 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v357 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v359 = v355;
          v10 = v1250;
          v358(v359, v356, v357);
          v18 = v1293;
          v16 = v1267;
LABEL_80:
          swift_storeEnumTagMultiPayload();
          goto LABEL_245;
        case 6u:
          v1268 = v16;
          v1231 = v11;
          v72 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v72;
          v73 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v73;
          v74 = v10;
          v75 = *((_QWORD *)v10 + 4);
          v76 = *((_QWORD *)v10 + 5);
          *((_QWORD *)v1293 + 4) = v75;
          *((_QWORD *)v1293 + 5) = v76;
          v77 = *((_QWORD *)v74 + 7);
          *((_QWORD *)v1293 + 6) = *((_QWORD *)v74 + 6);
          *((_QWORD *)v1293 + 7) = v77;
          v78 = type metadata accessor for TranscriptProtoClientAction(0);
          v79 = *(int *)(v78 + 36);
          __dst = &v1293[v79];
          v1214 = v78;
          v80 = &v74[v79];
          v81 = type metadata accessor for TranscriptProtoStatementID(0);
          v82 = *(_QWORD *)(v81 - 8);
          v83 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v83(v80, 1, v81))
          {
            v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(__dst, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v80;
            v360 = v80[2];
            __dst[1] = v80[1];
            __dst[2] = v360;
            v361 = *(int *)(v81 + 24);
            v362 = (char *)__dst + v361;
            v363 = (char *)v80 + v361;
            v364 = sub_2408E57A4();
            v365 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v364 - 8) + 16);
            swift_bridgeObjectRetain();
            v365(v362, v363, v364);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v81);
          }
          v15 = a2;
          v14 = a3;
          v19 = v1290;
          v366 = *(int *)(v1214 + 40);
          v18 = v1293;
          v367 = &v1293[v366];
          v10 = v74;
          v368 = &v74[v366];
          v369 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v367, v368, v369);
          v16 = v1268;
          swift_storeEnumTagMultiPayload();
          goto LABEL_307;
        case 7u:
          v1269 = v16;
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          Step = type metadata accessor for TranscriptProtoQueryStep(0);
          v86 = *(int *)(Step + 20);
          v87 = &v1293[v86];
          v1251 = v10;
          v88 = &v10[v86];
          v89 = type metadata accessor for TranscriptProtoStatementID(0);
          v90 = *(_QWORD *)(v89 - 8);
          v91 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48);
          swift_bridgeObjectRetain();
          if (v91(v88, 1, v89))
            goto LABEL_20;
          goto LABEL_83;
        case 8u:
          v1269 = v16;
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          Step = type metadata accessor for TranscriptProtoVariableStep(0);
          v93 = *(int *)(Step + 20);
          v87 = &v1293[v93];
          v1251 = v10;
          v88 = &v10[v93];
          v89 = type metadata accessor for TranscriptProtoStatementID(0);
          v90 = *(_QWORD *)(v89 - 8);
          v94 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48);
          swift_bridgeObjectRetain();
          if (v94(v88, 1, v89))
          {
LABEL_20:
            v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
LABEL_83:
            *(_DWORD *)v87 = *(_DWORD *)v88;
            v370 = v88[2];
            v87[1] = v88[1];
            v87[2] = v370;
            v371 = *(int *)(v89 + 24);
            v372 = (char *)v87 + v371;
            v1236 = v11;
            v373 = (char *)v88 + v371;
            v374 = sub_2408E57A4();
            v375 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 16);
            swift_bridgeObjectRetain();
            v376 = v373;
            v11 = v1236;
            v375(v372, v376, v374);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v15 = a2;
          v377 = *(int *)(Step + 24);
          v18 = v1293;
          v378 = &v1293[v377];
          v10 = v1251;
          v379 = &v1251[v377];
          v380 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v378, v379, v380);
          v16 = v1269;
          goto LABEL_285;
        case 9u:
          v95 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v95;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0xAu:
          v96 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v10, 1, v96))
          {
            v381 = (char *)&loc_24054946C + 4 * word_240901686[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
          v18 = v1293;
          memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          v869 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
          v870 = &v1293[v869];
          v871 = &v10[v869];
          v872 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v872 - 8) + 16))(v870, v871, v872);
          goto LABEL_285;
        case 0xBu:
          v98 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
          v99 = *(_QWORD *)(v98 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v99 + 48))(v10, 1, v98))
          {
            v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            v382 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
            v383 = *(_QWORD *)(v382 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v383 + 48))(v10, 1, v382))
            {
              v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
              memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v384 - 8) + 64));
            }
            else
            {
              v601 = *((_QWORD *)v10 + 1);
              *(_QWORD *)v1293 = *(_QWORD *)v10;
              *((_QWORD *)v1293 + 1) = v601;
              v602 = *((_QWORD *)v10 + 3);
              *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
              *((_QWORD *)v1293 + 3) = v602;
              v1244 = v11;
              v603 = *((_QWORD *)v10 + 5);
              *((_QWORD *)v1293 + 4) = *((_QWORD *)v10 + 4);
              *((_QWORD *)v1293 + 5) = v603;
              v604 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
              __dsth = &v10[v604];
              v1224 = &v1293[v604];
              v1260 = v10;
              v605 = sub_2408E57A4();
              v606 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v605 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v11 = v1244;
              swift_bridgeObjectRetain();
              v607 = v605;
              v10 = v1260;
              v606(v1224, __dsth, v607);
              v18 = v1293;
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v383 + 56))(v1293, 0, 1, v382);
            }
            v14 = a3;
            v608 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
            v609 = &v18[v608];
            v610 = &v10[v608];
            v611 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v611 - 8) + 16))(v609, v610, v611);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v18, 0, 1, v98);
          }
          v15 = a2;
          v612 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
          v613 = &v18[v612];
          v614 = &v10[v612];
          v615 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v615 - 8) + 16))(v613, v614, v615);
          swift_storeEnumTagMultiPayload();
          v19 = v1290;
          goto LABEL_308;
        case 0xCu:
          v101 = *(_QWORD *)v10;
          v102 = *((_QWORD *)v10 + 1);
          sub_240360070(*(_QWORD *)v10, v102);
          *(_QWORD *)v1293 = v101;
          *((_QWORD *)v1293 + 1) = v102;
          v103 = *((_QWORD *)v10 + 2);
          v104 = *((_QWORD *)v10 + 3);
          sub_240360070(v103, v104);
          *((_QWORD *)v1293 + 2) = v103;
          *((_QWORD *)v1293 + 3) = v104;
          v105 = *((_QWORD *)v10 + 5);
          *((_QWORD *)v1293 + 4) = *((_QWORD *)v10 + 4);
          *((_QWORD *)v1293 + 5) = v105;
          v106 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
          v107 = &v1293[v106];
          v1270 = v16;
          v108 = v11;
          v109 = &v10[v106];
          v110 = v10;
          v111 = sub_2408E57A4();
          v112 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
          swift_bridgeObjectRetain();
          v113 = v109;
          v11 = v108;
          v16 = v1270;
          v114 = v111;
          v10 = v110;
          v19 = v1290;
          v112(v107, v113, v114);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0xDu:
          v1271 = v16;
          v1229 = v11;
          v115 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v115;
          v116 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v116;
          v117 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v118 = v117[6];
          v119 = &v1293[v118];
          v120 = &v10[v118];
          v121 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          v122 = *(_QWORD *)(v121 - 8);
          v123 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v122 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v123(v120, 1, v121))
          {
            v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
            memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            v18 = v1293;
          }
          else
          {
            v385 = v10;
            v386 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            v387 = *(_QWORD *)(v386 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v387 + 48))(v120, 1, v386))
            {
              v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
              memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v388 - 8) + 64));
              v18 = v1293;
            }
            else
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              switch(EnumCaseMultiPayload)
              {
                case 6:
                  v670 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v670 - 8) + 16))(v119, v120, v670);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *v119 = *v120;
                  v671 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                + 20);
                  v672 = v386;
                  v673 = &v119[v671];
                  v674 = &v120[v671];
                  v675 = sub_2408E57A4();
                  v676 = v673;
                  v386 = v672;
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v675 - 8) + 16))(v676, v674, v675);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 1:
                  v1225 = v386;
                  v617 = *(_QWORD *)v120;
                  if ((~*(_QWORD *)v120 & 0xF000000000000007) != 0)
                    swift_retain();
                  *(_QWORD *)v119 = v617;
                  v618 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                  v619 = &v119[v618];
                  v620 = &v120[v618];
                  v621 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v621 - 8) + 16))(v619, v620, v621);
                  v386 = v1225;
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v119, v120, *(_QWORD *)(v387 + 64));
                  break;
              }
              v18 = v1293;
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v387 + 56))(v119, 0, 1, v386);
            }
            v677 = *(int *)(v121 + 20);
            v678 = &v119[v677];
            v679 = &v120[v677];
            v680 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v680 - 8) + 16))(v678, v679, v680);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
            v10 = v385;
          }
          v681 = v117[7];
          v682 = &v18[v681];
          v1261 = v10;
          v683 = &v10[v681];
          v684 = type metadata accessor for TranscriptProtoStatementID(0);
          v685 = *(_QWORD *)(v684 - 8);
          v686 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v685 + 48);
          v1226 = v685;
          if (v686(v683, 1, v684))
          {
            v687 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v682, v683, *(_QWORD *)(*(_QWORD *)(v687 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v682 = *(_DWORD *)v683;
            v688 = v683[2];
            v682[1] = v683[1];
            v682[2] = v688;
            v689 = *(int *)(v684 + 24);
            v690 = (char *)v682 + v689;
            v691 = (char *)v683 + v689;
            v692 = sub_2408E57A4();
            v693 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v692 - 8) + 16);
            swift_bridgeObjectRetain();
            v693(v690, v691, v692);
            v18 = v1293;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v685 + 56))(v682, 0, 1, v684);
          }
          v694 = v117[8];
          v695 = &v18[v694];
          v10 = v1261;
          v696 = &v1261[v694];
          v697 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          v698 = *(_QWORD *)(v697 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v698 + 48))(v696, 1, v697))
          {
            v699 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
            memcpy(v695, v696, *(_QWORD *)(*(_QWORD *)(v699 - 8) + 64));
            v14 = a3;
            v16 = v1271;
            goto LABEL_251;
          }
          v1196 = v686;
          v700 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          v701 = *(void **)(v700 - 8);
          __dstd = v117;
          if ((*((unsigned int (**)(_QWORD *, uint64_t, uint64_t))v701 + 6))(v696, 1, v700))
          {
            v702 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
            memcpy(v695, v696, *(_QWORD *)(*(_QWORD *)(v702 - 8) + 64));
            v14 = a3;
            goto LABEL_250;
          }
          v1185 = v701;
          v1192 = (void *)v700;
          v703 = swift_getEnumCaseMultiPayload();
          if (v703 == 1)
          {
            *v695 = *v696;
            v712 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v713 = (char *)v695 + v712;
            v714 = (char *)v696 + v712;
            v715 = sub_2408E57A4();
            v716 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v715 - 8) + 16);
            swift_bridgeObjectRetain();
            v717 = v715;
            v10 = v1261;
            v716(v713, v714, v717);
            v18 = v1293;
            v718 = (void *)v700;
            swift_storeEnumTagMultiPayload();
            v14 = a3;
          }
          else
          {
            if (v703)
            {
              memcpy(v695, v696, *((_QWORD *)v701 + 8));
              v14 = a3;
              v718 = (void *)v700;
              goto LABEL_249;
            }
            v704 = v695;
            v705 = v696[1];
            *v704 = *v696;
            v704[1] = v705;
            v706 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v707 = *(int *)(v706 + 20);
            v708 = v704;
            v709 = (_QWORD *)((char *)v704 + v707);
            v710 = (_QWORD *)((char *)v696 + v707);
            swift_bridgeObjectRetain();
            if (v1196(v710, 1, v684))
            {
              v711 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v709, v710, *(_QWORD *)(*(_QWORD *)(v711 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v709 = *(_DWORD *)v710;
              v852 = v710[2];
              v709[1] = v710[1];
              v709[2] = v852;
              v853 = *(int *)(v684 + 24);
              v1200 = (char *)v709 + v853;
              v1182 = (char *)v710 + v853;
              v854 = sub_2408E57A4();
              v855 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v854 - 8) + 16);
              swift_bridgeObjectRetain();
              v855(v1200, v1182, v854);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1226 + 56))(v709, 0, 1, v684);
            }
            v856 = *(int *)(v706 + 24);
            v857 = (char *)v708 + v856;
            v858 = (char *)v696 + v856;
            v859 = sub_2408E57A4();
            v860 = v857;
            v695 = v708;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v859 - 8) + 16))(v860, v858, v859);
            v718 = v1192;
            swift_storeEnumTagMultiPayload();
            v14 = a3;
            v10 = v1261;
            v18 = v1293;
          }
          v701 = v1185;
LABEL_249:
          (*((void (**)(_QWORD *, _QWORD, uint64_t, void *))v701 + 7))(v695, 0, 1, v718);
LABEL_250:
          v16 = v1271;
          v861 = *(int *)(v697 + 20);
          v862 = (char *)v695 + v861;
          v863 = (char *)v696 + v861;
          v864 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v864 - 8) + 16))(v862, v863, v864);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v698 + 56))(v695, 0, 1, v697);
          v117 = __dstd;
LABEL_251:
          v865 = v117[9];
          v866 = &v18[v865];
          v867 = &v10[v865];
          v868 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v868 - 8) + 16))(v866, v867, v868);
          swift_storeEnumTagMultiPayload();
          v15 = a2;
LABEL_304:
          v11 = v1229;
          v19 = v1290;
LABEL_308:
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1292 + 56))(v18, 0, 1, v16);
          break;
        case 0xEu:
        case 0x10u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x29u:
          v151 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v1293, v10, v151);
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0xFu:
          v1272 = v16;
          v125 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v125;
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
          v127 = StepResults[6];
          v128 = &v1293[v127];
          v1252 = v10;
          v129 = &v10[v127];
          v130 = type metadata accessor for TranscriptProtoStatementID(0);
          v131 = *(_QWORD *)(v130 - 8);
          v132 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v131 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v132(v129, 1, v130))
            goto LABEL_148;
          goto LABEL_154;
        case 0x11u:
          v1273 = v16;
          v133 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v133;
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          v1293[24] = v10[24];
          *(_WORD *)(v1293 + 25) = *(_WORD *)(v10 + 25);
          v134 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
          v135 = v134[9];
          v136 = &v1293[v135];
          v1253 = v10;
          v137 = &v10[v135];
          v138 = type metadata accessor for TranscriptProtoParameterSet(0);
          v139 = *(_QWORD *)(v138 - 8);
          v140 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v139 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v140(v137, 1, v138))
          {
            v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
            memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          else
          {
            *v136 = *v137;
            v389 = *(int *)(v138 + 20);
            v390 = (char *)v136 + v389;
            v1237 = v11;
            v391 = (char *)v137 + v389;
            v392 = sub_2408E57A4();
            v393 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 16);
            swift_bridgeObjectRetain();
            v394 = v391;
            v11 = v1237;
            v393(v390, v394, v392);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
          }
          v395 = v134[10];
          v396 = &v1293[v395];
          v397 = &v1253[v395];
          v398 = type metadata accessor for TranscriptProtoStatementID(0);
          v399 = *(_QWORD *)(v398 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v399 + 48))(v397, 1, v398))
          {
            v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v396, v397, *(_QWORD *)(*(_QWORD *)(v400 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v396 = *(_DWORD *)v397;
            v527 = v397[2];
            v396[1] = v397[1];
            v396[2] = v527;
            v528 = *(int *)(v398 + 24);
            v529 = (char *)v396 + v528;
            v1241 = v11;
            v530 = (char *)v397 + v528;
            v531 = sub_2408E57A4();
            v532 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v531 - 8) + 16);
            swift_bridgeObjectRetain();
            v533 = v530;
            v11 = v1241;
            v532(v529, v533, v531);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v399 + 56))(v396, 0, 1, v398);
          }
          v15 = a2;
          v534 = v134[11];
          v18 = v1293;
          v535 = &v1293[v534];
          v10 = v1253;
          v536 = &v1253[v534];
          v537 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v537 - 8) + 16))(v535, v536, v537);
          v16 = v1273;
          goto LABEL_285;
        case 0x12u:
          v142 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v142;
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          v143 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
          v1232 = v11;
          v144 = &v1293[v143];
          v1274 = v16;
          v145 = &v10[v143];
          v146 = sub_2408E57A4();
          v147 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v148 = v144;
          v11 = v1232;
          v149 = v145;
          v16 = v1274;
          v150 = v146;
          v19 = v1290;
          v147(v148, v149, v150);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x16u:
          v152 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v152;
          v153 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
          v154 = &v1293[v153];
          v1275 = v16;
          v155 = v11;
          v156 = &v10[v153];
          v157 = v10;
          v158 = sub_2408E57A4();
          v159 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          v160 = v156;
          v11 = v155;
          v16 = v1275;
          v161 = v158;
          v10 = v157;
          v19 = v1290;
          v159(v154, v160, v161);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x17u:
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          v162 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
          v163 = &v1293[v162];
          v1276 = v16;
          v164 = v11;
          v165 = &v10[v162];
          v166 = v10;
          v167 = sub_2408E57A4();
          v168 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
          swift_bridgeObjectRetain();
          v169 = v165;
          v11 = v164;
          v16 = v1276;
          v170 = v167;
          v10 = v166;
          v19 = v1290;
          v168(v163, v169, v170);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x18u:
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          v171 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
          v172 = &v1293[v171];
          v1277 = v16;
          v173 = v11;
          v174 = &v10[v171];
          v175 = v10;
          v176 = sub_2408E57A4();
          v177 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
          swift_bridgeObjectRetain();
          v178 = v174;
          v11 = v173;
          v16 = v1277;
          v179 = v176;
          v10 = v175;
          v19 = v1290;
          v177(v172, v178, v179);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x19u:
          v180 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v180;
          v181 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
          v1233 = v11;
          v182 = &v1293[v181];
          v1278 = v16;
          v183 = &v10[v181];
          v184 = sub_2408E57A4();
          v185 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v186 = v182;
          v11 = v1233;
          v187 = v183;
          v16 = v1278;
          v188 = v184;
          v19 = v1290;
          v185(v186, v187, v188);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x1Au:
          v1279 = v16;
          v189 = type metadata accessor for TranscriptProtoStatementID(0);
          v190 = *(_QWORD *)(v189 - 8);
          v191 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v190 + 48);
          if (v191(v10, 1, v189))
          {
            v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            v193 = v1293;
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          }
          else
          {
            v193 = v1293;
            *(_DWORD *)v1293 = *(_DWORD *)v10;
            v401 = *((_QWORD *)v10 + 2);
            *((_QWORD *)v1293 + 1) = *((_QWORD *)v10 + 1);
            *((_QWORD *)v1293 + 2) = v401;
            v402 = *(int *)(v189 + 24);
            v403 = &v1293[v402];
            v1238 = v11;
            v404 = &v10[v402];
            v405 = v10;
            v406 = sub_2408E57A4();
            v407 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v406 - 8) + 16);
            swift_bridgeObjectRetain();
            v408 = v404;
            v11 = v1238;
            v409 = v406;
            v10 = v405;
            v407(v403, v408, v409);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v1293, 0, 1, v189);
          }
          v410 = type metadata accessor for TranscriptProtoActionCancellation(0);
          v411 = *(int *)(v410 + 20);
          v412 = &v193[v411];
          v413 = v10;
          v414 = &v10[v411];
          if (v191(v414, 1, v189))
          {
            v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v412, v414, *(_QWORD *)(*(_QWORD *)(v415 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v412 = *(_DWORD *)v414;
            v538 = v414[2];
            v412[1] = v414[1];
            v412[2] = v538;
            v539 = *(int *)(v189 + 24);
            v1223 = (char *)v412 + v539;
            v540 = v11;
            v541 = (char *)v414 + v539;
            v542 = sub_2408E57A4();
            v543 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v542 - 8) + 16);
            swift_bridgeObjectRetain();
            v544 = v541;
            v11 = v540;
            v543(v1223, v544, v542);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v412, 0, 1, v189);
          }
          v19 = v1290;
          v545 = *(int *)(v410 + 24);
          v18 = v1293;
          v546 = &v1293[v545];
          v10 = v413;
          v547 = &v413[v545];
          v548 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v548 - 8) + 16))(v546, v547, v548);
          v16 = v1279;
          swift_storeEnumTagMultiPayload();
          v15 = a2;
          v14 = a3;
          goto LABEL_308;
        case 0x1Bu:
          v194 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v194;
          v195 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v195;
          *((_DWORD *)v1293 + 8) = *((_DWORD *)v10 + 8);
          v1280 = v16;
          v196 = *((_QWORD *)v10 + 6);
          *((_QWORD *)v1293 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v1293 + 6) = v196;
          v197 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
          v198 = &v1293[v197];
          v199 = &v10[v197];
          v200 = sub_2408E57A4();
          v201 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v16 = v1280;
          swift_bridgeObjectRetain();
          v202 = v198;
          v19 = v1290;
          v203 = v199;
          v204 = v200;
          v15 = a2;
          v14 = a3;
          v201(v202, v203, v204);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x1Cu:
          v1229 = v11;
          v205 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v205;
          v206 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v206;
          *((_QWORD *)v1293 + 4) = *((_QWORD *)v10 + 4);
          v1215 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
          v207 = v1215[7];
          v208 = &v1293[v207];
          v209 = &v10[v207];
          v210 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v211 = *(_QWORD *)(v210 - 8);
          v212 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1281 = v16;
          if (v212(v209, 1, v210))
          {
            v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            v214 = v1293;
          }
          else
          {
            v416 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v416 - 8) + 48))(v209, 1, v416))
            {
              v622 = (char *)&loc_24054AA90 + 4 * word_240901666[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v417 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v417 - 8) + 64));
            v214 = v1293;
            v1033 = *(int *)(v210 + 20);
            v1034 = &v208[v1033];
            v1035 = &v209[v1033];
            v1036 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1036 - 8) + 16))(v1034, v1035, v1036);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v208, 0, 1, v210);
          }
          v1037 = v1215[8];
          v1038 = &v214[v1037];
          v1039 = &v10[v1037];
          v1040 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
          v1041 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v1040 - 1);
          if (v1041[6](v1039, 1, v1040))
          {
            v1042 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
            memcpy(v1038, v1039, *(_QWORD *)(*(_QWORD *)(v1042 - 8) + 64));
          }
          else
          {
            __dstf = v1041;
            v1262 = v10;
            *v1038 = *v1039;
            *((_BYTE *)v1038 + 8) = *((_BYTE *)v1039 + 8);
            v1038[2] = v1039[2];
            v1043 = v1040[7];
            v1044 = (char *)v1038 + v1043;
            v1045 = (char *)v1039 + v1043;
            v1046 = type metadata accessor for TranscriptProtoDialogType(0);
            v1203 = *(_QWORD *)(v1046 - 8);
            v1047 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1203 + 48);
            swift_bridgeObjectRetain();
            v1048 = v1045;
            swift_bridgeObjectRetain();
            if (v1047(v1045, 1, v1046))
            {
              v1049 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v1044, v1045, *(_QWORD *)(*(_QWORD *)(v1049 - 8) + 64));
              v1050 = (void (**)(_QWORD *, _QWORD, uint64_t, int *))__dstf;
            }
            else
            {
              v1051 = v1044;
              v1052 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1052 - 8) + 48))(v1045, 1, v1052))
              {
                v1055 = (char *)&loc_24054FC94 + 4 * byte_24090167C[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1053 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              v1054 = v1051;
              memcpy(v1051, v1045, *(_QWORD *)(*(_QWORD *)(v1053 - 8) + 64));
              v1050 = (void (**)(_QWORD *, _QWORD, uint64_t, int *))__dstf;
              v1056 = *(int *)(v1046 + 20);
              v1057 = &v1051[v1056];
              v1058 = &v1048[v1056];
              v1059 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1059 - 8) + 16))(v1057, v1058, v1059);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1203 + 56))(v1054, 0, 1, v1046);
            }
            v1060 = v1040[8];
            v1061 = (char *)v1038 + v1060;
            v1062 = (char *)v1039 + v1060;
            if (v1047((char *)v1039 + v1060, 1, v1046))
            {
              v1063 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v1061, v1062, *(_QWORD *)(*(_QWORD *)(v1063 - 8) + 64));
              v10 = v1262;
            }
            else
            {
              v1064 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1064 - 8) + 48))(v1062, 1, v1064))
              {
                v1066 = (char *)&loc_24054FE9C + 4 * byte_240901681[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1065 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v1061, v1062, *(_QWORD *)(*(_QWORD *)(v1065 - 8) + 64));
              v10 = v1262;
              v1067 = *(int *)(v1046 + 20);
              v1068 = &v1061[v1067];
              v1069 = &v1062[v1067];
              v1070 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1070 - 8) + 16))(v1068, v1069, v1070);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1203 + 56))(v1061, 0, 1, v1046);
            }
            v1071 = v1040[9];
            v1072 = (char *)v1038 + v1071;
            v1073 = (char *)v1039 + v1071;
            v1074 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1074 - 8) + 16))(v1072, v1073, v1074);
            v1050[7](v1038, 0, 1, v1040);
          }
          v1075 = v1215[9];
          v1076 = v214;
          v1077 = &v214[v1075];
          v1078 = v10;
          v1079 = &v10[v1075];
          v1080 = type metadata accessor for TranscriptProtoStatementID(0);
          v1081 = *(_QWORD *)(v1080 - 8);
          v15 = a2;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1081 + 48))(v1079, 1, v1080))
          {
            v1082 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v1077, v1079, *(_QWORD *)(*(_QWORD *)(v1082 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v1077 = *(_DWORD *)v1079;
            v1083 = v1079[2];
            v1077[1] = v1079[1];
            v1077[2] = v1083;
            v1084 = *(int *)(v1080 + 24);
            v1085 = (char *)v1077 + v1084;
            __dsti = (char *)v1079 + v1084;
            v1086 = sub_2408E57A4();
            v1087 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1086 - 8) + 16);
            swift_bridgeObjectRetain();
            v1087(v1085, __dsti, v1086);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1081 + 56))(v1077, 0, 1, v1080);
          }
          v14 = a3;
          v1088 = v1215[10];
          v1089 = v1076;
          v1090 = &v1076[v1088];
          v1091 = v1078;
          v1092 = &v1078[v1088];
          v1093 = v1092[1];
          *v1090 = *v1092;
          v1090[1] = v1093;
          v1094 = v1215[11];
          v1095 = &v1076[v1094];
          v1096 = &v1078[v1094];
          v1097 = sub_2408E57A4();
          v1098 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1097 - 8) + 16);
          swift_bridgeObjectRetain();
          v1099 = v1097;
          v10 = v1091;
          v1098(v1095, v1096, v1099);
          v18 = v1089;
          v16 = v1281;
LABEL_303:
          swift_storeEnumTagMultiPayload();
          goto LABEL_304;
        case 0x1Du:
          v215 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v215;
          v216 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v216;
          v217 = type metadata accessor for TranscriptProtoStatementResult(0);
          v218 = *(int *)(v217 + 24);
          __dsta = &v1293[v218];
          v1216 = (int *)v217;
          v219 = &v10[v218];
          v220 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
          v221 = *(_QWORD **)(v220 - 8);
          v222 = (unsigned int (*)(char *, uint64_t, uint64_t))v221[6];
          swift_bridgeObjectRetain();
          v223 = v219;
          swift_bridgeObjectRetain();
          v1254 = v10;
          if (v222(v219, 1, v220))
          {
            v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
            memcpy(__dsta, v219, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
            v18 = v1293;
          }
          else
          {
            v418 = __dsta;
            v1190 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v221;
            v1195 = v220;
            v419 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v420 = *(_QWORD *)(v419 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v420 + 48))(v223, 1, v419))
            {
              v421 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              memcpy(__dsta, v223, *(_QWORD *)(*(_QWORD *)(v421 - 8) + 64));
              v18 = v1293;
            }
            else
            {
              v623 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              v18 = v1293;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v623 - 8) + 48))(v223, 1, v623))
              {
                v668 = (char *)&loc_24054B0CC + 4 * word_240901650[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v624 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(__dsta, v223, *(_QWORD *)(*(_QWORD *)(v624 - 8) + 64));
              v873 = *(int *)(v419 + 20);
              v874 = &__dsta[v873];
              v875 = v223;
              v876 = &v223[v873];
              v877 = sub_2408E57A4();
              v878 = v876;
              v223 = v875;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v877 - 8) + 16))(v874, v878, v877);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v420 + 56))(__dsta, 0, 1, v419);
            }
            v879 = *(int *)(v1195 + 20);
            v880 = &__dsta[v879];
            v881 = &v223[v879];
            v882 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
            v883 = *((_QWORD *)v882 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v883 + 48))(v881, 1, v882))
            {
              v884 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
              memcpy(v880, v881, *(_QWORD *)(*(_QWORD *)(v884 - 8) + 64));
            }
            else
            {
              v1183 = v883;
              v1289 = v16;
              *(_QWORD *)v880 = *(_QWORD *)v881;
              v885 = v882[5];
              __src = &v880[v885];
              v886 = &v881[v885];
              v887 = type metadata accessor for TranscriptProtoResponseDialog(0);
              v1175 = *(_QWORD **)(v887 - 8);
              v888 = (unsigned int (*)(char *, uint64_t, uint64_t))v1175[6];
              swift_bridgeObjectRetain();
              v1246 = v11;
              v1189 = v223;
              if (v888(v886, 1, v887))
              {
                v889 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                memcpy(__src, v886, *(_QWORD *)(*(_QWORD *)(v889 - 8) + 64));
              }
              else
              {
                v890 = *((_QWORD *)v886 + 1);
                *(_QWORD *)__src = *(_QWORD *)v886;
                *((_QWORD *)__src + 1) = v890;
                v891 = *((_QWORD *)v886 + 3);
                *((_QWORD *)__src + 2) = *((_QWORD *)v886 + 2);
                *((_QWORD *)__src + 3) = v891;
                v892 = *((_QWORD *)v886 + 5);
                *((_QWORD *)__src + 4) = *((_QWORD *)v886 + 4);
                *((_QWORD *)__src + 5) = v892;
                v893 = *((_QWORD *)v886 + 7);
                *((_QWORD *)__src + 6) = *((_QWORD *)v886 + 6);
                *((_QWORD *)__src + 7) = v893;
                v894 = *(int *)(v887 + 32);
                v1172 = &v886[v894];
                v1173 = &__src[v894];
                v895 = sub_2408E57A4();
                v1171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v895 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1171(v1173, v1172, v895);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1175[7])(__src, 0, 1, v887);
              }
              v896 = v882[6];
              v897 = &v880[v896];
              v898 = &v881[v896];
              v899 = type metadata accessor for TranscriptProtoResponseVisual(0);
              v900 = *(_QWORD *)(v899 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v900 + 48))(v898, 1, v899))
              {
                v901 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                memcpy(v897, v898, *(_QWORD *)(*(_QWORD *)(v901 - 8) + 64));
              }
              else
              {
                v902 = *((_QWORD *)v898 + 1);
                *(_QWORD *)v897 = *(_QWORD *)v898;
                *((_QWORD *)v897 + 1) = v902;
                v903 = *(int *)(v899 + 24);
                v1176 = &v897[v903];
                v904 = &v898[v903];
                v905 = sub_2408E57A4();
                __srca = v897;
                v906 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v905 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v906(v1176, v904, v905);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v900 + 56))(__srca, 0, 1, v899);
              }
              v16 = v1289;
              v907 = v882[7];
              v908 = &v880[v907];
              v909 = &v881[v907];
              v910 = *((_QWORD *)v909 + 1);
              *(_QWORD *)v908 = *(_QWORD *)v909;
              *((_QWORD *)v908 + 1) = v910;
              v911 = v882[8];
              v912 = &v880[v911];
              v913 = &v881[v911];
              v914 = *((_QWORD *)v913 + 1);
              *(_QWORD *)v912 = *(_QWORD *)v913;
              *((_QWORD *)v912 + 1) = v914;
              v880[v882[9]] = v881[v882[9]];
              v880[v882[10]] = v881[v882[10]];
              v915 = v882[11];
              v916 = &v880[v915];
              v917 = &v881[v915];
              v918 = v882;
              v919 = sub_2408E57A4();
              v920 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v919 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v920(v916, v917, v919);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v1183 + 56))(v880, 0, 1, v918);
              v11 = v1246;
              v10 = v1254;
              v18 = v1293;
              v418 = __dsta;
              v223 = v1189;
            }
            v921 = *(int *)(v1195 + 24);
            v922 = &v418[v921];
            v923 = &v223[v921];
            v924 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v924 - 8) + 16))(v922, v923, v924);
            v1190[7](v418, 0, 1, v1195);
          }
          v925 = v1216;
          v926 = v1216[7];
          v927 = &v18[v926];
          v928 = &v10[v926];
          v929 = type metadata accessor for TranscriptProtoStatementID(0);
          v930 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v929 - 8) + 48);
          __dste = *(void **)(v929 - 8);
          if (v930(v928, 1, v929))
          {
            v931 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v927, v928, *(_QWORD *)(*(_QWORD *)(v931 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v927 = *(_DWORD *)v928;
            v932 = v928[2];
            v927[1] = v928[1];
            v927[2] = v932;
            v933 = *(int *)(v929 + 24);
            v1201 = (char *)v927 + v933;
            v934 = v16;
            v935 = v11;
            v936 = (char *)v928 + v933;
            v937 = sub_2408E57A4();
            v938 = v18;
            v939 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v937 - 8) + 16);
            v925 = v1216;
            swift_bridgeObjectRetain();
            v940 = v936;
            v11 = v935;
            v16 = v934;
            v939(v1201, v940, v937);
            v18 = v938;
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dste + 7))(v927, 0, 1, v929);
          }
          v941 = v925[8];
          v942 = &v18[v941];
          v943 = &v1254[v941];
          if (v930(&v1254[v941], 1, v929))
          {
            v944 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v942, v943, *(_QWORD *)(*(_QWORD *)(v944 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v942 = *(_DWORD *)v943;
            v945 = v943[2];
            v942[1] = v943[1];
            v942[2] = v945;
            v946 = *(int *)(v929 + 24);
            v1202 = (char *)v942 + v946;
            v947 = v16;
            v948 = v11;
            v949 = (char *)v943 + v946;
            v950 = sub_2408E57A4();
            v951 = v18;
            v952 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v950 - 8) + 16);
            v925 = v1216;
            swift_bridgeObjectRetain();
            v953 = v949;
            v11 = v948;
            v16 = v947;
            v952(v1202, v953, v950);
            v18 = v951;
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dste + 7))(v942, 0, 1, v929);
          }
          v954 = v925[9];
          v955 = &v18[v954];
          v956 = &v1254[v954];
          if (v930(&v1254[v954], 1, v929))
          {
            v957 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v955, v956, *(_QWORD *)(*(_QWORD *)(v957 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v955 = *(_DWORD *)v956;
            v958 = v956[2];
            v955[1] = v956[1];
            v955[2] = v958;
            v959 = *(int *)(v929 + 24);
            v960 = (char *)v955 + v959;
            v961 = v16;
            v962 = v11;
            v963 = (char *)v956 + v959;
            v964 = sub_2408E57A4();
            v965 = v18;
            v966 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v964 - 8) + 16);
            v925 = v1216;
            swift_bridgeObjectRetain();
            v967 = v963;
            v11 = v962;
            v16 = v961;
            v966(v960, v967, v964);
            v18 = v965;
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dste + 7))(v955, 0, 1, v929);
          }
          v15 = a2;
          v19 = v1290;
          v968 = v925[10];
          v969 = &v18[v968];
          v10 = v1254;
          v970 = &v1254[v968];
          v971 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v971 - 8) + 16))(v969, v970, v971);
          swift_storeEnumTagMultiPayload();
          v14 = a3;
          goto LABEL_308;
        case 0x1Eu:
          v1272 = v16;
          v225 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v225;
          v226 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v1293 + 3) = v226;
          StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
          v227 = StepResults[6];
          v228 = &v1293[v227];
          v1252 = v10;
          v229 = &v10[v227];
          v230 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v231 = *(_QWORD *)(v230 - 8);
          v232 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v231 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v232(v229, 1, v230))
            goto LABEL_282;
          goto LABEL_283;
        case 0x1Fu:
          v1272 = v16;
          v233 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v233;
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
          v234 = StepResults[6];
          v228 = &v1293[v234];
          v1252 = v10;
          v229 = &v10[v234];
          v230 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v231 = *(_QWORD *)(v230 - 8);
          v235 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v231 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v235(v229, 1, v230))
            goto LABEL_282;
          goto LABEL_283;
        case 0x20u:
          v236 = type metadata accessor for TranscriptProtoRequestContent(0);
          v237 = *(_QWORD *)(v236 - 8);
          v1252 = v10;
          v1272 = v16;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v237 + 48))(v10, 1, v236))
          {
            v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
          }
          else
          {
            v422 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v422 - 8) + 48))(v10, 1, v422))
            {
              v625 = (char *)&loc_24054AB7C + 4 * word_240901648[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v423 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v423 - 8) + 64));
            v1011 = *(int *)(v236 + 20);
            v1012 = &v1293[v1011];
            v1013 = &v10[v1011];
            v1014 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1014 - 8) + 16))(v1012, v1013, v1014);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v1293, 0, 1, v236);
          }
          StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
          v1015 = StepResults[5];
          v1016 = &v1293[v1015];
          v1017 = &v10[v1015];
          v1018 = v1017[1];
          *v1016 = *v1017;
          v1016[1] = v1018;
          v1019 = StepResults[6];
          v228 = &v1293[v1019];
          v229 = &v10[v1019];
          v230 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v231 = *(_QWORD *)(v230 - 8);
          v1020 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v231 + 48);
          swift_bridgeObjectRetain();
          if (v1020(v229, 1, v230))
          {
LABEL_282:
            v1021 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v1021 - 8) + 64));
          }
          else
          {
LABEL_283:
            v1022 = v229[1];
            *v228 = *v229;
            v228[1] = v1022;
            v228[2] = v229[2];
            v1023 = *(int *)(v230 + 24);
            v1024 = (char *)v228 + v1023;
            v1228 = (char *)v229 + v1023;
            v1025 = v11;
            v1026 = sub_2408E57A4();
            v1027 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1026 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1028 = v1026;
            v11 = v1025;
            v1027(v1024, v1228, v1028);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v231 + 56))(v228, 0, 1, v230);
          }
          goto LABEL_284;
        case 0x21u:
          v1282 = v16;
          v1231 = v11;
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          v239 = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
          v240 = v239[5];
          v241 = &v1293[v240];
          v1255 = v10;
          v242 = &v10[v240];
          v243 = type metadata accessor for TranscriptProtoStatementID(0);
          v244 = *(_QWORD *)(v243 - 8);
          v245 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v244 + 48);
          swift_bridgeObjectRetain();
          if (v245(v242, 1, v243))
          {
            v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v241 = *(_DWORD *)v242;
            v424 = v242[2];
            v241[1] = v242[1];
            v241[2] = v424;
            v425 = *(int *)(v243 + 24);
            v426 = (char *)v241 + v425;
            v427 = (char *)v242 + v425;
            v428 = sub_2408E57A4();
            v429 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 16);
            swift_bridgeObjectRetain();
            v429(v426, v427, v428);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
          }
          v430 = v239[6];
          v18 = v1293;
          v431 = &v1293[v430];
          v10 = v1255;
          v432 = &v1255[v430];
          v433 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v434 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v433 - 8);
          v16 = v1282;
          if (v434[6](v432, 1, v433))
          {
            v435 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v431, v432, *(_QWORD *)(*(_QWORD *)(v435 - 8) + 64));
          }
          else
          {
            v549 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            __dstc = v434;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v549 - 8) + 48))(v432, 1, v549))
            {
              v654 = (char *)&loc_24054AE00 + 4 * word_240901632[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v550 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v431, v432, *(_QWORD *)(*(_QWORD *)(v550 - 8) + 64));
            v1100 = *(int *)(v433 + 20);
            v1101 = &v431[v1100];
            v1102 = &v432[v1100];
            v1103 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1103 - 8) + 16))(v1101, v1102, v1103);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v431, 0, 1, v433);
          }
          v1104 = v239[7];
          v1105 = &v1293[v1104];
          v1106 = &v1255[v1104];
          v1107 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1107 - 8) + 16))(v1105, v1106, v1107);
          swift_storeEnumTagMultiPayload();
          v15 = a2;
          goto LABEL_306;
        case 0x22u:
          v247 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v247;
          *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
          v248 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
          v1234 = v11;
          v249 = &v1293[v248];
          v1283 = v16;
          v250 = &v10[v248];
          v251 = sub_2408E57A4();
          v252 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v251 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v253 = v249;
          v11 = v1234;
          v254 = v250;
          v16 = v1283;
          v255 = v251;
          v19 = v1290;
          v252(v253, v254, v255);
          v18 = v1293;
          swift_storeEnumTagMultiPayload();
          goto LABEL_308;
        case 0x23u:
          v256 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v257 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v256 - 8);
          v1256 = v10;
          v1284 = v16;
          if (v257[6](v10, 1, v256))
          {
            v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
          }
          else
          {
            __dstb = v257;
            v1239 = v11;
            v436 = *((_QWORD *)v10 + 1);
            *(_QWORD *)v1293 = *(_QWORD *)v10;
            *((_QWORD *)v1293 + 1) = v436;
            v437 = *((_QWORD *)v10 + 3);
            *((_QWORD *)v1293 + 2) = *((_QWORD *)v10 + 2);
            *((_QWORD *)v1293 + 3) = v437;
            v1293[32] = v10[32];
            v438 = v10;
            v440 = *((_QWORD *)v10 + 5);
            v439 = *((_QWORD *)v10 + 6);
            *((_QWORD *)v1293 + 5) = v440;
            *((_QWORD *)v1293 + 6) = v439;
            v441 = *((_QWORD *)v438 + 8);
            *((_QWORD *)v1293 + 7) = *((_QWORD *)v438 + 7);
            *((_QWORD *)v1293 + 8) = v441;
            *((_QWORD *)v1293 + 9) = *((_QWORD *)v438 + 9);
            v1293[80] = v438[80];
            v442 = *((_QWORD *)v438 + 12);
            *((_QWORD *)v1293 + 11) = *((_QWORD *)v438 + 11);
            *((_QWORD *)v1293 + 12) = v442;
            v443 = *((_QWORD *)v438 + 14);
            *((_QWORD *)v1293 + 13) = *((_QWORD *)v438 + 13);
            *((_QWORD *)v1293 + 14) = v443;
            v1220 = (int *)v256;
            v444 = *(int *)(v256 + 68);
            v1174 = &v1293[v444];
            v445 = (uint64_t *)&v438[v444];
            v446 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v447 = *(_QWORD *)(v446 - 8);
            v448 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v447 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v448(v445, 1, v446))
            {
              v449 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v1174, v445, *(_QWORD *)(*(_QWORD *)(v449 - 8) + 64));
            }
            else
            {
              v626 = *v445;
              if ((~*v445 & 0xF000000000000007) != 0)
                swift_retain();
              *v1174 = v626;
              v627 = *(int *)(v446 + 20);
              v628 = (char *)v1174 + v627;
              v629 = (char *)v445 + v627;
              v630 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v630 - 8) + 16))(v628, v629, v630);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v447 + 56))(v1174, 0, 1, v446);
            }
            v631 = v1256;
            v632 = v1220;
            v633 = v1220[18];
            v634 = v1293;
            v635 = &v1293[v633];
            v636 = &v1256[v633];
            v637 = v636[1];
            *v635 = *v636;
            v635[1] = v637;
            v638 = v1220[19];
            v639 = &v1293[v638];
            v640 = &v1256[v638];
            v641 = type metadata accessor for ToolKitProtoAppDefinition(0);
            v642 = *(_QWORD **)(v641 - 8);
            v643 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v642[6];
            swift_bridgeObjectRetain();
            if (v643(v640, 1, v641))
            {
              v644 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
              memcpy(v639, v640, *(_QWORD *)(*(_QWORD *)(v644 - 8) + 64));
            }
            else
            {
              v1191 = v642;
              v656 = v640[1];
              *v639 = *v640;
              v639[1] = v656;
              v657 = v640[3];
              v639[2] = v640[2];
              v639[3] = v657;
              v658 = v640[5];
              v639[4] = v640[4];
              v639[5] = v658;
              v659 = v640[7];
              v639[6] = v640[6];
              v639[7] = v659;
              v660 = v640[9];
              v639[8] = v640[8];
              v639[9] = v660;
              *((_BYTE *)v639 + 80) = *((_BYTE *)v640 + 80);
              v661 = *(int *)(v641 + 40);
              v1184 = (_QWORD *)((char *)v639 + v661);
              v662 = (_QWORD *)((char *)v640 + v661);
              v663 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
              v1179 = *(_QWORD *)(v663 - 8);
              v664 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1179 + 48);
              swift_bridgeObjectRetain();
              v665 = v662;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v664(v662, 1, v663))
              {
                v666 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                memcpy(v1184, v662, *(_QWORD *)(*(_QWORD *)(v666 - 8) + 64));
                v631 = v1256;
                v667 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1191;
                v632 = v1220;
              }
              else
              {
                v669 = v662[1];
                if (v669 == 1)
                {
                  *(_OWORD *)v1184 = *(_OWORD *)v662;
                }
                else
                {
                  *v1184 = *v662;
                  v1184[1] = v669;
                  swift_bridgeObjectRetain();
                }
                v631 = v1256;
                v667 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1191;
                v632 = v1220;
                v719 = *(int *)(v663 + 20);
                v720 = (char *)v1184 + v719;
                v721 = (char *)v665 + v719;
                v722 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v722 - 8) + 16))(v720, v721, v722);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1179 + 56))(v1184, 0, 1, v663);
              }
              v723 = *(int *)(v641 + 44);
              v724 = (char *)v639 + v723;
              v725 = (char *)v640 + v723;
              v726 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v726 - 8) + 16))(v724, v725, v726);
              v667[7](v639, 0, 1, v641);
              v634 = v1293;
            }
            v727 = v632[20];
            v728 = &v634[v727];
            v729 = &v631[v727];
            v730 = v729[1];
            *v728 = *v729;
            v728[1] = v730;
            v731 = v632[21];
            v732 = &v634[v731];
            v733 = &v631[v731];
            v734 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v735 = *(_QWORD *)(v734 - 8);
            v736 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v735 + 48);
            swift_bridgeObjectRetain();
            if (v736(v733, 1, v734))
            {
              v737 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
              memcpy(v732, v733, *(_QWORD *)(*(_QWORD *)(v737 - 8) + 64));
            }
            else
            {
              v738 = v733[1];
              *v732 = *v733;
              v732[1] = v738;
              v739 = v733[3];
              v732[2] = v733[2];
              v732[3] = v739;
              v740 = *(int *)(v734 + 24);
              v741 = (char *)v732 + v740;
              v742 = (char *)v733 + v740;
              v743 = sub_2408E57A4();
              v744 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v743 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v744(v741, v742, v743);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v735 + 56))(v732, 0, 1, v734);
            }
            v745 = v632[22];
            v18 = v1293;
            v746 = &v1293[v745];
            v10 = v1256;
            v747 = &v1256[v745];
            v748 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v749 = *(_QWORD *)(v748 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v749 + 48))(v747, 1, v748))
            {
              v750 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v746, v747, *(_QWORD *)(*(_QWORD *)(v750 - 8) + 64));
            }
            else
            {
              v751 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
              v752 = *(_QWORD *)(v751 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v752 + 48))(v747, 1, v751))
              {
                v753 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v746, v747, *(_QWORD *)(*(_QWORD *)(v753 - 8) + 64));
              }
              else
              {
                v754 = swift_getEnumCaseMultiPayload();
                v755 = v747[1];
                *v746 = *v747;
                v746[1] = v755;
                if (v754 == 1)
                {
                  *((_BYTE *)v746 + 16) = *((_BYTE *)v747 + 16);
                  v756 = v747[4];
                  v746[3] = v747[3];
                  v746[4] = v756;
                  v757 = v747[6];
                  v746[5] = v747[5];
                  v746[6] = v757;
                  v758 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                + 32);
                  v1180 = (char *)v747 + v758;
                  v1186 = (char *)v746 + v758;
                  v759 = sub_2408E57A4();
                  v1197 = v751;
                  v760 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v759 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v760(v1186, v1180, v759);
                  v751 = v1197;
                }
                else
                {
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v752 + 56))(v746, 0, 1, v751);
                v10 = v1256;
              }
              v761 = *(int *)(v748 + 20);
              v762 = (char *)v746 + v761;
              v763 = (char *)v747 + v761;
              v764 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v764 - 8) + 16))(v762, v763, v764);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v749 + 56))(v746, 0, 1, v748);
              v18 = v1293;
            }
            v765 = v632[23];
            v766 = &v18[v765];
            v767 = &v10[v765];
            v768 = type metadata accessor for ToolKitProtoContainerDefinition(0);
            v769 = *(_QWORD *)(v768 - 8);
            v770 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v769 + 48);
            v11 = v1239;
            if (v770(v767, 1, v768))
            {
              v771 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v766, v767, *(_QWORD *)(*(_QWORD *)(v771 - 8) + 64));
            }
            else
            {
              v1193 = v770;
              v1198 = v769;
              v772 = v767[1];
              *v766 = *v767;
              v766[1] = v772;
              v773 = v767[3];
              v766[2] = v767[2];
              v766[3] = v773;
              *((_WORD *)v766 + 16) = *((_WORD *)v767 + 16);
              v774 = v767[6];
              v766[5] = v767[5];
              v766[6] = v774;
              v775 = v767[8];
              v766[7] = v767[7];
              v766[8] = v775;
              v776 = *(int *)(v768 + 40);
              v1187 = (_QWORD *)((char *)v766 + v776);
              v777 = (_QWORD *)((char *)v767 + v776);
              v778 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1181 = *(_QWORD *)(v778 - 8);
              v779 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1181 + 48);
              swift_bridgeObjectRetain();
              v780 = v777;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v779(v777, 1, v778))
              {
                v781 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1187, v777, *(_QWORD *)(*(_QWORD *)(v781 - 8) + 64));
                v11 = v1239;
                v10 = v1256;
                v632 = v1220;
              }
              else
              {
                v782 = v777[1];
                if (v782 == 1)
                {
                  *(_OWORD *)v1187 = *(_OWORD *)v777;
                }
                else
                {
                  *v1187 = *v777;
                  v1187[1] = v782;
                  swift_bridgeObjectRetain();
                }
                v11 = v1239;
                v10 = v1256;
                v632 = v1220;
                v783 = *(int *)(v778 + 20);
                v784 = (char *)v1187 + v783;
                v785 = (char *)v780 + v783;
                v786 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v786 - 8) + 16))(v784, v785, v786);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1181 + 56))(v1187, 0, 1, v778);
              }
              v787 = *(int *)(v768 + 44);
              v788 = (char *)v766 + v787;
              v789 = (char *)v767 + v787;
              v790 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v790 - 8) + 16))(v788, v789, v790);
              v769 = v1198;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1198 + 56))(v766, 0, 1, v768);
              v18 = v1293;
              v770 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1193;
            }
            v791 = v632[24];
            v792 = &v18[v791];
            v793 = &v10[v791];
            if (v770(&v10[v791], 1, v768))
            {
              v794 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v792, v793, *(_QWORD *)(*(_QWORD *)(v794 - 8) + 64));
            }
            else
            {
              v1199 = v769;
              v795 = v793[1];
              *v792 = *v793;
              v792[1] = v795;
              v796 = v793[3];
              v792[2] = v793[2];
              v792[3] = v796;
              *((_WORD *)v792 + 16) = *((_WORD *)v793 + 16);
              v797 = v793[6];
              v792[5] = v793[5];
              v792[6] = v797;
              v798 = v793[8];
              v792[7] = v793[7];
              v792[8] = v798;
              v799 = *(int *)(v768 + 40);
              v1194 = (_QWORD *)((char *)v792 + v799);
              v800 = (_QWORD *)((char *)v793 + v799);
              v801 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1188 = *(_QWORD **)(v801 - 8);
              v802 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1188[6];
              swift_bridgeObjectRetain();
              v803 = v800;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v802(v800, 1, v801))
              {
                v804 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1194, v800, *(_QWORD *)(*(_QWORD *)(v804 - 8) + 64));
                v11 = v1239;
                v10 = v1256;
                v632 = v1220;
              }
              else
              {
                v805 = v800[1];
                if (v805 == 1)
                {
                  *(_OWORD *)v1194 = *(_OWORD *)v800;
                }
                else
                {
                  *v1194 = *v800;
                  v1194[1] = v805;
                  swift_bridgeObjectRetain();
                }
                v11 = v1239;
                v10 = v1256;
                v632 = v1220;
                v806 = *(int *)(v801 + 20);
                v807 = (char *)v1194 + v806;
                v808 = (char *)v803 + v806;
                v809 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v809 - 8) + 16))(v807, v808, v809);
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1188[7])(v1194, 0, 1, v801);
              }
              v810 = *(int *)(v768 + 44);
              v811 = (char *)v792 + v810;
              v812 = (char *)v793 + v810;
              v813 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v813 - 8) + 16))(v811, v812, v813);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1199 + 56))(v792, 0, 1, v768);
              v18 = v1293;
            }
            v814 = v632[25];
            v815 = &v18[v814];
            v816 = &v10[v814];
            v817 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v817 - 8) + 16))(v815, v816, v817);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))__dstb + 7))(v18, 0, 1, v632);
          }
          v489 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
          v818 = v489[5];
          v819 = &v18[v818];
          v820 = &v10[v818];
          v493 = type metadata accessor for TranscriptProtoStatementID(0);
          v494 = *(_QWORD *)(v493 - 8);
          v821 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v494 + 48);
          if (v821(v820, 1, v493))
          {
            v822 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v819, v820, *(_QWORD *)(*(_QWORD *)(v822 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v819 = *(_DWORD *)v820;
            v823 = v820[2];
            v819[1] = v820[1];
            v819[2] = v823;
            v824 = *(int *)(v493 + 24);
            v825 = (char *)v819 + v824;
            v1245 = v11;
            v826 = (char *)v820 + v824;
            v827 = sub_2408E57A4();
            v828 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v827 - 8) + 16);
            swift_bridgeObjectRetain();
            v829 = v826;
            v11 = v1245;
            v828(v825, v829, v827);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v494 + 56))(v819, 0, 1, v493);
          }
          v830 = v489[6];
          v589 = &v1293[v830];
          v590 = &v1256[v830];
          if (v821(&v1256[v830], 1, v493))
            goto LABEL_240;
          goto LABEL_241;
        case 0x24u:
          v1285 = v16;
          v1235 = v11;
          v259 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v259;
          v1293[16] = v10[16];
          v260 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v1293 + 3) = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 4) = v260;
          v261 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
          v262 = v261[7];
          v263 = &v1293[v262];
          v264 = &v10[v262];
          v265 = type metadata accessor for TranscriptProtoStatementID(0);
          v266 = *(_QWORD *)(v265 - 8);
          v267 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v266 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v267(v264, 1, v265))
          {
            v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v263 = *(_DWORD *)v264;
            v450 = v264[2];
            v263[1] = v264[1];
            v263[2] = v450;
            v451 = *(int *)(v265 + 24);
            v1221 = (char *)v263 + v451;
            v452 = (char *)v264 + v451;
            v453 = v10;
            v454 = sub_2408E57A4();
            v455 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 16);
            swift_bridgeObjectRetain();
            v456 = v454;
            v10 = v453;
            v455(v1221, v452, v456);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v266 + 56))(v263, 0, 1, v265);
          }
          v457 = v261[8];
          v458 = &v1293[v457];
          v459 = v10;
          v460 = &v10[v457];
          v19 = v1290;
          if (v267(v460, 1, v265))
          {
            v461 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v458, v460, *(_QWORD *)(*(_QWORD *)(v461 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v458 = *(_DWORD *)v460;
            v551 = v460[2];
            v458[1] = v460[1];
            v458[2] = v551;
            v552 = *(int *)(v265 + 24);
            v553 = (char *)v458 + v552;
            v554 = (char *)v460 + v552;
            v555 = sub_2408E57A4();
            v556 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v555 - 8) + 16);
            swift_bridgeObjectRetain();
            v557 = v554;
            v19 = v1290;
            v556(v553, v557, v555);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v266 + 56))(v458, 0, 1, v265);
          }
          v14 = a3;
          v11 = v1235;
          v558 = v261[9];
          v18 = v1293;
          v559 = &v1293[v558];
          v10 = v459;
          v560 = &v459[v558];
          v561 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v559, v560, v561);
          v16 = v1285;
          swift_storeEnumTagMultiPayload();
          v15 = a2;
          goto LABEL_308;
        case 0x25u:
          v1286 = v16;
          v269 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v269;
          v1293[16] = v10[16];
          v270 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
          v271 = v270[6];
          v272 = &v1293[v271];
          v1257 = v10;
          v273 = &v10[v271];
          v274 = type metadata accessor for TranscriptProtoStatementID(0);
          v275 = *(_QWORD *)(v274 - 8);
          v276 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v275 + 48);
          swift_bridgeObjectRetain();
          if (v276(v273, 1, v274))
          {
            v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v272 = *(_DWORD *)v273;
            v462 = v273[2];
            v272[1] = v273[1];
            v272[2] = v462;
            v463 = *(int *)(v274 + 24);
            v464 = (char *)v272 + v463;
            v1240 = v11;
            v465 = (char *)v273 + v463;
            v466 = sub_2408E57A4();
            v467 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v466 - 8) + 16);
            swift_bridgeObjectRetain();
            v468 = v465;
            v11 = v1240;
            v467(v464, v468, v466);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
          }
          v469 = v270[7];
          v470 = &v1293[v469];
          v471 = &v1257[v469];
          if (v276(&v1257[v469], 1, v274))
          {
            v472 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v470, v471, *(_QWORD *)(*(_QWORD *)(v472 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v470 = *(_DWORD *)v471;
            v562 = v471[2];
            v470[1] = v471[1];
            v470[2] = v562;
            v563 = *(int *)(v274 + 24);
            v564 = (char *)v470 + v563;
            v565 = v11;
            v566 = (char *)v471 + v563;
            v567 = sub_2408E57A4();
            v568 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v567 - 8) + 16);
            swift_bridgeObjectRetain();
            v569 = v566;
            v11 = v565;
            v568(v564, v569, v567);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v470, 0, 1, v274);
          }
          v14 = a3;
          v570 = v270[8];
          v18 = v1293;
          v571 = &v1293[v570];
          v10 = v1257;
          v572 = &v1257[v570];
          v573 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v573 - 8) + 16))(v571, v572, v573);
          v16 = v1286;
          goto LABEL_243;
        case 0x26u:
          v1272 = v16;
          v278 = type metadata accessor for ToolKitProtoTypedValue(0);
          v279 = *(_QWORD *)(v278 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v279 + 48))(v10, 1, v278))
          {
            v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            v281 = v1293;
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
          }
          else
          {
            v473 = *(_QWORD *)v10;
            if ((~*(_QWORD *)v10 & 0xF000000000000007) != 0)
              swift_retain();
            *(_QWORD *)v1293 = v473;
            v474 = *(int *)(v278 + 20);
            v475 = &v1293[v474];
            v476 = &v10[v474];
            v477 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v477 - 8) + 16))(v475, v476, v477);
            v281 = v1293;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v279 + 56))(v1293, 0, 1, v278);
          }
          StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
          v478 = StepResults[5];
          v479 = &v281[v478];
          v1252 = v10;
          v480 = (uint64_t *)&v10[v478];
          v481 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v482 = *(_QWORD *)(v481 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v482 + 48))(v480, 1, v481))
          {
            v483 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v479, v480, *(_QWORD *)(*(_QWORD *)(v483 - 8) + 64));
          }
          else
          {
            v574 = *v480;
            if ((~*v480 & 0xF000000000000007) != 0)
              swift_retain();
            *v479 = v574;
            v575 = *(int *)(v481 + 20);
            v576 = (char *)v479 + v575;
            v577 = (char *)v480 + v575;
            v578 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v578 - 8) + 16))(v576, v577, v578);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v482 + 56))(v479, 0, 1, v481);
          }
          v579 = StepResults[6];
          v128 = &v1293[v579];
          v129 = &v1252[v579];
          v130 = type metadata accessor for TranscriptProtoStatementID(0);
          v131 = *(_QWORD *)(v130 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
          {
LABEL_148:
            v580 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v580 - 8) + 64));
          }
          else
          {
LABEL_154:
            *(_DWORD *)v128 = *(_DWORD *)v129;
            v593 = v129[2];
            v128[1] = v129[1];
            v128[2] = v593;
            v594 = *(int *)(v130 + 24);
            v595 = (char *)v128 + v594;
            v1243 = v11;
            v596 = (char *)v129 + v594;
            v597 = sub_2408E57A4();
            v598 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v597 - 8) + 16);
            swift_bridgeObjectRetain();
            v599 = v596;
            v11 = v1243;
            v598(v595, v599, v597);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
          }
LABEL_284:
          v15 = a2;
          v1029 = StepResults[7];
          v18 = v1293;
          v1030 = &v1293[v1029];
          v10 = v1252;
          v1031 = &v1252[v1029];
          v1032 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1032 - 8) + 16))(v1030, v1031, v1032);
          v16 = v1272;
LABEL_285:
          swift_storeEnumTagMultiPayload();
          v14 = a3;
          v19 = v1290;
          goto LABEL_308;
        case 0x27u:
          v1284 = v16;
          v282 = type metadata accessor for ToolKitProtoTypedValue(0);
          v283 = *(_QWORD *)(v282 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v283 + 48))(v10, 1, v282))
          {
            v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            v285 = v1293;
            memcpy(v1293, v10, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
          }
          else
          {
            v484 = *(_QWORD *)v10;
            if ((~*(_QWORD *)v10 & 0xF000000000000007) != 0)
              swift_retain();
            *(_QWORD *)v1293 = v484;
            v485 = *(int *)(v282 + 20);
            v486 = &v1293[v485];
            v487 = &v10[v485];
            v488 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v488 - 8) + 16))(v486, v487, v488);
            v285 = v1293;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v1293, 0, 1, v282);
          }
          v489 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
          v490 = v489[5];
          v491 = &v285[v490];
          v1256 = v10;
          v492 = &v10[v490];
          v493 = type metadata accessor for TranscriptProtoStatementID(0);
          v494 = *(_QWORD *)(v493 - 8);
          v495 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v494 + 48);
          if (v495(v492, 1, v493))
          {
            v496 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v491, v492, *(_QWORD *)(*(_QWORD *)(v496 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v491 = *(_DWORD *)v492;
            v581 = v492[2];
            v491[1] = v492[1];
            v491[2] = v581;
            v582 = *(int *)(v493 + 24);
            v583 = (char *)v491 + v582;
            v1242 = v11;
            v584 = (char *)v492 + v582;
            v585 = sub_2408E57A4();
            v586 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v585 - 8) + 16);
            swift_bridgeObjectRetain();
            v587 = v584;
            v11 = v1242;
            v586(v583, v587, v585);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v494 + 56))(v491, 0, 1, v493);
          }
          v588 = v489[6];
          v589 = &v1293[v588];
          v590 = &v1256[v588];
          if (v495(&v1256[v588], 1, v493))
          {
LABEL_240:
            v831 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v589, v590, *(_QWORD *)(*(_QWORD *)(v831 - 8) + 64));
          }
          else
          {
LABEL_241:
            *(_DWORD *)v589 = *(_DWORD *)v590;
            v832 = v590[2];
            v589[1] = v590[1];
            v589[2] = v832;
            v833 = *(int *)(v493 + 24);
            v834 = (char *)v589 + v833;
            v835 = v11;
            v836 = (char *)v590 + v833;
            v837 = sub_2408E57A4();
            v838 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v837 - 8) + 16);
            swift_bridgeObjectRetain();
            v839 = v836;
            v11 = v835;
            v838(v834, v839, v837);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v494 + 56))(v589, 0, 1, v493);
          }
          v14 = a3;
          v840 = v489[7];
          v18 = v1293;
          v841 = &v1293[v840];
          v10 = v1256;
          v842 = &v1256[v840];
          v843 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v843 - 8) + 16))(v841, v842, v843);
          v16 = v1284;
LABEL_243:
          swift_storeEnumTagMultiPayload();
          v15 = a2;
          v19 = v1290;
          goto LABEL_308;
        case 0x28u:
          v1287 = v16;
          v1231 = v11;
          v286 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v286;
          v287 = v10;
          v288 = *((_QWORD *)v10 + 2);
          v289 = *((_QWORD *)v10 + 3);
          *((_QWORD *)v1293 + 2) = v288;
          *((_QWORD *)v1293 + 3) = v289;
          DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          v290 = *(int *)(DecorationResult + 32);
          v291 = &v1293[v290];
          v1258 = v287;
          v292 = &v287[v290];
          DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          v294 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
          v295 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v294 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v295(v292, 1, DecorationToolRetrievalResponse))
          {
            v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
            memcpy(v291, v292, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
          }
          else
          {
            v497 = v292[1];
            *v291 = *v292;
            v291[1] = v497;
            v498 = v292[3];
            v291[2] = v292[2];
            v291[3] = v498;
            *((_DWORD *)v291 + 8) = *((_DWORD *)v292 + 8);
            v499 = v292[6];
            v291[5] = v292[5];
            v291[6] = v499;
            v500 = *(int *)(DecorationToolRetrievalResponse + 36);
            v501 = (char *)v291 + v500;
            __dstg = (char *)v292 + v500;
            v502 = sub_2408E57A4();
            v503 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v502 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v503(v501, __dstg, v502);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v294 + 56))(v291, 0, 1, DecorationToolRetrievalResponse);
          }
          v15 = a2;
          v19 = v1290;
          v504 = *(int *)(DecorationResult + 36);
          v18 = v1293;
          v505 = &v1293[v504];
          v10 = v1258;
          v506 = &v1258[v504];
          v507 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v507 - 8) + 16))(v505, v506, v507);
          v16 = v1287;
          swift_storeEnumTagMultiPayload();
LABEL_306:
          v14 = a3;
LABEL_307:
          v11 = v1231;
          goto LABEL_308;
        case 0x2Au:
          v1288 = v16;
          v1229 = v11;
          v297 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v1293 = *(_QWORD *)v10;
          *((_QWORD *)v1293 + 1) = v297;
          DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
          v298 = DecorationPrePlannerResult[5];
          v299 = &v1293[v298];
          v1259 = v10;
          v300 = &v10[v298];
          v301 = type metadata accessor for TranscriptProtoStatementID(0);
          v302 = *(_QWORD *)(v301 - 8);
          v303 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v302 + 48);
          swift_bridgeObjectRetain();
          if (v303(v300, 1, v301))
          {
            v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v299 = *(_DWORD *)v300;
            v508 = v300[2];
            v299[1] = v300[1];
            v299[2] = v508;
            v509 = *(int *)(v301 + 24);
            v510 = (char *)v299 + v509;
            v511 = (char *)v300 + v509;
            v512 = sub_2408E57A4();
            v513 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v512 - 8) + 16);
            swift_bridgeObjectRetain();
            v513(v510, v511, v512);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v302 + 56))(v299, 0, 1, v301);
          }
          v514 = DecorationPrePlannerResult[6];
          v18 = v1293;
          v515 = &v1293[v514];
          v10 = v1259;
          v516 = &v1259[v514];
          DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
          v518 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
          v16 = v1288;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v518 + 48))(v516, 1, DecorationPrePlannerResultPayload))
          {
            v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
            memcpy(v515, v516, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
          }
          else
          {
            DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                       - 8)
                                                                           + 48))(v516, 1, DecorationPrePlannerPayloadEnum))
            {
              v655 = (char *)&loc_24054AEA0 + 4 * word_240901626[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v592 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
            memcpy(v515, v516, *(_QWORD *)(*(_QWORD *)(v592 - 8) + 64));
            v844 = *(int *)(DecorationPrePlannerResultPayload + 20);
            v845 = &v515[v844];
            v846 = &v516[v844];
            v847 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v847 - 8) + 16))(v845, v846, v847);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v518 + 56))(v515, 0, 1, DecorationPrePlannerResultPayload);
          }
LABEL_244:
          v848 = DecorationPrePlannerResult[7];
          v849 = &v18[v848];
          v850 = &v10[v848];
          v851 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v851 - 8) + 16))(v849, v850, v851);
          swift_storeEnumTagMultiPayload();
          v15 = a2;
LABEL_245:
          v14 = a3;
          goto LABEL_304;
        default:
          memcpy(v1293, v10, *(_QWORD *)(v1292 + 64));
          goto LABEL_308;
      }
    }
    v1108 = *(int *)(v11 + 20);
    v1109 = &v18[v1108];
    v1110 = &v10[v1108];
    v1111 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1111 - 8) + 16))(v1109, v1110, v1111);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v18, 0, 1, v11);
  }
  v1112 = a1;
  v1113 = v14[12];
  v1114 = v14[13];
  v1115 = (_QWORD *)((char *)a1 + v1113);
  v1116 = (_QWORD *)((char *)v15 + v1113);
  v1117 = v1116[1];
  *v1115 = *v1116;
  v1115[1] = v1117;
  v1118 = (_QWORD *)((char *)a1 + v1114);
  v1119 = (_QWORD *)((char *)v15 + v1114);
  v1120 = type metadata accessor for TranscriptProtoTimepoint(0);
  v1121 = *(_QWORD *)(v1120 - 8);
  v1122 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1121 + 48);
  swift_bridgeObjectRetain();
  if (v1122(v1119, 1, v1120))
  {
    v1123 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v1118, v1119, *(_QWORD *)(*(_QWORD *)(v1123 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v1118 = *(_OWORD *)v1119;
    v1124 = v1119[3];
    v1118[2] = v1119[2];
    v1118[3] = v1124;
    v1125 = *(int *)(v1120 + 28);
    v1126 = (char *)v1118 + v1125;
    v1127 = (char *)v1119 + v1125;
    v1128 = sub_2408E5750();
    v1129 = *(_QWORD *)(v1128 - 8);
    v1130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1129 + 48);
    swift_bridgeObjectRetain();
    if (v1130(v1127, 1, v1128))
    {
      v1131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v1126, v1127, *(_QWORD *)(*(_QWORD *)(v1131 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1129 + 16))(v1126, v1127, v1128);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1129 + 56))(v1126, 0, 1, v1128);
    }
    v1132 = *(int *)(v1120 + 32);
    v1133 = (char *)v1118 + v1132;
    v1134 = (char *)v1119 + v1132;
    v1135 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1135 - 8) + 16))(v1133, v1134, v1135);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1121 + 56))(v1118, 0, 1, v1120);
    v1112 = a1;
    v15 = a2;
    v14 = a3;
  }
  v1136 = v14[14];
  v1137 = (char *)v1112 + v1136;
  v1138 = (char *)v15 + v1136;
  v1139 = sub_2408E5750();
  v1140 = *(_QWORD *)(v1139 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1140 + 48))(v1138, 1, v1139))
  {
    v1141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v1137, v1138, *(_QWORD *)(*(_QWORD *)(v1141 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1140 + 16))(v1137, v1138, v1139);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1140 + 56))(v1137, 0, 1, v1139);
  }
  v1142 = v14[15];
  v1143 = (_QWORD *)((char *)v1112 + v1142);
  v1144 = (_QWORD *)((char *)v15 + v1142);
  v1145 = type metadata accessor for TranscriptProtoParticipantID(0);
  v1146 = *(_QWORD *)(v1145 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1146 + 48))(v1144, 1, v1145))
  {
    v1147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v1143, v1144, *(_QWORD *)(*(_QWORD *)(v1147 - 8) + 64));
  }
  else
  {
    v1148 = v1144[1];
    *v1143 = *v1144;
    v1143[1] = v1148;
    v1149 = *(int *)(v1145 + 20);
    v1150 = (char *)v1143 + v1149;
    v1151 = (char *)v1144 + v1149;
    v1152 = sub_2408E57A4();
    v1153 = v1112;
    v1154 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1152 - 8) + 16);
    swift_bridgeObjectRetain();
    v1155 = v1152;
    v14 = a3;
    v1154(v1150, v1151, v1155);
    v1112 = v1153;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1146 + 56))(v1143, 0, 1, v1145);
  }
  v1156 = v14[16];
  v1157 = (_QWORD *)((char *)v1112 + v1156);
  v1158 = (_QWORD *)((char *)v15 + v1156);
  v1159 = type metadata accessor for TranscriptProtoSpanID(0);
  v1160 = *(_QWORD *)(v1159 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1160 + 48))(v1158, 1, v1159))
  {
    v1161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v1157, v1158, *(_QWORD *)(*(_QWORD *)(v1161 - 8) + 64));
  }
  else
  {
    *v1157 = *v1158;
    v1162 = *(int *)(v1159 + 20);
    v1163 = (char *)v1157 + v1162;
    v1164 = (char *)v1158 + v1162;
    v1165 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1165 - 8) + 16))(v1163, v1164, v1165);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1160 + 56))(v1157, 0, 1, v1159);
  }
  v1166 = v14[17];
  v1167 = (char *)v1112 + v1166;
  v1168 = (char *)v15 + v1166;
  v1169 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1169 - 8) + 16))(v1167, v1168, v1169);
  return v1112;
}

#error "2405508C8: too big function (funcsize=0)"

uint64_t initializeWithTake for TranscriptProtoEvent(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  int *v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t Step;
  uint64_t v64;
  _DWORD *v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  __int128 v82;
  int *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  unsigned int (**v88)(_BYTE *, uint64_t, uint64_t);
  uint64_t v89;
  int *StepResults;
  uint64_t v91;
  _DWORD *v92;
  _DWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  char *v140;
  _BYTE *v141;
  uint64_t v142;
  unsigned int (**v143)(const void *, uint64_t, uint64_t);
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  int *v150;
  __int128 v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _DWORD *v163;
  _DWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  _BYTE *v170;
  uint64_t v171;
  _BYTE *v172;
  uint64_t v173;
  unsigned int (**v174)(_BYTE *, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _DWORD *v178;
  _DWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _DWORD *v185;
  _DWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  __int128 v196;
  uint64_t DecorationResult;
  uint64_t v198;
  _OWORD *v199;
  _OWORD *v200;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _DWORD *v205;
  _DWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _OWORD *v217;
  uint64_t v218;
  unsigned int (**v219)(_OWORD *, uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  _BYTE *v225;
  _BYTE *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  _BYTE *v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  _BYTE *v241;
  _BYTE *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  _BYTE *v248;
  _BYTE *v249;
  uint64_t v250;
  char *v251;
  int *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  _BYTE *v272;
  _BYTE *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _DWORD *v277;
  _DWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _BYTE *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  int *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  unsigned int (**v303)(const void *, uint64_t, uint64_t);
  uint64_t v304;
  __int128 v305;
  uint64_t v306;
  _QWORD *v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  _DWORD *v319;
  _DWORD *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  _DWORD *v329;
  _DWORD *v330;
  uint64_t v331;
  uint64_t v332;
  _BYTE *v333;
  _BYTE *v334;
  uint64_t v335;
  uint64_t v336;
  _QWORD *v337;
  _QWORD *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _BYTE *v343;
  _BYTE *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  _DWORD *v348;
  _DWORD *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  __int128 v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  _BYTE *v358;
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _DWORD *v372;
  _DWORD *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  _BYTE *v381;
  _BYTE *v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  _BYTE *v388;
  _BYTE *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  _BYTE *v398;
  _BYTE *v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  _BYTE *v406;
  _BYTE *v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  _DWORD *v413;
  _DWORD *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  char *v420;
  uint64_t v421;
  char *v422;
  int *v423;
  uint64_t v424;
  _DWORD *v425;
  _DWORD *v426;
  uint64_t v427;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  _BYTE *v434;
  _BYTE *v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  _BYTE *v442;
  _BYTE *v443;
  uint64_t v444;
  char *v445;
  __int128 v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  _BYTE *v450;
  _BYTE *v451;
  uint64_t v452;
  uint64_t v453;
  _BYTE *v454;
  _BYTE *v455;
  uint64_t v456;
  int EnumCaseMultiPayload;
  uint64_t v458;
  _BYTE *v459;
  uint64_t v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  int *v469;
  uint64_t v470;
  _OWORD *v471;
  _OWORD *v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char *v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  _BYTE *v485;
  _BYTE *v486;
  uint64_t v487;
  char *v488;
  char *v489;
  __int128 v490;
  __int128 v491;
  uint64_t v492;
  _OWORD *v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  uint64_t v497;
  char *v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  uint64_t v504;
  _OWORD *v505;
  _OWORD *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  __int128 v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  int *v515;
  uint64_t v516;
  _OWORD *v517;
  _OWORD *v518;
  uint64_t v519;
  unsigned int (**v520)(_OWORD *, uint64_t, uint64_t);
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  _BYTE *v529;
  uint64_t v530;
  uint64_t v531;
  _BYTE *v532;
  _BYTE *v533;
  uint64_t v534;
  uint64_t v535;
  _DWORD *v536;
  _DWORD *v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  char *v542;
  char *v543;
  uint64_t v544;
  char *v545;
  uint64_t v546;
  _QWORD *v547;
  _BYTE *v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  _QWORD *v555;
  int v556;
  _QWORD *v557;
  uint64_t v558;
  _DWORD *v559;
  _DWORD *v560;
  uint64_t v561;
  uint64_t v562;
  char *v563;
  uint64_t v564;
  char *v565;
  uint64_t v566;
  char *v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  _OWORD *v571;
  _OWORD *v572;
  uint64_t v573;
  uint64_t v574;
  __int128 v575;
  uint64_t v576;
  _OWORD *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  char *v582;
  uint64_t v583;
  uint64_t v584;
  char *v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  _OWORD *v589;
  _OWORD *v590;
  uint64_t v591;
  __int128 v592;
  uint64_t v593;
  _OWORD *v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  char *v599;
  uint64_t v600;
  uint64_t v601;
  char *v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  int *v606;
  _BYTE *v607;
  _BYTE *v608;
  uint64_t v609;
  uint64_t v610;
  _DWORD *v611;
  _DWORD *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  char *v620;
  char *v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  uint64_t v625;
  uint64_t v626;
  char *v627;
  _QWORD *v628;
  char *v629;
  uint64_t v630;
  char *v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  _BYTE *v637;
  _BYTE *v638;
  uint64_t v639;
  uint64_t v640;
  _BYTE *v641;
  _BYTE *v642;
  uint64_t v643;
  uint64_t v644;
  char *v645;
  uint64_t v646;
  uint64_t v647;
  char *v648;
  char *v649;
  int *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  char *v654;
  char *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  __int128 v659;
  __int128 v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  uint64_t v664;
  _OWORD *v665;
  char *v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  char *v670;
  uint64_t v671;
  uint64_t v672;
  char *v673;
  char *v674;
  uint64_t v675;
  uint64_t v676;
  char *v677;
  char *v678;
  char *v679;
  uint64_t v680;
  uint64_t v681;
  _DWORD *v682;
  _DWORD *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  char *v688;
  uint64_t v689;
  uint64_t v690;
  _DWORD *v691;
  _DWORD *v692;
  uint64_t v693;
  uint64_t v694;
  char *v695;
  char *v696;
  uint64_t v697;
  char *v698;
  uint64_t v699;
  _DWORD *v700;
  _DWORD *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  char *v705;
  char *v706;
  uint64_t v707;
  char *v708;
  uint64_t v709;
  _BYTE *v710;
  _BYTE *v711;
  uint64_t v712;
  uint64_t v713;
  char *v714;
  char *v715;
  uint64_t v716;
  uint64_t v717;
  char *v718;
  char *v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  char *v725;
  uint64_t v726;
  char *v727;
  char *v728;
  uint64_t v729;
  uint64_t v730;
  _QWORD *v731;
  _QWORD *v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  char *v737;
  uint64_t v738;
  uint64_t v739;
  _BYTE *v740;
  _BYTE *v741;
  uint64_t v742;
  int *v743;
  uint64_t v744;
  _QWORD *v745;
  _QWORD *v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  char *v751;
  uint64_t v752;
  uint64_t v753;
  _BYTE *v754;
  _BYTE *v755;
  uint64_t v756;
  uint64_t v757;
  char *v758;
  _BYTE *v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  _QWORD *v763;
  _QWORD *v764;
  uint64_t v765;
  unsigned int (**v766)(_QWORD *, uint64_t, uint64_t);
  uint64_t v767;
  uint64_t v768;
  char *v769;
  char *v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  char *v775;
  uint64_t v776;
  uint64_t v777;
  char *v778;
  char *v779;
  uint64_t v780;
  char *v781;
  uint64_t v782;
  char *v783;
  char *v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  char *v788;
  uint64_t v789;
  char *v790;
  char *v791;
  uint64_t v792;
  uint64_t v793;
  char *v794;
  char *v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  _DWORD *v799;
  _DWORD *v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  char *v805;
  uint64_t v806;
  uint64_t v807;
  _BYTE *v808;
  _BYTE *v809;
  uint64_t v810;
  uint64_t v811;
  char *v812;
  char *v813;
  char *v814;
  uint64_t v815;
  uint64_t v816;
  _BYTE *v817;
  _BYTE *v818;
  uint64_t v819;
  uint64_t v820;
  _BYTE *v821;
  _BYTE *v822;
  uint64_t v823;
  uint64_t v824;
  _OWORD *v825;
  _OWORD *v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  int *v831;
  __int128 v832;
  uint64_t v833;
  char *v834;
  char *v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  char *v840;
  char *v841;
  uint64_t v842;
  uint64_t v843;
  void *v844;
  const void *v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  _OWORD *v850;
  _OWORD *v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  char *v856;
  char *v857;
  uint64_t v858;
  uint64_t v859;
  _QWORD *v860;
  _QWORD *v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  char *v877;
  char *v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  int *__src;
  _QWORD *__srca;
  char *__srcd;
  _QWORD *__srcb;
  _QWORD *__srcc;
  uint64_t v887;
  char *v888;
  uint64_t v889;
  uint64_t v890;
  char *v891;
  uint64_t v892;
  char *v893;
  void *v894;
  unsigned int (**v895)(const void *, uint64_t, uint64_t);
  void *v896;
  char *v897;
  void *v898;
  _OWORD *v899;
  void *v900;
  int *v901;
  _BYTE *v902;
  uint64_t v903;
  _OWORD *v904;
  _BYTE *v905;
  uint64_t v906;
  char *v907;
  _BYTE *v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  char *v912;
  unsigned int (*v913)(char *, uint64_t, uint64_t);
  uint64_t v914;
  int *v915;
  int *v916;
  unsigned int (**v917)(const void *, uint64_t, uint64_t);
  void *v918;
  void *v919;
  void *v920;
  void *v921;
  void *v922;
  _OWORD *v923;
  void *v924;
  unsigned int (*v925)(void);
  unsigned int (*v926)(_OWORD *, uint64_t, uint64_t);
  _OWORD *v927;
  char *v928;
  char *v929;
  int *v930;
  void *v931;
  char *__dst;
  char *__dsta;
  int *__dstb;
  void *__dstc;
  void *__dstd;
  _OWORD *__dste;
  void *__dstf;
  void *__dstg;
  void *__dsth;
  _BYTE *__dstl;
  int *__dsti;
  char *__dstm;
  void *__dstj;
  char *__dstk;
  char *__dstn;
  int *v947;
  int *v948;
  int *v949;
  int *v950;
  int *v951;
  int *v952;
  int *v953;
  int *v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  int *v990;
  unsigned int (*v991)(_BYTE *, uint64_t, uint64_t);
  uint64_t v992;
  unsigned int (*v993)(_DWORD *, uint64_t, uint64_t);
  unsigned int (*v994)(_DWORD *, uint64_t, uint64_t);
  uint64_t DecorationPrePlannerResult;
  char *v996;
  char *v997;
  char *v998;
  char *v999;
  char *v1000;
  char *v1001;
  char *v1002;
  int *v1003;
  unsigned int (*v1004)(_DWORD *, uint64_t, uint64_t);
  char *v1005;
  char *v1006;
  char *v1007;
  char *v1008;
  char *v1009;
  _BYTE *v1010;
  unsigned int (*v1011)(_DWORD *, uint64_t, uint64_t);
  char *v1012;
  _QWORD *v1013;
  unsigned int (*v1014)(_DWORD *, uint64_t, uint64_t);
  char *v1015;
  char *v1016;
  uint64_t v1017;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = a3[11];
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v11 = type metadata accessor for TranscriptProtoPayload(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v973 = v12;
          v977 = v15;
          v955 = v14;
          v947 = v3;
          *v9 = *v10;
          v989 = type metadata accessor for TranscriptProtoSessionStart(0);
          v17 = *(int *)(v989 + 20);
          v18 = &v9[v17];
          v19 = &v10[v17];
          v20 = type metadata accessor for TranscriptProtoLocaleSettings(0);
          v21 = *(_QWORD *)(v20 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
            v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
            memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            v210 = v19[1];
            *v18 = *v19;
            v18[1] = v210;
            v18[2] = v19[2];
            v211 = *(int *)(v20 + 28);
            v212 = (char *)v18 + v211;
            v213 = (char *)v19 + v211;
            v214 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
          v215 = v989;
          v216 = *(int *)(v989 + 24);
          __dste = &v9[v216];
          v217 = &v10[v216];
          v218 = type metadata accessor for TranscriptProtoDeviceDetails(0);
          v219 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v218 - 8);
          v3 = v947;
          if (v219[6](v217, 1, v218))
          {
            v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
            memcpy(__dste, v217, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
            v12 = v973;
          }
          else
          {
            v920 = v219;
            *__dste = *v217;
            v371 = *(int *)(v218 + 20);
            v372 = (_DWORD *)((char *)__dste + v371);
            v373 = (_DWORD *)((char *)v217 + v371);
            v374 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
            v894 = *(void **)(v374 - 8);
            v904 = v217;
            v375 = v218;
            if ((*((unsigned int (**)(_DWORD *, uint64_t, uint64_t))v894 + 6))(v373, 1, v374))
            {
              v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
              memcpy(v372, v373, *(_QWORD *)(*(_QWORD *)(v376 - 8) + 64));
            }
            else
            {
              *v372 = *v373;
              v476 = *(int *)(v374 + 20);
              v477 = (char *)v372 + v476;
              v478 = (char *)v373 + v476;
              v479 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 32))(v477, v478, v479);
              (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v894 + 7))(v372, 0, 1, v374);
            }
            v3 = v947;
            v480 = *(int *)(v375 + 24);
            v481 = (char *)__dste + v480;
            v482 = (char *)v904 + v480;
            v483 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 32))(v481, v482, v483);
            (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v920 + 7))(__dste, 0, 1, v375);
            v12 = v973;
            v215 = v989;
          }
          v484 = *(int *)(v215 + 28);
          v485 = &v9[v484];
          v486 = &v10[v484];
          v487 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v487 - 8) + 32))(v485, v486, v487);
          v14 = v955;
          goto LABEL_227;
        case 1u:
          v974 = v12;
          v978 = v15;
          v956 = v14;
          v948 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v9[16] = v10[16];
          v23 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
          v24 = v23[6];
          v25 = &v9[v24];
          v26 = &v10[v24];
          v27 = type metadata accessor for TranscriptProtoStatementID(0);
          v28 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *v25 = *v26;
            *(_OWORD *)(v25 + 2) = *(_OWORD *)(v26 + 2);
            v221 = *(int *)(v27 + 24);
            v996 = (char *)v25 + v221;
            v222 = (char *)v26 + v221;
            v223 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v996, v222, v223);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          }
          *(_OWORD *)&v9[v23[7]] = *(_OWORD *)&v10[v23[7]];
          v224 = v23[8];
          v225 = &v9[v224];
          v226 = &v10[v224];
          v227 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
          v14 = v956;
          goto LABEL_279;
        case 2u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v9[8] = v10[8];
          *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
          v30 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
          v31 = &v9[v30];
          v979 = v15;
          v32 = &v10[v30];
          v33 = sub_2408E57A4();
          v34 = v32;
          v15 = v979;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v34, v33);
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v957 = v14;
          v974 = v12;
          v949 = v3;
          *v9 = *v10;
          v35 = (int *)type metadata accessor for TranscriptProtoRequest(0);
          v36 = v35[5];
          __dst = &v9[v36];
          v37 = &v10[v36];
          v38 = type metadata accessor for TranscriptProtoRequestContent(0);
          v39 = *(_QWORD *)(v38 - 8);
          v978 = v15;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v903 = v39;
            v228 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            v916 = v35;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 48))(v37, 1, v228))
            {
              v445 = (char *)&loc_24056E374 + 4 * word_2409019BE[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
            v713 = *(int *)(v38 + 20);
            v714 = &__dst[v713];
            v715 = &v37[v713];
            v716 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v716 - 8) + 32))(v714, v715, v716);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v903 + 56))(__dst, 0, 1, v38);
            v35 = v916;
          }
          v717 = v35[6];
          v718 = &v9[v717];
          v719 = &v10[v717];
          v720 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          v721 = *(_QWORD *)(v720 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v721 + 48))(v719, 1, v720))
          {
            v722 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
            memcpy(v718, v719, *(_QWORD *)(*(_QWORD *)(v722 - 8) + 64));
          }
          else
          {
            v930 = v35;
            v723 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v723 - 8) + 48))(v719, 1, v723))
            {
              v725 = (char *)&loc_24057238C + 4 * byte_2409019C6[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v724 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
            memcpy(v718, v719, *(_QWORD *)(*(_QWORD *)(v724 - 8) + 64));
            v726 = *(int *)(v720 + 20);
            v727 = &v718[v726];
            v728 = &v719[v726];
            v729 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v729 - 8) + 32))(v727, v728, v729);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v721 + 56))(v718, 0, 1, v720);
            v35 = v930;
          }
          *(_OWORD *)&v9[v35[7]] = *(_OWORD *)&v10[v35[7]];
          v317 = (uint64_t)v35;
          v730 = v35[8];
          v731 = &v9[v730];
          v732 = &v10[v730];
          v733 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v734 = *(_QWORD *)(v733 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v734 + 48))(v732, 1, v733))
          {
            v735 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v731, v732, *(_QWORD *)(*(_QWORD *)(v735 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v731 = *(_OWORD *)v732;
            v731[2] = v732[2];
            v736 = *(int *)(v733 + 24);
            v1015 = (char *)v731 + v736;
            v737 = (char *)v732 + v736;
            v738 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v738 - 8) + 32))(v1015, v737, v738);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v734 + 56))(v731, 0, 1, v733);
          }
          goto LABEL_134;
        case 4u:
          v41 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v41;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          v9[56] = v10[56];
          v42 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
          v43 = &v9[v42];
          v980 = v15;
          v44 = &v10[v42];
          v45 = sub_2408E57A4();
          v46 = v44;
          v15 = v980;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v46, v45);
          swift_storeEnumTagMultiPayload();
          break;
        case 5u:
          v974 = v12;
          v978 = v15;
          v958 = v14;
          v948 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v9[16] = v10[16];
          *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
          v47 = (int *)type metadata accessor for TranscriptProtoAction(0);
          v48 = v47[7];
          v49 = &v9[v48];
          v50 = &v10[v48];
          v51 = type metadata accessor for TranscriptProtoStatementID(0);
          v52 = *(_QWORD *)(v51 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
          {
            v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            *v49 = *v50;
            *(_OWORD *)(v49 + 2) = *(_OWORD *)(v50 + 2);
            v230 = *(int *)(v51 + 24);
            v997 = (char *)v49 + v230;
            v231 = (char *)v50 + v230;
            v232 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v997, v231, v232);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          }
          *(_OWORD *)&v9[v47[8]] = *(_OWORD *)&v10[v47[8]];
          *(_OWORD *)&v9[v47[9]] = *(_OWORD *)&v10[v47[9]];
          *(_OWORD *)&v9[v47[10]] = *(_OWORD *)&v10[v47[10]];
          v233 = v47[11];
          v234 = &v9[v233];
          v235 = &v10[v233];
          v236 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v234, v235, v236);
          v14 = v958;
          goto LABEL_279;
        case 6u:
          v974 = v12;
          v978 = v15;
          v959 = v14;
          v948 = v3;
          v54 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v54;
          v55 = *((_OWORD *)v10 + 3);
          *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
          *((_OWORD *)v9 + 3) = v55;
          v56 = type metadata accessor for TranscriptProtoClientAction(0);
          v57 = *(int *)(v56 + 36);
          v58 = &v9[v57];
          v59 = &v10[v57];
          v60 = type metadata accessor for TranscriptProtoStatementID(0);
          v61 = *(_QWORD *)(v60 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
          {
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            *v58 = *v59;
            *(_OWORD *)(v58 + 2) = *(_OWORD *)(v59 + 2);
            v237 = *(int *)(v60 + 24);
            v998 = (char *)v58 + v237;
            v238 = (char *)v59 + v237;
            v239 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v998, v238, v239);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
          }
          v240 = *(int *)(v56 + 40);
          v241 = &v9[v240];
          v242 = &v10[v240];
          v243 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v241, v242, v243);
          v14 = v959;
          goto LABEL_279;
        case 7u:
          v974 = v12;
          v978 = v15;
          v960 = v14;
          v948 = v3;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          Step = type metadata accessor for TranscriptProtoQueryStep(0);
          v64 = *(int *)(Step + 20);
          v65 = &v9[v64];
          v66 = &v10[v64];
          v67 = type metadata accessor for TranscriptProtoStatementID(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
            goto LABEL_19;
          goto LABEL_81;
        case 8u:
          v974 = v12;
          v978 = v15;
          v960 = v14;
          v948 = v3;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          Step = type metadata accessor for TranscriptProtoVariableStep(0);
          v70 = *(int *)(Step + 20);
          v65 = &v9[v70];
          v66 = &v10[v70];
          v67 = type metadata accessor for TranscriptProtoStatementID(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
LABEL_19:
            v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
LABEL_81:
            *v65 = *v66;
            *(_OWORD *)(v65 + 2) = *(_OWORD *)(v66 + 2);
            v244 = *(int *)(v67 + 24);
            v999 = (char *)v65 + v244;
            v245 = (char *)v66 + v244;
            v246 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(v999, v245, v246);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
          }
          v247 = *(int *)(Step + 24);
          v248 = &v9[v247];
          v249 = &v10[v247];
          v250 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v250 - 8) + 32))(v248, v249, v250);
          v14 = v960;
          goto LABEL_279;
        case 0xAu:
          v974 = v12;
          v978 = v15;
          v71 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v10, 1, v71))
          {
            v251 = (char *)&loc_24056D2F0 + 4 * word_2409019B6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          v640 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
          v641 = &v9[v640];
          v642 = &v10[v640];
          v643 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v643 - 8) + 32))(v641, v642, v643);
          swift_storeEnumTagMultiPayload();
          goto LABEL_280;
        case 0xBu:
          v977 = v15;
          v961 = v14;
          v73 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v10, 1, v73))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            v976 = v12;
            v252 = v3;
            v253 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
            v254 = *(_QWORD *)(v253 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v254 + 48))(v10, 1, v253))
            {
              v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
              memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
            }
            else
            {
              v446 = *((_OWORD *)v10 + 1);
              *(_OWORD *)v9 = *(_OWORD *)v10;
              *((_OWORD *)v9 + 1) = v446;
              *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
              v447 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
              v1010 = &v9[v447];
              __dstl = &v10[v447];
              v448 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v448 - 8) + 32))(v1010, __dstl, v448);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v9, 0, 1, v253);
            }
            v449 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
            v450 = &v9[v449];
            v451 = &v10[v449];
            v452 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v452 - 8) + 32))(v450, v451, v452);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v9, 0, 1, v73);
            v3 = v252;
            v12 = v976;
          }
          v453 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
          v454 = &v9[v453];
          v455 = &v10[v453];
          v456 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v456 - 8) + 32))(v454, v455, v456);
          v14 = v961;
          goto LABEL_227;
        case 0xCu:
          v76 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v76;
          *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
          v77 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
          v78 = &v9[v77];
          v981 = v15;
          v79 = &v10[v77];
          v80 = sub_2408E57A4();
          v81 = v79;
          v15 = v981;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v81, v80);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xDu:
          v975 = v12;
          v977 = v15;
          v962 = v14;
          v950 = v3;
          v82 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v82;
          v83 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v84 = v83[6];
          v85 = &v9[v84];
          v86 = &v10[v84];
          v87 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          v88 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v87 - 8);
          v990 = v83;
          if (v88[6](v86, 1, v87))
          {
            v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            __dstf = v88;
            v256 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            v257 = *(_QWORD *)(v256 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v257 + 48))(v86, 1, v256))
            {
              v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
              memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
            }
            else
            {
              v922 = (void *)v256;
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              switch(EnumCaseMultiPayload)
              {
                case 6:
                  v527 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v527 - 8) + 32))(v85, v86, v527);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *v85 = *v86;
                  v528 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                + 20);
                  v529 = &v85[v528];
                  v908 = &v86[v528];
                  v530 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v530 - 8) + 32))(v529, v908, v530);
                  v256 = (uint64_t)v922;
                  swift_storeEnumTagMultiPayload();
                  break;
                case 1:
                  *(_QWORD *)v85 = *(_QWORD *)v86;
                  v458 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                  v459 = &v85[v458];
                  v905 = &v86[v458];
                  v460 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v460 - 8) + 32))(v459, v905, v460);
                  v256 = (uint64_t)v922;
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v85, v86, *(_QWORD *)(v257 + 64));
                  break;
              }
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v257 + 56))(v85, 0, 1, v256);
            }
            v531 = *(int *)(v87 + 20);
            v532 = &v85[v531];
            v533 = &v86[v531];
            v534 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v534 - 8) + 32))(v532, v533, v534);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))__dstf + 7))(v85, 0, 1, v87);
            v83 = v990;
          }
          v535 = v83[7];
          v536 = &v9[v535];
          v537 = &v10[v535];
          v538 = type metadata accessor for TranscriptProtoStatementID(0);
          v539 = *(_QWORD *)(v538 - 8);
          v925 = *(unsigned int (**)(void))(v539 + 48);
          __dsti = (int *)v538;
          v909 = v539;
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v925)(v537, 1, v538))
          {
            v540 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v536, v537, *(_QWORD *)(*(_QWORD *)(v540 - 8) + 64));
          }
          else
          {
            *v536 = *v537;
            *(_OWORD *)(v536 + 2) = *(_OWORD *)(v537 + 2);
            v541 = *(int *)(v538 + 24);
            v542 = (char *)v536 + v541;
            v543 = (char *)v537 + v541;
            v544 = sub_2408E57A4();
            v545 = v542;
            v83 = v990;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v544 - 8) + 32))(v545, v543, v544);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v539 + 56))(v536, 0, 1, v538);
          }
          v546 = v83[8];
          v547 = &v9[v546];
          v548 = &v10[v546];
          v549 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          v550 = *(_QWORD *)(v549 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v550 + 48))(v548, 1, v549))
          {
            v551 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
            memcpy(v547, v548, *(_QWORD *)(*(_QWORD *)(v551 - 8) + 64));
            v3 = v950;
            v12 = v975;
          }
          else
          {
            v889 = v550;
            v552 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            v553 = *(_QWORD *)(v552 - 8);
            v898 = (void *)v549;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v553 + 48))(v548, 1, v552))
            {
              v554 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
              v555 = v548;
              memcpy(v547, v548, *(_QWORD *)(*(_QWORD *)(v554 - 8) + 64));
              v3 = v950;
            }
            else
            {
              __srca = v548;
              v556 = swift_getEnumCaseMultiPayload();
              v557 = v547;
              if (v556 == 1)
              {
                *v547 = *__srca;
                v562 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                __dstm = (char *)v547 + v562;
                v563 = (char *)__srca + v562;
                v564 = sub_2408E57A4();
                v565 = v563;
                v557 = v547;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v564 - 8) + 32))(__dstm, v565, v564);
                swift_storeEnumTagMultiPayload();
              }
              else if (v556)
              {
                memcpy(v547, __srca, *(_QWORD *)(v553 + 64));
              }
              else
              {
                v879 = v552;
                *(_OWORD *)v547 = *(_OWORD *)__srca;
                v876 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v558 = *(int *)(v876 + 20);
                v559 = (_DWORD *)((char *)v547 + v558);
                v560 = (_DWORD *)((char *)__srca + v558);
                if (v925())
                {
                  v561 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                  memcpy(v559, v560, *(_QWORD *)(*(_QWORD *)(v561 - 8) + 64));
                }
                else
                {
                  *v559 = *v560;
                  *(_OWORD *)(v559 + 2) = *(_OWORD *)(v560 + 2);
                  v623 = __dsti[6];
                  v929 = (char *)v559 + v623;
                  v624 = (char *)v560 + v623;
                  v625 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v625 - 8) + 32))(v929, v624, v625);
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v909 + 56))(v559, 0, 1, __dsti);
                }
                v626 = *(int *)(v876 + 24);
                v627 = (char *)v557 + v626;
                v628 = v557;
                v629 = (char *)__srca + v626;
                v630 = sub_2408E57A4();
                v631 = v629;
                v557 = v628;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v630 - 8) + 32))(v627, v631, v630);
                v552 = v879;
                swift_storeEnumTagMultiPayload();
                v549 = (uint64_t)v898;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v553 + 56))(v557, 0, 1, v552);
              v547 = v557;
              v3 = v950;
              v555 = __srca;
            }
            v632 = *(int *)(v549 + 20);
            v633 = (char *)v547 + v632;
            v634 = (char *)v555 + v632;
            v635 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v635 - 8) + 32))(v633, v634, v635);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v889 + 56))(v547, 0, 1, v898);
            v12 = v975;
            v83 = v990;
          }
          v636 = v83[9];
          v637 = &v9[v636];
          v638 = &v10[v636];
          v639 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v639 - 8) + 32))(v637, v638, v639);
          v14 = v962;
LABEL_227:
          swift_storeEnumTagMultiPayload();
          v15 = v977;
          break;
        case 0xEu:
        case 0x10u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x29u:
          v109 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v9, v10, v109);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
          v974 = v12;
          v978 = v15;
          v963 = v14;
          v948 = v3;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
          StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
          v91 = StepResults[6];
          v92 = &v9[v91];
          v93 = &v10[v91];
          v94 = type metadata accessor for TranscriptProtoStatementID(0);
          v95 = *(_QWORD *)(v94 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
          {
            v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            *v92 = *v93;
            *(_OWORD *)(v92 + 2) = *(_OWORD *)(v93 + 2);
            v259 = *(int *)(v94 + 24);
            v1000 = (char *)v92 + v259;
            v260 = (char *)v93 + v259;
            v261 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v1000, v260, v261);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
          }
          goto LABEL_146;
        case 0x11u:
          v974 = v12;
          v978 = v15;
          v964 = v14;
          v948 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          *(_WORD *)(v9 + 25) = *(_WORD *)(v10 + 25);
          v97 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
          v98 = v97[9];
          v99 = &v9[v98];
          v100 = &v10[v98];
          v101 = type metadata accessor for TranscriptProtoParameterSet(0);
          v102 = *(_QWORD *)(v101 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
          {
            v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
            memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            *v99 = *v100;
            v262 = *(int *)(v101 + 20);
            v1001 = (char *)v99 + v262;
            v263 = (char *)v100 + v262;
            v264 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v1001, v263, v264);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
          }
          v265 = v97[10];
          v266 = &v9[v265];
          v267 = &v10[v265];
          v268 = type metadata accessor for TranscriptProtoStatementID(0);
          v269 = *(_QWORD *)(v268 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v269 + 48))(v267, 1, v268))
          {
            v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
          }
          else
          {
            *v266 = *v267;
            *(_OWORD *)(v266 + 2) = *(_OWORD *)(v267 + 2);
            v377 = *(int *)(v268 + 24);
            v1006 = (char *)v266 + v377;
            v378 = (char *)v267 + v377;
            v379 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v379 - 8) + 32))(v1006, v378, v379);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v269 + 56))(v266, 0, 1, v268);
          }
          v380 = v97[11];
          v381 = &v9[v380];
          v382 = &v10[v380];
          v383 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v381, v382, v383);
          v14 = v964;
          goto LABEL_279;
        case 0x12u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v104 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
          v105 = &v9[v104];
          v982 = v15;
          v106 = &v10[v104];
          v107 = sub_2408E57A4();
          v108 = v106;
          v15 = v982;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v108, v107);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x16u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v110 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
          v111 = &v9[v110];
          v983 = v15;
          v112 = &v10[v110];
          v113 = sub_2408E57A4();
          v114 = v112;
          v15 = v983;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v114, v113);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x17u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v115 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
          v116 = &v9[v115];
          v984 = v15;
          v117 = &v10[v115];
          v118 = sub_2408E57A4();
          v119 = v117;
          v15 = v984;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v119, v118);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x18u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v120 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
          v121 = &v9[v120];
          v985 = v15;
          v122 = &v10[v120];
          v123 = sub_2408E57A4();
          v124 = v122;
          v15 = v985;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v124, v123);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x19u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v125 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
          v126 = &v9[v125];
          v986 = v15;
          v127 = &v10[v125];
          v128 = sub_2408E57A4();
          v129 = v127;
          v15 = v986;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v126, v129, v128);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x1Au:
          v974 = v12;
          v978 = v15;
          v948 = v3;
          v130 = type metadata accessor for TranscriptProtoStatementID(0);
          v131 = *(_QWORD *)(v130 - 8);
          v991 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v131 + 48);
          v965 = v14;
          if (v991(v10, 1, v130))
          {
            v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v9 = *(_DWORD *)v10;
            *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
            v271 = *(int *)(v130 + 24);
            v272 = &v9[v271];
            v273 = &v10[v271];
            v274 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v272, v273, v274);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v9, 0, 1, v130);
          }
          v275 = type metadata accessor for TranscriptProtoActionCancellation(0);
          v276 = *(int *)(v275 + 20);
          v277 = &v9[v276];
          v278 = &v10[v276];
          if (v991(&v10[v276], 1, v130))
          {
            v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
          }
          else
          {
            *v277 = *v278;
            *(_OWORD *)(v277 + 2) = *(_OWORD *)(v278 + 2);
            v384 = *(int *)(v130 + 24);
            v1007 = (char *)v277 + v384;
            v385 = (char *)v278 + v384;
            v386 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 32))(v1007, v385, v386);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v277, 0, 1, v130);
          }
          v387 = *(int *)(v275 + 24);
          v388 = &v9[v387];
          v389 = &v10[v387];
          v390 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v388, v389, v390);
          v14 = v965;
          goto LABEL_279;
        case 0x1Bu:
          v133 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v133;
          *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          v134 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
          v135 = &v9[v134];
          v987 = v15;
          v136 = &v10[v134];
          v137 = sub_2408E57A4();
          v138 = v136;
          v15 = v987;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v135, v138, v137);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x1Cu:
          v966 = v14;
          v974 = v12;
          v951 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          v992 = type metadata accessor for TranscriptProtoSystemResponse(0);
          v139 = *(int *)(v992 + 28);
          v140 = &v9[v139];
          v141 = &v10[v139];
          v142 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v143 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v142 - 8);
          v978 = v15;
          if (v143[6](v141, 1, v142))
          {
            v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
          }
          else
          {
            v917 = v143;
            v280 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v280 - 8) + 48))(v141, 1, v280))
            {
              v461 = (char *)&loc_24056E5A8 + 4 * word_240901996[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
            v282 = v141;
            v757 = *(int *)(v142 + 20);
            v758 = &v140[v757];
            v759 = &v282[v757];
            v760 = sub_2408E57A4();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v760 - 8) + 32))(v758, v759, v760);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v917[7])(v140, 0, 1, v142);
          }
          v761 = v992;
          v762 = *(int *)(v992 + 32);
          v763 = &v9[v762];
          v764 = &v10[v762];
          v765 = type metadata accessor for TranscriptProtoResponseOutput(0);
          v766 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v765 - 8);
          if (v766[6](v764, 1, v765))
          {
            v767 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
            memcpy(v763, v764, *(_QWORD *)(*(_QWORD *)(v767 - 8) + 64));
          }
          else
          {
            *v763 = *v764;
            *((_BYTE *)v763 + 8) = *((_BYTE *)v764 + 8);
            v763[2] = v764[2];
            v901 = (int *)v765;
            v768 = *(int *)(v765 + 28);
            v769 = (char *)v763 + v768;
            __dstk = (char *)v764;
            v770 = (char *)v764 + v768;
            v771 = type metadata accessor for TranscriptProtoDialogType(0);
            v892 = *(_QWORD *)(v771 - 8);
            v913 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v892 + 48);
            v931 = v766;
            if (v913(v770, 1, v771))
            {
              v772 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v769, v770, *(_QWORD *)(*(_QWORD *)(v772 - 8) + 64));
            }
            else
            {
              __srcb = v763;
              v773 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v773 - 8) + 48))(v770, 1, v773))
              {
                v775 = (char *)&loc_240573014 + 4 * byte_2409019AC[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v774 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v769, v770, *(_QWORD *)(*(_QWORD *)(v774 - 8) + 64));
              v776 = *(int *)(v771 + 20);
              v777 = v771;
              v778 = &v769[v776];
              v779 = &v770[v776];
              v780 = sub_2408E57A4();
              v781 = v778;
              v771 = v777;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v780 - 8) + 32))(v781, v779, v780);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v892 + 56))(v769, 0, 1, v777);
              v763 = __srcb;
            }
            v782 = v901[8];
            v783 = (char *)v763 + v782;
            v784 = &__dstk[v782];
            if (v913(&__dstk[v782], 1, v771))
            {
              v785 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v783, v784, *(_QWORD *)(*(_QWORD *)(v785 - 8) + 64));
            }
            else
            {
              v914 = v771;
              v786 = type metadata accessor for TranscriptProtoDialogFormat(0);
              __srcc = v763;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v786 - 8) + 48))(v784, 1, v786))
              {
                v788 = (char *)&loc_240573224 + 4 * byte_2409019B1[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v787 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v783, v784, *(_QWORD *)(*(_QWORD *)(v787 - 8) + 64));
              v789 = *(int *)(v914 + 20);
              v790 = &v783[v789];
              v791 = &v784[v789];
              v792 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v792 - 8) + 32))(v790, v791, v792);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v892 + 56))(v783, 0, 1, v914);
              v763 = __srcc;
            }
            v793 = v901[9];
            v794 = (char *)v763 + v793;
            v795 = &__dstk[v793];
            v796 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v796 - 8) + 32))(v794, v795, v796);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v931 + 7))(v763, 0, 1, v901);
            v761 = v992;
          }
          v797 = v761;
          v798 = *(int *)(v761 + 36);
          v799 = &v9[v798];
          v800 = &v10[v798];
          v801 = type metadata accessor for TranscriptProtoStatementID(0);
          v802 = *(_QWORD *)(v801 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v802 + 48))(v800, 1, v801))
          {
            v803 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v799, v800, *(_QWORD *)(*(_QWORD *)(v803 - 8) + 64));
          }
          else
          {
            *v799 = *v800;
            *(_OWORD *)(v799 + 2) = *(_OWORD *)(v800 + 2);
            v804 = *(int *)(v801 + 24);
            __dstn = (char *)v799 + v804;
            v805 = (char *)v800 + v804;
            v806 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v806 - 8) + 32))(__dstn, v805, v806);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v802 + 56))(v799, 0, 1, v801);
          }
          v3 = v951;
          *(_OWORD *)&v9[*(int *)(v797 + 40)] = *(_OWORD *)&v10[*(int *)(v797 + 40)];
          v807 = *(int *)(v797 + 44);
          v808 = &v9[v807];
          v809 = &v10[v807];
          v810 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v810 - 8) + 32))(v808, v809, v810);
          v14 = v966;
          goto LABEL_277;
        case 0x1Du:
          v145 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v145;
          v902 = v9;
          v915 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
          v146 = v915[6];
          v893 = &v9[v146];
          v147 = &v10[v146];
          v148 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
          v887 = *(_QWORD *)(v148 - 8);
          __dsta = v147;
          v967 = v14;
          v974 = v12;
          v948 = v3;
          v978 = v15;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v887 + 48))(v147, 1, v148))
          {
            v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
            memcpy(v893, v147, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
            v9 = v902;
            v150 = v915;
          }
          else
          {
            __src = (int *)v148;
            v283 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v284 = *(_QWORD *)(v283 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v147, 1, v283))
            {
              v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              v286 = v893;
              v287 = v147;
              memcpy(v893, v147, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
              v288 = __src;
              v9 = v902;
            }
            else
            {
              v874 = v284;
              v875 = v283;
              v462 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              v9 = v902;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v462 - 8) + 48))(__dsta, 1, v462))
              {
                v496 = (char *)&loc_24056EB44 + 4 * word_240901980[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v463 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(v893, __dsta, *(_QWORD *)(*(_QWORD *)(v463 - 8) + 64));
              v288 = __src;
              v644 = *(int *)(v283 + 20);
              v645 = &v893[v644];
              v1012 = &__dsta[v644];
              v646 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v646 - 8) + 32))(v645, v1012, v646);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v874 + 56))(v893, 0, 1, v875);
              v287 = __dsta;
              v286 = v893;
            }
            v647 = v288[5];
            v648 = &v286[v647];
            v649 = &v287[v647];
            v650 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
            v651 = *((_QWORD *)v650 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v651 + 48))(v649, 1, v650))
            {
              v652 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
              memcpy(v648, v649, *(_QWORD *)(*(_QWORD *)(v652 - 8) + 64));
            }
            else
            {
              v911 = v651;
              *(_QWORD *)v648 = *(_QWORD *)v649;
              v653 = v650[5];
              v1013 = v648;
              v654 = &v648[v653];
              v655 = &v649[v653];
              v656 = type metadata accessor for TranscriptProtoResponseDialog(0);
              v657 = *(_QWORD *)(v656 - 8);
              v880 = v656;
              if ((*(unsigned int (**)(char *, uint64_t))(v657 + 48))(v655, 1))
              {
                v658 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                memcpy(v654, v655, *(_QWORD *)(*(_QWORD *)(v658 - 8) + 64));
              }
              else
              {
                v659 = *((_OWORD *)v655 + 1);
                *(_OWORD *)v654 = *(_OWORD *)v655;
                *((_OWORD *)v654 + 1) = v659;
                v660 = *((_OWORD *)v655 + 3);
                *((_OWORD *)v654 + 2) = *((_OWORD *)v655 + 2);
                *((_OWORD *)v654 + 3) = v660;
                v661 = *(int *)(v880 + 32);
                v877 = &v654[v661];
                v662 = &v655[v661];
                v663 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v663 - 8) + 32))(v877, v662, v663);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v657 + 56))(v654, 0, 1, v880);
              }
              v664 = v650[6];
              v665 = (_OWORD *)((char *)v1013 + v664);
              v666 = &v649[v664];
              v667 = type metadata accessor for TranscriptProtoResponseVisual(0);
              v881 = *(_QWORD *)(v667 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v881 + 48))(v666, 1, v667))
              {
                v668 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                memcpy(v665, v666, *(_QWORD *)(*(_QWORD *)(v668 - 8) + 64));
              }
              else
              {
                *v665 = *(_OWORD *)v666;
                v669 = *(int *)(v667 + 24);
                v878 = (char *)v665 + v669;
                v670 = &v666[v669];
                v671 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v671 - 8) + 32))(v878, v670, v671);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v881 + 56))(v665, 0, 1, v667);
              }
              *(_OWORD *)((char *)v1013 + v650[7]) = *(_OWORD *)&v649[v650[7]];
              *(_OWORD *)((char *)v1013 + v650[8]) = *(_OWORD *)&v649[v650[8]];
              *((_BYTE *)v1013 + v650[9]) = v649[v650[9]];
              *((_BYTE *)v1013 + v650[10]) = v649[v650[10]];
              v672 = v650[11];
              v673 = (char *)v1013 + v672;
              v674 = &v649[v672];
              v675 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v675 - 8) + 32))(v673, v674, v675);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v911 + 56))(v1013, 0, 1, v650);
              v286 = v893;
            }
            v676 = __src[6];
            v677 = v286;
            v678 = &v286[v676];
            v679 = &__dsta[v676];
            v680 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v680 - 8) + 32))(v678, v679, v680);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v887 + 56))(v677, 0, 1, __src);
            v150 = v915;
          }
          v681 = v150[7];
          v682 = &v9[v681];
          v683 = &v10[v681];
          v684 = type metadata accessor for TranscriptProtoStatementID(0);
          v685 = *(_QWORD *)(v684 - 8);
          v1014 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v685 + 48);
          __dstj = (void *)v685;
          if (v1014(v683, 1, v684))
          {
            v686 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v682, v683, *(_QWORD *)(*(_QWORD *)(v686 - 8) + 64));
          }
          else
          {
            *v682 = *v683;
            *(_OWORD *)(v682 + 2) = *(_OWORD *)(v683 + 2);
            v687 = *(int *)(v684 + 24);
            v912 = (char *)v682 + v687;
            v688 = (char *)v683 + v687;
            v689 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v689 - 8) + 32))(v912, v688, v689);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v685 + 56))(v682, 0, 1, v684);
          }
          v690 = v150[8];
          v691 = &v9[v690];
          v692 = &v10[v690];
          v14 = v967;
          if (v1014(&v10[v690], 1, v684))
          {
            v693 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v691, v692, *(_QWORD *)(*(_QWORD *)(v693 - 8) + 64));
          }
          else
          {
            *v691 = *v692;
            *(_OWORD *)(v691 + 2) = *(_OWORD *)(v692 + 2);
            v694 = *(int *)(v684 + 24);
            v695 = (char *)v691 + v694;
            v696 = (char *)v692 + v694;
            v697 = sub_2408E57A4();
            v698 = v695;
            v14 = v967;
            v150 = v915;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v697 - 8) + 32))(v698, v696, v697);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstj + 7))(v691, 0, 1, v684);
          }
          v699 = v150[9];
          v700 = &v9[v699];
          v701 = &v10[v699];
          if (v1014(&v10[v699], 1, v684))
          {
            v702 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v700, v701, *(_QWORD *)(*(_QWORD *)(v702 - 8) + 64));
          }
          else
          {
            *v700 = *v701;
            *(_OWORD *)(v700 + 2) = *(_OWORD *)(v701 + 2);
            v703 = *(int *)(v684 + 24);
            v704 = v14;
            v705 = (char *)v700 + v703;
            v706 = (char *)v701 + v703;
            v707 = sub_2408E57A4();
            v708 = v705;
            v14 = v704;
            v150 = v915;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v707 - 8) + 32))(v708, v706, v707);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstj + 7))(v700, 0, 1, v684);
          }
          v709 = v150[10];
          v710 = &v9[v709];
          v711 = &v10[v709];
          v712 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v712 - 8) + 32))(v710, v711, v712);
          goto LABEL_279;
        case 0x1Eu:
          v974 = v12;
          v978 = v15;
          v963 = v14;
          v948 = v3;
          v151 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v151;
          StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
          v152 = StepResults[6];
          v153 = &v9[v152];
          v154 = &v10[v152];
          v155 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v156 = *(_QWORD *)(v155 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
            goto LABEL_50;
          goto LABEL_100;
        case 0x1Fu:
          v974 = v12;
          v978 = v15;
          v963 = v14;
          v948 = v3;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
          StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
          v157 = StepResults[6];
          v153 = &v9[v157];
          v154 = &v10[v157];
          v155 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v156 = *(_QWORD *)(v155 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
          {
LABEL_50:
            v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
          }
          else
          {
LABEL_100:
            *(_OWORD *)v153 = *(_OWORD *)v154;
            v153[2] = v154[2];
            v289 = *(int *)(v155 + 24);
            v1002 = (char *)v153 + v289;
            v290 = (char *)v154 + v289;
            v291 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v1002, v290, v291);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
          }
          goto LABEL_146;
        case 0x20u:
          v974 = v12;
          v978 = v15;
          v952 = v3;
          v159 = type metadata accessor for TranscriptProtoRequestContent(0);
          v160 = *(_QWORD *)(v159 - 8);
          v968 = v14;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v160 + 48))(v10, 1, v159))
          {
            v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
          }
          else
          {
            v292 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v292 - 8) + 48))(v10, 1, v292))
            {
              v464 = (char *)&loc_24056E6AC + 4 * word_240901978[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
            v739 = *(int *)(v159 + 20);
            v740 = &v9[v739];
            v741 = &v10[v739];
            v742 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v742 - 8) + 32))(v740, v741, v742);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v9, 0, 1, v159);
          }
          v743 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
          *(_OWORD *)&v9[v743[5]] = *(_OWORD *)&v10[v743[5]];
          v744 = v743[6];
          v745 = &v9[v744];
          v746 = &v10[v744];
          v747 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v748 = *(_QWORD *)(v747 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v748 + 48))(v746, 1, v747))
          {
            v749 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v745, v746, *(_QWORD *)(*(_QWORD *)(v749 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v745 = *(_OWORD *)v746;
            v745[2] = v746[2];
            v750 = *(int *)(v747 + 24);
            v1016 = (char *)v745 + v750;
            v751 = (char *)v746 + v750;
            v752 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v752 - 8) + 32))(v1016, v751, v752);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v748 + 56))(v745, 0, 1, v747);
          }
          v3 = v952;
          v753 = v743[7];
          v754 = &v9[v753];
          v755 = &v10[v753];
          v756 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v756 - 8) + 32))(v754, v755, v756);
          v14 = v968;
          goto LABEL_277;
        case 0x21u:
          v974 = v12;
          v978 = v15;
          v969 = v14;
          v948 = v3;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          __dstb = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
          v162 = __dstb[5];
          v163 = &v9[v162];
          v164 = &v10[v162];
          v165 = type metadata accessor for TranscriptProtoStatementID(0);
          v166 = *(_QWORD *)(v165 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v166 + 48))(v164, 1, v165))
          {
            v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
          }
          else
          {
            *v163 = *v164;
            *(_OWORD *)(v163 + 2) = *(_OWORD *)(v164 + 2);
            v294 = *(int *)(v165 + 24);
            v295 = (char *)v163 + v294;
            v296 = (char *)v164 + v294;
            v297 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v295, v296, v297);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v163, 0, 1, v165);
          }
          v298 = __dstb;
          v299 = __dstb[6];
          v300 = &v9[v299];
          v301 = &v10[v299];
          v302 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v303 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v302 - 8);
          if (v303[6](v301, 1, v302))
          {
            v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
          }
          else
          {
            v391 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v895 = v303;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v391 - 8) + 48))(v301, 1, v391))
            {
              v488 = (char *)&loc_24056E8F8 + 4 * word_240901962[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v392 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v392 - 8) + 64));
            v811 = *(int *)(v302 + 20);
            v812 = &v300[v811];
            v813 = v300;
            v814 = &v301[v811];
            v815 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v815 - 8) + 32))(v812, v814, v815);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v895[7])(v813, 0, 1, v302);
            v298 = __dstb;
          }
          goto LABEL_278;
        case 0x22u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v168 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
          v169 = &v9[v168];
          v988 = v15;
          v170 = &v10[v168];
          v171 = sub_2408E57A4();
          v172 = v170;
          v15 = v988;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v172, v171);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x23u:
          v974 = v12;
          v978 = v15;
          v173 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v174 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v173 - 8);
          v970 = v14;
          v953 = v3;
          if (v174[6](v10, 1, v173))
          {
            v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
          }
          else
          {
            __dstg = v174;
            v305 = *((_OWORD *)v10 + 1);
            *(_OWORD *)v9 = *(_OWORD *)v10;
            *((_OWORD *)v9 + 1) = v305;
            v9[32] = v10[32];
            *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
            *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
            *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
            v9[80] = v10[80];
            *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
            *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
            v1003 = (int *)v173;
            v306 = *(int *)(v173 + 68);
            v307 = &v9[v306];
            v308 = &v10[v306];
            v309 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v310 = *(_QWORD *)(v309 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v310 + 48))(v308, 1, v309))
            {
              v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
            }
            else
            {
              *v307 = *v308;
              v465 = *(int *)(v309 + 20);
              v466 = (char *)v307 + v465;
              v467 = (char *)v308 + v465;
              v468 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v468 - 8) + 32))(v466, v467, v468);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v307, 0, 1, v309);
            }
            v469 = v1003;
            *(_OWORD *)&v9[v1003[18]] = *(_OWORD *)&v10[v1003[18]];
            v470 = v1003[19];
            v471 = &v9[v470];
            v472 = &v10[v470];
            v473 = type metadata accessor for ToolKitProtoAppDefinition(0);
            v474 = *(_QWORD *)(v473 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v474 + 48))(v472, 1, v473))
            {
              v475 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
              memcpy(v471, v472, *(_QWORD *)(*(_QWORD *)(v475 - 8) + 64));
            }
            else
            {
              v490 = v472[1];
              *v471 = *v472;
              v471[1] = v490;
              v491 = v472[3];
              v471[2] = v472[2];
              v471[3] = v491;
              v471[4] = v472[4];
              *((_BYTE *)v471 + 80) = *((_BYTE *)v472 + 80);
              v492 = *(int *)(v473 + 40);
              v923 = (_OWORD *)((char *)v471 + v492);
              v493 = (_OWORD *)((char *)v472 + v492);
              v494 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
              v896 = *(void **)(v494 - 8);
              v906 = v494;
              if ((*((unsigned int (**)(_OWORD *, uint64_t))v896 + 6))(v493, 1))
              {
                v495 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                memcpy(v923, v493, *(_QWORD *)(*(_QWORD *)(v495 - 8) + 64));
              }
              else
              {
                *v923 = *v493;
                v497 = *(int *)(v906 + 20);
                v888 = (char *)v923 + v497;
                v498 = (char *)v493 + v497;
                v499 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v499 - 8) + 32))(v888, v498, v499);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v896 + 7))(v923, 0, 1, v906);
              }
              v500 = *(int *)(v473 + 44);
              v501 = (char *)v471 + v500;
              v502 = (char *)v472 + v500;
              v503 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 32))(v501, v502, v503);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v474 + 56))(v471, 0, 1, v473);
              v469 = v1003;
            }
            *(_OWORD *)&v9[v469[20]] = *(_OWORD *)&v10[v469[20]];
            v504 = v469[21];
            v505 = &v9[v504];
            v506 = &v10[v504];
            v507 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v508 = *(_QWORD *)(v507 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v508 + 48))(v506, 1, v507))
            {
              v509 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
              memcpy(v505, v506, *(_QWORD *)(*(_QWORD *)(v509 - 8) + 64));
            }
            else
            {
              v510 = v506[1];
              *v505 = *v506;
              v505[1] = v510;
              v511 = *(int *)(v507 + 24);
              v512 = (char *)v505 + v511;
              v513 = (char *)v506 + v511;
              v514 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v512, v513, v514);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v508 + 56))(v505, 0, 1, v507);
            }
            v515 = v1003;
            v516 = v1003[22];
            v517 = &v9[v516];
            v518 = &v10[v516];
            v519 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v520 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v519 - 8);
            if (v520[6](v518, 1, v519))
            {
              v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v517, v518, *(_QWORD *)(*(_QWORD *)(v521 - 8) + 64));
            }
            else
            {
              v924 = v520;
              v522 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
              v523 = *(_QWORD *)(v522 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v523 + 48))(v518, 1, v522))
              {
                v524 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v517, v518, *(_QWORD *)(*(_QWORD *)(v524 - 8) + 64));
              }
              else
              {
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *v517 = *v518;
                  *((_BYTE *)v517 + 16) = *((_BYTE *)v518 + 16);
                  *(_OWORD *)((char *)v517 + 24) = *(_OWORD *)((char *)v518 + 24);
                  *(_OWORD *)((char *)v517 + 40) = *(_OWORD *)((char *)v518 + 40);
                  v525 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                + 32);
                  v897 = (char *)v518 + v525;
                  v907 = (char *)v517 + v525;
                  v526 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v526 - 8) + 32))(v907, v897, v526);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v517, v518, *(_QWORD *)(v523 + 64));
                }
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v523 + 56))(v517, 0, 1, v522);
              }
              v566 = *(int *)(v519 + 20);
              v567 = (char *)v517 + v566;
              v568 = (char *)v518 + v566;
              v569 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v569 - 8) + 32))(v567, v568, v569);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v924 + 7))(v517, 0, 1, v519);
              v515 = v1003;
            }
            v570 = v515[23];
            v571 = &v9[v570];
            v572 = &v10[v570];
            v573 = type metadata accessor for ToolKitProtoContainerDefinition(0);
            v910 = *(_QWORD *)(v573 - 8);
            v926 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v910 + 48);
            if (v926(v572, 1, v573))
            {
              v574 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v571, v572, *(_QWORD *)(*(_QWORD *)(v574 - 8) + 64));
            }
            else
            {
              v575 = v572[1];
              *v571 = *v572;
              v571[1] = v575;
              *((_WORD *)v571 + 16) = *((_WORD *)v572 + 16);
              *(_OWORD *)((char *)v571 + 40) = *(_OWORD *)((char *)v572 + 40);
              *(_OWORD *)((char *)v571 + 56) = *(_OWORD *)((char *)v572 + 56);
              v576 = *(int *)(v573 + 40);
              v899 = (_OWORD *)((char *)v571 + v576);
              v577 = (_OWORD *)((char *)v572 + v576);
              v578 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v890 = *(_QWORD *)(v578 - 8);
              v579 = v578;
              if ((*(unsigned int (**)(_OWORD *, uint64_t))(v890 + 48))(v577, 1))
              {
                v580 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v899, v577, *(_QWORD *)(*(_QWORD *)(v580 - 8) + 64));
              }
              else
              {
                *v899 = *v577;
                v581 = *(int *)(v579 + 20);
                __srcd = (char *)v899 + v581;
                v582 = (char *)v577 + v581;
                v583 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v583 - 8) + 32))(__srcd, v582, v583);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v890 + 56))(v899, 0, 1, v579);
              }
              v584 = *(int *)(v573 + 44);
              v585 = (char *)v571 + v584;
              v586 = (char *)v572 + v584;
              v587 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v587 - 8) + 32))(v585, v586, v587);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v910 + 56))(v571, 0, 1, v573);
              v515 = v1003;
            }
            v588 = v515[24];
            v589 = &v9[v588];
            v590 = &v10[v588];
            if (v926(&v10[v588], 1, v573))
            {
              v591 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v589, v590, *(_QWORD *)(*(_QWORD *)(v591 - 8) + 64));
            }
            else
            {
              v592 = v590[1];
              *v589 = *v590;
              v589[1] = v592;
              *((_WORD *)v589 + 16) = *((_WORD *)v590 + 16);
              *(_OWORD *)((char *)v589 + 40) = *(_OWORD *)((char *)v590 + 40);
              *(_OWORD *)((char *)v589 + 56) = *(_OWORD *)((char *)v590 + 56);
              v593 = *(int *)(v573 + 40);
              v927 = (_OWORD *)((char *)v589 + v593);
              v594 = (_OWORD *)((char *)v590 + v593);
              v595 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v900 = *(void **)(v595 - 8);
              v596 = v595;
              if ((*((unsigned int (**)(_OWORD *, uint64_t))v900 + 6))(v594, 1))
              {
                v597 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v927, v594, *(_QWORD *)(*(_QWORD *)(v597 - 8) + 64));
              }
              else
              {
                *v927 = *v594;
                v598 = *(int *)(v596 + 20);
                v891 = (char *)v927 + v598;
                v599 = (char *)v594 + v598;
                v600 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v600 - 8) + 32))(v891, v599, v600);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v900 + 7))(v927, 0, 1, v596);
              }
              v601 = *(int *)(v573 + 44);
              v602 = (char *)v589 + v601;
              v603 = (char *)v590 + v601;
              v604 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v604 - 8) + 32))(v602, v603, v604);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v910 + 56))(v589, 0, 1, v573);
              v515 = v1003;
            }
            v605 = v515[25];
            v606 = v515;
            v607 = &v9[v605];
            v608 = &v10[v605];
            v609 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v609 - 8) + 32))(v607, v608, v609);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))__dstg + 7))(v9, 0, 1, v606);
          }
          v423 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
          v610 = v423[5];
          v611 = &v9[v610];
          v612 = &v10[v610];
          v350 = type metadata accessor for TranscriptProtoStatementID(0);
          v613 = *(_QWORD *)(v350 - 8);
          v1011 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v613 + 48);
          __dsth = (void *)v613;
          if (v1011(v612, 1, v350))
          {
            v614 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v614 - 8) + 64));
          }
          else
          {
            *v611 = *v612;
            *(_OWORD *)(v611 + 2) = *(_OWORD *)(v612 + 2);
            v615 = *(int *)(v350 + 24);
            v928 = (char *)v611 + v615;
            v616 = (char *)v612 + v615;
            v617 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v617 - 8) + 32))(v928, v616, v617);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v613 + 56))(v611, 0, 1, v350);
          }
          v618 = v423[6];
          v425 = &v9[v618];
          v426 = &v10[v618];
          if (!v1011(&v10[v618], 1, v350))
            goto LABEL_147;
          goto LABEL_142;
        case 0x24u:
          v974 = v12;
          v978 = v15;
          v957 = v14;
          v949 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v9[16] = v10[16];
          *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          v176 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
          v177 = *(int *)(v176 + 28);
          v178 = &v9[v177];
          v179 = &v10[v177];
          v180 = type metadata accessor for TranscriptProtoStatementID(0);
          v181 = *(_QWORD *)(v180 - 8);
          v993 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v181 + 48);
          __dstc = (void *)v181;
          if (v993(v179, 1, v180))
          {
            v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          }
          else
          {
            *v178 = *v179;
            *(_OWORD *)(v178 + 2) = *(_OWORD *)(v179 + 2);
            v312 = *(int *)(v180 + 24);
            v918 = (void *)v176;
            v313 = (char *)v178 + v312;
            v314 = (char *)v179 + v312;
            v315 = sub_2408E57A4();
            v316 = v313;
            v176 = (uint64_t)v918;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32))(v316, v314, v315);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
          }
          v317 = v176;
          v318 = *(int *)(v176 + 32);
          v319 = &v9[v318];
          v320 = &v10[v318];
          if (v993(&v10[v318], 1, v180))
          {
            v321 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v319, v320, *(_QWORD *)(*(_QWORD *)(v321 - 8) + 64));
          }
          else
          {
            *v319 = *v320;
            *(_OWORD *)(v319 + 2) = *(_OWORD *)(v320 + 2);
            v393 = *(int *)(v180 + 24);
            v394 = (char *)v319 + v393;
            v395 = (char *)v320 + v393;
            v396 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v396 - 8) + 32))(v394, v395, v396);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstc + 7))(v319, 0, 1, v180);
          }
LABEL_134:
          v3 = v949;
          v397 = *(int *)(v317 + 36);
          v398 = &v9[v397];
          v399 = &v10[v397];
          v400 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v400 - 8) + 32))(v398, v399, v400);
          v14 = v957;
          goto LABEL_277;
        case 0x25u:
          v974 = v12;
          v978 = v15;
          v971 = v14;
          v954 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v9[16] = v10[16];
          v183 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
          v184 = *(int *)(v183 + 24);
          v185 = &v9[v184];
          v186 = &v10[v184];
          v187 = type metadata accessor for TranscriptProtoStatementID(0);
          v188 = *(_QWORD *)(v187 - 8);
          v994 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v188 + 48);
          __dstd = (void *)v188;
          if (v994(v186, 1, v187))
          {
            v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
          }
          else
          {
            *v185 = *v186;
            *(_OWORD *)(v185 + 2) = *(_OWORD *)(v186 + 2);
            v322 = *(int *)(v187 + 24);
            v919 = (void *)v183;
            v323 = (char *)v185 + v322;
            v324 = (char *)v186 + v322;
            v325 = sub_2408E57A4();
            v326 = v323;
            v183 = (uint64_t)v919;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v325 - 8) + 32))(v326, v324, v325);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
          }
          v327 = v183;
          v328 = *(int *)(v183 + 28);
          v329 = &v9[v328];
          v330 = &v10[v328];
          if (v994(&v10[v328], 1, v187))
          {
            v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v329, v330, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
          }
          else
          {
            *v329 = *v330;
            *(_OWORD *)(v329 + 2) = *(_OWORD *)(v330 + 2);
            v401 = *(int *)(v187 + 24);
            v402 = (char *)v329 + v401;
            v403 = (char *)v330 + v401;
            v404 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v404 - 8) + 32))(v402, v403, v404);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstd + 7))(v329, 0, 1, v187);
          }
          v3 = v954;
          v405 = *(int *)(v327 + 32);
          v406 = &v9[v405];
          v407 = &v10[v405];
          v408 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v408 - 8) + 32))(v406, v407, v408);
          v14 = v971;
          goto LABEL_277;
        case 0x26u:
          v974 = v12;
          v978 = v15;
          v963 = v14;
          v948 = v3;
          v190 = type metadata accessor for ToolKitProtoTypedValue(0);
          v191 = *(_QWORD *)(v190 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v191 + 48))(v10, 1, v190))
          {
            v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v332 = *(int *)(v190 + 20);
            v333 = &v9[v332];
            v334 = &v10[v332];
            v335 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v335 - 8) + 32))(v333, v334, v335);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v9, 0, 1, v190);
          }
          StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
          v336 = StepResults[5];
          v337 = &v9[v336];
          v338 = &v10[v336];
          v339 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v340 = *(_QWORD *)(v339 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v340 + 48))(v338, 1, v339))
          {
            v341 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v341 - 8) + 64));
          }
          else
          {
            *v337 = *v338;
            v409 = *(int *)(v339 + 20);
            v1008 = (char *)v337 + v409;
            v410 = (char *)v338 + v409;
            v411 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v411 - 8) + 32))(v1008, v410, v411);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v337, 0, 1, v339);
          }
          v412 = StepResults[6];
          v413 = &v9[v412];
          v414 = &v10[v412];
          v415 = type metadata accessor for TranscriptProtoStatementID(0);
          v416 = *(_QWORD *)(v415 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v416 + 48))(v414, 1, v415))
          {
            v417 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v417 - 8) + 64));
          }
          else
          {
            *v413 = *v414;
            *(_OWORD *)(v413 + 2) = *(_OWORD *)(v414 + 2);
            v430 = *(int *)(v415 + 24);
            v1009 = (char *)v413 + v430;
            v431 = (char *)v414 + v430;
            v432 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v1009, v431, v432);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v416 + 56))(v413, 0, 1, v415);
          }
LABEL_146:
          v433 = StepResults[7];
          v434 = &v9[v433];
          v435 = &v10[v433];
          v436 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v434, v435, v436);
          v14 = v963;
          goto LABEL_279;
        case 0x27u:
          v974 = v12;
          v978 = v15;
          v970 = v14;
          v953 = v3;
          v193 = type metadata accessor for ToolKitProtoTypedValue(0);
          v194 = *(_QWORD *)(v193 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v194 + 48))(v10, 1, v193))
          {
            v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v9 = *(_QWORD *)v10;
            v342 = *(int *)(v193 + 20);
            v343 = &v9[v342];
            v344 = &v10[v342];
            v345 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v345 - 8) + 32))(v343, v344, v345);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v9, 0, 1, v193);
          }
          v346 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
          v347 = *(int *)(v346 + 20);
          v348 = &v9[v347];
          v349 = &v10[v347];
          v350 = type metadata accessor for TranscriptProtoStatementID(0);
          v351 = *(_QWORD *)(v350 - 8);
          v1004 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v351 + 48);
          __dsth = (void *)v351;
          if (v1004(v349, 1, v350))
          {
            v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
          }
          else
          {
            *v348 = *v349;
            *(_OWORD *)(v348 + 2) = *(_OWORD *)(v349 + 2);
            v418 = *(int *)(v350 + 24);
            v921 = (void *)v346;
            v419 = (char *)v348 + v418;
            v420 = (char *)v349 + v418;
            v421 = sub_2408E57A4();
            v422 = v419;
            v346 = (uint64_t)v921;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v421 - 8) + 32))(v422, v420, v421);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v351 + 56))(v348, 0, 1, v350);
          }
          v423 = (int *)v346;
          v424 = *(int *)(v346 + 24);
          v425 = &v9[v424];
          v426 = &v10[v424];
          if (v1004(&v10[v424], 1, v350))
          {
LABEL_142:
            v427 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v425, v426, *(_QWORD *)(*(_QWORD *)(v427 - 8) + 64));
          }
          else
          {
LABEL_147:
            *v425 = *v426;
            *(_OWORD *)(v425 + 2) = *(_OWORD *)(v426 + 2);
            v437 = *(int *)(v350 + 24);
            v438 = (char *)v425 + v437;
            v439 = (char *)v426 + v437;
            v440 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v440 - 8) + 32))(v438, v439, v440);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dsth + 7))(v425, 0, 1, v350);
          }
          v3 = v953;
          v441 = v423[7];
          v442 = &v9[v441];
          v443 = &v10[v441];
          v444 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v444 - 8) + 32))(v442, v443, v444);
          v14 = v970;
LABEL_277:
          swift_storeEnumTagMultiPayload();
          goto LABEL_280;
        case 0x28u:
          v974 = v12;
          v978 = v15;
          v972 = v14;
          v948 = v3;
          v196 = *((_OWORD *)v10 + 1);
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_OWORD *)v9 + 1) = v196;
          DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          v198 = *(int *)(DecorationResult + 32);
          v199 = &v9[v198];
          v200 = &v10[v198];
          DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          v202 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v202 + 48))(v200, 1, DecorationToolRetrievalResponse))
          {
            v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
          }
          else
          {
            v353 = v200[1];
            *v199 = *v200;
            v199[1] = v353;
            *((_DWORD *)v199 + 8) = *((_DWORD *)v200 + 8);
            *(_OWORD *)((char *)v199 + 40) = *(_OWORD *)((char *)v200 + 40);
            v354 = *(int *)(DecorationToolRetrievalResponse + 36);
            v1005 = (char *)v199 + v354;
            v355 = (char *)v200 + v354;
            v356 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 32))(v1005, v355, v356);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, DecorationToolRetrievalResponse);
          }
          v357 = *(int *)(DecorationResult + 36);
          v358 = &v9[v357];
          v359 = &v10[v357];
          v360 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v360 - 8) + 32))(v358, v359, v360);
          v14 = v972;
          goto LABEL_279;
        case 0x2Au:
          v974 = v12;
          v978 = v15;
          v969 = v14;
          v948 = v3;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
          v204 = *(int *)(DecorationPrePlannerResult + 20);
          v205 = &v9[v204];
          v206 = &v10[v204];
          v207 = type metadata accessor for TranscriptProtoStatementID(0);
          v208 = *(_QWORD *)(v207 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
          {
            v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
          }
          else
          {
            *v205 = *v206;
            *(_OWORD *)(v205 + 2) = *(_OWORD *)(v206 + 2);
            v361 = *(int *)(v207 + 24);
            v362 = (char *)v205 + v361;
            v363 = (char *)v206 + v361;
            v364 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v364 - 8) + 32))(v362, v363, v364);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
          }
          v298 = (int *)DecorationPrePlannerResult;
          v365 = *(int *)(DecorationPrePlannerResult + 24);
          v366 = &v9[v365];
          v367 = &v10[v365];
          DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
          v369 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v369 + 48))(v367, 1, DecorationPrePlannerResultPayload))
          {
            v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
            memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
          }
          else
          {
            DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                       - 8)
                                                                           + 48))(v367, 1, DecorationPrePlannerPayloadEnum))
            {
              v489 = (char *)&loc_24056E99C + 4 * word_240901956[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v429 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
            memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
            v619 = *(int *)(DecorationPrePlannerResultPayload + 20);
            v620 = &v366[v619];
            v621 = &v367[v619];
            v622 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v622 - 8) + 32))(v620, v621, v622);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v369 + 56))(v366, 0, 1, DecorationPrePlannerResultPayload);
            v298 = (int *)DecorationPrePlannerResult;
          }
LABEL_278:
          v816 = v298[7];
          v817 = &v9[v816];
          v818 = &v10[v816];
          v819 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v819 - 8) + 32))(v817, v818, v819);
          v14 = v969;
LABEL_279:
          swift_storeEnumTagMultiPayload();
          v3 = v948;
LABEL_280:
          v12 = v974;
          v15 = v978;
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(v15 + 64));
          break;
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
    }
    v820 = *(int *)(v11 + 20);
    v821 = &v9[v820];
    v822 = &v10[v820];
    v823 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v823 - 8) + 32))(v821, v822, v823);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v824 = v3[13];
  *(_OWORD *)(v5 + v3[12]) = *(_OWORD *)(v4 + v3[12]);
  v825 = (_OWORD *)(v5 + v824);
  v826 = (_OWORD *)(v4 + v824);
  v827 = type metadata accessor for TranscriptProtoTimepoint(0);
  v828 = *(_QWORD *)(v827 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v828 + 48))(v826, 1, v827))
  {
    v829 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v825, v826, *(_QWORD *)(*(_QWORD *)(v829 - 8) + 64));
  }
  else
  {
    v1017 = v5;
    v830 = v4;
    v831 = v3;
    v832 = v826[1];
    *v825 = *v826;
    v825[1] = v832;
    v833 = *(int *)(v827 + 28);
    v834 = (char *)v825 + v833;
    v835 = (char *)v826 + v833;
    v836 = sub_2408E5750();
    v837 = *(_QWORD *)(v836 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v837 + 48))(v835, 1, v836))
    {
      v838 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v834, v835, *(_QWORD *)(*(_QWORD *)(v838 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v837 + 32))(v834, v835, v836);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v837 + 56))(v834, 0, 1, v836);
    }
    v839 = *(int *)(v827 + 32);
    v840 = (char *)v825 + v839;
    v841 = (char *)v826 + v839;
    v842 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v842 - 8) + 32))(v840, v841, v842);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v828 + 56))(v825, 0, 1, v827);
    v3 = v831;
    v4 = v830;
    v5 = v1017;
  }
  v843 = v3[14];
  v844 = (void *)(v5 + v843);
  v845 = (const void *)(v4 + v843);
  v846 = sub_2408E5750();
  v847 = *(_QWORD *)(v846 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v847 + 48))(v845, 1, v846))
  {
    v848 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v844, v845, *(_QWORD *)(*(_QWORD *)(v848 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v847 + 32))(v844, v845, v846);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v847 + 56))(v844, 0, 1, v846);
  }
  v849 = v3[15];
  v850 = (_OWORD *)(v5 + v849);
  v851 = (_OWORD *)(v4 + v849);
  v852 = type metadata accessor for TranscriptProtoParticipantID(0);
  v853 = *(_QWORD *)(v852 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v853 + 48))(v851, 1, v852))
  {
    v854 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v850, v851, *(_QWORD *)(*(_QWORD *)(v854 - 8) + 64));
  }
  else
  {
    *v850 = *v851;
    v855 = *(int *)(v852 + 20);
    v856 = (char *)v850 + v855;
    v857 = (char *)v851 + v855;
    v858 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v858 - 8) + 32))(v856, v857, v858);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v853 + 56))(v850, 0, 1, v852);
  }
  v859 = v3[16];
  v860 = (_QWORD *)(v5 + v859);
  v861 = (_QWORD *)(v4 + v859);
  v862 = type metadata accessor for TranscriptProtoSpanID(0);
  v863 = *(_QWORD *)(v862 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v863 + 48))(v861, 1, v862))
  {
    v864 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v860, v861, *(_QWORD *)(*(_QWORD *)(v864 - 8) + 64));
  }
  else
  {
    *v860 = *v861;
    v865 = *(int *)(v862 + 20);
    v866 = (char *)v860 + v865;
    v867 = (char *)v861 + v865;
    v868 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v868 - 8) + 32))(v866, v867, v868);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v863 + 56))(v860, 0, 1, v862);
  }
  v869 = v3[17];
  v870 = v5 + v869;
  v871 = v4 + v869;
  v872 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v872 - 8) + 32))(v870, v871, v872);
  return v5;
}

_QWORD *assignWithTake for TranscriptProtoEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _OWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  _QWORD *v45;
  int *v46;
  uint64_t v47;
  _OWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  int *v55;
  uint64_t v56;
  _DWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int *v81;
  int *v82;
  uint64_t v83;
  _DWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  _DWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _DWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  __int128 v125;
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  _DWORD *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  int *v183;
  uint64_t v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  unsigned int (**v195)(const void *, uint64_t, uint64_t);
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  unsigned int (**v201)(const void *, uint64_t, uint64_t);
  uint64_t v202;
  __int128 v203;
  uint64_t v204;
  _QWORD *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unsigned int (**v212)(_QWORD, uint64_t, uint64_t);
  uint64_t v213;
  uint64_t v214;
  _DWORD *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _DWORD *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int (*v235)(char *, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _DWORD *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  unsigned int (*v243)(char *, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int *v253;
  __int128 v254;
  uint64_t v255;
  uint64_t v256;
  _OWORD *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _DWORD *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  int *v268;
  _QWORD *v269;
  int *v270;
  uint64_t v271;
  _DWORD *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  char *v281;
  uint64_t v282;
  char *v283;
  int *v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  char *v296;
  uint64_t v297;
  char *v298;
  int *v299;
  int *v300;
  uint64_t v301;
  _DWORD *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  int *v307;
  __int128 v308;
  __int128 v309;
  uint64_t v310;
  uint64_t v311;
  _DWORD *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  int *v318;
  _QWORD *v319;
  uint64_t Step;
  uint64_t v321;
  _DWORD *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD *v331;
  int *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  __int128 v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  _QWORD *v340;
  char *v341;
  uint64_t v342;
  char *v343;
  __int128 v344;
  int *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  int *v353;
  uint64_t StepResults;
  uint64_t v355;
  _DWORD *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  int *v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _QWORD *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  _QWORD *v380;
  char *v381;
  uint64_t v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  char *v388;
  uint64_t v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  _QWORD *v394;
  char *v395;
  uint64_t v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  _QWORD *v401;
  char *v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  unsigned int (*v407)(char *, uint64_t, uint64_t);
  int *v408;
  uint64_t v409;
  __int128 v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  _QWORD *v414;
  char *v415;
  uint64_t v416;
  char *v417;
  int *v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  __int128 v425;
  uint64_t v426;
  char *v427;
  char *v428;
  uint64_t v429;
  unsigned int (**v430)(const void *, uint64_t, uint64_t);
  uint64_t v431;
  __int128 v432;
  uint64_t v433;
  _QWORD *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  int *v442;
  uint64_t v443;
  int *DecorationPrePlannerResult;
  uint64_t v445;
  _DWORD *v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  _QWORD *v454;
  char *v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  uint64_t v462;
  uint64_t v463;
  _DWORD *v464;
  char *v465;
  uint64_t v466;
  uint64_t v467;
  unsigned int (*v468)(char *, uint64_t, uint64_t);
  uint64_t v469;
  _QWORD *v470;
  uint64_t v471;
  uint64_t v472;
  _DWORD *v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  unsigned int (*v477)(char *, uint64_t, uint64_t);
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  int *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int *v488;
  __int128 v489;
  uint64_t DecorationResult;
  uint64_t v491;
  _OWORD *v492;
  char *v493;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  _DWORD *v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  __int128 v503;
  uint64_t v504;
  char *v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  _OWORD *v509;
  char *v510;
  uint64_t v511;
  unsigned int (**v512)(_OWORD *, uint64_t, uint64_t);
  uint64_t v513;
  uint64_t v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t v524;
  char *v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  char *v536;
  uint64_t v537;
  uint64_t v538;
  char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  char *v543;
  uint64_t v544;
  char *v545;
  _QWORD *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  char *v557;
  char *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  _DWORD *v562;
  char *v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  char *v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  _DWORD *v573;
  char *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  char *v581;
  char *v582;
  uint64_t v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  char *v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  _QWORD *v593;
  char *v594;
  char *v595;
  uint64_t v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  char *v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  __int128 v604;
  uint64_t v605;
  _QWORD *v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  char *v614;
  uint64_t v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  _DWORD *v619;
  char *v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  char *v625;
  uint64_t v626;
  char *v627;
  uint64_t v628;
  uint64_t v629;
  _DWORD *v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  char *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  char *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  char *v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  _DWORD *v650;
  char *v651;
  uint64_t v652;
  _QWORD *v653;
  uint64_t v654;
  __int128 v655;
  uint64_t v656;
  char *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  char *v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  char *v670;
  uint64_t v671;
  unsigned int (**v672)(const void *, uint64_t, uint64_t);
  uint64_t v673;
  uint64_t v674;
  _OWORD *v675;
  _DWORD *v676;
  char *v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  char *v682;
  char *v683;
  uint64_t v684;
  char *v685;
  uint64_t v686;
  uint64_t v687;
  char *v688;
  uint64_t v689;
  uint64_t v690;
  char *v691;
  char *v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  char *v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  char *v701;
  char *v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  char *v706;
  uint64_t v707;
  uint64_t v708;
  char *v709;
  char *v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  char *v714;
  uint64_t v715;
  uint64_t v716;
  char *v717;
  char *v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  _DWORD *v722;
  char *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  _QWORD *v728;
  uint64_t v729;
  char *v730;
  char *v731;
  uint64_t v732;
  char *v733;
  uint64_t v734;
  uint64_t v735;
  _DWORD *v736;
  char *v737;
  uint64_t v738;
  char *v739;
  uint64_t v740;
  uint64_t v741;
  char *v742;
  uint64_t v743;
  char *v744;
  char *v745;
  uint64_t v746;
  char *v747;
  uint64_t v748;
  uint64_t v749;
  char *v750;
  uint64_t v751;
  uint64_t v752;
  char *v753;
  char *v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  char *v758;
  uint64_t v759;
  __int128 v760;
  uint64_t v761;
  int *v762;
  char *v763;
  char *v764;
  uint64_t v765;
  char *v766;
  uint64_t v767;
  _OWORD *v768;
  char *v769;
  uint64_t v770;
  unsigned int (**v771)(_OWORD *, uint64_t, uint64_t);
  uint64_t v772;
  int *v773;
  int *v774;
  uint64_t v775;
  _DWORD *v776;
  char *v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  _QWORD *v783;
  char *v784;
  uint64_t v785;
  char *v786;
  int *v787;
  uint64_t v788;
  char *v789;
  char *v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  __int128 v794;
  uint64_t v795;
  uint64_t v796;
  _QWORD *v797;
  char *v798;
  uint64_t v799;
  char *v800;
  int *v801;
  int *v802;
  uint64_t v803;
  _DWORD *v804;
  char *v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  int *v809;
  __int128 v810;
  __int128 v811;
  uint64_t v812;
  uint64_t v813;
  _DWORD *v814;
  char *v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  int *v819;
  uint64_t v820;
  uint64_t v821;
  _DWORD *v822;
  char *v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  _QWORD *v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  __int128 v834;
  uint64_t v835;
  uint64_t v836;
  _QWORD *v837;
  char *v838;
  uint64_t v839;
  char *v840;
  _QWORD *v841;
  __int128 v842;
  int *v843;
  uint64_t v844;
  char *v845;
  char *v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  int *v850;
  uint64_t v851;
  uint64_t v852;
  _DWORD *v853;
  char *v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  int *v858;
  uint64_t v859;
  uint64_t v860;
  _QWORD *v861;
  char *v862;
  uint64_t v863;
  uint64_t v864;
  _QWORD *v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  _QWORD *v869;
  char *v870;
  uint64_t v871;
  char *v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  _QWORD *v876;
  char *v877;
  uint64_t v878;
  char *v879;
  uint64_t v880;
  uint64_t v881;
  _QWORD *v882;
  char *v883;
  uint64_t v884;
  char *v885;
  uint64_t v886;
  uint64_t v887;
  _QWORD *v888;
  char *v889;
  uint64_t v890;
  char *v891;
  uint64_t v892;
  uint64_t v893;
  _QWORD *v894;
  char *v895;
  uint64_t v896;
  char *v897;
  uint64_t v898;
  uint64_t v899;
  unsigned int (*v900)(char *, uint64_t, uint64_t);
  _QWORD *v901;
  uint64_t v902;
  __int128 v903;
  uint64_t v904;
  uint64_t v905;
  _QWORD *v906;
  char *v907;
  uint64_t v908;
  char *v909;
  int *v910;
  uint64_t v911;
  char *v912;
  char *v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  __int128 v917;
  uint64_t v918;
  char *v919;
  char *v920;
  uint64_t v921;
  int *v922;
  uint64_t v923;
  __int128 v924;
  uint64_t v925;
  _QWORD *v926;
  char *v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  int *v935;
  uint64_t v936;
  _DWORD *v937;
  char *v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  _QWORD *v944;
  char *v945;
  uint64_t v946;
  char *v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  _QWORD *v951;
  uint64_t v952;
  uint64_t v953;
  _DWORD *v954;
  char *v955;
  uint64_t v956;
  uint64_t v957;
  unsigned int (*v958)(char *, uint64_t, uint64_t);
  uint64_t v959;
  _QWORD *v960;
  uint64_t v961;
  uint64_t v962;
  _DWORD *v963;
  char *v964;
  uint64_t v965;
  uint64_t v966;
  unsigned int (*v967)(char *, uint64_t, uint64_t);
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  int *v971;
  _QWORD *v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  _QWORD *v976;
  uint64_t v977;
  int *v978;
  __int128 v979;
  uint64_t v980;
  uint64_t v981;
  _OWORD *v982;
  char *v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  _DWORD *v988;
  char *v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  char *v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  char *v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  char *v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  char *v1007;
  uint64_t v1008;
  uint64_t v1009;
  char *v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  char *v1014;
  uint64_t v1015;
  uint64_t v1016;
  char *v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  char *v1021;
  uint64_t v1022;
  char *v1023;
  _QWORD *v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  char *v1032;
  uint64_t v1033;
  uint64_t v1034;
  char *v1035;
  char *v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  _DWORD *v1040;
  char *v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  char *v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  _DWORD *v1051;
  char *v1052;
  uint64_t v1053;
  uint64_t v1054;
  int *v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  char *v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  char *v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  _QWORD *v1071;
  char *v1072;
  char *v1073;
  uint64_t v1074;
  char *v1075;
  uint64_t v1076;
  char *v1077;
  char *v1078;
  uint64_t v1079;
  unsigned int (**v1080)(const void *, uint64_t, uint64_t);
  uint64_t v1081;
  __int128 v1082;
  uint64_t v1083;
  _QWORD *v1084;
  char *v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  char *v1091;
  char *v1092;
  uint64_t v1093;
  char *v1094;
  uint64_t v1095;
  uint64_t v1096;
  _DWORD *v1097;
  char *v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  char *v1102;
  char *v1103;
  uint64_t v1104;
  char *v1105;
  uint64_t v1106;
  uint64_t v1107;
  _DWORD *v1108;
  char *v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  char *v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  _QWORD *v1117;
  char *v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  char *v1124;
  uint64_t v1125;
  int *v1126;
  uint64_t v1127;
  _DWORD *v1128;
  char *v1129;
  uint64_t v1130;
  uint64_t v1131;
  unsigned int (*v1132)(char *, uint64_t, uint64_t);
  uint64_t v1133;
  __int128 v1134;
  uint64_t v1135;
  char *v1136;
  char *v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  char *v1141;
  uint64_t v1142;
  uint64_t v1143;
  char *v1144;
  char *v1145;
  uint64_t v1146;
  uint64_t v1147;
  char *v1148;
  char *v1149;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v1151;
  uint64_t v1152;
  char *v1153;
  __int128 v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  char *v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  char *v1163;
  uint64_t v1164;
  int v1165;
  uint64_t v1166;
  char *v1167;
  uint64_t v1168;
  char *v1169;
  uint64_t v1170;
  uint64_t v1171;
  char *v1172;
  uint64_t v1173;
  char *v1174;
  char *v1175;
  uint64_t v1176;
  int *v1177;
  uint64_t v1178;
  _OWORD *v1179;
  char *v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  char *v1185;
  uint64_t v1186;
  uint64_t v1187;
  char *v1188;
  char *v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  char *v1193;
  uint64_t v1194;
  char *v1195;
  char *v1196;
  uint64_t v1197;
  _DWORD *v1198;
  char *v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  char *v1204;
  char *v1205;
  uint64_t v1206;
  char *v1207;
  uint64_t v1208;
  uint64_t v1209;
  char *v1210;
  uint64_t v1211;
  uint64_t v1212;
  char *v1213;
  char *v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  char *v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  char *v1223;
  char *v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  char *v1228;
  uint64_t v1229;
  uint64_t v1230;
  char *v1231;
  char *v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  char *v1236;
  uint64_t v1237;
  uint64_t v1238;
  char *v1239;
  char *v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  _DWORD *v1244;
  char *v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  char *v1250;
  char *v1251;
  uint64_t v1252;
  uint64_t v1253;
  _DWORD *v1254;
  char *v1255;
  uint64_t v1256;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v1258;
  __int128 v1259;
  __int128 v1260;
  uint64_t v1261;
  char *v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  char *v1267;
  char *v1268;
  uint64_t v1269;
  char *v1270;
  uint64_t v1271;
  uint64_t v1272;
  char *v1273;
  uint64_t v1274;
  uint64_t v1275;
  char *v1276;
  char *v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  char *v1281;
  uint64_t v1282;
  __int128 v1283;
  uint64_t v1284;
  int *v1285;
  char *v1286;
  char *v1287;
  uint64_t v1288;
  char *v1289;
  uint64_t v1290;
  _OWORD *v1291;
  char *v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  uint64_t v1296;
  char *v1297;
  char *v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  char *v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  char *v1307;
  char *v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  char *v1312;
  uint64_t v1313;
  uint64_t v1314;
  char *v1315;
  char *v1316;
  uint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  char *v1320;
  uint64_t v1321;
  uint64_t v1322;
  char *v1323;
  char *v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  char *v1328;
  uint64_t v1329;
  char *v1330;
  _QWORD *v1331;
  uint64_t v1332;
  uint64_t v1333;
  uint64_t v1334;
  uint64_t v1335;
  _QWORD *v1336;
  uint64_t v1337;
  uint64_t v1338;
  uint64_t v1339;
  uint64_t v1340;
  char *v1341;
  char *v1342;
  uint64_t v1343;
  uint64_t v1344;
  char *v1345;
  char *v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  _DWORD *v1350;
  char *v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  char *v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  _DWORD *v1361;
  char *v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  uint64_t v1368;
  char *v1369;
  uint64_t v1370;
  uint64_t v1371;
  char *v1372;
  char *v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  char *v1377;
  uint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  uint64_t v1381;
  int *v1382;
  char *v1383;
  char *v1384;
  uint64_t v1385;
  char *v1386;
  uint64_t v1387;
  char *v1388;
  char *v1389;
  uint64_t v1390;
  uint64_t v1391;
  uint64_t v1392;
  __int128 v1393;
  int *v1394;
  uint64_t v1395;
  _QWORD *v1396;
  char *v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  char *v1403;
  char *v1404;
  uint64_t v1405;
  char *v1406;
  uint64_t v1407;
  uint64_t v1408;
  _DWORD *v1409;
  char *v1410;
  uint64_t v1411;
  uint64_t v1412;
  uint64_t v1413;
  char *v1414;
  char *v1415;
  uint64_t v1416;
  char *v1417;
  uint64_t v1418;
  uint64_t v1419;
  _DWORD *v1420;
  char *v1421;
  uint64_t v1422;
  uint64_t v1423;
  uint64_t v1424;
  char *v1425;
  uint64_t v1426;
  uint64_t v1427;
  uint64_t v1428;
  _QWORD *v1429;
  char *v1430;
  uint64_t v1431;
  uint64_t v1432;
  uint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  char *v1436;
  uint64_t v1437;
  int *v1438;
  uint64_t v1439;
  _DWORD *v1440;
  char *v1441;
  uint64_t v1442;
  uint64_t v1443;
  unsigned int (*v1444)(char *, uint64_t, uint64_t);
  uint64_t v1445;
  __int128 v1446;
  uint64_t v1447;
  char *v1448;
  char *v1449;
  uint64_t v1450;
  uint64_t v1451;
  uint64_t v1452;
  char *v1453;
  uint64_t v1454;
  uint64_t v1455;
  int *v1456;
  char *v1457;
  char *v1458;
  uint64_t v1459;
  char *v1460;
  uint64_t v1461;
  char *v1462;
  char *v1463;
  uint64_t v1464;
  uint64_t v1465;
  uint64_t v1466;
  char *v1467;
  __int128 v1468;
  uint64_t v1469;
  uint64_t v1470;
  char *v1471;
  uint64_t v1472;
  uint64_t v1473;
  uint64_t v1474;
  char *v1475;
  uint64_t v1476;
  uint64_t v1477;
  uint64_t v1478;
  char *v1479;
  uint64_t v1480;
  uint64_t v1481;
  int EnumCaseMultiPayload;
  uint64_t v1483;
  uint64_t v1484;
  char *v1485;
  uint64_t v1486;
  char *v1487;
  uint64_t v1488;
  uint64_t v1489;
  char *v1490;
  uint64_t v1491;
  char *v1492;
  char *v1493;
  uint64_t v1494;
  int *v1495;
  uint64_t v1496;
  _OWORD *v1497;
  char *v1498;
  uint64_t v1499;
  unsigned int (**v1500)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1501;
  char *v1502;
  uint64_t v1503;
  char *v1504;
  uint64_t v1505;
  uint64_t v1506;
  char *v1507;
  char *v1508;
  uint64_t v1509;
  uint64_t v1510;
  uint64_t v1511;
  char *v1512;
  uint64_t v1513;
  char *v1514;
  char *v1515;
  uint64_t v1516;
  char *v1517;
  uint64_t v1518;
  uint64_t v1519;
  char *v1520;
  char *v1521;
  uint64_t v1522;
  uint64_t v1523;
  _OWORD *v1524;
  char *v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  __int128 v1529;
  uint64_t v1530;
  char *v1531;
  char *v1532;
  uint64_t v1533;
  char *v1534;
  uint64_t v1535;
  _OWORD *v1536;
  char *v1537;
  uint64_t v1538;
  unsigned int (**v1539)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1540;
  uint64_t v1541;
  uint64_t v1542;
  uint64_t v1543;
  uint64_t v1544;
  _DWORD *v1545;
  char *v1546;
  uint64_t v1547;
  uint64_t v1548;
  uint64_t v1549;
  uint64_t v1550;
  char *v1551;
  char *v1552;
  uint64_t v1553;
  char *v1554;
  uint64_t v1555;
  uint64_t v1556;
  char *v1557;
  uint64_t v1558;
  uint64_t v1559;
  char *v1560;
  char *v1561;
  uint64_t v1562;
  uint64_t v1563;
  uint64_t v1564;
  char *v1565;
  uint64_t v1566;
  uint64_t v1567;
  _QWORD *v1568;
  uint64_t v1569;
  uint64_t v1570;
  uint64_t v1571;
  char *v1572;
  char *v1573;
  uint64_t v1574;
  uint64_t v1575;
  uint64_t v1576;
  char *v1577;
  uint64_t v1578;
  uint64_t v1579;
  char *v1580;
  char *v1581;
  uint64_t v1582;
  uint64_t v1583;
  uint64_t v1584;
  char *v1585;
  uint64_t v1586;
  uint64_t v1587;
  char *v1588;
  char *v1589;
  uint64_t v1590;
  uint64_t v1591;
  uint64_t v1592;
  _DWORD *v1593;
  char *v1594;
  uint64_t v1595;
  uint64_t v1596;
  uint64_t v1597;
  uint64_t v1598;
  char *v1599;
  char *v1600;
  uint64_t v1601;
  uint64_t v1602;
  _DWORD *v1603;
  char *v1604;
  uint64_t v1605;
  uint64_t v1606;
  uint64_t v1607;
  uint64_t v1608;
  __int128 v1609;
  __int128 v1610;
  uint64_t v1611;
  _OWORD *v1612;
  char *v1613;
  uint64_t v1614;
  uint64_t v1615;
  uint64_t v1616;
  uint64_t v1617;
  uint64_t v1618;
  uint64_t v1619;
  char *v1620;
  uint64_t v1621;
  uint64_t v1622;
  char *v1623;
  char *v1624;
  uint64_t v1625;
  char *v1626;
  uint64_t v1627;
  uint64_t v1628;
  char *v1629;
  uint64_t v1630;
  uint64_t v1631;
  char *v1632;
  char *v1633;
  uint64_t v1634;
  uint64_t v1635;
  uint64_t v1636;
  char *v1637;
  uint64_t v1638;
  uint64_t v1639;
  uint64_t v1640;
  char *v1641;
  uint64_t v1642;
  uint64_t v1643;
  char *v1644;
  char *v1645;
  uint64_t v1646;
  uint64_t v1647;
  _DWORD *v1648;
  char *v1649;
  uint64_t v1650;
  uint64_t v1651;
  uint64_t v1652;
  uint64_t v1653;
  int *v1654;
  char *v1655;
  char *v1656;
  uint64_t v1657;
  char *v1658;
  uint64_t v1659;
  _QWORD *v1660;
  char *v1661;
  uint64_t v1662;
  unsigned int (**v1663)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1664;
  uint64_t v1665;
  uint64_t v1666;
  uint64_t v1667;
  int v1668;
  uint64_t v1669;
  uint64_t v1670;
  _DWORD *v1671;
  char *v1672;
  uint64_t v1673;
  uint64_t v1674;
  char *v1675;
  uint64_t v1676;
  uint64_t v1677;
  char *v1678;
  char *v1679;
  uint64_t v1680;
  uint64_t v1681;
  _OWORD *v1682;
  char *v1683;
  uint64_t v1684;
  uint64_t v1685;
  __int128 v1686;
  uint64_t v1687;
  char *v1688;
  uint64_t v1689;
  uint64_t v1690;
  uint64_t v1691;
  uint64_t v1692;
  uint64_t v1693;
  char *v1694;
  uint64_t v1695;
  uint64_t v1696;
  char *v1697;
  char *v1698;
  uint64_t v1699;
  uint64_t v1700;
  _OWORD *v1701;
  char *v1702;
  uint64_t v1703;
  __int128 v1704;
  uint64_t v1705;
  char *v1706;
  uint64_t v1707;
  uint64_t v1708;
  uint64_t v1709;
  uint64_t v1710;
  uint64_t v1711;
  char *v1712;
  uint64_t v1713;
  uint64_t v1714;
  char *v1715;
  char *v1716;
  uint64_t v1717;
  uint64_t v1718;
  int *v1719;
  uint64_t v1720;
  char *v1721;
  uint64_t v1722;
  int *v1723;
  uint64_t v1724;
  _DWORD *v1725;
  char *v1726;
  uint64_t v1727;
  uint64_t v1728;
  uint64_t v1729;
  uint64_t v1730;
  char *v1731;
  uint64_t v1732;
  uint64_t v1733;
  _DWORD *v1734;
  char *v1735;
  uint64_t v1736;
  uint64_t v1737;
  char *v1738;
  char *v1739;
  uint64_t v1740;
  uint64_t v1741;
  uint64_t v1742;
  char *v1743;
  uint64_t v1744;
  uint64_t v1745;
  char *v1746;
  char *v1747;
  uint64_t v1748;
  uint64_t v1749;
  uint64_t v1750;
  char *v1751;
  uint64_t v1752;
  char *v1753;
  __int128 v1754;
  uint64_t v1755;
  char *v1756;
  uint64_t v1757;
  uint64_t v1758;
  uint64_t v1759;
  char *v1760;
  uint64_t v1761;
  uint64_t v1762;
  uint64_t v1763;
  char *v1764;
  uint64_t v1765;
  int v1766;
  uint64_t v1767;
  uint64_t v1768;
  char *v1769;
  uint64_t v1770;
  char *v1771;
  uint64_t v1772;
  char *v1773;
  char *v1774;
  uint64_t v1775;
  uint64_t v1776;
  _OWORD *v1777;
  char *v1778;
  uint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  char *v1782;
  uint64_t v1783;
  char *v1784;
  uint64_t v1785;
  uint64_t v1786;
  char *v1787;
  char *v1788;
  uint64_t v1789;
  uint64_t v1790;
  uint64_t v1791;
  char *v1792;
  uint64_t v1793;
  char *v1794;
  char *v1795;
  uint64_t v1796;
  char *v1797;
  uint64_t v1798;
  uint64_t v1799;
  char *v1800;
  char *v1801;
  uint64_t v1802;
  uint64_t v1803;
  _OWORD *v1804;
  char *v1805;
  uint64_t v1806;
  uint64_t v1807;
  uint64_t v1808;
  __int128 v1809;
  uint64_t v1810;
  char *v1811;
  char *v1812;
  uint64_t v1813;
  char *v1814;
  uint64_t v1815;
  _OWORD *v1816;
  char *v1817;
  uint64_t v1818;
  unsigned int (**v1819)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1820;
  uint64_t v1821;
  uint64_t v1822;
  uint64_t v1823;
  __int128 v1824;
  __int128 v1825;
  uint64_t v1826;
  _OWORD *v1827;
  char *v1828;
  uint64_t v1829;
  uint64_t v1830;
  uint64_t v1831;
  uint64_t v1832;
  uint64_t v1833;
  uint64_t v1834;
  char *v1835;
  uint64_t v1836;
  uint64_t v1837;
  char *v1838;
  char *v1839;
  uint64_t v1840;
  uint64_t v1841;
  char *v1842;
  char *v1843;
  uint64_t v1844;
  uint64_t v1845;
  uint64_t v1846;
  char *v1847;
  uint64_t v1848;
  uint64_t v1849;
  uint64_t v1850;
  char *v1851;
  uint64_t v1852;
  uint64_t v1853;
  char *v1854;
  char *v1855;
  uint64_t v1856;
  uint64_t v1857;
  _DWORD *v1858;
  char *v1859;
  uint64_t v1860;
  uint64_t v1861;
  uint64_t v1862;
  uint64_t v1863;
  int *v1864;
  char *v1865;
  char *v1866;
  uint64_t v1867;
  char *v1868;
  uint64_t v1869;
  _QWORD *v1870;
  char *v1871;
  uint64_t v1872;
  unsigned int (**v1873)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1874;
  uint64_t v1875;
  uint64_t v1876;
  uint64_t v1877;
  uint64_t v1878;
  int v1879;
  uint64_t v1880;
  uint64_t v1881;
  _DWORD *v1882;
  char *v1883;
  uint64_t v1884;
  uint64_t v1885;
  char *v1886;
  char *v1887;
  uint64_t v1888;
  uint64_t v1889;
  uint64_t v1890;
  char *v1891;
  uint64_t v1892;
  uint64_t v1893;
  char *v1894;
  char *v1895;
  uint64_t v1896;
  uint64_t v1897;
  _OWORD *v1898;
  char *v1899;
  uint64_t v1900;
  _QWORD *v1901;
  uint64_t v1902;
  uint64_t v1903;
  __int128 v1904;
  uint64_t v1905;
  _OWORD *v1906;
  char *v1907;
  uint64_t v1908;
  uint64_t v1909;
  uint64_t v1910;
  uint64_t v1911;
  uint64_t v1912;
  char *v1913;
  uint64_t v1914;
  uint64_t v1915;
  char *v1916;
  char *v1917;
  uint64_t v1918;
  uint64_t v1919;
  _OWORD *v1920;
  char *v1921;
  uint64_t v1922;
  uint64_t v1923;
  __int128 v1924;
  uint64_t v1925;
  _OWORD *v1926;
  char *v1927;
  uint64_t v1928;
  uint64_t v1929;
  uint64_t v1930;
  uint64_t v1931;
  char *v1932;
  uint64_t v1933;
  uint64_t v1934;
  char *v1935;
  char *v1936;
  uint64_t v1937;
  uint64_t v1938;
  int *v1939;
  uint64_t v1940;
  char *v1941;
  uint64_t v1942;
  int *v1943;
  uint64_t v1944;
  _DWORD *v1945;
  char *v1946;
  uint64_t v1947;
  uint64_t v1948;
  unsigned int (*v1949)(char *, uint64_t, uint64_t);
  uint64_t v1950;
  uint64_t v1951;
  char *v1952;
  char *v1953;
  uint64_t v1954;
  uint64_t v1955;
  _DWORD *v1956;
  char *v1957;
  uint64_t v1958;
  uint64_t v1959;
  char *v1960;
  char *v1961;
  uint64_t v1962;
  uint64_t v1963;
  uint64_t v1964;
  char *v1965;
  uint64_t v1966;
  uint64_t v1967;
  char *v1968;
  char *v1969;
  uint64_t v1970;
  char *v1971;
  uint64_t v1972;
  char *v1973;
  char *v1974;
  uint64_t v1975;
  uint64_t v1976;
  char *v1977;
  char *v1978;
  uint64_t v1979;
  uint64_t v1980;
  char *v1981;
  char *v1982;
  uint64_t v1983;
  uint64_t v1984;
  uint64_t v1985;
  __int128 v1986;
  uint64_t v1987;
  char *v1988;
  char *v1989;
  uint64_t v1990;
  uint64_t v1991;
  char *v1992;
  char *v1993;
  uint64_t v1994;
  uint64_t v1995;
  uint64_t v1996;
  uint64_t v1997;
  uint64_t v1998;
  uint64_t v1999;
  uint64_t v2000;
  char *v2001;
  char *v2002;
  uint64_t v2003;
  uint64_t v2004;
  char *v2005;
  uint64_t v2006;
  uint64_t v2007;
  char *v2008;
  char *v2009;
  uint64_t v2010;
  uint64_t v2011;
  char *v2012;
  char *v2013;
  uint64_t v2014;
  uint64_t v2015;
  uint64_t v2016;
  char *v2017;
  uint64_t v2018;
  uint64_t v2019;
  uint64_t v2020;
  uint64_t v2021;
  uint64_t v2022;
  char *v2023;
  char *v2024;
  uint64_t v2025;
  uint64_t v2026;
  _DWORD *v2027;
  char *v2028;
  uint64_t v2029;
  unsigned int (*v2030)(void);
  uint64_t v2031;
  uint64_t v2032;
  char *v2033;
  char *v2034;
  uint64_t v2035;
  uint64_t v2036;
  void *v2037;
  char *v2038;
  uint64_t v2039;
  uint64_t v2040;
  _QWORD *v2041;
  uint64_t v2042;
  uint64_t v2043;
  uint64_t v2044;
  _QWORD *v2045;
  int v2046;
  uint64_t v2047;
  char *v2048;
  uint64_t v2049;
  uint64_t v2050;
  char *v2051;
  char *v2052;
  uint64_t v2053;
  uint64_t v2054;
  uint64_t v2055;
  char *v2056;
  uint64_t v2057;
  uint64_t v2058;
  char *v2059;
  char *v2060;
  uint64_t v2061;
  uint64_t v2062;
  char *v2063;
  char *v2064;
  uint64_t v2065;
  uint64_t v2066;
  unsigned int (*v2067)(char *, uint64_t, uint64_t);
  uint64_t v2068;
  __int128 v2069;
  uint64_t v2070;
  char *v2071;
  char *v2072;
  uint64_t v2073;
  uint64_t v2074;
  uint64_t v2075;
  uint64_t v2076;
  uint64_t v2077;
  char *v2078;
  uint64_t v2079;
  uint64_t v2080;
  char *v2081;
  char *v2082;
  uint64_t v2083;
  uint64_t v2084;
  char *v2085;
  char *v2086;
  uint64_t v2087;
  __int128 v2088;
  uint64_t v2089;
  char *v2090;
  char *v2091;
  uint64_t v2092;
  uint64_t v2093;
  uint64_t v2094;
  uint64_t v2095;
  char *v2096;
  char *v2097;
  uint64_t v2098;
  uint64_t v2099;
  char *v2100;
  char *v2101;
  uint64_t v2102;
  uint64_t v2103;
  char *v2104;
  char *v2105;
  uint64_t v2106;
  int *v2107;
  uint64_t v2108;
  _DWORD *v2109;
  char *v2110;
  uint64_t v2111;
  uint64_t v2112;
  unsigned int (*v2113)(char *, uint64_t, uint64_t);
  uint64_t v2114;
  uint64_t v2115;
  char *v2116;
  char *v2117;
  uint64_t v2118;
  uint64_t v2119;
  _DWORD *v2120;
  char *v2121;
  uint64_t v2122;
  uint64_t v2123;
  char *v2124;
  char *v2125;
  uint64_t v2126;
  uint64_t v2127;
  uint64_t v2128;
  char *v2129;
  uint64_t v2130;
  uint64_t v2131;
  char *v2132;
  char *v2133;
  uint64_t v2134;
  uint64_t v2135;
  char *v2136;
  uint64_t v2137;
  uint64_t v2138;
  char *v2139;
  char *v2140;
  uint64_t v2141;
  uint64_t v2142;
  char *v2143;
  char *v2144;
  uint64_t v2145;
  uint64_t v2146;
  uint64_t v2147;
  char *v2148;
  uint64_t v2149;
  uint64_t v2150;
  uint64_t v2151;
  char *v2152;
  uint64_t v2153;
  uint64_t v2154;
  char *v2155;
  char *v2156;
  uint64_t v2157;
  uint64_t v2158;
  char *v2159;
  uint64_t v2160;
  unsigned int (**v2161)(const void *, uint64_t, uint64_t);
  uint64_t v2162;
  int *v2163;
  uint64_t v2164;
  uint64_t v2165;
  char *v2166;
  uint64_t v2167;
  char *v2168;
  char *v2169;
  uint64_t v2170;
  uint64_t v2171;
  _QWORD *v2172;
  char *v2173;
  uint64_t v2174;
  uint64_t v2175;
  uint64_t v2176;
  uint64_t v2177;
  char *v2178;
  char *v2179;
  uint64_t v2180;
  uint64_t v2181;
  uint64_t v2182;
  char *v2183;
  uint64_t v2184;
  uint64_t v2185;
  uint64_t v2186;
  char *v2187;
  uint64_t v2188;
  int *v2189;
  uint64_t v2190;
  _QWORD *v2191;
  char *v2192;
  uint64_t v2193;
  uint64_t v2194;
  uint64_t v2195;
  uint64_t v2196;
  char *v2197;
  uint64_t v2198;
  uint64_t v2199;
  uint64_t v2200;
  char *v2201;
  uint64_t v2202;
  uint64_t v2203;
  char *v2204;
  char *v2205;
  uint64_t v2206;
  uint64_t v2207;
  char *v2208;
  char *v2209;
  uint64_t v2210;
  uint64_t v2211;
  uint64_t v2212;
  int *v2213;
  uint64_t v2214;
  uint64_t v2215;
  char *v2216;
  uint64_t v2217;
  char *v2218;
  char *v2219;
  uint64_t v2220;
  uint64_t v2221;
  _QWORD *v2222;
  char *v2223;
  uint64_t v2224;
  uint64_t v2225;
  uint64_t v2226;
  uint64_t v2227;
  int *v2228;
  char *v2229;
  char *v2230;
  uint64_t v2231;
  char *v2232;
  uint64_t v2233;
  uint64_t v2234;
  char *v2235;
  uint64_t v2236;
  uint64_t v2237;
  uint64_t v2238;
  char *v2239;
  uint64_t v2240;
  int *v2241;
  uint64_t v2242;
  _QWORD *v2243;
  char *v2244;
  uint64_t v2245;
  uint64_t v2246;
  uint64_t v2247;
  uint64_t v2248;
  char *v2249;
  uint64_t v2250;
  uint64_t v2251;
  uint64_t v2252;
  char *v2253;
  uint64_t v2254;
  uint64_t v2255;
  char *v2256;
  char *v2257;
  uint64_t v2258;
  uint64_t v2259;
  char *v2260;
  char *v2261;
  uint64_t v2262;
  uint64_t v2263;
  uint64_t v2264;
  uint64_t v2265;
  uint64_t v2266;
  char *v2267;
  uint64_t v2268;
  char *v2269;
  char *v2270;
  uint64_t v2271;
  uint64_t v2272;
  _QWORD *v2273;
  char *v2274;
  uint64_t v2275;
  uint64_t v2276;
  uint64_t v2277;
  uint64_t v2278;
  int *v2279;
  char *v2280;
  char *v2281;
  uint64_t v2282;
  char *v2283;
  uint64_t v2284;
  uint64_t v2285;
  char *v2286;
  uint64_t v2287;
  uint64_t v2288;
  uint64_t v2289;
  char *v2290;
  uint64_t v2291;
  int *v2292;
  uint64_t v2293;
  _QWORD *v2294;
  char *v2295;
  uint64_t v2296;
  uint64_t v2297;
  uint64_t v2298;
  uint64_t v2299;
  char *v2300;
  char *v2301;
  uint64_t v2302;
  uint64_t v2303;
  uint64_t v2304;
  char *v2305;
  uint64_t v2306;
  uint64_t v2307;
  char *v2308;
  char *v2309;
  uint64_t v2310;
  uint64_t v2311;
  _QWORD *v2312;
  char *v2313;
  uint64_t v2314;
  unsigned int (**v2315)(_QWORD *, uint64_t, uint64_t);
  uint64_t v2316;
  uint64_t v2317;
  char *v2318;
  uint64_t v2319;
  uint64_t v2320;
  char *v2321;
  uint64_t v2322;
  uint64_t v2323;
  char *v2324;
  uint64_t v2325;
  char *v2326;
  uint64_t v2327;
  uint64_t v2328;
  char *v2329;
  char *v2330;
  uint64_t v2331;
  uint64_t v2332;
  char *v2333;
  uint64_t v2334;
  char *v2335;
  uint64_t v2336;
  char *v2337;
  char *v2338;
  uint64_t v2339;
  uint64_t v2340;
  char *v2341;
  char *v2342;
  uint64_t v2343;
  uint64_t v2344;
  _DWORD *v2345;
  char *v2346;
  uint64_t v2347;
  uint64_t v2348;
  uint64_t v2349;
  uint64_t v2350;
  char *v2351;
  char *v2352;
  uint64_t v2353;
  uint64_t v2354;
  uint64_t v2355;
  char *v2356;
  uint64_t v2357;
  uint64_t v2358;
  uint64_t v2359;
  char *v2360;
  uint64_t v2361;
  uint64_t v2362;
  char *v2363;
  char *v2364;
  uint64_t v2365;
  uint64_t v2366;
  uint64_t v2367;
  char *v2368;
  uint64_t v2369;
  uint64_t v2370;
  char *v2371;
  char *v2372;
  uint64_t v2373;
  uint64_t v2374;
  _QWORD *v2375;
  char *v2376;
  uint64_t v2377;
  void *v2378;
  uint64_t v2379;
  uint64_t v2380;
  char *v2381;
  uint64_t v2382;
  _QWORD *v2383;
  uint64_t v2384;
  int *v2385;
  uint64_t v2386;
  uint64_t v2387;
  char *v2388;
  uint64_t v2389;
  char *v2390;
  char *v2391;
  uint64_t v2392;
  uint64_t v2393;
  uint64_t v2394;
  char *v2395;
  int *v2396;
  uint64_t v2397;
  uint64_t v2398;
  _QWORD *v2399;
  uint64_t v2400;
  uint64_t v2401;
  uint64_t v2402;
  char *v2403;
  uint64_t v2404;
  uint64_t v2405;
  char *v2406;
  char *v2407;
  uint64_t v2408;
  uint64_t v2409;
  char *v2410;
  char *v2411;
  uint64_t v2412;
  uint64_t v2413;
  _DWORD *v2414;
  char *v2415;
  uint64_t v2416;
  uint64_t v2417;
  uint64_t v2418;
  uint64_t v2419;
  int *v2420;
  char *v2421;
  char *v2422;
  uint64_t v2423;
  char *v2424;
  uint64_t v2425;
  uint64_t v2426;
  char *v2427;
  uint64_t v2428;
  uint64_t v2429;
  uint64_t v2430;
  char *v2431;
  char *v2432;
  uint64_t v2433;
  char *v2434;
  int *v2435;
  uint64_t v2436;
  char *v2437;
  char *v2438;
  int *v2439;
  unsigned int (**v2440)(_QWORD *, uint64_t, int *);
  uint64_t v2441;
  uint64_t v2442;
  char *v2443;
  char *v2444;
  uint64_t v2445;
  uint64_t v2446;
  uint64_t v2447;
  __int128 v2448;
  __int128 v2449;
  uint64_t v2450;
  char *v2451;
  uint64_t v2452;
  uint64_t v2453;
  _OWORD *v2454;
  char *v2455;
  uint64_t v2456;
  uint64_t v2457;
  uint64_t v2458;
  uint64_t v2459;
  char *v2460;
  uint64_t v2461;
  uint64_t v2462;
  char *v2463;
  _QWORD *v2464;
  int *v2465;
  char *v2466;
  uint64_t v2467;
  uint64_t v2468;
  char *v2469;
  char *v2470;
  uint64_t v2471;
  uint64_t v2472;
  _DWORD *v2473;
  char *v2474;
  uint64_t v2475;
  uint64_t v2476;
  uint64_t v2477;
  uint64_t v2478;
  char *v2479;
  char *v2480;
  uint64_t v2481;
  uint64_t v2482;
  _DWORD *v2483;
  char *v2484;
  uint64_t v2485;
  uint64_t v2486;
  char *v2487;
  char *v2488;
  uint64_t v2489;
  char *v2490;
  uint64_t v2491;
  _DWORD *v2492;
  char *v2493;
  uint64_t v2494;
  uint64_t v2495;
  char *v2496;
  char *v2497;
  uint64_t v2498;
  char *v2499;
  uint64_t v2500;
  uint64_t v2501;
  char *v2502;
  uint64_t v2503;
  uint64_t v2504;
  char *v2505;
  char *v2506;
  uint64_t v2507;
  uint64_t v2508;
  uint64_t v2509;
  char *v2510;
  uint64_t v2511;
  uint64_t v2512;
  uint64_t v2513;
  char *v2514;
  uint64_t v2515;
  uint64_t v2516;
  _QWORD *v2517;
  uint64_t *v2518;
  uint64_t v2519;
  uint64_t v2520;
  int *v2521;
  uint64_t v2522;
  _QWORD *v2523;
  _QWORD *v2524;
  uint64_t v2525;
  uint64_t v2526;
  uint64_t (*v2527)(_QWORD *, uint64_t, uint64_t);
  int v2528;
  int v2529;
  _QWORD *v2530;
  __int128 v2531;
  uint64_t v2532;
  char *v2533;
  char *v2534;
  uint64_t v2535;
  uint64_t v2536;
  uint64_t v2537;
  uint64_t v2538;
  uint64_t v2539;
  uint64_t v2540;
  char *v2541;
  char *v2542;
  uint64_t v2543;
  uint64_t v2544;
  uint64_t (*v2545)(char *, uint64_t, uint64_t);
  int v2546;
  int v2547;
  uint64_t v2548;
  char *v2549;
  char *v2550;
  uint64_t v2551;
  int *v2552;
  uint64_t v2553;
  char *v2554;
  char *v2555;
  uint64_t v2556;
  uint64_t v2557;
  uint64_t (*v2558)(char *, uint64_t, uint64_t);
  int v2559;
  int v2560;
  uint64_t v2561;
  uint64_t v2562;
  _QWORD *v2563;
  _QWORD *v2564;
  _QWORD *v2565;
  uint64_t v2566;
  uint64_t v2567;
  uint64_t (*v2568)(_QWORD *, uint64_t, uint64_t);
  int v2569;
  int v2570;
  uint64_t v2571;
  char *v2572;
  char *v2573;
  uint64_t v2574;
  uint64_t v2575;
  uint64_t v2576;
  _QWORD *v2577;
  _QWORD *v2578;
  uint64_t v2579;
  uint64_t v2580;
  uint64_t (*v2581)(_QWORD *, uint64_t, uint64_t);
  int v2582;
  int v2583;
  uint64_t v2584;
  char *v2585;
  char *v2586;
  uint64_t v2587;
  uint64_t v2588;
  uint64_t v2589;
  char *v2590;
  char *v2591;
  uint64_t v2592;
  uint64_t v2594;
  uint64_t v2595;
  char *v2596;
  char *v2597;
  uint64_t v2598;
  uint64_t v2599;
  char *v2600;
  char *v2601;
  uint64_t v2602;
  uint64_t v2603;
  uint64_t v2604;
  char *v2605;
  char *v2606;
  uint64_t v2607;
  uint64_t v2608;
  char *v2609;
  char *v2610;
  uint64_t v2611;
  uint64_t v2612;
  _QWORD *v2613;
  char *v2614;
  int *v2615;
  uint64_t v2616;
  uint64_t v2617;
  uint64_t v2618;
  char *v2619;
  char *v2620;
  uint64_t v2621;
  unsigned int (*v2622)(char *, uint64_t, uint64_t);
  uint64_t v2623;
  char *v2624;
  uint64_t v2625;
  char *v2626;
  uint64_t v2627;
  char *v2628;
  char *v2629;
  uint64_t v2630;
  uint64_t v2631;
  char *v2632;
  char *v2633;
  uint64_t v2634;
  uint64_t v2635;
  uint64_t v2636;
  char *v2637;
  uint64_t v2638;
  char *v2639;
  char *v2640;
  uint64_t v2641;
  uint64_t v2642;
  char *v2643;
  char *v2644;
  uint64_t v2645;
  uint64_t v2646;
  _DWORD *v2647;
  char *v2648;
  uint64_t v2649;
  uint64_t v2650;
  uint64_t v2651;
  uint64_t v2652;
  int *v2653;
  char *v2654;
  char *v2655;
  uint64_t v2656;
  char *v2657;
  uint64_t v2658;
  uint64_t v2659;
  char *v2660;
  uint64_t v2661;
  uint64_t v2662;
  char *v2663;
  char *v2664;
  uint64_t v2665;
  char *v2666;
  int *v2667;
  uint64_t v2668;
  char *v2669;
  char *v2670;
  int *v2671;
  uint64_t v2672;
  uint64_t v2673;
  uint64_t v2674;
  _QWORD *v2675;
  char *v2676;
  char *v2677;
  uint64_t v2678;
  uint64_t v2679;
  uint64_t v2680;
  __int128 v2681;
  __int128 v2682;
  uint64_t v2683;
  char *v2684;
  char *v2685;
  uint64_t v2686;
  uint64_t v2687;
  _OWORD *v2688;
  char *v2689;
  uint64_t v2690;
  uint64_t v2691;
  uint64_t v2692;
  uint64_t v2693;
  char *v2694;
  char *v2695;
  uint64_t v2696;
  uint64_t v2697;
  char *v2698;
  char *v2699;
  uint64_t v2700;
  uint64_t v2701;
  char *v2702;
  char *v2703;
  char *v2704;
  uint64_t v2705;
  uint64_t v2706;
  _DWORD *v2707;
  char *v2708;
  uint64_t v2709;
  uint64_t v2710;
  unsigned int (*v2711)(char *, uint64_t, uint64_t);
  uint64_t v2712;
  uint64_t v2713;
  char *v2714;
  char *v2715;
  uint64_t v2716;
  uint64_t v2717;
  _DWORD *v2718;
  char *v2719;
  uint64_t v2720;
  uint64_t v2721;
  char *v2722;
  char *v2723;
  uint64_t v2724;
  char *v2725;
  uint64_t v2726;
  _DWORD *v2727;
  char *v2728;
  uint64_t v2729;
  uint64_t v2730;
  char *v2731;
  char *v2732;
  uint64_t v2733;
  char *v2734;
  uint64_t v2735;
  uint64_t v2736;
  char *v2737;
  uint64_t v2738;
  uint64_t v2739;
  char *v2740;
  char *v2741;
  char *v2742;
  uint64_t v2743;
  uint64_t v2744;
  uint64_t v2745;
  char *v2746;
  uint64_t v2747;
  uint64_t v2748;
  char *v2749;
  char *v2750;
  uint64_t v2751;
  char *v2752;
  uint64_t v2753;
  char *v2754;
  char *v2755;
  int *v2756;
  uint64_t v2757;
  uint64_t v2758;
  uint64_t v2759;
  _QWORD *v2760;
  char *v2761;
  char *v2762;
  uint64_t v2763;
  uint64_t v2764;
  uint64_t v2765;
  __int128 v2766;
  __int128 v2767;
  uint64_t v2768;
  char *v2769;
  uint64_t v2770;
  uint64_t v2771;
  _OWORD *v2772;
  char *v2773;
  uint64_t v2774;
  uint64_t v2775;
  uint64_t v2776;
  uint64_t v2777;
  char *v2778;
  uint64_t v2779;
  uint64_t v2780;
  char *v2781;
  char *v2782;
  uint64_t v2783;
  uint64_t v2784;
  char *v2785;
  char *v2786;
  uint64_t v2787;
  uint64_t v2788;
  _DWORD *v2789;
  char *v2790;
  uint64_t v2791;
  uint64_t v2792;
  unsigned int (*v2793)(char *, uint64_t, uint64_t);
  uint64_t v2794;
  uint64_t v2795;
  char *v2796;
  char *v2797;
  uint64_t v2798;
  uint64_t v2799;
  _DWORD *v2800;
  char *v2801;
  uint64_t v2802;
  uint64_t v2803;
  char *v2804;
  char *v2805;
  uint64_t v2806;
  uint64_t v2807;
  _DWORD *v2808;
  char *v2809;
  uint64_t v2810;
  uint64_t v2811;
  char *v2812;
  char *v2813;
  uint64_t v2814;
  uint64_t v2815;
  uint64_t v2816;
  char *v2817;
  uint64_t v2818;
  _QWORD *v2819;
  _QWORD *v2820;
  char *v2821;
  uint64_t v2822;
  uint64_t v2823;
  uint64_t v2824;
  char *v2825;
  unsigned int (**v2826)(const void *, uint64_t, uint64_t);
  unsigned int (**v2827)(const void *, uint64_t, uint64_t);
  char *v2828;
  char *v2829;
  char *v2830;
  int *v2831;
  int *v2832;
  void *v2833;
  char *v2834;
  _QWORD *v2835;
  char *v2836;
  char *v2837;
  _DWORD *v2838;
  unsigned int (*v2839)(char *, uint64_t);
  void (**v2840)(void *, _QWORD, uint64_t, uint64_t);
  void (**v2841)(char *, _QWORD, uint64_t, uint64_t);
  char *v2842;
  char *v2843;
  char *v2844;
  char *v2845;
  char *v2846;
  char *v2847;
  char *v2848;
  char *v2849;
  unsigned int (**v2850)(const void *, uint64_t, uint64_t);
  int *v2851;
  char *v2852;
  char *v2853;
  char *v2854;
  void *v2855;
  _OWORD *v2856;
  char *v2857;
  char *v2858;
  char *v2859;
  void *v2860;
  _QWORD *v2861;
  void *v2862;
  int *v2863;
  void *v2864;
  void *v2865;
  void *v2866;
  char *__dst;
  char *__dsta;
  char *__dstb;
  void (**__dstc)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *__dstd;
  char *__dste;
  char *__dsts;
  unsigned int (**__dstf)(const void *, uint64_t, uint64_t);
  int *__dstg;
  int *__dsth;
  char *__dstt;
  void *__dsti;
  char *__dstu;
  unsigned int (*__dstj)(char *, uint64_t, uint64_t);
  _QWORD *__dstk;
  void *__dstl;
  char *__dstv;
  void *__dstm;
  unsigned int (*__dstn)(char *, uint64_t, uint64_t);
  void *__dsto;
  void *__dstp;
  int *__dstq;
  unsigned int (*__dstr)(char *, uint64_t, uint64_t);
  unsigned int (**__dstw)(const void *, uint64_t);
  void *__src;
  void *__srca;
  void *__srcb;
  unsigned int (**__srcc)(const void *, uint64_t, uint64_t);
  char *__srcu;
  char *__srcv;
  void *__srcd;
  _OWORD *__srce;
  void *__srcf;
  char *__srcg;
  void *__srch;
  char *__srcw;
  void *__srci;
  unsigned int (*__srcj)(char *, uint64_t, uint64_t);
  _OWORD *__srck;
  char *__srcx;
  void *__srcl;
  char *__srcy;
  _QWORD *__srcm;
  unsigned int (**__srcn)(const void *, uint64_t, uint64_t);
  int *__srco;
  char *__srcp;
  char *__srcq;
  void *__srcr;
  void *__srcs;
  void *__srct;
  uint64_t v2917;
  int *v2918;
  int *v2919;
  uint64_t v2920;
  int *v2921;
  char *v2922;
  char *v2923;
  char *v2924;
  char *v2925;
  int *v2926;
  char *v2927;
  char *v2928;
  uint64_t v2929;
  unsigned int (*v2930)(char *, uint64_t, uint64_t);
  char *v2931;
  int *v2932;
  uint64_t v2933;
  uint64_t v2934;
  char *v2935;
  int *v2936;
  char *v2937;
  char *v2938;
  char *v2939;
  char *v2940;
  uint64_t v2941;
  char *v2942;
  int *v2943;
  uint64_t v2944;
  uint64_t v2945;
  int *v2946;
  char *v2947;
  int *v2948;
  uint64_t v2949;
  char *v2950;
  char *v2951;
  char *v2952;
  unsigned int (*v2953)(void);
  char *v2954;
  char *v2955;
  uint64_t v2956;
  char *v2957;
  uint64_t v2958;
  uint64_t v2959;
  uint64_t v2960;
  uint64_t v2961;
  uint64_t v2962;
  uint64_t v2963;
  uint64_t v2964;
  uint64_t v2965;
  uint64_t v2966;
  uint64_t v2967;
  uint64_t v2968;
  uint64_t v2969;
  uint64_t v2970;
  uint64_t v2971;
  uint64_t v2972;
  uint64_t v2973;
  uint64_t v2974;
  uint64_t v2975;
  uint64_t v2976;
  uint64_t v2977;
  uint64_t v2978;
  uint64_t v2979;
  uint64_t v2980;
  uint64_t v2981;
  uint64_t v2982;
  uint64_t v2983;
  uint64_t v2984;
  uint64_t v2985;
  int *v2986;
  int *v2987;
  int *v2988;
  int *v2989;
  int *v2990;
  int *v2991;
  int *v2992;
  int *v2993;
  int *v2994;
  int *v2995;
  int *v2996;
  int *v2997;
  int *v2998;
  int *v2999;
  int *v3000;
  int *v3001;
  int *v3002;
  int *v3003;
  int *v3004;
  uint64_t v3005;
  uint64_t v3006;
  uint64_t v3007;
  uint64_t v3008;
  uint64_t v3009;
  uint64_t v3010;
  uint64_t v3011;
  uint64_t v3012;
  uint64_t v3013;
  uint64_t v3014;
  int *v3015;
  uint64_t v3016;
  uint64_t v3017;
  uint64_t v3018;
  uint64_t v3019;
  int *v3020;
  int *v3021;
  uint64_t v3022;
  uint64_t v3023;
  uint64_t v3024;
  uint64_t v3025;
  uint64_t v3026;
  uint64_t v3027;
  uint64_t v3028;
  char *v3029;
  unsigned int (*v3030)(char *, uint64_t, uint64_t);
  char *v3031;
  int *v3032;
  char *v3033;
  uint64_t v3034;
  char *v3035;
  char *v3036;
  char *v3037;
  _QWORD *v3038;
  char *v3039;
  _QWORD *v3040;
  unsigned int (*v3041)(char *, uint64_t, uint64_t);
  uint64_t v3042;
  uint64_t v3043;
  uint64_t v3044;
  uint64_t v3045;
  uint64_t v3046;
  uint64_t v3047;
  uint64_t v3048;
  uint64_t v3049;
  uint64_t v3050;
  uint64_t v3051;
  uint64_t v3052;
  uint64_t v3053;
  uint64_t v3054;
  uint64_t v3055;
  uint64_t v3056;
  uint64_t v3057;
  uint64_t v3058;
  uint64_t v3059;
  uint64_t v3060;
  uint64_t v3061;
  uint64_t v3062;
  int *v3063;
  int *v3064;
  int *v3065;
  int *v3066;
  uint64_t v3067;
  int *v3068;
  int *v3069;
  int *v3070;
  uint64_t v3071;
  uint64_t v3072;
  int *v3073;
  int *v3074;
  _QWORD *v3075;
  _QWORD *v3076;
  _QWORD *v3077;
  _QWORD *v3078;
  _QWORD *v3079;
  _QWORD *v3080;
  _QWORD *v3081;
  _QWORD *v3082;
  _QWORD *v3083;
  _QWORD *v3084;
  _QWORD *v3085;
  _QWORD *v3086;
  _QWORD *v3087;
  _QWORD *v3088;
  _QWORD *v3089;
  _QWORD *v3090;
  _QWORD *v3091;
  _QWORD *v3092;
  _QWORD *v3093;
  _QWORD *v3094;
  _QWORD *v3095;
  _QWORD *v3096;
  _QWORD *v3097;
  _QWORD *v3098;
  _QWORD *v3099;
  _QWORD *v3100;
  _QWORD *v3101;
  _QWORD *v3102;
  _QWORD *v3103;
  _QWORD *v3104;
  _QWORD *v3105;
  _QWORD *v3106;
  _QWORD *v3107;
  _QWORD *v3108;
  _QWORD *v3109;
  _QWORD *v3110;
  _QWORD *v3111;
  _QWORD *v3112;
  _QWORD *v3113;
  _QWORD *v3114;
  _QWORD *v3115;
  _QWORD *v3116;
  _QWORD *v3117;
  _QWORD *v3118;
  _QWORD *v3119;
  _QWORD *v3120;
  _QWORD *v3121;
  _QWORD *v3122;
  _QWORD *v3123;
  _QWORD *v3124;
  _QWORD *v3125;

  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = v4[3];
  v5[2] = v4[2];
  v5[3] = v7;
  swift_bridgeObjectRelease();
  v8 = v4[5];
  v5[4] = v4[4];
  v5[5] = v8;
  swift_bridgeObjectRelease();
  v9 = v4[7];
  v5[6] = v4[6];
  v5[7] = v9;
  swift_bridgeObjectRelease();
  v10 = v4[9];
  v5[8] = v4[8];
  v5[9] = v10;
  swift_bridgeObjectRelease();
  v5[10] = v4[10];
  swift_bridgeObjectRelease();
  v11 = v4[12];
  v5[11] = v4[11];
  v5[12] = v11;
  swift_bridgeObjectRelease();
  v12 = a3[11];
  v13 = (uint64_t)v5 + v12;
  v14 = (char *)v4 + v12;
  v15 = type metadata accessor for TranscriptProtoPayload(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_240388AE4(v13, type metadata accessor for TranscriptProtoPayload);
      goto LABEL_7;
    }
    v24 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v13, 1, v24);
    v28 = v26((uint64_t)v14, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v3005 = v15;
            v3044 = v25;
            v3075 = v4;
            v3110 = v5;
            v29 = v24;
            v2986 = a3;
            *(_BYTE *)v13 = *v14;
            v30 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
            v31 = v30[5];
            v32 = (_OWORD *)(v13 + v31);
            v33 = &v14[v31];
            v34 = type metadata accessor for TranscriptProtoLocaleSettings(0);
            v35 = *(_QWORD *)(v34 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
            {
              v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
              memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            }
            else
            {
              v760 = *((_OWORD *)v33 + 1);
              *v32 = *(_OWORD *)v33;
              v32[1] = v760;
              v32[2] = *((_OWORD *)v33 + 2);
              v761 = *(int *)(v34 + 28);
              v762 = v30;
              v763 = (char *)v32 + v761;
              v764 = &v33[v761];
              v765 = sub_2408E57A4();
              v766 = v763;
              v30 = v762;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v765 - 8) + 32))(v766, v764, v765);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
            }
            v767 = v30[6];
            v768 = (_OWORD *)(v13 + v767);
            v769 = &v14[v767];
            v770 = type metadata accessor for TranscriptProtoDeviceDetails(0);
            v771 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v770 - 8);
            v4 = v3075;
            v24 = v29;
            if (((unsigned int (**)(char *, uint64_t, uint64_t))v771)[6](v769, 1, v770))
            {
              v772 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
              memcpy(v768, v769, *(_QWORD *)(*(_QWORD *)(v772 - 8) + 64));
              v25 = v3044;
            }
            else
            {
              __srcd = v771;
              v2946 = v30;
              *v768 = *(_OWORD *)v769;
              v1197 = *(int *)(v770 + 20);
              v1198 = (_DWORD *)((char *)v768 + v1197);
              v1199 = &v769[v1197];
              v1200 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
              v1201 = *(_QWORD *)(v1200 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1201 + 48))(v1199, 1, v1200))
              {
                v1202 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
                memcpy(v1198, v1199, *(_QWORD *)(*(_QWORD *)(v1202 - 8) + 64));
              }
              else
              {
                *v1198 = *(_DWORD *)v1199;
                v1503 = *(int *)(v1200 + 20);
                __dstt = (char *)v1198 + v1503;
                v1504 = &v1199[v1503];
                v1505 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1505 - 8) + 32))(__dstt, v1504, v1505);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1201 + 56))(v1198, 0, 1, v1200);
              }
              v4 = v3075;
              v1506 = *(int *)(v770 + 24);
              v1507 = (char *)v768 + v1506;
              v1508 = &v769[v1506];
              v1509 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1509 - 8) + 32))(v1507, v1508, v1509);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srcd + 7))(v768, 0, 1, v770);
              v25 = v3044;
              v30 = v2946;
            }
            v1510 = v30[7];
            v1511 = v13 + v1510;
            v1512 = &v14[v1510];
            v1513 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1513 - 8) + 32))(v1511, v1512, v1513);
            swift_storeEnumTagMultiPayload();
            a3 = v2986;
            v15 = v3005;
            v5 = v3110;
            goto LABEL_815;
          case 1u:
            v3012 = v15;
            v3060 = v25;
            v3115 = v5;
            v268 = a3;
            v269 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_BYTE *)(v13 + 16) = v14[16];
            v270 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
            v271 = v270[6];
            v272 = (_DWORD *)(v13 + v271);
            v273 = &v14[v271];
            v274 = type metadata accessor for TranscriptProtoStatementID(0);
            v275 = *(_QWORD *)(v274 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
            {
              v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
            }
            else
            {
              *v272 = *(_DWORD *)v273;
              *(_OWORD *)(v272 + 2) = *(_OWORD *)(v273 + 8);
              v993 = *(int *)(v274 + 24);
              v2935 = (char *)v272 + v993;
              v994 = &v273[v993];
              v995 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v995 - 8) + 32))(v2935, v994, v995);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
            }
            a3 = v268;
            *(_OWORD *)(v13 + v270[7]) = *(_OWORD *)&v14[v270[7]];
            v996 = v270[8];
            v997 = v13 + v996;
            v998 = &v14[v996];
            v999 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v999 - 8) + 32))(v997, v998, v999);
            goto LABEL_305;
          case 2u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_BYTE *)(v13 + 8) = v14[8];
            *(_OWORD *)(v13 + 16) = *((_OWORD *)v14 + 1);
            v277 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
            v278 = v13 + v277;
            v279 = v25;
            v280 = v5;
            v281 = &v14[v277];
            v282 = sub_2408E57A4();
            v283 = v281;
            v5 = v280;
            v25 = v279;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 32))(v278, v283, v282);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 3u:
            v3060 = v25;
            v2996 = a3;
            v3091 = v4;
            *(_BYTE *)v13 = *v14;
            v284 = (int *)type metadata accessor for TranscriptProtoRequest(0);
            v285 = v284[5];
            v286 = (char *)(v13 + v285);
            v287 = &v14[v285];
            v288 = type metadata accessor for TranscriptProtoRequestContent(0);
            v289 = *(_QWORD *)(v288 - 8);
            v3115 = v5;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
            {
              v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
              memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            }
            else
            {
              v1000 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
              v2936 = v284;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1000 - 8) + 48))(v287, 1, v1000))
              {
                v1467 = (char *)&loc_24057B424 + 4 * word_240901B56[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1001 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
              memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v1001 - 8) + 64));
              v2203 = *(int *)(v288 + 20);
              v2204 = &v286[v2203];
              v2205 = &v287[v2203];
              v2206 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2206 - 8) + 32))(v2204, v2205, v2206);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
              v284 = v2936;
            }
            v2207 = v284[6];
            v2208 = (char *)(v13 + v2207);
            v2209 = &v14[v2207];
            v2210 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
            v2211 = *(_QWORD *)(v2210 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2211 + 48))(v2209, 1, v2210))
            {
              v2212 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
              memcpy(v2208, v2209, *(_QWORD *)(*(_QWORD *)(v2212 - 8) + 64));
            }
            else
            {
              v2213 = v284;
              v2214 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2214 - 8) + 48))(v2209, 1, v2214))
              {
                v2216 = (char *)&loc_2405858A0 + 4 * byte_240901B5E[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v2215 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
              memcpy(v2208, v2209, *(_QWORD *)(*(_QWORD *)(v2215 - 8) + 64));
              v2217 = *(int *)(v2210 + 20);
              v2218 = &v2208[v2217];
              v2219 = &v2209[v2217];
              v2220 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2220 - 8) + 32))(v2218, v2219, v2220);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2211 + 56))(v2208, 0, 1, v2210);
              v284 = v2213;
            }
            *(_OWORD *)(v13 + v284[7]) = *(_OWORD *)&v14[v284[7]];
            v2221 = v284[8];
            v2222 = (_QWORD *)(v13 + v2221);
            v2223 = &v14[v2221];
            v2224 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v2225 = *(_QWORD *)(v2224 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2225 + 48))(v2223, 1, v2224))
            {
              v2226 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v2222, v2223, *(_QWORD *)(*(_QWORD *)(v2226 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v2222 = *(_OWORD *)v2223;
              v2222[2] = *((_QWORD *)v2223 + 2);
              v2227 = *(int *)(v2224 + 24);
              v2228 = v284;
              v2229 = (char *)v2222 + v2227;
              v2230 = &v2223[v2227];
              v2231 = sub_2408E57A4();
              v2232 = v2229;
              v284 = v2228;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2231 - 8) + 32))(v2232, v2230, v2231);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2225 + 56))(v2222, 0, 1, v2224);
            }
            v4 = v3091;
            v2233 = v284[9];
            v2234 = v13 + v2233;
            v2235 = &v14[v2233];
            v2236 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2236 - 8) + 32))(v2234, v2235, v2236);
            goto LABEL_790;
          case 4u:
            v291 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v291;
            *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
            *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
            *(_BYTE *)(v13 + 56) = v14[56];
            v292 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
            v293 = v13 + v292;
            v294 = v25;
            v295 = v5;
            v296 = &v14[v292];
            v297 = sub_2408E57A4();
            v298 = v296;
            v5 = v295;
            v25 = v294;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v293, v298, v297);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 5u:
            v3012 = v15;
            v3060 = v25;
            v3115 = v5;
            v299 = a3;
            v269 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_BYTE *)(v13 + 16) = v14[16];
            *(_QWORD *)(v13 + 24) = *((_QWORD *)v14 + 3);
            v300 = (int *)type metadata accessor for TranscriptProtoAction(0);
            v301 = v300[7];
            v302 = (_DWORD *)(v13 + v301);
            v303 = &v14[v301];
            v304 = type metadata accessor for TranscriptProtoStatementID(0);
            v305 = *(_QWORD *)(v304 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v305 + 48))(v303, 1, v304))
            {
              v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
            }
            else
            {
              *v302 = *(_DWORD *)v303;
              *(_OWORD *)(v302 + 2) = *(_OWORD *)(v303 + 8);
              v1002 = *(int *)(v304 + 24);
              v2937 = (char *)v302 + v1002;
              v1003 = &v303[v1002];
              v1004 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1004 - 8) + 32))(v2937, v1003, v1004);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
            }
            a3 = v299;
            *(_OWORD *)(v13 + v300[8]) = *(_OWORD *)&v14[v300[8]];
            *(_OWORD *)(v13 + v300[9]) = *(_OWORD *)&v14[v300[9]];
            *(_OWORD *)(v13 + v300[10]) = *(_OWORD *)&v14[v300[10]];
            v1005 = v300[11];
            v1006 = v13 + v1005;
            v1007 = &v14[v1005];
            v1008 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1008 - 8) + 32))(v1006, v1007, v1008);
            goto LABEL_305;
          case 6u:
            v3012 = v15;
            v3060 = v25;
            v3115 = v5;
            v307 = a3;
            v269 = v4;
            v308 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v308;
            v309 = *((_OWORD *)v14 + 3);
            *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
            *(_OWORD *)(v13 + 48) = v309;
            v310 = type metadata accessor for TranscriptProtoClientAction(0);
            v311 = *(int *)(v310 + 36);
            v312 = (_DWORD *)(v13 + v311);
            v313 = &v14[v311];
            v314 = type metadata accessor for TranscriptProtoStatementID(0);
            v315 = *(_QWORD *)(v314 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v315 + 48))(v313, 1, v314))
            {
              v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v312, v313, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
            }
            else
            {
              *v312 = *(_DWORD *)v313;
              *(_OWORD *)(v312 + 2) = *(_OWORD *)(v313 + 8);
              v1009 = *(int *)(v314 + 24);
              v2938 = (char *)v312 + v1009;
              v1010 = &v313[v1009];
              v1011 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1011 - 8) + 32))(v2938, v1010, v1011);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v315 + 56))(v312, 0, 1, v314);
            }
            a3 = v307;
            v1012 = *(int *)(v310 + 40);
            v1013 = v13 + v1012;
            v1014 = &v14[v1012];
            v1015 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1015 - 8) + 32))(v1013, v1014, v1015);
LABEL_305:
            swift_storeEnumTagMultiPayload();
            v4 = v269;
            goto LABEL_401;
          case 7u:
            v3013 = v15;
            v3061 = v25;
            v317 = v24;
            v318 = a3;
            v3116 = v5;
            v319 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            Step = type metadata accessor for TranscriptProtoQueryStep(0);
            v321 = *(int *)(Step + 20);
            v322 = (_DWORD *)(v13 + v321);
            v323 = &v14[v321];
            v324 = type metadata accessor for TranscriptProtoStatementID(0);
            v325 = *(_QWORD *)(v324 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v325 + 48))(v323, 1, v324))
              goto LABEL_97;
            goto LABEL_306;
          case 8u:
            v3013 = v15;
            v3061 = v25;
            v317 = v24;
            v318 = a3;
            v3116 = v5;
            v319 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            Step = type metadata accessor for TranscriptProtoVariableStep(0);
            v327 = *(int *)(Step + 20);
            v322 = (_DWORD *)(v13 + v327);
            v323 = &v14[v327];
            v324 = type metadata accessor for TranscriptProtoStatementID(0);
            v325 = *(_QWORD *)(v324 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v325 + 48))(v323, 1, v324))
            {
LABEL_97:
              v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v322, v323, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
            }
            else
            {
LABEL_306:
              *v322 = *(_DWORD *)v323;
              *(_OWORD *)(v322 + 2) = *(_OWORD *)(v323 + 8);
              v1016 = *(int *)(v324 + 24);
              v2939 = (char *)v322 + v1016;
              v1017 = &v323[v1016];
              v1018 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1018 - 8) + 32))(v2939, v1017, v1018);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v325 + 56))(v322, 0, 1, v324);
            }
            a3 = v318;
            v1019 = *(int *)(Step + 24);
            v1020 = v13 + v1019;
            v1021 = &v14[v1019];
            v1022 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1022 - 8) + 32))(v1020, v1021, v1022);
            v24 = v317;
            goto LABEL_327;
          case 0xAu:
            v3060 = v25;
            v328 = v5;
            v329 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v329 - 8) + 48))(v14, 1, v329))
            {
              v1023 = (char *)&loc_240578CB4 + 4 * word_240901B4E[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
            memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v330 - 8) + 64));
            v2054 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
            v2055 = v13 + v2054;
            v2056 = &v14[v2054];
            v2057 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2057 - 8) + 32))(v2055, v2056, v2057);
            swift_storeEnumTagMultiPayload();
            v5 = v328;
            goto LABEL_814;
          case 0xBu:
            v3060 = v25;
            v331 = v5;
            v332 = a3;
            v333 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
            v334 = *(_QWORD *)(v333 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v334 + 48))(v14, 1, v333))
            {
              v335 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
              a3 = v332;
            }
            else
            {
              v2981 = v24;
              v3019 = v15;
              v3122 = v331;
              v1024 = v4;
              v1025 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
              v1026 = *(_QWORD *)(v1025 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1026 + 48))(v14, 1, v1025))
              {
                v1027 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v1027 - 8) + 64));
              }
              else
              {
                v1468 = *((_OWORD *)v14 + 1);
                *(_OWORD *)v13 = *(_OWORD *)v14;
                *(_OWORD *)(v13 + 16) = v1468;
                *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
                v1469 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
                v1470 = v13 + v1469;
                v1471 = &v14[v1469];
                v1472 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1472 - 8) + 32))(v1470, v1471, v1472);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1026 + 56))(v13, 0, 1, v1025);
              }
              v24 = v2981;
              v1473 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
              v1474 = v13 + v1473;
              v1475 = &v14[v1473];
              v1476 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1476 - 8) + 32))(v1474, v1475, v1476);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v334 + 56))(v13, 0, 1, v333);
              v4 = v1024;
              v331 = v3122;
              a3 = v332;
              v15 = v3019;
            }
            v1477 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
            v1478 = v13 + v1477;
            v1479 = &v14[v1477];
            v1480 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1480 - 8) + 32))(v1478, v1479, v1480);
            swift_storeEnumTagMultiPayload();
            goto LABEL_813;
          case 0xCu:
            v336 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v336;
            *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
            v337 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
            v338 = v13 + v337;
            v339 = v25;
            v340 = v5;
            v341 = &v14[v337];
            v342 = sub_2408E57A4();
            v343 = v341;
            v5 = v340;
            v25 = v339;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v338, v343, v342);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0xDu:
            v3060 = v25;
            v3092 = v4;
            v3115 = v5;
            v2996 = a3;
            v344 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v344;
            v345 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
            v346 = v345[6];
            v347 = (char *)(v13 + v346);
            v348 = &v14[v346];
            v349 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
            v350 = *(_QWORD *)(v349 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v350 + 48))(v348, 1, v349))
            {
              v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
              memcpy(v347, v348, *(_QWORD *)(*(_QWORD *)(v351 - 8) + 64));
            }
            else
            {
              v3020 = v345;
              v1028 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
              v1029 = *(_QWORD *)(v1028 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1029 + 48))(v348, 1, v1028))
              {
                v1030 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
                memcpy(v347, v348, *(_QWORD *)(*(_QWORD *)(v1030 - 8) + 64));
              }
              else
              {
                v2982 = v24;
                v1481 = v15;
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                v1483 = v1028;
                switch(EnumCaseMultiPayload)
                {
                  case 6:
                    v1849 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1849 - 8) + 32))(v347, v348, v1849);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 5:
                    *v347 = *v348;
                    v1850 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                   + 20);
                    v1851 = &v347[v1850];
                    v2952 = &v348[v1850];
                    v1852 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1852 - 8) + 32))(v1851, v2952, v1852);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 1:
                    *(_QWORD *)v347 = *(_QWORD *)v348;
                    v1484 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                    v1485 = &v347[v1484];
                    v2947 = &v348[v1484];
                    v1486 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1486 - 8) + 32))(v1485, v2947, v1486);
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v347, v348, *(_QWORD *)(v1029 + 64));
                    break;
                }
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1029 + 56))(v347, 0, 1, v1483);
                v15 = v1481;
                v24 = v2982;
              }
              v1853 = *(int *)(v349 + 20);
              v1854 = &v347[v1853];
              v1855 = &v348[v1853];
              v1856 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1856 - 8) + 32))(v1854, v1855, v1856);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v350 + 56))(v347, 0, 1, v349);
              v345 = v3020;
            }
            v1857 = v345[7];
            v1858 = (_DWORD *)(v13 + v1857);
            v1859 = &v14[v1857];
            v1860 = type metadata accessor for TranscriptProtoStatementID(0);
            v1861 = *(_QWORD *)(v1860 - 8);
            v2953 = *(unsigned int (**)(void))(v1861 + 48);
            __dstm = (void *)v1861;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v2953)(v1859, 1, v1860))
            {
              v1862 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1858, v1859, *(_QWORD *)(*(_QWORD *)(v1862 - 8) + 64));
            }
            else
            {
              *v1858 = *(_DWORD *)v1859;
              *(_OWORD *)(v1858 + 2) = *(_OWORD *)(v1859 + 8);
              v1863 = *(int *)(v1860 + 24);
              v1864 = v345;
              v1865 = (char *)v1858 + v1863;
              v1866 = &v1859[v1863];
              v1867 = sub_2408E57A4();
              v1868 = v1865;
              v345 = v1864;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1867 - 8) + 32))(v1868, v1866, v1867);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1861 + 56))(v1858, 0, 1, v1860);
            }
            v1869 = v345[8];
            v1870 = (_QWORD *)(v13 + v1869);
            v1871 = &v14[v1869];
            v1872 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            v1873 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v1872 - 8);
            if (((unsigned int (**)(char *, uint64_t, uint64_t))v1873)[6](v1871, 1, v1872))
            {
              v1874 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
              memcpy(v1870, v1871, *(_QWORD *)(*(_QWORD *)(v1874 - 8) + 64));
              v4 = v3092;
              goto LABEL_660;
            }
            v2860 = v1873;
            v3032 = v345;
            v1875 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            v1876 = *(_QWORD *)(v1875 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1876 + 48))(v1871, 1, v1875))
            {
              v1877 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
              memcpy(v1870, v1871, *(_QWORD *)(*(_QWORD *)(v1877 - 8) + 64));
              goto LABEL_659;
            }
            __srcl = (void *)v13;
            v2847 = v14;
            v2983 = v24;
            v1878 = v15;
            v1879 = swift_getEnumCaseMultiPayload();
            if (v1879 == 1)
            {
              *v1870 = *(_QWORD *)v1871;
              v1885 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v1886 = (char *)v1870 + v1885;
              v1887 = &v1871[v1885];
              v1888 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1888 - 8) + 32))(v1886, v1887, v1888);
            }
            else
            {
              if (v1879)
              {
                memcpy(v1870, v1871, *(_QWORD *)(v1876 + 64));
                goto LABEL_658;
              }
              *(_OWORD *)v1870 = *(_OWORD *)v1871;
              v1880 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v1881 = *(int *)(v1880 + 20);
              v1882 = (_DWORD *)((char *)v1870 + v1881);
              v1883 = &v1871[v1881];
              if (v2953())
              {
                v1884 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1882, v1883, *(_QWORD *)(*(_QWORD *)(v1884 - 8) + 64));
              }
              else
              {
                *v1882 = *(_DWORD *)v1883;
                *(_OWORD *)(v1882 + 2) = *(_OWORD *)(v1883 + 8);
                v2004 = *(int *)(v1860 + 24);
                v2954 = (char *)v1882 + v2004;
                v2005 = &v1883[v2004];
                v2006 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2006 - 8) + 32))(v2954, v2005, v2006);
                (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstm + 7))(v1882, 0, 1, v1860);
              }
              v2007 = *(int *)(v1880 + 24);
              v2008 = (char *)v1870 + v2007;
              v2009 = &v1871[v2007];
              v2010 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2010 - 8) + 32))(v2008, v2009, v2010);
            }
            swift_storeEnumTagMultiPayload();
LABEL_658:
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1876 + 56))(v1870, 0, 1, v1875);
            v15 = v1878;
            v24 = v2983;
            v14 = v2847;
            v13 = (uint64_t)__srcl;
LABEL_659:
            v2011 = *(int *)(v1872 + 20);
            v2012 = (char *)v1870 + v2011;
            v2013 = &v1871[v2011];
            v2014 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2014 - 8) + 32))(v2012, v2013, v2014);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v2860 + 7))(v1870, 0, 1, v1872);
            v4 = v3092;
            v345 = v3032;
LABEL_660:
            v2015 = v345[9];
            v2016 = v13 + v2015;
            v2017 = &v14[v2015];
            v2018 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2018 - 8) + 32))(v2016, v2017, v2018);
LABEL_790:
            swift_storeEnumTagMultiPayload();
            a3 = v2996;
LABEL_791:
            v5 = v3115;
LABEL_814:
            v25 = v3060;
LABEL_815:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v24);
            break;
          case 0xEu:
          case 0x10u:
          case 0x13u:
          case 0x14u:
          case 0x15u:
          case 0x29u:
            v376 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 32))(v13, v14, v376);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0xFu:
            v3013 = v15;
            v3061 = v25;
            v352 = v24;
            v353 = a3;
            v3116 = v5;
            v319 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
            StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
            v355 = *(int *)(StepResults + 24);
            v356 = (_DWORD *)(v13 + v355);
            v357 = &v14[v355];
            v358 = type metadata accessor for TranscriptProtoStatementID(0);
            v359 = *(_QWORD *)(v358 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v359 + 48))(v357, 1, v358))
            {
              v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v356, v357, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
            }
            else
            {
              *v356 = *(_DWORD *)v357;
              *(_OWORD *)(v356 + 2) = *(_OWORD *)(v357 + 8);
              v1031 = *(int *)(v358 + 24);
              v2940 = (char *)v356 + v1031;
              v1032 = &v357[v1031];
              v1033 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1033 - 8) + 32))(v2940, v1032, v1033);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v359 + 56))(v356, 0, 1, v358);
            }
            goto LABEL_326;
          case 0x11u:
            v3012 = v15;
            v3060 = v25;
            v3093 = v4;
            v3115 = v5;
            v361 = a3;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
            *(_BYTE *)(v13 + 24) = v14[24];
            *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
            v362 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
            v363 = *(int *)(v362 + 36);
            v364 = (_QWORD *)(v13 + v363);
            v365 = &v14[v363];
            v366 = type metadata accessor for TranscriptProtoParameterSet(0);
            v367 = *(_QWORD *)(v366 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v365, 1, v366))
            {
              v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
              memcpy(v364, v365, *(_QWORD *)(*(_QWORD *)(v368 - 8) + 64));
            }
            else
            {
              *v364 = *(_QWORD *)v365;
              v1034 = *(int *)(v366 + 20);
              v1035 = (char *)v364 + v1034;
              v1036 = &v365[v1034];
              v1037 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1037 - 8) + 32))(v1035, v1036, v1037);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v367 + 56))(v364, 0, 1, v366);
            }
            v1038 = v362;
            v1039 = *(int *)(v362 + 40);
            v1040 = (_DWORD *)(v13 + v1039);
            v1041 = &v14[v1039];
            v1042 = type metadata accessor for TranscriptProtoStatementID(0);
            v1043 = *(_QWORD *)(v1042 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1043 + 48))(v1041, 1, v1042))
            {
              v1044 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1040, v1041, *(_QWORD *)(*(_QWORD *)(v1044 - 8) + 64));
            }
            else
            {
              *v1040 = *(_DWORD *)v1041;
              *(_OWORD *)(v1040 + 2) = *(_OWORD *)(v1041 + 8);
              v1203 = *(int *)(v1042 + 24);
              v1204 = (char *)v1040 + v1203;
              v1205 = &v1041[v1203];
              v1206 = sub_2408E57A4();
              v1207 = v1204;
              v1038 = v362;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1206 - 8) + 32))(v1207, v1205, v1206);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1043 + 56))(v1040, 0, 1, v1042);
            }
            a3 = v361;
            v1208 = *(int *)(v1038 + 44);
            v1209 = v13 + v1208;
            v1210 = &v14[v1208];
            v1211 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1211 - 8) + 32))(v1209, v1210, v1211);
            goto LABEL_397;
          case 0x12u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
            v369 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
            v370 = v13 + v369;
            v371 = v25;
            v372 = v5;
            v373 = &v14[v369];
            v374 = sub_2408E57A4();
            v375 = v373;
            v5 = v372;
            v25 = v371;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 32))(v370, v375, v374);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x16u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v377 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
            v378 = v13 + v377;
            v379 = v25;
            v380 = v5;
            v381 = &v14[v377];
            v382 = sub_2408E57A4();
            v383 = v381;
            v5 = v380;
            v25 = v379;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v378, v383, v382);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x17u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v384 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
            v385 = v13 + v384;
            v386 = v25;
            v387 = v5;
            v388 = &v14[v384];
            v389 = sub_2408E57A4();
            v390 = v388;
            v5 = v387;
            v25 = v386;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v389 - 8) + 32))(v385, v390, v389);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x18u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v391 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
            v392 = v13 + v391;
            v393 = v25;
            v394 = v5;
            v395 = &v14[v391];
            v396 = sub_2408E57A4();
            v397 = v395;
            v5 = v394;
            v25 = v393;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v396 - 8) + 32))(v392, v397, v396);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x19u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v398 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
            v399 = v13 + v398;
            v400 = v25;
            v401 = v5;
            v402 = &v14[v398];
            v403 = sub_2408E57A4();
            v404 = v402;
            v5 = v401;
            v25 = v400;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v403 - 8) + 32))(v399, v404, v403);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x1Au:
            v3012 = v15;
            v3060 = v25;
            v3094 = v4;
            v3115 = v5;
            v405 = type metadata accessor for TranscriptProtoStatementID(0);
            v406 = *(_QWORD *)(v405 - 8);
            v407 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v406 + 48);
            v408 = a3;
            if (v407(v14, 1, v405))
            {
              v409 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v409 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v13 = *(_DWORD *)v14;
              *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
              v1045 = *(int *)(v405 + 24);
              v1046 = v13 + v1045;
              v1047 = &v14[v1045];
              v1048 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1048 - 8) + 32))(v1046, v1047, v1048);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v406 + 56))(v13, 0, 1, v405);
            }
            v1049 = type metadata accessor for TranscriptProtoActionCancellation(0);
            v1050 = *(int *)(v1049 + 20);
            v1051 = (_DWORD *)(v13 + v1050);
            v1052 = &v14[v1050];
            if (v407(&v14[v1050], 1, v405))
            {
              v1053 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1051, v1052, *(_QWORD *)(*(_QWORD *)(v1053 - 8) + 64));
            }
            else
            {
              *v1051 = *(_DWORD *)v1052;
              *(_OWORD *)(v1051 + 2) = *(_OWORD *)(v1052 + 8);
              v1212 = *(int *)(v405 + 24);
              v1213 = (char *)v1051 + v1212;
              v1214 = &v1052[v1212];
              v1215 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1215 - 8) + 32))(v1213, v1214, v1215);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v406 + 56))(v1051, 0, 1, v405);
            }
            v1216 = *(int *)(v1049 + 24);
            v1217 = v13 + v1216;
            v1218 = &v14[v1216];
            v1219 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1219 - 8) + 32))(v1217, v1218, v1219);
            swift_storeEnumTagMultiPayload();
            v4 = v3094;
            a3 = v408;
            goto LABEL_401;
          case 0x1Bu:
            v410 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v410;
            *(_DWORD *)(v13 + 32) = *((_DWORD *)v14 + 8);
            *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
            v411 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
            v412 = v13 + v411;
            v413 = v25;
            v414 = v5;
            v415 = &v14[v411];
            v416 = sub_2408E57A4();
            v417 = v415;
            v5 = v414;
            v25 = v413;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v416 - 8) + 32))(v412, v417, v416);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x1Cu:
            v3060 = v25;
            v2973 = v24;
            v2996 = a3;
            v3095 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
            *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
            v418 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
            v419 = v418[7];
            v420 = (char *)(v13 + v419);
            v421 = &v14[v419];
            v422 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v423 = *(_QWORD *)(v422 - 8);
            v3115 = v5;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v423 + 48))(v421, 1, v422))
            {
              v424 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              memcpy(v420, v421, *(_QWORD *)(*(_QWORD *)(v424 - 8) + 64));
            }
            else
            {
              v2941 = v423;
              v1054 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1054 - 8) + 48))(v421, 1, v1054))
              {
                v1487 = (char *)&loc_24057B658 + 4 * word_240901B2E[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1055 = v418;
              v1056 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(v420, v421, *(_QWORD *)(*(_QWORD *)(v1056 - 8) + 64));
              v2370 = *(int *)(v422 + 20);
              v2371 = &v420[v2370];
              v2372 = &v421[v2370];
              v2373 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2373 - 8) + 32))(v2371, v2372, v2373);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2941 + 56))(v420, 0, 1, v422);
              v418 = v1055;
            }
            v2374 = v418[8];
            v2375 = (_QWORD *)(v13 + v2374);
            v2376 = &v14[v2374];
            v2377 = type metadata accessor for TranscriptProtoResponseOutput(0);
            v2378 = *(void **)(v2377 - 8);
            if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v2378 + 6))(v2376, 1, v2377))
            {
              v2379 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
              memcpy(v2375, v2376, *(_QWORD *)(*(_QWORD *)(v2379 - 8) + 64));
            }
            else
            {
              *v2375 = *(_QWORD *)v2376;
              *((_BYTE *)v2375 + 8) = v2376[8];
              v2375[2] = *((_QWORD *)v2376 + 2);
              v2380 = *(int *)(v2377 + 28);
              __srcp = (char *)v2375 + v2380;
              v2958 = v2377;
              v2381 = &v2376[v2380];
              v2382 = type metadata accessor for TranscriptProtoDialogType(0);
              v2383 = *(_QWORD **)(v2382 - 8);
              __dstr = (unsigned int (*)(char *, uint64_t, uint64_t))v2383[6];
              v3039 = v2376;
              if (__dstr(v2381, 1, v2382))
              {
                v2384 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                memcpy(__srcp, v2381, *(_QWORD *)(*(_QWORD *)(v2384 - 8) + 64));
              }
              else
              {
                v2840 = (void (**)(void *, _QWORD, uint64_t, uint64_t))v2383;
                v2865 = v2378;
                v2385 = v418;
                v2386 = type metadata accessor for TranscriptProtoDialogFormat(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2386 - 8) + 48))(v2381, 1, v2386))
                {
                  v2388 = (char *)&loc_2405885C0 + 4 * byte_240901B44[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v2387 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                memcpy(__srcp, v2381, *(_QWORD *)(*(_QWORD *)(v2387 - 8) + 64));
                v2389 = *(int *)(v2382 + 20);
                v2390 = &__srcp[v2389];
                v2391 = &v2381[v2389];
                v2392 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2392 - 8) + 32))(v2390, v2391, v2392);
                v2383 = v2840;
                v2840[7](__srcp, 0, 1, v2382);
                v418 = v2385;
                v2378 = v2865;
              }
              v2393 = v2958;
              v2394 = *(int *)(v2958 + 32);
              __srcq = (char *)v2375 + v2394;
              v2395 = &v2376[v2394];
              if (__dstr(&v3039[v2394], 1, v2382))
              {
                v2396 = v418;
                v2397 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                memcpy(__srcq, v2395, *(_QWORD *)(*(_QWORD *)(v2397 - 8) + 64));
              }
              else
              {
                v2841 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v2383;
                v2398 = v2382;
                v2866 = v2378;
                v2399 = v2375;
                v2396 = v418;
                v2400 = v15;
                v2401 = type metadata accessor for TranscriptProtoDialogFormat(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2401 - 8) + 48))(v2395, 1, v2401))
                {
                  v2403 = (char *)&loc_2405887D8 + 4 * byte_240901B49[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v2402 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                memcpy(__srcq, v2395, *(_QWORD *)(*(_QWORD *)(v2402 - 8) + 64));
                v2404 = v2398;
                v2405 = *(int *)(v2398 + 20);
                v2406 = &__srcq[v2405];
                v2407 = &v2395[v2405];
                v2408 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2408 - 8) + 32))(v2406, v2407, v2408);
                v2841[7](__srcq, 0, 1, v2404);
                v15 = v2400;
                v2375 = v2399;
                v2378 = v2866;
                v2393 = v2958;
              }
              v2409 = *(int *)(v2393 + 36);
              v2410 = (char *)v2375 + v2409;
              v2411 = &v3039[v2409];
              v2412 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2412 - 8) + 32))(v2410, v2411, v2412);
              (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v2378 + 7))(v2375, 0, 1, v2393);
              v418 = v2396;
            }
            v2413 = v418[9];
            v2414 = (_DWORD *)(v13 + v2413);
            v2415 = &v14[v2413];
            v2416 = type metadata accessor for TranscriptProtoStatementID(0);
            v2417 = *(_QWORD *)(v2416 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2417 + 48))(v2415, 1, v2416))
            {
              v2418 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2414, v2415, *(_QWORD *)(*(_QWORD *)(v2418 - 8) + 64));
            }
            else
            {
              *v2414 = *(_DWORD *)v2415;
              *(_OWORD *)(v2414 + 2) = *(_OWORD *)(v2415 + 8);
              v2419 = *(int *)(v2416 + 24);
              v2420 = v418;
              v2421 = (char *)v2414 + v2419;
              v2422 = &v2415[v2419];
              v2423 = sub_2408E57A4();
              v2424 = v2421;
              v418 = v2420;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2423 - 8) + 32))(v2424, v2422, v2423);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2417 + 56))(v2414, 0, 1, v2416);
            }
            v4 = v3095;
            *(_OWORD *)(v13 + v418[10]) = *(_OWORD *)&v14[v418[10]];
            v2425 = v418[11];
            v2426 = v13 + v2425;
            v2427 = &v14[v2425];
            v2428 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2428 - 8) + 32))(v2426, v2427, v2428);
            v24 = v2973;
            goto LABEL_790;
          case 0x1Du:
            v3062 = v25;
            v2997 = a3;
            v425 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v425;
            v2921 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
            v426 = v2921[6];
            v427 = (char *)(v13 + v426);
            v428 = &v14[v426];
            v429 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
            v430 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v429 - 8);
            v3096 = v4;
            v3117 = v5;
            if (v430[6](v428, 1, v429))
            {
              v431 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
              memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v431 - 8) + 64));
            }
            else
            {
              v2827 = v430;
              v2832 = (int *)v429;
              v1057 = type metadata accessor for TranscriptProtoStatementOutcome(0);
              v1058 = *(_QWORD *)(v1057 - 8);
              v2852 = v427;
              __dste = v428;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1058 + 48))(v428, 1, v1057))
              {
                v1059 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
                memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v1059 - 8) + 64));
              }
              else
              {
                v3027 = v1057;
                v1488 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1488 - 8) + 48))(v428, 1, v1488))
                {
                  v1782 = (char *)&loc_24057D704 + 4 * word_240901B18[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1489 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
                memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v1489 - 8) + 64));
                v2662 = *(int *)(v3027 + 20);
                v2663 = &v427[v2662];
                v2664 = &v428[v2662];
                v2665 = sub_2408E57A4();
                v2666 = v2663;
                v427 = v2852;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2665 - 8) + 32))(v2666, v2664, v2665);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1058 + 56))(v2852, 0, 1, v3027);
              }
              v2667 = v2832;
              v2668 = v2832[5];
              v2669 = &v427[v2668];
              v2670 = &v428[v2668];
              v2671 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
              v2672 = *((_QWORD *)v2671 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v2672 + 48))(v2670, 1, v2671))
              {
                v2673 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
                memcpy(v2669, v2670, *(_QWORD *)(*(_QWORD *)(v2673 - 8) + 64));
              }
              else
              {
                __srct = (void *)v13;
                v2985 = v24;
                v3043 = v15;
                *(_QWORD *)v2669 = *(_QWORD *)v2670;
                v2674 = v2671[5];
                v2675 = v2669;
                v2676 = &v2669[v2674];
                v2677 = &v2670[v2674];
                v2678 = type metadata accessor for TranscriptProtoResponseDialog(0);
                v2679 = *(_QWORD *)(v2678 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2679 + 48))(v2677, 1, v2678))
                {
                  v2680 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                  memcpy(v2676, v2677, *(_QWORD *)(*(_QWORD *)(v2680 - 8) + 64));
                }
                else
                {
                  v2681 = *((_OWORD *)v2677 + 1);
                  *(_OWORD *)v2676 = *(_OWORD *)v2677;
                  *((_OWORD *)v2676 + 1) = v2681;
                  v2682 = *((_OWORD *)v2677 + 3);
                  *((_OWORD *)v2676 + 2) = *((_OWORD *)v2677 + 2);
                  *((_OWORD *)v2676 + 3) = v2682;
                  v2683 = *(int *)(v2678 + 32);
                  v2684 = &v2676[v2683];
                  v2685 = &v2677[v2683];
                  v2686 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2686 - 8) + 32))(v2684, v2685, v2686);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2679 + 56))(v2676, 0, 1, v2678);
                }
                v2687 = v2671[6];
                v2688 = (_OWORD *)((char *)v2675 + v2687);
                v2689 = &v2670[v2687];
                v2690 = type metadata accessor for TranscriptProtoResponseVisual(0);
                v2691 = *(_QWORD *)(v2690 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2691 + 48))(v2689, 1, v2690))
                {
                  v2692 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                  memcpy(v2688, v2689, *(_QWORD *)(*(_QWORD *)(v2692 - 8) + 64));
                }
                else
                {
                  *v2688 = *(_OWORD *)v2689;
                  v2693 = *(int *)(v2690 + 24);
                  v2694 = (char *)v2688 + v2693;
                  v2695 = &v2689[v2693];
                  v2696 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2696 - 8) + 32))(v2694, v2695, v2696);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2691 + 56))(v2688, 0, 1, v2690);
                }
                *(_OWORD *)((char *)v2675 + v2671[7]) = *(_OWORD *)&v2670[v2671[7]];
                *(_OWORD *)((char *)v2675 + v2671[8]) = *(_OWORD *)&v2670[v2671[8]];
                *((_BYTE *)v2675 + v2671[9]) = v2670[v2671[9]];
                *((_BYTE *)v2675 + v2671[10]) = v2670[v2671[10]];
                v2697 = v2671[11];
                v2698 = (char *)v2675 + v2697;
                v2699 = &v2670[v2697];
                v2700 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2700 - 8) + 32))(v2698, v2699, v2700);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2672 + 56))(v2675, 0, 1, v2671);
                v15 = v3043;
                v24 = v2985;
                v427 = v2852;
                v2667 = v2832;
                v13 = (uint64_t)__srct;
              }
              v2701 = v2667[6];
              v2702 = v427;
              v2703 = &v427[v2701];
              v2704 = &__dste[v2701];
              v2705 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2705 - 8) + 32))(v2703, v2704, v2705);
              ((void (*)(char *, _QWORD, uint64_t, int *))v2827[7])(v2702, 0, 1, v2667);
            }
            v2706 = v2921[7];
            v2707 = (_DWORD *)(v13 + v2706);
            v2708 = &v14[v2706];
            v2709 = type metadata accessor for TranscriptProtoStatementID(0);
            v2710 = *(_QWORD *)(v2709 - 8);
            v2711 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2710 + 48);
            if (v2711(v2708, 1, v2709))
            {
              v2712 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2707, v2708, *(_QWORD *)(*(_QWORD *)(v2712 - 8) + 64));
            }
            else
            {
              *v2707 = *(_DWORD *)v2708;
              *(_OWORD *)(v2707 + 2) = *(_OWORD *)(v2708 + 8);
              v2713 = *(int *)(v2709 + 24);
              v2714 = (char *)v2707 + v2713;
              v2715 = &v2708[v2713];
              v2716 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2716 - 8) + 32))(v2714, v2715, v2716);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2710 + 56))(v2707, 0, 1, v2709);
            }
            v2717 = v2921[8];
            v2718 = (_DWORD *)(v13 + v2717);
            v2719 = &v14[v2717];
            a3 = v2997;
            if (v2711(&v14[v2717], 1, v2709))
            {
              v2720 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2718, v2719, *(_QWORD *)(*(_QWORD *)(v2720 - 8) + 64));
            }
            else
            {
              *v2718 = *(_DWORD *)v2719;
              *(_OWORD *)(v2718 + 2) = *(_OWORD *)(v2719 + 8);
              v2721 = *(int *)(v2709 + 24);
              v2722 = (char *)v2718 + v2721;
              v2723 = &v2719[v2721];
              v2724 = sub_2408E57A4();
              v2725 = v2722;
              a3 = v2997;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2724 - 8) + 32))(v2725, v2723, v2724);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2710 + 56))(v2718, 0, 1, v2709);
            }
            v2726 = v2921[9];
            v2727 = (_DWORD *)(v13 + v2726);
            v2728 = &v14[v2726];
            if (v2711(&v14[v2726], 1, v2709))
            {
              v2729 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2727, v2728, *(_QWORD *)(*(_QWORD *)(v2729 - 8) + 64));
            }
            else
            {
              *v2727 = *(_DWORD *)v2728;
              *(_OWORD *)(v2727 + 2) = *(_OWORD *)(v2728 + 8);
              v2730 = *(int *)(v2709 + 24);
              v2731 = (char *)v2727 + v2730;
              v2732 = &v2728[v2730];
              v2733 = sub_2408E57A4();
              v2734 = v2731;
              a3 = v2997;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2733 - 8) + 32))(v2734, v2732, v2733);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2710 + 56))(v2727, 0, 1, v2709);
            }
            v25 = v3062;
            v2735 = v2921[10];
            v2736 = v13 + v2735;
            v2737 = &v14[v2735];
            v2738 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2738 - 8) + 32))(v2736, v2737, v2738);
            swift_storeEnumTagMultiPayload();
            v4 = v3096;
            v5 = v3117;
            goto LABEL_815;
          case 0x1Eu:
            v3013 = v15;
            v3061 = v25;
            v352 = v24;
            v353 = a3;
            v3116 = v5;
            v319 = v4;
            v432 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v432;
            StepResults = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
            v433 = *(int *)(StepResults + 24);
            v434 = (_QWORD *)(v13 + v433);
            v435 = &v14[v433];
            v436 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v437 = *(_QWORD *)(v436 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v437 + 48))(v435, 1, v436))
              goto LABEL_128;
            goto LABEL_325;
          case 0x1Fu:
            v3013 = v15;
            v3061 = v25;
            v352 = v24;
            v353 = a3;
            v3116 = v5;
            v319 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
            StepResults = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
            v438 = *(int *)(StepResults + 24);
            v434 = (_QWORD *)(v13 + v438);
            v435 = &v14[v438];
            v436 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v437 = *(_QWORD *)(v436 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v437 + 48))(v435, 1, v436))
            {
LABEL_128:
              v439 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v434, v435, *(_QWORD *)(*(_QWORD *)(v439 - 8) + 64));
            }
            else
            {
LABEL_325:
              *(_OWORD *)v434 = *(_OWORD *)v435;
              v434[2] = *((_QWORD *)v435 + 2);
              v1060 = *(int *)(v436 + 24);
              v2942 = (char *)v434 + v1060;
              v1061 = &v435[v1060];
              v1062 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1062 - 8) + 32))(v2942, v1061, v1062);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v437 + 56))(v434, 0, 1, v436);
            }
LABEL_326:
            a3 = v353;
            v1063 = *(int *)(StepResults + 28);
            v1064 = v13 + v1063;
            v1065 = &v14[v1063];
            v1066 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1066 - 8) + 32))(v1064, v1065, v1066);
            v24 = v352;
LABEL_327:
            swift_storeEnumTagMultiPayload();
            v4 = v319;
            v5 = v3116;
            v15 = v3013;
            v25 = v3061;
            goto LABEL_815;
          case 0x20u:
            v3060 = v25;
            v3097 = v4;
            v331 = v5;
            v440 = type metadata accessor for TranscriptProtoRequestContent(0);
            v441 = *(_QWORD *)(v440 - 8);
            v2974 = v24;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v441 + 48))(v14, 1, v440))
            {
              v442 = a3;
              v443 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v443 - 8) + 64));
            }
            else
            {
              v1067 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1067 - 8) + 48))(v14, 1, v1067))
              {
                v1490 = (char *)&loc_24057B764 + 4 * word_240901B10[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v442 = a3;
              v1068 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v1068 - 8) + 64));
              v2237 = *(int *)(v440 + 20);
              v2238 = v13 + v2237;
              v2239 = &v14[v2237];
              v2240 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2240 - 8) + 32))(v2238, v2239, v2240);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v441 + 56))(v13, 0, 1, v440);
            }
            v2241 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
            *(_OWORD *)(v13 + v2241[5]) = *(_OWORD *)&v14[v2241[5]];
            v2242 = v2241[6];
            v2243 = (_QWORD *)(v13 + v2242);
            v2244 = &v14[v2242];
            v2245 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v2246 = *(_QWORD *)(v2245 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2246 + 48))(v2244, 1, v2245))
            {
              v2247 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v2243, v2244, *(_QWORD *)(*(_QWORD *)(v2247 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v2243 = *(_OWORD *)v2244;
              v2243[2] = *((_QWORD *)v2244 + 2);
              v2248 = *(int *)(v2245 + 24);
              v3037 = (char *)v2243 + v2248;
              v2249 = &v2244[v2248];
              v2250 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2250 - 8) + 32))(v3037, v2249, v2250);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2246 + 56))(v2243, 0, 1, v2245);
            }
            a3 = v442;
            v2251 = v2241[7];
            v2252 = v13 + v2251;
            v2253 = &v14[v2251];
            v2254 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2254 - 8) + 32))(v2252, v2253, v2254);
            v24 = v2974;
            swift_storeEnumTagMultiPayload();
            v4 = v3097;
            goto LABEL_813;
          case 0x21u:
            v2975 = v24;
            v2998 = a3;
            v3098 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
            v445 = DecorationPrePlannerResult[5];
            v446 = (_DWORD *)(v13 + v445);
            v447 = &v14[v445];
            v448 = type metadata accessor for TranscriptProtoStatementID(0);
            v449 = *(_QWORD *)(v448 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v449 + 48))(v447, 1, v448))
            {
              v450 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v446, v447, *(_QWORD *)(*(_QWORD *)(v450 - 8) + 64));
            }
            else
            {
              *v446 = *(_DWORD *)v447;
              *(_OWORD *)(v446 + 2) = *(_OWORD *)(v447 + 8);
              v1069 = *(int *)(v448 + 24);
              v2943 = DecorationPrePlannerResult;
              v1070 = v25;
              v1071 = v5;
              v1072 = (char *)v446 + v1069;
              v1073 = &v447[v1069];
              v1074 = sub_2408E57A4();
              v1075 = v1072;
              v5 = v1071;
              v25 = v1070;
              DecorationPrePlannerResult = v2943;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1074 - 8) + 32))(v1075, v1073, v1074);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v449 + 56))(v446, 0, 1, v448);
            }
            v1076 = DecorationPrePlannerResult[6];
            v1077 = (char *)(v13 + v1076);
            v1078 = &v14[v1076];
            v1079 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v1080 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v1079 - 8);
            v3060 = v25;
            if (v1080[6](v1078, 1, v1079))
            {
              v331 = v5;
              v1081 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              memcpy(v1077, v1078, *(_QWORD *)(*(_QWORD *)(v1081 - 8) + 64));
            }
            else
            {
              v1220 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              __dstf = v1080;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1220 - 8) + 48))(v1078, 1, v1220))
              {
                v1514 = (char *)&loc_24057BA74 + 4 * word_240901AFA[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v331 = v5;
              v1221 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(v1077, v1078, *(_QWORD *)(*(_QWORD *)(v1221 - 8) + 64));
              v2504 = *(int *)(v1079 + 20);
              v2505 = &v1077[v2504];
              v2506 = &v1078[v2504];
              v2507 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2507 - 8) + 32))(v2505, v2506, v2507);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstf[7])(v1077, 0, 1, v1079);
            }
            goto LABEL_812;
          case 0x22u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
            v451 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
            v452 = v13 + v451;
            v453 = v25;
            v454 = v5;
            v455 = &v14[v451];
            v456 = sub_2408E57A4();
            v457 = v455;
            v5 = v454;
            v25 = v453;
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v456 - 8) + 32))(v452, v457, v456);
            swift_storeEnumTagMultiPayload();
            goto LABEL_815;
          case 0x23u:
            v3115 = v5;
            v458 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
            v459 = *(_QWORD *)(v458 - 8);
            v2996 = a3;
            v3099 = v4;
            v2976 = v24;
            v3060 = v25;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v14, 1, v458))
            {
              v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
            }
            else
            {
              v2944 = v459;
              v1082 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v1082;
              *(_BYTE *)(v13 + 32) = v14[32];
              *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
              *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
              *(_QWORD *)(v13 + 72) = *((_QWORD *)v14 + 9);
              *(_BYTE *)(v13 + 80) = v14[80];
              *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
              *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
              v3021 = (int *)v458;
              v1083 = *(int *)(v458 + 68);
              v1084 = (_QWORD *)(v13 + v1083);
              v1085 = &v14[v1083];
              v1086 = type metadata accessor for ToolKitProtoTypeInstance(0);
              v1087 = *(_QWORD *)(v1086 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1087 + 48))(v1085, 1, v1086))
              {
                v1088 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
                memcpy(v1084, v1085, *(_QWORD *)(*(_QWORD *)(v1088 - 8) + 64));
              }
              else
              {
                *v1084 = *(_QWORD *)v1085;
                v1491 = *(int *)(v1086 + 20);
                v1492 = (char *)v1084 + v1491;
                v1493 = &v1085[v1491];
                v1494 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1494 - 8) + 32))(v1492, v1493, v1494);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1087 + 56))(v1084, 0, 1, v1086);
              }
              v1495 = v3021;
              *(_OWORD *)(v13 + v3021[18]) = *(_OWORD *)&v14[v3021[18]];
              v1496 = v3021[19];
              v1497 = (_OWORD *)(v13 + v1496);
              v1498 = &v14[v1496];
              v1499 = type metadata accessor for ToolKitProtoAppDefinition(0);
              v1500 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1499 - 8);
              if (((unsigned int (**)(char *, uint64_t, uint64_t))v1500)[6](v1498, 1, v1499))
              {
                v1501 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
                memcpy(v1497, v1498, *(_QWORD *)(*(_QWORD *)(v1501 - 8) + 64));
              }
              else
              {
                __dsti = v1500;
                v1608 = v15;
                v1609 = *((_OWORD *)v1498 + 1);
                *v1497 = *(_OWORD *)v1498;
                v1497[1] = v1609;
                v1610 = *((_OWORD *)v1498 + 3);
                v1497[2] = *((_OWORD *)v1498 + 2);
                v1497[3] = v1610;
                v1497[4] = *((_OWORD *)v1498 + 4);
                *((_BYTE *)v1497 + 80) = v1498[80];
                v1611 = *(int *)(v1499 + 40);
                v1612 = (_OWORD *)((char *)v1497 + v1611);
                v1613 = &v1498[v1611];
                v1614 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
                v1615 = *(_QWORD *)(v1614 - 8);
                v1616 = v1614;
                if ((*(unsigned int (**)(char *, uint64_t))(v1615 + 48))(v1613, 1))
                {
                  v1617 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                  memcpy(v1612, v1613, *(_QWORD *)(*(_QWORD *)(v1617 - 8) + 64));
                }
                else
                {
                  *v1612 = *(_OWORD *)v1613;
                  v1796 = *(int *)(v1616 + 20);
                  v2858 = (char *)v1612 + v1796;
                  v1797 = &v1613[v1796];
                  v1798 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1798 - 8) + 32))(v2858, v1797, v1798);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1615 + 56))(v1612, 0, 1, v1616);
                }
                v1799 = *(int *)(v1499 + 44);
                v1800 = (char *)v1497 + v1799;
                v1801 = &v1498[v1799];
                v1802 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1802 - 8) + 32))(v1800, v1801, v1802);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dsti + 7))(v1497, 0, 1, v1499);
                v15 = v1608;
                v1495 = v3021;
              }
              *(_OWORD *)(v13 + v1495[20]) = *(_OWORD *)&v14[v1495[20]];
              v1803 = v1495[21];
              v1804 = (_OWORD *)(v13 + v1803);
              v1805 = &v14[v1803];
              v1806 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
              v1807 = *(_QWORD *)(v1806 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1807 + 48))(v1805, 1, v1806))
              {
                v1808 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
                memcpy(v1804, v1805, *(_QWORD *)(*(_QWORD *)(v1808 - 8) + 64));
              }
              else
              {
                v1809 = *((_OWORD *)v1805 + 1);
                *v1804 = *(_OWORD *)v1805;
                v1804[1] = v1809;
                v1810 = *(int *)(v1806 + 24);
                v1811 = (char *)v1804 + v1810;
                v1812 = &v1805[v1810];
                v1813 = sub_2408E57A4();
                v1814 = v1811;
                v1495 = v3021;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1813 - 8) + 32))(v1814, v1812, v1813);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1807 + 56))(v1804, 0, 1, v1806);
              }
              v1815 = v1495[22];
              v1816 = (_OWORD *)(v13 + v1815);
              v1817 = &v14[v1815];
              v1818 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
              v1819 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1818 - 8);
              if (((unsigned int (**)(char *, uint64_t, uint64_t))v1819)[6](v1817, 1, v1818))
              {
                v1820 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
                memcpy(v1816, v1817, *(_QWORD *)(*(_QWORD *)(v1820 - 8) + 64));
              }
              else
              {
                __dstl = v1819;
                v1821 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v1822 = *(_QWORD *)(v1821 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1822 + 48))(v1817, 1, v1821))
                {
                  v1823 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                  memcpy(v1816, v1817, *(_QWORD *)(*(_QWORD *)(v1823 - 8) + 64));
                }
                else
                {
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    *v1816 = *(_OWORD *)v1817;
                    *((_BYTE *)v1816 + 16) = v1817[16];
                    *(_OWORD *)((char *)v1816 + 24) = *(_OWORD *)(v1817 + 24);
                    *(_OWORD *)((char *)v1816 + 40) = *(_OWORD *)(v1817 + 40);
                    v1832 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                   + 32);
                    v2859 = (char *)v1816 + v1832;
                    v2836 = &v1817[v1832];
                    v1833 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1833 - 8) + 32))(v2859, v2836, v1833);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v1816, v1817, *(_QWORD *)(v1822 + 64));
                  }
                  (*(void (**)(void))(v1822 + 56))();
                }
                v1893 = *(int *)(v1818 + 20);
                v1894 = (char *)v1816 + v1893;
                v1895 = &v1817[v1893];
                v1896 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1896 - 8) + 32))(v1894, v1895, v1896);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstl + 7))(v1816, 0, 1, v1818);
                v1495 = v3021;
              }
              v1897 = v1495[23];
              v1898 = (_OWORD *)(v13 + v1897);
              v1899 = &v14[v1897];
              v1900 = type metadata accessor for ToolKitProtoContainerDefinition(0);
              v1901 = *(_QWORD **)(v1900 - 8);
              __dstn = (unsigned int (*)(char *, uint64_t, uint64_t))v1901[6];
              if (__dstn(v1899, 1, v1900))
              {
                v1902 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                memcpy(v1898, v1899, *(_QWORD *)(*(_QWORD *)(v1902 - 8) + 64));
              }
              else
              {
                v2861 = v1901;
                v1903 = v15;
                v1904 = *((_OWORD *)v1899 + 1);
                *v1898 = *(_OWORD *)v1899;
                v1898[1] = v1904;
                *((_WORD *)v1898 + 16) = *((_WORD *)v1899 + 16);
                *(_OWORD *)((char *)v1898 + 40) = *(_OWORD *)(v1899 + 40);
                *(_OWORD *)((char *)v1898 + 56) = *(_OWORD *)(v1899 + 56);
                v1905 = *(int *)(v1900 + 40);
                v1906 = (_OWORD *)((char *)v1898 + v1905);
                v1907 = &v1899[v1905];
                v1908 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v1909 = *(_QWORD *)(v1908 - 8);
                v1910 = v1908;
                if ((*(unsigned int (**)(char *, uint64_t))(v1909 + 48))(v1907, 1))
                {
                  v1911 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                  memcpy(v1906, v1907, *(_QWORD *)(*(_QWORD *)(v1911 - 8) + 64));
                }
                else
                {
                  *v1906 = *(_OWORD *)v1907;
                  v1912 = *(int *)(v1910 + 20);
                  v2837 = (char *)v1906 + v1912;
                  v1913 = &v1907[v1912];
                  v1914 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1914 - 8) + 32))(v2837, v1913, v1914);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1909 + 56))(v1906, 0, 1, v1910);
                }
                v1915 = *(int *)(v1900 + 44);
                v1916 = (char *)v1898 + v1915;
                v1917 = &v1899[v1915];
                v1918 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1918 - 8) + 32))(v1916, v1917, v1918);
                v1901 = v2861;
                ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))v2861[7])(v1898, 0, 1, v1900);
                v15 = v1903;
                v1495 = v3021;
              }
              v1919 = v1495[24];
              v1920 = (_OWORD *)(v13 + v1919);
              v1921 = &v14[v1919];
              if (__dstn(&v14[v1919], 1, v1900))
              {
                v1922 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                memcpy(v1920, v1921, *(_QWORD *)(*(_QWORD *)(v1922 - 8) + 64));
              }
              else
              {
                v2862 = v1901;
                v1923 = v15;
                v1924 = *((_OWORD *)v1921 + 1);
                *v1920 = *(_OWORD *)v1921;
                v1920[1] = v1924;
                *((_WORD *)v1920 + 16) = *((_WORD *)v1921 + 16);
                *(_OWORD *)((char *)v1920 + 40) = *(_OWORD *)(v1921 + 40);
                *(_OWORD *)((char *)v1920 + 56) = *(_OWORD *)(v1921 + 56);
                v1925 = *(int *)(v1900 + 40);
                v1926 = (_OWORD *)((char *)v1920 + v1925);
                v1927 = &v1921[v1925];
                v1928 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v1929 = *(_QWORD *)(v1928 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1929 + 48))(v1927, 1, v1928))
                {
                  v1930 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                  memcpy(v1926, v1927, *(_QWORD *)(*(_QWORD *)(v1930 - 8) + 64));
                }
                else
                {
                  *v1926 = *(_OWORD *)v1927;
                  v1931 = *(int *)(v1928 + 20);
                  __srcy = (char *)v1926 + v1931;
                  v1932 = &v1927[v1931];
                  v1933 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1933 - 8) + 32))(__srcy, v1932, v1933);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1929 + 56))(v1926, 0, 1, v1928);
                }
                v1934 = *(int *)(v1900 + 44);
                v1935 = (char *)v1920 + v1934;
                v1936 = &v1921[v1934];
                v1937 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1937 - 8) + 32))(v1935, v1936, v1937);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v2862 + 7))(v1920, 0, 1, v1900);
                v15 = v1923;
                v1495 = v3021;
              }
              v1938 = v1495[25];
              v1939 = v1495;
              v1940 = v13 + v1938;
              v1941 = &v14[v1938];
              v1942 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1942 - 8) + 32))(v1940, v1941, v1942);
              (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v2944 + 56))(v13, 0, 1, v1939);
            }
            v1943 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
            v1944 = v1943[5];
            v1945 = (_DWORD *)(v13 + v1944);
            v1946 = &v14[v1944];
            v1947 = type metadata accessor for TranscriptProtoStatementID(0);
            v1948 = *(_QWORD *)(v1947 - 8);
            v1949 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1948 + 48);
            if (v1949(v1946, 1, v1947))
            {
              v1950 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1945, v1946, *(_QWORD *)(*(_QWORD *)(v1950 - 8) + 64));
            }
            else
            {
              *v1945 = *(_DWORD *)v1946;
              *(_OWORD *)(v1945 + 2) = *(_OWORD *)(v1946 + 8);
              v1951 = *(int *)(v1947 + 24);
              v1952 = (char *)v1945 + v1951;
              v1953 = &v1946[v1951];
              v1954 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1954 - 8) + 32))(v1952, v1953, v1954);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1948 + 56))(v1945, 0, 1, v1947);
            }
            v1955 = v1943[6];
            v1956 = (_DWORD *)(v13 + v1955);
            v1957 = &v14[v1955];
            if (v1949(&v14[v1955], 1, v1947))
            {
              v1958 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1956, v1957, *(_QWORD *)(*(_QWORD *)(v1958 - 8) + 64));
            }
            else
            {
              *v1956 = *(_DWORD *)v1957;
              *(_OWORD *)(v1956 + 2) = *(_OWORD *)(v1957 + 8);
              v1959 = *(int *)(v1947 + 24);
              v1960 = (char *)v1956 + v1959;
              v1961 = &v1957[v1959];
              v1962 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1962 - 8) + 32))(v1960, v1961, v1962);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1948 + 56))(v1956, 0, 1, v1947);
            }
            v4 = v3099;
            v24 = v2976;
            v1963 = v1943[7];
            v1964 = v13 + v1963;
            v1965 = &v14[v1963];
            v1966 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1966 - 8) + 32))(v1964, v1965, v1966);
            goto LABEL_790;
          case 0x24u:
            v3060 = v25;
            v3115 = v5;
            v2977 = v24;
            v2999 = a3;
            v3012 = v15;
            v461 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_BYTE *)(v13 + 16) = v14[16];
            *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
            v462 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
            v463 = *(int *)(v462 + 28);
            v464 = (_DWORD *)(v13 + v463);
            v465 = &v14[v463];
            v466 = type metadata accessor for TranscriptProtoStatementID(0);
            v467 = *(_QWORD *)(v466 - 8);
            v468 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v467 + 48);
            if (v468(v465, 1, v466))
            {
              v469 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
            }
            else
            {
              *v464 = *(_DWORD *)v465;
              *(_OWORD *)(v464 + 2) = *(_OWORD *)(v465 + 8);
              v1089 = *(int *)(v466 + 24);
              v1090 = v462;
              v1091 = (char *)v464 + v1089;
              v1092 = &v465[v1089];
              v1093 = sub_2408E57A4();
              v1094 = v1091;
              v462 = v1090;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1093 - 8) + 32))(v1094, v1092, v1093);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v467 + 56))(v464, 0, 1, v466);
            }
            v1095 = v462;
            v1096 = *(int *)(v462 + 32);
            v1097 = (_DWORD *)(v13 + v1096);
            v1098 = &v14[v1096];
            if (v468(&v14[v1096], 1, v466))
            {
              v1099 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1097, v1098, *(_QWORD *)(*(_QWORD *)(v1099 - 8) + 64));
            }
            else
            {
              *v1097 = *(_DWORD *)v1098;
              *(_OWORD *)(v1097 + 2) = *(_OWORD *)(v1098 + 8);
              v1222 = *(int *)(v466 + 24);
              v1223 = (char *)v1097 + v1222;
              v1224 = &v1098[v1222];
              v1225 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1225 - 8) + 32))(v1223, v1224, v1225);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v467 + 56))(v1097, 0, 1, v466);
            }
            v4 = v461;
            v24 = v2977;
            v1226 = *(int *)(v1095 + 36);
            v1227 = v13 + v1226;
            v1228 = &v14[v1226];
            v1229 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1229 - 8) + 32))(v1227, v1228, v1229);
            goto LABEL_400;
          case 0x25u:
            v3060 = v25;
            v3115 = v5;
            v2978 = v24;
            v2999 = a3;
            v3012 = v15;
            v470 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_BYTE *)(v13 + 16) = v14[16];
            v471 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
            v472 = *(int *)(v471 + 24);
            v473 = (_DWORD *)(v13 + v472);
            v474 = &v14[v472];
            v475 = type metadata accessor for TranscriptProtoStatementID(0);
            v476 = *(_QWORD *)(v475 - 8);
            v477 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v476 + 48);
            if (v477(v474, 1, v475))
            {
              v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v473, v474, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
            }
            else
            {
              *v473 = *(_DWORD *)v474;
              *(_OWORD *)(v473 + 2) = *(_OWORD *)(v474 + 8);
              v1100 = *(int *)(v475 + 24);
              v1101 = v471;
              v1102 = (char *)v473 + v1100;
              v1103 = &v474[v1100];
              v1104 = sub_2408E57A4();
              v1105 = v1102;
              v471 = v1101;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1104 - 8) + 32))(v1105, v1103, v1104);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v476 + 56))(v473, 0, 1, v475);
            }
            v1106 = v471;
            v1107 = *(int *)(v471 + 28);
            v1108 = (_DWORD *)(v13 + v1107);
            v1109 = &v14[v1107];
            if (v477(&v14[v1107], 1, v475))
            {
              v1110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1108, v1109, *(_QWORD *)(*(_QWORD *)(v1110 - 8) + 64));
            }
            else
            {
              *v1108 = *(_DWORD *)v1109;
              *(_OWORD *)(v1108 + 2) = *(_OWORD *)(v1109 + 8);
              v1230 = *(int *)(v475 + 24);
              v1231 = (char *)v1108 + v1230;
              v1232 = &v1109[v1230];
              v1233 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1233 - 8) + 32))(v1231, v1232, v1233);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v476 + 56))(v1108, 0, 1, v475);
            }
            v4 = v470;
            v24 = v2978;
            v1234 = *(int *)(v1106 + 32);
            v1235 = v13 + v1234;
            v1236 = &v14[v1234];
            v1237 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1237 - 8) + 32))(v1235, v1236, v1237);
            goto LABEL_400;
          case 0x26u:
            v3012 = v15;
            v3060 = v25;
            v3093 = v4;
            v3115 = v5;
            v479 = type metadata accessor for ToolKitProtoTypedValue(0);
            v480 = *(_QWORD *)(v479 - 8);
            v481 = a3;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v480 + 48))(v14, 1, v479))
            {
              v482 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v482 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v1111 = *(int *)(v479 + 20);
              v1112 = v13 + v1111;
              v1113 = &v14[v1111];
              v1114 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1114 - 8) + 32))(v1112, v1113, v1114);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v480 + 56))(v13, 0, 1, v479);
            }
            v1115 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
            v1116 = *(int *)(v1115 + 20);
            v1117 = (_QWORD *)(v13 + v1116);
            v1118 = &v14[v1116];
            v1119 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v1120 = *(_QWORD *)(v1119 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1120 + 48))(v1118, 1, v1119))
            {
              v1121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v1117, v1118, *(_QWORD *)(*(_QWORD *)(v1121 - 8) + 64));
            }
            else
            {
              *v1117 = *(_QWORD *)v1118;
              v1238 = *(int *)(v1119 + 20);
              v1239 = (char *)v1117 + v1238;
              v1240 = &v1118[v1238];
              v1241 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1241 - 8) + 32))(v1239, v1240, v1241);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1120 + 56))(v1117, 0, 1, v1119);
            }
            v1242 = v1115;
            v1243 = *(int *)(v1115 + 24);
            v1244 = (_DWORD *)(v13 + v1243);
            v1245 = &v14[v1243];
            v1246 = type metadata accessor for TranscriptProtoStatementID(0);
            v1247 = *(_QWORD *)(v1246 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1247 + 48))(v1245, 1, v1246))
            {
              v1248 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1244, v1245, *(_QWORD *)(*(_QWORD *)(v1248 - 8) + 64));
            }
            else
            {
              *v1244 = *(_DWORD *)v1245;
              *(_OWORD *)(v1244 + 2) = *(_OWORD *)(v1245 + 8);
              v1266 = *(int *)(v1246 + 24);
              v1267 = (char *)v1244 + v1266;
              v1268 = &v1245[v1266];
              v1269 = sub_2408E57A4();
              v1270 = v1267;
              v1242 = v1115;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1269 - 8) + 32))(v1270, v1268, v1269);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1247 + 56))(v1244, 0, 1, v1246);
            }
            a3 = v481;
            v1271 = *(int *)(v1242 + 28);
            v1272 = v13 + v1271;
            v1273 = &v14[v1271];
            v1274 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1274 - 8) + 32))(v1272, v1273, v1274);
            goto LABEL_397;
          case 0x27u:
            v3012 = v15;
            v3060 = v25;
            v3100 = v4;
            v3115 = v5;
            v483 = type metadata accessor for ToolKitProtoTypedValue(0);
            v484 = *(_QWORD *)(v483 - 8);
            v2999 = a3;
            v485 = v24;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v484 + 48))(v14, 1, v483))
            {
              v486 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v486 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v1122 = *(int *)(v483 + 20);
              v1123 = v13 + v1122;
              v1124 = &v14[v1122];
              v1125 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1125 - 8) + 32))(v1123, v1124, v1125);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v484 + 56))(v13, 0, 1, v483);
            }
            v1126 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
            v1127 = v1126[5];
            v1128 = (_DWORD *)(v13 + v1127);
            v1129 = &v14[v1127];
            v1130 = type metadata accessor for TranscriptProtoStatementID(0);
            v1131 = *(_QWORD *)(v1130 - 8);
            v1132 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1131 + 48);
            if (v1132(v1129, 1, v1130))
            {
              v1133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1128, v1129, *(_QWORD *)(*(_QWORD *)(v1133 - 8) + 64));
            }
            else
            {
              *v1128 = *(_DWORD *)v1129;
              *(_OWORD *)(v1128 + 2) = *(_OWORD *)(v1129 + 8);
              v1249 = *(int *)(v1130 + 24);
              v1250 = (char *)v1128 + v1249;
              v1251 = &v1129[v1249];
              v1252 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1252 - 8) + 32))(v1250, v1251, v1252);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1131 + 56))(v1128, 0, 1, v1130);
            }
            v1253 = v1126[6];
            v1254 = (_DWORD *)(v13 + v1253);
            v1255 = &v14[v1253];
            if (v1132(&v14[v1253], 1, v1130))
            {
              v1256 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1254, v1255, *(_QWORD *)(*(_QWORD *)(v1256 - 8) + 64));
            }
            else
            {
              *v1254 = *(_DWORD *)v1255;
              *(_OWORD *)(v1254 + 2) = *(_OWORD *)(v1255 + 8);
              v1275 = *(int *)(v1130 + 24);
              v1276 = (char *)v1254 + v1275;
              v1277 = &v1255[v1275];
              v1278 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1278 - 8) + 32))(v1276, v1277, v1278);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1131 + 56))(v1254, 0, 1, v1130);
            }
            v4 = v3100;
            v24 = v485;
            v1279 = v1126[7];
            v1280 = v13 + v1279;
            v1281 = &v14[v1279];
            v1282 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1282 - 8) + 32))(v1280, v1281, v1282);
LABEL_400:
            swift_storeEnumTagMultiPayload();
            a3 = v2999;
            goto LABEL_401;
          case 0x28u:
            v3012 = v15;
            v3060 = v25;
            v3093 = v4;
            v3115 = v5;
            v487 = v24;
            v488 = a3;
            v489 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v489;
            DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
            v491 = *(int *)(DecorationResult + 32);
            v492 = (_OWORD *)(v13 + v491);
            v493 = &v14[v491];
            DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
            v495 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v495 + 48))(v493, 1, DecorationToolRetrievalResponse))
            {
              v496 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
              memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v496 - 8) + 64));
            }
            else
            {
              v1134 = *((_OWORD *)v493 + 1);
              *v492 = *(_OWORD *)v493;
              v492[1] = v1134;
              *((_DWORD *)v492 + 8) = *((_DWORD *)v493 + 8);
              *(_OWORD *)((char *)v492 + 40) = *(_OWORD *)(v493 + 40);
              v1135 = *(int *)(DecorationToolRetrievalResponse + 36);
              v1136 = (char *)v492 + v1135;
              v1137 = &v493[v1135];
              v1138 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1138 - 8) + 32))(v1136, v1137, v1138);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v495 + 56))(v492, 0, 1, DecorationToolRetrievalResponse);
            }
            a3 = v488;
            v1139 = *(int *)(DecorationResult + 36);
            v1140 = v13 + v1139;
            v1141 = &v14[v1139];
            v1142 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1142 - 8) + 32))(v1140, v1141, v1142);
            v24 = v487;
LABEL_397:
            swift_storeEnumTagMultiPayload();
            v4 = v3093;
LABEL_401:
            v15 = v3012;
            goto LABEL_791;
          case 0x2Au:
            v3060 = v25;
            v331 = v5;
            v2975 = v24;
            v2998 = a3;
            v3098 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
            v497 = DecorationPrePlannerResult[5];
            v498 = (_DWORD *)(v13 + v497);
            v499 = &v14[v497];
            v500 = type metadata accessor for TranscriptProtoStatementID(0);
            v501 = *(_QWORD *)(v500 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v501 + 48))(v499, 1, v500))
            {
              v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v498, v499, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
            }
            else
            {
              *v498 = *(_DWORD *)v499;
              *(_OWORD *)(v498 + 2) = *(_OWORD *)(v499 + 8);
              v1143 = *(int *)(v500 + 24);
              v1144 = (char *)v498 + v1143;
              v1145 = &v499[v1143];
              v1146 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1146 - 8) + 32))(v1144, v1145, v1146);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v501 + 56))(v498, 0, 1, v500);
            }
            v1147 = DecorationPrePlannerResult[6];
            v1148 = (char *)(v13 + v1147);
            v1149 = &v14[v1147];
            DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
            v1151 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1151 + 48))(v1149, 1, DecorationPrePlannerResultPayload))
            {
              v1152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
              memcpy(v1148, v1149, *(_QWORD *)(*(_QWORD *)(v1152 - 8) + 64));
            }
            else
            {
              v3023 = v1151;
              DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                         - 8)
                                                                             + 48))(v1149, 1, DecorationPrePlannerPayloadEnum))
              {
                v1515 = (char *)&loc_24057BB1C + 4 * word_240901AEE[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
              memcpy(v1148, v1149, *(_QWORD *)(*(_QWORD *)(v1258 - 8) + 64));
              v1967 = *(int *)(DecorationPrePlannerResultPayload + 20);
              v1968 = &v1148[v1967];
              v1969 = &v1149[v1967];
              v1970 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1970 - 8) + 32))(v1968, v1969, v1970);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3023 + 56))(v1148, 0, 1, DecorationPrePlannerResultPayload);
            }
LABEL_812:
            v2508 = DecorationPrePlannerResult[7];
            v2509 = v13 + v2508;
            v2510 = &v14[v2508];
            v2511 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2511 - 8) + 32))(v2509, v2510, v2511);
            v24 = v2975;
            swift_storeEnumTagMultiPayload();
            v4 = v3098;
            a3 = v2998;
LABEL_813:
            v5 = v331;
            goto LABEL_814;
          default:
            memcpy((void *)v13, v14, *(_QWORD *)(v25 + 64));
            goto LABEL_815;
        }
LABEL_816:
        v2512 = *(int *)(v15 + 20);
        v2513 = v13 + v2512;
        v2514 = &v14[v2512];
        v2515 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2515 - 8) + 40))(v2513, v2514, v2515);
        goto LABEL_817;
      }
    }
    else
    {
      if (!v28)
      {
        if (v5 != v4)
        {
          sub_240388AE4(v13, type metadata accessor for TranscriptProtoPayloadEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v45 = v5;
              v2988 = a3;
              v3007 = v15;
              v3077 = v4;
              *(_BYTE *)v13 = *v14;
              v46 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
              v47 = v46[5];
              v48 = (_OWORD *)(v13 + v47);
              v49 = &v14[v47];
              v50 = type metadata accessor for TranscriptProtoLocaleSettings(0);
              v51 = *(_QWORD *)(v50 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
              {
                v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
                memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
              }
              else
              {
                v1283 = *((_OWORD *)v49 + 1);
                *v48 = *(_OWORD *)v49;
                v48[1] = v1283;
                v48[2] = *((_OWORD *)v49 + 2);
                v1284 = *(int *)(v50 + 28);
                v1285 = v46;
                v1286 = (char *)v48 + v1284;
                v1287 = &v49[v1284];
                v1288 = sub_2408E57A4();
                v1289 = v1286;
                v46 = v1285;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1288 - 8) + 32))(v1289, v1287, v1288);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
              }
              v1290 = v46[6];
              v1291 = (_OWORD *)(v13 + v1290);
              v1292 = &v14[v1290];
              v1293 = type metadata accessor for TranscriptProtoDeviceDetails(0);
              v1294 = *(_QWORD *)(v1293 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1294 + 48))(v1292, 1, v1293))
              {
                v1295 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
                memcpy(v1291, v1292, *(_QWORD *)(*(_QWORD *)(v1295 - 8) + 64));
                v4 = v3077;
              }
              else
              {
                v3068 = v46;
                v3123 = v45;
                *v1291 = *(_OWORD *)v1292;
                v1544 = *(int *)(v1293 + 20);
                v1545 = (_DWORD *)((char *)v1291 + v1544);
                v1546 = &v1292[v1544];
                v1547 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
                v1548 = *(_QWORD *)(v1547 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1548 + 48))(v1546, 1, v1547))
                {
                  v1549 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
                  memcpy(v1545, v1546, *(_QWORD *)(*(_QWORD *)(v1549 - 8) + 64));
                }
                else
                {
                  *v1545 = *(_DWORD *)v1546;
                  v1783 = *(int *)(v1547 + 20);
                  v2951 = (char *)v1545 + v1783;
                  v1784 = &v1546[v1783];
                  v1785 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1785 - 8) + 32))(v2951, v1784, v1785);
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1548 + 56))(v1545, 0, 1, v1547);
                }
                v1786 = *(int *)(v1293 + 24);
                v1787 = (char *)v1291 + v1786;
                v1788 = &v1292[v1786];
                v1789 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1789 - 8) + 32))(v1787, v1788, v1789);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1294 + 56))(v1291, 0, 1, v1293);
                v4 = v3077;
                v45 = v3123;
                v46 = v3068;
              }
              v1790 = v46[7];
              v1791 = v13 + v1790;
              v1792 = &v14[v1790];
              v1793 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1793 - 8) + 32))(v1791, v1792, v1793);
              swift_storeEnumTagMultiPayload();
              a3 = v2988;
              v15 = v3007;
              v5 = v45;
              goto LABEL_816;
            case 1u:
              v3101 = v4;
              v3118 = v5;
              v3016 = v15;
              v773 = a3;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_BYTE *)(v13 + 16) = v14[16];
              v774 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
              v775 = v774[6];
              v776 = (_DWORD *)(v13 + v775);
              v777 = &v14[v775];
              v778 = type metadata accessor for TranscriptProtoStatementID(0);
              v779 = *(_QWORD *)(v778 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v779 + 48))(v777, 1, v778))
              {
                v780 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v776, v777, *(_QWORD *)(*(_QWORD *)(v780 - 8) + 64));
              }
              else
              {
                *v776 = *(_DWORD *)v777;
                *(_OWORD *)(v776 + 2) = *(_OWORD *)(v777 + 8);
                v1296 = *(int *)(v778 + 24);
                v1297 = (char *)v776 + v1296;
                v1298 = &v777[v1296];
                v1299 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1299 - 8) + 32))(v1297, v1298, v1299);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v779 + 56))(v776, 0, 1, v778);
              }
              a3 = v773;
              *(_OWORD *)(v13 + v774[7]) = *(_OWORD *)&v14[v774[7]];
              v1300 = v774[8];
              v1301 = v13 + v1300;
              v1302 = &v14[v1300];
              v1303 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1303 - 8) + 32))(v1301, v1302, v1303);
              goto LABEL_456;
            case 2u:
              *(_QWORD *)v13 = *(_QWORD *)v14;
              *(_BYTE *)(v13 + 8) = v14[8];
              *(_OWORD *)(v13 + 16) = *((_OWORD *)v14 + 1);
              v781 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
              v782 = v13 + v781;
              v783 = v5;
              v784 = &v14[v781];
              v785 = sub_2408E57A4();
              v786 = v784;
              v5 = v783;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v785 - 8) + 32))(v782, v786, v785);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 3u:
              v3000 = a3;
              v3102 = v4;
              *(_BYTE *)v13 = *v14;
              v787 = (int *)type metadata accessor for TranscriptProtoRequest(0);
              v788 = v787[5];
              v789 = (char *)(v13 + v788);
              v790 = &v14[v788];
              v791 = type metadata accessor for TranscriptProtoRequestContent(0);
              v792 = *(_QWORD *)(v791 - 8);
              v3119 = v5;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v792 + 48))(v790, 1, v791))
              {
                v793 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
                memcpy(v789, v790, *(_QWORD *)(*(_QWORD *)(v793 - 8) + 64));
              }
              else
              {
                v3064 = v787;
                v1304 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1304 - 8) + 48))(v790, 1, v1304))
                {
                  v1753 = (char *)&loc_24057D2A8 + 4 * word_240901C22[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1305 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
                memcpy(v789, v790, *(_QWORD *)(*(_QWORD *)(v1305 - 8) + 64));
                v2255 = *(int *)(v791 + 20);
                v2256 = &v789[v2255];
                v2257 = &v790[v2255];
                v2258 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2258 - 8) + 32))(v2256, v2257, v2258);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v792 + 56))(v789, 0, 1, v791);
                v787 = v3064;
              }
              v2259 = v787[6];
              v2260 = (char *)(v13 + v2259);
              v2261 = &v14[v2259];
              v2262 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
              v2263 = *(_QWORD *)(v2262 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2263 + 48))(v2261, 1, v2262))
              {
                v2264 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
                memcpy(v2260, v2261, *(_QWORD *)(*(_QWORD *)(v2264 - 8) + 64));
              }
              else
              {
                v3073 = v787;
                v2265 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2265 - 8) + 48))(v2261, 1, v2265))
                {
                  v2267 = (char *)&loc_240586DAC + 4 * byte_240901C2A[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v2266 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
                memcpy(v2260, v2261, *(_QWORD *)(*(_QWORD *)(v2266 - 8) + 64));
                v2268 = *(int *)(v2262 + 20);
                v2269 = &v2260[v2268];
                v2270 = &v2261[v2268];
                v2271 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2271 - 8) + 32))(v2269, v2270, v2271);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2263 + 56))(v2260, 0, 1, v2262);
                v787 = v3073;
              }
              *(_OWORD *)(v13 + v787[7]) = *(_OWORD *)&v14[v787[7]];
              v2272 = v787[8];
              v2273 = (_QWORD *)(v13 + v2272);
              v2274 = &v14[v2272];
              v2275 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
              v2276 = *(_QWORD *)(v2275 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2276 + 48))(v2274, 1, v2275))
              {
                v2277 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
                memcpy(v2273, v2274, *(_QWORD *)(*(_QWORD *)(v2277 - 8) + 64));
              }
              else
              {
                *(_OWORD *)v2273 = *(_OWORD *)v2274;
                v2273[2] = *((_QWORD *)v2274 + 2);
                v2278 = *(int *)(v2275 + 24);
                v2279 = v787;
                v2280 = (char *)v2273 + v2278;
                v2281 = &v2274[v2278];
                v2282 = sub_2408E57A4();
                v2283 = v2280;
                v787 = v2279;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2282 - 8) + 32))(v2283, v2281, v2282);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2276 + 56))(v2273, 0, 1, v2275);
              }
              v4 = v3102;
              v2284 = v787[9];
              v2285 = v13 + v2284;
              v2286 = &v14[v2284];
              v2287 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2287 - 8) + 32))(v2285, v2286, v2287);
              goto LABEL_874;
            case 4u:
              v794 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v794;
              *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
              *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
              *(_BYTE *)(v13 + 56) = v14[56];
              v795 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
              v796 = v13 + v795;
              v797 = v5;
              v798 = &v14[v795];
              v799 = sub_2408E57A4();
              v800 = v798;
              v5 = v797;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v799 - 8) + 32))(v796, v800, v799);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 5u:
              v3101 = v4;
              v3118 = v5;
              v3016 = v15;
              v801 = a3;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_BYTE *)(v13 + 16) = v14[16];
              *(_QWORD *)(v13 + 24) = *((_QWORD *)v14 + 3);
              v802 = (int *)type metadata accessor for TranscriptProtoAction(0);
              v803 = v802[7];
              v804 = (_DWORD *)(v13 + v803);
              v805 = &v14[v803];
              v806 = type metadata accessor for TranscriptProtoStatementID(0);
              v807 = *(_QWORD *)(v806 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v807 + 48))(v805, 1, v806))
              {
                v808 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v804, v805, *(_QWORD *)(*(_QWORD *)(v808 - 8) + 64));
              }
              else
              {
                *v804 = *(_DWORD *)v805;
                *(_OWORD *)(v804 + 2) = *(_OWORD *)(v805 + 8);
                v1306 = *(int *)(v806 + 24);
                v1307 = (char *)v804 + v1306;
                v1308 = &v805[v1306];
                v1309 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1309 - 8) + 32))(v1307, v1308, v1309);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v807 + 56))(v804, 0, 1, v806);
              }
              a3 = v801;
              *(_OWORD *)(v13 + v802[8]) = *(_OWORD *)&v14[v802[8]];
              *(_OWORD *)(v13 + v802[9]) = *(_OWORD *)&v14[v802[9]];
              *(_OWORD *)(v13 + v802[10]) = *(_OWORD *)&v14[v802[10]];
              v1310 = v802[11];
              v1311 = v13 + v1310;
              v1312 = &v14[v1310];
              v1313 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1313 - 8) + 32))(v1311, v1312, v1313);
              goto LABEL_456;
            case 6u:
              v3101 = v4;
              v3118 = v5;
              v3016 = v15;
              v809 = a3;
              v810 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v810;
              v811 = *((_OWORD *)v14 + 3);
              *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
              *(_OWORD *)(v13 + 48) = v811;
              v812 = type metadata accessor for TranscriptProtoClientAction(0);
              v813 = *(int *)(v812 + 36);
              v814 = (_DWORD *)(v13 + v813);
              v815 = &v14[v813];
              v816 = type metadata accessor for TranscriptProtoStatementID(0);
              v817 = *(_QWORD *)(v816 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v817 + 48))(v815, 1, v816))
              {
                v818 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v814, v815, *(_QWORD *)(*(_QWORD *)(v818 - 8) + 64));
              }
              else
              {
                *v814 = *(_DWORD *)v815;
                *(_OWORD *)(v814 + 2) = *(_OWORD *)(v815 + 8);
                v1314 = *(int *)(v816 + 24);
                v1315 = (char *)v814 + v1314;
                v1316 = &v815[v1314];
                v1317 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1317 - 8) + 32))(v1315, v1316, v1317);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v817 + 56))(v814, 0, 1, v816);
              }
              a3 = v809;
              v1318 = *(int *)(v812 + 40);
              v1319 = v13 + v1318;
              v1320 = &v14[v1318];
              v1321 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1321 - 8) + 32))(v1319, v1320, v1321);
              goto LABEL_456;
            case 7u:
              v3017 = v15;
              v819 = a3;
              v3103 = v4;
              v3120 = v5;
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v820 = type metadata accessor for TranscriptProtoQueryStep(0);
              v821 = *(int *)(v820 + 20);
              v822 = (_DWORD *)(v13 + v821);
              v823 = &v14[v821];
              v824 = type metadata accessor for TranscriptProtoStatementID(0);
              v825 = *(_QWORD *)(v824 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v825 + 48))(v823, 1, v824))
                goto LABEL_246;
              goto LABEL_413;
            case 8u:
              v3017 = v15;
              v819 = a3;
              v3103 = v4;
              v3120 = v5;
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v820 = type metadata accessor for TranscriptProtoVariableStep(0);
              v827 = *(int *)(v820 + 20);
              v822 = (_DWORD *)(v13 + v827);
              v823 = &v14[v827];
              v824 = type metadata accessor for TranscriptProtoStatementID(0);
              v825 = *(_QWORD *)(v824 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v825 + 48))(v823, 1, v824))
              {
LABEL_246:
                v826 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v822, v823, *(_QWORD *)(*(_QWORD *)(v826 - 8) + 64));
              }
              else
              {
LABEL_413:
                *v822 = *(_DWORD *)v823;
                *(_OWORD *)(v822 + 2) = *(_OWORD *)(v823 + 8);
                v1322 = *(int *)(v824 + 24);
                v1323 = (char *)v822 + v1322;
                v1324 = &v823[v1322];
                v1325 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1325 - 8) + 32))(v1323, v1324, v1325);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v825 + 56))(v822, 0, 1, v824);
              }
              a3 = v819;
              v1326 = *(int *)(v820 + 24);
              v1327 = v13 + v1326;
              v1328 = &v14[v1326];
              v1329 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1329 - 8) + 32))(v1327, v1328, v1329);
              goto LABEL_434;
            case 0xAu:
              v828 = v5;
              v829 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v829 - 8) + 48))(v14, 1, v829))
              {
                v1330 = (char *)&loc_24057A990 + 4 * word_240901C1A[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v830 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
              memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v830 - 8) + 64));
              v2150 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
              v2151 = v13 + v2150;
              v2152 = &v14[v2150];
              v2153 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2153 - 8) + 32))(v2151, v2152, v2153);
              goto LABEL_708;
            case 0xBu:
              v828 = v5;
              v831 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
              v832 = *(_QWORD *)(v831 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v832 + 48))(v14, 1, v831))
              {
                v833 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v833 - 8) + 64));
              }
              else
              {
                v3004 = a3;
                v3024 = v15;
                v1331 = v4;
                v1332 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
                v1333 = *(_QWORD *)(v1332 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1333 + 48))(v14, 1, v1332))
                {
                  v1334 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
                  memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v1334 - 8) + 64));
                }
                else
                {
                  v1754 = *((_OWORD *)v14 + 1);
                  *(_OWORD *)v13 = *(_OWORD *)v14;
                  *(_OWORD *)(v13 + 16) = v1754;
                  *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
                  v1755 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
                  v3071 = v13 + v1755;
                  v1756 = &v14[v1755];
                  v1757 = sub_2408E57A4();
                  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1757 - 8) + 32))(v3071, v1756, v1757);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1333 + 56))(v13, 0, 1, v1332);
                }
                v1758 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
                v1759 = v13 + v1758;
                v1760 = &v14[v1758];
                v1761 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1761 - 8) + 32))(v1759, v1760, v1761);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v832 + 56))(v13, 0, 1, v831);
                v4 = v1331;
                a3 = v3004;
                v15 = v3024;
              }
              v1762 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
              v1763 = v13 + v1762;
              v1764 = &v14[v1762];
              v1765 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1765 - 8) + 32))(v1763, v1764, v1765);
LABEL_708:
              swift_storeEnumTagMultiPayload();
              v5 = v828;
              goto LABEL_816;
            case 0xCu:
              v834 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v834;
              *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
              v835 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
              v836 = v13 + v835;
              v837 = v5;
              v838 = &v14[v835];
              v839 = sub_2408E57A4();
              v840 = v838;
              v5 = v837;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v839 - 8) + 32))(v836, v840, v839);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0xDu:
              v841 = v5;
              v3001 = a3;
              v3104 = v4;
              v842 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v842;
              v843 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
              v844 = v843[6];
              v845 = (char *)(v13 + v844);
              v846 = &v14[v844];
              v847 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
              v848 = *(_QWORD *)(v847 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v848 + 48))(v846, 1, v847))
              {
                v849 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
                memcpy(v845, v846, *(_QWORD *)(*(_QWORD *)(v849 - 8) + 64));
              }
              else
              {
                v3065 = v843;
                v1335 = v15;
                v1336 = v841;
                v1337 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                v1338 = *(_QWORD *)(v1337 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1338 + 48))(v846, 1, v1337))
                {
                  v1339 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
                  memcpy(v845, v846, *(_QWORD *)(*(_QWORD *)(v1339 - 8) + 64));
                }
                else
                {
                  v1766 = swift_getEnumCaseMultiPayload();
                  switch(v1766)
                  {
                    case 6:
                      v2019 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2019 - 8) + 32))(v845, v846, v2019);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 5:
                      *v845 = *v846;
                      v2020 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                     + 20);
                      v3033 = &v845[v2020];
                      v2955 = &v846[v2020];
                      v2021 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2021 - 8) + 32))(v3033, v2955, v2021);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 1:
                      *(_QWORD *)v845 = *(_QWORD *)v846;
                      v1767 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                      v3031 = &v845[v1767];
                      v2950 = &v846[v1767];
                      v1768 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1768 - 8) + 32))(v3031, v2950, v1768);
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v845, v846, *(_QWORD *)(v1338 + 64));
                      break;
                  }
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1338 + 56))(v845, 0, 1, v1337);
                }
                v2022 = *(int *)(v847 + 20);
                v2023 = &v845[v2022];
                v2024 = &v846[v2022];
                v2025 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2025 - 8) + 32))(v2023, v2024, v2025);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v848 + 56))(v845, 0, 1, v847);
                v841 = v1336;
                v15 = v1335;
                v843 = v3065;
              }
              v2026 = v843[7];
              v2027 = (_DWORD *)(v13 + v2026);
              v2028 = &v14[v2026];
              v2029 = type metadata accessor for TranscriptProtoStatementID(0);
              v3072 = *(_QWORD *)(v2029 - 8);
              v2030 = *(unsigned int (**)(void))(v3072 + 48);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v2030)(v2028, 1, v2029))
              {
                v2031 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2027, v2028, *(_QWORD *)(*(_QWORD *)(v2031 - 8) + 64));
              }
              else
              {
                *v2027 = *(_DWORD *)v2028;
                *(_OWORD *)(v2027 + 2) = *(_OWORD *)(v2028 + 8);
                v2032 = *(int *)(v2029 + 24);
                v2033 = (char *)v2027 + v2032;
                v2034 = &v2028[v2032];
                v2035 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2035 - 8) + 32))(v2033, v2034, v2035);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v3072 + 56))(v2027, 0, 1, v2029);
              }
              v2036 = v843[8];
              v2037 = (void *)(v13 + v2036);
              v2038 = &v14[v2036];
              v2039 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
              v2956 = *(_QWORD *)(v2039 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2956 + 48))(v2038, 1, v2039))
              {
                v2040 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
                memcpy(v2037, v2038, *(_QWORD *)(*(_QWORD *)(v2040 - 8) + 64));
                goto LABEL_707;
              }
              __srcm = v2037;
              v3034 = v15;
              v2041 = v841;
              v2042 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              v2043 = *(_QWORD *)(v2042 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2043 + 48))(v2038, 1, v2042))
              {
                v2044 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
                v2045 = __srcm;
                memcpy(__srcm, v2038, *(_QWORD *)(*(_QWORD *)(v2044 - 8) + 64));
                goto LABEL_706;
              }
              __dsto = (void *)v2042;
              v2046 = swift_getEnumCaseMultiPayload();
              if (v2046 == 1)
              {
                *__srcm = *(_QWORD *)v2038;
                v2050 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                v2051 = (char *)__srcm + v2050;
                v2052 = &v2038[v2050];
                v2053 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2053 - 8) + 32))(v2051, v2052, v2053);
              }
              else
              {
                if (v2046)
                {
                  memcpy(__srcm, v2038, *(_QWORD *)(v2043 + 64));
                  goto LABEL_705;
                }
                *(_OWORD *)__srcm = *(_OWORD *)v2038;
                v2863 = (int *)type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v2047 = v2863[5];
                v2838 = (_DWORD *)((char *)__srcm + v2047);
                v2048 = &v2038[v2047];
                if (v2030())
                {
                  v2049 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                  memcpy(v2838, v2048, *(_QWORD *)(*(_QWORD *)(v2049 - 8) + 64));
                }
                else
                {
                  *v2838 = *(_DWORD *)v2048;
                  *(_OWORD *)(v2838 + 2) = *(_OWORD *)(v2048 + 8);
                  v2135 = *(int *)(v2029 + 24);
                  v2828 = (char *)v2838 + v2135;
                  v2136 = &v2048[v2135];
                  v2137 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2137 - 8) + 32))(v2828, v2136, v2137);
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v3072 + 56))(v2838, 0, 1, v2029);
                }
                v2138 = v2863[6];
                v2139 = (char *)__srcm + v2138;
                v2140 = &v2038[v2138];
                v2141 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2141 - 8) + 32))(v2139, v2140, v2141);
              }
              swift_storeEnumTagMultiPayload();
LABEL_705:
              v2045 = __srcm;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v2043 + 56))(__srcm, 0, 1, __dsto);
LABEL_706:
              v2142 = *(int *)(v2039 + 20);
              v2143 = (char *)v2045 + v2142;
              v2144 = &v2038[v2142];
              v2145 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2145 - 8) + 32))(v2143, v2144, v2145);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2956 + 56))(v2045, 0, 1, v2039);
              v841 = v2041;
              v15 = v3034;
LABEL_707:
              v2146 = v843[9];
              v2147 = v13 + v2146;
              v2148 = &v14[v2146];
              v2149 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2149 - 8) + 32))(v2147, v2148, v2149);
LABEL_896:
              swift_storeEnumTagMultiPayload();
              v4 = v3104;
              a3 = v3001;
              v5 = v841;
              break;
            case 0xEu:
            case 0x10u:
            case 0x13u:
            case 0x14u:
            case 0x15u:
            case 0x29u:
              v873 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v873 - 8) + 32))(v13, v14, v873);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0xFu:
              v3017 = v15;
              v850 = a3;
              v3103 = v4;
              v3120 = v5;
              *(_QWORD *)v13 = *(_QWORD *)v14;
              *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
              v851 = type metadata accessor for TranscriptProtoQueryStepResults(0);
              v852 = *(int *)(v851 + 24);
              v853 = (_DWORD *)(v13 + v852);
              v854 = &v14[v852];
              v855 = type metadata accessor for TranscriptProtoStatementID(0);
              v856 = *(_QWORD *)(v855 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v856 + 48))(v854, 1, v855))
              {
                v857 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v853, v854, *(_QWORD *)(*(_QWORD *)(v857 - 8) + 64));
              }
              else
              {
                *v853 = *(_DWORD *)v854;
                *(_OWORD *)(v853 + 2) = *(_OWORD *)(v854 + 8);
                v1340 = *(int *)(v855 + 24);
                v1341 = (char *)v853 + v1340;
                v1342 = &v854[v1340];
                v1343 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1343 - 8) + 32))(v1341, v1342, v1343);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v856 + 56))(v853, 0, 1, v855);
              }
              goto LABEL_433;
            case 0x11u:
              v3018 = v15;
              v858 = a3;
              v3105 = v4;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
              *(_BYTE *)(v13 + 24) = v14[24];
              *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
              v859 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
              v860 = *(int *)(v859 + 36);
              v861 = (_QWORD *)(v13 + v860);
              v862 = &v14[v860];
              v863 = type metadata accessor for TranscriptProtoParameterSet(0);
              v864 = *(_QWORD *)(v863 - 8);
              v865 = v5;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v864 + 48))(v862, 1, v863))
              {
                v866 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
                memcpy(v861, v862, *(_QWORD *)(*(_QWORD *)(v866 - 8) + 64));
              }
              else
              {
                *v861 = *(_QWORD *)v862;
                v1344 = *(int *)(v863 + 20);
                v1345 = (char *)v861 + v1344;
                v1346 = &v862[v1344];
                v1347 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1347 - 8) + 32))(v1345, v1346, v1347);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v864 + 56))(v861, 0, 1, v863);
              }
              v1348 = v859;
              v1349 = *(int *)(v859 + 40);
              v1350 = (_DWORD *)(v13 + v1349);
              v1351 = &v14[v1349];
              v1352 = type metadata accessor for TranscriptProtoStatementID(0);
              v1353 = *(_QWORD *)(v1352 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1353 + 48))(v1351, 1, v1352))
              {
                v1354 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1350, v1351, *(_QWORD *)(*(_QWORD *)(v1354 - 8) + 64));
              }
              else
              {
                *v1350 = *(_DWORD *)v1351;
                *(_OWORD *)(v1350 + 2) = *(_OWORD *)(v1351 + 8);
                v1550 = *(int *)(v1352 + 24);
                v1551 = (char *)v1350 + v1550;
                v1552 = &v1351[v1550];
                v1553 = sub_2408E57A4();
                v1554 = v1551;
                v1348 = v859;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1553 - 8) + 32))(v1554, v1552, v1553);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1353 + 56))(v1350, 0, 1, v1352);
              }
              a3 = v858;
              v1555 = *(int *)(v1348 + 44);
              v1556 = v13 + v1555;
              v1557 = &v14[v1555];
              v1558 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1558 - 8) + 32))(v1556, v1557, v1558);
              swift_storeEnumTagMultiPayload();
              v4 = v3105;
              v15 = v3018;
              v5 = v865;
              goto LABEL_816;
            case 0x12u:
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
              v867 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
              v868 = v13 + v867;
              v869 = v5;
              v870 = &v14[v867];
              v871 = sub_2408E57A4();
              v872 = v870;
              v5 = v869;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v871 - 8) + 32))(v868, v872, v871);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x16u:
              *(_OWORD *)v13 = *(_OWORD *)v14;
              v874 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
              v875 = v13 + v874;
              v876 = v5;
              v877 = &v14[v874];
              v878 = sub_2408E57A4();
              v879 = v877;
              v5 = v876;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v878 - 8) + 32))(v875, v879, v878);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x17u:
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v880 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
              v881 = v13 + v880;
              v882 = v5;
              v883 = &v14[v880];
              v884 = sub_2408E57A4();
              v885 = v883;
              v5 = v882;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v884 - 8) + 32))(v881, v885, v884);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x18u:
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v886 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
              v887 = v13 + v886;
              v888 = v5;
              v889 = &v14[v886];
              v890 = sub_2408E57A4();
              v891 = v889;
              v5 = v888;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v890 - 8) + 32))(v887, v891, v890);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x19u:
              *(_OWORD *)v13 = *(_OWORD *)v14;
              v892 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
              v893 = v13 + v892;
              v894 = v5;
              v895 = &v14[v892];
              v896 = sub_2408E57A4();
              v897 = v895;
              v5 = v894;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v896 - 8) + 32))(v893, v897, v896);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x1Au:
              v3118 = v5;
              v3016 = v15;
              v898 = type metadata accessor for TranscriptProtoStatementID(0);
              v899 = *(_QWORD *)(v898 - 8);
              v900 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v899 + 48);
              v3002 = a3;
              v901 = v4;
              if (v900(v14, 1, v898))
              {
                v902 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v902 - 8) + 64));
              }
              else
              {
                *(_DWORD *)v13 = *(_DWORD *)v14;
                *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
                v1355 = *(int *)(v898 + 24);
                v1356 = v13 + v1355;
                v1357 = &v14[v1355];
                v1358 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1358 - 8) + 32))(v1356, v1357, v1358);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v899 + 56))(v13, 0, 1, v898);
              }
              v1359 = type metadata accessor for TranscriptProtoActionCancellation(0);
              v1360 = *(int *)(v1359 + 20);
              v1361 = (_DWORD *)(v13 + v1360);
              v1362 = &v14[v1360];
              if (v900(&v14[v1360], 1, v898))
              {
                v1363 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1361, v1362, *(_QWORD *)(*(_QWORD *)(v1363 - 8) + 64));
              }
              else
              {
                *v1361 = *(_DWORD *)v1362;
                *(_OWORD *)(v1361 + 2) = *(_OWORD *)(v1362 + 8);
                v1559 = *(int *)(v898 + 24);
                v1560 = (char *)v1361 + v1559;
                v1561 = &v1362[v1559];
                v1562 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1562 - 8) + 32))(v1560, v1561, v1562);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v899 + 56))(v1361, 0, 1, v898);
              }
              v1563 = *(int *)(v1359 + 24);
              v1564 = v13 + v1563;
              v1565 = &v14[v1563];
              v1566 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1566 - 8) + 32))(v1564, v1565, v1566);
              swift_storeEnumTagMultiPayload();
              v4 = v901;
              goto LABEL_519;
            case 0x1Bu:
              v903 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v903;
              *(_DWORD *)(v13 + 32) = *((_DWORD *)v14 + 8);
              *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
              v904 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
              v905 = v13 + v904;
              v906 = v5;
              v907 = &v14[v904];
              v908 = sub_2408E57A4();
              v909 = v907;
              v5 = v906;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v908 - 8) + 32))(v905, v909, v908);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x1Cu:
              v3000 = a3;
              v3106 = v4;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
              *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
              v910 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
              v911 = v910[7];
              v912 = (char *)(v13 + v911);
              v913 = &v14[v911];
              v914 = type metadata accessor for TranscriptProtoStatementOutcome(0);
              v915 = *(_QWORD *)(v914 - 8);
              v3119 = v5;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v915 + 48))(v913, 1, v914))
              {
                v916 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
                memcpy(v912, v913, *(_QWORD *)(*(_QWORD *)(v916 - 8) + 64));
              }
              else
              {
                v3066 = v910;
                v1364 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1364 - 8) + 48))(v913, 1, v1364))
                {
                  v1769 = (char *)&loc_24057D4B8 + 4 * word_240901BFA[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1365 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
                memcpy(v912, v913, *(_QWORD *)(*(_QWORD *)(v1365 - 8) + 64));
                v2608 = *(int *)(v914 + 20);
                v2609 = &v912[v2608];
                v2610 = &v913[v2608];
                v2611 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2611 - 8) + 32))(v2609, v2610, v2611);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v915 + 56))(v912, 0, 1, v914);
                v910 = v3066;
              }
              v2612 = v910[8];
              v2613 = (_QWORD *)(v13 + v2612);
              v2614 = &v14[v2612];
              v2615 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
              v2616 = *((_QWORD *)v2615 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v2616 + 48))(v2614, 1, v2615))
              {
                v2617 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
                memcpy(v2613, v2614, *(_QWORD *)(*(_QWORD *)(v2617 - 8) + 64));
              }
              else
              {
                v3074 = v910;
                v2848 = v14;
                v3042 = v15;
                *v2613 = *(_QWORD *)v2614;
                *((_BYTE *)v2613 + 8) = v2614[8];
                v2613[2] = *((_QWORD *)v2614 + 2);
                v2618 = v2615[7];
                v2619 = (char *)v2613 + v2618;
                v2620 = &v2614[v2618];
                v2621 = type metadata accessor for TranscriptProtoDialogType(0);
                v2959 = *(_QWORD *)(v2621 - 8);
                v2622 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2959 + 48);
                if (v2622(v2620, 1, v2621))
                {
                  v2623 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                  memcpy(v2619, v2620, *(_QWORD *)(*(_QWORD *)(v2623 - 8) + 64));
                }
                else
                {
                  v2624 = v2619;
                  __dstw = *(unsigned int (***)(const void *, uint64_t))(type metadata accessor for TranscriptProtoDialogFormat(0)
                                                                                 - 8);
                  if (!__dstw[6](v2620, 1))
                  {
                    v2626 = (char *)&loc_240589D00 + 4 * byte_240901C10[swift_getEnumCaseMultiPayload()];
                    __asm { BR              X10 }
                  }
                  v2625 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                  memcpy(v2619, v2620, *(_QWORD *)(*(_QWORD *)(v2625 - 8) + 64));
                  v2627 = *(int *)(v2621 + 20);
                  v2628 = &v2619[v2627];
                  v2629 = &v2620[v2627];
                  v2630 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2630 - 8) + 32))(v2628, v2629, v2630);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2959 + 56))(v2624, 0, 1, v2621);
                }
                v2631 = v2615[8];
                v2632 = (char *)v2613 + v2631;
                v2633 = &v2614[v2631];
                if (v2622(&v2614[v2631], 1, v2621))
                {
                  v2634 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                  memcpy(v2632, v2633, *(_QWORD *)(*(_QWORD *)(v2634 - 8) + 64));
                }
                else
                {
                  v2635 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v2635 - 8) + 48))(v2633, 1))
                  {
                    v2637 = (char *)&loc_240589EE0 + 4 * byte_240901C15[swift_getEnumCaseMultiPayload()];
                    __asm { BR              X10 }
                  }
                  v2636 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                  memcpy(v2632, v2633, *(_QWORD *)(*(_QWORD *)(v2636 - 8) + 64));
                  v2638 = *(int *)(v2621 + 20);
                  v2639 = &v2632[v2638];
                  v2640 = &v2633[v2638];
                  v2641 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2641 - 8) + 32))(v2639, v2640, v2641);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2959 + 56))(v2632, 0, 1, v2621);
                }
                v2642 = v2615[9];
                v2643 = (char *)v2613 + v2642;
                v2644 = &v2614[v2642];
                v2645 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2645 - 8) + 32))(v2643, v2644, v2645);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2616 + 56))(v2613, 0, 1, v2615);
                v15 = v3042;
                v910 = v3074;
                v14 = v2848;
              }
              v2646 = v910[9];
              v2647 = (_DWORD *)(v13 + v2646);
              v2648 = &v14[v2646];
              v2649 = type metadata accessor for TranscriptProtoStatementID(0);
              v2650 = *(_QWORD *)(v2649 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2650 + 48))(v2648, 1, v2649))
              {
                v2651 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2647, v2648, *(_QWORD *)(*(_QWORD *)(v2651 - 8) + 64));
              }
              else
              {
                *v2647 = *(_DWORD *)v2648;
                *(_OWORD *)(v2647 + 2) = *(_OWORD *)(v2648 + 8);
                v2652 = *(int *)(v2649 + 24);
                v2653 = v910;
                v2654 = (char *)v2647 + v2652;
                v2655 = &v2648[v2652];
                v2656 = sub_2408E57A4();
                v2657 = v2654;
                v910 = v2653;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2656 - 8) + 32))(v2657, v2655, v2656);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2650 + 56))(v2647, 0, 1, v2649);
              }
              v4 = v3106;
              *(_OWORD *)(v13 + v910[10]) = *(_OWORD *)&v14[v910[10]];
              v2658 = v910[11];
              v2659 = v13 + v2658;
              v2660 = &v14[v2658];
              v2661 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2661 - 8) + 32))(v2659, v2660, v2661);
              goto LABEL_874;
            case 0x1Du:
              v917 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v917;
              v3063 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
              v918 = v3063[6];
              v919 = (char *)(v13 + v918);
              v920 = &v14[v918];
              v921 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
              v2934 = *(_QWORD *)(v921 - 8);
              v3107 = v4;
              v3121 = v5;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2934 + 48))(v920, 1, v921))
              {
                v922 = a3;
                v923 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
                memcpy(v919, v920, *(_QWORD *)(*(_QWORD *)(v923 - 8) + 64));
              }
              else
              {
                __dsth = (int *)v921;
                __srcf = (void *)v13;
                v2844 = v14;
                v3025 = v15;
                v922 = a3;
                v1366 = type metadata accessor for TranscriptProtoStatementOutcome(0);
                v1367 = *(_QWORD *)(v1366 - 8);
                v1368 = v1366;
                v2853 = v919;
                v1369 = v920;
                if ((*(unsigned int (**)(char *, uint64_t))(v1367 + 48))(v920, 1))
                {
                  v1370 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
                  memcpy(v919, v920, *(_QWORD *)(*(_QWORD *)(v1370 - 8) + 64));
                }
                else
                {
                  v2835 = (_QWORD *)type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
                  if (!(*(unsigned int (**)(char *, uint64_t))(*(v2835 - 1) + 48))(v920, 1))
                  {
                    v1971 = (char *)&loc_24057F4F8 + 4 * word_240901BE4[swift_getEnumCaseMultiPayload()];
                    __asm { BR              X10 }
                  }
                  v1770 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
                  memcpy(v919, v920, *(_QWORD *)(*(_QWORD *)(v1770 - 8) + 64));
                  v2748 = *(int *)(v1368 + 20);
                  v2749 = &v919[v2748];
                  v2750 = &v920[v2748];
                  v2751 = sub_2408E57A4();
                  v2752 = v2749;
                  v919 = v2853;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2751 - 8) + 32))(v2752, v2750, v2751);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1367 + 56))(v2853, 0, 1, v1368);
                }
                v2753 = __dsth[5];
                v2754 = &v919[v2753];
                v2755 = &v920[v2753];
                v2756 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
                v2757 = *((_QWORD *)v2756 - 1);
                if ((*(unsigned int (**)(char *, uint64_t, int *))(v2757 + 48))(v2755, 1, v2756))
                {
                  v2758 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
                  memcpy(v2754, v2755, *(_QWORD *)(*(_QWORD *)(v2758 - 8) + 64));
                }
                else
                {
                  *(_QWORD *)v2754 = *(_QWORD *)v2755;
                  v2759 = v2756[5];
                  v2760 = v2754;
                  v2761 = &v2754[v2759];
                  v2762 = &v2755[v2759];
                  v2763 = type metadata accessor for TranscriptProtoResponseDialog(0);
                  v2764 = *(_QWORD *)(v2763 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2764 + 48))(v2762, 1, v2763))
                  {
                    v2765 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                    memcpy(v2761, v2762, *(_QWORD *)(*(_QWORD *)(v2765 - 8) + 64));
                  }
                  else
                  {
                    v2766 = *((_OWORD *)v2762 + 1);
                    *(_OWORD *)v2761 = *(_OWORD *)v2762;
                    *((_OWORD *)v2761 + 1) = v2766;
                    v2767 = *((_OWORD *)v2762 + 3);
                    *((_OWORD *)v2761 + 2) = *((_OWORD *)v2762 + 2);
                    *((_OWORD *)v2761 + 3) = v2767;
                    v2768 = *(int *)(v2763 + 32);
                    v2842 = &v2761[v2768];
                    v2769 = &v2762[v2768];
                    v2770 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2770 - 8) + 32))(v2842, v2769, v2770);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2764 + 56))(v2761, 0, 1, v2763);
                  }
                  v2771 = v2756[6];
                  v2772 = (_OWORD *)((char *)v2760 + v2771);
                  v2773 = &v2755[v2771];
                  v2774 = type metadata accessor for TranscriptProtoResponseVisual(0);
                  v2775 = *(_QWORD *)(v2774 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2775 + 48))(v2773, 1, v2774))
                  {
                    v2776 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                    memcpy(v2772, v2773, *(_QWORD *)(*(_QWORD *)(v2776 - 8) + 64));
                  }
                  else
                  {
                    *v2772 = *(_OWORD *)v2773;
                    v2777 = *(int *)(v2774 + 24);
                    v2843 = (char *)v2772 + v2777;
                    v2778 = &v2773[v2777];
                    v2779 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2779 - 8) + 32))(v2843, v2778, v2779);
                    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2775 + 56))(v2772, 0, 1, v2774);
                  }
                  *(_OWORD *)((char *)v2760 + v2756[7]) = *(_OWORD *)&v2755[v2756[7]];
                  *(_OWORD *)((char *)v2760 + v2756[8]) = *(_OWORD *)&v2755[v2756[8]];
                  *((_BYTE *)v2760 + v2756[9]) = v2755[v2756[9]];
                  *((_BYTE *)v2760 + v2756[10]) = v2755[v2756[10]];
                  v2780 = v2756[11];
                  v2781 = (char *)v2760 + v2780;
                  v2782 = &v2755[v2780];
                  v2783 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2783 - 8) + 32))(v2781, v2782, v2783);
                  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2757 + 56))(v2760, 0, 1, v2756);
                }
                v2784 = __dsth[6];
                v2785 = &v2853[v2784];
                v2786 = &v1369[v2784];
                v2787 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2787 - 8) + 32))(v2785, v2786, v2787);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v2934 + 56))(v2853, 0, 1, __dsth);
                v15 = v3025;
                v14 = v2844;
                v13 = (uint64_t)__srcf;
              }
              v2788 = v3063[7];
              v2789 = (_DWORD *)(v13 + v2788);
              v2790 = &v14[v2788];
              v2791 = type metadata accessor for TranscriptProtoStatementID(0);
              v2792 = *(_QWORD *)(v2791 - 8);
              v2793 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2792 + 48);
              if (v2793(v2790, 1, v2791))
              {
                v2794 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2789, v2790, *(_QWORD *)(*(_QWORD *)(v2794 - 8) + 64));
              }
              else
              {
                *v2789 = *(_DWORD *)v2790;
                *(_OWORD *)(v2789 + 2) = *(_OWORD *)(v2790 + 8);
                v2795 = *(int *)(v2791 + 24);
                v2796 = (char *)v2789 + v2795;
                v2797 = &v2790[v2795];
                v2798 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2798 - 8) + 32))(v2796, v2797, v2798);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2792 + 56))(v2789, 0, 1, v2791);
              }
              v2799 = v3063[8];
              v2800 = (_DWORD *)(v13 + v2799);
              v2801 = &v14[v2799];
              if (v2793(&v14[v2799], 1, v2791))
              {
                v2802 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2800, v2801, *(_QWORD *)(*(_QWORD *)(v2802 - 8) + 64));
              }
              else
              {
                *v2800 = *(_DWORD *)v2801;
                *(_OWORD *)(v2800 + 2) = *(_OWORD *)(v2801 + 8);
                v2803 = *(int *)(v2791 + 24);
                v2804 = (char *)v2800 + v2803;
                v2805 = &v2801[v2803];
                v2806 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2806 - 8) + 32))(v2804, v2805, v2806);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2792 + 56))(v2800, 0, 1, v2791);
              }
              v2807 = v3063[9];
              v2808 = (_DWORD *)(v13 + v2807);
              v2809 = &v14[v2807];
              if (v2793(&v14[v2807], 1, v2791))
              {
                v2810 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2808, v2809, *(_QWORD *)(*(_QWORD *)(v2810 - 8) + 64));
              }
              else
              {
                *v2808 = *(_DWORD *)v2809;
                *(_OWORD *)(v2808 + 2) = *(_OWORD *)(v2809 + 8);
                v2811 = *(int *)(v2791 + 24);
                v2812 = (char *)v2808 + v2811;
                v2813 = &v2809[v2811];
                v2814 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2814 - 8) + 32))(v2812, v2813, v2814);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2792 + 56))(v2808, 0, 1, v2791);
              }
              a3 = v922;
              v2815 = v3063[10];
              v2816 = v13 + v2815;
              v2817 = &v14[v2815];
              v2818 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2818 - 8) + 32))(v2816, v2817, v2818);
              goto LABEL_917;
            case 0x1Eu:
              v3017 = v15;
              v850 = a3;
              v3103 = v4;
              v3120 = v5;
              v924 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v924;
              v851 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
              v925 = *(int *)(v851 + 24);
              v926 = (_QWORD *)(v13 + v925);
              v927 = &v14[v925];
              v928 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
              v929 = *(_QWORD *)(v928 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v929 + 48))(v927, 1, v928))
                goto LABEL_277;
              goto LABEL_432;
            case 0x1Fu:
              v3017 = v15;
              v850 = a3;
              v3103 = v4;
              v3120 = v5;
              *(_QWORD *)v13 = *(_QWORD *)v14;
              *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
              v851 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
              v930 = *(int *)(v851 + 24);
              v926 = (_QWORD *)(v13 + v930);
              v927 = &v14[v930];
              v928 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
              v929 = *(_QWORD *)(v928 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v929 + 48))(v927, 1, v928))
              {
LABEL_277:
                v931 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
                memcpy(v926, v927, *(_QWORD *)(*(_QWORD *)(v931 - 8) + 64));
              }
              else
              {
LABEL_432:
                *(_OWORD *)v926 = *(_OWORD *)v927;
                v926[2] = *((_QWORD *)v927 + 2);
                v1371 = *(int *)(v928 + 24);
                v1372 = (char *)v926 + v1371;
                v1373 = &v927[v1371];
                v1374 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1374 - 8) + 32))(v1372, v1373, v1374);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v929 + 56))(v926, 0, 1, v928);
              }
LABEL_433:
              a3 = v850;
              v1375 = *(int *)(v851 + 28);
              v1376 = v13 + v1375;
              v1377 = &v14[v1375];
              v1378 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1378 - 8) + 32))(v1376, v1377, v1378);
LABEL_434:
              swift_storeEnumTagMultiPayload();
              v4 = v3103;
              v5 = v3120;
              v15 = v3017;
              goto LABEL_816;
            case 0x20u:
              v3121 = v5;
              v3107 = v4;
              v932 = type metadata accessor for TranscriptProtoRequestContent(0);
              v933 = *(_QWORD *)(v932 - 8);
              v3003 = a3;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v933 + 48))(v14, 1, v932))
              {
                v934 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v934 - 8) + 64));
              }
              else
              {
                v1379 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1379 - 8) + 48))(v14, 1, v1379))
                {
                  v1771 = (char *)&loc_24057D5A8 + 4 * word_240901BDC[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1380 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v1380 - 8) + 64));
                v2288 = *(int *)(v932 + 20);
                v2289 = v13 + v2288;
                v2290 = &v14[v2288];
                v2291 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2291 - 8) + 32))(v2289, v2290, v2291);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v933 + 56))(v13, 0, 1, v932);
              }
              v2292 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
              *(_OWORD *)(v13 + v2292[5]) = *(_OWORD *)&v14[v2292[5]];
              v2293 = v2292[6];
              v2294 = (_QWORD *)(v13 + v2293);
              v2295 = &v14[v2293];
              v2296 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
              v2297 = *(_QWORD *)(v2296 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2297 + 48))(v2295, 1, v2296))
              {
                v2298 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
                memcpy(v2294, v2295, *(_QWORD *)(*(_QWORD *)(v2298 - 8) + 64));
              }
              else
              {
                *(_OWORD *)v2294 = *(_OWORD *)v2295;
                v2294[2] = *((_QWORD *)v2295 + 2);
                v2299 = *(int *)(v2296 + 24);
                v2300 = (char *)v2294 + v2299;
                v2301 = &v2295[v2299];
                v2302 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2302 - 8) + 32))(v2300, v2301, v2302);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2297 + 56))(v2294, 0, 1, v2296);
              }
              a3 = v3003;
              v2303 = v2292[7];
              v2304 = v13 + v2303;
              v2305 = &v14[v2303];
              v2306 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2306 - 8) + 32))(v2304, v2305, v2306);
LABEL_917:
              swift_storeEnumTagMultiPayload();
              v4 = v3107;
              v5 = v3121;
              goto LABEL_816;
            case 0x21u:
              v841 = v5;
              v3001 = a3;
              v3104 = v4;
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v935 = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
              v936 = v935[5];
              v937 = (_DWORD *)(v13 + v936);
              v938 = &v14[v936];
              v939 = type metadata accessor for TranscriptProtoStatementID(0);
              v940 = *(_QWORD *)(v939 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v940 + 48))(v938, 1, v939))
              {
                v941 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v937, v938, *(_QWORD *)(*(_QWORD *)(v941 - 8) + 64));
              }
              else
              {
                *v937 = *(_DWORD *)v938;
                *(_OWORD *)(v937 + 2) = *(_OWORD *)(v938 + 8);
                v1381 = *(int *)(v939 + 24);
                v1382 = v935;
                v1383 = (char *)v937 + v1381;
                v1384 = &v938[v1381];
                v1385 = sub_2408E57A4();
                v1386 = v1383;
                v935 = v1382;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1385 - 8) + 32))(v1386, v1384, v1385);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v940 + 56))(v937, 0, 1, v939);
              }
              v1387 = v935[6];
              v1388 = (char *)(v13 + v1387);
              v1389 = &v14[v1387];
              v1390 = type metadata accessor for TranscriptProtoStatementOutcome(0);
              v1391 = *(_QWORD *)(v1390 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1391 + 48))(v1389, 1, v1390))
              {
                v1392 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
                memcpy(v1388, v1389, *(_QWORD *)(*(_QWORD *)(v1392 - 8) + 64));
              }
              else
              {
                v3069 = v935;
                v1567 = v15;
                v1568 = v841;
                v1569 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1569 - 8) + 48))(v1389, 1, v1569))
                {
                  v1794 = (char *)&loc_24057D88C + 4 * word_240901BC6[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1570 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
                memcpy(v1388, v1389, *(_QWORD *)(*(_QWORD *)(v1570 - 8) + 64));
                v2739 = *(int *)(v1390 + 20);
                v2740 = &v1388[v2739];
                v2741 = v1388;
                v2742 = &v1389[v2739];
                v2743 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2743 - 8) + 32))(v2740, v2742, v2743);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1391 + 56))(v2741, 0, 1, v1390);
                v841 = v1568;
                v15 = v1567;
                v935 = v3069;
              }
              goto LABEL_895;
            case 0x22u:
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
              v942 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
              v943 = v13 + v942;
              v944 = v5;
              v945 = &v14[v942];
              v946 = sub_2408E57A4();
              v947 = v945;
              v5 = v944;
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v946 - 8) + 32))(v943, v947, v946);
              swift_storeEnumTagMultiPayload();
              goto LABEL_816;
            case 0x23u:
              v948 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
              v949 = *(_QWORD *)(v948 - 8);
              v3108 = v4;
              v3119 = v5;
              v3000 = a3;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v949 + 48))(v14, 1, v948))
              {
                v950 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v950 - 8) + 64));
              }
              else
              {
                v3026 = v15;
                v3067 = v949;
                v1393 = *((_OWORD *)v14 + 1);
                *(_OWORD *)v13 = *(_OWORD *)v14;
                *(_OWORD *)(v13 + 16) = v1393;
                *(_BYTE *)(v13 + 32) = v14[32];
                *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
                *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
                *(_QWORD *)(v13 + 72) = *((_QWORD *)v14 + 9);
                *(_BYTE *)(v13 + 80) = v14[80];
                *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
                *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
                v1394 = (int *)v948;
                v1395 = *(int *)(v948 + 68);
                __srcg = (char *)v13;
                v1396 = (_QWORD *)(v13 + v1395);
                v2845 = v14;
                v1397 = &v14[v1395];
                v1398 = type metadata accessor for ToolKitProtoTypeInstance(0);
                v1399 = *(_QWORD *)(v1398 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1399 + 48))(v1397, 1, v1398))
                {
                  v1400 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
                  memcpy(v1396, v1397, *(_QWORD *)(*(_QWORD *)(v1400 - 8) + 64));
                }
                else
                {
                  *v1396 = *(_QWORD *)v1397;
                  v1772 = *(int *)(v1398 + 20);
                  v1773 = (char *)v1396 + v1772;
                  v1774 = &v1397[v1772];
                  v1775 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1775 - 8) + 32))(v1773, v1774, v1775);
                  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1399 + 56))(v1396, 0, 1, v1398);
                }
                *(_OWORD *)(v13 + v1394[18]) = *(_OWORD *)&v14[v1394[18]];
                v1776 = v1394[19];
                v1777 = (_OWORD *)(v13 + v1776);
                v1778 = &v14[v1776];
                v1779 = type metadata accessor for ToolKitProtoAppDefinition(0);
                v1780 = *(_QWORD *)(v1779 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1780 + 48))(v1778, 1, v1779))
                {
                  v1781 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
                  memcpy(v1777, v1778, *(_QWORD *)(*(_QWORD *)(v1781 - 8) + 64));
                }
                else
                {
                  v1824 = *((_OWORD *)v1778 + 1);
                  *v1777 = *(_OWORD *)v1778;
                  v1777[1] = v1824;
                  v1825 = *((_OWORD *)v1778 + 3);
                  v1777[2] = *((_OWORD *)v1778 + 2);
                  v1777[3] = v1825;
                  v1777[4] = *((_OWORD *)v1778 + 4);
                  *((_BYTE *)v1777 + 80) = v1778[80];
                  v1826 = *(int *)(v1779 + 40);
                  v1827 = (_OWORD *)((char *)v1777 + v1826);
                  v1828 = &v1778[v1826];
                  v1829 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
                  v1830 = *(_QWORD *)(v1829 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1830 + 48))(v1828, 1, v1829))
                  {
                    v1831 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                    memcpy(v1827, v1828, *(_QWORD *)(*(_QWORD *)(v1831 - 8) + 64));
                  }
                  else
                  {
                    *v1827 = *(_OWORD *)v1828;
                    v1972 = *(int *)(v1829 + 20);
                    v1973 = (char *)v1827 + v1972;
                    v1974 = &v1828[v1972];
                    v1975 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1975 - 8) + 32))(v1973, v1974, v1975);
                    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1830 + 56))(v1827, 0, 1, v1829);
                  }
                  v1976 = *(int *)(v1779 + 44);
                  v1977 = (char *)v1777 + v1976;
                  v1978 = &v1778[v1976];
                  v1979 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1979 - 8) + 32))(v1977, v1978, v1979);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1780 + 56))(v1777, 0, 1, v1779);
                }
                *(_OWORD *)&__srcg[v1394[20]] = *(_OWORD *)&v2845[v1394[20]];
                v1980 = v1394[21];
                v1981 = &__srcg[v1980];
                v1982 = &v2845[v1980];
                v1983 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
                v1984 = *(_QWORD *)(v1983 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1984 + 48))(v1982, 1, v1983))
                {
                  v1985 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
                  memcpy(v1981, v1982, *(_QWORD *)(*(_QWORD *)(v1985 - 8) + 64));
                }
                else
                {
                  v1986 = *((_OWORD *)v1982 + 1);
                  *(_OWORD *)v1981 = *(_OWORD *)v1982;
                  *((_OWORD *)v1981 + 1) = v1986;
                  v1987 = *(int *)(v1983 + 24);
                  v1988 = &v1981[v1987];
                  v1989 = &v1982[v1987];
                  v1990 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1990 - 8) + 32))(v1988, v1989, v1990);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1984 + 56))(v1981, 0, 1, v1983);
                }
                v1991 = v1394[22];
                v1992 = &__srcg[v1991];
                v1993 = &v2845[v1991];
                v1994 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
                v1995 = *(_QWORD *)(v1994 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1995 + 48))(v1993, 1, v1994))
                {
                  v1996 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
                  memcpy(v1992, v1993, *(_QWORD *)(*(_QWORD *)(v1996 - 8) + 64));
                }
                else
                {
                  v1997 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                  v1998 = *(_QWORD *)(v1997 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1998 + 48))(v1993, 1, v1997))
                  {
                    v1999 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                    memcpy(v1992, v1993, *(_QWORD *)(*(_QWORD *)(v1999 - 8) + 64));
                  }
                  else
                  {
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      *(_OWORD *)v1992 = *(_OWORD *)v1993;
                      v1992[16] = v1993[16];
                      *(_OWORD *)(v1992 + 24) = *(_OWORD *)(v1993 + 24);
                      *(_OWORD *)(v1992 + 40) = *(_OWORD *)(v1993 + 40);
                      v2000 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                     + 32);
                      v2001 = &v1992[v2000];
                      v2002 = &v1993[v2000];
                      v2003 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2003 - 8) + 32))(v2001, v2002, v2003);
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
                      memcpy(v1992, v1993, *(_QWORD *)(v1998 + 64));
                    }
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1998 + 56))(v1992, 0, 1, v1997);
                  }
                  v2058 = *(int *)(v1994 + 20);
                  v2059 = &v1992[v2058];
                  v2060 = &v1993[v2058];
                  v2061 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2061 - 8) + 32))(v2059, v2060, v2061);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1995 + 56))(v1992, 0, 1, v1994);
                }
                v2062 = v1394[23];
                v2063 = &__srcg[v2062];
                v2064 = &v2845[v2062];
                v2065 = type metadata accessor for ToolKitProtoContainerDefinition(0);
                v2066 = *(_QWORD *)(v2065 - 8);
                v2067 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2066 + 48);
                if (v2067(v2064, 1, v2065))
                {
                  v2068 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                  memcpy(v2063, v2064, *(_QWORD *)(*(_QWORD *)(v2068 - 8) + 64));
                }
                else
                {
                  v2069 = *((_OWORD *)v2064 + 1);
                  *(_OWORD *)v2063 = *(_OWORD *)v2064;
                  *((_OWORD *)v2063 + 1) = v2069;
                  *((_WORD *)v2063 + 16) = *((_WORD *)v2064 + 16);
                  *(_OWORD *)(v2063 + 40) = *(_OWORD *)(v2064 + 40);
                  *(_OWORD *)(v2063 + 56) = *(_OWORD *)(v2064 + 56);
                  v2070 = *(int *)(v2065 + 40);
                  v2071 = &v2063[v2070];
                  v2072 = &v2064[v2070];
                  v2073 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                  v2074 = *(_QWORD *)(v2073 - 8);
                  v2075 = v2073;
                  if ((*(unsigned int (**)(char *, uint64_t))(v2074 + 48))(v2072, 1))
                  {
                    v2076 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                    memcpy(v2071, v2072, *(_QWORD *)(*(_QWORD *)(v2076 - 8) + 64));
                  }
                  else
                  {
                    *(_OWORD *)v2071 = *(_OWORD *)v2072;
                    v2077 = *(int *)(v2075 + 20);
                    v2957 = &v2071[v2077];
                    v2078 = &v2072[v2077];
                    v2079 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2079 - 8) + 32))(v2957, v2078, v2079);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2074 + 56))(v2071, 0, 1, v2075);
                  }
                  v2080 = *(int *)(v2065 + 44);
                  v2081 = &v2063[v2080];
                  v2082 = &v2064[v2080];
                  v2083 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2083 - 8) + 32))(v2081, v2082, v2083);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2066 + 56))(v2063, 0, 1, v2065);
                }
                v2084 = v1394[24];
                v2085 = &__srcg[v2084];
                v2086 = &v2845[v2084];
                if (v2067(&v2845[v2084], 1, v2065))
                {
                  v2087 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                  memcpy(v2085, v2086, *(_QWORD *)(*(_QWORD *)(v2087 - 8) + 64));
                }
                else
                {
                  v2088 = *((_OWORD *)v2086 + 1);
                  *(_OWORD *)v2085 = *(_OWORD *)v2086;
                  *((_OWORD *)v2085 + 1) = v2088;
                  *((_WORD *)v2085 + 16) = *((_WORD *)v2086 + 16);
                  *(_OWORD *)(v2085 + 40) = *(_OWORD *)(v2086 + 40);
                  *(_OWORD *)(v2085 + 56) = *(_OWORD *)(v2086 + 56);
                  v2089 = *(int *)(v2065 + 40);
                  v2090 = &v2085[v2089];
                  v2091 = &v2086[v2089];
                  v2092 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                  v2093 = *(_QWORD *)(v2092 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2093 + 48))(v2091, 1, v2092))
                  {
                    v2094 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                    memcpy(v2090, v2091, *(_QWORD *)(*(_QWORD *)(v2094 - 8) + 64));
                  }
                  else
                  {
                    *(_OWORD *)v2090 = *(_OWORD *)v2091;
                    v2095 = *(int *)(v2092 + 20);
                    v2096 = &v2090[v2095];
                    v2097 = &v2091[v2095];
                    v2098 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2098 - 8) + 32))(v2096, v2097, v2098);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2093 + 56))(v2090, 0, 1, v2092);
                  }
                  v2099 = *(int *)(v2065 + 44);
                  v2100 = &v2085[v2099];
                  v2101 = &v2086[v2099];
                  v2102 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2102 - 8) + 32))(v2100, v2101, v2102);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2066 + 56))(v2085, 0, 1, v2065);
                }
                v2103 = v1394[25];
                v13 = (uint64_t)__srcg;
                v2104 = &__srcg[v2103];
                v14 = v2845;
                v2105 = &v2845[v2103];
                v2106 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2106 - 8) + 32))(v2104, v2105, v2106);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v3067 + 56))(__srcg, 0, 1, v1394);
                v15 = v3026;
              }
              v2107 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
              v2108 = v2107[5];
              v2109 = (_DWORD *)(v13 + v2108);
              v2110 = &v14[v2108];
              v2111 = type metadata accessor for TranscriptProtoStatementID(0);
              v2112 = *(_QWORD *)(v2111 - 8);
              v2113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2112 + 48);
              if (v2113(v2110, 1, v2111))
              {
                v2114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2109, v2110, *(_QWORD *)(*(_QWORD *)(v2114 - 8) + 64));
              }
              else
              {
                *v2109 = *(_DWORD *)v2110;
                *(_OWORD *)(v2109 + 2) = *(_OWORD *)(v2110 + 8);
                v2115 = *(int *)(v2111 + 24);
                v2116 = (char *)v2109 + v2115;
                v2117 = &v2110[v2115];
                v2118 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2118 - 8) + 32))(v2116, v2117, v2118);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2112 + 56))(v2109, 0, 1, v2111);
              }
              v2119 = v2107[6];
              v2120 = (_DWORD *)(v13 + v2119);
              v2121 = &v14[v2119];
              if (v2113(&v14[v2119], 1, v2111))
              {
                v2122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2120, v2121, *(_QWORD *)(*(_QWORD *)(v2122 - 8) + 64));
              }
              else
              {
                *v2120 = *(_DWORD *)v2121;
                *(_OWORD *)(v2120 + 2) = *(_OWORD *)(v2121 + 8);
                v2123 = *(int *)(v2111 + 24);
                v2124 = (char *)v2120 + v2123;
                v2125 = &v2121[v2123];
                v2126 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2126 - 8) + 32))(v2124, v2125, v2126);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2112 + 56))(v2120, 0, 1, v2111);
              }
              v4 = v3108;
              v2127 = v2107[7];
              v2128 = v13 + v2127;
              v2129 = &v14[v2127];
              v2130 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2130 - 8) + 32))(v2128, v2129, v2130);
LABEL_874:
              swift_storeEnumTagMultiPayload();
              a3 = v3000;
              v5 = v3119;
              goto LABEL_816;
            case 0x24u:
              v3118 = v5;
              v3002 = a3;
              v3016 = v15;
              v951 = v4;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_BYTE *)(v13 + 16) = v14[16];
              *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
              v952 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
              v953 = *(int *)(v952 + 28);
              v954 = (_DWORD *)(v13 + v953);
              v955 = &v14[v953];
              v956 = type metadata accessor for TranscriptProtoStatementID(0);
              v957 = *(_QWORD *)(v956 - 8);
              v958 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v957 + 48);
              if (v958(v955, 1, v956))
              {
                v959 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v954, v955, *(_QWORD *)(*(_QWORD *)(v959 - 8) + 64));
              }
              else
              {
                *v954 = *(_DWORD *)v955;
                *(_OWORD *)(v954 + 2) = *(_OWORD *)(v955 + 8);
                v1401 = *(int *)(v956 + 24);
                v1402 = v952;
                v1403 = (char *)v954 + v1401;
                v1404 = &v955[v1401];
                v1405 = sub_2408E57A4();
                v1406 = v1403;
                v952 = v1402;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1405 - 8) + 32))(v1406, v1404, v1405);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v957 + 56))(v954, 0, 1, v956);
              }
              v1407 = v952;
              v1408 = *(int *)(v952 + 32);
              v1409 = (_DWORD *)(v13 + v1408);
              v1410 = &v14[v1408];
              if (v958(&v14[v1408], 1, v956))
              {
                v1411 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1409, v1410, *(_QWORD *)(*(_QWORD *)(v1411 - 8) + 64));
              }
              else
              {
                *v1409 = *(_DWORD *)v1410;
                *(_OWORD *)(v1409 + 2) = *(_OWORD *)(v1410 + 8);
                v1571 = *(int *)(v956 + 24);
                v1572 = (char *)v1409 + v1571;
                v1573 = &v1410[v1571];
                v1574 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1574 - 8) + 32))(v1572, v1573, v1574);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v957 + 56))(v1409, 0, 1, v956);
              }
              v4 = v951;
              v1575 = *(int *)(v1407 + 36);
              v1576 = v13 + v1575;
              v1577 = &v14[v1575];
              v1578 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1578 - 8) + 32))(v1576, v1577, v1578);
              goto LABEL_518;
            case 0x25u:
              v3118 = v5;
              v3002 = a3;
              v3016 = v15;
              v960 = v4;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_BYTE *)(v13 + 16) = v14[16];
              v961 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
              v962 = *(int *)(v961 + 24);
              v963 = (_DWORD *)(v13 + v962);
              v964 = &v14[v962];
              v965 = type metadata accessor for TranscriptProtoStatementID(0);
              v966 = *(_QWORD *)(v965 - 8);
              v967 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v966 + 48);
              if (v967(v964, 1, v965))
              {
                v968 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v963, v964, *(_QWORD *)(*(_QWORD *)(v968 - 8) + 64));
              }
              else
              {
                *v963 = *(_DWORD *)v964;
                *(_OWORD *)(v963 + 2) = *(_OWORD *)(v964 + 8);
                v1412 = *(int *)(v965 + 24);
                v1413 = v961;
                v1414 = (char *)v963 + v1412;
                v1415 = &v964[v1412];
                v1416 = sub_2408E57A4();
                v1417 = v1414;
                v961 = v1413;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1416 - 8) + 32))(v1417, v1415, v1416);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v966 + 56))(v963, 0, 1, v965);
              }
              v1418 = v961;
              v1419 = *(int *)(v961 + 28);
              v1420 = (_DWORD *)(v13 + v1419);
              v1421 = &v14[v1419];
              if (v967(&v14[v1419], 1, v965))
              {
                v1422 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1420, v1421, *(_QWORD *)(*(_QWORD *)(v1422 - 8) + 64));
              }
              else
              {
                *v1420 = *(_DWORD *)v1421;
                *(_OWORD *)(v1420 + 2) = *(_OWORD *)(v1421 + 8);
                v1579 = *(int *)(v965 + 24);
                v1580 = (char *)v1420 + v1579;
                v1581 = &v1421[v1579];
                v1582 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1582 - 8) + 32))(v1580, v1581, v1582);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v966 + 56))(v1420, 0, 1, v965);
              }
              v4 = v960;
              v1583 = *(int *)(v1418 + 32);
              v1584 = v13 + v1583;
              v1585 = &v14[v1583];
              v1586 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1586 - 8) + 32))(v1584, v1585, v1586);
              goto LABEL_518;
            case 0x26u:
              v3118 = v5;
              v3016 = v15;
              v969 = type metadata accessor for ToolKitProtoTypedValue(0);
              v970 = *(_QWORD *)(v969 - 8);
              v971 = a3;
              v972 = v4;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v970 + 48))(v14, 1, v969))
              {
                v973 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v973 - 8) + 64));
              }
              else
              {
                *(_QWORD *)v13 = *(_QWORD *)v14;
                v1423 = *(int *)(v969 + 20);
                v1424 = v13 + v1423;
                v1425 = &v14[v1423];
                v1426 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1426 - 8) + 32))(v1424, v1425, v1426);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v970 + 56))(v13, 0, 1, v969);
              }
              v1427 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
              v1428 = *(int *)(v1427 + 20);
              v1429 = (_QWORD *)(v13 + v1428);
              v1430 = &v14[v1428];
              v1431 = type metadata accessor for ToolKitProtoTypeInstance(0);
              v1432 = *(_QWORD *)(v1431 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1432 + 48))(v1430, 1, v1431))
              {
                v1433 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
                memcpy(v1429, v1430, *(_QWORD *)(*(_QWORD *)(v1433 - 8) + 64));
              }
              else
              {
                *v1429 = *(_QWORD *)v1430;
                v1587 = *(int *)(v1431 + 20);
                v1588 = (char *)v1429 + v1587;
                v1589 = &v1430[v1587];
                v1590 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1590 - 8) + 32))(v1588, v1589, v1590);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1432 + 56))(v1429, 0, 1, v1431);
              }
              v1591 = v1427;
              v1592 = *(int *)(v1427 + 24);
              v1593 = (_DWORD *)(v13 + v1592);
              v1594 = &v14[v1592];
              v1595 = type metadata accessor for TranscriptProtoStatementID(0);
              v1596 = *(_QWORD *)(v1595 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1596 + 48))(v1594, 1, v1595))
              {
                v1597 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1593, v1594, *(_QWORD *)(*(_QWORD *)(v1597 - 8) + 64));
              }
              else
              {
                *v1593 = *(_DWORD *)v1594;
                *(_OWORD *)(v1593 + 2) = *(_OWORD *)(v1594 + 8);
                v1622 = *(int *)(v1595 + 24);
                v1623 = (char *)v1593 + v1622;
                v1624 = &v1594[v1622];
                v1625 = sub_2408E57A4();
                v1626 = v1623;
                v1591 = v1427;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1625 - 8) + 32))(v1626, v1624, v1625);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1596 + 56))(v1593, 0, 1, v1595);
              }
              a3 = v971;
              v1627 = *(int *)(v1591 + 28);
              v1628 = v13 + v1627;
              v1629 = &v14[v1627];
              v1630 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1630 - 8) + 32))(v1628, v1629, v1630);
              swift_storeEnumTagMultiPayload();
              v4 = v972;
              goto LABEL_520;
            case 0x27u:
              v3118 = v5;
              v3016 = v15;
              v974 = type metadata accessor for ToolKitProtoTypedValue(0);
              v975 = *(_QWORD *)(v974 - 8);
              v3002 = a3;
              v976 = v4;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v975 + 48))(v14, 1, v974))
              {
                v977 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
                memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v977 - 8) + 64));
              }
              else
              {
                *(_QWORD *)v13 = *(_QWORD *)v14;
                v1434 = *(int *)(v974 + 20);
                v1435 = v13 + v1434;
                v1436 = &v14[v1434];
                v1437 = sub_2408E57A4();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1437 - 8) + 32))(v1435, v1436, v1437);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v975 + 56))(v13, 0, 1, v974);
              }
              v1438 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
              v1439 = v1438[5];
              v1440 = (_DWORD *)(v13 + v1439);
              v1441 = &v14[v1439];
              v1442 = type metadata accessor for TranscriptProtoStatementID(0);
              v1443 = *(_QWORD *)(v1442 - 8);
              v1444 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1443 + 48);
              if (v1444(v1441, 1, v1442))
              {
                v1445 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1440, v1441, *(_QWORD *)(*(_QWORD *)(v1445 - 8) + 64));
              }
              else
              {
                *v1440 = *(_DWORD *)v1441;
                *(_OWORD *)(v1440 + 2) = *(_OWORD *)(v1441 + 8);
                v1598 = *(int *)(v1442 + 24);
                v1599 = (char *)v1440 + v1598;
                v1600 = &v1441[v1598];
                v1601 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1601 - 8) + 32))(v1599, v1600, v1601);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1443 + 56))(v1440, 0, 1, v1442);
              }
              v1602 = v1438[6];
              v1603 = (_DWORD *)(v13 + v1602);
              v1604 = &v14[v1602];
              if (v1444(&v14[v1602], 1, v1442))
              {
                v1605 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1603, v1604, *(_QWORD *)(*(_QWORD *)(v1605 - 8) + 64));
              }
              else
              {
                *v1603 = *(_DWORD *)v1604;
                *(_OWORD *)(v1603 + 2) = *(_OWORD *)(v1604 + 8);
                v1631 = *(int *)(v1442 + 24);
                v1632 = (char *)v1603 + v1631;
                v1633 = &v1604[v1631];
                v1634 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1634 - 8) + 32))(v1632, v1633, v1634);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1443 + 56))(v1603, 0, 1, v1442);
              }
              v4 = v976;
              v1635 = v1438[7];
              v1636 = v13 + v1635;
              v1637 = &v14[v1635];
              v1638 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1638 - 8) + 32))(v1636, v1637, v1638);
LABEL_518:
              swift_storeEnumTagMultiPayload();
LABEL_519:
              a3 = v3002;
              goto LABEL_520;
            case 0x28u:
              v3101 = v4;
              v3118 = v5;
              v3016 = v15;
              v978 = a3;
              v979 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *(_OWORD *)(v13 + 16) = v979;
              v980 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
              v981 = *(int *)(v980 + 32);
              v982 = (_OWORD *)(v13 + v981);
              v983 = &v14[v981];
              v984 = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
              v985 = *(_QWORD *)(v984 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v985 + 48))(v983, 1, v984))
              {
                v986 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
                memcpy(v982, v983, *(_QWORD *)(*(_QWORD *)(v986 - 8) + 64));
              }
              else
              {
                v1446 = *((_OWORD *)v983 + 1);
                *v982 = *(_OWORD *)v983;
                v982[1] = v1446;
                *((_DWORD *)v982 + 8) = *((_DWORD *)v983 + 8);
                *(_OWORD *)((char *)v982 + 40) = *(_OWORD *)(v983 + 40);
                v1447 = *(int *)(v984 + 36);
                v1448 = (char *)v982 + v1447;
                v1449 = &v983[v1447];
                v1450 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1450 - 8) + 32))(v1448, v1449, v1450);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v985 + 56))(v982, 0, 1, v984);
              }
              a3 = v978;
              v1451 = *(int *)(v980 + 36);
              v1452 = v13 + v1451;
              v1453 = &v14[v1451];
              v1454 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1454 - 8) + 32))(v1452, v1453, v1454);
LABEL_456:
              swift_storeEnumTagMultiPayload();
              v4 = v3101;
LABEL_520:
              v15 = v3016;
              v5 = v3118;
              goto LABEL_816;
            case 0x2Au:
              v841 = v5;
              v3001 = a3;
              v3104 = v4;
              *(_OWORD *)v13 = *(_OWORD *)v14;
              v935 = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
              v987 = v935[5];
              v988 = (_DWORD *)(v13 + v987);
              v989 = &v14[v987];
              v990 = type metadata accessor for TranscriptProtoStatementID(0);
              v991 = *(_QWORD *)(v990 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v991 + 48))(v989, 1, v990))
              {
                v992 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v988, v989, *(_QWORD *)(*(_QWORD *)(v992 - 8) + 64));
              }
              else
              {
                *v988 = *(_DWORD *)v989;
                *(_OWORD *)(v988 + 2) = *(_OWORD *)(v989 + 8);
                v1455 = *(int *)(v990 + 24);
                v1456 = v935;
                v1457 = (char *)v988 + v1455;
                v1458 = &v989[v1455];
                v1459 = sub_2408E57A4();
                v1460 = v1457;
                v935 = v1456;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1459 - 8) + 32))(v1460, v1458, v1459);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v991 + 56))(v988, 0, 1, v990);
              }
              v1461 = v935[6];
              v1462 = (char *)(v13 + v1461);
              v1463 = &v14[v1461];
              v1464 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
              v1465 = *(_QWORD *)(v1464 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1465 + 48))(v1463, 1, v1464))
              {
                v1466 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
                memcpy(v1462, v1463, *(_QWORD *)(*(_QWORD *)(v1466 - 8) + 64));
              }
              else
              {
                v3070 = v935;
                v1606 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1606 - 8) + 48))(v1463, 1, v1606))
                {
                  v1795 = (char *)&loc_24057D92C + 4 * word_240901BBA[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1607 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
                memcpy(v1462, v1463, *(_QWORD *)(*(_QWORD *)(v1607 - 8) + 64));
                v2131 = *(int *)(v1464 + 20);
                v2132 = &v1462[v2131];
                v2133 = &v1463[v2131];
                v2134 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2134 - 8) + 32))(v2132, v2133, v2134);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1465 + 56))(v1462, 0, 1, v1464);
                v935 = v3070;
              }
LABEL_895:
              v2744 = v935[7];
              v2745 = v13 + v2744;
              v2746 = &v14[v2744];
              v2747 = sub_2408E57A4();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2747 - 8) + 32))(v2745, v2746, v2747);
              goto LABEL_896;
            default:
              v44 = *(_QWORD *)(v25 + 64);
              goto LABEL_19;
          }
        }
        goto LABEL_816;
      }
      sub_240388AE4(v13, type metadata accessor for TranscriptProtoPayloadEnum);
    }
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488) - 8) + 64);
LABEL_19:
    memcpy((void *)v13, v14, v44);
    goto LABEL_816;
  }
  if (v19)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_817;
  }
  v20 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
    memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v3006 = v15;
        v3045 = v21;
        v3076 = v4;
        v3111 = v5;
        v2987 = a3;
        *(_BYTE *)v13 = *v14;
        v37 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v38 = v37[5];
        v39 = (_OWORD *)(v13 + v38);
        v40 = &v14[v38];
        v41 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        v42 = *(_QWORD *)(v41 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v503 = *((_OWORD *)v40 + 1);
          *v39 = *(_OWORD *)v40;
          v39[1] = v503;
          v39[2] = *((_OWORD *)v40 + 2);
          v504 = *(int *)(v41 + 28);
          v505 = (char *)v39 + v504;
          v506 = &v40[v504];
          v507 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v507 - 8) + 32))(v505, v506, v507);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v508 = v37[6];
        v509 = (_OWORD *)(v13 + v508);
        v510 = &v14[v508];
        v511 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        v512 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v511 - 8);
        v4 = v3076;
        if (((unsigned int (**)(char *, uint64_t, uint64_t))v512)[6](v510, 1, v511))
        {
          v513 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
          memcpy(v509, v510, *(_QWORD *)(*(_QWORD *)(v513 - 8) + 64));
          v21 = v3045;
        }
        else
        {
          __srcb = v512;
          v2932 = v37;
          v2980 = v20;
          *v509 = *(_OWORD *)v510;
          v674 = *(int *)(v511 + 20);
          v675 = v509;
          v676 = (_DWORD *)((char *)v509 + v674);
          v677 = &v510[v674];
          v678 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          v679 = *(_QWORD *)(v678 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v679 + 48))(v677, 1, v678))
          {
            v680 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
            memcpy(v676, v677, *(_QWORD *)(*(_QWORD *)(v680 - 8) + 64));
          }
          else
          {
            *v676 = *(_DWORD *)v677;
            v1184 = *(int *)(v678 + 20);
            __dsts = (char *)v676 + v1184;
            v1185 = &v677[v1184];
            v1186 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1186 - 8) + 32))(__dsts, v1185, v1186);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v679 + 56))(v676, 0, 1, v678);
          }
          v4 = v3076;
          v20 = v2980;
          v1187 = *(int *)(v511 + 24);
          v1188 = (char *)v675 + v1187;
          v1189 = &v510[v1187];
          v1190 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1190 - 8) + 32))(v1188, v1189, v1190);
          (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srcb + 7))(v675, 0, 1, v511);
          v21 = v3045;
          v37 = v2932;
        }
        v1191 = v37[7];
        v1192 = v13 + v1191;
        v1193 = &v14[v1191];
        v1194 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1194 - 8) + 32))(v1192, v1193, v1194);
        goto LABEL_370;
      case 1u:
        v3008 = v15;
        v3046 = v21;
        v53 = v20;
        v3078 = v4;
        v3112 = v5;
        v54 = a3;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_BYTE *)(v13 + 16) = v14[16];
        v55 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v56 = v55[6];
        v57 = (_DWORD *)(v13 + v56);
        v58 = &v14[v56];
        v59 = type metadata accessor for TranscriptProtoStatementID(0);
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          *v57 = *(_DWORD *)v58;
          *(_OWORD *)(v57 + 2) = *(_OWORD *)(v58 + 8);
          v514 = *(int *)(v59 + 24);
          v2922 = (char *)v57 + v514;
          v515 = &v58[v514];
          v516 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v516 - 8) + 32))(v2922, v515, v516);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        a3 = v54;
        *(_OWORD *)(v13 + v55[7]) = *(_OWORD *)&v14[v55[7]];
        v517 = v55[8];
        v518 = v13 + v517;
        v519 = &v14[v517];
        v520 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v520 - 8) + 32))(v518, v519, v520);
        v20 = v53;
        goto LABEL_228;
      case 2u:
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_BYTE *)(v13 + 8) = v14[8];
        *(_OWORD *)(v13 + 16) = *((_OWORD *)v14 + 1);
        v62 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v63 = v13 + v62;
        v3047 = v21;
        v64 = v5;
        v65 = &v14[v62];
        v66 = sub_2408E57A4();
        v67 = v65;
        v5 = v64;
        v21 = v3047;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v63, v67, v66);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v2989 = a3;
        v3079 = v4;
        *(_BYTE *)v13 = *v14;
        v2917 = type metadata accessor for TranscriptProtoRequest(0);
        v68 = *(int *)(v2917 + 20);
        __dst = (char *)(v13 + v68);
        v69 = &v14[v68];
        v70 = type metadata accessor for TranscriptProtoRequestContent(0);
        v71 = *(_QWORD *)(v70 - 8);
        v3112 = v5;
        v2960 = v20;
        v3046 = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v521 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v521 - 8) + 48))(v69, 1, v521))
          {
            v1153 = (char *)&loc_24057976C + 4 * word_240901A8A[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v522 - 8) + 64));
          v523 = v69;
          v2154 = *(int *)(v70 + 20);
          v2155 = &__dst[v2154];
          v2156 = &v523[v2154];
          v2157 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2157 - 8) + 32))(v2155, v2156, v2157);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v70);
        }
        v2158 = *(int *)(v2917 + 24);
        v3035 = (char *)(v13 + v2158);
        v2159 = &v14[v2158];
        v2160 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        v2161 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v2160 - 8);
        if (v2161[6](v2159, 1, v2160))
        {
          v2162 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
          memcpy(v3035, v2159, *(_QWORD *)(*(_QWORD *)(v2162 - 8) + 64));
          v2163 = (int *)v2917;
        }
        else
        {
          __dstp = (void *)v2160;
          __srcn = v2161;
          v2164 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2164 - 8) + 48))(v2159, 1, v2164))
          {
            v2166 = (char *)&loc_2405841CC + 4 * byte_240901A92[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v2165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
          memcpy(v3035, v2159, *(_QWORD *)(*(_QWORD *)(v2165 - 8) + 64));
          v2167 = *(int *)(v2160 + 20);
          v2168 = &v3035[v2167];
          v2169 = &v2159[v2167];
          v2170 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2170 - 8) + 32))(v2168, v2169, v2170);
          ((void (*)(char *, _QWORD, uint64_t, void *))__srcn[7])(v3035, 0, 1, __dstp);
          v2163 = (int *)v2917;
        }
        *(_OWORD *)(v13 + v2163[7]) = *(_OWORD *)&v14[v2163[7]];
        v2171 = v2163[8];
        v2172 = (_QWORD *)(v13 + v2171);
        v2173 = &v14[v2171];
        v2174 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v2175 = *(_QWORD *)(v2174 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2175 + 48))(v2173, 1, v2174))
        {
          v2176 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v2172, v2173, *(_QWORD *)(*(_QWORD *)(v2176 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v2172 = *(_OWORD *)v2173;
          v2172[2] = *((_QWORD *)v2173 + 2);
          v2177 = *(int *)(v2174 + 24);
          v2178 = (char *)v2172 + v2177;
          v2179 = &v2173[v2177];
          v2180 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2180 - 8) + 32))(v2178, v2179, v2180);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2175 + 56))(v2172, 0, 1, v2174);
        }
        v4 = v3079;
        v2181 = v2163[9];
        v2182 = v13 + v2181;
        v2183 = &v14[v2181];
        v2184 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2184 - 8) + 32))(v2182, v2183, v2184);
        v20 = v2960;
        goto LABEL_766;
      case 4u:
        v73 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v73;
        *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_BYTE *)(v13 + 56) = v14[56];
        v74 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v75 = v13 + v74;
        v3048 = v21;
        v76 = v5;
        v77 = &v14[v74];
        v78 = sub_2408E57A4();
        v79 = v77;
        v5 = v76;
        v21 = v3048;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v75, v79, v78);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v3008 = v15;
        v3046 = v21;
        v80 = v20;
        v3078 = v4;
        v3112 = v5;
        v81 = a3;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_BYTE *)(v13 + 16) = v14[16];
        *(_QWORD *)(v13 + 24) = *((_QWORD *)v14 + 3);
        v82 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v83 = v82[7];
        v84 = (_DWORD *)(v13 + v83);
        v85 = &v14[v83];
        v86 = type metadata accessor for TranscriptProtoStatementID(0);
        v87 = *(_QWORD *)(v86 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
        {
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          *v84 = *(_DWORD *)v85;
          *(_OWORD *)(v84 + 2) = *(_OWORD *)(v85 + 8);
          v524 = *(int *)(v86 + 24);
          v2923 = (char *)v84 + v524;
          v525 = &v85[v524];
          v526 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v526 - 8) + 32))(v2923, v525, v526);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
        }
        a3 = v81;
        *(_OWORD *)(v13 + v82[8]) = *(_OWORD *)&v14[v82[8]];
        *(_OWORD *)(v13 + v82[9]) = *(_OWORD *)&v14[v82[9]];
        *(_OWORD *)(v13 + v82[10]) = *(_OWORD *)&v14[v82[10]];
        v527 = v82[11];
        v528 = v13 + v527;
        v529 = &v14[v527];
        v530 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v530 - 8) + 32))(v528, v529, v530);
        v20 = v80;
        goto LABEL_228;
      case 6u:
        v3008 = v15;
        v3046 = v21;
        v89 = v20;
        v3078 = v4;
        v3112 = v5;
        v90 = a3;
        v91 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v91;
        v92 = *((_OWORD *)v14 + 3);
        *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
        *(_OWORD *)(v13 + 48) = v92;
        v93 = type metadata accessor for TranscriptProtoClientAction(0);
        v94 = *(int *)(v93 + 36);
        v95 = (_DWORD *)(v13 + v94);
        v96 = &v14[v94];
        v97 = type metadata accessor for TranscriptProtoStatementID(0);
        v98 = *(_QWORD *)(v97 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
        {
          v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          *v95 = *(_DWORD *)v96;
          *(_OWORD *)(v95 + 2) = *(_OWORD *)(v96 + 8);
          v531 = *(int *)(v97 + 24);
          v2924 = (char *)v95 + v531;
          v532 = &v96[v531];
          v533 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v533 - 8) + 32))(v2924, v532, v533);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
        }
        a3 = v90;
        v534 = *(int *)(v93 + 40);
        v535 = v13 + v534;
        v536 = &v14[v534];
        v537 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v537 - 8) + 32))(v535, v536, v537);
        v20 = v89;
        goto LABEL_228;
      case 7u:
        v3049 = v21;
        v2961 = v20;
        v3009 = v15;
        v100 = a3;
        v3113 = v5;
        v101 = v4;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v102 = type metadata accessor for TranscriptProtoQueryStep(0);
        v103 = *(int *)(v102 + 20);
        v104 = (_DWORD *)(v13 + v103);
        v105 = &v14[v103];
        v106 = type metadata accessor for TranscriptProtoStatementID(0);
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
          goto LABEL_35;
        goto LABEL_159;
      case 8u:
        v3049 = v21;
        v2961 = v20;
        v3009 = v15;
        v100 = a3;
        v3113 = v5;
        v101 = v4;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v102 = type metadata accessor for TranscriptProtoVariableStep(0);
        v109 = *(int *)(v102 + 20);
        v104 = (_DWORD *)(v13 + v109);
        v105 = &v14[v109];
        v106 = type metadata accessor for TranscriptProtoStatementID(0);
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
        {
LABEL_35:
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
LABEL_159:
          *v104 = *(_DWORD *)v105;
          *(_OWORD *)(v104 + 2) = *(_OWORD *)(v105 + 8);
          v538 = *(int *)(v106 + 24);
          v2925 = (char *)v104 + v538;
          v539 = &v105[v538];
          v540 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v540 - 8) + 32))(v2925, v539, v540);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        }
        a3 = v100;
        v541 = *(int *)(v102 + 24);
        v542 = v13 + v541;
        v543 = &v14[v541];
        v544 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v544 - 8) + 32))(v542, v543, v544);
        v20 = v2961;
        goto LABEL_180;
      case 0xAu:
        v3046 = v21;
        v110 = v20;
        v111 = v5;
        v112 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 48))(v14, 1, v112))
        {
          v545 = (char *)&loc_2405766D0 + 4 * word_240901A82[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
        memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        v1889 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v1890 = v13 + v1889;
        v1891 = &v14[v1889];
        v1892 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1892 - 8) + 32))(v1890, v1891, v1892);
        swift_storeEnumTagMultiPayload();
        goto LABEL_772;
      case 0xBu:
        v3046 = v21;
        v114 = v5;
        v2990 = a3;
        v115 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        v116 = *(_QWORD *)(v115 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v14, 1, v115))
        {
          v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          v3014 = v15;
          v546 = v4;
          v547 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          v548 = *(_QWORD *)(v547 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v548 + 48))(v14, 1, v547))
          {
            v549 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
            memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
          }
          else
          {
            v1154 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *(_OWORD *)(v13 + 16) = v1154;
            *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
            v1155 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            __srcu = &v14[v1155];
            v2945 = v13 + v1155;
            v1156 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1156 - 8) + 32))(v2945, __srcu, v1156);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v548 + 56))(v13, 0, 1, v547);
          }
          v1157 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v1158 = v13 + v1157;
          v1159 = &v14[v1157];
          v1160 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1160 - 8) + 32))(v1158, v1159, v1160);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v116 + 56))(v13, 0, 1, v115);
          v4 = v546;
          v15 = v3014;
        }
        v1161 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v1162 = v13 + v1161;
        v1163 = &v14[v1161];
        v1164 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1164 - 8) + 32))(v1162, v1163, v1164);
        swift_storeEnumTagMultiPayload();
        a3 = v2990;
        goto LABEL_722;
      case 0xCu:
        v118 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v118;
        *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
        v119 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v120 = v13 + v119;
        v3050 = v21;
        v121 = v5;
        v122 = &v14[v119];
        v123 = sub_2408E57A4();
        v124 = v122;
        v5 = v121;
        v21 = v3050;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v120, v124, v123);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v3046 = v21;
        v2962 = v20;
        v3080 = v4;
        v3112 = v5;
        v2989 = a3;
        v125 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v125;
        v126 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v127 = v126[6];
        v128 = (char *)(v13 + v127);
        v129 = &v14[v127];
        v130 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        v131 = *(_QWORD *)(v130 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130))
        {
          v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
        }
        else
        {
          v2926 = v126;
          v550 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          v551 = *(_QWORD *)(v550 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v551 + 48))(v129, 1, v550))
          {
            v552 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
            memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v552 - 8) + 64));
          }
          else
          {
            v3022 = v550;
            v1165 = swift_getEnumCaseMultiPayload();
            switch(v1165)
            {
              case 6:
                v1639 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1639 - 8) + 32))(v128, v129, v1639);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *v128 = *v129;
                v1640 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                               + 20);
                v1641 = &v128[v1640];
                __srcw = &v129[v1640];
                v1642 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1642 - 8) + 32))(v1641, __srcw, v1642);
                v550 = v3022;
                swift_storeEnumTagMultiPayload();
                break;
              case 1:
                *(_QWORD *)v128 = *(_QWORD *)v129;
                v1166 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                v1167 = &v128[v1166];
                __srcv = &v129[v1166];
                v1168 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1168 - 8) + 32))(v1167, __srcv, v1168);
                v550 = v3022;
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v128, v129, *(_QWORD *)(v551 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v551 + 56))(v128, 0, 1, v550);
          }
          v1643 = *(int *)(v130 + 20);
          v1644 = &v128[v1643];
          v1645 = &v129[v1643];
          v1646 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1646 - 8) + 32))(v1644, v1645, v1646);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
          v126 = v2926;
        }
        v1647 = v126[7];
        v1648 = (_DWORD *)(v13 + v1647);
        v1649 = &v14[v1647];
        v1650 = type metadata accessor for TranscriptProtoStatementID(0);
        v1651 = *(_QWORD *)(v1650 - 8);
        __dstj = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1651 + 48);
        v2855 = (void *)v1651;
        if (__dstj(v1649, 1, v1650))
        {
          v1652 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1648, v1649, *(_QWORD *)(*(_QWORD *)(v1652 - 8) + 64));
        }
        else
        {
          *v1648 = *(_DWORD *)v1649;
          *(_OWORD *)(v1648 + 2) = *(_OWORD *)(v1649 + 8);
          v1653 = *(int *)(v1650 + 24);
          v1654 = v126;
          v1655 = (char *)v1648 + v1653;
          v1656 = &v1649[v1653];
          v1657 = sub_2408E57A4();
          v1658 = v1655;
          v126 = v1654;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1657 - 8) + 32))(v1658, v1656, v1657);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1651 + 56))(v1648, 0, 1, v1650);
        }
        v1659 = v126[8];
        v1660 = (_QWORD *)(v13 + v1659);
        v1661 = &v14[v1659];
        v1662 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        v1663 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v1662 - 8);
        if (((unsigned int (**)(char *, uint64_t, uint64_t))v1663)[6](v1661, 1, v1662))
        {
          v1664 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
          memcpy(v1660, v1661, *(_QWORD *)(*(_QWORD *)(v1664 - 8) + 64));
          v4 = v3080;
        }
        else
        {
          v2833 = v1663;
          v2948 = v126;
          v1665 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          v1666 = *(_QWORD *)(v1665 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1666 + 48))(v1661, 1, v1665))
          {
            v1667 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
            memcpy(v1660, v1661, *(_QWORD *)(*(_QWORD *)(v1667 - 8) + 64));
          }
          else
          {
            v1668 = swift_getEnumCaseMultiPayload();
            if (v1668 == 1)
            {
              *v1660 = *(_QWORD *)v1661;
              v1674 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v3029 = (char *)v1660 + v1674;
              v1675 = &v1661[v1674];
              v1676 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1676 - 8) + 32))(v3029, v1675, v1676);
              swift_storeEnumTagMultiPayload();
            }
            else if (v1668)
            {
              memcpy(v1660, v1661, *(_QWORD *)(v1666 + 64));
            }
            else
            {
              __srci = (void *)v13;
              v2846 = v14;
              v3028 = v15;
              *(_OWORD *)v1660 = *(_OWORD *)v1661;
              v1669 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v1670 = *(int *)(v1669 + 20);
              v1671 = (_DWORD *)((char *)v1660 + v1670);
              v1672 = &v1661[v1670];
              if (((unsigned int (*)(void))__dstj)())
              {
                v1673 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v1671, v1672, *(_QWORD *)(*(_QWORD *)(v1673 - 8) + 64));
              }
              else
              {
                *v1671 = *(_DWORD *)v1672;
                *(_OWORD *)(v1671 + 2) = *(_OWORD *)(v1672 + 8);
                v1834 = *(int *)(v1650 + 24);
                __dstv = (char *)v1671 + v1834;
                v1835 = &v1672[v1834];
                v1836 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1836 - 8) + 32))(__dstv, v1835, v1836);
                (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v2855 + 7))(v1671, 0, 1, v1650);
              }
              v1837 = *(int *)(v1669 + 24);
              v1838 = (char *)v1660 + v1837;
              v1839 = &v1661[v1837];
              v1840 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1840 - 8) + 32))(v1838, v1839, v1840);
              swift_storeEnumTagMultiPayload();
              v15 = v3028;
              v14 = v2846;
              v13 = (uint64_t)__srci;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1666 + 56))(v1660, 0, 1, v1665);
          }
          v4 = v3080;
          v1841 = *(int *)(v1662 + 20);
          v1842 = (char *)v1660 + v1841;
          v1843 = &v1661[v1841];
          v1844 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1844 - 8) + 32))(v1842, v1843, v1844);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v2833 + 7))(v1660, 0, 1, v1662);
          v126 = v2948;
        }
        v1845 = v126[9];
        v1846 = v13 + v1845;
        v1847 = &v14[v1845];
        v1848 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1848 - 8) + 32))(v1846, v1847, v1848);
        v20 = v2962;
        goto LABEL_766;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v155 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v13, v14, v155);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v3049 = v21;
        v2963 = v20;
        v3009 = v15;
        v133 = a3;
        v3113 = v5;
        v101 = v4;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        v134 = type metadata accessor for TranscriptProtoQueryStepResults(0);
        v135 = *(int *)(v134 + 24);
        v136 = (_DWORD *)(v13 + v135);
        v137 = &v14[v135];
        v138 = type metadata accessor for TranscriptProtoStatementID(0);
        v139 = *(_QWORD *)(v138 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
        {
          v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          *v136 = *(_DWORD *)v137;
          *(_OWORD *)(v136 + 2) = *(_OWORD *)(v137 + 8);
          v553 = *(int *)(v138 + 24);
          v2927 = (char *)v136 + v553;
          v554 = &v137[v553];
          v555 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v555 - 8) + 32))(v2927, v554, v555);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
        }
        goto LABEL_179;
      case 0x11u:
        v3046 = v21;
        v2964 = v20;
        v3078 = v4;
        v3112 = v5;
        v3008 = v15;
        v141 = a3;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
        *(_BYTE *)(v13 + 24) = v14[24];
        *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
        v142 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v143 = *(int *)(v142 + 36);
        v144 = (_QWORD *)(v13 + v143);
        v145 = &v14[v143];
        v146 = type metadata accessor for TranscriptProtoParameterSet(0);
        v147 = *(_QWORD *)(v146 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v145, 1, v146))
        {
          v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          *v144 = *(_QWORD *)v145;
          v556 = *(int *)(v146 + 20);
          v557 = (char *)v144 + v556;
          v558 = &v145[v556];
          v559 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v559 - 8) + 32))(v557, v558, v559);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
        }
        v560 = v142;
        v561 = *(int *)(v142 + 40);
        v562 = (_DWORD *)(v13 + v561);
        v563 = &v14[v561];
        v564 = type metadata accessor for TranscriptProtoStatementID(0);
        v565 = *(_QWORD *)(v564 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v565 + 48))(v563, 1, v564))
        {
          v566 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v562, v563, *(_QWORD *)(*(_QWORD *)(v566 - 8) + 64));
        }
        else
        {
          *v562 = *(_DWORD *)v563;
          *(_OWORD *)(v562 + 2) = *(_OWORD *)(v563 + 8);
          v681 = *(int *)(v564 + 24);
          v682 = (char *)v562 + v681;
          v683 = &v563[v681];
          v684 = sub_2408E57A4();
          v685 = v682;
          v560 = v142;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v684 - 8) + 32))(v685, v683, v684);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v565 + 56))(v562, 0, 1, v564);
        }
        a3 = v141;
        v686 = *(int *)(v560 + 44);
        v687 = v13 + v686;
        v688 = &v14[v686];
        v689 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v689 - 8) + 32))(v687, v688, v689);
        v20 = v2964;
        goto LABEL_228;
      case 0x12u:
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
        v149 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v150 = v13 + v149;
        v3051 = v21;
        v151 = v5;
        v152 = &v14[v149];
        v153 = sub_2408E57A4();
        v154 = v152;
        v5 = v151;
        v21 = v3051;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v150, v154, v153);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v156 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v157 = v13 + v156;
        v3052 = v21;
        v158 = v5;
        v159 = &v14[v156];
        v160 = sub_2408E57A4();
        v161 = v159;
        v5 = v158;
        v21 = v3052;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v157, v161, v160);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v162 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v163 = v13 + v162;
        v3053 = v21;
        v164 = v5;
        v165 = &v14[v162];
        v166 = sub_2408E57A4();
        v167 = v165;
        v5 = v164;
        v21 = v3053;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v163, v167, v166);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v168 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v169 = v13 + v168;
        v3054 = v21;
        v170 = v5;
        v171 = &v14[v168];
        v172 = sub_2408E57A4();
        v173 = v171;
        v5 = v170;
        v21 = v3054;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v169, v173, v172);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x19u:
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v174 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v175 = v13 + v174;
        v3055 = v21;
        v176 = v5;
        v177 = &v14[v174];
        v178 = sub_2408E57A4();
        v179 = v177;
        v5 = v176;
        v21 = v3055;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v175, v179, v178);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
        v3046 = v21;
        v2965 = v20;
        v3081 = v4;
        v3112 = v5;
        v3010 = v15;
        v180 = type metadata accessor for TranscriptProtoStatementID(0);
        v181 = *(_QWORD *)(v180 - 8);
        v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48);
        v183 = a3;
        if (v182(v14, 1, v180))
        {
          v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v13 = *(_DWORD *)v14;
          *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
          v567 = *(int *)(v180 + 24);
          v568 = v13 + v567;
          v569 = &v14[v567];
          v570 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v570 - 8) + 32))(v568, v569, v570);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v181 + 56))(v13, 0, 1, v180);
        }
        v571 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v572 = *(int *)(v571 + 20);
        v573 = (_DWORD *)(v13 + v572);
        v574 = &v14[v572];
        if (v182(&v14[v572], 1, v180))
        {
          v575 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v573, v574, *(_QWORD *)(*(_QWORD *)(v575 - 8) + 64));
        }
        else
        {
          *v573 = *(_DWORD *)v574;
          *(_OWORD *)(v573 + 2) = *(_OWORD *)(v574 + 8);
          v690 = *(int *)(v180 + 24);
          v691 = (char *)v573 + v690;
          v692 = &v574[v690];
          v693 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v693 - 8) + 32))(v691, v692, v693);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v573, 0, 1, v180);
        }
        v694 = *(int *)(v571 + 24);
        v695 = v13 + v694;
        v696 = &v14[v694];
        v697 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v697 - 8) + 32))(v695, v696, v697);
        swift_storeEnumTagMultiPayload();
        v4 = v3081;
        a3 = v183;
        v15 = v3010;
        v20 = v2965;
        goto LABEL_767;
      case 0x1Bu:
        v185 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v185;
        *(_DWORD *)(v13 + 32) = *((_DWORD *)v14 + 8);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        v186 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v187 = v13 + v186;
        v3056 = v21;
        v188 = v5;
        v189 = &v14[v186];
        v190 = sub_2408E57A4();
        v191 = v189;
        v5 = v188;
        v21 = v3056;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v187, v191, v190);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Cu:
        v2989 = a3;
        v3082 = v4;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
        *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
        v2918 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v192 = v2918[7];
        __dsta = (char *)(v13 + v192);
        v193 = &v14[v192];
        v194 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v195 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v194 - 8);
        v3112 = v5;
        v2966 = v20;
        v3046 = v21;
        if (v195[6](v193, 1, v194))
        {
          v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(__dsta, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
        }
        else
        {
          v2850 = v195;
          v576 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v576 - 8) + 48))(v193, 1, v576))
          {
            v1169 = (char *)&loc_24057999C + 4 * word_240901A62[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v577 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(__dsta, v193, *(_QWORD *)(*(_QWORD *)(v577 - 8) + 64));
          v2307 = *(int *)(v194 + 20);
          v2308 = &__dsta[v2307];
          v2309 = &v193[v2307];
          v2310 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2310 - 8) + 32))(v2308, v2309, v2310);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v2850[7])(__dsta, 0, 1, v194);
        }
        v2311 = v2918[8];
        v2312 = (_QWORD *)(v13 + v2311);
        v2313 = &v14[v2311];
        v2314 = type metadata accessor for TranscriptProtoResponseOutput(0);
        v2315 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v2314 - 8);
        if (((unsigned int (**)(char *, uint64_t, uint64_t))v2315)[6](v2313, 1, v2314))
        {
          v2316 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
          memcpy(v2312, v2313, *(_QWORD *)(*(_QWORD *)(v2316 - 8) + 64));
        }
        else
        {
          *v2312 = *(_QWORD *)v2313;
          *((_BYTE *)v2312 + 8) = v2313[8];
          v2312[2] = *((_QWORD *)v2313 + 2);
          __dstq = (int *)v2314;
          v2317 = *(int *)(v2314 + 28);
          v2829 = (char *)v2312 + v2317;
          v2318 = &v2313[v2317];
          v2319 = type metadata accessor for TranscriptProtoDialogType(0);
          v2823 = *(_QWORD *)(v2319 - 8);
          __srco = (int *)v2319;
          v2839 = *(unsigned int (**)(char *, uint64_t))(v2823 + 48);
          v3038 = v2313;
          v2864 = v2315;
          if (v2839(v2318, 1))
          {
            v2320 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v2829, v2318, *(_QWORD *)(*(_QWORD *)(v2320 - 8) + 64));
          }
          else
          {
            v2321 = v2829;
            v2819 = v2312;
            v2322 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2322 - 8) + 48))(v2318, 1, v2322))
            {
              v2324 = (char *)&loc_24058791C + 4 * byte_240901A78[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v2323 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v2829, v2318, *(_QWORD *)(*(_QWORD *)(v2323 - 8) + 64));
            v2325 = __srco[5];
            v2830 = &v2829[v2325];
            v2326 = &v2318[v2325];
            v2327 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2327 - 8) + 32))(v2830, v2326, v2327);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v2823 + 56))(v2321, 0, 1, __srco);
            v2312 = v2819;
          }
          v2328 = __dstq[8];
          v2329 = (char *)v2312 + v2328;
          v2330 = (char *)v3038 + v2328;
          if (((unsigned int (*)(char *, uint64_t, int *))v2839)((char *)v3038 + v2328, 1, __srco))
          {
            v2331 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v2329, v2330, *(_QWORD *)(*(_QWORD *)(v2331 - 8) + 64));
          }
          else
          {
            v2332 = type metadata accessor for TranscriptProtoDialogFormat(0);
            v2333 = v2330;
            v2820 = v2312;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2332 - 8) + 48))(v2330, 1, v2332))
            {
              v2335 = (char *)&loc_240587B1C + 4 * byte_240901A7D[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v2334 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v2329, v2330, *(_QWORD *)(*(_QWORD *)(v2334 - 8) + 64));
            v2336 = __srco[5];
            v2337 = &v2329[v2336];
            v2338 = &v2333[v2336];
            v2339 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2339 - 8) + 32))(v2337, v2338, v2339);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v2823 + 56))(v2329, 0, 1, __srco);
            v2312 = v2820;
          }
          v2340 = __dstq[9];
          v2341 = (char *)v2312 + v2340;
          v2342 = (char *)v3038 + v2340;
          v2343 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2343 - 8) + 32))(v2341, v2342, v2343);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v2864 + 7))(v2312, 0, 1, __dstq);
        }
        v2344 = v2918[9];
        v2345 = (_DWORD *)(v13 + v2344);
        v2346 = &v14[v2344];
        v2347 = type metadata accessor for TranscriptProtoStatementID(0);
        v2348 = *(_QWORD *)(v2347 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2348 + 48))(v2346, 1, v2347))
        {
          v2349 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v2345, v2346, *(_QWORD *)(*(_QWORD *)(v2349 - 8) + 64));
        }
        else
        {
          *v2345 = *(_DWORD *)v2346;
          *(_OWORD *)(v2345 + 2) = *(_OWORD *)(v2346 + 8);
          v2350 = *(int *)(v2347 + 24);
          v2351 = (char *)v2345 + v2350;
          v2352 = &v2346[v2350];
          v2353 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2353 - 8) + 32))(v2351, v2352, v2353);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2348 + 56))(v2345, 0, 1, v2347);
        }
        v4 = v3082;
        *(_OWORD *)(v13 + v2918[10]) = *(_OWORD *)&v14[v2918[10]];
        v2354 = v2918[11];
        v2355 = v13 + v2354;
        v2356 = &v14[v2354];
        v2357 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2357 - 8) + 32))(v2355, v2356, v2357);
        v20 = v2966;
        goto LABEL_766;
      case 0x1Du:
        v2991 = a3;
        v197 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v197;
        __src = (void *)v13;
        v2919 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        v198 = v2919[6];
        v2849 = (char *)(v13 + v198);
        v199 = &v14[v198];
        v200 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        v201 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v200 - 8);
        __dstb = v199;
        v3083 = v4;
        v3112 = v5;
        v3046 = v21;
        if (v201[6](v199, 1, v200))
        {
          v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
          memcpy(v2849, v199, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
          v13 = (uint64_t)__src;
        }
        else
        {
          v2826 = v201;
          v2831 = (int *)v200;
          v578 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v579 = *(_QWORD *)(v578 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v579 + 48))(v199, 1, v578))
          {
            v580 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            v582 = v2849;
            v581 = v199;
            memcpy(v2849, v199, *(_QWORD *)(*(_QWORD *)(v580 - 8) + 64));
            v13 = (uint64_t)__src;
          }
          else
          {
            v1170 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v13 = (uint64_t)__src;
            v2822 = v579;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1170 - 8) + 48))(__dstb, 1, v1170))
            {
              v1502 = (char *)&loc_24057B8D0 + 4 * word_240901A4C[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v2849, __dstb, *(_QWORD *)(*(_QWORD *)(v1171 - 8) + 64));
            v2429 = *(int *)(v578 + 20);
            v2430 = v578;
            v2431 = &v2849[v2429];
            v2432 = &__dstb[v2429];
            v2433 = sub_2408E57A4();
            v2434 = v2431;
            v582 = v2849;
            v581 = __dstb;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2433 - 8) + 32))(v2434, v2432, v2433);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2822 + 56))(v2849, 0, 1, v2430);
          }
          v2435 = v2831;
          v2436 = v2831[5];
          v2437 = &v582[v2436];
          v2438 = &v581[v2436];
          v2439 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          v2440 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v2439 - 1);
          if (((unsigned int (**)(char *, uint64_t, int *))v2440)[6](v2438, 1, v2439))
          {
            v2441 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
            memcpy(v2437, v2438, *(_QWORD *)(*(_QWORD *)(v2441 - 8) + 64));
          }
          else
          {
            __srcr = v2440;
            *(_QWORD *)v2437 = *(_QWORD *)v2438;
            v2442 = v2439[5];
            v3040 = v2437;
            v2443 = &v2437[v2442];
            v2444 = &v2438[v2442];
            v2445 = type metadata accessor for TranscriptProtoResponseDialog(0);
            v2446 = *(_QWORD *)(v2445 - 8);
            v2824 = v2445;
            v2984 = v20;
            if ((*(unsigned int (**)(char *, uint64_t))(v2446 + 48))(v2444, 1))
            {
              v2447 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
              memcpy(v2443, v2444, *(_QWORD *)(*(_QWORD *)(v2447 - 8) + 64));
            }
            else
            {
              v2448 = *((_OWORD *)v2444 + 1);
              *(_OWORD *)v2443 = *(_OWORD *)v2444;
              *((_OWORD *)v2443 + 1) = v2448;
              v2449 = *((_OWORD *)v2444 + 3);
              *((_OWORD *)v2443 + 2) = *((_OWORD *)v2444 + 2);
              *((_OWORD *)v2443 + 3) = v2449;
              v2450 = *(int *)(v2824 + 32);
              v2821 = &v2443[v2450];
              v2451 = &v2444[v2450];
              v2452 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2452 - 8) + 32))(v2821, v2451, v2452);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2446 + 56))(v2443, 0, 1, v2824);
            }
            v2453 = v2439[6];
            v2454 = (_OWORD *)((char *)v3040 + v2453);
            v2455 = &v2438[v2453];
            v2456 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v2457 = *(_QWORD *)(v2456 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2457 + 48))(v2455, 1, v2456))
            {
              v2458 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
              memcpy(v2454, v2455, *(_QWORD *)(*(_QWORD *)(v2458 - 8) + 64));
            }
            else
            {
              *v2454 = *(_OWORD *)v2455;
              v2459 = *(int *)(v2456 + 24);
              v2825 = (char *)v2454 + v2459;
              v2460 = &v2455[v2459];
              v2461 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2461 - 8) + 32))(v2825, v2460, v2461);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2457 + 56))(v2454, 0, 1, v2456);
            }
            v20 = v2984;
            v2435 = v2831;
            *(_OWORD *)((char *)v3040 + v2439[7]) = *(_OWORD *)&v2438[v2439[7]];
            *(_OWORD *)((char *)v3040 + v2439[8]) = *(_OWORD *)&v2438[v2439[8]];
            *((_BYTE *)v3040 + v2439[9]) = v2438[v2439[9]];
            *((_BYTE *)v3040 + v2439[10]) = v2438[v2439[10]];
            v2462 = v2439[11];
            v2463 = (char *)v3040 + v2462;
            v2464 = v2438;
            v2465 = v2439;
            v2466 = (char *)v2464 + v2462;
            v2467 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2467 - 8) + 32))(v2463, v2466, v2467);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__srcr + 7))(v3040, 0, 1, v2465);
          }
          v2468 = v2435[6];
          v2469 = &v2849[v2468];
          v2470 = &__dstb[v2468];
          v2471 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2471 - 8) + 32))(v2469, v2470, v2471);
          ((void (*)(char *, _QWORD, uint64_t, int *))v2826[7])(v2849, 0, 1, v2435);
        }
        v2472 = v2919[7];
        v2473 = (_DWORD *)(v13 + v2472);
        v2474 = &v14[v2472];
        v2475 = type metadata accessor for TranscriptProtoStatementID(0);
        v2476 = *(_QWORD *)(v2475 - 8);
        v3041 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2476 + 48);
        __srcs = (void *)v2476;
        if (v3041(v2474, 1, v2475))
        {
          v2477 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v2473, v2474, *(_QWORD *)(*(_QWORD *)(v2477 - 8) + 64));
        }
        else
        {
          *v2473 = *(_DWORD *)v2474;
          *(_OWORD *)(v2473 + 2) = *(_OWORD *)(v2474 + 8);
          v2478 = *(int *)(v2475 + 24);
          v2479 = (char *)v2473 + v2478;
          v2480 = &v2474[v2478];
          v2481 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2481 - 8) + 32))(v2479, v2480, v2481);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2476 + 56))(v2473, 0, 1, v2475);
        }
        v2482 = v2919[8];
        v2483 = (_DWORD *)(v13 + v2482);
        v2484 = &v14[v2482];
        a3 = v2991;
        if (v3041(&v14[v2482], 1, v2475))
        {
          v2485 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v2483, v2484, *(_QWORD *)(*(_QWORD *)(v2485 - 8) + 64));
        }
        else
        {
          *v2483 = *(_DWORD *)v2484;
          *(_OWORD *)(v2483 + 2) = *(_OWORD *)(v2484 + 8);
          v2486 = *(int *)(v2475 + 24);
          v2487 = (char *)v2483 + v2486;
          v2488 = &v2484[v2486];
          v2489 = sub_2408E57A4();
          v2490 = v2487;
          a3 = v2991;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2489 - 8) + 32))(v2490, v2488, v2489);
          (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__srcs + 7))(v2483, 0, 1, v2475);
        }
        v2491 = v2919[9];
        v2492 = (_DWORD *)(v13 + v2491);
        v2493 = &v14[v2491];
        if (v3041(&v14[v2491], 1, v2475))
        {
          v2494 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v2492, v2493, *(_QWORD *)(*(_QWORD *)(v2494 - 8) + 64));
        }
        else
        {
          *v2492 = *(_DWORD *)v2493;
          *(_OWORD *)(v2492 + 2) = *(_OWORD *)(v2493 + 8);
          v2495 = *(int *)(v2475 + 24);
          v2496 = (char *)v2492 + v2495;
          v2497 = &v2493[v2495];
          v2498 = sub_2408E57A4();
          v2499 = v2496;
          a3 = v2991;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2498 - 8) + 32))(v2499, v2497, v2498);
          (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__srcs + 7))(v2492, 0, 1, v2475);
        }
        v2500 = v2919[10];
        v2501 = v13 + v2500;
        v2502 = &v14[v2500];
        v2503 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2503 - 8) + 32))(v2501, v2502, v2503);
        swift_storeEnumTagMultiPayload();
        v4 = v3083;
        goto LABEL_767;
      case 0x1Eu:
        v3049 = v21;
        v2963 = v20;
        v3009 = v15;
        v133 = a3;
        v3113 = v5;
        v101 = v4;
        v203 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v203;
        v134 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v204 = *(int *)(v134 + 24);
        v205 = (_QWORD *)(v13 + v204);
        v206 = &v14[v204];
        v207 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v208 = *(_QWORD *)(v207 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
          goto LABEL_66;
        goto LABEL_178;
      case 0x1Fu:
        v3049 = v21;
        v2963 = v20;
        v3009 = v15;
        v133 = a3;
        v3113 = v5;
        v101 = v4;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        v134 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v209 = *(int *)(v134 + 24);
        v205 = (_QWORD *)(v13 + v209);
        v206 = &v14[v209];
        v207 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v208 = *(_QWORD *)(v207 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
        {
LABEL_66:
          v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
        }
        else
        {
LABEL_178:
          *(_OWORD *)v205 = *(_OWORD *)v206;
          v205[2] = *((_QWORD *)v206 + 2);
          v583 = *(int *)(v207 + 24);
          v2928 = (char *)v205 + v583;
          v584 = &v206[v583];
          v585 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v585 - 8) + 32))(v2928, v584, v585);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
        }
LABEL_179:
        a3 = v133;
        v586 = *(int *)(v134 + 28);
        v587 = v13 + v586;
        v588 = &v14[v586];
        v589 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v589 - 8) + 32))(v587, v588, v589);
        v20 = v2963;
LABEL_180:
        swift_storeEnumTagMultiPayload();
        v4 = v101;
        v5 = v3113;
        v15 = v3009;
        v21 = v3049;
        break;
      case 0x20u:
        v3046 = v21;
        v3084 = v4;
        v114 = v5;
        v211 = type metadata accessor for TranscriptProtoRequestContent(0);
        v212 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(v211 - 8);
        v2992 = a3;
        v2967 = v20;
        if (((unsigned int (**)(char *, uint64_t, uint64_t))v212)[6](v14, 1, v211))
        {
          v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
        }
        else
        {
          v590 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          __dstc = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v212;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v590 - 8) + 48))(v14, 1, v590))
          {
            v1172 = (char *)&loc_240579AA4 + 4 * word_240901A44[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v591 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v591 - 8) + 64));
          v2185 = *(int *)(v211 + 20);
          v2186 = v13 + v2185;
          v2187 = &v14[v2185];
          v2188 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2188 - 8) + 32))(v2186, v2187, v2188);
          __dstc[7](v13, 0, 1, v211);
        }
        v2189 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        *(_OWORD *)(v13 + v2189[5]) = *(_OWORD *)&v14[v2189[5]];
        v2190 = v2189[6];
        v2191 = (_QWORD *)(v13 + v2190);
        v2192 = &v14[v2190];
        v2193 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v2194 = *(_QWORD *)(v2193 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2194 + 48))(v2192, 1, v2193))
        {
          v2195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v2191, v2192, *(_QWORD *)(*(_QWORD *)(v2195 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v2191 = *(_OWORD *)v2192;
          v2191[2] = *((_QWORD *)v2192 + 2);
          v2196 = *(int *)(v2193 + 24);
          v3036 = (char *)v2191 + v2196;
          v2197 = &v2192[v2196];
          v2198 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2198 - 8) + 32))(v3036, v2197, v2198);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2194 + 56))(v2191, 0, 1, v2193);
        }
        a3 = v2992;
        v2199 = v2189[7];
        v2200 = v13 + v2199;
        v2201 = &v14[v2199];
        v2202 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2202 - 8) + 32))(v2200, v2201, v2202);
        v20 = v2967;
        swift_storeEnumTagMultiPayload();
        v4 = v3084;
LABEL_722:
        v5 = v114;
        goto LABEL_768;
      case 0x21u:
        v2968 = v20;
        v2993 = a3;
        v3085 = v4;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v2920 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v214 = *(int *)(v2920 + 20);
        v215 = (_DWORD *)(v13 + v214);
        v216 = &v14[v214];
        v217 = type metadata accessor for TranscriptProtoStatementID(0);
        v218 = *(_QWORD *)(v217 - 8);
        v3046 = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
        {
          v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
        }
        else
        {
          *v215 = *(_DWORD *)v216;
          *(_OWORD *)(v215 + 2) = *(_OWORD *)(v216 + 8);
          v592 = *(int *)(v217 + 24);
          v593 = v5;
          v594 = (char *)v215 + v592;
          v595 = &v216[v592];
          v596 = sub_2408E57A4();
          v597 = v594;
          v5 = v593;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v596 - 8) + 32))(v597, v595, v596);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
        }
        v598 = v2920;
        v599 = *(int *)(v2920 + 24);
        __dstd = (char *)(v13 + v599);
        v600 = &v14[v599];
        v601 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v602 = *(_QWORD *)(v601 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v602 + 48))(v600, 1, v601))
        {
          v111 = v5;
          v603 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(__dstd, v600, *(_QWORD *)(*(_QWORD *)(v603 - 8) + 64));
        }
        else
        {
          v698 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          v2851 = (int *)v601;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v698 - 8) + 48))(v600, 1, v698))
          {
            v1195 = (char *)&loc_240579CFC + 4 * word_240901A2E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v111 = v5;
          v699 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(__dstd, v600, *(_QWORD *)(*(_QWORD *)(v699 - 8) + 64));
          v2362 = v2851[5];
          v2363 = &__dstd[v2362];
          v2364 = &v600[v2362];
          v2365 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2365 - 8) + 32))(v2363, v2364, v2365);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v602 + 56))(__dstd, 0, 1, v2851);
          v598 = v2920;
        }
        v2366 = *(int *)(v598 + 28);
        v2367 = v13 + v2366;
        v2368 = &v14[v2366];
        v2369 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2369 - 8) + 32))(v2367, v2368, v2369);
        v110 = v2968;
        swift_storeEnumTagMultiPayload();
        v4 = v3085;
        a3 = v2993;
LABEL_772:
        v5 = v111;
        v20 = v110;
        goto LABEL_768;
      case 0x22u:
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
        v220 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v221 = v13 + v220;
        v3057 = v21;
        v222 = v5;
        v223 = &v14[v220];
        v224 = sub_2408E57A4();
        v225 = v223;
        v5 = v222;
        v21 = v3057;
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32))(v221, v225, v224);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x23u:
        v3046 = v21;
        v3112 = v5;
        v226 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v227 = *(_QWORD *)(v226 - 8);
        v2989 = a3;
        v3086 = v4;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v14, 1, v226))
        {
          v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
        }
        else
        {
          v2929 = v227;
          v2979 = v20;
          v604 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *(_OWORD *)(v13 + 16) = v604;
          *(_BYTE *)(v13 + 32) = v14[32];
          *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
          *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
          *(_QWORD *)(v13 + 72) = *((_QWORD *)v14 + 9);
          *(_BYTE *)(v13 + 80) = v14[80];
          *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
          *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
          v3015 = (int *)v226;
          v605 = *(int *)(v226 + 68);
          v606 = (_QWORD *)(v13 + v605);
          v607 = &v14[v605];
          v608 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v609 = *(_QWORD *)(v608 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v609 + 48))(v607, 1, v608))
          {
            v610 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v606, v607, *(_QWORD *)(*(_QWORD *)(v610 - 8) + 64));
          }
          else
          {
            *v606 = *(_QWORD *)v607;
            v1173 = *(int *)(v608 + 20);
            v1174 = (char *)v606 + v1173;
            v1175 = &v607[v1173];
            v1176 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1176 - 8) + 32))(v1174, v1175, v1176);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v609 + 56))(v606, 0, 1, v608);
          }
          v1177 = v3015;
          *(_OWORD *)(v13 + v3015[18]) = *(_OWORD *)&v14[v3015[18]];
          v1178 = v3015[19];
          v1179 = (_OWORD *)(v13 + v1178);
          v1180 = &v14[v1178];
          v1181 = type metadata accessor for ToolKitProtoAppDefinition(0);
          v1182 = *(_QWORD *)(v1181 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1182 + 48))(v1180, 1, v1181))
          {
            v1183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
            memcpy(v1179, v1180, *(_QWORD *)(*(_QWORD *)(v1183 - 8) + 64));
          }
          else
          {
            v1259 = *((_OWORD *)v1180 + 1);
            *v1179 = *(_OWORD *)v1180;
            v1179[1] = v1259;
            v1260 = *((_OWORD *)v1180 + 3);
            v1179[2] = *((_OWORD *)v1180 + 2);
            v1179[3] = v1260;
            v1179[4] = *((_OWORD *)v1180 + 4);
            *((_BYTE *)v1179 + 80) = v1180[80];
            v1261 = *(int *)(v1181 + 40);
            __srce = (_OWORD *)((char *)v1179 + v1261);
            v1262 = &v1180[v1261];
            v1263 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v1264 = *(_QWORD *)(v1263 - 8);
            __dstg = (int *)v1263;
            if ((*(unsigned int (**)(char *, uint64_t))(v1264 + 48))(v1262, 1))
            {
              v1265 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(__srce, v1262, *(_QWORD *)(*(_QWORD *)(v1265 - 8) + 64));
            }
            else
            {
              *__srce = *(_OWORD *)v1262;
              v1516 = __dstg[5];
              v2854 = (char *)__srce + v1516;
              v1517 = &v1262[v1516];
              v1518 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1518 - 8) + 32))(v2854, v1517, v1518);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v1264 + 56))(__srce, 0, 1, __dstg);
            }
            v1519 = *(int *)(v1181 + 44);
            v1520 = (char *)v1179 + v1519;
            v1521 = &v1180[v1519];
            v1522 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1522 - 8) + 32))(v1520, v1521, v1522);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1182 + 56))(v1179, 0, 1, v1181);
            v1177 = v3015;
          }
          *(_OWORD *)(v13 + v1177[20]) = *(_OWORD *)&v14[v1177[20]];
          v1523 = v1177[21];
          v1524 = (_OWORD *)(v13 + v1523);
          v1525 = &v14[v1523];
          v1526 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          v1527 = *(_QWORD *)(v1526 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1527 + 48))(v1525, 1, v1526))
          {
            v1528 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v1524, v1525, *(_QWORD *)(*(_QWORD *)(v1528 - 8) + 64));
          }
          else
          {
            v1529 = *((_OWORD *)v1525 + 1);
            *v1524 = *(_OWORD *)v1525;
            v1524[1] = v1529;
            v1530 = *(int *)(v1526 + 24);
            v1531 = (char *)v1524 + v1530;
            v1532 = &v1525[v1530];
            v1533 = sub_2408E57A4();
            v1534 = v1531;
            v1177 = v3015;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1533 - 8) + 32))(v1534, v1532, v1533);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1527 + 56))(v1524, 0, 1, v1526);
          }
          v20 = v2979;
          v1535 = v1177[22];
          v1536 = (_OWORD *)(v13 + v1535);
          v1537 = &v14[v1535];
          v1538 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          v1539 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1538 - 8);
          if (((unsigned int (**)(char *, uint64_t, uint64_t))v1539)[6](v1537, 1, v1538))
          {
            v1540 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
            memcpy(v1536, v1537, *(_QWORD *)(*(_QWORD *)(v1540 - 8) + 64));
          }
          else
          {
            __srch = v1539;
            v1541 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v1542 = *(_QWORD *)(v1541 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1542 + 48))(v1537, 1, v1541))
            {
              v1543 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
              memcpy(v1536, v1537, *(_QWORD *)(*(_QWORD *)(v1543 - 8) + 64));
            }
            else
            {
              v1618 = v15;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *v1536 = *(_OWORD *)v1537;
                *((_BYTE *)v1536 + 16) = v1537[16];
                *(_OWORD *)((char *)v1536 + 24) = *(_OWORD *)(v1537 + 24);
                *(_OWORD *)((char *)v1536 + 40) = *(_OWORD *)(v1537 + 40);
                v1619 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                               + 32);
                v1620 = (char *)v1536 + v1619;
                __dstu = &v1537[v1619];
                v1621 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1621 - 8) + 32))(v1620, __dstu, v1621);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v1536, v1537, *(_QWORD *)(v1542 + 64));
              }
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1542 + 56))(v1536, 0, 1, v1541);
              v15 = v1618;
              v20 = v2979;
            }
            v1677 = *(int *)(v1538 + 20);
            v1678 = (char *)v1536 + v1677;
            v1679 = &v1537[v1677];
            v1680 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1680 - 8) + 32))(v1678, v1679, v1680);
            (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srch + 7))(v1536, 0, 1, v1538);
            v1177 = v3015;
          }
          v1681 = v1177[23];
          v1682 = (_OWORD *)(v13 + v1681);
          v1683 = &v14[v1681];
          v1684 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          __dstk = *(_QWORD **)(v1684 - 8);
          __srcj = (unsigned int (*)(char *, uint64_t, uint64_t))__dstk[6];
          if (__srcj(v1683, 1, v1684))
          {
            v1685 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v1682, v1683, *(_QWORD *)(*(_QWORD *)(v1685 - 8) + 64));
          }
          else
          {
            v1686 = *((_OWORD *)v1683 + 1);
            *v1682 = *(_OWORD *)v1683;
            v1682[1] = v1686;
            *((_WORD *)v1682 + 16) = *((_WORD *)v1683 + 16);
            *(_OWORD *)((char *)v1682 + 40) = *(_OWORD *)(v1683 + 40);
            *(_OWORD *)((char *)v1682 + 56) = *(_OWORD *)(v1683 + 56);
            v1687 = *(int *)(v1684 + 40);
            v2856 = (_OWORD *)((char *)v1682 + v1687);
            v1688 = &v1683[v1687];
            v1689 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1690 = *(_QWORD *)(v1689 - 8);
            v1691 = v1689;
            if ((*(unsigned int (**)(char *, uint64_t))(v1690 + 48))(v1688, 1))
            {
              v1692 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v2856, v1688, *(_QWORD *)(*(_QWORD *)(v1692 - 8) + 64));
            }
            else
            {
              *v2856 = *(_OWORD *)v1688;
              v1693 = *(int *)(v1691 + 20);
              v2834 = (char *)v2856 + v1693;
              v1694 = &v1688[v1693];
              v1695 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1695 - 8) + 32))(v2834, v1694, v1695);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1690 + 56))(v2856, 0, 1, v1691);
            }
            v20 = v2979;
            v1696 = *(int *)(v1684 + 44);
            v1697 = (char *)v1682 + v1696;
            v1698 = &v1683[v1696];
            v1699 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1699 - 8) + 32))(v1697, v1698, v1699);
            ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstk[7])(v1682, 0, 1, v1684);
            v1177 = v3015;
          }
          v1700 = v1177[24];
          v1701 = (_OWORD *)(v13 + v1700);
          v1702 = &v14[v1700];
          if (__srcj(&v14[v1700], 1, v1684))
          {
            v1703 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v1701, v1702, *(_QWORD *)(*(_QWORD *)(v1703 - 8) + 64));
          }
          else
          {
            v1704 = *((_OWORD *)v1702 + 1);
            *v1701 = *(_OWORD *)v1702;
            v1701[1] = v1704;
            *((_WORD *)v1701 + 16) = *((_WORD *)v1702 + 16);
            *(_OWORD *)((char *)v1701 + 40) = *(_OWORD *)(v1702 + 40);
            *(_OWORD *)((char *)v1701 + 56) = *(_OWORD *)(v1702 + 56);
            v1705 = *(int *)(v1684 + 40);
            __srck = (_OWORD *)((char *)v1701 + v1705);
            v1706 = &v1702[v1705];
            v1707 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1708 = *(_QWORD *)(v1707 - 8);
            v1709 = v1707;
            if ((*(unsigned int (**)(char *, uint64_t))(v1708 + 48))(v1706, 1))
            {
              v1710 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(__srck, v1706, *(_QWORD *)(*(_QWORD *)(v1710 - 8) + 64));
            }
            else
            {
              *__srck = *(_OWORD *)v1706;
              v1711 = *(int *)(v1709 + 20);
              v2857 = (char *)__srck + v1711;
              v1712 = &v1706[v1711];
              v1713 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1713 - 8) + 32))(v2857, v1712, v1713);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1708 + 56))(__srck, 0, 1, v1709);
            }
            v20 = v2979;
            v1714 = *(int *)(v1684 + 44);
            v1715 = (char *)v1701 + v1714;
            v1716 = &v1702[v1714];
            v1717 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1717 - 8) + 32))(v1715, v1716, v1717);
            ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstk[7])(v1701, 0, 1, v1684);
            v1177 = v3015;
          }
          v1718 = v1177[25];
          v1719 = v1177;
          v1720 = v13 + v1718;
          v1721 = &v14[v1718];
          v1722 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1722 - 8) + 32))(v1720, v1721, v1722);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v2929 + 56))(v13, 0, 1, v1719);
        }
        v1723 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v1724 = v1723[5];
        v1725 = (_DWORD *)(v13 + v1724);
        v1726 = &v14[v1724];
        v1727 = type metadata accessor for TranscriptProtoStatementID(0);
        v1728 = *(_QWORD *)(v1727 - 8);
        v3030 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1728 + 48);
        v2949 = v1728;
        if (v3030(v1726, 1, v1727))
        {
          v1729 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1725, v1726, *(_QWORD *)(*(_QWORD *)(v1729 - 8) + 64));
        }
        else
        {
          *v1725 = *(_DWORD *)v1726;
          *(_OWORD *)(v1725 + 2) = *(_OWORD *)(v1726 + 8);
          v1730 = *(int *)(v1727 + 24);
          __srcx = (char *)v1725 + v1730;
          v1731 = &v1726[v1730];
          v1732 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1732 - 8) + 32))(__srcx, v1731, v1732);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1728 + 56))(v1725, 0, 1, v1727);
        }
        v1733 = v1723[6];
        v1734 = (_DWORD *)(v13 + v1733);
        v1735 = &v14[v1733];
        if (v3030(&v14[v1733], 1, v1727))
        {
          v1736 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1734, v1735, *(_QWORD *)(*(_QWORD *)(v1736 - 8) + 64));
        }
        else
        {
          *v1734 = *(_DWORD *)v1735;
          *(_OWORD *)(v1734 + 2) = *(_OWORD *)(v1735 + 8);
          v1737 = *(int *)(v1727 + 24);
          v1738 = (char *)v1734 + v1737;
          v1739 = &v1735[v1737];
          v1740 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1740 - 8) + 32))(v1738, v1739, v1740);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2949 + 56))(v1734, 0, 1, v1727);
        }
        v4 = v3086;
        v1741 = v1723[7];
        v1742 = v13 + v1741;
        v1743 = &v14[v1741];
        v1744 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1744 - 8) + 32))(v1742, v1743, v1744);
LABEL_766:
        swift_storeEnumTagMultiPayload();
        a3 = v2989;
        goto LABEL_767;
      case 0x24u:
        v3046 = v21;
        v2969 = v20;
        v3087 = v4;
        v3112 = v5;
        v2994 = a3;
        v3008 = v15;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_BYTE *)(v13 + 16) = v14[16];
        *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
        v229 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v230 = *(int *)(v229 + 28);
        v231 = (_DWORD *)(v13 + v230);
        v232 = &v14[v230];
        v233 = type metadata accessor for TranscriptProtoStatementID(0);
        v234 = *(_QWORD *)(v233 - 8);
        v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48);
        if (v235(v232, 1, v233))
        {
          v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
        }
        else
        {
          *v231 = *(_DWORD *)v232;
          *(_OWORD *)(v231 + 2) = *(_OWORD *)(v232 + 8);
          v611 = *(int *)(v233 + 24);
          v612 = v229;
          v613 = (char *)v231 + v611;
          v614 = &v232[v611];
          v615 = sub_2408E57A4();
          v616 = v613;
          v229 = v612;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v615 - 8) + 32))(v616, v614, v615);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
        }
        v617 = v229;
        v618 = *(int *)(v229 + 32);
        v619 = (_DWORD *)(v13 + v618);
        v620 = &v14[v618];
        if (v235(&v14[v618], 1, v233))
        {
          v621 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v619, v620, *(_QWORD *)(*(_QWORD *)(v621 - 8) + 64));
        }
        else
        {
          *v619 = *(_DWORD *)v620;
          *(_OWORD *)(v619 + 2) = *(_OWORD *)(v620 + 8);
          v700 = *(int *)(v233 + 24);
          v701 = (char *)v619 + v700;
          v702 = &v620[v700];
          v703 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v703 - 8) + 32))(v701, v702, v703);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v619, 0, 1, v233);
        }
        v4 = v3087;
        v704 = *(int *)(v617 + 36);
        v705 = v13 + v704;
        v706 = &v14[v704];
        v707 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v707 - 8) + 32))(v705, v706, v707);
        v20 = v2969;
        goto LABEL_217;
      case 0x25u:
        v3046 = v21;
        v2970 = v20;
        v3088 = v4;
        v3112 = v5;
        v2994 = a3;
        v3008 = v15;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_BYTE *)(v13 + 16) = v14[16];
        v237 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v238 = *(int *)(v237 + 24);
        v239 = (_DWORD *)(v13 + v238);
        v240 = &v14[v238];
        v241 = type metadata accessor for TranscriptProtoStatementID(0);
        v242 = *(_QWORD *)(v241 - 8);
        v243 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v242 + 48);
        if (v243(v240, 1, v241))
        {
          v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
        }
        else
        {
          *v239 = *(_DWORD *)v240;
          *(_OWORD *)(v239 + 2) = *(_OWORD *)(v240 + 8);
          v622 = *(int *)(v241 + 24);
          v623 = v237;
          v624 = (char *)v239 + v622;
          v625 = &v240[v622];
          v626 = sub_2408E57A4();
          v627 = v624;
          v237 = v623;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v626 - 8) + 32))(v627, v625, v626);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v242 + 56))(v239, 0, 1, v241);
        }
        v628 = v237;
        v629 = *(int *)(v237 + 28);
        v630 = (_DWORD *)(v13 + v629);
        v631 = &v14[v629];
        if (v243(&v14[v629], 1, v241))
        {
          v632 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v630, v631, *(_QWORD *)(*(_QWORD *)(v632 - 8) + 64));
        }
        else
        {
          *v630 = *(_DWORD *)v631;
          *(_OWORD *)(v630 + 2) = *(_OWORD *)(v631 + 8);
          v708 = *(int *)(v241 + 24);
          v709 = (char *)v630 + v708;
          v710 = &v631[v708];
          v711 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v711 - 8) + 32))(v709, v710, v711);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v242 + 56))(v630, 0, 1, v241);
        }
        v4 = v3088;
        v712 = *(int *)(v628 + 32);
        v713 = v13 + v712;
        v714 = &v14[v712];
        v715 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v715 - 8) + 32))(v713, v714, v715);
        v20 = v2970;
LABEL_217:
        swift_storeEnumTagMultiPayload();
        a3 = v2994;
        goto LABEL_229;
      case 0x26u:
        v3046 = v21;
        v2971 = v20;
        v3078 = v4;
        v3112 = v5;
        v3008 = v15;
        v245 = type metadata accessor for ToolKitProtoTypedValue(0);
        v246 = *(_QWORD *)(v245 - 8);
        v247 = a3;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48))(v14, 1, v245))
        {
          v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v633 = *(int *)(v245 + 20);
          v634 = v13 + v633;
          v635 = &v14[v633];
          v636 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v636 - 8) + 32))(v634, v635, v636);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v246 + 56))(v13, 0, 1, v245);
        }
        v637 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v638 = *(int *)(v637 + 20);
        v639 = (_QWORD *)(v13 + v638);
        v640 = &v14[v638];
        v641 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v642 = *(_QWORD *)(v641 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v642 + 48))(v640, 1, v641))
        {
          v643 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v639, v640, *(_QWORD *)(*(_QWORD *)(v643 - 8) + 64));
        }
        else
        {
          *v639 = *(_QWORD *)v640;
          v716 = *(int *)(v641 + 20);
          v717 = (char *)v639 + v716;
          v718 = &v640[v716];
          v719 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v719 - 8) + 32))(v717, v718, v719);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v642 + 56))(v639, 0, 1, v641);
        }
        v720 = v637;
        v721 = *(int *)(v637 + 24);
        v722 = (_DWORD *)(v13 + v721);
        v723 = &v14[v721];
        v724 = type metadata accessor for TranscriptProtoStatementID(0);
        v725 = *(_QWORD *)(v724 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v725 + 48))(v723, 1, v724))
        {
          v726 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v722, v723, *(_QWORD *)(*(_QWORD *)(v726 - 8) + 64));
        }
        else
        {
          *v722 = *(_DWORD *)v723;
          *(_OWORD *)(v722 + 2) = *(_OWORD *)(v723 + 8);
          v743 = *(int *)(v724 + 24);
          v744 = (char *)v722 + v743;
          v745 = &v723[v743];
          v746 = sub_2408E57A4();
          v747 = v744;
          v720 = v637;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v746 - 8) + 32))(v747, v745, v746);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v725 + 56))(v722, 0, 1, v724);
        }
        a3 = v247;
        v748 = *(int *)(v720 + 28);
        v749 = v13 + v748;
        v750 = &v14[v748];
        v751 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v751 - 8) + 32))(v749, v750, v751);
        v20 = v2971;
        goto LABEL_228;
      case 0x27u:
        v3006 = v15;
        v3058 = v21;
        v249 = v20;
        v3089 = v4;
        v3111 = v5;
        v250 = type metadata accessor for ToolKitProtoTypedValue(0);
        v251 = *(_QWORD *)(v250 - 8);
        v2987 = a3;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48))(v14, 1, v250))
        {
          v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v644 = *(int *)(v250 + 20);
          v645 = v13 + v644;
          v646 = &v14[v644];
          v647 = sub_2408E57A4();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v647 - 8) + 32))(v645, v646, v647);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v251 + 56))(v13, 0, 1, v250);
        }
        v648 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v649 = *(int *)(v648 + 20);
        v650 = (_DWORD *)(v13 + v649);
        v651 = &v14[v649];
        v652 = type metadata accessor for TranscriptProtoStatementID(0);
        v653 = *(_QWORD **)(v652 - 8);
        v2930 = (unsigned int (*)(char *, uint64_t, uint64_t))v653[6];
        v20 = v249;
        __srca = v653;
        if (v2930(v651, 1, v652))
        {
          v654 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v650, v651, *(_QWORD *)(*(_QWORD *)(v654 - 8) + 64));
        }
        else
        {
          *v650 = *(_DWORD *)v651;
          *(_OWORD *)(v650 + 2) = *(_OWORD *)(v651 + 8);
          v727 = *(int *)(v652 + 24);
          v728 = v653;
          v729 = v648;
          v730 = (char *)v650 + v727;
          v731 = &v651[v727];
          v732 = sub_2408E57A4();
          v733 = v730;
          v648 = v729;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v732 - 8) + 32))(v733, v731, v732);
          ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))v728[7])(v650, 0, 1, v652);
        }
        v21 = v3058;
        v734 = v648;
        v735 = *(int *)(v648 + 24);
        v736 = (_DWORD *)(v13 + v735);
        v737 = &v14[v735];
        if (v2930(&v14[v735], 1, v652))
        {
          v738 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v736, v737, *(_QWORD *)(*(_QWORD *)(v738 - 8) + 64));
        }
        else
        {
          *v736 = *(_DWORD *)v737;
          *(_OWORD *)(v736 + 2) = *(_OWORD *)(v737 + 8);
          v752 = *(int *)(v652 + 24);
          v753 = (char *)v736 + v752;
          v754 = &v737[v752];
          v755 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v755 - 8) + 32))(v753, v754, v755);
          (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__srca + 7))(v736, 0, 1, v652);
        }
        v4 = v3089;
        v756 = *(int *)(v734 + 28);
        v757 = v13 + v756;
        v758 = &v14[v756];
        v759 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v759 - 8) + 32))(v757, v758, v759);
LABEL_370:
        swift_storeEnumTagMultiPayload();
        a3 = v2987;
        v15 = v3006;
        v5 = v3111;
        break;
      case 0x28u:
        v3008 = v15;
        v3046 = v21;
        v3078 = v4;
        v3112 = v5;
        v253 = a3;
        v254 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v254;
        v255 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v256 = *(int *)(v255 + 32);
        v257 = (_OWORD *)(v13 + v256);
        v258 = &v14[v256];
        v259 = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        v260 = *(_QWORD *)(v259 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259))
        {
          v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
          memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
        }
        else
        {
          v655 = *((_OWORD *)v258 + 1);
          *v257 = *(_OWORD *)v258;
          v257[1] = v655;
          *((_DWORD *)v257 + 8) = *((_DWORD *)v258 + 8);
          *(_OWORD *)((char *)v257 + 40) = *(_OWORD *)(v258 + 40);
          v656 = *(int *)(v259 + 36);
          v2931 = (char *)v257 + v656;
          v657 = &v258[v656];
          v658 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v658 - 8) + 32))(v2931, v657, v658);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v260 + 56))(v257, 0, 1, v259);
        }
        a3 = v253;
        v659 = *(int *)(v255 + 36);
        v660 = v13 + v659;
        v661 = &v14[v659];
        v662 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v662 - 8) + 32))(v660, v661, v662);
LABEL_228:
        swift_storeEnumTagMultiPayload();
        v4 = v3078;
LABEL_229:
        v15 = v3008;
LABEL_767:
        v5 = v3112;
LABEL_768:
        v21 = v3046;
        break;
      case 0x2Au:
        v3059 = v21;
        v2972 = v20;
        v3090 = v4;
        v3114 = v5;
        v2995 = a3;
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v3011 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v262 = *(int *)(v3011 + 20);
        v263 = (_DWORD *)(v13 + v262);
        v264 = &v14[v262];
        v265 = type metadata accessor for TranscriptProtoStatementID(0);
        v266 = *(_QWORD *)(v265 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v264, 1, v265))
        {
          v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
        }
        else
        {
          *v263 = *(_DWORD *)v264;
          *(_OWORD *)(v263 + 2) = *(_OWORD *)(v264 + 8);
          v663 = *(int *)(v265 + 24);
          v664 = (char *)v263 + v663;
          v665 = &v264[v663];
          v666 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v666 - 8) + 32))(v664, v665, v666);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v266 + 56))(v263, 0, 1, v265);
        }
        v667 = v3011;
        v668 = *(int *)(v3011 + 24);
        v669 = (char *)(v13 + v668);
        v670 = &v14[v668];
        v671 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        v672 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v671 - 8);
        v20 = v2972;
        if (v672[6](v670, 1, v671))
        {
          v673 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
          memcpy(v669, v670, *(_QWORD *)(*(_QWORD *)(v673 - 8) + 64));
          v21 = v3059;
        }
        else
        {
          __srcc = v672;
          v2933 = v671;
          v739 = v669;
          v740 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          v21 = v3059;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v740 - 8) + 48))(v670, 1, v740))
          {
            v1196 = (char *)&loc_240579DC0 + 4 * word_240901A22[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v741 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
          v742 = v739;
          memcpy(v739, v670, *(_QWORD *)(*(_QWORD *)(v741 - 8) + 64));
          v1745 = *(int *)(v671 + 20);
          v1746 = &v739[v1745];
          v1747 = &v670[v1745];
          v1748 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1748 - 8) + 32))(v1746, v1747, v1748);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srcc[7])(v742, 0, 1, v2933);
          v667 = v3011;
        }
        v1749 = *(int *)(v667 + 28);
        v1750 = v13 + v1749;
        v1751 = &v14[v1749];
        v1752 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1752 - 8) + 32))(v1750, v1751, v1752);
        swift_storeEnumTagMultiPayload();
        v4 = v3090;
        v5 = v3114;
        a3 = v2995;
        break;
      default:
        memcpy((void *)v13, v14, *(_QWORD *)(v21 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
  }
  v2358 = *(int *)(v15 + 20);
  v2359 = v13 + v2358;
  v2360 = &v14[v2358];
  v2361 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v2361 - 8) + 32))(v2359, v2360, v2361);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_817:
  v2516 = a3[12];
  v2517 = (_QWORD *)((char *)v5 + v2516);
  v2518 = (_QWORD *)((char *)v4 + v2516);
  v2520 = *v2518;
  v2519 = v2518[1];
  *v2517 = v2520;
  v2517[1] = v2519;
  swift_bridgeObjectRelease();
  v2521 = a3;
  v2522 = a3[13];
  v2523 = (_QWORD *)((char *)v5 + v2522);
  v2524 = (_QWORD *)((char *)v4 + v2522);
  v2525 = type metadata accessor for TranscriptProtoTimepoint(0);
  v2526 = *(_QWORD *)(v2525 - 8);
  v2527 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2526 + 48);
  v2528 = v2527(v2523, 1, v2525);
  v2529 = v2527(v2524, 1, v2525);
  if (v2528)
  {
    if (!v2529)
    {
      v3124 = v5;
      v2530 = v4;
      v2531 = *((_OWORD *)v2524 + 1);
      *(_OWORD *)v2523 = *(_OWORD *)v2524;
      *((_OWORD *)v2523 + 1) = v2531;
      v2532 = *(int *)(v2525 + 28);
      v2533 = (char *)v2523 + v2532;
      v2534 = (char *)v2524 + v2532;
      v2535 = sub_2408E5750();
      v2536 = *(_QWORD *)(v2535 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2536 + 48))(v2534, 1, v2535))
      {
        v2537 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
        memcpy(v2533, v2534, *(_QWORD *)(*(_QWORD *)(v2537 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v2536 + 32))(v2533, v2534, v2535);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2536 + 56))(v2533, 0, 1, v2535);
      }
      v4 = v2530;
      v2548 = *(int *)(v2525 + 32);
      v2549 = (char *)v2523 + v2548;
      v2550 = (char *)v2524 + v2548;
      v2551 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2551 - 8) + 32))(v2549, v2550, v2551);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2526 + 56))(v2523, 0, 1, v2525);
      v5 = v3124;
      goto LABEL_829;
    }
LABEL_823:
    v2538 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v2523, v2524, *(_QWORD *)(*(_QWORD *)(v2538 - 8) + 64));
LABEL_829:
    v2552 = v2521;
    goto LABEL_830;
  }
  if (v2529)
  {
    sub_240388AE4((uint64_t)v2523, type metadata accessor for TranscriptProtoTimepoint);
    goto LABEL_823;
  }
  v3109 = v4;
  v3125 = v5;
  *(_OWORD *)v2523 = *(_OWORD *)v2524;
  v2539 = v2524[3];
  v2523[2] = v2524[2];
  v2523[3] = v2539;
  swift_bridgeObjectRelease();
  v2540 = *(int *)(v2525 + 28);
  v2541 = (char *)v2523 + v2540;
  v2542 = (char *)v2524 + v2540;
  v2543 = sub_2408E5750();
  v2544 = *(_QWORD *)(v2543 - 8);
  v2545 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2544 + 48);
  v2546 = v2545(v2541, 1, v2543);
  v2547 = v2545(v2542, 1, v2543);
  if (!v2546)
  {
    if (!v2547)
    {
      (*(void (**)(char *, char *, uint64_t))(v2544 + 40))(v2541, v2542, v2543);
      goto LABEL_855;
    }
    (*(void (**)(char *, uint64_t))(v2544 + 8))(v2541, v2543);
    goto LABEL_854;
  }
  if (v2547)
  {
LABEL_854:
    v2603 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v2541, v2542, *(_QWORD *)(*(_QWORD *)(v2603 - 8) + 64));
    goto LABEL_855;
  }
  (*(void (**)(char *, char *, uint64_t))(v2544 + 32))(v2541, v2542, v2543);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2544 + 56))(v2541, 0, 1, v2543);
LABEL_855:
  v4 = v3109;
  v2552 = v2521;
  v2604 = *(int *)(v2525 + 32);
  v2605 = (char *)v2523 + v2604;
  v2606 = (char *)v2524 + v2604;
  v2607 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2607 - 8) + 40))(v2605, v2606, v2607);
  v5 = v3125;
LABEL_830:
  v2553 = v2552[14];
  v2554 = (char *)v5 + v2553;
  v2555 = (char *)v4 + v2553;
  v2556 = sub_2408E5750();
  v2557 = *(_QWORD *)(v2556 - 8);
  v2558 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2557 + 48);
  v2559 = v2558(v2554, 1, v2556);
  v2560 = v2558(v2555, 1, v2556);
  if (v2559)
  {
    if (!v2560)
    {
      (*(void (**)(char *, char *, uint64_t))(v2557 + 32))(v2554, v2555, v2556);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2557 + 56))(v2554, 0, 1, v2556);
      goto LABEL_836;
    }
    goto LABEL_835;
  }
  if (v2560)
  {
    (*(void (**)(char *, uint64_t))(v2557 + 8))(v2554, v2556);
LABEL_835:
    v2561 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v2554, v2555, *(_QWORD *)(*(_QWORD *)(v2561 - 8) + 64));
    goto LABEL_836;
  }
  (*(void (**)(char *, char *, uint64_t))(v2557 + 40))(v2554, v2555, v2556);
LABEL_836:
  v2562 = v2552[15];
  v2563 = v5;
  v2564 = (_QWORD *)((char *)v5 + v2562);
  v2565 = (_QWORD *)((char *)v4 + v2562);
  v2566 = type metadata accessor for TranscriptProtoParticipantID(0);
  v2567 = *(_QWORD *)(v2566 - 8);
  v2568 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2567 + 48);
  v2569 = v2568(v2564, 1, v2566);
  v2570 = v2568(v2565, 1, v2566);
  if (v2569)
  {
    if (!v2570)
    {
      *(_OWORD *)v2564 = *(_OWORD *)v2565;
      v2571 = *(int *)(v2566 + 20);
      v2572 = (char *)v2564 + v2571;
      v2573 = (char *)v2565 + v2571;
      v2574 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2574 - 8) + 32))(v2572, v2573, v2574);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2567 + 56))(v2564, 0, 1, v2566);
      goto LABEL_842;
    }
    goto LABEL_841;
  }
  if (v2570)
  {
    sub_240388AE4((uint64_t)v2564, type metadata accessor for TranscriptProtoParticipantID);
LABEL_841:
    v2575 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v2564, v2565, *(_QWORD *)(*(_QWORD *)(v2575 - 8) + 64));
    goto LABEL_842;
  }
  v2594 = v2565[1];
  *v2564 = *v2565;
  v2564[1] = v2594;
  swift_bridgeObjectRelease();
  v2595 = *(int *)(v2566 + 20);
  v2596 = (char *)v2564 + v2595;
  v2597 = (char *)v2565 + v2595;
  v2598 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2598 - 8) + 40))(v2596, v2597, v2598);
LABEL_842:
  v2576 = v2552[16];
  v2577 = (_QWORD *)((char *)v2563 + v2576);
  v2578 = (_QWORD *)((char *)v4 + v2576);
  v2579 = type metadata accessor for TranscriptProtoSpanID(0);
  v2580 = *(_QWORD *)(v2579 - 8);
  v2581 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2580 + 48);
  v2582 = v2581(v2577, 1, v2579);
  v2583 = v2581(v2578, 1, v2579);
  if (!v2582)
  {
    if (!v2583)
    {
      *v2577 = *v2578;
      v2599 = *(int *)(v2579 + 20);
      v2600 = (char *)v2577 + v2599;
      v2601 = (char *)v2578 + v2599;
      v2602 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2602 - 8) + 40))(v2600, v2601, v2602);
      goto LABEL_848;
    }
    sub_240388AE4((uint64_t)v2577, type metadata accessor for TranscriptProtoSpanID);
    goto LABEL_847;
  }
  if (v2583)
  {
LABEL_847:
    v2588 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v2577, v2578, *(_QWORD *)(*(_QWORD *)(v2588 - 8) + 64));
    goto LABEL_848;
  }
  *v2577 = *v2578;
  v2584 = *(int *)(v2579 + 20);
  v2585 = (char *)v2577 + v2584;
  v2586 = (char *)v2578 + v2584;
  v2587 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2587 - 8) + 32))(v2585, v2586, v2587);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2580 + 56))(v2577, 0, 1, v2579);
LABEL_848:
  v2589 = v2552[17];
  v2590 = (char *)v2563 + v2589;
  v2591 = (char *)v4 + v2589;
  v2592 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2592 - 8) + 40))(v2590, v2591, v2592);
  return v2563;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24058B0D0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[14];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[15];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[16];
            }
            else
            {
              v10 = sub_2408E57A4();
              v9 = *(_QWORD *)(v10 - 8);
              v11 = a3[17];
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24058B220(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[14];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[15];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[16];
            }
            else
            {
              v10 = sub_2408E57A4();
              v9 = *(_QWORD *)(v10 - 8);
              v11 = a4[17];
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24058B360()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_2403C8BE4(319, &qword_257002348, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, &qword_257002350, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, &qword_257002358, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
      if (v2 <= 0x3F)
      {
        sub_2403C8BE4(319, &qword_257002360, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
        if (v3 <= 0x3F)
        {
          sub_2403C8BE4(319, qword_257002368, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
          if (v4 <= 0x3F)
          {
            sub_2408E57A4();
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPayload(uint64_t *a1, uint64_t *a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25)
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(_QWORD *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  unsigned int (*v82)(_QWORD *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  unsigned int (*v91)(_QWORD *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t Step;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(_QWORD *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(_QWORD *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(_BYTE *, uint64_t, uint64_t);
  uint64_t v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(_QWORD *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int (*v144)(_QWORD *, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int (*v179)(uint64_t *, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(char *, char *, uint64_t);
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  int *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  unsigned int (*v206)(char *, uint64_t, uint64_t);
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  unsigned int (*v217)(_QWORD *, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int (*v221)(_QWORD *, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  unsigned int (*v230)(_QWORD *, uint64_t, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(char *, char *, uint64_t);
  uint64_t v238;
  uint64_t v239;
  unsigned int (**v240)(_QWORD *, uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int *v244;
  uint64_t v245;
  _QWORD *v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  unsigned int (*v250)(_QWORD, _QWORD, _QWORD);
  uint64_t v251;
  uint64_t v252;
  int *v253;
  uint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  unsigned int (*v259)(_QWORD *, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  _QWORD *v271;
  uint64_t DecorationToolRetrievalResponse;
  unsigned int (*v273)(_QWORD *, uint64_t, uint64_t);
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  unsigned int (*v281)(_QWORD *, uint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  _QWORD *v290;
  _QWORD *v291;
  uint64_t v292;
  unsigned int (**v293)(_QWORD *, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(char *, char *, uint64_t);
  uint64_t v299;
  _QWORD *v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  void (*v307)(char *, char *, uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  void (*v315)(char *, char *, uint64_t);
  uint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  _QWORD *v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  void (*v333)(char *, char *, uint64_t);
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  void (*v339)(char *, char *, uint64_t);
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void (*v348)(char *, char *, uint64_t);
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  void (*v366)(char *, char *, uint64_t);
  uint64_t v367;
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  void (*v376)(char *, char *, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  _QWORD *v380;
  _QWORD *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  void (*v390)(char *, char *, uint64_t);
  uint64_t v391;
  uint64_t v392;
  _QWORD *v393;
  _QWORD *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  unsigned int (**v399)(const void *, uint64_t, uint64_t);
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  void (*v405)(char *, char *, uint64_t);
  uint64_t v406;
  char *v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  void (*v417)(char *, char *, uint64_t);
  uint64_t v418;
  int *v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  int *v440;
  void (*v441)(char *, char *, uint64_t);
  uint64_t v442;
  uint64_t v443;
  _QWORD *v444;
  _QWORD *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  void (*v451)(char *, char *, uint64_t);
  uint64_t v452;
  uint64_t v453;
  _QWORD *v454;
  _QWORD *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  char *v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  _QWORD *v463;
  uint64_t *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  uint64_t v473;
  _QWORD *v474;
  _QWORD *v475;
  uint64_t v476;
  uint64_t v477;
  unsigned int (*v478)(_QWORD *, uint64_t, uint64_t);
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  void (*v485)(char *, char *, uint64_t);
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  char *v492;
  char *v493;
  uint64_t v494;
  void (*v495)(char *, char *, uint64_t);
  char *v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  _DWORD *v505;
  _DWORD *v506;
  uint64_t v507;
  unsigned int (*v508)(_DWORD *, uint64_t, uint64_t);
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  uint64_t v513;
  uint64_t v514;
  void (*v515)(char *, char *, uint64_t);
  char *v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  uint64_t v525;
  void (*v526)(char *, char *, uint64_t);
  uint64_t v527;
  char *v528;
  char *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  int *v538;
  void (*v539)(char *, char *, uint64_t);
  char *v540;
  uint64_t v541;
  uint64_t v542;
  char *v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  void (*v551)(char *, char *, uint64_t);
  uint64_t v552;
  uint64_t v553;
  char *v554;
  char *v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  uint64_t v562;
  _QWORD *v563;
  _QWORD *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  void (*v572)(char *, char *, uint64_t);
  uint64_t v573;
  uint64_t v574;
  _QWORD *v575;
  _QWORD *v576;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  void (*v583)(char *, char *, uint64_t);
  uint64_t v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  char *v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  char *v597;
  uint64_t v598;
  int EnumCaseMultiPayload;
  uint64_t v600;
  uint64_t v601;
  _BYTE *v602;
  uint64_t v603;
  char *v604;
  uint64_t v605;
  uint64_t v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  char *v610;
  char *v611;
  uint64_t v612;
  uint64_t v613;
  _QWORD *v614;
  _QWORD *v615;
  uint64_t v616;
  uint64_t v617;
  _QWORD *v618;
  _QWORD *v619;
  uint64_t v620;
  _QWORD *v621;
  unsigned int (*v622)(_QWORD *, uint64_t, uint64_t);
  uint64_t v623;
  int *v624;
  uint64_t v625;
  char *v626;
  char *v627;
  uint64_t v628;
  uint64_t v629;
  char *v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  char *v635;
  uint64_t v636;
  char *v637;
  char *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  _QWORD *v645;
  uint64_t v646;
  uint64_t v647;
  _OWORD *v648;
  uint64_t v649;
  void (**v650)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  _BYTE *v655;
  uint64_t v656;
  uint64_t v657;
  _BYTE *v658;
  _BYTE *v659;
  uint64_t v660;
  uint64_t v661;
  _QWORD *v662;
  _QWORD *v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  char *v670;
  uint64_t v671;
  void (*v672)(char *, char *, uint64_t);
  uint64_t v673;
  _QWORD *v674;
  _QWORD *v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  int v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  void (*v689)(char *, char *, uint64_t);
  uint64_t v690;
  char *v691;
  char *v692;
  uint64_t v693;
  uint64_t v694;
  char *v695;
  char *v696;
  uint64_t v697;
  uint64_t v698;
  _QWORD *v699;
  _QWORD *v700;
  uint64_t v701;
  uint64_t v702;
  _QWORD *v703;
  _QWORD *v704;
  uint64_t v705;
  uint64_t v706;
  unsigned int (*v707)(_QWORD *, uint64_t, uint64_t);
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  char *v712;
  uint64_t v713;
  void (*v714)(char *, char *, uint64_t);
  int *v715;
  uint64_t v716;
  _QWORD *v717;
  _QWORD *v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  int v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  char *v732;
  char *v733;
  uint64_t v734;
  uint64_t v735;
  _QWORD *v736;
  _QWORD *v737;
  uint64_t v738;
  uint64_t v739;
  unsigned int (*v740)(_QWORD, _QWORD, _QWORD);
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  _QWORD *v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  char *v752;
  uint64_t v753;
  uint64_t v754;
  char *v755;
  char *v756;
  uint64_t v757;
  uint64_t v758;
  _QWORD *v759;
  _QWORD *v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  char *v772;
  uint64_t v773;
  uint64_t v774;
  char *v775;
  char *v776;
  uint64_t v777;
  uint64_t v778;
  char *v779;
  char *v780;
  uint64_t v781;
  uint64_t v782;
  _QWORD *v783;
  _QWORD *v784;
  unsigned int (*v785)(_QWORD *, uint64_t, uint64_t);
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  void (*v791)(char *, char *, uint64_t);
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  void (*v800)(char *, char *, uint64_t);
  uint64_t v801;
  uint64_t v802;
  char *v803;
  char *v804;
  uint64_t v805;
  uint64_t v806;
  char *v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  char *v811;
  char *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  char *v818;
  uint64_t v819;
  uint64_t v820;
  char *v821;
  char *v822;
  uint64_t v823;
  uint64_t v824;
  char *v825;
  char *v826;
  uint64_t v827;
  uint64_t v828;
  char *v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  char *v833;
  char *v834;
  uint64_t v835;
  uint64_t v836;
  char *v837;
  char *v838;
  uint64_t v839;
  char *v840;
  uint64_t v841;
  char *v842;
  char *v843;
  int *v844;
  unsigned int (**v845)(_QWORD *, uint64_t, int *);
  uint64_t v846;
  uint64_t v847;
  char *v848;
  char *v849;
  uint64_t v850;
  unsigned int (*v851)(char *, uint64_t, uint64_t);
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  void (*v859)(char *, char *, uint64_t);
  uint64_t v860;
  char *v861;
  char *v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  char *v870;
  char *v871;
  uint64_t v872;
  uint64_t v873;
  char *v874;
  char *v875;
  uint64_t v876;
  uint64_t v877;
  char *v878;
  char *v879;
  uint64_t v880;
  void (*v881)(char *, char *, uint64_t);
  uint64_t v882;
  char *v883;
  char *v884;
  uint64_t v885;
  int *v886;
  uint64_t v887;
  _QWORD *v888;
  _QWORD *v889;
  uint64_t v890;
  uint64_t v891;
  unsigned int (*v892)(_QWORD *, uint64_t, uint64_t);
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  char *v896;
  uint64_t v897;
  uint64_t v898;
  void (*v899)(char *, char *, uint64_t);
  char *v900;
  uint64_t v901;
  uint64_t v902;
  _QWORD *v903;
  _QWORD *v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  char *v908;
  uint64_t v909;
  uint64_t v910;
  void (*v911)(char *, char *, uint64_t);
  char *v912;
  uint64_t v913;
  uint64_t v914;
  _QWORD *v915;
  _QWORD *v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  char *v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  void (*v924)(char *, char *, uint64_t);
  char *v925;
  uint64_t v926;
  uint64_t v927;
  char *v928;
  char *v929;
  uint64_t v930;
  uint64_t v931;
  char *v932;
  char *v933;
  uint64_t v934;
  uint64_t v935;
  char *v936;
  char *v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  char *v943;
  uint64_t v944;
  char *v945;
  char *v946;
  uint64_t v947;
  uint64_t v948;
  _QWORD *v949;
  _QWORD *v950;
  uint64_t v951;
  uint64_t v952;
  _QWORD *v953;
  _QWORD *v954;
  uint64_t v955;
  uint64_t v956;
  unsigned int (*v957)(_QWORD *, uint64_t, uint64_t);
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  void (*v962)(char *, char *, uint64_t);
  uint64_t v963;
  char *v964;
  char *v965;
  uint64_t v966;
  uint64_t v967;
  char *v968;
  char *v969;
  uint64_t v970;
  int *v971;
  uint64_t v972;
  _QWORD *v973;
  _QWORD *v974;
  uint64_t v975;
  uint64_t v976;
  _QWORD *v977;
  _QWORD *v978;
  uint64_t v979;
  uint64_t v980;
  unsigned int (*v981)(_QWORD *, uint64_t, uint64_t);
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  void (*v986)(char *, char *, uint64_t);
  uint64_t v987;
  char *v988;
  char *v989;
  uint64_t v990;
  uint64_t v991;
  char *v992;
  char *v993;
  uint64_t v994;
  uint64_t v996;
  char *v997;
  char *v998;
  uint64_t v999;
  uint64_t v1000;
  _QWORD *v1001;
  _QWORD *v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  char *v1007;
  char *v1008;
  uint64_t v1009;
  unsigned int (*v1010)(char *, uint64_t, uint64_t);
  uint64_t v1011;
  char *v1012;
  uint64_t v1013;
  int *v1014;
  uint64_t v1015;
  uint64_t v1016;
  char *v1017;
  char *v1018;
  char *v1019;
  uint64_t v1020;
  char *v1021;
  char *v1022;
  uint64_t v1023;
  uint64_t v1024;
  char *v1025;
  char *v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  char *v1030;
  uint64_t v1031;
  char *v1032;
  char *v1033;
  uint64_t v1034;
  uint64_t v1035;
  char *v1036;
  char *v1037;
  uint64_t v1038;
  uint64_t v1039;
  _QWORD *v1040;
  _QWORD *v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  char *v1047;
  char *v1048;
  uint64_t v1049;
  void (*v1050)(char *, char *, uint64_t);
  char *v1051;
  uint64_t v1052;
  uint64_t v1053;
  _QWORD *v1054;
  _QWORD *v1055;
  uint64_t v1056;
  uint64_t v1057;
  char *v1058;
  char *v1059;
  uint64_t v1060;
  void (*v1061)(char *, char *, uint64_t);
  uint64_t v1062;
  void (*v1063)(char *, char *, uint64_t);
  _QWORD *__src;
  char *__srca;
  char *__srcb;
  uint64_t v1067;
  void (*v1068)(char *, char *, uint64_t);
  char *v1069;
  char *v1070;
  _QWORD *v1071;
  void (*v1072)(char *, char *, uint64_t);
  _QWORD *v1073;
  _QWORD *v1074;
  _QWORD *v1075;
  char *v1076;
  _QWORD *v1077;
  unsigned int (*v1078)(uint64_t *, uint64_t, uint64_t);
  unsigned int (**v1079)(const void *, uint64_t, uint64_t);
  _QWORD *v1080;
  int *v1081;
  char *v1082;
  void *v1083;
  _QWORD *v1084;
  void (**v1085)(char *, _QWORD, uint64_t, int *);
  void *v1086;
  _QWORD *v1087;
  char *v1088;
  unsigned int (*v1089)(_QWORD *, uint64_t, uint64_t);
  char *v1090;
  unsigned int (*v1091)(_QWORD *, uint64_t, uint64_t);
  char *v1092;
  char *v1093;
  _QWORD *v1094;
  void (*v1095)(char *, char *, uint64_t);
  void (**v1096)(char *, _QWORD, uint64_t, uint64_t);
  char *v1097;
  void (*v1098)(char *, char *, uint64_t);
  unsigned int (*v1099)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v1100;
  char *v1101;
  void *v1102;
  _QWORD *v1103;
  char *v1104;
  unsigned int (*v1105)(char *, uint64_t, uint64_t);
  uint64_t v1106;
  char *v1107;
  uint64_t v1108;
  char *v1109;
  char *v1110;
  uint64_t v1111;
  char *v1112;
  uint64_t v1113;
  char *v1114;
  uint64_t v1115;
  char *v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  char *v1120;
  uint64_t v1121;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  char *__dstk;
  char *__dstl;
  char *__dstm;
  char *__dstn;
  char *__dsto;
  void (**__dstd)(uint64_t *, _QWORD, uint64_t, int *);
  char *__dstp;
  char *__dstq;
  void *__dste;
  char *__dstr;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  char *__dstv;
  char *__dstw;
  _BYTE *__dstx;
  _BYTE *__dsty;
  unsigned int (*__dstf)(_QWORD *, uint64_t, uint64_t);
  char *__dstz;
  char *__dstba;
  char *__dstbb;
  char *__dstbc;
  char *__dstbd;
  char *__dstbe;
  char *__dstbf;
  char *__dstbg;
  int *__dstg;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t StepResults;
  uint64_t v1160;
  char *v1161;
  char *v1162;
  char *v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  char *v1167;
  uint64_t DecorationResult;
  int *DecorationPrePlannerResult;
  int *v1170;
  char *v1171;
  char *v1172;
  char *v1173;
  int *v1174;
  unsigned int (*v1175)(_QWORD, _QWORD, _QWORD);
  char *v1176;
  int *v1177;
  char *v1178;
  uint64_t v1179;
  char *v1180;
  char *v1181;
  char *v1182;
  uint64_t v1183;
  uint64_t v1184;
  char *v1185;
  char *v1186;
  char *v1187;
  char *v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;

  v27 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v27 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v27 + 16) & ~(unint64_t)v27));
    swift_retain();
  }
  else
  {
    v28 = a3;
    v29 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v1223 = v30;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v33 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
          v34 = v33[5];
          v35 = (uint64_t *)((char *)a1 + v34);
          v36 = (uint64_t *)((char *)a2 + v34);
          v37 = type metadata accessor for TranscriptProtoLocaleSettings(0);
          v38 = *(_QWORD *)(v37 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            v1219 = v29;
            v283 = v36[1];
            *v35 = *v36;
            v35[1] = v283;
            v1170 = v33;
            v284 = v28;
            v285 = v36[3];
            v35[2] = v36[2];
            v35[3] = v285;
            v286 = v36[5];
            v35[4] = v36[4];
            v35[5] = v286;
            v287 = *(int *)(v37 + 28);
            v1107 = (char *)v36 + v287;
            __dsth = (char *)v35 + v287;
            v288 = sub_2408E57A4();
            v1095 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 16);
            v29 = v1219;
            swift_bridgeObjectRetain();
            v28 = v284;
            v33 = v1170;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1095(__dsth, v1107, v288);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
          }
          v289 = v33[6];
          v290 = (uint64_t *)((char *)a1 + v289);
          v291 = (uint64_t *)((char *)a2 + v289);
          v292 = type metadata accessor for TranscriptProtoDeviceDetails(0);
          v293 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v292 - 8);
          if (v293[6](v291, 1, v292))
          {
            v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
            memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
          }
          else
          {
            __dste = v293;
            v1177 = v33;
            v1199 = v28;
            v1221 = v29;
            v503 = v291[1];
            *v290 = *v291;
            v290[1] = v503;
            v504 = *(int *)(v292 + 20);
            v505 = (_DWORD *)((char *)v290 + v504);
            v506 = (_DWORD *)((char *)v291 + v504);
            v507 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
            v1111 = *(_QWORD *)(v507 - 8);
            v508 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1111 + 48);
            swift_bridgeObjectRetain();
            if (v508(v506, 1, v507))
            {
              v509 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
              memcpy(v505, v506, *(_QWORD *)(*(_QWORD *)(v509 - 8) + 64));
            }
            else
            {
              *v505 = *v506;
              v625 = *(int *)(v507 + 20);
              v626 = (char *)v505 + v625;
              v627 = (char *)v506 + v625;
              v628 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v628 - 8) + 16))(v626, v627, v628);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1111 + 56))(v505, 0, 1, v507);
            }
            v28 = v1199;
            v629 = *(int *)(v292 + 24);
            v630 = (char *)v290 + v629;
            v631 = (char *)v291 + v629;
            v632 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v632 - 8) + 16))(v630, v631, v632);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dste + 7))(v290, 0, 1, v292);
            v29 = v1221;
            v33 = v1177;
          }
          v633 = v33[7];
          v634 = (char *)a1 + v633;
          v635 = (char *)a2 + v633;
          v636 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v636 - 8) + 16))(v634, v635, v636);
          goto LABEL_286;
        case 1u:
          v1202 = v29;
          v1223 = v30;
          v40 = v28;
          v41 = a2[1];
          *a1 = *a2;
          a1[1] = v41;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          v42 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
          v43 = v42[6];
          v44 = (uint64_t *)((char *)a1 + v43);
          v45 = (uint64_t *)((char *)a2 + v43);
          v46 = type metadata accessor for TranscriptProtoStatementID(0);
          v47 = *(_QWORD *)(v46 - 8);
          v48 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48);
          swift_bridgeObjectRetain();
          if (v48(v45, 1, v46))
          {
            v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v44 = *(_DWORD *)v45;
            v295 = v45[2];
            v44[1] = v45[1];
            v44[2] = v295;
            v296 = *(int *)(v46 + 24);
            v1171 = (char *)v44 + v296;
            __dsti = (char *)v45 + v296;
            v297 = sub_2408E57A4();
            v298 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 16);
            swift_bridgeObjectRetain();
            v298(v1171, __dsti, v297);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          }
          v28 = v40;
          v299 = v42[7];
          v300 = (uint64_t *)((char *)a1 + v299);
          v301 = (uint64_t *)((char *)a2 + v299);
          v302 = v301[1];
          *v300 = *v301;
          v300[1] = v302;
          v303 = v42[8];
          v304 = (char *)a1 + v303;
          v305 = (char *)a2 + v303;
          v306 = sub_2408E57A4();
          v307 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 16);
          swift_bridgeObjectRetain();
          v307(v304, v305, v306);
          v29 = v1202;
          goto LABEL_286;
        case 2u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          v50 = a2[3];
          a1[2] = a2[2];
          a1[3] = v50;
          v51 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
          v52 = (char *)a1 + v51;
          v1224 = v30;
          v53 = (char *)a2 + v51;
          v54 = v29;
          v55 = sub_2408E57A4();
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v57 = v53;
          v30 = v1224;
          v58 = v55;
          v29 = v54;
          v56(v52, v57, v58);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 3u:
          v1223 = v30;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v59 = (int *)type metadata accessor for TranscriptProtoRequest(0);
          v60 = v59[5];
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for TranscriptProtoRequestContent(0);
          v64 = *(_QWORD *)(v63 - 8);
          v1203 = v29;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
          {
            v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v308 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 48))(v62, 1, v308))
            {
              v585 = (char *)&loc_24058E0B4 + 4 * word_240901CEE[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v309 - 8) + 64));
            v931 = *(int *)(v63 + 20);
            v932 = &v61[v931];
            v933 = &v62[v931];
            v934 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v934 - 8) + 16))(v932, v933, v934);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
          }
          v935 = v59[6];
          v936 = (char *)a1 + v935;
          v937 = (char *)a2 + v935;
          v938 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          v939 = *(_QWORD *)(v938 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v939 + 48))(v937, 1, v938))
          {
            v940 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
            memcpy(v936, v937, *(_QWORD *)(*(_QWORD *)(v940 - 8) + 64));
          }
          else
          {
            v941 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v941 - 8) + 48))(v937, 1, v941))
            {
              v943 = (char *)&loc_24059286C + 4 * byte_240901CF6[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v942 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
            memcpy(v936, v937, *(_QWORD *)(*(_QWORD *)(v942 - 8) + 64));
            v944 = *(int *)(v938 + 20);
            v945 = &v936[v944];
            v946 = &v937[v944];
            v947 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v947 - 8) + 16))(v945, v946, v947);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v939 + 56))(v936, 0, 1, v938);
          }
          v948 = v59[7];
          v949 = (uint64_t *)((char *)a1 + v948);
          v950 = (uint64_t *)((char *)a2 + v948);
          v951 = v950[1];
          *v949 = *v950;
          v949[1] = v951;
          v952 = v59[8];
          v953 = (uint64_t *)((char *)a1 + v952);
          v954 = (uint64_t *)((char *)a2 + v952);
          v955 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v956 = *(_QWORD *)(v955 - 8);
          v957 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v956 + 48);
          swift_bridgeObjectRetain();
          if (v957(v954, 1, v955))
          {
            v958 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v953, v954, *(_QWORD *)(*(_QWORD *)(v958 - 8) + 64));
          }
          else
          {
            v959 = v954[1];
            *v953 = *v954;
            v953[1] = v959;
            v953[2] = v954[2];
            v960 = *(int *)(v955 + 24);
            v1120 = (char *)v954 + v960;
            __dstbf = (char *)v953 + v960;
            v961 = sub_2408E57A4();
            v962 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v961 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v962(__dstbf, v1120, v961);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v956 + 56))(v953, 0, 1, v955);
          }
          v963 = v59[9];
          v964 = (char *)a1 + v963;
          v965 = (char *)a2 + v963;
          v966 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v966 - 8) + 16))(v964, v965, v966);
          v29 = v1203;
          goto LABEL_286;
        case 4u:
          v66 = a2[1];
          *a1 = *a2;
          a1[1] = v66;
          v67 = a2[3];
          a1[2] = a2[2];
          a1[3] = v67;
          v68 = a2[5];
          a1[4] = a2[4];
          a1[5] = v68;
          a1[6] = a2[6];
          *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
          v69 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
          v1189 = v28;
          v1204 = v29;
          v70 = (char *)a1 + v69;
          v71 = (char *)a2 + v69;
          v72 = sub_2408E57A4();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v74 = v70;
          v75 = v71;
          v28 = v1189;
          v29 = v1204;
          v73(v74, v75, v72);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 5u:
          v1205 = v29;
          v1223 = v30;
          v76 = a2[1];
          *a1 = *a2;
          a1[1] = v76;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[3] = a2[3];
          v77 = (int *)type metadata accessor for TranscriptProtoAction(0);
          v78 = v77[7];
          v79 = (uint64_t *)((char *)a1 + v78);
          v80 = (uint64_t *)((char *)a2 + v78);
          v81 = type metadata accessor for TranscriptProtoStatementID(0);
          v1156 = *(_QWORD *)(v81 - 8);
          v82 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1156 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v82(v80, 1, v81))
          {
            v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v79 = *(_DWORD *)v80;
            v310 = v80[2];
            v79[1] = v80[1];
            v79[2] = v310;
            v311 = *(int *)(v81 + 24);
            v312 = (char *)v79 + v311;
            __dstj = (char *)v80 + v311;
            v313 = v28;
            v314 = sub_2408E57A4();
            v315 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 16);
            swift_bridgeObjectRetain();
            v316 = v314;
            v28 = v313;
            v315(v312, __dstj, v316);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1156 + 56))(v79, 0, 1, v81);
          }
          v317 = v77[8];
          v318 = (uint64_t *)((char *)a1 + v317);
          v319 = (uint64_t *)((char *)a2 + v317);
          v320 = v319[1];
          *v318 = *v319;
          v318[1] = v320;
          v321 = v77[9];
          v322 = (uint64_t *)((char *)a1 + v321);
          v323 = (uint64_t *)((char *)a2 + v321);
          v324 = v323[1];
          *v322 = *v323;
          v322[1] = v324;
          v325 = v77[10];
          v326 = (uint64_t *)((char *)a1 + v325);
          v327 = (uint64_t *)((char *)a2 + v325);
          v328 = v327[1];
          *v326 = *v327;
          v326[1] = v328;
          v329 = v77[11];
          v330 = (char *)a1 + v329;
          v331 = (char *)a2 + v329;
          v332 = sub_2408E57A4();
          v333 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v333(v330, v331, v332);
          v29 = v1205;
          goto LABEL_286;
        case 6u:
          v1223 = v30;
          v1190 = v28;
          v84 = a2[1];
          *a1 = *a2;
          a1[1] = v84;
          v85 = a2[3];
          a1[2] = a2[2];
          a1[3] = v85;
          v86 = a2[5];
          a1[4] = a2[4];
          a1[5] = v86;
          v87 = a2[7];
          a1[6] = a2[6];
          a1[7] = v87;
          v1157 = type metadata accessor for TranscriptProtoClientAction(0);
          v88 = *(int *)(v1157 + 36);
          __dst = (uint64_t *)((char *)a1 + v88);
          v89 = (uint64_t *)((char *)a2 + v88);
          v90 = type metadata accessor for TranscriptProtoStatementID(0);
          v1106 = *(_QWORD *)(v90 - 8);
          v91 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1106 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v91(v89, 1, v90))
          {
            v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(__dst, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v89;
            v334 = v89[2];
            __dst[1] = v89[1];
            __dst[2] = v334;
            v335 = *(int *)(v90 + 24);
            v336 = (char *)__dst + v335;
            v337 = (char *)v89 + v335;
            v338 = sub_2408E57A4();
            v339 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 16);
            swift_bridgeObjectRetain();
            v339(v336, v337, v338);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1106 + 56))(__dst, 0, 1, v90);
          }
          v28 = v1190;
          v340 = *(int *)(v1157 + 40);
          v341 = (char *)a1 + v340;
          v342 = (char *)a2 + v340;
          v343 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v341, v342, v343);
          goto LABEL_286;
        case 7u:
          v1206 = v29;
          v1223 = v30;
          *a1 = *a2;
          Step = type metadata accessor for TranscriptProtoQueryStep(0);
          v94 = *(int *)(Step + 20);
          v95 = (uint64_t *)((char *)a1 + v94);
          v96 = (uint64_t *)((char *)a2 + v94);
          v97 = type metadata accessor for TranscriptProtoStatementID(0);
          v98 = *(_QWORD *)(v97 - 8);
          v99 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v98 + 48);
          swift_bridgeObjectRetain();
          if (v99(v96, 1, v97))
            goto LABEL_20;
          goto LABEL_82;
        case 8u:
          v1206 = v29;
          v1223 = v30;
          *a1 = *a2;
          Step = type metadata accessor for TranscriptProtoVariableStep(0);
          v101 = *(int *)(Step + 20);
          v95 = (uint64_t *)((char *)a1 + v101);
          v96 = (uint64_t *)((char *)a2 + v101);
          v97 = type metadata accessor for TranscriptProtoStatementID(0);
          v98 = *(_QWORD *)(v97 - 8);
          v102 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v98 + 48);
          swift_bridgeObjectRetain();
          if (v102(v96, 1, v97))
          {
LABEL_20:
            v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
LABEL_82:
            *(_DWORD *)v95 = *(_DWORD *)v96;
            v344 = v96[2];
            v95[1] = v96[1];
            v95[2] = v344;
            v345 = *(int *)(v97 + 24);
            v1172 = (char *)v95 + v345;
            __dstk = (char *)v96 + v345;
            v346 = v28;
            v347 = sub_2408E57A4();
            v348 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v347 - 8) + 16);
            swift_bridgeObjectRetain();
            v349 = v347;
            v28 = v346;
            v348(v1172, __dstk, v349);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
          }
          v350 = *(int *)(Step + 24);
          v351 = (char *)a1 + v350;
          v352 = (char *)a2 + v350;
          v353 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v351, v352, v353);
          v29 = v1206;
          goto LABEL_286;
        case 9u:
          v103 = a2[1];
          *a1 = *a2;
          a1[1] = v103;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0xAu:
          v104 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
          if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(a2, 1, v104))
          {
            v354 = (char *)&loc_24058CDB8 + 4 * word_240901CE6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
          v828 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
          v829 = (char *)a1 + v828;
          v830 = (char *)a2 + v828;
          v831 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v831 - 8) + 16))(v829, v830, v831);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0xBu:
          v106 = v28;
          v107 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
          v108 = *(_QWORD *)(v107 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v108 + 48))(a2, 1, v107))
          {
            v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          else
          {
            v355 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
            v356 = *(_QWORD *)(v355 - 8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v356 + 48))(a2, 1, v355))
            {
              v357 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
            }
            else
            {
              v1183 = a2[1];
              *a1 = *a2;
              a1[1] = v1183;
              v586 = a2[3];
              a1[2] = a2[2];
              a1[3] = v586;
              v1228 = v30;
              v587 = a2[5];
              a1[4] = a2[4];
              a1[5] = v587;
              v588 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
              v1112 = (char *)a2 + v588;
              __dstw = (char *)a1 + v588;
              v1222 = v29;
              v589 = sub_2408E57A4();
              v1098 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v589 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v30 = v1228;
              swift_bridgeObjectRetain();
              v590 = v589;
              v29 = v1222;
              v1098(__dstw, v1112, v590);
              (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v356 + 56))(a1, 0, 1, v355);
            }
            v591 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
            v592 = (char *)a1 + v591;
            v593 = (char *)a2 + v591;
            v594 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v594 - 8) + 16))(v592, v593, v594);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v108 + 56))(a1, 0, 1, v107);
          }
          v595 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
          v596 = (char *)a1 + v595;
          v597 = (char *)a2 + v595;
          v598 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v598 - 8) + 16))(v596, v597, v598);
          swift_storeEnumTagMultiPayload();
          v28 = v106;
          goto LABEL_288;
        case 0xCu:
          v110 = *a2;
          v111 = a2[1];
          sub_240360070(*a2, v111);
          *a1 = v110;
          a1[1] = v111;
          v112 = a2[2];
          v113 = a2[3];
          sub_240360070(v112, v113);
          a1[2] = v112;
          a1[3] = v113;
          v114 = a2[5];
          a1[4] = a2[4];
          a1[5] = v114;
          v115 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
          v116 = (char *)a1 + v115;
          v117 = (char *)a2 + v115;
          v118 = sub_2408E57A4();
          v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          v119(v116, v117, v118);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0xDu:
          v1207 = v29;
          v1223 = v30;
          v1191 = v28;
          v120 = a2[1];
          *a1 = *a2;
          a1[1] = v120;
          v121 = a2[3];
          a1[2] = a2[2];
          a1[3] = v121;
          v1158 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v122 = *(int *)(v1158 + 24);
          v123 = (char *)a1 + v122;
          v124 = (char *)a2 + v122;
          v125 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          v126 = *(_QWORD *)(v125 - 8);
          v127 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v126 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v127(v124, 1, v125))
          {
            v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
            v129 = (int *)v1158;
          }
          else
          {
            v358 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            v359 = *(_QWORD *)(v358 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v359 + 48))(v124, 1, v358))
            {
              v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
              memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
              v129 = (int *)v1158;
            }
            else
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              v129 = (int *)v1158;
              switch(EnumCaseMultiPayload)
              {
                case 6:
                  v653 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v653 - 8) + 16))(v123, v124, v653);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *v123 = *v124;
                  v654 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                + 20);
                  v655 = &v123[v654];
                  __dsty = &v124[v654];
                  v656 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v656 - 8) + 16))(v655, __dsty, v656);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 1:
                  v600 = *(_QWORD *)v124;
                  if ((~*(_QWORD *)v124 & 0xF000000000000007) != 0)
                    swift_retain();
                  *(_QWORD *)v123 = v600;
                  v601 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                  v602 = &v123[v601];
                  __dstx = &v124[v601];
                  v603 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v603 - 8) + 16))(v602, __dstx, v603);
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v123, v124, *(_QWORD *)(v359 + 64));
                  break;
              }
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v359 + 56))(v123, 0, 1, v358);
            }
            v657 = *(int *)(v125 + 20);
            v658 = &v123[v657];
            v659 = &v124[v657];
            v660 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v660 - 8) + 16))(v658, v659, v660);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
          }
          v661 = v129[7];
          v662 = (uint64_t *)((char *)a1 + v661);
          v663 = (uint64_t *)((char *)a2 + v661);
          v664 = type metadata accessor for TranscriptProtoStatementID(0);
          v665 = *(_QWORD *)(v664 - 8);
          __dstf = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v665 + 48);
          if (__dstf(v663, 1, v664))
          {
            v666 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v662, v663, *(_QWORD *)(*(_QWORD *)(v666 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v662 = *(_DWORD *)v663;
            v667 = v663[2];
            v662[1] = v663[1];
            v662[2] = v667;
            v668 = *(int *)(v664 + 24);
            v669 = (char *)v662 + v668;
            v670 = (char *)v663 + v668;
            v671 = sub_2408E57A4();
            v672 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v671 - 8) + 16);
            swift_bridgeObjectRetain();
            v672(v669, v670, v671);
            v129 = (int *)v1158;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v665 + 56))(v662, 0, 1, v664);
          }
          v673 = v129[8];
          v674 = (uint64_t *)((char *)a1 + v673);
          v675 = (uint64_t *)((char *)a2 + v673);
          v676 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          v677 = *(_QWORD *)(v676 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v677 + 48))(v675, 1, v676))
          {
            v678 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
            memcpy(v674, v675, *(_QWORD *)(*(_QWORD *)(v678 - 8) + 64));
            v29 = v1207;
            goto LABEL_251;
          }
          v1113 = v665;
          v679 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          v680 = *(_QWORD *)(v679 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v680 + 48))(v675, 1, v679))
          {
            v681 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
            memcpy(v674, v675, *(_QWORD *)(*(_QWORD *)(v681 - 8) + 64));
            goto LABEL_250;
          }
          v682 = swift_getEnumCaseMultiPayload();
          if (v682 == 1)
          {
            *v674 = *v675;
            v687 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v1101 = (char *)v675 + v687;
            v1114 = (char *)v674 + v687;
            v688 = sub_2408E57A4();
            v689 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v688 - 8) + 16);
            swift_bridgeObjectRetain();
            v689(v1114, v1101, v688);
            v129 = (int *)v1158;
          }
          else
          {
            if (v682)
            {
              memcpy(v674, v675, *(_QWORD *)(v680 + 64));
              goto LABEL_249;
            }
            v683 = v675[1];
            *v674 = *v675;
            v674[1] = v683;
            v684 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v685 = *(int *)(v684 + 20);
            v1081 = (int *)v684;
            v1087 = (_QWORD *)((char *)v674 + v685);
            v1100 = (_QWORD *)((char *)v675 + v685);
            swift_bridgeObjectRetain();
            if (__dstf(v1100, 1, v664))
            {
              v686 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1087, v1100, *(_QWORD *)(*(_QWORD *)(v686 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v1087 = *(_DWORD *)v1100;
              v814 = v1100[2];
              v1087[1] = v1100[1];
              v1087[2] = v814;
              v815 = *(int *)(v664 + 24);
              __dstbb = (char *)v1087 + v815;
              v1104 = (char *)v1100 + v815;
              v816 = sub_2408E57A4();
              v1068 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v816 - 8) + 16);
              swift_bridgeObjectRetain();
              v1068(__dstbb, v1104, v816);
              v129 = (int *)v1158;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1113 + 56))(v1087, 0, 1, v664);
            }
            v817 = v1081[6];
            v1187 = (char *)v674 + v817;
            v818 = (char *)v675 + v817;
            v819 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v819 - 8) + 16))(v1187, v818, v819);
          }
          swift_storeEnumTagMultiPayload();
LABEL_249:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v680 + 56))(v674, 0, 1, v679);
LABEL_250:
          v29 = v1207;
          v820 = *(int *)(v676 + 20);
          v821 = (char *)v674 + v820;
          v822 = (char *)v675 + v820;
          v823 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v823 - 8) + 16))(v821, v822, v823);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v677 + 56))(v674, 0, 1, v676);
LABEL_251:
          v824 = v129[9];
          v825 = (char *)a1 + v824;
          v826 = (char *)a2 + v824;
          v827 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v827 - 8) + 16))(v825, v826, v827);
LABEL_252:
          swift_storeEnumTagMultiPayload();
          v28 = v1191;
LABEL_287:
          v30 = v1223;
LABEL_288:
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
          break;
        case 0xEu:
        case 0x10u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x29u:
          v153 = sub_2408E57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(a1, a2, v153);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0xFu:
          v1208 = v29;
          v1223 = v30;
          v130 = a2[1];
          *a1 = *a2;
          a1[1] = v130;
          a1[2] = a2[2];
          StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
          v131 = *(int *)(StepResults + 24);
          v132 = (uint64_t *)((char *)a1 + v131);
          v133 = (uint64_t *)((char *)a2 + v131);
          v134 = type metadata accessor for TranscriptProtoStatementID(0);
          v135 = *(_QWORD *)(v134 - 8);
          v136 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v135 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v136(v133, 1, v134))
          {
            v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v132 = *(_DWORD *)v133;
            v361 = v133[2];
            v132[1] = v133[1];
            v132[2] = v361;
            v362 = *(int *)(v134 + 24);
            v363 = (char *)v132 + v362;
            __dstl = (char *)v133 + v362;
            v364 = v28;
            v365 = sub_2408E57A4();
            v366 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 16);
            swift_bridgeObjectRetain();
            v367 = v365;
            v28 = v364;
            v366(v363, __dstl, v367);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
          }
          v368 = *(int *)(StepResults + 28);
          v369 = (char *)a1 + v368;
          v370 = (char *)a2 + v368;
          v371 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v369, v370, v371);
          v29 = v1208;
          goto LABEL_286;
        case 0x11u:
          v1209 = v29;
          v1223 = v30;
          v138 = a2[1];
          *a1 = *a2;
          a1[1] = v138;
          a1[2] = a2[2];
          *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
          *(_WORD *)((char *)a1 + 25) = *(_WORD *)((char *)a2 + 25);
          v1160 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
          v139 = *(int *)(v1160 + 36);
          v140 = (uint64_t *)((char *)a1 + v139);
          v141 = (uint64_t *)((char *)a2 + v139);
          v142 = type metadata accessor for TranscriptProtoParameterSet(0);
          v143 = *(_QWORD *)(v142 - 8);
          v144 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v143 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v144(v141, 1, v142))
          {
            v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
          }
          else
          {
            *v140 = *v141;
            v372 = *(int *)(v142 + 20);
            v373 = (char *)v140 + v372;
            __dstm = (char *)v141 + v372;
            v374 = v28;
            v375 = sub_2408E57A4();
            v376 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 16);
            swift_bridgeObjectRetain();
            v377 = v375;
            v28 = v374;
            v376(v373, __dstm, v377);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
          }
          v378 = v1160;
          v379 = *(int *)(v1160 + 40);
          v380 = (uint64_t *)((char *)a1 + v379);
          v381 = (uint64_t *)((char *)a2 + v379);
          v382 = type metadata accessor for TranscriptProtoStatementID(0);
          v383 = *(_QWORD *)(v382 - 8);
          v29 = v1209;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v383 + 48))(v381, 1, v382))
          {
            v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v380, v381, *(_QWORD *)(*(_QWORD *)(v384 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v380 = *(_DWORD *)v381;
            v510 = v381[2];
            v380[1] = v381[1];
            v380[2] = v510;
            v511 = *(int *)(v382 + 24);
            v512 = (char *)v380 + v511;
            __dstr = (char *)v381 + v511;
            v513 = v28;
            v514 = sub_2408E57A4();
            v515 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 16);
            swift_bridgeObjectRetain();
            v516 = v512;
            v29 = v1209;
            v517 = v514;
            v28 = v513;
            v515(v516, __dstr, v517);
            v378 = v1160;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v383 + 56))(v380, 0, 1, v382);
          }
          v518 = *(int *)(v378 + 44);
          v519 = (char *)a1 + v518;
          v520 = (char *)a2 + v518;
          v521 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v521 - 8) + 16))(v519, v520, v521);
          goto LABEL_286;
        case 0x12u:
          v146 = a2[1];
          *a1 = *a2;
          a1[1] = v146;
          a1[2] = a2[2];
          v147 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
          v1161 = (char *)a1 + v147;
          v148 = (char *)a2 + v147;
          v149 = v30;
          v150 = sub_2408E57A4();
          v151 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v152 = v150;
          v30 = v149;
          v151(v1161, v148, v152);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x16u:
          v154 = a2[1];
          *a1 = *a2;
          a1[1] = v154;
          v155 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
          v156 = (char *)a1 + v155;
          v157 = (char *)a2 + v155;
          v158 = sub_2408E57A4();
          v159 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          v159(v156, v157, v158);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x17u:
          *a1 = *a2;
          v160 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
          v161 = (char *)a1 + v160;
          v162 = (char *)a2 + v160;
          v163 = sub_2408E57A4();
          v164 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16);
          swift_bridgeObjectRetain();
          v164(v161, v162, v163);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x18u:
          *a1 = *a2;
          v165 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
          v166 = (char *)a1 + v165;
          v167 = (char *)a2 + v165;
          v168 = sub_2408E57A4();
          v169 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16);
          swift_bridgeObjectRetain();
          v169(v166, v167, v168);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x19u:
          v170 = a2[1];
          *a1 = *a2;
          a1[1] = v170;
          v171 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
          v1162 = (char *)a1 + v171;
          v172 = (char *)a2 + v171;
          v173 = v30;
          v174 = sub_2408E57A4();
          v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v176 = v174;
          v30 = v173;
          v175(v1162, v172, v176);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x1Au:
          v1210 = v29;
          v1223 = v30;
          v1191 = v28;
          v177 = type metadata accessor for TranscriptProtoStatementID(0);
          v178 = *(_QWORD *)(v177 - 8);
          v179 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v178 + 48);
          if (v179(a2, 1, v177))
          {
            v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v385 = a2[2];
            a1[1] = a2[1];
            a1[2] = v385;
            v386 = *(int *)(v177 + 24);
            v387 = (char *)a1 + v386;
            v388 = (char *)a2 + v386;
            v389 = sub_2408E57A4();
            v390 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v389 - 8) + 16);
            swift_bridgeObjectRetain();
            v390(v387, v388, v389);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v178 + 56))(a1, 0, 1, v177);
          }
          v391 = type metadata accessor for TranscriptProtoActionCancellation(0);
          v392 = *(int *)(v391 + 20);
          v393 = (uint64_t *)((char *)a1 + v392);
          v394 = (uint64_t *)((char *)a2 + v392);
          if (v179((uint64_t *)((char *)a2 + v392), 1, v177))
          {
            v395 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v393, v394, *(_QWORD *)(*(_QWORD *)(v395 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v393 = *(_DWORD *)v394;
            v522 = v394[2];
            v393[1] = v394[1];
            v393[2] = v522;
            v523 = *(int *)(v177 + 24);
            v1178 = (char *)v393 + v523;
            v524 = (char *)v394 + v523;
            v525 = sub_2408E57A4();
            v526 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 16);
            swift_bridgeObjectRetain();
            v526(v1178, v524, v525);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v393, 0, 1, v177);
          }
          v527 = *(int *)(v391 + 24);
          v528 = (char *)a1 + v527;
          v529 = (char *)a2 + v527;
          v530 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v530 - 8) + 16))(v528, v529, v530);
          v29 = v1210;
          goto LABEL_252;
        case 0x1Bu:
          v181 = a2[1];
          *a1 = *a2;
          a1[1] = v181;
          v182 = a2[3];
          a1[2] = a2[2];
          a1[3] = v182;
          *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
          v183 = a2[6];
          a1[5] = a2[5];
          a1[6] = v183;
          v184 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
          v1163 = (char *)a1 + v184;
          v1211 = v29;
          v185 = (char *)a2 + v184;
          v1225 = v30;
          v186 = v28;
          v187 = sub_2408E57A4();
          v188 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v189 = v185;
          v190 = v187;
          v28 = v186;
          v29 = v1211;
          v30 = v1225;
          v188(v1163, v189, v190);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x1Cu:
          v1212 = v29;
          v1226 = v30;
          v191 = a2[1];
          *a1 = *a2;
          a1[1] = v191;
          v192 = a2[3];
          a1[2] = a2[2];
          a1[3] = v192;
          a1[4] = a2[4];
          v1164 = type metadata accessor for TranscriptProtoSystemResponse(0);
          v193 = *(int *)(v1164 + 28);
          __dsta = (char *)a1 + v193;
          v194 = (char *)a2 + v193;
          v195 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v196 = *(_QWORD *)(v195 - 8);
          v197 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1192 = v28;
          if (v197(v194, 1, v195))
          {
            v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(__dsta, v194, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
            v199 = (int *)v1164;
          }
          else
          {
            v396 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v396 - 8) + 48))(v194, 1, v396))
            {
              v604 = (char *)&loc_24058E334 + 4 * word_240901CC6[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(__dsta, v194, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
            v199 = (int *)v1164;
            v996 = *(int *)(v195 + 20);
            v997 = &__dsta[v996];
            v998 = &v194[v996];
            v999 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v999 - 8) + 16))(v997, v998, v999);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v196 + 56))(__dsta, 0, 1, v195);
          }
          v1000 = v199[8];
          v1001 = (uint64_t *)((char *)a1 + v1000);
          v1002 = (uint64_t *)((char *)a2 + v1000);
          v1003 = type metadata accessor for TranscriptProtoResponseOutput(0);
          v1004 = *(_QWORD *)(v1003 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1004 + 48))(v1002, 1, v1003))
          {
            v1005 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
            memcpy(v1001, v1002, *(_QWORD *)(*(_QWORD *)(v1005 - 8) + 64));
          }
          else
          {
            v1121 = v1004;
            __dstg = (int *)v1003;
            *v1001 = *v1002;
            *((_BYTE *)v1001 + 8) = *((_BYTE *)v1002 + 8);
            v1001[2] = v1002[2];
            v1006 = *(int *)(v1003 + 28);
            v1007 = (char *)v1001 + v1006;
            v1008 = (char *)v1002 + v1006;
            v1009 = type metadata accessor for TranscriptProtoDialogType(0);
            v1094 = *(_QWORD **)(v1009 - 8);
            v1010 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1094[6];
            v1011 = v1009;
            swift_bridgeObjectRetain();
            v1012 = v1008;
            swift_bridgeObjectRetain();
            v1105 = (unsigned int (*)(char *, uint64_t, uint64_t))v1010;
            if (v1010(v1008, 1, v1011))
            {
              v1013 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v1007, v1008, *(_QWORD *)(*(_QWORD *)(v1013 - 8) + 64));
              v29 = v1212;
              v1014 = __dstg;
            }
            else
            {
              v1015 = type metadata accessor for TranscriptProtoDialogFormat(0);
              v1077 = v1001;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1015 - 8) + 48))(v1012, 1, v1015))
              {
                v1019 = (char *)&loc_240593634 + 4 * byte_240901CDC[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1016 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              v1017 = v1007;
              memcpy(v1007, v1012, *(_QWORD *)(*(_QWORD *)(v1016 - 8) + 64));
              v1018 = v1012;
              v29 = v1212;
              v1014 = __dstg;
              v1020 = *(int *)(v1011 + 20);
              v1021 = &v1017[v1020];
              v1022 = &v1018[v1020];
              v1023 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1023 - 8) + 16))(v1021, v1022, v1023);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1094[7])(v1017, 0, 1, v1011);
              v1001 = v1077;
            }
            v1024 = v1014[8];
            v1025 = (char *)v1001 + v1024;
            v1026 = (char *)v1002 + v1024;
            if (v1105((char *)v1002 + v1024, 1, v1011))
            {
              v1027 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v1025, v1026, *(_QWORD *)(*(_QWORD *)(v1027 - 8) + 64));
            }
            else
            {
              v1028 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1028 - 8) + 48))(v1026, 1, v1028))
              {
                v1030 = (char *)&loc_240593830 + 4 * byte_240901CE1[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1029 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v1025, v1026, *(_QWORD *)(*(_QWORD *)(v1029 - 8) + 64));
              v1031 = *(int *)(v1011 + 20);
              v1032 = &v1025[v1031];
              v1033 = &v1026[v1031];
              v1034 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1034 - 8) + 16))(v1032, v1033, v1034);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1094[7])(v1025, 0, 1, v1011);
              v1014 = __dstg;
            }
            v1035 = v1014[9];
            v1036 = (char *)v1001 + v1035;
            v1037 = (char *)v1002 + v1035;
            v1038 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1038 - 8) + 16))(v1036, v1037, v1038);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1121 + 56))(v1001, 0, 1, v1014);
          }
          v1039 = v199[9];
          v1040 = (uint64_t *)((char *)a1 + v1039);
          v1041 = (uint64_t *)((char *)a2 + v1039);
          v1042 = type metadata accessor for TranscriptProtoStatementID(0);
          v1043 = *(_QWORD *)(v1042 - 8);
          v30 = v1226;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1043 + 48))(v1041, 1, v1042))
          {
            v1044 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v1040, v1041, *(_QWORD *)(*(_QWORD *)(v1044 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v1040 = *(_DWORD *)v1041;
            v1045 = v1041[2];
            v1040[1] = v1041[1];
            v1040[2] = v1045;
            v1046 = *(int *)(v1042 + 24);
            v1047 = (char *)v1040 + v1046;
            v1048 = (char *)v1041 + v1046;
            v1049 = sub_2408E57A4();
            v1050 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1049 - 8) + 16);
            swift_bridgeObjectRetain();
            v1051 = v1047;
            v1052 = v1049;
            v29 = v1212;
            v30 = v1226;
            v1050(v1051, v1048, v1052);
            v199 = (int *)v1164;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1043 + 56))(v1040, 0, 1, v1042);
          }
          v28 = v1192;
          v1053 = v199[10];
          v1054 = (uint64_t *)((char *)a1 + v1053);
          v1055 = (uint64_t *)((char *)a2 + v1053);
          v1056 = v1055[1];
          *v1054 = *v1055;
          v1054[1] = v1056;
          v1057 = v199[11];
          v1058 = (char *)a1 + v1057;
          v1059 = (char *)a2 + v1057;
          v1060 = sub_2408E57A4();
          v1061 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1060 - 8) + 16);
          swift_bridgeObjectRetain();
          v1061(v1058, v1059, v1060);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x1Du:
          v1193 = v28;
          v200 = a2[1];
          *a1 = *a2;
          a1[1] = v200;
          v201 = a2[3];
          a1[2] = a2[2];
          a1[3] = v201;
          v1165 = type metadata accessor for TranscriptProtoStatementResult(0);
          v202 = *(int *)(v1165 + 24);
          __dstb = (char *)a1 + v202;
          v203 = (char *)a2 + v202;
          v204 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
          v205 = *(_QWORD **)(v204 - 8);
          v206 = (unsigned int (*)(char *, uint64_t, uint64_t))v205[6];
          swift_bridgeObjectRetain();
          v207 = v203;
          swift_bridgeObjectRetain();
          v1213 = v29;
          v1227 = v30;
          if (v206(v203, 1, v204))
          {
            v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
            memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
          }
          else
          {
            v1096 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v205;
            v398 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v399 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v398 - 8);
            v1108 = v204;
            if (v399[6](v203, 1, v398))
            {
              v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              v401 = __dstb;
              memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v400 - 8) + 64));
            }
            else
            {
              v1079 = v399;
              v605 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              v401 = __dstb;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v605 - 8) + 48))(v203, 1, v605))
              {
                v651 = (char *)&loc_24058E93C + 4 * word_240901CB0[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v606 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v606 - 8) + 64));
              v836 = *(int *)(v398 + 20);
              v837 = &__dstb[v836];
              v838 = &v203[v836];
              v839 = sub_2408E57A4();
              v840 = v838;
              v207 = v203;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v839 - 8) + 16))(v837, v840, v839);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1079[7])(__dstb, 0, 1, v398);
            }
            v841 = *(int *)(v204 + 20);
            v842 = &v401[v841];
            v843 = &v207[v841];
            v844 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
            v845 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v844 - 1);
            if (((unsigned int (**)(char *, uint64_t, int *))v845)[6](v843, 1, v844))
            {
              v846 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
              memcpy(v842, v843, *(_QWORD *)(*(_QWORD *)(v846 - 8) + 64));
            }
            else
            {
              v1085 = (void (**)(char *, _QWORD, uint64_t, int *))v845;
              v1093 = v207;
              *(_QWORD *)v842 = *(_QWORD *)v843;
              v847 = v844[5];
              v848 = &v842[v847];
              v849 = &v843[v847];
              v850 = type metadata accessor for TranscriptProtoResponseDialog(0);
              v1075 = *(_QWORD **)(v850 - 8);
              v851 = (unsigned int (*)(char *, uint64_t, uint64_t))v1075[6];
              swift_bridgeObjectRetain();
              if (v851(v849, 1, v850))
              {
                v852 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                memcpy(v848, v849, *(_QWORD *)(*(_QWORD *)(v852 - 8) + 64));
              }
              else
              {
                v853 = *((_QWORD *)v849 + 1);
                *(_QWORD *)v848 = *(_QWORD *)v849;
                *((_QWORD *)v848 + 1) = v853;
                v854 = *((_QWORD *)v849 + 3);
                *((_QWORD *)v848 + 2) = *((_QWORD *)v849 + 2);
                *((_QWORD *)v848 + 3) = v854;
                v855 = *((_QWORD *)v849 + 5);
                *((_QWORD *)v848 + 4) = *((_QWORD *)v849 + 4);
                *((_QWORD *)v848 + 5) = v855;
                v856 = *((_QWORD *)v849 + 7);
                *((_QWORD *)v848 + 6) = *((_QWORD *)v849 + 6);
                *((_QWORD *)v848 + 7) = v856;
                v857 = *(int *)(v850 + 32);
                __srcb = &v849[v857];
                v1069 = &v848[v857];
                v858 = sub_2408E57A4();
                v859 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v858 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v859(v1069, __srcb, v858);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1075[7])(v848, 0, 1, v850);
              }
              v860 = v844[6];
              v861 = &v842[v860];
              v862 = &v843[v860];
              v863 = type metadata accessor for TranscriptProtoResponseVisual(0);
              v864 = *(_QWORD *)(v863 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v864 + 48))(v862, 1, v863))
              {
                v865 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                memcpy(v861, v862, *(_QWORD *)(*(_QWORD *)(v865 - 8) + 64));
              }
              else
              {
                v866 = *((_QWORD *)v862 + 1);
                *(_QWORD *)v861 = *(_QWORD *)v862;
                *((_QWORD *)v861 + 1) = v866;
                v867 = *(int *)(v863 + 24);
                v1070 = &v862[v867];
                v1076 = &v861[v867];
                v868 = sub_2408E57A4();
                v1063 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v868 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1063(v1076, v1070, v868);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v864 + 56))(v861, 0, 1, v863);
              }
              v869 = v844[7];
              v870 = &v842[v869];
              v871 = &v843[v869];
              v872 = *((_QWORD *)v871 + 1);
              *(_QWORD *)v870 = *(_QWORD *)v871;
              *((_QWORD *)v870 + 1) = v872;
              v873 = v844[8];
              v874 = &v842[v873];
              v875 = &v843[v873];
              v876 = *((_QWORD *)v875 + 1);
              *(_QWORD *)v874 = *(_QWORD *)v875;
              *((_QWORD *)v874 + 1) = v876;
              v842[v844[9]] = v843[v844[9]];
              v842[v844[10]] = v843[v844[10]];
              v877 = v844[11];
              v878 = &v842[v877];
              v879 = &v843[v877];
              v880 = sub_2408E57A4();
              v881 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v880 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v881(v878, v879, v880);
              v1085[7](v842, 0, 1, v844);
              v30 = v1227;
              v401 = __dstb;
              v207 = v1093;
            }
            v882 = *(int *)(v1108 + 24);
            v883 = &v401[v882];
            v884 = &v207[v882];
            v885 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v885 - 8) + 16))(v883, v884, v885);
            v1096[7](v401, 0, 1, v1108);
            v29 = v1213;
          }
          v886 = (int *)v1165;
          v887 = *(int *)(v1165 + 28);
          v888 = (uint64_t *)((char *)a1 + v887);
          v889 = (uint64_t *)((char *)a2 + v887);
          v890 = type metadata accessor for TranscriptProtoStatementID(0);
          v891 = *(_QWORD *)(v890 - 8);
          v892 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v891 + 48);
          if (v892(v889, 1, v890))
          {
            v893 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v888, v889, *(_QWORD *)(*(_QWORD *)(v893 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v888 = *(_DWORD *)v889;
            v894 = v889[2];
            v888[1] = v889[1];
            v888[2] = v894;
            v895 = *(int *)(v890 + 24);
            v896 = (char *)v888 + v895;
            __dstbc = (char *)v889 + v895;
            v897 = sub_2408E57A4();
            v898 = v891;
            v899 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v897 - 8) + 16);
            v886 = (int *)v1165;
            swift_bridgeObjectRetain();
            v900 = v896;
            v901 = v897;
            v29 = v1213;
            v30 = v1227;
            v899(v900, __dstbc, v901);
            v891 = v898;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v898 + 56))(v888, 0, 1, v890);
          }
          v902 = v886[8];
          v903 = (uint64_t *)((char *)a1 + v902);
          v904 = (uint64_t *)((char *)a2 + v902);
          if (v892((uint64_t *)((char *)a2 + v902), 1, v890))
          {
            v905 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v903, v904, *(_QWORD *)(*(_QWORD *)(v905 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v903 = *(_DWORD *)v904;
            v906 = v904[2];
            v903[1] = v904[1];
            v903[2] = v906;
            v907 = *(int *)(v890 + 24);
            v908 = (char *)v903 + v907;
            __dstbd = (char *)v904 + v907;
            v909 = sub_2408E57A4();
            v910 = v891;
            v911 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v909 - 8) + 16);
            v886 = (int *)v1165;
            swift_bridgeObjectRetain();
            v912 = v908;
            v913 = v909;
            v29 = v1213;
            v30 = v1227;
            v911(v912, __dstbd, v913);
            v891 = v910;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v910 + 56))(v903, 0, 1, v890);
          }
          v914 = v886[9];
          v915 = (uint64_t *)((char *)a1 + v914);
          v916 = (uint64_t *)((char *)a2 + v914);
          if (v892((uint64_t *)((char *)a2 + v914), 1, v890))
          {
            v917 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v915, v916, *(_QWORD *)(*(_QWORD *)(v917 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v915 = *(_DWORD *)v916;
            v918 = v916[2];
            v915[1] = v916[1];
            v915[2] = v918;
            v919 = *(int *)(v890 + 24);
            v920 = (char *)v915 + v919;
            __dstbe = (char *)v916 + v919;
            v921 = v29;
            v922 = sub_2408E57A4();
            v923 = v891;
            v924 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v922 - 8) + 16);
            v886 = (int *)v1165;
            swift_bridgeObjectRetain();
            v925 = v920;
            v30 = v1227;
            v926 = v922;
            v29 = v921;
            v924(v925, __dstbe, v926);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v923 + 56))(v915, 0, 1, v890);
          }
          v28 = v1193;
          v927 = v886[10];
          v928 = (char *)a1 + v927;
          v929 = (char *)a2 + v927;
          v930 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v930 - 8) + 16))(v928, v929, v930);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x1Eu:
          v1214 = v29;
          v1223 = v30;
          v1194 = v28;
          v209 = a2[1];
          *a1 = *a2;
          a1[1] = v209;
          v210 = a2[3];
          a1[2] = a2[2];
          a1[3] = v210;
          v211 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
          v212 = *(int *)(v211 + 24);
          v213 = (uint64_t *)((char *)a1 + v212);
          v214 = (uint64_t *)((char *)a2 + v212);
          v215 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v216 = *(_QWORD *)(v215 - 8);
          v217 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v216 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v217(v214, 1, v215))
            goto LABEL_49;
          goto LABEL_102;
        case 0x1Fu:
          v1214 = v29;
          v1223 = v30;
          v1194 = v28;
          v219 = a2[1];
          *a1 = *a2;
          a1[1] = v219;
          a1[2] = a2[2];
          v211 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
          v220 = *(int *)(v211 + 24);
          v213 = (uint64_t *)((char *)a1 + v220);
          v214 = (uint64_t *)((char *)a2 + v220);
          v215 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v216 = *(_QWORD *)(v215 - 8);
          v221 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v216 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v221(v214, 1, v215))
          {
LABEL_49:
            v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
          }
          else
          {
LABEL_102:
            v402 = v214[1];
            *v213 = *v214;
            v213[1] = v402;
            v213[2] = v214[2];
            v403 = *(int *)(v215 + 24);
            v1173 = (char *)v213 + v403;
            __dstn = (char *)v214 + v403;
            v404 = sub_2408E57A4();
            v405 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v404 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v405(v1173, __dstn, v404);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
          }
          v28 = v1194;
          v406 = *(int *)(v211 + 28);
          v407 = (char *)a1 + v406;
          v408 = (char *)a2 + v406;
          v409 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v409 - 8) + 16))(v407, v408, v409);
          v29 = v1214;
          goto LABEL_286;
        case 0x20u:
          v1223 = v30;
          v222 = type metadata accessor for TranscriptProtoRequestContent(0);
          v223 = *(_QWORD *)(v222 - 8);
          v1195 = v28;
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v223 + 48))(a2, 1, v222))
          {
            v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
          }
          else
          {
            v410 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v410 - 8) + 48))(a2, 1, v410))
            {
              v607 = (char *)&loc_24058E420 + 4 * word_240901CA8[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v411 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v411 - 8) + 64));
            v967 = *(int *)(v222 + 20);
            v968 = (char *)a1 + v967;
            v969 = (char *)a2 + v967;
            v970 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v970 - 8) + 16))(v968, v969, v970);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v223 + 56))(a1, 0, 1, v222);
          }
          v971 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
          v972 = v971[5];
          v973 = (uint64_t *)((char *)a1 + v972);
          v974 = (uint64_t *)((char *)a2 + v972);
          v975 = v974[1];
          *v973 = *v974;
          v973[1] = v975;
          v976 = v971[6];
          v977 = (uint64_t *)((char *)a1 + v976);
          v978 = (uint64_t *)((char *)a2 + v976);
          v979 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v980 = *(_QWORD *)(v979 - 8);
          v981 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v980 + 48);
          swift_bridgeObjectRetain();
          if (v981(v978, 1, v979))
          {
            v982 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v977, v978, *(_QWORD *)(*(_QWORD *)(v982 - 8) + 64));
          }
          else
          {
            v983 = v978[1];
            *v977 = *v978;
            v977[1] = v983;
            v977[2] = v978[2];
            v984 = *(int *)(v979 + 24);
            v1188 = (char *)v977 + v984;
            __dstbg = (char *)v978 + v984;
            v985 = sub_2408E57A4();
            v986 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v985 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v986(v1188, __dstbg, v985);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v980 + 56))(v977, 0, 1, v979);
          }
          v28 = v1195;
          v987 = v971[7];
          v988 = (char *)a1 + v987;
          v989 = (char *)a2 + v987;
          v990 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v990 - 8) + 16))(v988, v989, v990);
          goto LABEL_286;
        case 0x21u:
          v1223 = v30;
          *a1 = *a2;
          v1166 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
          v225 = *(int *)(v1166 + 20);
          v226 = (uint64_t *)((char *)a1 + v225);
          v227 = (uint64_t *)((char *)a2 + v225);
          v228 = type metadata accessor for TranscriptProtoStatementID(0);
          v229 = *(_QWORD *)(v228 - 8);
          v230 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v229 + 48);
          swift_bridgeObjectRetain();
          v1215 = v29;
          if (v230(v227, 1, v228))
          {
            v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v226 = *(_DWORD *)v227;
            v412 = v227[2];
            v226[1] = v227[1];
            v226[2] = v412;
            v413 = *(int *)(v228 + 24);
            v414 = (char *)v226 + v413;
            __dsto = (char *)v227 + v413;
            v415 = v28;
            v416 = sub_2408E57A4();
            v417 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v416 - 8) + 16);
            swift_bridgeObjectRetain();
            v418 = v416;
            v28 = v415;
            v417(v414, __dsto, v418);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
          }
          v419 = (int *)v1166;
          v420 = *(int *)(v1166 + 24);
          v421 = (char *)a1 + v420;
          v422 = (char *)a2 + v420;
          v423 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v424 = *(_QWORD *)(v423 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v424 + 48))(v422, 1, v423))
          {
            v425 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v421, v422, *(_QWORD *)(*(_QWORD *)(v425 - 8) + 64));
          }
          else
          {
            v531 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v531 - 8) + 48))(v422, 1, v531))
            {
              v637 = (char *)&loc_24058E694 + 4 * word_240901C92[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v532 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v421, v422, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
            v832 = *(int *)(v423 + 20);
            v833 = &v421[v832];
            v834 = &v422[v832];
            v835 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v835 - 8) + 16))(v833, v834, v835);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v424 + 56))(v421, 0, 1, v423);
          }
          goto LABEL_244;
        case 0x22u:
          v232 = a2[1];
          *a1 = *a2;
          a1[1] = v232;
          a1[2] = a2[2];
          v233 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
          v1167 = (char *)a1 + v233;
          v234 = (char *)a2 + v233;
          v235 = v30;
          v236 = sub_2408E57A4();
          v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v238 = v236;
          v30 = v235;
          v237(v1167, v234, v238);
          swift_storeEnumTagMultiPayload();
          goto LABEL_288;
        case 0x23u:
          v1215 = v29;
          v239 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v240 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v239 - 8);
          v1223 = v30;
          if (v240[6](a2, 1, v239))
          {
            v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
          }
          else
          {
            __dstd = (void (**)(uint64_t *, _QWORD, uint64_t, int *))v240;
            v1197 = v28;
            v426 = a2[1];
            *a1 = *a2;
            a1[1] = v426;
            v427 = a2[3];
            a1[2] = a2[2];
            a1[3] = v427;
            *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
            v428 = a2[6];
            a1[5] = a2[5];
            a1[6] = v428;
            v429 = a2[8];
            a1[7] = a2[7];
            a1[8] = v429;
            a1[9] = a2[9];
            *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
            v430 = a2[12];
            a1[11] = a2[11];
            a1[12] = v430;
            v431 = a2[14];
            a1[13] = a2[13];
            a1[14] = v431;
            v1174 = (int *)v239;
            v432 = *(int *)(v239 + 68);
            __src = (uint64_t *)((char *)a1 + v432);
            v433 = (uint64_t *)((char *)a2 + v432);
            v434 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v1062 = *(_QWORD *)(v434 - 8);
            v1078 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v1062 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1078(v433, 1, v434))
            {
              v435 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(__src, v433, *(_QWORD *)(*(_QWORD *)(v435 - 8) + 64));
            }
            else
            {
              v608 = *v433;
              if ((~*v433 & 0xF000000000000007) != 0)
                swift_retain();
              *__src = v608;
              v609 = *(int *)(v434 + 20);
              v610 = (char *)__src + v609;
              v611 = (char *)v433 + v609;
              v612 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v612 - 8) + 16))(v610, v611, v612);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1062 + 56))(__src, 0, 1, v434);
            }
            v613 = v1174[18];
            v614 = (uint64_t *)((char *)a1 + v613);
            v615 = (uint64_t *)((char *)a2 + v613);
            v616 = v615[1];
            *v614 = *v615;
            v614[1] = v616;
            v617 = v1174[19];
            v618 = (uint64_t *)((char *)a1 + v617);
            v619 = (uint64_t *)((char *)a2 + v617);
            v620 = type metadata accessor for ToolKitProtoAppDefinition(0);
            v621 = *(_QWORD **)(v620 - 8);
            v622 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v621[6];
            swift_bridgeObjectRetain();
            if (v622(v619, 1, v620))
            {
              v623 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
              memcpy(v618, v619, *(_QWORD *)(*(_QWORD *)(v623 - 8) + 64));
              v624 = v1174;
            }
            else
            {
              v1086 = v621;
              v639 = v619[1];
              *v618 = *v619;
              v618[1] = v639;
              v640 = v619[3];
              v618[2] = v619[2];
              v618[3] = v640;
              v641 = v619[5];
              v618[4] = v619[4];
              v618[5] = v641;
              v642 = v619[7];
              v618[6] = v619[6];
              v618[7] = v642;
              v643 = v619[9];
              v618[8] = v619[8];
              v618[9] = v643;
              *((_BYTE *)v618 + 80) = *((_BYTE *)v619 + 80);
              v644 = *(int *)(v620 + 40);
              v1080 = (_QWORD *)((char *)v618 + v644);
              v645 = (_QWORD *)((char *)v619 + v644);
              v646 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
              v1071 = *(_QWORD **)(v646 - 8);
              v1099 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1071[6];
              v647 = v646;
              swift_bridgeObjectRetain();
              v648 = v645;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v1099(v645, 1, v647))
              {
                v649 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                memcpy(v1080, v645, *(_QWORD *)(*(_QWORD *)(v649 - 8) + 64));
                v624 = v1174;
                v650 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1086;
              }
              else
              {
                v652 = v645[1];
                v624 = v1174;
                if (v652 == 1)
                {
                  *(_OWORD *)v1080 = *v648;
                }
                else
                {
                  *v1080 = *(_QWORD *)v648;
                  v1080[1] = v652;
                  swift_bridgeObjectRetain();
                }
                v650 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1086;
                v690 = *(int *)(v647 + 20);
                v1115 = v647;
                v691 = (char *)v1080 + v690;
                v692 = (char *)v648 + v690;
                v693 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v693 - 8) + 16))(v691, v692, v693);
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1071[7])(v1080, 0, 1, v1115);
              }
              v694 = *(int *)(v620 + 44);
              v695 = (char *)v618 + v694;
              v696 = (char *)v619 + v694;
              v697 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v697 - 8) + 16))(v695, v696, v697);
              v650[7](v618, 0, 1, v620);
            }
            v698 = v624[20];
            v699 = (uint64_t *)((char *)a1 + v698);
            v700 = (uint64_t *)((char *)a2 + v698);
            v701 = v700[1];
            *v699 = *v700;
            v699[1] = v701;
            v702 = v624[21];
            v703 = (uint64_t *)((char *)a1 + v702);
            v704 = (uint64_t *)((char *)a2 + v702);
            v705 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v706 = *(_QWORD *)(v705 - 8);
            v707 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v706 + 48);
            swift_bridgeObjectRetain();
            if (v707(v704, 1, v705))
            {
              v708 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
              memcpy(v703, v704, *(_QWORD *)(*(_QWORD *)(v708 - 8) + 64));
            }
            else
            {
              v709 = v704[1];
              *v703 = *v704;
              v703[1] = v709;
              v710 = v704[3];
              v703[2] = v704[2];
              v703[3] = v710;
              v711 = *(int *)(v705 + 24);
              v1116 = (char *)v703 + v711;
              v712 = (char *)v704 + v711;
              v713 = sub_2408E57A4();
              v714 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v713 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v714(v1116, v712, v713);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v706 + 56))(v703, 0, 1, v705);
            }
            v715 = v1174;
            v716 = v1174[22];
            v717 = (uint64_t *)((char *)a1 + v716);
            v718 = (uint64_t *)((char *)a2 + v716);
            v719 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v720 = *(_QWORD *)(v719 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v720 + 48))(v718, 1, v719))
            {
              v721 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v717, v718, *(_QWORD *)(*(_QWORD *)(v721 - 8) + 64));
            }
            else
            {
              v722 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
              v723 = *(_QWORD *)(v722 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v723 + 48))(v718, 1, v722))
              {
                v724 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v717, v718, *(_QWORD *)(*(_QWORD *)(v724 - 8) + 64));
              }
              else
              {
                v725 = swift_getEnumCaseMultiPayload();
                v726 = v718[1];
                *v717 = *v718;
                v717[1] = v726;
                if (v725 == 1)
                {
                  *((_BYTE *)v717 + 16) = *((_BYTE *)v718 + 16);
                  v727 = v718[4];
                  v717[3] = v718[3];
                  v717[4] = v727;
                  v728 = v718[6];
                  v717[5] = v718[5];
                  v717[6] = v728;
                  v729 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                + 32);
                  v1082 = (char *)v718 + v729;
                  v1088 = (char *)v717 + v729;
                  v730 = sub_2408E57A4();
                  v1072 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v730 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1072(v1088, v1082, v730);
                  v715 = v1174;
                }
                else
                {
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v723 + 56))(v717, 0, 1, v722);
              }
              v731 = *(int *)(v719 + 20);
              v732 = (char *)v717 + v731;
              v733 = (char *)v718 + v731;
              v734 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v734 - 8) + 16))(v732, v733, v734);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v720 + 56))(v717, 0, 1, v719);
            }
            v735 = v715[23];
            v736 = (uint64_t *)((char *)a1 + v735);
            v737 = (uint64_t *)((char *)a2 + v735);
            v738 = type metadata accessor for ToolKitProtoContainerDefinition(0);
            v739 = *(_QWORD *)(v738 - 8);
            v740 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v739 + 48);
            v28 = v1197;
            if (v740(v737, 1, v738))
            {
              v741 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v736, v737, *(_QWORD *)(*(_QWORD *)(v741 - 8) + 64));
            }
            else
            {
              v1102 = v740;
              v1117 = v739;
              v742 = v737[1];
              *v736 = *v737;
              v736[1] = v742;
              v743 = v737[3];
              v736[2] = v737[2];
              v736[3] = v743;
              *((_WORD *)v736 + 16) = *((_WORD *)v737 + 16);
              v744 = v737[6];
              v736[5] = v737[5];
              v736[6] = v744;
              v745 = v737[8];
              v736[7] = v737[7];
              v736[8] = v745;
              v746 = *(int *)(v738 + 40);
              v1073 = (_QWORD *)((char *)v736 + v746);
              v1083 = (void *)v738;
              v747 = (_QWORD *)((char *)v737 + v746);
              v748 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1067 = *(_QWORD *)(v748 - 8);
              v1089 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1067 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v1089(v747, 1, v748))
              {
                v749 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1073, v747, *(_QWORD *)(*(_QWORD *)(v749 - 8) + 64));
                v715 = v1174;
                v28 = v1197;
                v739 = v1117;
                v738 = (uint64_t)v1083;
              }
              else
              {
                v750 = v747[1];
                __srca = (char *)v747;
                if (v750 == 1)
                {
                  *(_OWORD *)v1073 = *(_OWORD *)v747;
                }
                else
                {
                  *v1073 = *v747;
                  v1073[1] = v750;
                  swift_bridgeObjectRetain();
                }
                v715 = v1174;
                v28 = v1197;
                v739 = v1117;
                v738 = (uint64_t)v1083;
                v751 = *(int *)(v748 + 20);
                v1090 = (char *)v1073 + v751;
                v1118 = v748;
                v752 = &__srca[v751];
                v753 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v753 - 8) + 16))(v1090, v752, v753);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1067 + 56))(v1073, 0, 1, v1118);
              }
              v754 = *(int *)(v738 + 44);
              v755 = (char *)v736 + v754;
              v756 = (char *)v737 + v754;
              v757 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v757 - 8) + 16))(v755, v756, v757);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v739 + 56))(v736, 0, 1, v738);
              v740 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1102;
            }
            v758 = v715[24];
            v759 = (uint64_t *)((char *)a1 + v758);
            v760 = (uint64_t *)((char *)a2 + v758);
            if (v740((char *)a2 + v758, 1, v738))
            {
              v761 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v759, v760, *(_QWORD *)(*(_QWORD *)(v761 - 8) + 64));
            }
            else
            {
              v1119 = v739;
              v762 = v760[1];
              *v759 = *v760;
              v759[1] = v762;
              v763 = v760[3];
              v759[2] = v760[2];
              v759[3] = v763;
              *((_WORD *)v759 + 16) = *((_WORD *)v760 + 16);
              v764 = v760[6];
              v759[5] = v760[5];
              v759[6] = v764;
              v765 = v760[8];
              v759[7] = v760[7];
              v759[8] = v765;
              v766 = *(int *)(v738 + 40);
              v1084 = (_QWORD *)((char *)v759 + v766);
              v1103 = (_QWORD *)((char *)v760 + v766);
              v767 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1074 = *(_QWORD **)(v767 - 8);
              v1091 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1074[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v1091(v1103, 1, v767))
              {
                v768 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1084, v1103, *(_QWORD *)(*(_QWORD *)(v768 - 8) + 64));
                v715 = v1174;
                v28 = v1197;
                v769 = v1119;
              }
              else
              {
                v770 = v1103[1];
                v769 = v1119;
                if (v770 == 1)
                {
                  *(_OWORD *)v1084 = *(_OWORD *)v1103;
                }
                else
                {
                  *v1084 = *v1103;
                  v1084[1] = v770;
                  swift_bridgeObjectRetain();
                }
                v715 = v1174;
                v28 = v1197;
                v771 = *(int *)(v767 + 20);
                v1092 = (char *)v1084 + v771;
                v1184 = v767;
                v772 = (char *)v1103 + v771;
                v773 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v773 - 8) + 16))(v1092, v772, v773);
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1074[7])(v1084, 0, 1, v1184);
              }
              v774 = *(int *)(v738 + 44);
              v775 = (char *)v759 + v774;
              v776 = (char *)v760 + v774;
              v777 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v777 - 8) + 16))(v775, v776, v777);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v769 + 56))(v759, 0, 1, v738);
            }
            v778 = v715[25];
            v779 = (char *)a1 + v778;
            v780 = (char *)a2 + v778;
            v781 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v781 - 8) + 16))(v779, v780, v781);
            __dstd[7](a1, 0, 1, v715);
          }
          v419 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
          v782 = v419[5];
          v783 = (uint64_t *)((char *)a1 + v782);
          v784 = (uint64_t *)((char *)a2 + v782);
          v476 = type metadata accessor for TranscriptProtoStatementID(0);
          v477 = *(_QWORD *)(v476 - 8);
          v785 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v477 + 48);
          if (v785(v784, 1, v476))
          {
            v786 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v783, v784, *(_QWORD *)(*(_QWORD *)(v786 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v783 = *(_DWORD *)v784;
            v787 = v784[2];
            v783[1] = v784[1];
            v783[2] = v787;
            v788 = *(int *)(v476 + 24);
            v1185 = (char *)v783 + v788;
            __dstz = (char *)v784 + v788;
            v1201 = v28;
            v789 = sub_2408E57A4();
            v790 = v477;
            v791 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v789 - 8) + 16);
            swift_bridgeObjectRetain();
            v792 = v789;
            v28 = v1201;
            v791(v1185, __dstz, v792);
            v477 = v790;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v790 + 56))(v783, 0, 1, v476);
          }
          v793 = v419[6];
          v575 = (uint64_t *)((char *)a1 + v793);
          v576 = (uint64_t *)((char *)a2 + v793);
          if (v785((uint64_t *)((char *)a2 + v793), 1, v476))
            goto LABEL_242;
          goto LABEL_243;
        case 0x24u:
          v1216 = v29;
          v1223 = v30;
          v242 = a2[1];
          *a1 = *a2;
          a1[1] = v242;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          v243 = a2[4];
          a1[3] = a2[3];
          a1[4] = v243;
          v244 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
          v245 = v244[7];
          v246 = (uint64_t *)((char *)a1 + v245);
          v247 = (uint64_t *)((char *)a2 + v245);
          v248 = type metadata accessor for TranscriptProtoStatementID(0);
          v249 = *(_QWORD *)(v248 - 8);
          v250 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v249 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v250(v247, 1, v248))
          {
            v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v246 = *(_DWORD *)v247;
            v1175 = v250;
            v436 = v247[2];
            v246[1] = v247[1];
            v246[2] = v436;
            v437 = *(int *)(v248 + 24);
            v1109 = (char *)v247 + v437;
            __dstp = (char *)v246 + v437;
            v438 = v28;
            v439 = sub_2408E57A4();
            v440 = v244;
            v441 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v439 - 8) + 16);
            v250 = v1175;
            swift_bridgeObjectRetain();
            v442 = v439;
            v28 = v438;
            v441(__dstp, v1109, v442);
            v244 = v440;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v248);
          }
          v443 = v244[8];
          v444 = (uint64_t *)((char *)a1 + v443);
          v445 = (uint64_t *)((char *)a2 + v443);
          v29 = v1216;
          if (v250((char *)a2 + v443, 1, v248))
          {
            v446 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v444, v445, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v444 = *(_DWORD *)v445;
            v533 = v445[2];
            v1179 = v249;
            v444[1] = v445[1];
            v444[2] = v533;
            v534 = *(int *)(v248 + 24);
            v535 = (char *)v444 + v534;
            __dsts = (char *)v445 + v534;
            v536 = v28;
            v537 = sub_2408E57A4();
            v538 = v244;
            v539 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v537 - 8) + 16);
            swift_bridgeObjectRetain();
            v540 = v535;
            v29 = v1216;
            v541 = v537;
            v28 = v536;
            v539(v540, __dsts, v541);
            v244 = v538;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1179 + 56))(v444, 0, 1, v248);
          }
          v542 = v244[9];
          v543 = (char *)a1 + v542;
          v544 = (char *)a2 + v542;
          v545 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v545 - 8) + 16))(v543, v544, v545);
          goto LABEL_286;
        case 0x25u:
          v1217 = v29;
          v1223 = v30;
          v252 = a2[1];
          *a1 = *a2;
          a1[1] = v252;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          v253 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
          v254 = v253[6];
          v255 = (uint64_t *)((char *)a1 + v254);
          v256 = (uint64_t *)((char *)a2 + v254);
          v257 = type metadata accessor for TranscriptProtoStatementID(0);
          v258 = *(_QWORD *)(v257 - 8);
          v259 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v258 + 48);
          swift_bridgeObjectRetain();
          if (v259(v256, 1, v257))
          {
            v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v255 = *(_DWORD *)v256;
            v447 = v256[2];
            v255[1] = v256[1];
            v255[2] = v447;
            v448 = *(int *)(v257 + 24);
            v1176 = (char *)v255 + v448;
            __dstq = (char *)v256 + v448;
            v1198 = v28;
            v449 = sub_2408E57A4();
            v450 = v258;
            v451 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v449 - 8) + 16);
            swift_bridgeObjectRetain();
            v452 = v449;
            v28 = v1198;
            v451(v1176, __dstq, v452);
            v258 = v450;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v255, 0, 1, v257);
          }
          v453 = v253[7];
          v454 = (uint64_t *)((char *)a1 + v453);
          v455 = (uint64_t *)((char *)a2 + v453);
          if (v259((uint64_t *)((char *)a2 + v453), 1, v257))
          {
            v456 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v454, v455, *(_QWORD *)(*(_QWORD *)(v456 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v454 = *(_DWORD *)v455;
            v546 = v455[2];
            v454[1] = v455[1];
            v454[2] = v546;
            v547 = *(int *)(v257 + 24);
            v1180 = (char *)v454 + v547;
            __dstt = (char *)v455 + v547;
            v548 = v28;
            v549 = sub_2408E57A4();
            v550 = v258;
            v551 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v549 - 8) + 16);
            swift_bridgeObjectRetain();
            v552 = v549;
            v28 = v548;
            v551(v1180, __dstt, v552);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v550 + 56))(v454, 0, 1, v257);
          }
          v553 = v253[8];
          v554 = (char *)a1 + v553;
          v555 = (char *)a2 + v553;
          v556 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v556 - 8) + 16))(v554, v555, v556);
          v29 = v1217;
          goto LABEL_286;
        case 0x26u:
          v261 = type metadata accessor for ToolKitProtoTypedValue(0);
          v262 = *(_QWORD *)(v261 - 8);
          v1215 = v29;
          v1223 = v30;
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v262 + 48))(a2, 1, v261))
          {
            v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
          }
          else
          {
            v457 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0)
              swift_retain();
            *a1 = v457;
            v458 = *(int *)(v261 + 20);
            v459 = (char *)a1 + v458;
            v460 = (char *)a2 + v458;
            v461 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v461 - 8) + 16))(v459, v460, v461);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v262 + 56))(a1, 0, 1, v261);
          }
          v419 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
          v462 = v419[5];
          v463 = (uint64_t *)((char *)a1 + v462);
          v464 = (uint64_t *)((char *)a2 + v462);
          v465 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v466 = *(_QWORD *)(v465 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v466 + 48))(v464, 1, v465))
          {
            v467 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v463, v464, *(_QWORD *)(*(_QWORD *)(v467 - 8) + 64));
          }
          else
          {
            v557 = *v464;
            if ((~*v464 & 0xF000000000000007) != 0)
              swift_retain();
            *v463 = v557;
            v558 = *(int *)(v465 + 20);
            v559 = (char *)v463 + v558;
            v560 = (char *)v464 + v558;
            v561 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v559, v560, v561);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v466 + 56))(v463, 0, 1, v465);
          }
          v562 = v419[6];
          v563 = (uint64_t *)((char *)a1 + v562);
          v564 = (uint64_t *)((char *)a2 + v562);
          v565 = type metadata accessor for TranscriptProtoStatementID(0);
          v566 = *(_QWORD *)(v565 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v566 + 48))(v564, 1, v565))
          {
            v567 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v563, v564, *(_QWORD *)(*(_QWORD *)(v567 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v563 = *(_DWORD *)v564;
            v579 = v564[2];
            v563[1] = v564[1];
            v563[2] = v579;
            v580 = *(int *)(v565 + 24);
            v1182 = (char *)v563 + v580;
            __dstv = (char *)v564 + v580;
            v581 = v28;
            v582 = sub_2408E57A4();
            v583 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v582 - 8) + 16);
            swift_bridgeObjectRetain();
            v584 = v582;
            v28 = v581;
            v583(v1182, __dstv, v584);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v566 + 56))(v563, 0, 1, v565);
          }
          goto LABEL_244;
        case 0x27u:
          v264 = type metadata accessor for ToolKitProtoTypedValue(0);
          v265 = *(_QWORD *)(v264 - 8);
          v1215 = v29;
          v1223 = v30;
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v265 + 48))(a2, 1, v264))
          {
            v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
          }
          else
          {
            v468 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0)
              swift_retain();
            *a1 = v468;
            v469 = *(int *)(v264 + 20);
            v470 = (char *)a1 + v469;
            v471 = (char *)a2 + v469;
            v472 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v472 - 8) + 16))(v470, v471, v472);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v265 + 56))(a1, 0, 1, v264);
          }
          v419 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
          v473 = v419[5];
          v474 = (uint64_t *)((char *)a1 + v473);
          v475 = (uint64_t *)((char *)a2 + v473);
          v476 = type metadata accessor for TranscriptProtoStatementID(0);
          v477 = *(_QWORD *)(v476 - 8);
          v478 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v477 + 48);
          if (v478(v475, 1, v476))
          {
            v479 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v474, v475, *(_QWORD *)(*(_QWORD *)(v479 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v474 = *(_DWORD *)v475;
            v568 = v475[2];
            v474[1] = v475[1];
            v474[2] = v568;
            v569 = *(int *)(v476 + 24);
            v1181 = (char *)v474 + v569;
            __dstu = (char *)v475 + v569;
            v1200 = v28;
            v570 = sub_2408E57A4();
            v571 = v477;
            v572 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v570 - 8) + 16);
            swift_bridgeObjectRetain();
            v573 = v570;
            v28 = v1200;
            v572(v1181, __dstu, v573);
            v477 = v571;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v571 + 56))(v474, 0, 1, v476);
          }
          v574 = v419[6];
          v575 = (uint64_t *)((char *)a1 + v574);
          v576 = (uint64_t *)((char *)a2 + v574);
          if (v478((uint64_t *)((char *)a2 + v574), 1, v476))
          {
LABEL_242:
            v794 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v575, v576, *(_QWORD *)(*(_QWORD *)(v794 - 8) + 64));
          }
          else
          {
LABEL_243:
            *(_DWORD *)v575 = *(_DWORD *)v576;
            v795 = v576[2];
            v575[1] = v576[1];
            v575[2] = v795;
            v796 = *(int *)(v476 + 24);
            v1186 = (char *)v575 + v796;
            __dstba = (char *)v576 + v796;
            v797 = v28;
            v798 = sub_2408E57A4();
            v799 = v477;
            v800 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v798 - 8) + 16);
            swift_bridgeObjectRetain();
            v801 = v798;
            v28 = v797;
            v800(v1186, __dstba, v801);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v799 + 56))(v575, 0, 1, v476);
          }
LABEL_244:
          v802 = v419[7];
          v803 = (char *)a1 + v802;
          v804 = (char *)a2 + v802;
          v805 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v805 - 8) + 16))(v803, v804, v805);
          v29 = v1215;
          goto LABEL_286;
        case 0x28u:
          v1218 = v29;
          v1223 = v30;
          v1196 = v28;
          v267 = a2[1];
          *a1 = *a2;
          a1[1] = v267;
          v268 = a2[3];
          a1[2] = a2[2];
          a1[3] = v268;
          DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          v269 = *(int *)(DecorationResult + 32);
          v270 = (uint64_t *)((char *)a1 + v269);
          v271 = (uint64_t *)((char *)a2 + v269);
          DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          __dstc = *(_QWORD **)(DecorationToolRetrievalResponse - 8);
          v273 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstc[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v273(v271, 1, DecorationToolRetrievalResponse))
          {
            v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
            memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
          }
          else
          {
            v480 = v271[1];
            *v270 = *v271;
            v270[1] = v480;
            v481 = v271[3];
            v270[2] = v271[2];
            v270[3] = v481;
            *((_DWORD *)v270 + 8) = *((_DWORD *)v271 + 8);
            v482 = v271[6];
            v270[5] = v271[5];
            v270[6] = v482;
            v483 = *(int *)(DecorationToolRetrievalResponse + 36);
            v1097 = (char *)v271 + v483;
            v1110 = (char *)v270 + v483;
            v484 = sub_2408E57A4();
            v485 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v484 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v485(v1110, v1097, v484);
            ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstc[7])(v270, 0, 1, DecorationToolRetrievalResponse);
          }
          v28 = v1196;
          v486 = *(int *)(DecorationResult + 36);
          v487 = (char *)a1 + v486;
          v488 = (char *)a2 + v486;
          v489 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v489 - 8) + 16))(v487, v488, v489);
          v29 = v1218;
LABEL_286:
          swift_storeEnumTagMultiPayload();
          goto LABEL_287;
        case 0x2Au:
          v1223 = v30;
          v1191 = v28;
          v275 = a2[1];
          *a1 = *a2;
          a1[1] = v275;
          DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
          v276 = DecorationPrePlannerResult[5];
          v277 = (uint64_t *)((char *)a1 + v276);
          v278 = (uint64_t *)((char *)a2 + v276);
          v279 = type metadata accessor for TranscriptProtoStatementID(0);
          v280 = *(_QWORD *)(v279 - 8);
          v281 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v280 + 48);
          swift_bridgeObjectRetain();
          if (v281(v278, 1, v279))
          {
            v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v277 = *(_DWORD *)v278;
            v490 = v278[2];
            v277[1] = v278[1];
            v277[2] = v490;
            v491 = *(int *)(v279 + 24);
            v1220 = v29;
            v492 = (char *)v277 + v491;
            v493 = (char *)v278 + v491;
            v494 = sub_2408E57A4();
            v495 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v494 - 8) + 16);
            swift_bridgeObjectRetain();
            v496 = v492;
            v29 = v1220;
            v495(v496, v493, v494);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
          }
          v497 = DecorationPrePlannerResult[6];
          v498 = (char *)a1 + v497;
          v499 = (char *)a2 + v497;
          DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
          v501 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v501 + 48))(v499, 1, DecorationPrePlannerResultPayload))
          {
            v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
            memcpy(v498, v499, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
          }
          else
          {
            DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                       - 8)
                                                                           + 48))(v499, 1, DecorationPrePlannerPayloadEnum))
            {
              v638 = (char *)&loc_24058E734 + 4 * word_240901C86[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v578 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
            memcpy(v498, v499, *(_QWORD *)(*(_QWORD *)(v578 - 8) + 64));
            v806 = *(int *)(DecorationPrePlannerResultPayload + 20);
            v807 = &v498[v806];
            v808 = &v499[v806];
            v809 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v809 - 8) + 16))(v807, v808, v809);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v501 + 56))(v498, 0, 1, DecorationPrePlannerResultPayload);
          }
          v810 = DecorationPrePlannerResult[7];
          v811 = (char *)a1 + v810;
          v812 = (char *)a2 + v810;
          v813 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v813 - 8) + 16))(v811, v812, v813);
          goto LABEL_252;
        default:
          memcpy(a1, a2, *(_QWORD *)(v30 + 64));
          goto LABEL_288;
      }
    }
    v991 = *(int *)(v28 + 20);
    v992 = (char *)a1 + v991;
    v993 = (char *)a2 + v991;
    v994 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v994 - 8) + 16))(v992, v993, v994);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *StepResults;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *DecorationResult;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Step;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v122;
  int *v123;
  _QWORD *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int (*v206)(uint64_t, uint64_t, uint64_t);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int (*v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  int EnumCaseMultiPayload;
  uint64_t v259;
  uint64_t v260;
  int *v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  _QWORD *v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  int v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  int v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unsigned int (*v346)(uint64_t, uint64_t, uint64_t);
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unsigned int (*v383)(uint64_t, uint64_t, uint64_t);
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  int v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  int *v418;
  uint64_t v419;
  uint64_t v420;
  unsigned int (*v421)(uint64_t, uint64_t, uint64_t);
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  int *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unsigned int (*v485)(uint64_t, uint64_t, uint64_t);
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;

  v4 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        StepResults = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v7 = a1 + StepResults[5];
        v8 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v9 = v7 + *(int *)(v8 + 28);
          v10 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        v11 = a1 + StepResults[6];
        v12 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
          goto LABEL_437;
        swift_bridgeObjectRelease();
        v13 = v11 + *(int *)(v12 + 20);
        v14 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
        {
          v15 = v13 + *(int *)(v14 + 20);
          v16 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        }
        v17 = *(int *)(v12 + 24);
        goto LABEL_435;
      case 1u:
        swift_bridgeObjectRelease();
        v18 = type metadata accessor for TranscriptProtoTextQuery(0);
        v19 = a1 + *(int *)(v18 + 24);
        v20 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
        {
          swift_bridgeObjectRelease();
          v21 = v19 + *(int *)(v20 + 24);
          v22 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
        swift_bridgeObjectRelease();
        v23 = *(int *)(v18 + 32);
        goto LABEL_438;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        goto LABEL_438;
      case 3u:
        DecorationResult = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v25 = a1 + DecorationResult[5];
        v26 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
        {
          v27 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v25, 1, v27))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v28 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v29 = v25 + *(int *)(v28 + 20);
                v30 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
                {
                  swift_bridgeObjectRelease();
                  v31 = v29 + *(int *)(v30 + 24);
                  v32 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
                }
                v33 = *(int *)(v28 + 24);
                goto LABEL_345;
              case 1u:
                swift_bridgeObjectRelease();
                v33 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_345;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v254 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v255 = (_QWORD *)(v25 + v254[6]);
                v256 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v256 - 8) + 48))(v255, 1, v256))
                {
                  goto LABEL_332;
                }
                v257 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v257 - 8) + 48))(v255, 1, v257))
                {
                  goto LABEL_331;
                }
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 6)
                {
                  v339 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v339 - 8) + 8))(v255, v339);
                }
                else
                {
                  if (EnumCaseMultiPayload == 5)
                  {
                    v259 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (EnumCaseMultiPayload != 1)
                      goto LABEL_331;
                    if ((~*v255 & 0xF000000000000007) != 0)
                      swift_release();
                    v259 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v340 = (char *)v255 + *(int *)(v259 + 20);
                  v341 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v341 - 8) + 8))(v340, v341);
                }
LABEL_331:
                v342 = (char *)v255 + *(int *)(v256 + 20);
                v343 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v343 - 8) + 8))(v342, v343);
LABEL_332:
                v344 = v25 + v254[7];
                v345 = type metadata accessor for TranscriptProtoStatementID(0);
                v346 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v345 - 8) + 48);
                if (!v346(v344, 1, v345))
                {
                  swift_bridgeObjectRelease();
                  v347 = v344 + *(int *)(v345 + 24);
                  v348 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v348 - 8) + 8))(v347, v348);
                }
                v494 = v345;
                v349 = v25 + v254[8];
                v350 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v350 - 8) + 48))(v349, 1, v350))
                {
                  goto LABEL_344;
                }
                v351 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v351 - 8) + 48))(v349, 1, v351))
                {
                  goto LABEL_343;
                }
                v352 = swift_getEnumCaseMultiPayload();
                if (v352 == 1)
                {
                  swift_bridgeObjectRelease();
                  v356 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v352)
                    goto LABEL_343;
                  swift_bridgeObjectRelease();
                  v493 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v353 = v349 + *(int *)(v493 + 20);
                  if (!v346(v353, 1, v494))
                  {
                    swift_bridgeObjectRelease();
                    v354 = v353 + *(int *)(v494 + 24);
                    v355 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v355 - 8) + 8))(v354, v355);
                  }
                  v356 = *(int *)(v493 + 24);
                }
                v357 = v349 + v356;
                v358 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v358 - 8) + 8))(v357, v358);
LABEL_343:
                v359 = v349 + *(int *)(v350 + 20);
                v360 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v360 - 8) + 8))(v359, v360);
LABEL_344:
                v33 = v254[9];
LABEL_345:
                v361 = v25 + v33;
                v362 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v362 - 8) + 8))(v361, v362);
                break;
              case 3u:
                v260 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v260 - 8) + 8))(v25, v260);
                break;
              default:
                break;
            }
          }
          v363 = v25 + *(int *)(v26 + 20);
          v364 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v364 - 8) + 8))(v363, v364);
        }
        v365 = a1 + DecorationResult[6];
        v366 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v366 - 8) + 48))(v365, 1, v366))
        {
          v367 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v367 - 8) + 48))(v365, 1, v367))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
                goto LABEL_356;
              case 1u:
                swift_bridgeObjectRelease();
                v369 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                              + 20);
                goto LABEL_357;
              case 2u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
                goto LABEL_356;
              case 3u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
                goto LABEL_356;
              case 4u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
                goto LABEL_356;
              case 5u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_356:
                v369 = *(int *)(v368 + 24);
LABEL_357:
                v370 = v365 + v369;
                v371 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v371 - 8) + 8))(v370, v371);
                break;
              default:
                break;
            }
          }
          v372 = v365 + *(int *)(v366 + 20);
          v373 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v373 - 8) + 8))(v372, v373);
        }
        swift_bridgeObjectRelease();
        v211 = a1 + DecorationResult[8];
        v374 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v374 - 8) + 48))(v211, 1, v374))
          goto LABEL_363;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v213 = *(int *)(v374 + 24);
        goto LABEL_361;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        goto LABEL_438;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v35 = a1 + v34[7];
        v36 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
        {
          swift_bridgeObjectRelease();
          v37 = v35 + *(int *)(v36 + 24);
          v38 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_424;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = (int *)type metadata accessor for TranscriptProtoClientAction(0);
        v40 = a1 + v39[9];
        v41 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
          goto LABEL_464;
        swift_bridgeObjectRelease();
        v42 = v40 + *(int *)(v41 + 24);
        goto LABEL_463;
      case 7u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        goto LABEL_28;
      case 8u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
LABEL_28:
        v44 = Step;
        v45 = a1 + *(int *)(Step + 20);
        v46 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46))
        {
          swift_bridgeObjectRelease();
          v47 = v45 + *(int *)(v46 + 24);
          v48 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
        }
        v23 = *(int *)(v44 + 24);
        goto LABEL_438;
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_439;
      case 0xAu:
        v49 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(a1, 1, v49))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              v50 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
              goto LABEL_191;
            case 1u:
              v220 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 48))(a1, 1, v220)&& swift_getEnumCaseMultiPayload() <= 2)
              {
                swift_bridgeObjectRelease();
                v221 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
                v222 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 8))(v221, v222);
              }
              v223 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
              goto LABEL_190;
            case 2u:
              v224 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 48))(a1, 1, v224))
              {
                v225 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 48))(a1, 1, v225))
                {
                  swift_bridgeObjectRelease();
                  v226 = a1 + *(int *)(v225 + 24);
                  v227 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v227 - 8) + 8))(v226, v227);
                }
              }
              v223 = type metadata accessor for TranscriptProtoPlannerError(0);
              goto LABEL_190;
            case 3u:
              v228 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 48))(a1, 1, v228))
              {
                v229 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 48))(a1, 1, v229))
                {
                  swift_bridgeObjectRelease();
                  v230 = a1 + *(int *)(v229 + 24);
                  v231 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 8))(v230, v231);
                }
              }
              v223 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_190:
              v50 = *(int *)(v223 + 20);
LABEL_191:
              v232 = a1 + v50;
              v233 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 8))(v232, v233);
              break;
            default:
              break;
          }
        }
        v23 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        goto LABEL_438;
      case 0xBu:
        v51 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(a1, 1, v51))
        {
          v52 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(a1, 1, v52))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v53 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v54 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
          }
          v55 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v56 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
        }
        v23 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        goto LABEL_438;
      case 0xCu:
        sub_240363D58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        sub_240363D58(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        goto LABEL_438;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v57 = (_QWORD *)(a1 + DecorationResult[6]);
        v58 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58))
          goto LABEL_197;
        v59 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v57, 1, v59))
          goto LABEL_196;
        v60 = swift_getEnumCaseMultiPayload();
        if (v60 == 6)
        {
          v234 = sub_2408E57A4();
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v234 - 8) + 8))(v57, v234);
        }
        else
        {
          if (v60 == 5)
          {
            v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
          }
          else
          {
            if (v60 != 1)
              goto LABEL_196;
            if ((~*v57 & 0xF000000000000007) != 0)
              swift_release();
            v61 = type metadata accessor for ToolKitProtoTypedValue(0);
          }
          v235 = (char *)v57 + *(int *)(v61 + 20);
          v236 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v236 - 8) + 8))(v235, v236);
        }
LABEL_196:
        v237 = (char *)v57 + *(int *)(v58 + 20);
        v238 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v238 - 8) + 8))(v237, v238);
LABEL_197:
        v239 = a1 + DecorationResult[7];
        v240 = type metadata accessor for TranscriptProtoStatementID(0);
        v241 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v240 - 8) + 48);
        if (!v241(v239, 1, v240))
        {
          swift_bridgeObjectRelease();
          v242 = v239 + *(int *)(v240 + 24);
          v243 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 8))(v242, v243);
        }
        v211 = a1 + DecorationResult[8];
        v244 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 48))(v211, 1, v244))
          goto LABEL_363;
        v245 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v245 - 8) + 48))(v211, 1, v245))
          goto LABEL_208;
        v246 = swift_getEnumCaseMultiPayload();
        if (v246 == 1)
        {
          swift_bridgeObjectRelease();
          v251 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        }
        else
        {
          if (v246)
            goto LABEL_208;
          swift_bridgeObjectRelease();
          v247 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v248 = v211 + *(int *)(v247 + 20);
          if (!v241(v248, 1, v240))
          {
            swift_bridgeObjectRelease();
            v249 = v248 + *(int *)(v240 + 24);
            v250 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 8))(v249, v250);
          }
          v251 = *(int *)(v247 + 24);
        }
        v252 = v211 + v251;
        v253 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 8))(v252, v253);
LABEL_208:
        v213 = *(int *)(v244 + 20);
LABEL_361:
        v183 = v211 + v213;
LABEL_362:
        v375 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v375 - 8) + 8))(v183, v375);
LABEL_363:
        v23 = DecorationResult[9];
        goto LABEL_438;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v5 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        goto LABEL_439;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
        v62 = StepResults[6];
        goto LABEL_159;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v64 = a1 + v63[9];
        v65 = type metadata accessor for TranscriptProtoParameterSet(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65))
        {
          swift_bridgeObjectRelease();
          v66 = v64 + *(int *)(v65 + 20);
          v67 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
        }
        v68 = a1 + v63[10];
        v69 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69))
        {
          swift_bridgeObjectRelease();
          v70 = v68 + *(int *)(v69 + 24);
          v71 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
        }
        v23 = v63[11];
        goto LABEL_438;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        goto LABEL_438;
      case 0x16u:
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        goto LABEL_438;
      case 0x17u:
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        goto LABEL_438;
      case 0x18u:
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        goto LABEL_438;
      case 0x19u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        goto LABEL_438;
      case 0x1Au:
        v72 = type metadata accessor for TranscriptProtoStatementID(0);
        v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48);
        if (!v73(a1, 1, v72))
        {
          swift_bridgeObjectRelease();
          v74 = a1 + *(int *)(v72 + 24);
          v75 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v74, v75);
        }
        v76 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v77 = a1 + *(int *)(v76 + 20);
        if (!v73(v77, 1, v72))
        {
          swift_bridgeObjectRelease();
          v78 = v77 + *(int *)(v72 + 24);
          v79 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        }
        v23 = *(int *)(v76 + 24);
        goto LABEL_438;
      case 0x1Bu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        goto LABEL_438;
      case 0x1Cu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v80 = a1 + v34[7];
        v81 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v80, 1, v81))
          goto LABEL_402;
        v82 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v80, 1, v82))
          goto LABEL_401;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v83 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v84 = (_QWORD *)(v80 + v83[6]);
            v85 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v84, 1, v85))
            {
              if ((~*v84 & 0xF000000000000007) != 0)
                swift_release();
              v86 = (char *)v84 + *(int *)(v85 + 20);
              v87 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v86, v87);
            }
            v88 = v80 + v83[7];
            v89 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v90 = v88 + *(int *)(v89 + 28);
              v91 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
            }
            v92 = v83[8];
            goto LABEL_400;
          case 1u:
            swift_bridgeObjectRelease();
            v268 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_399;
          case 2u:
            swift_bridgeObjectRelease();
            v268 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_399;
          case 3u:
            swift_bridgeObjectRelease();
            v269 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_239;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v92 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_400;
          case 5u:
            swift_bridgeObjectRelease();
            v269 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_239:
            v270 = v269;
            v271 = (_QWORD *)(v80 + *(int *)(v269 + 24));
            v272 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v272 - 8) + 48))(v271, 1, v272))
            {
              if ((~*v271 & 0xF000000000000007) != 0)
                swift_release();
              v273 = (char *)v271 + *(int *)(v272 + 20);
              v274 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v274 - 8) + 8))(v273, v274);
            }
            v92 = *(int *)(v270 + 28);
            goto LABEL_400;
          case 6u:
            swift_bridgeObjectRelease();
            v275 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v276 = (_QWORD *)(v80 + *(int *)(v275 + 20));
            v277 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v277 - 8) + 48))(v276, 1, v277))
            {
              if ((~*v276 & 0xF000000000000007) != 0)
                swift_release();
              v278 = (char *)v276 + *(int *)(v277 + 20);
              v279 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v279 - 8) + 8))(v278, v279);
            }
            v92 = *(int *)(v275 + 24);
            goto LABEL_400;
          case 7u:
            v280 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v280 - 8) + 48))(v80, 1, v280))
            {
              goto LABEL_398;
            }
            v281 = swift_getEnumCaseMultiPayload();
            if (v281 != 2)
            {
              if (v281 == 1)
              {
                v282 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v281)
                  goto LABEL_398;
                v282 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_397:
              v411 = v80 + *(int *)(v282 + 20);
              v412 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v412 - 8) + 8))(v411, v412);
LABEL_398:
              v268 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_399:
              v92 = *(int *)(v268 + 20);
LABEL_400:
              v413 = v80 + v92;
              v414 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v414 - 8) + 8))(v413, v414);
LABEL_401:
              v415 = v80 + *(int *)(v81 + 20);
              v416 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v416 - 8) + 8))(v415, v416);
LABEL_402:
              v417 = a1 + v34[8];
              v418 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v418 - 1) + 48))(v417, 1, v418))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v419 = v417 + v418[7];
                v420 = type metadata accessor for TranscriptProtoDialogType(0);
                v421 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v420 - 8) + 48);
                if (!v421(v419, 1, v420))
                {
                  v422 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v422 - 8) + 48))(v419, 1, v422))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v424 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_410;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v424 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_410;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v424 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_410:
                        v425 = v419 + *(int *)(v424 + 20);
                        v426 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v426 - 8) + 8))(v425, v426);
                        break;
                      case 3u:
                      case 4u:
                        v423 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v423 - 8) + 8))(v419, v423);
                        break;
                      default:
                        break;
                    }
                  }
                  v427 = v419 + *(int *)(v420 + 20);
                  v428 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v428 - 8) + 8))(v427, v428);
                }
                v429 = v417 + v418[8];
                if (!v421(v429, 1, v420))
                {
                  v430 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v430 - 8) + 48))(v429, 1, v430))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v432 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_419;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v432 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_419;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v432 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_419:
                        v433 = v429 + *(int *)(v432 + 20);
                        v434 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v434 - 8) + 8))(v433, v434);
                        break;
                      case 3u:
                      case 4u:
                        v431 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v431 - 8) + 8))(v429, v431);
                        break;
                      default:
                        break;
                    }
                  }
                  v435 = v429 + *(int *)(v420 + 20);
                  v436 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v436 - 8) + 8))(v435, v436);
                }
                v437 = v417 + v418[9];
                v438 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v438 - 8) + 8))(v437, v438);
              }
              v439 = a1 + v34[9];
              v440 = type metadata accessor for TranscriptProtoStatementID(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v440 - 8) + 48))(v439, 1, v440))
              {
                swift_bridgeObjectRelease();
                v441 = v439 + *(int *)(v440 + 24);
                v442 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v442 - 8) + 8))(v441, v442);
              }
LABEL_424:
              swift_bridgeObjectRelease();
              v23 = v34[11];
LABEL_438:
              v453 = a1 + v23;
              v454 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v454 - 8) + 8))(v453, v454);
              goto LABEL_439;
            }
            v333 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v333 - 8) + 48))(v80, 1, v333))
            {
              goto LABEL_396;
            }
            v334 = swift_getEnumCaseMultiPayload();
            if (v334 == 1)
            {
              v406 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v406 - 8) + 48))(v80, 1, v406))
              {
                v407 = v80 + *(int *)(v406 + 20);
                v408 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v408 - 8) + 8))(v407, v408);
              }
              v335 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            }
            else
            {
              if (v334)
              {
LABEL_396:
                v282 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_397;
              }
              swift_bridgeObjectRelease();
              v335 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
            }
            v409 = v80 + *(int *)(v335 + 20);
            v410 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v410 - 8) + 8))(v409, v410);
            goto LABEL_396;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v92 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_400;
          case 9u:
            v283 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 48))(v80, 1, v283))
            {
              v284 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v284 - 8) + 48))(v80, 1, v284))
              {
                v285 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 48))(v80, 16, v285))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v286 = v80 + *(int *)(v285 + 28);
                  v287 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 8))(v286, v287);
                }
              }
              v288 = v80 + *(int *)(v283 + 20);
              v289 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v289 - 8) + 8))(v288, v289);
            }
            v268 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_399;
          case 0xAu:
            swift_bridgeObjectRelease();
            v268 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
            goto LABEL_399;
          default:
            goto LABEL_401;
        }
      case 0x1Du:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        v93 = a1 + v39[6];
        v94 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v93, 1, v94))
          goto LABEL_457;
        v95 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v93, 1, v95))
          goto LABEL_450;
        v96 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v93, 1, v96))
          goto LABEL_449;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v97 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v98 = (_QWORD *)(v93 + v97[6]);
            v99 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v98, 1, v99))
            {
              if ((~*v98 & 0xF000000000000007) != 0)
                swift_release();
              v100 = (char *)v98 + *(int *)(v99 + 20);
              v101 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v100, v101);
            }
            v102 = v93 + v97[7];
            v103 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v104 = v102 + *(int *)(v103 + 28);
              v105 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v104, v105);
            }
            v106 = v97[8];
            goto LABEL_448;
          case 1u:
            swift_bridgeObjectRelease();
            v311 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_447;
          case 2u:
            swift_bridgeObjectRelease();
            v311 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_447;
          case 3u:
            swift_bridgeObjectRelease();
            v312 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_295;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v106 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_448;
          case 5u:
            swift_bridgeObjectRelease();
            v312 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_295:
            v313 = v312;
            v314 = (_QWORD *)(v93 + *(int *)(v312 + 24));
            v315 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v315 - 8) + 48))(v314, 1, v315))
            {
              if ((~*v314 & 0xF000000000000007) != 0)
                swift_release();
              v316 = (char *)v314 + *(int *)(v315 + 20);
              v317 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v317 - 8) + 8))(v316, v317);
            }
            v106 = *(int *)(v313 + 28);
            goto LABEL_448;
          case 6u:
            swift_bridgeObjectRelease();
            v318 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v319 = (_QWORD *)(v93 + *(int *)(v318 + 20));
            v320 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v320 - 8) + 48))(v319, 1, v320))
            {
              if ((~*v319 & 0xF000000000000007) != 0)
                swift_release();
              v321 = (char *)v319 + *(int *)(v320 + 20);
              v322 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v322 - 8) + 8))(v321, v322);
            }
            v106 = *(int *)(v318 + 24);
            goto LABEL_448;
          case 7u:
            v323 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v323 - 8) + 48))(v93, 1, v323))
            {
              goto LABEL_446;
            }
            v324 = swift_getEnumCaseMultiPayload();
            if (v324 != 2)
            {
              if (v324 == 1)
              {
                v325 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v324)
                  goto LABEL_446;
                v325 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_445:
              v463 = v93 + *(int *)(v325 + 20);
              v464 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v464 - 8) + 8))(v463, v464);
LABEL_446:
              v311 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_447:
              v106 = *(int *)(v311 + 20);
LABEL_448:
              v465 = v93 + v106;
              v466 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v466 - 8) + 8))(v465, v466);
LABEL_449:
              v467 = v93 + *(int *)(v95 + 20);
              v468 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v468 - 8) + 8))(v467, v468);
LABEL_450:
              v469 = v93 + *(int *)(v94 + 20);
              v470 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v470 - 1) + 48))(v469, 1, v470))
              {
                swift_bridgeObjectRelease();
                v471 = v469 + v470[5];
                v472 = type metadata accessor for TranscriptProtoResponseDialog(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v472 - 8) + 48))(v471, 1, v472))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v473 = v471 + *(int *)(v472 + 32);
                  v474 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v474 - 8) + 8))(v473, v474);
                }
                v475 = v469 + v470[6];
                v476 = type metadata accessor for TranscriptProtoResponseVisual(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v476 - 8) + 48))(v475, 1, v476))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v477 = v475 + *(int *)(v476 + 24);
                  v478 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v478 - 8) + 8))(v477, v478);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v479 = v469 + v470[11];
                v480 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v480 - 8) + 8))(v479, v480);
              }
              v481 = v93 + *(int *)(v94 + 24);
              v482 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v482 - 8) + 8))(v481, v482);
LABEL_457:
              v483 = a1 + v39[7];
              v484 = type metadata accessor for TranscriptProtoStatementID(0);
              v485 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v484 - 8) + 48);
              if (!v485(v483, 1, v484))
              {
                swift_bridgeObjectRelease();
                v486 = v483 + *(int *)(v484 + 24);
                v487 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v487 - 8) + 8))(v486, v487);
              }
              v488 = a1 + v39[8];
              if (!v485(v488, 1, v484))
              {
                swift_bridgeObjectRelease();
                v489 = v488 + *(int *)(v484 + 24);
                v490 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v490 - 8) + 8))(v489, v490);
              }
              v491 = a1 + v39[9];
              if (!v485(v491, 1, v484))
              {
                swift_bridgeObjectRelease();
                v42 = v491 + *(int *)(v484 + 24);
LABEL_463:
                v492 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v492 - 8) + 8))(v42, v492);
              }
LABEL_464:
              v23 = v39[10];
              goto LABEL_438;
            }
            v403 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v403 - 8) + 48))(v93, 1, v403))
            {
              goto LABEL_444;
            }
            v404 = swift_getEnumCaseMultiPayload();
            if (v404 == 1)
            {
              v458 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v458 - 8) + 48))(v93, 1, v458))
              {
                v459 = v93 + *(int *)(v458 + 20);
                v460 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v460 - 8) + 8))(v459, v460);
              }
              v405 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            }
            else
            {
              if (v404)
              {
LABEL_444:
                v325 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_445;
              }
              swift_bridgeObjectRelease();
              v405 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
            }
            v461 = v93 + *(int *)(v405 + 20);
            v462 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v462 - 8) + 8))(v461, v462);
            goto LABEL_444;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v106 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_448;
          case 9u:
            v326 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v326 - 8) + 48))(v93, 1, v326))
            {
              v327 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v327 - 8) + 48))(v93, 1, v327))
              {
                v328 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v328 - 8) + 48))(v93, 16, v328))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v329 = v93 + *(int *)(v328 + 28);
                  v330 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 8))(v329, v330);
                }
              }
              v331 = v93 + *(int *)(v326 + 20);
              v332 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v332 - 8) + 8))(v331, v332);
            }
            v311 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_447;
          case 0xAu:
            swift_bridgeObjectRelease();
            v311 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
            goto LABEL_447;
          default:
            goto LABEL_449;
        }
      case 0x1Eu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v107 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        goto LABEL_89;
      case 0x1Fu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v107 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
LABEL_89:
        StepResults = (int *)v107;
        v108 = *(int *)(v107 + 24);
        goto LABEL_384;
      case 0x20u:
        v109 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(a1, 1, v109))
        {
          v110 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))(a1, 1, v110))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v111 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v112 = a1 + *(int *)(v111 + 20);
                v113 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v112, 1, v113))
                {
                  swift_bridgeObjectRelease();
                  v114 = v112 + *(int *)(v113 + 24);
                  v115 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 8))(v114, v115);
                }
                v116 = *(int *)(v111 + 24);
                goto LABEL_381;
              case 1u:
                swift_bridgeObjectRelease();
                v116 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_381;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v261 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v262 = (_QWORD *)(a1 + v261[6]);
                v263 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 48))(v262, 1, v263))
                {
                  goto LABEL_368;
                }
                v264 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v264 - 8) + 48))(v262, 1, v264))
                {
                  goto LABEL_367;
                }
                v265 = swift_getEnumCaseMultiPayload();
                if (v265 == 6)
                {
                  v376 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v376 - 8) + 8))(v262, v376);
                }
                else
                {
                  if (v265 == 5)
                  {
                    v266 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (v265 != 1)
                      goto LABEL_367;
                    if ((~*v262 & 0xF000000000000007) != 0)
                      swift_release();
                    v266 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v377 = (char *)v262 + *(int *)(v266 + 20);
                  v378 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v378 - 8) + 8))(v377, v378);
                }
LABEL_367:
                v379 = (char *)v262 + *(int *)(v263 + 20);
                v380 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v380 - 8) + 8))(v379, v380);
LABEL_368:
                v381 = a1 + v261[7];
                v382 = type metadata accessor for TranscriptProtoStatementID(0);
                v383 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v382 - 8) + 48);
                if (!v383(v381, 1, v382))
                {
                  swift_bridgeObjectRelease();
                  v384 = v381 + *(int *)(v382 + 24);
                  v385 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v385 - 8) + 8))(v384, v385);
                }
                v386 = a1 + v261[8];
                v387 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v387 - 8) + 48))(v386, 1, v387))
                {
                  goto LABEL_380;
                }
                v388 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v388 - 8) + 48))(v386, 1, v388))
                {
                  goto LABEL_379;
                }
                v389 = swift_getEnumCaseMultiPayload();
                if (v389 == 1)
                {
                  swift_bridgeObjectRelease();
                  v394 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v389)
                    goto LABEL_379;
                  swift_bridgeObjectRelease();
                  v390 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v391 = v386 + *(int *)(v390 + 20);
                  if (!v383(v391, 1, v382))
                  {
                    swift_bridgeObjectRelease();
                    v392 = v391 + *(int *)(v382 + 24);
                    v393 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v393 - 8) + 8))(v392, v393);
                  }
                  v394 = *(int *)(v390 + 24);
                }
                v395 = v386 + v394;
                v396 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v396 - 8) + 8))(v395, v396);
LABEL_379:
                v397 = v386 + *(int *)(v387 + 20);
                v398 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v398 - 8) + 8))(v397, v398);
LABEL_380:
                v116 = v261[9];
LABEL_381:
                v399 = a1 + v116;
                v400 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v400 - 8) + 8))(v399, v400);
                break;
              case 3u:
                v267 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v267 - 8) + 8))(a1, v267);
                break;
              default:
                break;
            }
          }
          v401 = a1 + *(int *)(v109 + 20);
          v402 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v402 - 8) + 8))(v401, v402);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        swift_bridgeObjectRelease();
        v108 = StepResults[6];
LABEL_384:
        v11 = a1 + v108;
        v200 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 48))(v11, 1, v200))
          goto LABEL_437;
        swift_bridgeObjectRelease();
LABEL_386:
        swift_bridgeObjectRelease();
        v17 = *(int *)(v200 + 24);
        goto LABEL_435;
      case 0x21u:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v117 = a1 + StepResults[5];
        v118 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48))(v117, 1, v118))
        {
          swift_bridgeObjectRelease();
          v119 = v117 + *(int *)(v118 + 24);
          v120 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 8))(v119, v120);
        }
        v11 = a1 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v11, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_437;
        }
        v122 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v11, 1, v122))
          goto LABEL_434;
        break;
      case 0x22u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        goto LABEL_438;
      case 0x23u:
        v133 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v133 - 1) + 48))(a1, 1, v133))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v134 = (_QWORD *)(a1 + v133[17]);
          v135 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 48))(v134, 1, v135))
          {
            if ((~*v134 & 0xF000000000000007) != 0)
              swift_release();
            v136 = (char *)v134 + *(int *)(v135 + 20);
            v137 = sub_2408E57A4();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v137 - 8) + 8))(v136, v137);
          }
          swift_bridgeObjectRelease();
          v138 = a1 + v133[19];
          v139 = type metadata accessor for ToolKitProtoAppDefinition(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 48))(v138, 1, v139))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v140 = v138 + *(int *)(v139 + 40);
            v141 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 48))(v140, 1, v141))
            {
              if (*(_QWORD *)(v140 + 8) != 1)
                swift_bridgeObjectRelease();
              v142 = v140 + *(int *)(v141 + 20);
              v143 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 8))(v142, v143);
            }
            v144 = v138 + *(int *)(v139 + 44);
            v145 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 8))(v144, v145);
          }
          swift_bridgeObjectRelease();
          v146 = a1 + v133[21];
          v147 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 48))(v146, 1, v147))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v148 = v146 + *(int *)(v147 + 24);
            v149 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 8))(v148, v149);
          }
          v150 = a1 + v133[22];
          v151 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 48))(v150, 1, v151))
          {
            v152 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 48))(v150, 1, v152))
            {
              v153 = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (v153 == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v154 = v150
                     + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v155 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 8))(v154, v155);
              }
            }
            v156 = v150 + *(int *)(v151 + 20);
            v157 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 8))(v156, v157);
          }
          v158 = a1 + v133[23];
          v159 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v160 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 48);
          if (!v160(v158, 1, v159))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v161 = v158 + *(int *)(v159 + 40);
            v162 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 48))(v161, 1, v162))
            {
              if (*(_QWORD *)(v161 + 8) != 1)
                swift_bridgeObjectRelease();
              v163 = v161 + *(int *)(v162 + 20);
              v164 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 8))(v163, v164);
            }
            v165 = v158 + *(int *)(v159 + 44);
            v166 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 8))(v165, v166);
          }
          v167 = a1 + v133[24];
          if (!v160(v167, 1, v159))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v168 = v167 + *(int *)(v159 + 40);
            v169 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 48))(v168, 1, v169))
            {
              if (*(_QWORD *)(v168 + 8) != 1)
                swift_bridgeObjectRelease();
              v170 = v168 + *(int *)(v169 + 20);
              v171 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 8))(v170, v171);
            }
            v172 = v167 + *(int *)(v159 + 44);
            v173 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 8))(v172, v173);
          }
          v174 = a1 + v133[25];
          v175 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 8))(v174, v175);
        }
        v176 = type metadata accessor for TranscriptProtoToolResolution(0);
        goto LABEL_166;
      case 0x24u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v177 = a1 + DecorationResult[7];
        v178 = type metadata accessor for TranscriptProtoStatementID(0);
        v179 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 48);
        if (!v179(v177, 1, v178))
        {
          swift_bridgeObjectRelease();
          v180 = v177 + *(int *)(v178 + 24);
          v181 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 8))(v180, v181);
        }
        v182 = a1 + DecorationResult[8];
        if (v179(v182, 1, v178))
          goto LABEL_363;
        swift_bridgeObjectRelease();
        v183 = v182 + *(int *)(v178 + 24);
        goto LABEL_362;
      case 0x25u:
        swift_bridgeObjectRelease();
        v184 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v185 = a1 + v184[6];
        v186 = type metadata accessor for TranscriptProtoStatementID(0);
        v187 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 48);
        if (!v187(v185, 1, v186))
        {
          swift_bridgeObjectRelease();
          v188 = v185 + *(int *)(v186 + 24);
          v189 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 8))(v188, v189);
        }
        v190 = a1 + v184[7];
        if (!v187(v190, 1, v186))
        {
          swift_bridgeObjectRelease();
          v191 = v190 + *(int *)(v186 + 24);
          v192 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 8))(v191, v192);
        }
        v23 = v184[8];
        goto LABEL_438;
      case 0x26u:
        v193 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 48))(a1, 1, v193))
        {
          if ((~*(_QWORD *)a1 & 0xF000000000000007) != 0)
            swift_release();
          v194 = a1 + *(int *)(v193 + 20);
          v195 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v195 - 8) + 8))(v194, v195);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v196 = (_QWORD *)(a1 + StepResults[5]);
        v197 = type metadata accessor for ToolKitProtoTypeInstance(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 48))(v196, 1, v197))
        {
          if ((~*v196 & 0xF000000000000007) != 0)
            swift_release();
          v198 = (char *)v196 + *(int *)(v197 + 20);
          v199 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v198, v199);
        }
        v62 = StepResults[6];
LABEL_159:
        v11 = a1 + v62;
        v200 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 48))(v11, 1, v200))
          goto LABEL_386;
        goto LABEL_437;
      case 0x27u:
        v201 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 48))(a1, 1, v201))
        {
          if ((~*(_QWORD *)a1 & 0xF000000000000007) != 0)
            swift_release();
          v202 = a1 + *(int *)(v201 + 20);
          v203 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 8))(v202, v203);
        }
        v176 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
LABEL_166:
        StepResults = (int *)v176;
        v204 = a1 + *(int *)(v176 + 20);
        v205 = type metadata accessor for TranscriptProtoStatementID(0);
        v206 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 48);
        if (!v206(v204, 1, v205))
        {
          swift_bridgeObjectRelease();
          v207 = v204 + *(int *)(v205 + 24);
          v208 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 8))(v207, v208);
        }
        v209 = a1 + StepResults[6];
        if (v206(v209, 1, v205))
          goto LABEL_437;
        swift_bridgeObjectRelease();
        v210 = v209 + *(int *)(v205 + 24);
        goto LABEL_436;
      case 0x28u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v211 = a1 + DecorationResult[8];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8)
                                                                       + 48))(v211, 1, DecorationToolRetrievalResponse))
        {
          goto LABEL_363;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v213 = *(int *)(DecorationToolRetrievalResponse + 36);
        goto LABEL_361;
      case 0x2Au:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v214 = a1 + StepResults[5];
        v215 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 48))(v214, 1, v215))
        {
          swift_bridgeObjectRelease();
          v216 = v214 + *(int *)(v215 + 24);
          v217 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v217 - 8) + 8))(v216, v217);
        }
        v11 = a1 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v11, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_437;
        }
        DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                        + 48))(v11, 1, DecorationPrePlannerPayloadEnum))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
              goto LABEL_432;
            case 1u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
              goto LABEL_432;
            case 2u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
              goto LABEL_432;
            case 3u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
              goto LABEL_432;
            case 4u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
              goto LABEL_432;
            case 5u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
              goto LABEL_432;
            default:
              goto LABEL_434;
          }
        }
        goto LABEL_434;
      default:
        goto LABEL_439;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v123 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v124 = (_QWORD *)(v11 + v123[6]);
        v125 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48))(v124, 1, v125))
        {
          if ((~*v124 & 0xF000000000000007) != 0)
            swift_release();
          v126 = (char *)v124 + *(int *)(v125 + 20);
          v127 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v127 - 8) + 8))(v126, v127);
        }
        v128 = v11 + v123[7];
        v129 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 48))(v128, 1, v129))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v130 = v128 + *(int *)(v129 + 28);
          v131 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(v130, v131);
        }
        v132 = v123[8];
        goto LABEL_433;
      case 1u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_432;
      case 2u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_432;
      case 3u:
        swift_bridgeObjectRelease();
        v290 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_267;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v132 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_433;
      case 5u:
        swift_bridgeObjectRelease();
        v290 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_267:
        v291 = v290;
        v292 = (_QWORD *)(v11 + *(int *)(v290 + 24));
        v293 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v293 - 8) + 48))(v292, 1, v293))
        {
          if ((~*v292 & 0xF000000000000007) != 0)
            swift_release();
          v294 = (char *)v292 + *(int *)(v293 + 20);
          v295 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v295 - 8) + 8))(v294, v295);
        }
        v132 = *(int *)(v291 + 28);
        goto LABEL_433;
      case 6u:
        swift_bridgeObjectRelease();
        v296 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v297 = (_QWORD *)(v11 + *(int *)(v296 + 20));
        v298 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v298 - 8) + 48))(v297, 1, v298))
        {
          if ((~*v297 & 0xF000000000000007) != 0)
            swift_release();
          v299 = (char *)v297 + *(int *)(v298 + 20);
          v300 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v300 - 8) + 8))(v299, v300);
        }
        v132 = *(int *)(v296 + 24);
        goto LABEL_433;
      case 7u:
        v301 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v301 - 8) + 48))(v11, 1, v301))
          goto LABEL_431;
        v302 = swift_getEnumCaseMultiPayload();
        if (v302 != 2)
        {
          if (v302 == 1)
          {
            v303 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (v302)
              goto LABEL_431;
            v303 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_430:
          v448 = v11 + *(int *)(v303 + 20);
          v449 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v449 - 8) + 8))(v448, v449);
LABEL_431:
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_432:
          v132 = *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
LABEL_433:
          v450 = v11 + v132;
          v451 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v451 - 8) + 8))(v450, v451);
LABEL_434:
          v17 = *(int *)(DecorationPrePlannerResultPayload + 20);
LABEL_435:
          v210 = v11 + v17;
LABEL_436:
          v452 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v452 - 8) + 8))(v210, v452);
LABEL_437:
          v23 = StepResults[7];
          goto LABEL_438;
        }
        v336 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v336 - 8) + 48))(v11, 1, v336))
          goto LABEL_429;
        v337 = swift_getEnumCaseMultiPayload();
        if (v337 == 1)
        {
          v443 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v443 - 8) + 48))(v11, 1, v443))
          {
            v444 = v11 + *(int *)(v443 + 20);
            v445 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v445 - 8) + 8))(v444, v445);
          }
          v338 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v337)
          {
LABEL_429:
            v303 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_430;
          }
          swift_bridgeObjectRelease();
          v338 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v446 = v11 + *(int *)(v338 + 20);
        v447 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v447 - 8) + 8))(v446, v447);
        goto LABEL_429;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v132 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_433;
      case 9u:
        v304 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v304 - 8) + 48))(v11, 1, v304))
        {
          v305 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v305 - 8) + 48))(v11, 1, v305))
          {
            v306 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 48))(v11, 16, v306))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v307 = v11 + *(int *)(v306 + 28);
              v308 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 8))(v307, v308);
            }
          }
          v309 = v11 + *(int *)(v304 + 20);
          v310 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v310 - 8) + 8))(v309, v310);
        }
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_432;
      case 0xAu:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_432;
      default:
        goto LABEL_434;
    }
  }
LABEL_439:
  v455 = a1 + *(int *)(a2 + 20);
  v456 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v456 - 8) + 8))(v455, v456);
}

_BYTE *initializeWithCopy for TranscriptProtoPayload(_BYTE *a1, _BYTE *a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(_QWORD *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unsigned int (**v62)(const void *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unsigned int (*v80)(_QWORD *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unsigned int (*v89)(_QWORD *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t Step;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(_QWORD *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(_QWORD *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  void (*v117)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(_BYTE *, uint64_t, uint64_t);
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(_QWORD *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(_QWORD *, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  void (*v158)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v159;
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  void (*v163)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  void (*v168)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int (*v179)(_BYTE *, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE *v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  int *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  unsigned int (*v206)(char *, uint64_t, uint64_t);
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  unsigned int (*v217)(_QWORD *, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int (*v221)(_QWORD *, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  unsigned int (*v230)(_QWORD *, uint64_t, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _BYTE *v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v239;
  uint64_t v240;
  unsigned int (**v241)(_BYTE *, uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int *v245;
  uint64_t v246;
  _QWORD *v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  unsigned int (*v251)(_QWORD, _QWORD, _QWORD);
  uint64_t v252;
  uint64_t v253;
  int *v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  unsigned int (*v260)(_BYTE *, uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t DecorationToolRetrievalResponse;
  unsigned int (*v274)(_QWORD *, uint64_t, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  _QWORD *v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int (*v282)(_QWORD *, uint64_t, uint64_t);
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int *v288;
  uint64_t v289;
  void (*v290)(char *, char *, uint64_t);
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  _QWORD *v294;
  uint64_t v295;
  unsigned int (**v296)(_QWORD *, uint64_t, uint64_t);
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  void (*v301)(char *, char *, uint64_t);
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  _BYTE *v307;
  _BYTE *v308;
  uint64_t v309;
  void (*v310)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  void (*v318)(char *, char *, uint64_t);
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  _BYTE *v333;
  _BYTE *v334;
  uint64_t v335;
  void (*v336)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  void (*v342)(char *, char *, uint64_t);
  uint64_t v343;
  _BYTE *v344;
  _BYTE *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void (*v351)(char *, char *, uint64_t);
  uint64_t v352;
  uint64_t v353;
  _BYTE *v354;
  _BYTE *v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(char *, char *, uint64_t);
  uint64_t v370;
  uint64_t v371;
  _BYTE *v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  void (*v379)(char *, char *, uint64_t);
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  _QWORD *v383;
  _QWORD *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  _BYTE *v390;
  _BYTE *v391;
  uint64_t v392;
  void (*v393)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v394;
  uint64_t v395;
  _QWORD *v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  unsigned int (**v402)(const void *, uint64_t, uint64_t);
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void (*v408)(char *, char *, uint64_t);
  uint64_t v409;
  _BYTE *v410;
  _BYTE *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  void (*v420)(char *, char *, uint64_t);
  uint64_t v421;
  int *v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  int *v443;
  void (*v444)(char *, char *, uint64_t);
  uint64_t v445;
  uint64_t v446;
  _QWORD *v447;
  _QWORD *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  void (*v454)(char *, char *, uint64_t);
  uint64_t v455;
  uint64_t v456;
  _QWORD *v457;
  _QWORD *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  _BYTE *v462;
  _BYTE *v463;
  uint64_t v464;
  uint64_t v465;
  _QWORD *v466;
  uint64_t *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  _BYTE *v473;
  _BYTE *v474;
  uint64_t v475;
  uint64_t v476;
  _QWORD *v477;
  _QWORD *v478;
  uint64_t v479;
  uint64_t v480;
  unsigned int (*v481)(_BYTE *, uint64_t, uint64_t);
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  void (*v488)(char *, char *, uint64_t);
  uint64_t v489;
  _BYTE *v490;
  _BYTE *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  char *v495;
  char *v496;
  uint64_t v497;
  void (*v498)(char *, char *, uint64_t);
  char *v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _DWORD *v508;
  _DWORD *v509;
  uint64_t v510;
  unsigned int (*v511)(_DWORD *, uint64_t, uint64_t);
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  void (*v518)(char *, char *, uint64_t);
  char *v519;
  uint64_t v520;
  uint64_t v521;
  _BYTE *v522;
  _BYTE *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  char *v527;
  uint64_t v528;
  void (*v529)(char *, char *, uint64_t);
  uint64_t v530;
  _BYTE *v531;
  _BYTE *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  char *v538;
  uint64_t v539;
  uint64_t v540;
  int *v541;
  void (*v542)(char *, char *, uint64_t);
  char *v543;
  uint64_t v544;
  uint64_t v545;
  _BYTE *v546;
  _BYTE *v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  void (*v554)(char *, char *, uint64_t);
  uint64_t v555;
  uint64_t v556;
  _BYTE *v557;
  _BYTE *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char *v562;
  char *v563;
  uint64_t v564;
  uint64_t v565;
  _QWORD *v566;
  _QWORD *v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  void (*v575)(char *, char *, uint64_t);
  uint64_t v576;
  uint64_t v577;
  _QWORD *v578;
  _QWORD *v579;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  void (*v586)(char *, char *, uint64_t);
  uint64_t v587;
  char *v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  _BYTE *v595;
  _BYTE *v596;
  uint64_t v597;
  uint64_t v598;
  _BYTE *v599;
  _BYTE *v600;
  uint64_t v601;
  int EnumCaseMultiPayload;
  uint64_t v603;
  uint64_t v604;
  _BYTE *v605;
  uint64_t v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  char *v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  char *v614;
  uint64_t v615;
  uint64_t v616;
  _QWORD *v617;
  _QWORD *v618;
  uint64_t v619;
  uint64_t v620;
  _QWORD *v621;
  _QWORD *v622;
  uint64_t v623;
  _QWORD *v624;
  unsigned int (*v625)(_QWORD *, uint64_t, uint64_t);
  uint64_t v626;
  int *v627;
  uint64_t v628;
  char *v629;
  char *v630;
  uint64_t v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  _BYTE *v637;
  _BYTE *v638;
  uint64_t v639;
  char *v640;
  char *v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  _QWORD *v648;
  uint64_t v649;
  int *v650;
  _OWORD *v651;
  uint64_t v652;
  void (**v653)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  _BYTE *v658;
  uint64_t v659;
  uint64_t v660;
  _BYTE *v661;
  _BYTE *v662;
  uint64_t v663;
  uint64_t v664;
  _QWORD *v665;
  _QWORD *v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  char *v672;
  char *v673;
  uint64_t v674;
  void (*v675)(char *, char *, uint64_t);
  uint64_t v676;
  _QWORD *v677;
  _QWORD *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  int v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  void (*v692)(char *, char *, uint64_t);
  uint64_t v693;
  char *v694;
  char *v695;
  uint64_t v696;
  uint64_t v697;
  char *v698;
  char *v699;
  uint64_t v700;
  uint64_t v701;
  _QWORD *v702;
  _QWORD *v703;
  uint64_t v704;
  uint64_t v705;
  _QWORD *v706;
  _QWORD *v707;
  uint64_t v708;
  uint64_t v709;
  unsigned int (*v710)(_QWORD *, uint64_t, uint64_t);
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  uint64_t v716;
  void (*v717)(char *, char *, uint64_t);
  int *v718;
  uint64_t v719;
  _QWORD *v720;
  _QWORD *v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  int v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  char *v735;
  char *v736;
  uint64_t v737;
  uint64_t v738;
  _QWORD *v739;
  _QWORD *v740;
  uint64_t v741;
  _QWORD *v742;
  unsigned int (*v743)(_QWORD, _QWORD, _QWORD);
  uint64_t v744;
  int *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  _QWORD *v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  __int128 v755;
  _QWORD *v756;
  uint64_t v757;
  uint64_t v758;
  char *v759;
  uint64_t v760;
  uint64_t v761;
  char *v762;
  char *v763;
  uint64_t v764;
  uint64_t v765;
  _QWORD *v766;
  _QWORD *v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  _QWORD *v774;
  uint64_t v775;
  uint64_t v776;
  void (**v777)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v778;
  __int128 v779;
  _QWORD *v780;
  uint64_t v781;
  uint64_t v782;
  char *v783;
  uint64_t v784;
  uint64_t v785;
  char *v786;
  char *v787;
  uint64_t v788;
  uint64_t v789;
  _BYTE *v790;
  _BYTE *v791;
  uint64_t v792;
  uint64_t v793;
  _QWORD *v794;
  _QWORD *v795;
  unsigned int (*v796)(_BYTE *, uint64_t, uint64_t);
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  void (*v802)(char *, char *, uint64_t);
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  void (*v811)(char *, char *, uint64_t);
  uint64_t v812;
  uint64_t v813;
  _BYTE *v814;
  _BYTE *v815;
  uint64_t v816;
  uint64_t v817;
  char *v818;
  char *v819;
  uint64_t v820;
  uint64_t v821;
  _BYTE *v822;
  _BYTE *v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  char *v829;
  uint64_t v830;
  uint64_t v831;
  char *v832;
  char *v833;
  uint64_t v834;
  uint64_t v835;
  _BYTE *v836;
  _BYTE *v837;
  uint64_t v838;
  uint64_t v839;
  _BYTE *v840;
  _BYTE *v841;
  uint64_t v842;
  uint64_t v843;
  char *v844;
  char *v845;
  uint64_t v846;
  uint64_t v847;
  char *v848;
  char *v849;
  uint64_t v850;
  char *v851;
  uint64_t v852;
  char *v853;
  char *v854;
  int *v855;
  unsigned int (**v856)(_QWORD *, uint64_t, int *);
  uint64_t v857;
  uint64_t v858;
  char *v859;
  char *v860;
  uint64_t v861;
  unsigned int (*v862)(char *, uint64_t, uint64_t);
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  void (*v870)(char *, char *, uint64_t);
  uint64_t v871;
  char *v872;
  char *v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  char *v881;
  char *v882;
  uint64_t v883;
  uint64_t v884;
  char *v885;
  char *v886;
  uint64_t v887;
  uint64_t v888;
  char *v889;
  char *v890;
  uint64_t v891;
  void (*v892)(char *, char *, uint64_t);
  uint64_t v893;
  char *v894;
  char *v895;
  uint64_t v896;
  int *v897;
  uint64_t v898;
  _QWORD *v899;
  _QWORD *v900;
  uint64_t v901;
  uint64_t v902;
  unsigned int (*v903)(_BYTE *, uint64_t, uint64_t);
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  char *v907;
  uint64_t v908;
  uint64_t v909;
  void (*v910)(char *, char *, uint64_t);
  char *v911;
  uint64_t v912;
  uint64_t v913;
  _QWORD *v914;
  _QWORD *v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  char *v919;
  uint64_t v920;
  uint64_t v921;
  void (*v922)(char *, char *, uint64_t);
  char *v923;
  uint64_t v924;
  uint64_t v925;
  _QWORD *v926;
  _QWORD *v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  char *v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  void (*v935)(char *, char *, uint64_t);
  char *v936;
  uint64_t v937;
  uint64_t v938;
  _BYTE *v939;
  _BYTE *v940;
  uint64_t v941;
  uint64_t v942;
  char *v943;
  char *v944;
  uint64_t v945;
  uint64_t v946;
  char *v947;
  char *v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  char *v954;
  uint64_t v955;
  char *v956;
  char *v957;
  uint64_t v958;
  uint64_t v959;
  _QWORD *v960;
  _QWORD *v961;
  uint64_t v962;
  uint64_t v963;
  _QWORD *v964;
  _QWORD *v965;
  uint64_t v966;
  uint64_t v967;
  unsigned int (*v968)(_QWORD *, uint64_t, uint64_t);
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  void (*v973)(char *, char *, uint64_t);
  uint64_t v974;
  _BYTE *v975;
  _BYTE *v976;
  uint64_t v977;
  uint64_t v978;
  _BYTE *v979;
  _BYTE *v980;
  uint64_t v981;
  int *v982;
  uint64_t v983;
  _QWORD *v984;
  _QWORD *v985;
  uint64_t v986;
  uint64_t v987;
  _QWORD *v988;
  _QWORD *v989;
  uint64_t v990;
  uint64_t v991;
  unsigned int (*v992)(_QWORD *, uint64_t, uint64_t);
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  void (*v997)(char *, char *, uint64_t);
  uint64_t v998;
  _BYTE *v999;
  _BYTE *v1000;
  uint64_t v1001;
  uint64_t v1002;
  _BYTE *v1003;
  _BYTE *v1004;
  uint64_t v1005;
  uint64_t v1007;
  char *v1008;
  char *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _QWORD *v1012;
  _QWORD *v1013;
  uint64_t v1014;
  unsigned int (**v1015)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1016;
  uint64_t v1017;
  char *v1018;
  char *v1019;
  uint64_t v1020;
  unsigned int (*v1021)(char *, uint64_t, int *);
  int *v1022;
  char *v1023;
  uint64_t v1024;
  int *v1025;
  uint64_t v1026;
  uint64_t v1027;
  char *v1028;
  char *v1029;
  char *v1030;
  uint64_t v1031;
  char *v1032;
  char *v1033;
  uint64_t v1034;
  uint64_t v1035;
  char *v1036;
  char *v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  char *v1041;
  uint64_t v1042;
  char *v1043;
  char *v1044;
  uint64_t v1045;
  uint64_t v1046;
  char *v1047;
  char *v1048;
  uint64_t v1049;
  uint64_t v1050;
  _QWORD *v1051;
  _QWORD *v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  char *v1058;
  char *v1059;
  uint64_t v1060;
  void (*v1061)(char *, char *, uint64_t);
  char *v1062;
  uint64_t v1063;
  uint64_t v1064;
  _QWORD *v1065;
  _QWORD *v1066;
  uint64_t v1067;
  uint64_t v1068;
  _BYTE *v1069;
  _BYTE *v1070;
  uint64_t v1071;
  void (*v1072)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v1073;
  void (*v1074)(char *, char *, uint64_t);
  _QWORD *__src;
  char *__srca;
  char *__srcb;
  _QWORD *v1078;
  char *v1079;
  void (*v1080)(char *, char *, uint64_t);
  char *v1081;
  char *v1082;
  unsigned int (**v1083)(const void *, uint64_t, uint64_t);
  _QWORD *v1084;
  void (*v1085)(char *, char *, uint64_t);
  _QWORD *v1086;
  _QWORD *v1087;
  _QWORD *v1088;
  char *v1089;
  _QWORD *v1090;
  unsigned int (*v1091)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v1092;
  int *v1093;
  char *v1094;
  int *v1095;
  _QWORD *v1096;
  void (**v1097)(char *, _QWORD, uint64_t, int *);
  int *v1098;
  void *v1099;
  _QWORD *v1100;
  char *v1101;
  unsigned int (*v1102)(_QWORD *, uint64_t, uint64_t);
  char *v1103;
  unsigned int (*v1104)(_QWORD *, uint64_t, uint64_t);
  char *v1105;
  _QWORD *v1106;
  void (**v1107)(char *, _QWORD, uint64_t, int *);
  char *v1108;
  void *v1109;
  unsigned int (*v1110)(_QWORD *, uint64_t, int *);
  _QWORD *v1111;
  char *v1112;
  void *v1113;
  char *v1114;
  char *v1115;
  unsigned int (*v1116)(char *, uint64_t, int *);
  _QWORD *v1117;
  int *v1118;
  char *v1119;
  char *v1120;
  _QWORD *v1121;
  char *v1122;
  _BYTE *v1123;
  void *v1124;
  char *v1125;
  int *v1126;
  char *v1127;
  _QWORD *v1128;
  void *v1129;
  void *v1130;
  char *v1131;
  char *v1132;
  void *v1133;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  char *__dsti;
  char *__dstj;
  unsigned int (**__dstd)(const void *, uint64_t, uint64_t);
  char *__dstk;
  char *__dstl;
  char *__dstm;
  char *__dstn;
  char *__dsto;
  char *__dstp;
  void *__dste;
  char *__dstq;
  char *__dstr;
  void *__dstf;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  char *__dstv;
  char *__dstw;
  _BYTE *__dstx;
  _BYTE *__dsty;
  _BYTE *__dstz;
  unsigned int (*__dstg)(_QWORD *, uint64_t, uint64_t);
  char *__dstba;
  char *__dstbb;
  char *__dstbc;
  char *__dstbd;
  char *__dstbe;
  char *__dstbf;
  char *__dstbg;
  char *__dstbh;
  int *__dsth;
  _BYTE *v1169;
  _BYTE *v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t StepResults;
  uint64_t v1175;
  _BYTE *v1176;
  _BYTE *v1177;
  _BYTE *v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  _BYTE *v1182;
  uint64_t DecorationResult;
  int *DecorationPrePlannerResult;
  char *v1185;
  char *v1186;
  char *v1187;
  char *v1188;
  int *v1189;
  unsigned int (*v1190)(_QWORD, _QWORD, _QWORD);
  char *v1191;
  int *v1192;
  char *v1193;
  uint64_t v1194;
  char *v1195;
  uint64_t v1196;
  char *v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  char *v1202;
  char *v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;

  v28 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v1236 = v29;
        *a1 = *a2;
        v31 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v32 = v31[5];
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v1212 = a3;
          v1232 = v28;
          v284 = v34[1];
          *v33 = *v34;
          v33[1] = v284;
          v285 = v34[3];
          v33[2] = v34[2];
          v33[3] = v285;
          v286 = v34[5];
          v33[4] = v34[4];
          v33[5] = v286;
          v287 = *(int *)(v35 + 28);
          v1185 = (char *)v33 + v287;
          __dsti = (char *)v34 + v287;
          v288 = v31;
          v289 = sub_2408E57A4();
          v290 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 16);
          v28 = v1232;
          swift_bridgeObjectRetain();
          a3 = v1212;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v291 = v289;
          v31 = v288;
          v290(v1185, __dsti, v291);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v292 = v31[6];
        v293 = &a1[v292];
        v294 = &a2[v292];
        v295 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        v296 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v295 - 8);
        if (v296[6](v294, 1, v295))
        {
          v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
          memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
        }
        else
        {
          __dstf = v296;
          v1192 = v31;
          v1215 = a3;
          v1234 = v28;
          v506 = v294[1];
          *v293 = *v294;
          v293[1] = v506;
          v507 = *(int *)(v295 + 20);
          v508 = (_DWORD *)((char *)v293 + v507);
          v509 = (_DWORD *)((char *)v294 + v507);
          v510 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          v1121 = *(_QWORD **)(v510 - 8);
          v511 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))v1121[6];
          swift_bridgeObjectRetain();
          if (v511(v509, 1, v510))
          {
            v512 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
            memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v512 - 8) + 64));
          }
          else
          {
            *v508 = *v509;
            v628 = *(int *)(v510 + 20);
            v629 = (char *)v508 + v628;
            v630 = (char *)v509 + v628;
            v631 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v631 - 8) + 16))(v629, v630, v631);
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))v1121[7])(v508, 0, 1, v510);
          }
          a3 = v1215;
          v632 = *(int *)(v295 + 24);
          v633 = (char *)v293 + v632;
          v634 = (char *)v294 + v632;
          v635 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v635 - 8) + 16))(v633, v634, v635);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstf + 7))(v293, 0, 1, v295);
          v28 = v1234;
          v31 = v1192;
        }
        v636 = v31[7];
        v637 = &a1[v636];
        v638 = &a2[v636];
        v639 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v639 - 8) + 16))(v637, v638, v639);
        goto LABEL_284;
      case 1u:
        v1216 = v28;
        v1236 = v29;
        v38 = a3;
        v39 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v39;
        a1[16] = a2[16];
        v40 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v41 = v40[6];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = type metadata accessor for TranscriptProtoStatementID(0);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48);
        swift_bridgeObjectRetain();
        if (v46(v43, 1, v44))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v42 = *(_DWORD *)v43;
          v298 = v43[2];
          v42[1] = v43[1];
          v42[2] = v298;
          v299 = *(int *)(v44 + 24);
          v1186 = (char *)v42 + v299;
          __dstj = (char *)v43 + v299;
          v300 = sub_2408E57A4();
          v301 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 16);
          swift_bridgeObjectRetain();
          v301(v1186, __dstj, v300);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        a3 = v38;
        v302 = v40[7];
        v303 = &a1[v302];
        v304 = &a2[v302];
        v305 = v304[1];
        *v303 = *v304;
        v303[1] = v305;
        v306 = v40[8];
        v307 = &a1[v306];
        v308 = &a2[v306];
        v309 = sub_2408E57A4();
        v310 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v309 - 8) + 16);
        swift_bridgeObjectRetain();
        v310(v307, v308, v309);
        v28 = v1216;
        goto LABEL_284;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v48 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v48;
        v49 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v1169 = &a1[v49];
        v50 = &a2[v49];
        v51 = a2;
        v52 = v29;
        v53 = sub_2408E57A4();
        v54 = v28;
        v55 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56 = v53;
        v29 = v52;
        a2 = v51;
        v55(v1169, v50, v56);
        v28 = v54;
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 3u:
        v1236 = v29;
        *a1 = *a2;
        v57 = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v58 = v57[5];
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = type metadata accessor for TranscriptProtoRequestContent(0);
        v62 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v61 - 8);
        v1204 = a3;
        if (v62[6](v60, 1, v61))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          __dstd = v62;
          v311 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v311 - 8) + 48))(v60, 1, v311))
          {
            v588 = (char *)&loc_24059A238 + 4 * word_240901E86[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v312 - 8) + 64));
          v942 = *(int *)(v61 + 20);
          v943 = &v59[v942];
          v944 = &v60[v942];
          v945 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v945 - 8) + 16))(v943, v944, v945);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstd[7])(v59, 0, 1, v61);
        }
        v946 = v57[6];
        v947 = &a1[v946];
        v948 = &a2[v946];
        v949 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        v950 = *(_QWORD *)(v949 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v950 + 48))(v948, 1, v949))
        {
          v951 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
          memcpy(v947, v948, *(_QWORD *)(*(_QWORD *)(v951 - 8) + 64));
        }
        else
        {
          v952 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v952 - 8) + 48))(v948, 1, v952))
          {
            v954 = (char *)&loc_24059EA54 + 4 * byte_240901E8E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v953 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
          memcpy(v947, v948, *(_QWORD *)(*(_QWORD *)(v953 - 8) + 64));
          v955 = *(int *)(v949 + 20);
          v956 = &v947[v955];
          v957 = &v948[v955];
          v958 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v958 - 8) + 16))(v956, v957, v958);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v950 + 56))(v947, 0, 1, v949);
        }
        v959 = v57[7];
        v960 = &a1[v959];
        v961 = &a2[v959];
        v962 = v961[1];
        *v960 = *v961;
        v960[1] = v962;
        v963 = v57[8];
        v964 = &a1[v963];
        v965 = &a2[v963];
        v966 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v967 = *(_QWORD *)(v966 - 8);
        v968 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v967 + 48);
        swift_bridgeObjectRetain();
        if (v968(v965, 1, v966))
        {
          v969 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v964, v965, *(_QWORD *)(*(_QWORD *)(v969 - 8) + 64));
        }
        else
        {
          v970 = v965[1];
          *v964 = *v965;
          v964[1] = v970;
          v964[2] = v965[2];
          v971 = *(int *)(v966 + 24);
          v1132 = (char *)v965 + v971;
          __dstbg = (char *)v964 + v971;
          v972 = sub_2408E57A4();
          v973 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v972 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v973(__dstbg, v1132, v972);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v967 + 56))(v964, 0, 1, v966);
        }
        a3 = v1204;
        v974 = v57[9];
        v975 = &a1[v974];
        v976 = &a2[v974];
        v977 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v977 - 8) + 16))(v975, v976, v977);
        goto LABEL_284;
      case 4u:
        v64 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v64;
        v65 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v65;
        v66 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v66;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        a1[56] = a2[56];
        v67 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v1170 = &a1[v67];
        v1217 = v28;
        v68 = &a2[v67];
        v1237 = v29;
        v69 = a3;
        v70 = sub_2408E57A4();
        v71 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72 = v68;
        v73 = v70;
        a3 = v69;
        v28 = v1217;
        v29 = v1237;
        v71(v1170, v72, v73);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 5u:
        v1218 = v28;
        v1236 = v29;
        v74 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v74;
        a1[16] = a2[16];
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v75 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v76 = v75[7];
        v77 = &a1[v76];
        v78 = &a2[v76];
        v79 = type metadata accessor for TranscriptProtoStatementID(0);
        v1171 = *(_QWORD *)(v79 - 8);
        v80 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1171 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v80(v78, 1, v79))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v77 = *(_DWORD *)v78;
          v313 = v78[2];
          v77[1] = v78[1];
          v77[2] = v313;
          v314 = *(int *)(v79 + 24);
          v315 = (char *)v77 + v314;
          __dstk = (char *)v78 + v314;
          v316 = a3;
          v317 = sub_2408E57A4();
          v318 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 16);
          swift_bridgeObjectRetain();
          v319 = v317;
          a3 = v316;
          v318(v315, __dstk, v319);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1171 + 56))(v77, 0, 1, v79);
        }
        v320 = v75[8];
        v321 = &a1[v320];
        v322 = &a2[v320];
        v323 = v322[1];
        *v321 = *v322;
        v321[1] = v323;
        v324 = v75[9];
        v325 = &a1[v324];
        v326 = &a2[v324];
        v327 = v326[1];
        *v325 = *v326;
        v325[1] = v327;
        v328 = v75[10];
        v329 = &a1[v328];
        v330 = &a2[v328];
        v331 = v330[1];
        *v329 = *v330;
        v329[1] = v331;
        v332 = v75[11];
        v333 = &a1[v332];
        v334 = &a2[v332];
        v335 = sub_2408E57A4();
        v336 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v335 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v336(v333, v334, v335);
        v28 = v1218;
        goto LABEL_284;
      case 6u:
        v1236 = v29;
        v1205 = a3;
        v82 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v82;
        v83 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v83;
        v84 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v84;
        v85 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v85;
        v1172 = type metadata accessor for TranscriptProtoClientAction(0);
        v86 = *(int *)(v1172 + 36);
        __dst = &a1[v86];
        v87 = &a2[v86];
        v88 = type metadata accessor for TranscriptProtoStatementID(0);
        v1117 = *(_QWORD **)(v88 - 8);
        v89 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1117[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89(v87, 1, v88))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v87;
          v337 = v87[2];
          __dst[1] = v87[1];
          __dst[2] = v337;
          v338 = *(int *)(v88 + 24);
          v339 = (char *)__dst + v338;
          v340 = (char *)v87 + v338;
          v341 = sub_2408E57A4();
          v342 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16);
          swift_bridgeObjectRetain();
          v342(v339, v340, v341);
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1117[7])(__dst, 0, 1, v88);
        }
        a3 = v1205;
        v343 = *(int *)(v1172 + 40);
        v344 = &a1[v343];
        v345 = &a2[v343];
        v346 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v344, v345, v346);
        goto LABEL_284;
      case 7u:
        v1219 = v28;
        v1236 = v29;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        v92 = *(int *)(Step + 20);
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = type metadata accessor for TranscriptProtoStatementID(0);
        v96 = *(_QWORD *)(v95 - 8);
        v97 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v96 + 48);
        swift_bridgeObjectRetain();
        if (v97(v94, 1, v95))
          goto LABEL_18;
        goto LABEL_80;
      case 8u:
        v1219 = v28;
        v1236 = v29;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
        v99 = *(int *)(Step + 20);
        v93 = &a1[v99];
        v94 = &a2[v99];
        v95 = type metadata accessor for TranscriptProtoStatementID(0);
        v96 = *(_QWORD *)(v95 - 8);
        v100 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v96 + 48);
        swift_bridgeObjectRetain();
        if (v100(v94, 1, v95))
        {
LABEL_18:
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
LABEL_80:
          *(_DWORD *)v93 = *(_DWORD *)v94;
          v347 = v94[2];
          v93[1] = v94[1];
          v93[2] = v347;
          v348 = *(int *)(v95 + 24);
          v1187 = (char *)v93 + v348;
          __dstl = (char *)v94 + v348;
          v349 = a3;
          v350 = sub_2408E57A4();
          v351 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 16);
          swift_bridgeObjectRetain();
          v352 = v350;
          a3 = v349;
          v351(v1187, __dstl, v352);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
        }
        v353 = *(int *)(Step + 24);
        v354 = &a1[v353];
        v355 = &a2[v353];
        v356 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v354, v355, v356);
        v28 = v1219;
        goto LABEL_284;
      case 9u:
        v101 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v101;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0xAu:
        v102 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(a2, 1, v102))
        {
          v357 = (char *)&loc_240598F40 + 4 * word_240901E7E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        v839 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v840 = &a1[v839];
        v841 = &a2[v839];
        v842 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v842 - 8) + 16))(v840, v841, v842);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0xBu:
        v104 = a3;
        v105 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        v106 = *(_QWORD *)(v105 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v106 + 48))(a2, 1, v105))
        {
          v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          v358 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          v359 = *(_QWORD *)(v358 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v359 + 48))(a2, 1, v358))
          {
            v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
          }
          else
          {
            v1198 = *((_QWORD *)a2 + 1);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *((_QWORD *)a1 + 1) = v1198;
            v589 = *((_QWORD *)a2 + 3);
            *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
            *((_QWORD *)a1 + 3) = v589;
            v1241 = v29;
            v590 = *((_QWORD *)a2 + 5);
            *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
            *((_QWORD *)a1 + 5) = v590;
            v591 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v1123 = &a2[v591];
            __dstx = &a1[v591];
            v1235 = v28;
            v592 = sub_2408E57A4();
            v1109 = *(void **)(*(_QWORD *)(v592 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v29 = v1241;
            swift_bridgeObjectRetain();
            v593 = v592;
            v28 = v1235;
            ((void (*)(_BYTE *, _BYTE *, uint64_t))v1109)(__dstx, v1123, v593);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v359 + 56))(a1, 0, 1, v358);
          }
          v594 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v595 = &a1[v594];
          v596 = &a2[v594];
          v597 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v597 - 8) + 16))(v595, v596, v597);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v106 + 56))(a1, 0, 1, v105);
        }
        v598 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v599 = &a1[v598];
        v600 = &a2[v598];
        v601 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v601 - 8) + 16))(v599, v600, v601);
        swift_storeEnumTagMultiPayload();
        a3 = v104;
        goto LABEL_286;
      case 0xCu:
        v108 = *(_QWORD *)a2;
        v109 = *((_QWORD *)a2 + 1);
        sub_240360070(*(_QWORD *)a2, v109);
        *(_QWORD *)a1 = v108;
        *((_QWORD *)a1 + 1) = v109;
        v110 = *((_QWORD *)a2 + 2);
        v111 = *((_QWORD *)a2 + 3);
        sub_240360070(v110, v111);
        *((_QWORD *)a1 + 2) = v110;
        *((_QWORD *)a1 + 3) = v111;
        v112 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v112;
        v113 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v114 = &a1[v113];
        v115 = &a2[v113];
        v116 = sub_2408E57A4();
        v117 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v117(v114, v115, v116);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0xDu:
        v1220 = v28;
        v1236 = v29;
        v1206 = a3;
        v118 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v118;
        v119 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v119;
        v1173 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v120 = *(int *)(v1173 + 24);
        v121 = &a1[v120];
        v122 = &a2[v120];
        v123 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        v124 = *(_QWORD *)(v123 - 8);
        v125 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v124 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v125(v122, 1, v123))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
          v127 = (int *)v1173;
        }
        else
        {
          v361 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          v362 = *(_QWORD *)(v361 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v362 + 48))(v122, 1, v361))
          {
            v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
            memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
            v127 = (int *)v1173;
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v127 = (int *)v1173;
            switch(EnumCaseMultiPayload)
            {
              case 6:
                v656 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v656 - 8) + 16))(v121, v122, v656);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *v121 = *v122;
                v657 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                              + 20);
                v658 = &v121[v657];
                __dstz = &v122[v657];
                v659 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v659 - 8) + 16))(v658, __dstz, v659);
                swift_storeEnumTagMultiPayload();
                break;
              case 1:
                v603 = *(_QWORD *)v122;
                if ((~*(_QWORD *)v122 & 0xF000000000000007) != 0)
                  swift_retain();
                *(_QWORD *)v121 = v603;
                v604 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                v605 = &v121[v604];
                __dsty = &v122[v604];
                v606 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v606 - 8) + 16))(v605, __dsty, v606);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v121, v122, *(_QWORD *)(v362 + 64));
                break;
            }
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v362 + 56))(v121, 0, 1, v361);
          }
          v660 = *(int *)(v123 + 20);
          v661 = &v121[v660];
          v662 = &v122[v660];
          v663 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v663 - 8) + 16))(v661, v662, v663);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
        }
        v664 = v127[7];
        v665 = &a1[v664];
        v666 = &a2[v664];
        v667 = type metadata accessor for TranscriptProtoStatementID(0);
        v668 = *(_QWORD *)(v667 - 8);
        __dstg = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v668 + 48);
        if (__dstg(v666, 1, v667))
        {
          v669 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v665, v666, *(_QWORD *)(*(_QWORD *)(v669 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v665 = *(_DWORD *)v666;
          v670 = v666[2];
          v665[1] = v666[1];
          v665[2] = v670;
          v671 = *(int *)(v667 + 24);
          v672 = (char *)v665 + v671;
          v673 = (char *)v666 + v671;
          v674 = sub_2408E57A4();
          v675 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v674 - 8) + 16);
          swift_bridgeObjectRetain();
          v675(v672, v673, v674);
          v127 = (int *)v1173;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v668 + 56))(v665, 0, 1, v667);
        }
        v676 = v127[8];
        v677 = &a1[v676];
        v678 = &a2[v676];
        v679 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        v680 = *(_QWORD *)(v679 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v680 + 48))(v678, 1, v679))
        {
          v681 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
          memcpy(v677, v678, *(_QWORD *)(*(_QWORD *)(v681 - 8) + 64));
          v28 = v1220;
          goto LABEL_249;
        }
        v1124 = (void *)v668;
        v682 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        v683 = *(_QWORD *)(v682 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v683 + 48))(v678, 1, v682))
        {
          v684 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
          memcpy(v677, v678, *(_QWORD *)(*(_QWORD *)(v684 - 8) + 64));
          goto LABEL_248;
        }
        v685 = swift_getEnumCaseMultiPayload();
        if (v685 == 1)
        {
          *v677 = *v678;
          v690 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v1112 = (char *)v678 + v690;
          v1125 = (char *)v677 + v690;
          v691 = sub_2408E57A4();
          v692 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v691 - 8) + 16);
          swift_bridgeObjectRetain();
          v692(v1125, v1112, v691);
          v127 = (int *)v1173;
        }
        else
        {
          if (v685)
          {
            memcpy(v677, v678, *(_QWORD *)(v683 + 64));
            goto LABEL_247;
          }
          v686 = v678[1];
          *v677 = *v678;
          v677[1] = v686;
          v687 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v688 = *(int *)(v687 + 20);
          v1093 = (int *)v687;
          v1100 = (_QWORD *)((char *)v677 + v688);
          v1111 = (_QWORD *)((char *)v678 + v688);
          swift_bridgeObjectRetain();
          if (__dstg(v1111, 1, v667))
          {
            v689 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v1100, v1111, *(_QWORD *)(*(_QWORD *)(v689 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v1100 = *(_DWORD *)v1111;
            v825 = v1111[2];
            v1100[1] = v1111[1];
            v1100[2] = v825;
            v826 = *(int *)(v667 + 24);
            __dstbc = (char *)v1100 + v826;
            v1115 = (char *)v1111 + v826;
            v827 = sub_2408E57A4();
            v1080 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v827 - 8) + 16);
            swift_bridgeObjectRetain();
            v1080(__dstbc, v1115, v827);
            v127 = (int *)v1173;
            (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1124 + 7))(v1100, 0, 1, v667);
          }
          v828 = v1093[6];
          v1202 = (char *)v677 + v828;
          v829 = (char *)v678 + v828;
          v830 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v830 - 8) + 16))(v1202, v829, v830);
        }
        swift_storeEnumTagMultiPayload();
LABEL_247:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v683 + 56))(v677, 0, 1, v682);
LABEL_248:
        v28 = v1220;
        v831 = *(int *)(v679 + 20);
        v832 = (char *)v677 + v831;
        v833 = (char *)v678 + v831;
        v834 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v834 - 8) + 16))(v832, v833, v834);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v680 + 56))(v677, 0, 1, v679);
LABEL_249:
        v835 = v127[9];
        v836 = &a1[v835];
        v837 = &a2[v835];
        v838 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v838 - 8) + 16))(v836, v837, v838);
LABEL_250:
        swift_storeEnumTagMultiPayload();
        a3 = v1206;
LABEL_285:
        v29 = v1236;
LABEL_286:
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        break;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v152 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(a1, a2, v152);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0xFu:
        v1221 = v28;
        v1236 = v29;
        v128 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v128;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
        v129 = *(int *)(StepResults + 24);
        v130 = &a1[v129];
        v131 = &a2[v129];
        v132 = type metadata accessor for TranscriptProtoStatementID(0);
        v133 = *(_QWORD *)(v132 - 8);
        v134 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v133 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v134(v131, 1, v132))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v130 = *(_DWORD *)v131;
          v364 = v131[2];
          v130[1] = v131[1];
          v130[2] = v364;
          v365 = *(int *)(v132 + 24);
          v366 = (char *)v130 + v365;
          __dstm = (char *)v131 + v365;
          v367 = a3;
          v368 = sub_2408E57A4();
          v369 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 16);
          swift_bridgeObjectRetain();
          v370 = v368;
          a3 = v367;
          v369(v366, __dstm, v370);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        v371 = *(int *)(StepResults + 28);
        v372 = &a1[v371];
        v373 = &a2[v371];
        v374 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v372, v373, v374);
        v28 = v1221;
        goto LABEL_284;
      case 0x11u:
        v1222 = v28;
        v1236 = v29;
        v136 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v136;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
        v1175 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v137 = *(int *)(v1175 + 36);
        v138 = &a1[v137];
        v139 = &a2[v137];
        v140 = type metadata accessor for TranscriptProtoParameterSet(0);
        v141 = *(_QWORD *)(v140 - 8);
        v142 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v141 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v142(v139, 1, v140))
        {
          v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
          memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        }
        else
        {
          *v138 = *v139;
          v375 = *(int *)(v140 + 20);
          v376 = (char *)v138 + v375;
          __dstn = (char *)v139 + v375;
          v377 = a3;
          v378 = sub_2408E57A4();
          v379 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 16);
          swift_bridgeObjectRetain();
          v380 = v378;
          a3 = v377;
          v379(v376, __dstn, v380);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
        }
        v381 = v1175;
        v382 = *(int *)(v1175 + 40);
        v383 = &a1[v382];
        v384 = &a2[v382];
        v385 = type metadata accessor for TranscriptProtoStatementID(0);
        v386 = *(_QWORD *)(v385 - 8);
        v28 = v1222;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v386 + 48))(v384, 1, v385))
        {
          v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v383, v384, *(_QWORD *)(*(_QWORD *)(v387 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v383 = *(_DWORD *)v384;
          v513 = v384[2];
          v383[1] = v384[1];
          v383[2] = v513;
          v514 = *(int *)(v385 + 24);
          v515 = (char *)v383 + v514;
          __dsts = (char *)v384 + v514;
          v516 = a3;
          v517 = sub_2408E57A4();
          v518 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v517 - 8) + 16);
          v381 = v1175;
          swift_bridgeObjectRetain();
          v519 = v515;
          v28 = v1222;
          v520 = v517;
          a3 = v516;
          v518(v519, __dsts, v520);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v386 + 56))(v383, 0, 1, v385);
        }
        v521 = *(int *)(v381 + 44);
        v522 = &a1[v521];
        v523 = &a2[v521];
        v524 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v524 - 8) + 16))(v522, v523, v524);
        goto LABEL_284;
      case 0x12u:
        v144 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v144;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v145 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v1176 = &a1[v145];
        v146 = &a2[v145];
        v147 = a2;
        v148 = v29;
        v149 = sub_2408E57A4();
        v150 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v151 = v149;
        v29 = v148;
        a2 = v147;
        v150(v1176, v146, v151);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x16u:
        v153 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v153;
        v154 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v155 = &a1[v154];
        v156 = &a2[v154];
        v157 = sub_2408E57A4();
        v158 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v157 - 8) + 16);
        swift_bridgeObjectRetain();
        v158(v155, v156, v157);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x17u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v159 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v160 = &a1[v159];
        v161 = &a2[v159];
        v162 = sub_2408E57A4();
        v163 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
        swift_bridgeObjectRetain();
        v163(v160, v161, v162);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x18u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v164 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v165 = &a1[v164];
        v166 = &a2[v164];
        v167 = sub_2408E57A4();
        v168 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v165, v166, v167);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x19u:
        v169 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v169;
        v170 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v1177 = &a1[v170];
        v171 = &a2[v170];
        v172 = a2;
        v173 = v29;
        v174 = sub_2408E57A4();
        v175 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v176 = v174;
        v29 = v173;
        a2 = v172;
        v175(v1177, v171, v176);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x1Au:
        v1223 = v28;
        v1236 = v29;
        v1206 = a3;
        v177 = type metadata accessor for TranscriptProtoStatementID(0);
        v178 = *(_QWORD *)(v177 - 8);
        v179 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v178 + 48);
        if (v179(a2, 1, v177))
        {
          v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v388 = *((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = v388;
          v389 = *(int *)(v177 + 24);
          v390 = &a1[v389];
          v391 = &a2[v389];
          v392 = sub_2408E57A4();
          v393 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v392 - 8) + 16);
          swift_bridgeObjectRetain();
          v393(v390, v391, v392);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v178 + 56))(a1, 0, 1, v177);
        }
        v394 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v395 = *(int *)(v394 + 20);
        v396 = &a1[v395];
        v397 = &a2[v395];
        if (v179(&a2[v395], 1, v177))
        {
          v398 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v396, v397, *(_QWORD *)(*(_QWORD *)(v398 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v396 = *(_DWORD *)v397;
          v525 = v397[2];
          v396[1] = v397[1];
          v396[2] = v525;
          v526 = *(int *)(v177 + 24);
          v1193 = (char *)v396 + v526;
          v527 = (char *)v397 + v526;
          v528 = sub_2408E57A4();
          v529 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v528 - 8) + 16);
          swift_bridgeObjectRetain();
          v529(v1193, v527, v528);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v396, 0, 1, v177);
        }
        v530 = *(int *)(v394 + 24);
        v531 = &a1[v530];
        v532 = &a2[v530];
        v533 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v533 - 8) + 16))(v531, v532, v533);
        v28 = v1223;
        goto LABEL_250;
      case 0x1Bu:
        v181 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v181;
        v182 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v182;
        *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
        v183 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v183;
        v184 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v1178 = &a1[v184];
        v1224 = v28;
        v185 = &a2[v184];
        v1238 = v29;
        v186 = a3;
        v187 = sub_2408E57A4();
        v188 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v187 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v189 = v185;
        v190 = v187;
        a3 = v186;
        v28 = v1224;
        v29 = v1238;
        v188(v1178, v189, v190);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x1Cu:
        v1225 = v28;
        v1239 = v29;
        v191 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v191;
        v192 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v192;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v1179 = type metadata accessor for TranscriptProtoSystemResponse(0);
        v193 = *(int *)(v1179 + 28);
        __dsta = &a1[v193];
        v194 = &a2[v193];
        v195 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v196 = *(_QWORD *)(v195 - 8);
        v197 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1207 = a3;
        if (v197(v194, 1, v195))
        {
          v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(__dsta, v194, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          v199 = (int *)v1179;
        }
        else
        {
          v399 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v399 - 8) + 48))(v194, 1, v399))
          {
            v607 = (char *)&loc_24059A4BC + 4 * word_240901E5E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(__dsta, v194, *(_QWORD *)(*(_QWORD *)(v400 - 8) + 64));
          v199 = (int *)v1179;
          v1007 = *(int *)(v195 + 20);
          v1008 = &__dsta[v1007];
          v1009 = &v194[v1007];
          v1010 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1010 - 8) + 16))(v1008, v1009, v1010);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v196 + 56))(__dsta, 0, 1, v195);
        }
        v1011 = v199[8];
        v1012 = &a1[v1011];
        v1013 = &a2[v1011];
        v1014 = type metadata accessor for TranscriptProtoResponseOutput(0);
        v1015 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v1014 - 8);
        if (v1015[6](v1013, 1, v1014))
        {
          v1016 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
          memcpy(v1012, v1013, *(_QWORD *)(*(_QWORD *)(v1016 - 8) + 64));
        }
        else
        {
          v1133 = v1015;
          __dsth = (int *)v1014;
          *v1012 = *v1013;
          *((_BYTE *)v1012 + 8) = *((_BYTE *)v1013 + 8);
          v1012[2] = v1013[2];
          v1017 = *(int *)(v1014 + 28);
          v1018 = (char *)v1012 + v1017;
          v1019 = (char *)v1013 + v1017;
          v1020 = type metadata accessor for TranscriptProtoDialogType(0);
          v1106 = *(_QWORD **)(v1020 - 8);
          v1021 = (unsigned int (*)(char *, uint64_t, int *))v1106[6];
          v1022 = (int *)v1020;
          swift_bridgeObjectRetain();
          v1023 = v1019;
          swift_bridgeObjectRetain();
          v1116 = v1021;
          if (v1021(v1019, 1, v1022))
          {
            v1024 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1018, v1019, *(_QWORD *)(*(_QWORD *)(v1024 - 8) + 64));
            v28 = v1225;
            v1025 = __dsth;
          }
          else
          {
            v1026 = type metadata accessor for TranscriptProtoDialogFormat(0);
            v1090 = v1012;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1026 - 8) + 48))(v1023, 1, v1026))
            {
              v1030 = (char *)&loc_24059F848 + 4 * byte_240901E74[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1027 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            v1028 = v1018;
            memcpy(v1018, v1023, *(_QWORD *)(*(_QWORD *)(v1027 - 8) + 64));
            v1029 = v1023;
            v28 = v1225;
            v1025 = __dsth;
            v1031 = v1022[5];
            v1032 = &v1028[v1031];
            v1033 = &v1029[v1031];
            v1034 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1034 - 8) + 16))(v1032, v1033, v1034);
            ((void (*)(char *, _QWORD, uint64_t, int *))v1106[7])(v1028, 0, 1, v1022);
            v1012 = v1090;
          }
          v1035 = v1025[8];
          v1036 = (char *)v1012 + v1035;
          v1037 = (char *)v1013 + v1035;
          if (v1116((char *)v1013 + v1035, 1, v1022))
          {
            v1038 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1036, v1037, *(_QWORD *)(*(_QWORD *)(v1038 - 8) + 64));
          }
          else
          {
            v1098 = v1022;
            v1039 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1039 - 8) + 48))(v1037, 1, v1039))
            {
              v1041 = (char *)&loc_24059FA44 + 4 * byte_240901E79[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1040 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1036, v1037, *(_QWORD *)(*(_QWORD *)(v1040 - 8) + 64));
            v1042 = v1098[5];
            v1043 = &v1036[v1042];
            v1044 = &v1037[v1042];
            v1045 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1045 - 8) + 16))(v1043, v1044, v1045);
            ((void (*)(char *, _QWORD, uint64_t, int *))v1106[7])(v1036, 0, 1, v1098);
            v1025 = __dsth;
          }
          v1046 = v1025[9];
          v1047 = (char *)v1012 + v1046;
          v1048 = (char *)v1013 + v1046;
          v1049 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1049 - 8) + 16))(v1047, v1048, v1049);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v1133 + 7))(v1012, 0, 1, v1025);
        }
        v1050 = v199[9];
        v1051 = &a1[v1050];
        v1052 = &a2[v1050];
        v1053 = type metadata accessor for TranscriptProtoStatementID(0);
        v1054 = *(_QWORD *)(v1053 - 8);
        v29 = v1239;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1054 + 48))(v1052, 1, v1053))
        {
          v1055 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1051, v1052, *(_QWORD *)(*(_QWORD *)(v1055 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1051 = *(_DWORD *)v1052;
          v1056 = v1052[2];
          v1051[1] = v1052[1];
          v1051[2] = v1056;
          v1057 = *(int *)(v1053 + 24);
          v1058 = (char *)v1051 + v1057;
          v1059 = (char *)v1052 + v1057;
          v1060 = sub_2408E57A4();
          v1061 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1060 - 8) + 16);
          swift_bridgeObjectRetain();
          v1062 = v1058;
          v1063 = v1060;
          v28 = v1225;
          v29 = v1239;
          v1061(v1062, v1059, v1063);
          v199 = (int *)v1179;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1054 + 56))(v1051, 0, 1, v1053);
        }
        a3 = v1207;
        v1064 = v199[10];
        v1065 = &a1[v1064];
        v1066 = &a2[v1064];
        v1067 = v1066[1];
        *v1065 = *v1066;
        v1065[1] = v1067;
        v1068 = v199[11];
        v1069 = &a1[v1068];
        v1070 = &a2[v1068];
        v1071 = sub_2408E57A4();
        v1072 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1071 - 8) + 16);
        swift_bridgeObjectRetain();
        v1072(v1069, v1070, v1071);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x1Du:
        v1208 = a3;
        v200 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v200;
        v201 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v201;
        v1180 = type metadata accessor for TranscriptProtoStatementResult(0);
        v202 = *(int *)(v1180 + 24);
        __dstb = &a1[v202];
        v203 = &a2[v202];
        v204 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        v205 = *(_QWORD **)(v204 - 8);
        v206 = (unsigned int (*)(char *, uint64_t, uint64_t))v205[6];
        swift_bridgeObjectRetain();
        v207 = v203;
        swift_bridgeObjectRetain();
        v1226 = v28;
        v1240 = v29;
        if (v206(v203, 1, v204))
        {
          v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
          memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
        }
        else
        {
          v1107 = (void (**)(char *, _QWORD, uint64_t, int *))v205;
          v401 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v402 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v401 - 8);
          v1118 = (int *)v204;
          if (v402[6](v203, 1, v401))
          {
            v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            v404 = __dstb;
            memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v403 - 8) + 64));
          }
          else
          {
            v1083 = v402;
            v608 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v404 = __dstb;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v608 - 8) + 48))(v203, 1, v608))
            {
              v654 = (char *)&loc_24059AAC4 + 4 * word_240901E48[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v609 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(__dstb, v203, *(_QWORD *)(*(_QWORD *)(v609 - 8) + 64));
            v847 = *(int *)(v401 + 20);
            v848 = &__dstb[v847];
            v849 = &v203[v847];
            v850 = sub_2408E57A4();
            v851 = v849;
            v207 = v203;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v850 - 8) + 16))(v848, v851, v850);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1083[7])(__dstb, 0, 1, v401);
          }
          v852 = *(int *)(v204 + 20);
          v853 = &v404[v852];
          v854 = &v207[v852];
          v855 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          v856 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v855 - 1);
          if (((unsigned int (**)(char *, uint64_t, int *))v856)[6](v854, 1, v855))
          {
            v857 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
            memcpy(v853, v854, *(_QWORD *)(*(_QWORD *)(v857 - 8) + 64));
          }
          else
          {
            v1097 = (void (**)(char *, _QWORD, uint64_t, int *))v856;
            v1105 = v207;
            *(_QWORD *)v853 = *(_QWORD *)v854;
            v858 = v855[5];
            v859 = &v853[v858];
            v860 = &v854[v858];
            v861 = type metadata accessor for TranscriptProtoResponseDialog(0);
            v1088 = *(_QWORD **)(v861 - 8);
            v862 = (unsigned int (*)(char *, uint64_t, uint64_t))v1088[6];
            swift_bridgeObjectRetain();
            if (v862(v860, 1, v861))
            {
              v863 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
              memcpy(v859, v860, *(_QWORD *)(*(_QWORD *)(v863 - 8) + 64));
            }
            else
            {
              v864 = *((_QWORD *)v860 + 1);
              *(_QWORD *)v859 = *(_QWORD *)v860;
              *((_QWORD *)v859 + 1) = v864;
              v865 = *((_QWORD *)v860 + 3);
              *((_QWORD *)v859 + 2) = *((_QWORD *)v860 + 2);
              *((_QWORD *)v859 + 3) = v865;
              v866 = *((_QWORD *)v860 + 5);
              *((_QWORD *)v859 + 4) = *((_QWORD *)v860 + 4);
              *((_QWORD *)v859 + 5) = v866;
              v867 = *((_QWORD *)v860 + 7);
              *((_QWORD *)v859 + 6) = *((_QWORD *)v860 + 6);
              *((_QWORD *)v859 + 7) = v867;
              v868 = *(int *)(v861 + 32);
              __srcb = &v860[v868];
              v1081 = &v859[v868];
              v869 = sub_2408E57A4();
              v870 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v869 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v870(v1081, __srcb, v869);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1088[7])(v859, 0, 1, v861);
            }
            v871 = v855[6];
            v872 = &v853[v871];
            v873 = &v854[v871];
            v874 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v875 = *(_QWORD *)(v874 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v875 + 48))(v873, 1, v874))
            {
              v876 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
              memcpy(v872, v873, *(_QWORD *)(*(_QWORD *)(v876 - 8) + 64));
            }
            else
            {
              v877 = *((_QWORD *)v873 + 1);
              *(_QWORD *)v872 = *(_QWORD *)v873;
              *((_QWORD *)v872 + 1) = v877;
              v878 = *(int *)(v874 + 24);
              v1082 = &v873[v878];
              v1089 = &v872[v878];
              v879 = sub_2408E57A4();
              v1074 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v879 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1074(v1089, v1082, v879);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v875 + 56))(v872, 0, 1, v874);
            }
            v880 = v855[7];
            v881 = &v853[v880];
            v882 = &v854[v880];
            v883 = *((_QWORD *)v882 + 1);
            *(_QWORD *)v881 = *(_QWORD *)v882;
            *((_QWORD *)v881 + 1) = v883;
            v884 = v855[8];
            v885 = &v853[v884];
            v886 = &v854[v884];
            v887 = *((_QWORD *)v886 + 1);
            *(_QWORD *)v885 = *(_QWORD *)v886;
            *((_QWORD *)v885 + 1) = v887;
            v853[v855[9]] = v854[v855[9]];
            v853[v855[10]] = v854[v855[10]];
            v888 = v855[11];
            v889 = &v853[v888];
            v890 = &v854[v888];
            v891 = sub_2408E57A4();
            v892 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v891 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v892(v889, v890, v891);
            v1097[7](v853, 0, 1, v855);
            v29 = v1240;
            v404 = __dstb;
            v207 = v1105;
          }
          v893 = v1118[6];
          v894 = &v404[v893];
          v895 = &v207[v893];
          v896 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v896 - 8) + 16))(v894, v895, v896);
          v1107[7](v404, 0, 1, v1118);
          v28 = v1226;
        }
        v897 = (int *)v1180;
        v898 = *(int *)(v1180 + 28);
        v899 = &a1[v898];
        v900 = &a2[v898];
        v901 = type metadata accessor for TranscriptProtoStatementID(0);
        v902 = *(_QWORD *)(v901 - 8);
        v903 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v902 + 48);
        if (v903(v900, 1, v901))
        {
          v904 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v899, v900, *(_QWORD *)(*(_QWORD *)(v904 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v899 = *(_DWORD *)v900;
          v905 = v900[2];
          v899[1] = v900[1];
          v899[2] = v905;
          v906 = *(int *)(v901 + 24);
          v907 = (char *)v899 + v906;
          __dstbd = (char *)v900 + v906;
          v908 = sub_2408E57A4();
          v909 = v902;
          v910 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v908 - 8) + 16);
          v897 = (int *)v1180;
          swift_bridgeObjectRetain();
          v911 = v907;
          v912 = v908;
          v28 = v1226;
          v29 = v1240;
          v910(v911, __dstbd, v912);
          v902 = v909;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v909 + 56))(v899, 0, 1, v901);
        }
        v913 = v897[8];
        v914 = &a1[v913];
        v915 = &a2[v913];
        if (v903(&a2[v913], 1, v901))
        {
          v916 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v914, v915, *(_QWORD *)(*(_QWORD *)(v916 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v914 = *(_DWORD *)v915;
          v917 = v915[2];
          v914[1] = v915[1];
          v914[2] = v917;
          v918 = *(int *)(v901 + 24);
          v919 = (char *)v914 + v918;
          __dstbe = (char *)v915 + v918;
          v920 = sub_2408E57A4();
          v921 = v902;
          v922 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v920 - 8) + 16);
          v897 = (int *)v1180;
          swift_bridgeObjectRetain();
          v923 = v919;
          v924 = v920;
          v28 = v1226;
          v29 = v1240;
          v922(v923, __dstbe, v924);
          v902 = v921;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v921 + 56))(v914, 0, 1, v901);
        }
        v925 = v897[9];
        v926 = &a1[v925];
        v927 = &a2[v925];
        if (v903(&a2[v925], 1, v901))
        {
          v928 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v926, v927, *(_QWORD *)(*(_QWORD *)(v928 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v926 = *(_DWORD *)v927;
          v929 = v927[2];
          v926[1] = v927[1];
          v926[2] = v929;
          v930 = *(int *)(v901 + 24);
          v931 = (char *)v926 + v930;
          __dstbf = (char *)v927 + v930;
          v932 = v28;
          v933 = sub_2408E57A4();
          v934 = v902;
          v935 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v933 - 8) + 16);
          v897 = (int *)v1180;
          swift_bridgeObjectRetain();
          v936 = v931;
          v29 = v1240;
          v937 = v933;
          v28 = v932;
          v935(v936, __dstbf, v937);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v934 + 56))(v926, 0, 1, v901);
        }
        a3 = v1208;
        v938 = v897[10];
        v939 = &a1[v938];
        v940 = &a2[v938];
        v941 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v941 - 8) + 16))(v939, v940, v941);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x1Eu:
        v1227 = v28;
        v1236 = v29;
        v1209 = a3;
        v209 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v209;
        v210 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v210;
        v211 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v212 = *(int *)(v211 + 24);
        v213 = &a1[v212];
        v214 = &a2[v212];
        v215 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v216 = *(_QWORD *)(v215 - 8);
        v217 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v216 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v217(v214, 1, v215))
          goto LABEL_47;
        goto LABEL_100;
      case 0x1Fu:
        v1227 = v28;
        v1236 = v29;
        v1209 = a3;
        v219 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v219;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v211 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v220 = *(int *)(v211 + 24);
        v213 = &a1[v220];
        v214 = &a2[v220];
        v215 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v216 = *(_QWORD *)(v215 - 8);
        v221 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v216 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v221(v214, 1, v215))
        {
LABEL_47:
          v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
        }
        else
        {
LABEL_100:
          v405 = v214[1];
          *v213 = *v214;
          v213[1] = v405;
          v213[2] = v214[2];
          v406 = *(int *)(v215 + 24);
          v1188 = (char *)v213 + v406;
          __dsto = (char *)v214 + v406;
          v407 = sub_2408E57A4();
          v408 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v407 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v408(v1188, __dsto, v407);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
        }
        a3 = v1209;
        v409 = *(int *)(v211 + 28);
        v410 = &a1[v409];
        v411 = &a2[v409];
        v412 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v410, v411, v412);
        v28 = v1227;
        goto LABEL_284;
      case 0x20u:
        v1236 = v29;
        v222 = type metadata accessor for TranscriptProtoRequestContent(0);
        v223 = *(_QWORD *)(v222 - 8);
        v1210 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v223 + 48))(a2, 1, v222))
        {
          v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
        }
        else
        {
          v413 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v413 - 8) + 48))(a2, 1, v413))
          {
            v610 = (char *)&loc_24059A5A8 + 4 * word_240901E40[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v414 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
          v978 = *(int *)(v222 + 20);
          v979 = &a1[v978];
          v980 = &a2[v978];
          v981 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v981 - 8) + 16))(v979, v980, v981);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v223 + 56))(a1, 0, 1, v222);
        }
        v982 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        v983 = v982[5];
        v984 = &a1[v983];
        v985 = &a2[v983];
        v986 = v985[1];
        *v984 = *v985;
        v984[1] = v986;
        v987 = v982[6];
        v988 = &a1[v987];
        v989 = &a2[v987];
        v990 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v991 = *(_QWORD *)(v990 - 8);
        v992 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v991 + 48);
        swift_bridgeObjectRetain();
        if (v992(v989, 1, v990))
        {
          v993 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v988, v989, *(_QWORD *)(*(_QWORD *)(v993 - 8) + 64));
        }
        else
        {
          v994 = v989[1];
          *v988 = *v989;
          v988[1] = v994;
          v988[2] = v989[2];
          v995 = *(int *)(v990 + 24);
          v1203 = (char *)v988 + v995;
          __dstbh = (char *)v989 + v995;
          v996 = sub_2408E57A4();
          v997 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v996 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v997(v1203, __dstbh, v996);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v991 + 56))(v988, 0, 1, v990);
        }
        a3 = v1210;
        v998 = v982[7];
        v999 = &a1[v998];
        v1000 = &a2[v998];
        v1001 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1001 - 8) + 16))(v999, v1000, v1001);
        goto LABEL_284;
      case 0x21u:
        v1236 = v29;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v1181 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v225 = *(int *)(v1181 + 20);
        v226 = &a1[v225];
        v227 = &a2[v225];
        v228 = type metadata accessor for TranscriptProtoStatementID(0);
        v229 = *(_QWORD *)(v228 - 8);
        v230 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v229 + 48);
        swift_bridgeObjectRetain();
        v1228 = v28;
        if (v230(v227, 1, v228))
        {
          v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v226 = *(_DWORD *)v227;
          v415 = v227[2];
          v226[1] = v227[1];
          v226[2] = v415;
          v416 = *(int *)(v228 + 24);
          v417 = (char *)v226 + v416;
          __dstp = (char *)v227 + v416;
          v418 = a3;
          v419 = sub_2408E57A4();
          v420 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v419 - 8) + 16);
          swift_bridgeObjectRetain();
          v421 = v419;
          a3 = v418;
          v420(v417, __dstp, v421);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
        }
        v422 = (int *)v1181;
        v423 = *(int *)(v1181 + 24);
        v424 = &a1[v423];
        v425 = &a2[v423];
        v426 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v427 = *(_QWORD *)(v426 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v427 + 48))(v425, 1, v426))
        {
          v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v424, v425, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
        }
        else
        {
          v534 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v534 - 8) + 48))(v425, 1, v534))
          {
            v640 = (char *)&loc_24059A81C + 4 * word_240901E2A[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v424, v425, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
          v843 = *(int *)(v426 + 20);
          v844 = &v424[v843];
          v845 = &v425[v843];
          v846 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v846 - 8) + 16))(v844, v845, v846);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v427 + 56))(v424, 0, 1, v426);
        }
        goto LABEL_242;
      case 0x22u:
        v232 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v232;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v233 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v1182 = &a1[v233];
        v234 = &a2[v233];
        v235 = a2;
        v236 = v29;
        v237 = sub_2408E57A4();
        v238 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v237 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v239 = v237;
        v29 = v236;
        a2 = v235;
        v238(v1182, v234, v239);
        swift_storeEnumTagMultiPayload();
        goto LABEL_286;
      case 0x23u:
        v1228 = v28;
        v240 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v241 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v240 - 8);
        v1236 = v29;
        if (v241[6](a2, 1, v240))
        {
          v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
        }
        else
        {
          __dste = v241;
          v1213 = a3;
          v429 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v429;
          v430 = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 3) = v430;
          a1[32] = a2[32];
          v431 = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = v431;
          v432 = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = v432;
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          a1[80] = a2[80];
          v433 = *((_QWORD *)a2 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = v433;
          v434 = *((_QWORD *)a2 + 14);
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          *((_QWORD *)a1 + 14) = v434;
          v1189 = (int *)v240;
          v435 = *(int *)(v240 + 68);
          __src = &a1[v435];
          v436 = (uint64_t *)&a2[v435];
          v437 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v1073 = *(_QWORD *)(v437 - 8);
          v1091 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v1073 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v1091(v436, 1, v437))
          {
            v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(__src, v436, *(_QWORD *)(*(_QWORD *)(v438 - 8) + 64));
          }
          else
          {
            v611 = *v436;
            if ((~*v436 & 0xF000000000000007) != 0)
              swift_retain();
            *__src = v611;
            v612 = *(int *)(v437 + 20);
            v613 = (char *)__src + v612;
            v614 = (char *)v436 + v612;
            v615 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v615 - 8) + 16))(v613, v614, v615);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1073 + 56))(__src, 0, 1, v437);
          }
          v616 = v1189[18];
          v617 = &a1[v616];
          v618 = &a2[v616];
          v619 = v618[1];
          *v617 = *v618;
          v617[1] = v619;
          v620 = v1189[19];
          v621 = &a1[v620];
          v622 = &a2[v620];
          v623 = type metadata accessor for ToolKitProtoAppDefinition(0);
          v624 = *(_QWORD **)(v623 - 8);
          v625 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v624[6];
          swift_bridgeObjectRetain();
          if (v625(v622, 1, v623))
          {
            v626 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
            memcpy(v621, v622, *(_QWORD *)(*(_QWORD *)(v626 - 8) + 64));
            v627 = v1189;
          }
          else
          {
            v1099 = v624;
            v642 = v622[1];
            *v621 = *v622;
            v621[1] = v642;
            v643 = v622[3];
            v621[2] = v622[2];
            v621[3] = v643;
            v644 = v622[5];
            v621[4] = v622[4];
            v621[5] = v644;
            v645 = v622[7];
            v621[6] = v622[6];
            v621[7] = v645;
            v646 = v622[9];
            v621[8] = v622[8];
            v621[9] = v646;
            *((_BYTE *)v621 + 80) = *((_BYTE *)v622 + 80);
            v647 = *(int *)(v623 + 40);
            v1092 = (_QWORD *)((char *)v621 + v647);
            v648 = (_QWORD *)((char *)v622 + v647);
            v649 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v1084 = *(_QWORD **)(v649 - 8);
            v1110 = (unsigned int (*)(_QWORD *, uint64_t, int *))v1084[6];
            v650 = (int *)v649;
            swift_bridgeObjectRetain();
            v651 = v648;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1110(v648, 1, v650))
            {
              v652 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(v1092, v648, *(_QWORD *)(*(_QWORD *)(v652 - 8) + 64));
              v627 = v1189;
              v653 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1099;
            }
            else
            {
              v655 = v648[1];
              v627 = v1189;
              if (v655 == 1)
              {
                *(_OWORD *)v1092 = *v651;
              }
              else
              {
                *v1092 = *(_QWORD *)v651;
                v1092[1] = v655;
                swift_bridgeObjectRetain();
              }
              v653 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1099;
              v693 = v650[5];
              v1126 = v650;
              v694 = (char *)v1092 + v693;
              v695 = (char *)v651 + v693;
              v696 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v696 - 8) + 16))(v694, v695, v696);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v1084[7])(v1092, 0, 1, v1126);
            }
            v697 = *(int *)(v623 + 44);
            v698 = (char *)v621 + v697;
            v699 = (char *)v622 + v697;
            v700 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v700 - 8) + 16))(v698, v699, v700);
            v653[7](v621, 0, 1, v623);
          }
          v701 = v627[20];
          v702 = &a1[v701];
          v703 = &a2[v701];
          v704 = v703[1];
          *v702 = *v703;
          v702[1] = v704;
          v705 = v627[21];
          v706 = &a1[v705];
          v707 = &a2[v705];
          v708 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          v709 = *(_QWORD *)(v708 - 8);
          v710 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v709 + 48);
          swift_bridgeObjectRetain();
          if (v710(v707, 1, v708))
          {
            v711 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v706, v707, *(_QWORD *)(*(_QWORD *)(v711 - 8) + 64));
          }
          else
          {
            v712 = v707[1];
            *v706 = *v707;
            v706[1] = v712;
            v713 = v707[3];
            v706[2] = v707[2];
            v706[3] = v713;
            v714 = *(int *)(v708 + 24);
            v1127 = (char *)v706 + v714;
            v715 = (char *)v707 + v714;
            v716 = sub_2408E57A4();
            v717 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v716 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v717(v1127, v715, v716);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v709 + 56))(v706, 0, 1, v708);
          }
          v718 = v1189;
          v719 = v1189[22];
          v720 = &a1[v719];
          v721 = &a2[v719];
          v722 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          v723 = *(_QWORD *)(v722 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v723 + 48))(v721, 1, v722))
          {
            v724 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
            memcpy(v720, v721, *(_QWORD *)(*(_QWORD *)(v724 - 8) + 64));
          }
          else
          {
            v725 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v726 = *(_QWORD *)(v725 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v726 + 48))(v721, 1, v725))
            {
              v727 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
              memcpy(v720, v721, *(_QWORD *)(*(_QWORD *)(v727 - 8) + 64));
            }
            else
            {
              v728 = swift_getEnumCaseMultiPayload();
              v729 = v721[1];
              *v720 = *v721;
              v720[1] = v729;
              if (v728 == 1)
              {
                *((_BYTE *)v720 + 16) = *((_BYTE *)v721 + 16);
                v730 = v721[4];
                v720[3] = v721[3];
                v720[4] = v730;
                v731 = v721[6];
                v720[5] = v721[5];
                v720[6] = v731;
                v732 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v1094 = (char *)v721 + v732;
                v1101 = (char *)v720 + v732;
                v733 = sub_2408E57A4();
                v1085 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v733 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1085(v1101, v1094, v733);
                v718 = v1189;
              }
              else
              {
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v726 + 56))(v720, 0, 1, v725);
            }
            v734 = *(int *)(v722 + 20);
            v735 = (char *)v720 + v734;
            v736 = (char *)v721 + v734;
            v737 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v737 - 8) + 16))(v735, v736, v737);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v723 + 56))(v720, 0, 1, v722);
          }
          v738 = v718[23];
          v739 = &a1[v738];
          v740 = &a2[v738];
          v741 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v742 = *(_QWORD **)(v741 - 8);
          v743 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v742[6];
          a3 = v1213;
          if (v743(v740, 1, v741))
          {
            v744 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v739, v740, *(_QWORD *)(*(_QWORD *)(v744 - 8) + 64));
          }
          else
          {
            v1113 = v743;
            v1128 = v742;
            v745 = (int *)v741;
            v746 = v740[1];
            *v739 = *v740;
            v739[1] = v746;
            v747 = v740[3];
            v739[2] = v740[2];
            v739[3] = v747;
            *((_WORD *)v739 + 16) = *((_WORD *)v740 + 16);
            v748 = v740[6];
            v739[5] = v740[5];
            v739[6] = v748;
            v749 = v740[8];
            v739[7] = v740[7];
            v739[8] = v749;
            v1095 = v745;
            v750 = v745[10];
            v1086 = (_QWORD *)((char *)v739 + v750);
            v751 = (_QWORD *)((char *)v740 + v750);
            v752 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1078 = *(_QWORD **)(v752 - 8);
            v1102 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1078[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1102(v751, 1, v752))
            {
              v753 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1086, v751, *(_QWORD *)(*(_QWORD *)(v753 - 8) + 64));
              v718 = v1189;
              a3 = v1213;
              v742 = v1128;
              v741 = (uint64_t)v1095;
            }
            else
            {
              v754 = v751[1];
              __srca = (char *)v751;
              if (v754 == 1)
              {
                v755 = *(_OWORD *)v751;
                v756 = v1086;
                *(_OWORD *)v1086 = v755;
              }
              else
              {
                v757 = *v751;
                v756 = v1086;
                *v1086 = v757;
                v1086[1] = v754;
                swift_bridgeObjectRetain();
              }
              v718 = v1189;
              a3 = v1213;
              v742 = v1128;
              v741 = (uint64_t)v1095;
              v758 = *(int *)(v752 + 20);
              v1103 = (char *)v756 + v758;
              v1129 = (void *)v752;
              v759 = &__srca[v758];
              v760 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v760 - 8) + 16))(v1103, v759, v760);
              ((void (*)(_QWORD *, _QWORD, uint64_t, void *))v1078[7])(v756, 0, 1, v1129);
            }
            v761 = *(int *)(v741 + 44);
            v762 = (char *)v739 + v761;
            v763 = (char *)v740 + v761;
            v764 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v764 - 8) + 16))(v762, v763, v764);
            ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v742[7])(v739, 0, 1, v741);
            v743 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1113;
          }
          v765 = v718[24];
          v766 = &a1[v765];
          v767 = &a2[v765];
          if (v743(&a2[v765], 1, v741))
          {
            v768 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v766, v767, *(_QWORD *)(*(_QWORD *)(v768 - 8) + 64));
          }
          else
          {
            v769 = v767[1];
            v1130 = v742;
            *v766 = *v767;
            v766[1] = v769;
            v770 = v767[3];
            v766[2] = v767[2];
            v766[3] = v770;
            *((_WORD *)v766 + 16) = *((_WORD *)v767 + 16);
            v771 = v767[6];
            v766[5] = v767[5];
            v766[6] = v771;
            v772 = v767[8];
            v766[7] = v767[7];
            v766[8] = v772;
            v773 = *(int *)(v741 + 40);
            v1096 = (_QWORD *)((char *)v766 + v773);
            v774 = (_QWORD *)((char *)v767 + v773);
            v775 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1087 = *(_QWORD **)(v775 - 8);
            v1104 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1087[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1104(v774, 1, v775))
            {
              v776 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1096, v774, *(_QWORD *)(*(_QWORD *)(v776 - 8) + 64));
              v718 = v1189;
              a3 = v1213;
              v777 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1130;
            }
            else
            {
              v778 = v774[1];
              v777 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1130;
              v1079 = (char *)v774;
              if (v778 == 1)
              {
                v779 = *(_OWORD *)v774;
                v780 = v1096;
                *(_OWORD *)v1096 = v779;
              }
              else
              {
                v781 = *v774;
                v780 = v1096;
                *v1096 = v781;
                v1096[1] = v778;
                swift_bridgeObjectRetain();
              }
              v718 = v1189;
              a3 = v1213;
              v782 = *(int *)(v775 + 20);
              v1114 = (char *)v780 + v782;
              v1199 = v775;
              v783 = &v1079[v782];
              v784 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v784 - 8) + 16))(v1114, v783, v784);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1087[7])(v780, 0, 1, v1199);
            }
            v785 = *(int *)(v741 + 44);
            v786 = (char *)v766 + v785;
            v787 = (char *)v767 + v785;
            v788 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v788 - 8) + 16))(v786, v787, v788);
            v777[7](v766, 0, 1, v741);
          }
          v789 = v718[25];
          v790 = &a1[v789];
          v791 = &a2[v789];
          v792 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v792 - 8) + 16))(v790, v791, v792);
          (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))__dste + 7))(a1, 0, 1, v718);
        }
        v422 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v793 = v422[5];
        v794 = &a1[v793];
        v795 = &a2[v793];
        v479 = type metadata accessor for TranscriptProtoStatementID(0);
        v480 = *(_QWORD *)(v479 - 8);
        v796 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v480 + 48);
        if (v796(v795, 1, v479))
        {
          v797 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v794, v795, *(_QWORD *)(*(_QWORD *)(v797 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v794 = *(_DWORD *)v795;
          v1200 = v480;
          v798 = v795[2];
          v794[1] = v795[1];
          v794[2] = v798;
          v799 = *(int *)(v479 + 24);
          v1131 = (char *)v795 + v799;
          __dstba = (char *)v794 + v799;
          v800 = a3;
          v801 = sub_2408E57A4();
          v802 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v801 - 8) + 16);
          v480 = v1200;
          swift_bridgeObjectRetain();
          v803 = v801;
          a3 = v800;
          v802(__dstba, v1131, v803);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1200 + 56))(v794, 0, 1, v479);
        }
        v804 = v422[6];
        v578 = &a1[v804];
        v579 = &a2[v804];
        if (v796(&a2[v804], 1, v479))
          goto LABEL_240;
        goto LABEL_241;
      case 0x24u:
        v1229 = v28;
        v1236 = v29;
        v243 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v243;
        a1[16] = a2[16];
        v244 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v244;
        v245 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v246 = v245[7];
        v247 = &a1[v246];
        v248 = &a2[v246];
        v249 = type metadata accessor for TranscriptProtoStatementID(0);
        v250 = *(_QWORD *)(v249 - 8);
        v251 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v250 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v251(v248, 1, v249))
        {
          v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v247, v248, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v247 = *(_DWORD *)v248;
          v1190 = v251;
          v439 = v248[2];
          v247[1] = v248[1];
          v247[2] = v439;
          v440 = *(int *)(v249 + 24);
          v1119 = (char *)v248 + v440;
          __dstq = (char *)v247 + v440;
          v441 = a3;
          v442 = sub_2408E57A4();
          v443 = v245;
          v444 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 16);
          v251 = v1190;
          swift_bridgeObjectRetain();
          v445 = v442;
          a3 = v441;
          v444(__dstq, v1119, v445);
          v245 = v443;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v247, 0, 1, v249);
        }
        v446 = v245[8];
        v447 = &a1[v446];
        v448 = &a2[v446];
        v28 = v1229;
        if (v251(&a2[v446], 1, v249))
        {
          v449 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v447, v448, *(_QWORD *)(*(_QWORD *)(v449 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v447 = *(_DWORD *)v448;
          v536 = v448[2];
          v1194 = v250;
          v447[1] = v448[1];
          v447[2] = v536;
          v537 = *(int *)(v249 + 24);
          v538 = (char *)v447 + v537;
          __dstt = (char *)v448 + v537;
          v539 = a3;
          v540 = sub_2408E57A4();
          v541 = v245;
          v542 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v540 - 8) + 16);
          swift_bridgeObjectRetain();
          v543 = v538;
          v28 = v1229;
          v544 = v540;
          a3 = v539;
          v542(v543, __dstt, v544);
          v245 = v541;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1194 + 56))(v447, 0, 1, v249);
        }
        v545 = v245[9];
        v546 = &a1[v545];
        v547 = &a2[v545];
        v548 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v548 - 8) + 16))(v546, v547, v548);
        goto LABEL_284;
      case 0x25u:
        v1230 = v28;
        v1236 = v29;
        v253 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v253;
        a1[16] = a2[16];
        v254 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v255 = v254[6];
        v256 = &a1[v255];
        v257 = &a2[v255];
        v258 = type metadata accessor for TranscriptProtoStatementID(0);
        v259 = *(_QWORD *)(v258 - 8);
        v260 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v259 + 48);
        swift_bridgeObjectRetain();
        if (v260(v257, 1, v258))
        {
          v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v256 = *(_DWORD *)v257;
          v450 = v257[2];
          v256[1] = v257[1];
          v256[2] = v450;
          v451 = *(int *)(v258 + 24);
          v1191 = (char *)v256 + v451;
          __dstr = (char *)v257 + v451;
          v1214 = a3;
          v452 = sub_2408E57A4();
          v453 = v259;
          v454 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v452 - 8) + 16);
          swift_bridgeObjectRetain();
          v455 = v452;
          a3 = v1214;
          v454(v1191, __dstr, v455);
          v259 = v453;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v453 + 56))(v256, 0, 1, v258);
        }
        v456 = v254[7];
        v457 = &a1[v456];
        v458 = &a2[v456];
        if (v260(&a2[v456], 1, v258))
        {
          v459 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v457, v458, *(_QWORD *)(*(_QWORD *)(v459 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v457 = *(_DWORD *)v458;
          v549 = v458[2];
          v457[1] = v458[1];
          v457[2] = v549;
          v550 = *(int *)(v258 + 24);
          v1195 = (char *)v457 + v550;
          __dstu = (char *)v458 + v550;
          v551 = a3;
          v552 = sub_2408E57A4();
          v553 = v259;
          v554 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v552 - 8) + 16);
          swift_bridgeObjectRetain();
          v555 = v552;
          a3 = v551;
          v554(v1195, __dstu, v555);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v553 + 56))(v457, 0, 1, v258);
        }
        v556 = v254[8];
        v557 = &a1[v556];
        v558 = &a2[v556];
        v559 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v557, v558, v559);
        v28 = v1230;
        goto LABEL_284;
      case 0x26u:
        v262 = type metadata accessor for ToolKitProtoTypedValue(0);
        v263 = *(_QWORD *)(v262 - 8);
        v1228 = v28;
        v1236 = v29;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v263 + 48))(a2, 1, v262))
        {
          v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
        }
        else
        {
          v460 = *(_QWORD *)a2;
          if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)a1 = v460;
          v461 = *(int *)(v262 + 20);
          v462 = &a1[v461];
          v463 = &a2[v461];
          v464 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v462, v463, v464);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v263 + 56))(a1, 0, 1, v262);
        }
        v422 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v465 = v422[5];
        v466 = &a1[v465];
        v467 = (uint64_t *)&a2[v465];
        v468 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v469 = *(_QWORD *)(v468 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v469 + 48))(v467, 1, v468))
        {
          v470 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v466, v467, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
        }
        else
        {
          v560 = *v467;
          if ((~*v467 & 0xF000000000000007) != 0)
            swift_retain();
          *v466 = v560;
          v561 = *(int *)(v468 + 20);
          v562 = (char *)v466 + v561;
          v563 = (char *)v467 + v561;
          v564 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v564 - 8) + 16))(v562, v563, v564);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v469 + 56))(v466, 0, 1, v468);
        }
        v565 = v422[6];
        v566 = &a1[v565];
        v567 = &a2[v565];
        v568 = type metadata accessor for TranscriptProtoStatementID(0);
        v569 = *(_QWORD *)(v568 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v569 + 48))(v567, 1, v568))
        {
          v570 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v566, v567, *(_QWORD *)(*(_QWORD *)(v570 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v566 = *(_DWORD *)v567;
          v582 = v567[2];
          v566[1] = v567[1];
          v566[2] = v582;
          v583 = *(int *)(v568 + 24);
          v1197 = (char *)v566 + v583;
          __dstw = (char *)v567 + v583;
          v584 = a3;
          v585 = sub_2408E57A4();
          v586 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v585 - 8) + 16);
          swift_bridgeObjectRetain();
          v587 = v585;
          a3 = v584;
          v586(v1197, __dstw, v587);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v569 + 56))(v566, 0, 1, v568);
        }
        goto LABEL_242;
      case 0x27u:
        v265 = type metadata accessor for ToolKitProtoTypedValue(0);
        v266 = *(_QWORD *)(v265 - 8);
        v1228 = v28;
        v1236 = v29;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v266 + 48))(a2, 1, v265))
        {
          v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
        }
        else
        {
          v471 = *(_QWORD *)a2;
          if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)a1 = v471;
          v472 = *(int *)(v265 + 20);
          v473 = &a1[v472];
          v474 = &a2[v472];
          v475 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v475 - 8) + 16))(v473, v474, v475);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v266 + 56))(a1, 0, 1, v265);
        }
        v422 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v476 = v422[5];
        v477 = &a1[v476];
        v478 = &a2[v476];
        v479 = type metadata accessor for TranscriptProtoStatementID(0);
        v480 = *(_QWORD *)(v479 - 8);
        v481 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v480 + 48);
        if (v481(v478, 1, v479))
        {
          v482 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v477, v478, *(_QWORD *)(*(_QWORD *)(v482 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v477 = *(_DWORD *)v478;
          v1196 = v480;
          v571 = v478[2];
          v477[1] = v478[1];
          v477[2] = v571;
          v572 = *(int *)(v479 + 24);
          v1122 = (char *)v478 + v572;
          __dstv = (char *)v477 + v572;
          v573 = a3;
          v574 = sub_2408E57A4();
          v575 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v574 - 8) + 16);
          v480 = v1196;
          swift_bridgeObjectRetain();
          v576 = v574;
          a3 = v573;
          v575(__dstv, v1122, v576);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1196 + 56))(v477, 0, 1, v479);
        }
        v577 = v422[6];
        v578 = &a1[v577];
        v579 = &a2[v577];
        if (v481(&a2[v577], 1, v479))
        {
LABEL_240:
          v805 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v578, v579, *(_QWORD *)(*(_QWORD *)(v805 - 8) + 64));
        }
        else
        {
LABEL_241:
          *(_DWORD *)v578 = *(_DWORD *)v579;
          v1201 = v480;
          v806 = v579[2];
          v578[1] = v579[1];
          v578[2] = v806;
          v807 = *(int *)(v479 + 24);
          __dstbb = (char *)v578 + v807;
          v808 = (char *)v579 + v807;
          v809 = a3;
          v810 = sub_2408E57A4();
          v811 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v810 - 8) + 16);
          swift_bridgeObjectRetain();
          v812 = v810;
          a3 = v809;
          v811(__dstbb, v808, v812);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1201 + 56))(v578, 0, 1, v479);
        }
LABEL_242:
        v813 = v422[7];
        v814 = &a1[v813];
        v815 = &a2[v813];
        v816 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v816 - 8) + 16))(v814, v815, v816);
        v28 = v1228;
        goto LABEL_284;
      case 0x28u:
        v1231 = v28;
        v1236 = v29;
        v1211 = a3;
        v268 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v268;
        v269 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v269;
        DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v270 = *(int *)(DecorationResult + 32);
        v271 = &a1[v270];
        v272 = &a2[v270];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        __dstc = *(_QWORD **)(DecorationToolRetrievalResponse - 8);
        v274 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstc[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v274(v272, 1, DecorationToolRetrievalResponse))
        {
          v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
          memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
        }
        else
        {
          v483 = v272[1];
          *v271 = *v272;
          v271[1] = v483;
          v484 = v272[3];
          v271[2] = v272[2];
          v271[3] = v484;
          *((_DWORD *)v271 + 8) = *((_DWORD *)v272 + 8);
          v485 = v272[6];
          v271[5] = v272[5];
          v271[6] = v485;
          v486 = *(int *)(DecorationToolRetrievalResponse + 36);
          v1108 = (char *)v272 + v486;
          v1120 = (char *)v271 + v486;
          v487 = sub_2408E57A4();
          v488 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v488(v1120, v1108, v487);
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstc[7])(v271, 0, 1, DecorationToolRetrievalResponse);
        }
        a3 = v1211;
        v489 = *(int *)(DecorationResult + 36);
        v490 = &a1[v489];
        v491 = &a2[v489];
        v492 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(v490, v491, v492);
        v28 = v1231;
LABEL_284:
        swift_storeEnumTagMultiPayload();
        goto LABEL_285;
      case 0x2Au:
        v1236 = v29;
        v1206 = a3;
        v276 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v276;
        DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v277 = DecorationPrePlannerResult[5];
        v278 = &a1[v277];
        v279 = &a2[v277];
        v280 = type metadata accessor for TranscriptProtoStatementID(0);
        v281 = *(_QWORD *)(v280 - 8);
        v282 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v281 + 48);
        swift_bridgeObjectRetain();
        if (v282(v279, 1, v280))
        {
          v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v278 = *(_DWORD *)v279;
          v493 = v279[2];
          v278[1] = v279[1];
          v278[2] = v493;
          v494 = *(int *)(v280 + 24);
          v1233 = v28;
          v495 = (char *)v278 + v494;
          v496 = (char *)v279 + v494;
          v497 = sub_2408E57A4();
          v498 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v497 - 8) + 16);
          swift_bridgeObjectRetain();
          v499 = v495;
          v28 = v1233;
          v498(v499, v496, v497);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
        }
        v500 = DecorationPrePlannerResult[6];
        v501 = &a1[v500];
        v502 = &a2[v500];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        v504 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v504 + 48))(v502, 1, DecorationPrePlannerResultPayload))
        {
          v505 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
          memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v505 - 8) + 64));
        }
        else
        {
          DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                     - 8)
                                                                         + 48))(v502, 1, DecorationPrePlannerPayloadEnum))
          {
            v641 = (char *)&loc_24059A8BC + 4 * word_240901E1E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v581 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
          memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v581 - 8) + 64));
          v817 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v818 = &v501[v817];
          v819 = &v502[v817];
          v820 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v820 - 8) + 16))(v818, v819, v820);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v504 + 56))(v501, 0, 1, DecorationPrePlannerResultPayload);
        }
        v821 = DecorationPrePlannerResult[7];
        v822 = &a1[v821];
        v823 = &a2[v821];
        v824 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v824 - 8) + 16))(v822, v823, v824);
        goto LABEL_250;
      default:
        memcpy(a1, a2, *(_QWORD *)(v29 + 64));
        goto LABEL_286;
    }
  }
  v1002 = *(int *)(a3 + 20);
  v1003 = &a1[v1002];
  v1004 = &a2[v1002];
  v1005 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1005 - 8) + 16))(v1003, v1004, v1005);
  return a1;
}

